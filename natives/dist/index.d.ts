import { Vector3, Vector2, Entity, Ped, Player, Vehicle, Object, Blip, Camera } from '@risinglife/fivem-shared';
export declare namespace builtin {
    /**
     * Pauses execution of the current script, please note this behavior is only seen when called from one of the game script files(ysc). In order to wait an asi script use "static void WAIT(DWORD time);" found in main.h
     *
     * Hash: 0x4EDE34FBADD967A6 | Since: 323
     */
    function wait(ms: number): void;
    /**
     * Examples:
     * `g_384A = SYSTEM::START_NEW_SCRIPT("cellphone_flashhand", 1424);`
     * `l_10D = SYSTEM::START_NEW_SCRIPT("taxiService", 1828);`
     * `SYSTEM::START_NEW_SCRIPT("AM_MP_YACHT", 5000);`
     * `SYSTEM::START_NEW_SCRIPT("emergencycall", 512);`
     * `SYSTEM::START_NEW_SCRIPT("emergencycall", 512);`
     * `SYSTEM::START_NEW_SCRIPT("FM_maintain_cloud_header_data", 1424);`
     * `SYSTEM::START_NEW_SCRIPT("FM_Mission_Controller", 31000);`
     * `SYSTEM::START_NEW_SCRIPT("tennis_family", 3650);`
     * `SYSTEM::START_NEW_SCRIPT("Celebrations", 3650);`
     *
     * Decompiled examples of usage when starting a script:
     *
     * `SCRIPT::REQUEST_SCRIPT(a_0);`
     * `if (SCRIPT::HAS_SCRIPT_LOADED(a_0)) {`
     * `SYSTEM::START_NEW_SCRIPT(a_0, v_3);`
     * `SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(a_0);`
     * return 1;
     * }
     *
     * or:
     *
     * v_2 = "MrsPhilips2";
     * `SCRIPT::REQUEST_SCRIPT(v_2);`
     * `while (!SCRIPT::HAS_SCRIPT_LOADED(v_2)) {`
     * `SCRIPT::REQUEST_SCRIPT(v_2);`
     * `SYSTEM::WAIT(0);`
     * }
     * sub_8792(36);
     * `SYSTEM::START_NEW_SCRIPT(v_2, 17000);`
     * `SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(v_2);`
     *
     * Hash: 0xE81651AD79516E48 | Since: 323
     */
    function startNewScript(scriptName: string, stackSize: number): number;
    /**
     * return : script thread id, 0 if failed
     * Pass pointer to struct of args in p1, size of struct goes into p2
     *
     * Hash: 0xB8BA7F44DF1575E1 | Since: 323
     */
    function startNewScriptWithArgs(scriptName: string, argCount: number, stackSize: number): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0xEB1C67C3A5333A92 | Since: 323
     */
    function startNewScriptWithNameHash(scriptHash: number | string, stackSize: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xC4BB298BD441BE78 | Since: 323
     */
    function startNewScriptWithNameHashAndArgs(scriptHash: number | string, argCount: number, stackSize: number): [number, any];
    /**
     * Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).
     *
     * Hash: 0x83666F9FB8FEBD4B | Since: 323
     */
    function timera(): number;
    /**
     * No comment provided
     *
     * Hash: 0xC9D9444186B5A374 | Since: 323
     */
    function timerb(): number;
    /**
     * No comment provided
     *
     * Hash: 0xC1B1E9A034A63A62 | Since: 323
     */
    function settimera(value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5AE11BC36633DE4E | Since: 323
     */
    function settimerb(value: number): void;
    /**
     * Gets the current frame time.
     *
     * Hash: 0x0000000050597EE2 | Since: 323
     */
    function timestep(): number;
    /**
     * No comment provided
     *
     * Hash: 0x0BADBFA3B172435F | Since: 323
     */
    function sin(value: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xD0FFB162F40A139C | Since: 323
     */
    function cos(value: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x71D93B57D07F9804 | Since: 323
     */
    function sqrt(value: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xE3621CC40F31FE2E | Since: 323
     */
    function pow(base: number, exponent: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xE816E655DE37FE20 | Since: 1493
     */
    function log10(value: number): number;
    /**
     * Calculates the magnitude of a vector.
     *
     * Hash: 0x652D2EEEF1D3E62C | Since: 323
     */
    function vmag(pos: Vector3): number;
    /**
     * Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)
     *
     * Hash: 0xA8CEACB4F35AE058 | Since: 323
     */
    function vmag2(pos: Vector3): number;
    /**
     * Calculates distance between vectors.
     *
     * Hash: 0x2A488C176D52CCA5 | Since: 323
     */
    function vdist(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
    /**
     * Calculates distance between vectors but does not perform Sqrt operations. (Its way faster)
     *
     * Hash: 0xB7A628320EFF8E47 | Since: 323
     */
    function vdist2(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xEDD95A39E5544DE8 | Since: 323
     */
    function shiftLeft(value: number, bitShift: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x97EF1E5BCE9DC075 | Since: 323
     */
    function shiftRight(value: number, bitShift: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xF34EE736CF047844 | Since: 323
     */
    function floor(value: number): number;
    /**
     * I'm guessing this rounds a float value up to the next whole number, and FLOOR rounds it down
     *
     * Hash: 0x11E019C8F43ACC8A | Since: 323
     */
    function ceil(value: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xF2DB717A73826179 | Since: 323
     */
    function round(value: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xBBDA792448DB5A89 | Since: 323
     */
    function toFloat(value: number): number;
    /**
     * THREAD_PRIO_HIGHEST = 0
     * THREAD_PRIO_NORMAL = 1
     * THREAD_PRIO_LOWEST = 2
     * THREAD_PRIO_MANUAL_UPDATE = 100
     *
     * Hash: 0x42B65DEEF2EDF2A1 | Since: 877
     */
    function setThisThreadPriority(priority: number): void;
}
export declare namespace app {
    /**
     * No comment provided
     *
     * Hash: 0x846AA8E7D55EE5B6 | Since: 323
     */
    function dataValid(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD3A58A12C77D9D4B | Since: 323
     */
    function getInt(property: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x1514FB24C02C2322 | Since: 323
     */
    function getFloat(property: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x749B023950D2311C | Since: 323
     */
    function getString(property: string): string;
    /**
     * No comment provided
     *
     * Hash: 0x607E8E3D3E4F9611 | Since: 323
     */
    function setInt(property: string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x25D7687C68E0DAA4 | Since: 323
     */
    function setFloat(property: string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3FF2FCEC4B7721B4 | Since: 323
     */
    function setString(property: string, value: string): void;
    /**
     * Called in the gamescripts like:
     * `APP::APP_SET_APP("car");`
     * `APP::APP_SET_APP("dog");`
     *
     * Hash: 0xCFD0406ADAF90D2B | Since: 323
     */
    function setApp(appName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x262AB456A3D21F93 | Since: 323
     */
    function setBlock(blockName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5FE1DF3342DB7DBA | Since: 323
     */
    function clearBlock(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE41C65E07A5F05FC | Since: 323
     */
    function closeApp(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE8E3FCF72EAC0EF8 | Since: 323
     */
    function closeBlock(): void;
    /**
     * No comment provided
     *
     * Hash: 0x71EEE69745088DA0 | Since: 323
     */
    function hasLinkedSocialClubAccount(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCA52279A7271517F | Since: 323
     */
    function hasSyncedData(appName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x95C5D356CDA6E85F | Since: 323
     */
    function saveData(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC9853A2BE3DED1A6 | Since: 323
     */
    function getDeletedFileStatus(): number;
    /**
     * No comment provided
     *
     * Hash: 0x44151AEA95C8A003 | Since: 323
     */
    function deleteAppData(appName: string): boolean;
}
export declare namespace audio {
    /**
     * All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/RFb4GTny
     *
     * `AUDIO::PLAY_PED_RINGTONE("Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);`
     * `AUDIO::PLAY_PED_RINGTONE("Dial_and_Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);`
     *
     *
     * Hash: 0xF9E56683CA8E11A5 | Since: 323
     */
    function playPedRingtone(ringtoneName: string, ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x1E8E5E20937E3137 | Since: 323
     */
    function isPedRingtonePlaying(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6C5AE23EFA885092 | Since: 323
     */
    function stopPedRingtone(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x7497D2CE2C30D24C | Since: 323
     */
    function isMobilePhoneCallOngoing(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC8B1B2425604CDD0 | Since: 323
     */
    function isMobileInterferenceActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDD3AA743AB7D4D75 | Since: 3095
     */
    function getCurrentTvShowPlayTime(): number;
    /**
     * No comment provided
     *
     * Hash: 0xD2C91A0B572AAE56 | Since: 323
     */
    function createNewScriptedConversation(): void;
    /**
     * NOTE: ones that are -1, 0 - 35 are determined by a function where it gets a TextLabel from a global then runs,
     * GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME and depending on what the result is it goes in check order of 0 - 9 then A - Z then z (lowercase). So it will then return 0 - 35 or -1 if it's 'z'. The func to handle that ^^ is func_67 in dialog_handler.c atleast in TU27 Xbox360 scripts.
     *
     * p0 is -1, 0 - 35
     * p1 is a char or string (whatever you wanna call it)
     * p2 is Global 10597 + i * 6. 'i' is a while(i < 70) loop
     * p3 is again -1, 0 - 35
     * p4 is again -1, 0 - 35
     * p5 is either 0 or 1 (bool ?)
     * p6 is either 0 or 1 (The func to determine this is bool)
     * p7 is either 0 or 1 (The func to determine this is bool)
     * p8 is either 0 or 1 (The func to determine this is bool)
     * p9 is 0 - 3 (Determined by func_60 in dialogue_handler.c)
     * p10 is either 0 or 1 (The func to determine this is bool)
     * p11 is either 0 or 1 (The func to determine this is bool)
     * p12 is unknown as in TU27 X360 scripts it only goes to p11.
     *
     * Hash: 0xC5EF963405593646 | Since: 323
     */
    function addLineToConversation(index: number): void;
    /**
     * 4 calls in the b617d scripts. The only one with p0 and p2 in clear text:
     *
     * `AUDIO::ADD_PED_TO_CONVERSATION(5, l_AF, "DINAPOLI");`
     *
     * =================================================
     * One of the 2 calls in dialogue_handler.c p0 is in a while-loop, and so is determined to also possibly be 0 - 15.
     *
     * Hash: 0x95D9F4BC443956E7 | Since: 323
     */
    function addPedToConversation(index: number, ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x33E3C6C6F2F0B506 | Since: 323
     */
    function setPositionForNullConvPed(): void;
    /**
     * No comment provided
     *
     * Hash: 0x892B6AB8F33606F5 | Since: 323
     */
    function setEntityForNullConvPed(entity: number | Entity): void;
    /**
     * This native controls where the game plays audio from. By default the microphone is positioned on the player.
     * When p0 is true the game will play audio from the 3 positions inputted.
     * It is recommended to set all 3 positions to the same value as mixing different positions doesn't seem to work well.
     * The scripts mostly use it with only one position such as in fbi3.c:
     * `AUDIO::SET_MICROPHONE_POSITION(true, ENTITY::GET_ENTITY_COORDS(iLocal_3091, true), ENTITY::GET_ENTITY_COORDS(iLocal_3091, true), ENTITY::GET_ENTITY_COORDS(iLocal_3091, true));`
     *
     * Hash: 0xB6AE90EDDE95C762 | Since: 323
     */
    function setMicrophonePosition(toggle: boolean, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0B568201DD99F0EB | Since: 323
     */
    function setConversationControlledByAnim(): void;
    /**
     * No comment provided
     *
     * Hash: 0x61631F5DF50D1C34 | Since: 323
     */
    function setConversationPlaceholder(): void;
    /**
     * No comment provided
     *
     * Hash: 0x252E5F915EABB675 | Since: 323
     */
    function startScriptPhoneConversation(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6004BCB0E226AAEA | Since: 323
     */
    function preloadScriptPhoneConversation(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B17C62C9635D2DC | Since: 323
     */
    function startScriptConversation(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3B3CAD6166916D87 | Since: 323
     */
    function preloadScriptConversation(): void;
    /**
     * No comment provided
     *
     * Hash: 0x23641AFE870AF385 | Since: 323
     */
    function startPreloadedConversation(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE73364DB90778FFA | Since: 323
     */
    function getIsPreloadedConversationReady(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x16754C556D2EDE3D | Since: 323
     */
    function isScriptedConversationOngoing(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDF0D54BE7A776737 | Since: 323
     */
    function isScriptedConversationLoaded(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x480357EE890C295A | Since: 323
     */
    function getCurrentScriptedConversationLine(): number;
    /**
     * No comment provided
     *
     * Hash: 0x8530AD776CD72B12 | Since: 323
     */
    function pauseScriptedConversation(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9AEB285D1818C9AC | Since: 323
     */
    function restartScriptedConversation(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD79DEEFB53455EBA | Since: 323
     */
    function stopScriptedConversation(): number;
    /**
     * No comment provided
     *
     * Hash: 0x9663FE6B7A61EB00 | Since: 323
     */
    function skipToNextScriptedConversationLine(): void;
    /**
     * `Example from carsteal3.c: AUDIO::INTERRUPT_CONVERSATION(PLAYER::PLAYER_PED_ID(), "CST4_CFAA", "FRANKLIN");`
     * Voicelines can be found in GTAV\x64\audio\sfx in files starting with "SS_" which seems to mean scripted speech.
     *
     * Hash: 0xA018A12E5C5C2FA6 | Since: 323
     */
    function interruptConversation(ped: number | Ped, voiceline: string, speaker: string): void;
    /**
     * One call found in the b617d scripts:
     *
     * `AUDIO::INTERRUPT_CONVERSATION_AND_PAUSE(NETWORK::NET_TO_PED(l_3989._f26F[0\/\*1\*\/]), "CONV_INTERRUPT_QUIT_IT", "LESTER");`
     *
     * Hash: 0x8A694D7A68F8DC38 | Since: 323
     */
    function interruptConversationAndPause(ped: number | Ped, speaker: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xAA19F5572C38B564 | Since: 323
     */
    function getVariationChosenForScriptedLine(): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0xB542DE8C3D1CB210 | Since: 323
     */
    function setNoDuckingForConversation(): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0xC6ED9D5092438D91 | Since: 323
     */
    function registerScriptWith(): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0xA8638BE228D4751A | Since: 323
     */
    function unregisterScriptWith(): void;
    /**
     * All occurrences and usages found in b617d: https://pastebin.com/NzZZ2Tmm
     * Full list of mission audio bank names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/missionAudioBankNames.json
     * p2 is always -1
     *
     * Hash: 0x7345BDD95E62E0F2 | Since: 323
     */
    function requestMissionBank(audioBank: string): boolean;
    /**
     * All occurrences and usages found in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/XZ1tmGEz
     * Full list of ambient audio bank names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientAudioBankNames.json
     * p2 is always -1
     *
     * Hash: 0xFE02FFBED8CA9D99 | Since: 323
     */
    function requestAmbientBank(audioBank: string): boolean;
    /**
     * All occurrences and usages found in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/AkmDAVn6
     * Full list of script audio bank names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scriptAudioBankNames.json
     * p2 is always -1
     *
     * Hash: 0x2F844A8B08D76685 | Since: 323
     */
    function requestScriptBank(audioBank: string): boolean;
    /**
     * p2 is always -1
     *
     * Hash: 0x40763EA7B9B783E7 | Since: 573
     */
    function hintMissionBank(audioBank: string): boolean;
    /**
     * p2 is always -1
     *
     * Hash: 0x8F8C0E370AE62F5C | Since: 323
     */
    function hintAmbientBank(audioBank: string): boolean;
    /**
     * p2 is always -1
     *
     * Hash: 0xFB380A29641EC31A | Since: 323
     */
    function hintScriptBank(audioBank: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0EC92A1BF0857187 | Since: 323
     */
    function releaseMissionBank(): void;
    /**
     * No comment provided
     *
     * Hash: 0x65475A218FFAA93D | Since: 323
     */
    function releaseAmbientBank(): void;
    /**
     * Full list of script audio bank names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scriptAudioBankNames.json
     *
     * Hash: 0x77ED170667F50170 | Since: 323
     */
    function releaseNamedScriptBank(audioBank: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x7A2D8AD0A9EB9C3F | Since: 323
     */
    function releaseScriptBank(): void;
    /**
     * No comment provided
     *
     * Hash: 0x19AF7ED9B9D23058 | Since: 323
     */
    function unhintAmbientBank(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9AC92EED5E4793AB | Since: 323
     */
    function unhintScriptBank(): void;
    /**
     * No comment provided
     *
     * Hash: 0x11579D940949C49E | Since: 678
     */
    function unhintNamedScriptBank(audioBank: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x430386FE9BF80B45 | Since: 323
     */
    function getSoundId(): number;
    /**
     * No comment provided
     *
     * Hash: 0x353FC880830B88FA | Since: 323
     */
    function releaseSoundId(soundId: number): void;
    /**
     * All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/A8Ny8AHZ
     *
     * Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
     *
     * Hash: 0x7FF4944CC209192D | Since: 323
     */
    function playSound(soundId: number, audioName: string, audioRef: string): void;
    /**
     * List: https://pastebin.com/DCeRiaLJ
     *
     * All occurrences as of Cayo Perico Heist DLC (b2189), sorted alphabetically and identical lines removed: https://git.io/JtLxM
     *
     * Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
     *
     * Hash: 0x67C540AA08E4A6F5 | Since: 323
     */
    function playSoundFrontend(soundId: number, audioName: string, audioRef: string): void;
    /**
     * Only call found in the b617d scripts:
     *
     * `AUDIO::PLAY_DEFERRED_SOUND_FRONTEND("BACK", "HUD_FREEMODE_SOUNDSET");`
     *
     * Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
     *
     * Hash: 0xCADA5A0D0702381E | Since: 323
     */
    function playDeferredSoundFrontend(soundName: string, soundsetName: string): void;
    /**
     * All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/f2A7vTj0
     * No changes made in b678d.
     *
     * gtaforums.com/topic/795622-audio-for-mods
     *
     * Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
     *
     * Hash: 0xE65F427EB70AB1ED | Since: 323
     */
    function playSoundFromEntity(soundId: number, audioName: string, entity: number | Entity, audioRef: string, isNetwork: boolean): void;
    /**
     * Only used with "formation_flying_blips_soundset" and "biker_formation_blips_soundset".
     * p1 is always the model of p2
     *
     * Hash: 0x5B9853296731E88D | Since: 877
     */
    function playSoundFromEntityHash(soundId: number, model: number | string, entity: number | Entity, soundSetHash: number | string): void;
    /**
     * All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/eeFc5DiW
     *
     * gtaforums.com/topic/795622-audio-for-mods
     *
     * Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
     *
     * Hash: 0x8D8686B622B88120 | Since: 323
     */
    function playSoundFromCoord(soundId: number, audioName: string, pos: Vector3, audioRef: string, isNetwork: boolean, range: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7EC3C679D0E7E46B | Since: 678
     */
    function updateSoundCoord(soundId: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xA3B0C41BA5CC0BB5 | Since: 323
     */
    function stopSound(soundId: number): void;
    /**
     * Could this be used alongside either,
     * SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES or _SET_NETWORK_ID_SYNC_TO_PLAYER to make it so other players can hear the sound while online? It'd be a bit troll-fun to be able to play the Zancudo UFO creepy sounds globally.
     *
     * Hash: 0x2DE3F0A134FFBC0D | Since: 323
     */
    function getNetworkIdFromSoundId(soundId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x75262FD12D0A1C84 | Since: 323
     */
    function getSoundIdFromNetworkId(netId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xAD6B3148A78AE9B6 | Since: 323
     */
    function setVariableOnSound(soundId: number, variable: string): void;
    /**
     * From the scripts, p0:
     *
     * "ArmWrestlingIntensity",
     * "INOUT",
     * "Monkey_Stream",
     * "ZoomLevel"
     *
     * Hash: 0x2F9D3834AEB9EF79 | Since: 323
     */
    function setVariableOnStream(variable: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF2A9CDABCEA04BD6 | Since: 323
     */
    function overrideUnderwaterStream(): void;
    /**
     * `AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 1.0);`
     * `AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 0.0);`
     *
     * Hash: 0x733ADF241531E5C2 | Since: 323
     */
    function setVariableOnUnderWaterStream(variableName: string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFCBDCE714A7C88E5 | Since: 323
     */
    function hasSoundFinished(soundId: number): boolean;
    /**
     * Plays ambient speech. See also _0x444180DB.
     *
     * ped: The ped to play the ambient speech.
     * speechName: Name of the speech to play, eg. "GENERIC_HI".
     * speechParam: Can be one of the following:
     * SPEECH_PARAMS_STANDARD
     * SPEECH_PARAMS_ALLOW_REPEAT
     * SPEECH_PARAMS_BEAT
     * SPEECH_PARAMS_FORCE
     * SPEECH_PARAMS_FORCE_FRONTEND
     * SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND
     * SPEECH_PARAMS_FORCE_NORMAL
     * SPEECH_PARAMS_FORCE_NORMAL_CLEAR
     * SPEECH_PARAMS_FORCE_NORMAL_CRITICAL
     * SPEECH_PARAMS_FORCE_SHOUTED
     * SPEECH_PARAMS_FORCE_SHOUTED_CLEAR
     * SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL
     * SPEECH_PARAMS_FORCE_PRELOAD_ONLY
     * SPEECH_PARAMS_MEGAPHONE
     * SPEECH_PARAMS_HELI
     * SPEECH_PARAMS_FORCE_MEGAPHONE
     * SPEECH_PARAMS_FORCE_HELI
     * SPEECH_PARAMS_INTERRUPT
     * SPEECH_PARAMS_INTERRUPT_SHOUTED
     * SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR
     * SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL
     * SPEECH_PARAMS_INTERRUPT_NO_FORCE
     * SPEECH_PARAMS_INTERRUPT_FRONTEND
     * SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND
     * SPEECH_PARAMS_ADD_BLIP
     * SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT
     * SPEECH_PARAMS_ADD_BLIP_FORCE
     * SPEECH_PARAMS_ADD_BLIP_SHOUTED
     * SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE
     * SPEECH_PARAMS_ADD_BLIP_INTERRUPT
     * SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE
     * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED
     * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR
     * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL
     * SPEECH_PARAMS_SHOUTED
     * SPEECH_PARAMS_SHOUTED_CLEAR
     * SPEECH_PARAMS_SHOUTED_CRITICAL
     *
     * Note: A list of Name and Parameters can be found here https://pastebin.com/1GZS5dCL
     *
     * Full list of speeches and voices names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/speeches.json
     *
     * Hash: 0x8E04FEDD28D42462 | Since: 323
     */
    function playPedAmbientSpeechNative(ped: number | Ped, speechName: string, speechParam: string): void;
    /**
     * Plays ambient speech. See also _0x5C57B85D.
     *
     * See PLAY_PED_AMBIENT_SPEECH_NATIVE for parameter specifications.
     *
     * Full list of speeches and voices names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/speeches.json
     *
     * Hash: 0xC6941B4A3A8FBBB9 | Since: 323
     */
    function playPedAmbientSpeechAndCloneNative(ped: number | Ped, speechName: string, speechParam: string): void;
    /**
     * This is the same as PLAY_PED_AMBIENT_SPEECH_NATIVE and PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE but it will allow you to play a speech file from a specific voice file. It works on players and all peds, even animals.
     *
     * EX (C#):
     * GTA.Native.Function.Call(Hash.PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE, Game.Player.Character, "GENERIC_INSULT_HIGH", "s_m_y_sheriff_01_white_full_01", "SPEECH_PARAMS_FORCE_SHOUTED", 0);
     *
     * The first param is the ped you want to play it on, the second is the speech name, the third is the voice name, the fourth is the speech param, and the last param is usually always 0.
     *
     * Full list of speeches and voices names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/speeches.json
     *
     * Hash: 0x3523634255FC3318 | Since: 323
     */
    function playPedAmbientSpeechWithVoiceNative(ped: number | Ped, speechName: string, voiceName: string, speechParam: string): void;
    /**
     * Full list of speeches and voices names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/speeches.json
     *
     * Hash: 0xED640017ED337E45 | Since: 323
     */
    function playAmbientSpeechFromPositionNative(speechName: string, voiceName: string, pos: Vector3, speechParam: string): void;
    /**
     * This native enables the audio flag "TrevorRageIsOverridden" and sets the voice effect to `voiceEffect`
     *
     * Hash: 0x13AD665062541A7E | Since: 323
     */
    function overrideTrevorRage(voiceEffect: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xE78503B10C4314E0 | Since: 323
     */
    function resetTrevorRage(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEA241BB04110F091 | Since: 323
     */
    function setPlayerAngry(ped: number | Ped, toggle: boolean): void;
    /**
     * `Needs another parameter [int p2]. The signature is PED::PLAY_PAIN(Ped ped, int painID, int p1, int p2);`
     *
     * Last 2 parameters always seem to be 0.
     *
     * EX: Function.Call(Hash.PLAY_PAIN, TestPed, 6, 0, 0);
     *
     * Known Pain IDs
     * ________________________
     *
     * 1 - Doesn't seem to do anything. Does NOT crash the game like previously said. (Latest patch)
     * 6 - Scream (Short)
     * 7 - Scared Scream (Kinda Long)
     * 8 - On Fire
     *
     *
     * Hash: 0xBC9AE166038A5CEC | Since: 323
     */
    function playPain(ped: number | Ped, painID: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCE4AC0439F607045 | Since: 323
     */
    function releaseWeapon(): void;
    /**
     * mode can be any of these:
     * SLOWMO_T1_TRAILER_SMASH
     * SLOWMO_T1_RAYFIRE_EXPLOSION
     * SLOWMO_PROLOGUE_VAULT
     * NIGEL_02_SLOWMO_SETTING
     * JSH_EXIT_TUNNEL_SLOWMO
     * SLOWMO_BIG_SCORE_JUMP
     * SLOWMO_FIB4_TRUCK_SMASH
     * SLOWMO_EXTREME_04
     * SLOW_MO_METH_HOUSE_RAYFIRE
     * BARRY_02_SLOWMO
     * BARRY_01_SLOWMO
     *
     * Hash: 0xD01005D2BA2EB778 | Since: 323
     */
    function activateSlowmoMode(mode: string): void;
    /**
     * see ACTIVATE_AUDIO_SLOWMO_MODE for modes
     *
     * Hash: 0xDDC635D5B3262C56 | Since: 323
     */
    function deactivateSlowmoMode(mode: string): void;
    /**
     * Audio List
     * gtaforums.com/topic/795622-audio-for-mods/
     *
     * All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/FTeAj4yZ
     *
     * Hash: 0x6C8065A3B780185B | Since: 323
     */
    function setAmbientVoiceName(ped: number | Ped, name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x9A53DED9921DE990 | Since: 463
     */
    function setAmbientVoiceNameHash(ped: number | Ped, hash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5E203DA2BA15D436 | Since: 463
     */
    function getAmbientVoiceNameHash(ped: number | Ped): number;
    /**
     * Assigns some ambient voice to the ped.
     *
     * Hash: 0x40CF0D12D142A9E8 | Since: 323
     */
    function setPedVoiceFull(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x1B7ABE26CBCBF8C7 | Since: 372
     */
    function setPedRaceAndVoiceGroup(ped: number | Ped, voiceGroup: number | string): void;
    /**
     * From the scripts:
     *
     * `AUDIO::SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("PAIGE_PVG"));`
     * `AUDIO::SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("TALINA_PVG"));`
     * `AUDIO::SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_BLACK_PVG"));`
     * `AUDIO::SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_WHITE_PVG"));`
     *
     * Hash: 0x7CDC8C3B89F661B3 | Since: 323
     */
    function setPedVoiceGroup(ped: number | Ped, voiceGroupHash: number | string): void;
    /**
     * Dat151RelType == 29
     *
     * Hash: 0x0BABC1345ABBFB16 | Since: 2699
     */
    function setPedVoiceGroupFromRaceToPvg(ped: number | Ped, voiceGroupHash: number | string): void;
    /**
     * BOOL p1: 0 = Female; 1 = Male
     *
     * Hash: 0xA5342D390CDA41D6 | Since: 323
     */
    function setPedGender(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x7A73D05A607734C7 | Since: 323
     */
    function stopCurrentPlayingSpeech(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xB8BEC0CA6F0EDB0F | Since: 323
     */
    function stopCurrentPlayingAmbientSpeech(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x9072C8B49907BFAD | Since: 323
     */
    function isAmbientSpeechPlaying(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCC9AA18DCC7084F4 | Since: 323
     */
    function isScriptedSpeechPlaying(p0: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x729072355FA39EC9 | Since: 323
     */
    function isAnySpeechPlaying(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x30CA2EF91D15ADF8 | Since: 2189
     */
    function isAnyPositionalSpeechPlaying(): boolean;
    /**
     * Checks if the ped can play the speech or has the speech file, p2 is usually false.
     *
     * Hash: 0x49B99BF3FDA89A7A | Since: 323
     */
    function doesContextExistForThisPed(ped: number | Ped, speechName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x049E937F18F4020C | Since: 323
     */
    function isPedInCurrentConversation(ped: number | Ped): boolean;
    /**
     * Sets the ped drunk sounds.  Only works with PLAYER_PED_ID
     *
     * ====================================================
     *
     * As mentioned above, this only sets the drunk sound to ped/player.
     *
     * To give the Ped a drunk effect with drunk walking animation try using SET_PED_MOVEMENT_CLIPSET
     *
     * Below is an example
     *
     * if (!Function.Call<bool>(Hash.HAS_ANIM_SET_LOADED, "move_m@drunk@verydrunk"))
     * {
     * Function.Call(Hash.REQUEST_ANIM_SET, "move_m@drunk@verydrunk");
     * }
     * Function.Call(Hash.SET_PED_MOVEMENT_CLIPSET, Ped.Handle, "move_m@drunk@verydrunk", 0x3E800000);
     *
     *
     *
     * And to stop the effect use
     * RESET_PED_MOVEMENT_CLIPSET
     *
     * Hash: 0x95D2D383D5396B8A | Since: 323
     */
    function setPedIsDrunk(ped: number | Ped, toggle: boolean): void;
    /**
     * Plays sounds from a ped with chop model. For example it used to play bark or sniff sounds. p1 is always 3 or 4294967295 in decompiled scripts. By a quick disassembling I can assume that this arg is unused.
     * This native is works only when you call it on the ped with right model (ac_chop only ?)
     * Speech Name can be: CHOP_SNIFF_SEQ CHOP_WHINE CHOP_LICKS_MOUTH CHOP_PANT bark GROWL SNARL BARK_SEQ
     *
     * Hash: 0xEE066C7006C49C0A | Since: 323
     */
    function playAnimalVocalization(pedHandle: number | Ped, speechName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC265DF9FB44A9FBD | Since: 323
     */
    function isAnimalVocalizationPlaying(pedHandle: number | Ped): boolean;
    /**
     * mood can be 0 or 1 (it's not a boolean value!). Effects audio of the animal.
     *
     * Hash: 0xCC97B29285B1DC3B | Since: 323
     */
    function setAnimalMood(animal: number | Ped, mood: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB35CE999E8EF317E | Since: 323
     */
    function isMobilePhoneRadioActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBF286C554784F3DF | Since: 323
     */
    function setMobilePhoneRadioState(state: boolean): void;
    /**
     * Returns 255 (radio off index) if the function fails.
     *
     * Hash: 0xE8AF77C4C06ADC93 | Since: 323
     */
    function getPlayerRadioStationIndex(): number;
    /**
     * Returns active radio station name
     *
     * Hash: 0xF6D733C32076AD03 | Since: 323
     */
    function getPlayerRadioStationName(): string;
    /**
     * `Converts radio station index to string. Use HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION to get the user-readable text.`
     *
     * Hash: 0xB28ECA15046CA8B9 | Since: 323
     */
    function getRadioStationName(radioStation: number): string;
    /**
     * No comment provided
     *
     * Hash: 0xA571991A7FE6CCEB | Since: 323
     */
    function getPlayerRadioStationGenre(): number;
    /**
     * No comment provided
     *
     * Hash: 0xA151A7394A214E65 | Since: 323
     */
    function isRadioRetuning(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0626A247D2405330 | Since: 323
     */
    function isRadioFadedOut(): boolean;
    /**
     * Tune Forward...
     *
     * Hash: 0xFF266D1D0EB1195D | Since: 323
     */
    function setRadioRetuneUp(): void;
    /**
     * Tune Backwards...
     *
     * Hash: 0xDD6BCF9E94425DF9 | Since: 323
     */
    function setRadioRetuneDown(): void;
    /**
     * List of radio stations that are in the wheel, in clockwise order, as of LS Tuners DLC: https://git.io/J8a3k
     * An older list including hidden radio stations: https://pastebin.com/Kj9t38KF
     *
     * Hash: 0xC69EDA28699D5107 | Since: 323
     */
    function setRadioToStationName(stationName: string): void;
    /**
     * List of radio stations that are in the wheel, in clockwise order, as of LS Tuners DLC: https://git.io/J8a3k
     * An older list including hidden radio stations: https://pastebin.com/Kj9t38KF
     *
     * Hash: 0x1B9C0099CB942AC6 | Since: 323
     */
    function setVehRadioStation(vehicle: number | Vehicle, radioStation: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3E45765F3FBB582F | Since: 2372
     */
    function setVehHasNormalRadio(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x0BE4BE946463F917 | Since: 505
     */
    function isVehicleRadioOn(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC1805D05E6D4FE10 | Since: 323
     */
    function setVehForcedRadioThisFrame(vehicle: number | Vehicle): void;
    /**
     * Full list of static emitters by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/staticEmitters.json
     *
     * Hash: 0xACF57305B12AF907 | Since: 323
     */
    function setEmitterRadioStation(emitterName: string, radioStation: string): void;
    /**
     * Example:
     * `AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_01_STAGE", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_02_MAIN_ROOM", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_03_BACK_ROOM", false);`
     *
     * This turns off surrounding sounds not connected directly to peds.
     *
     * Full list of static emitters by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/staticEmitters.json
     *
     * Hash: 0x399D2D3B33F1B8EB | Since: 323
     */
    function setStaticEmitterEnabled(emitterName: string, toggle: boolean): void;
    /**
     * Full list of static emitters by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/staticEmitters.json
     *
     * Hash: 0x651D3228960D08AF | Since: 505
     */
    function linkStaticEmitterToEntity(emitterName: string, entity: number | Entity): void;
    /**
     * Sets radio station by index.
     *
     * Hash: 0xA619B168B8A8570F | Since: 323
     */
    function setRadioToStationIndex(radioStation: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF7F26C6E9CC9EBB8 | Since: 323
     */
    function setFrontendRadioActive(active: boolean): void;
    /**
     * "news" that play on the radio after you've done something in story mode(?)
     *
     * Hash: 0xB165AB7C248B2DC1 | Since: 323
     */
    function unlockMissionNewsStory(newsStory: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x66E49BF55B4B1874 | Since: 323
     */
    function isMissionNewsStoryUnlocked(newsStory: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x50B196FC9ED6545B | Since: 323
     */
    function getAudibleMusicTrackTextId(): number;
    /**
     * No comment provided
     *
     * Hash: 0xCD536C4D33DCC900 | Since: 323
     */
    function playEndCreditsMusic(play: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6DDBBDD98E2E9C25 | Since: 323
     */
    function skipRadioForward(): void;
    /**
     * No comment provided
     *
     * Hash: 0x344F393B027E38C3 | Since: 323
     */
    function freezeRadioStation(radioStation: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xFC00454CF60B91DD | Since: 323
     */
    function unfreezeRadioStation(radioStation: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC1AA9F53CE982990 | Since: 323
     */
    function setRadioAutoUnfreeze(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x88795F13FACDA88D | Since: 323
     */
    function setInitialPlayerStation(radioStation: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x19F21E63AE6EAE4E | Since: 323
     */
    function setUserRadioControlEnabled(toggle: boolean): void;
    /**
     * Only found this one in the decompiled scripts:
     *
     * `AUDIO::SET_RADIO_TRACK("RADIO_03_HIPHOP_NEW", "ARM1_RADIO_STARTS");`
     *
     *
     * Hash: 0xB39786F201FEE30B | Since: 323
     */
    function setRadioTrack(radioStation: string, radioTrack: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x2CB0075110BE1E56 | Since: 1493
     */
    function setRadioTrackWithStartOffset(radioStationName: string, mixName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x55ECF4D13D9903B0 | Since: 1868
     */
    function setNextRadioTrack(radioName: string, radioTrack: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xBB6F1CAEC68B0BCE | Since: 323
     */
    function setVehicleRadioLoud(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x032A116663A4D5AC | Since: 323
     */
    function canVehicleReceiveCbRadio(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1098355A16064BB3 | Since: 323
     */
    function setMobileRadioEnabledDuringGameplay(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x109697E2FFBAC8A1 | Since: 323
     */
    function doesPlayerVehHaveRadio(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5F43D83FD6738741 | Since: 323
     */
    function isPlayerVehRadioEnable(): boolean;
    /**
     * can't seem to enable radio on cop cars etc
     *
     * Hash: 0x3B988190C0AA6C0B | Since: 323
     */
    function setVehicleRadioEnabled(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDA07819E452FFE8F | Since: 505
     */
    function setPositionedPlayerVehicleRadioEmitterEnabled(): void;
    /**
     * Examples:
     *
     * `AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_MICHAEL", 1);`
     * `AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_MICHAEL", 1);`
     * `AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_TREVOR", 1);`
     * `AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_SAVE_MICHAEL_TREVOR", 1);`
     * `AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "OFF_ROAD_RADIO_ROCK_LIST", 1);`
     * `AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_06_COUNTRY", "MAGDEMO2_RADIO_DINGHY", 1);`
     * `AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_16_SILVERLAKE", "SEA_RACE_RADIO_PLAYLIST", 1);`
     * `AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "OFF_ROAD_RADIO_ROCK_LIST", 1);`
     *
     * Hash: 0x4E404A9361F75BB2 | Since: 323
     */
    function setCustomRadioTrackList(radioStation: string, trackListName: string): void;
    /**
     * 3 calls in the b617d scripts, removed duplicate.
     *
     * `AUDIO::CLEAR_CUSTOM_RADIO_TRACK_LIST("RADIO_16_SILVERLAKE");`
     * `AUDIO::CLEAR_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK");`
     *
     * Hash: 0x1654F24A88A8E3FE | Since: 323
     */
    function clearCustomRadioTrackList(radioStation: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF1620ECB50E01DE7 | Since: 323
     */
    function getNumUnlockedRadioStations(): number;
    /**
     * No comment provided
     *
     * Hash: 0x8D67489793FF428B | Since: 323
     */
    function findRadioStationIndex(stationNameHash: number | string): number;
    /**
     * 6 calls in the b617d scripts, removed identical lines:
     *
     * `AUDIO::SET_RADIO_STATION_MUSIC_ONLY("RADIO_01_CLASS_ROCK", 1);`
     * `AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 0);`
     * `AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 1);`
     *
     * Hash: 0x774BD811F656A122 | Since: 323
     */
    function setRadioStationMusicOnly(radioStation: string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2C96CDB04FCA358E | Since: 323
     */
    function setRadioFrontendFadeTime(fadeTime: number): void;
    /**
     * `AUDIO::UNLOCK_RADIO_STATION_TRACK_LIST("RADIO_16_SILVERLAKE", "MIRRORPARK_LOCKED");`
     *
     * Hash: 0x031ACB6ABA18C729 | Since: 323
     */
    function unlockRadioStationTrackList(radioStation: string, trackListName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xFF5E5EA2DCEEACF3 | Since: 2372
     */
    function lockRadioStationTrackList(radioStation: string, trackListName: string): void;
    /**
     * Just a nullsub (i.e. does absolutely nothing) since build 1604.
     *
     * Hash: 0x47AED84213A47510 | Since: 1493
     */
    function updateUnlockableDjRadioTracks(enableMixes: boolean): void;
    /**
     * Disables the radio station (hides it from the radio wheel).
     *
     * Hash: 0x477D9DB48F889591 | Since: 1493
     */
    function lockRadioStation(radioStationName: string, toggle: boolean): void;
    /**
     * Doesn't have an effect in Story Mode.
     *
     * Hash: 0x4CAFEBFA21EC188D | Since: 2372
     */
    function setRadioStationAsFavourite(radioStation: string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2B1784DB08AFEA79 | Since: 2699
     */
    function isRadioStationFavourited(radioStation: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC64A06D939F826F5 | Since: 1493
     */
    function getNextAudibleBeat(): [boolean, number, number, number];
    /**
     * Changes start time of a tracklist (milliseconds)
     * `R* uses a random int: MISC::GET_RANDOM_INT_IN_RANGE(0, 13) * 60000)`
     *
     * Hash: 0x4E0AF9114608257C | Since: 2372
     */
    function forceMusicTrackList(radioStation: string, trackListName: string, milliseconds: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3E65CDE5215832C1 | Since: 1493
     */
    function getCurrentTrackPlayTime(radioStationName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x34D66BC058019CE0 | Since: 1493
     */
    function getCurrentTrackSoundName(radioStationName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xF3365489E0DD50F9 | Since: 323
     */
    function setVehicleMissileWarningEnabled(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Full list of ambient zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientZones.json
     *
     * Hash: 0xBDA07E5950085E46 | Since: 323
     */
    function setAmbientZoneState(zoneName: string): void;
    /**
     * `This function also has a p2, unknown. Signature AUDIO::CLEAR_AMBIENT_ZONE_STATE(const char* zoneName, bool p1, Any p2);`
     *
     * Still needs more research.
     *
     * Full list of ambient zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientZones.json
     *
     * Hash: 0x218DD44AAAC964FF | Since: 323
     */
    function clearAmbientZoneState(zoneName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x9748FA4DE50CCE3E | Since: 323
     */
    function setAmbientZoneListState(ambientZone: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x120C48C614909FA4 | Since: 323
     */
    function clearAmbientZoneListState(ambientZone: string): void;
    /**
     * Full list of ambient zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientZones.json
     *
     * Hash: 0x1D6650420CEC9D3B | Since: 323
     */
    function setAmbientZoneStatePersistent(ambientZone: string): void;
    /**
     * Full list of ambient zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientZones.json
     *
     * Hash: 0xF3638DAE8C4045E1 | Since: 323
     */
    function setAmbientZoneListStatePersistent(ambientZone: string): void;
    /**
     * Full list of ambient zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientZones.json
     *
     * Hash: 0x01E2817A479A7F9B | Since: 323
     */
    function isAmbientZoneEnabled(ambientZone: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5D2BFAAB8D956E0E | Since: 573
     */
    function refreshClosestOceanShoreline(): void;
    /**
     * All occurrences found in b617d, sorted alphabetically and identical lines removed:
     *
     * `AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_AK");`
     * `AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_CUSTOM");`
     * `AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_TOOTHLESS");`
     * Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
     *
     * Hash: 0x3B4BF5F0859204D9 | Since: 323
     */
    function setCutsceneOverride(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xBCC29F935ED07688 | Since: 323
     */
    function setVariableOnSynchScene(variableName: string, value: number): void;
    /**
     * Plays the given police radio message.
     *
     * All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/GBnsQ5hr
     * Full list of police report names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/policeReportNames.json
     *
     * Hash: 0xDFEBD56D9BD1EB16 | Since: 323
     */
    function playPoliceReport(name: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xB4F90FAF7670B16F | Since: 323
     */
    function cancelAllPoliceReports(): void;
    /**
     * Plays the siren sound of a vehicle which is otherwise activated when fastly double-pressing the horn key.
     * Only works on vehicles with a police siren.
     *
     * Hash: 0x1B9025BDA76822B6 | Since: 323
     */
    function blipSiren(vehicle: number | Vehicle): void;
    /**
     * Overrides the vehicle's horn hash.
     * When changing this hash on a vehicle, it will not return the 'overwritten' hash. It will still always return the default horn hash (same as GET_VEHICLE_DEFAULT_HORN)
     *
     * vehicle - the vehicle whose horn should be overwritten
     *
     * Hash: 0x3CDC1E622CCE0356 | Since: 323
     */
    function overrideVehHorn(vehicle: number | Vehicle, override: boolean, hornHash: number): void;
    /**
     * Checks whether the horn of a vehicle is currently played.
     *
     * Hash: 0x9D6BFC12B05C6121 | Since: 323
     */
    function isHornActive(vehicle: number | Vehicle): boolean;
    /**
     * Makes pedestrians sound their horn longer, faster and more agressive when they use their horn.
     *
     * Hash: 0x395BF71085D1B1D9 | Since: 323
     */
    function setAggressiveHorns(toggle: boolean): void;
    /**
     * Does nothing (it's a nullsub).
     *
     * Hash: 0x02E93C796ABD3A97 | Since: 323
     */
    function setRadioPositionMute(): void;
    /**
     * No comment provided
     *
     * Hash: 0x58BB377BEC7CD5F4 | Since: 323
     */
    function setVehicleConversationsPersist(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9BD7BD55E4533183 | Since: 1290
     */
    function setVehicleConversationsPersistNew(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD11FA52EB849D978 | Since: 323
     */
    function isStreamPlaying(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4E72BBDBCA58A3DB | Since: 323
     */
    function getStreamPlayTime(): number;
    /**
     * Example:
     * `AUDIO::LOAD_STREAM("CAR_STEAL_1_PASSBY", "CAR_STEAL_1_SOUNDSET");`
     *
     * All found occurrences in the b678d decompiled scripts: https://pastebin.com/3rma6w5w
     *
     * Stream names often ends with "_MASTER", "_SMALL" or "_STREAM". Also "_IN", "_OUT" and numbers.
     *
     * soundSet is often set to 0 in the scripts. These are common to end the soundSets: "_SOUNDS", "_SOUNDSET" and numbers.
     *
     * Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
     *
     * Hash: 0x1F1F957154EC51DF | Since: 323
     */
    function loadStream(streamName: string, soundSet: string): boolean;
    /**
     * Example:
     * `AUDIO::LOAD_STREAM_WITH_START_OFFSET("STASH_TOXIN_STREAM", 2400, "FBI_05_SOUNDS");`
     *
     * Only called a few times in the scripts.
     *
     * Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
     *
     * Hash: 0x59C16B79F53B3712 | Since: 323
     */
    function loadStreamWithStartOffset(streamName: string, startOffset: number, soundSet: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x89049DD63C08B5D1 | Since: 323
     */
    function playStreamFromPed(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xB70374A758007DFA | Since: 323
     */
    function playStreamFromVehicle(vehicle: number | Vehicle): void;
    /**
     * `Used with AUDIO::LOAD_STREAM`
     *
     * Example from finale_heist2b.c4:
     * `TASK::TASK_SYNCHRONIZED_SCENE(l_4C8[2\/\*14\*\/], l_4C8[2\/\*14\*\/]._f7, l_30A, "push_out_vault_l", 4.0, -1.5, 5, 713, 4.0, 0);`
     * `PED::SET_SYNCHRONIZED_SCENE_PHASE(l_4C8[2\/\*14\*\/]._f7, 0.0);`
     * `PED::FORCE_PED_AI_AND_ANIMATION_UPDATE(l_4C8[2\/\*14\*\/], 0, 0);`
     * `PED::SET_PED_COMBAT_ATTRIBUTES(l_4C8[2\/\*14\*\/], 38, 1);`
     * `PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(l_4C8[2\/\*14\*\/], 1);`
     * `if (AUDIO::LOAD_STREAM("Gold_Cart_Push_Anim_01", "BIG_SCORE_3B_SOUNDS")) {`
     * `AUDIO::PLAY_STREAM_FROM_OBJECT(l_36F[0\/\*1\*\/]);`
     * }
     *
     * Hash: 0xEBAA9B64D76356FD | Since: 323
     */
    function playStreamFromObject(_object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x58FCE43488F9F5F4 | Since: 323
     */
    function playStreamFrontend(): void;
    /**
     * No comment provided
     *
     * Hash: 0x21442F412E8DE56B | Since: 323
     */
    function playStreamFromPosition(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xA4718A1419D18151 | Since: 323
     */
    function stopStream(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D64D7405520E3D3 | Since: 323
     */
    function stopPedSpeaking(ped: number | Ped, shaking: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF8AD2EED7C47E8FE | Since: 1734
     */
    function blockAllSpeechFromPed(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xAB6781A5F3101470 | Since: 1868
     */
    function stopPedSpeakingSynced(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xA9A41C1E940FB0E8 | Since: 323
     */
    function disablePedPain(ped: number | Ped, toggle: boolean): void;
    /**
     * Common in the scripts:
     * `AUDIO::IS_AMBIENT_SPEECH_DISABLED(PLAYER::PLAYER_PED_ID());`
     *
     * Hash: 0x932C2D096A2C3FFF | Since: 323
     */
    function isAmbientSpeechDisabled(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA8A7D434AFB4B97B | Since: 1493
     */
    function blockSpeechContextGroup(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2ACABED337622DF2 | Since: 1493
     */
    function unblockSpeechContextGroup(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1FEF0683B96EBCF2 | Since: 323
     */
    function setSirenWithNoDriver(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF584CF8529B51434 | Since: 2372
     */
    function setSirenBypassMpDriverCheck(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x66C3FB05206041BA | Since: 1290
     */
    function triggerSiren(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x9C11908013EA4715 | Since: 323
     */
    function setHornPermanentlyOn(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x76D683C108594D0E | Since: 323
     */
    function setHornEnabled(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE5564483E407F914 | Since: 323
     */
    function setVehiclePriority(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D3AF56E94C9AE98 | Since: 323
     */
    function setHornPermanentlyOnTime(vehicle: number | Vehicle, time: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA932DE350266EF8 | Since: 323
     */
    function useSirenAsHorn(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * This native sets the audio of the specified vehicle to the audioName (p1).
     *
     * Use the audioNameHash found in vehicles.meta
     *
     * Example:
     * _SET_VEHICLE_AUDIO(veh, "ADDER");
     * The selected vehicle will now have the audio of the Adder.
     *
     * Hash: 0x4F0C413926060B38 | Since: 323
     */
    function forceUseGameObject(vehicle: number | Vehicle, audioName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA4CEA6AE0000A7E | Since: 1180
     */
    function preloadVehicleBank(vehicleModel: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF1F8157B8C3F171C | Since: 323
     */
    function setVehicleStartupRevSound(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xD2DCCD8E16E20997 | Since: 323
     */
    function resetVehicleStartupRevSound(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x97FFB4ADEED08066 | Since: 2372
     */
    function setVehicleForceReverseWarning(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5DB8010EE71FDEF2 | Since: 323
     */
    function isVehicleAudiblyDamaged(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x59E7B488451F4D3A | Since: 323
     */
    function setVehicleEngineDamageFactor(vehicle: number | Vehicle, damageFactor: number): void;
    /**
     * intensity: 0.0f - 1.0f, only used once with 1.0f in R* Scripts (nigel2)
     * Makes an engine rattling noise when you decelerate, you need to be going faster to hear lower values
     *
     * Hash: 0x01BB4D577D38BD9E | Since: 323
     */
    function setVehicleBodyDamageFactor(vehicle: number | Vehicle, intensity: number): void;
    /**
     * Called together with SET_VEHICLE_TYRES_CAN_BURST
     *
     * Hash: 0xEB7D0E1FCC8FE17A | Since: 3258
     */
    function forceVehicleEngineSynth(vehicle: number | Vehicle, force: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1C073274E065C6D2 | Since: 323
     */
    function enableVehicleFanbeltDamage(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2BE4BC731D039D5A | Since: 323
     */
    function enableVehicleExhaustPops(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * SET_VEHICLE_BOOST_ACTIVE(vehicle, 1, 0);
     * SET_VEHICLE_BOOST_ACTIVE(vehicle, 0, 0);
     *
     * Will give a boost-soundeffect.
     *
     * Hash: 0x4A04DE7CAB2739A1 | Since: 323
     */
    function setVehicleBoostActive(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6FDDAD856E36988A | Since: 323
     */
    function setPlayerVehicleAlarmActive(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x06C0023BED16DD6B | Since: 323
     */
    function setScriptUpdateDoor(doorHash: number | string, toggle: boolean): void;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0x3A539D52857EA82D | Since: 323
     */
    function playVehicleDoorOpenSound(vehicle: number | Vehicle, doorId: number): void;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0x62A456AA4769EF34 | Since: 323
     */
    function playVehicleDoorCloseSound(vehicle: number | Vehicle, doorId: number): void;
    /**
     * Works for planes only.
     *
     * Hash: 0xC15907D667F7CFB2 | Since: 323
     */
    function enableStallWarningSounds(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBEFB80290414FD4F | Since: 3095
     */
    function enableDragRaceStationaryWarningSounds(vehicle: number | Vehicle, enable: boolean): void;
    /**
     * Hardcoded to return 1
     *
     * Hash: 0x6D28DC1671E334FD | Since: 323
     */
    function isGameInControlOfMusic(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3BD3F52BA9B1E4E8 | Since: 323
     */
    function setGpsActive(active: boolean): void;
    /**
     * Called 38 times in the scripts. There are 5 different audioNames used.
     * One unknown removed below.
     *
     * `AUDIO::PLAY_MISSION_COMPLETE_AUDIO("DEAD");`
     * `AUDIO::PLAY_MISSION_COMPLETE_AUDIO("FRANKLIN_BIG_01");`
     * `AUDIO::PLAY_MISSION_COMPLETE_AUDIO("GENERIC_FAILED");`
     * `AUDIO::PLAY_MISSION_COMPLETE_AUDIO("TREVOR_SMALL_01");`
     *
     * Hash: 0xB138AAB8A70D3C69 | Since: 323
     */
    function playMissionComplete(audioName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x19A30C23F5827F8A | Since: 323
     */
    function isMissionCompletePlaying(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6F259F82D873B8B8 | Since: 323
     */
    function isMissionCompleteReadyForUi(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF154B8D1775B2DEC | Since: 323
     */
    function blockDeathJingle(toggle: boolean): void;
    /**
     * Used to prepare a scene where the surrounding sound is muted or a bit changed. This does not play any sound.
     *
     * List of all usable scene names found in b617d. Sorted alphabetically and identical names removed: https://pastebin.com/MtM9N9CC
     * Full list of audio scene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/audioSceneNames.json
     *
     * Hash: 0x013A80FC08F6E4F2 | Since: 323
     */
    function startScene(scene: string): boolean;
    /**
     * Full list of audio scene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/audioSceneNames.json
     *
     * Hash: 0xDFE8422B3B94E688 | Since: 323
     */
    function stopScene(scene: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xBAC7FC81A75EC1A1 | Since: 323
     */
    function stopScenes(): void;
    /**
     * Full list of audio scene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/audioSceneNames.json
     *
     * Hash: 0xB65B60556E2A9225 | Since: 323
     */
    function isSceneActive(scene: string): boolean;
    /**
     * Full list of audio scene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/audioSceneNames.json
     *
     * Hash: 0xEF21A9EF089A2668 | Since: 323
     */
    function setSceneVariable(scene: string, variable: string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA5F377B175A699C5 | Since: 323
     */
    function setScriptCleanupTime(time: number): void;
    /**
     * All found occurrences in b678d:
     * https://pastebin.com/ceu67jz8
     *
     * Hash: 0x153973AB99FE8980 | Since: 323
     */
    function addEntityToMixGroup(entity: number | Entity, groupName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x18EB48CFC41F2EA0 | Since: 323
     */
    function removeEntityFromMixGroup(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x845FFC3A4FEEFA3E | Since: 323
     */
    function isMusicPlaying(): boolean;
    /**
     * This is an alias of AUDIO_IS_MUSIC_PLAYING.
     *
     * Hash: 0x2DD39BF3E2F9C47F | Since: 463
     */
    function isScriptedMusicPlaying(): boolean;
    /**
     * All music event names found in the b617d scripts: https://pastebin.com/GnYt0R3P
     * Full list of music event names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/musicEventNames.json
     *
     * Hash: 0x1E5185B72EF5158A | Since: 323
     */
    function prepareMusicEvent(eventName: string): boolean;
    /**
     * All music event names found in the b617d scripts: https://pastebin.com/GnYt0R3P
     * Full list of music event names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/musicEventNames.json
     *
     * Hash: 0x5B17A90291133DA5 | Since: 323
     */
    function cancelMusicEvent(eventName: string): boolean;
    /**
     * List of all usable event names found in b617d used with this native. Sorted alphabetically and identical names removed: https://pastebin.com/RzDFmB1W
     *
     * All music event names found in the b617d scripts: https://pastebin.com/GnYt0R3P
     * Full list of music event names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/musicEventNames.json
     *
     * Hash: 0x706D57B0F50DA710 | Since: 323
     */
    function triggerMusicEvent(eventName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA097AB275061FB21 | Since: 323
     */
    function isMusicOneshotPlaying(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE7A0D23DC414507B | Since: 323
     */
    function getMusicPlaytime(): number;
    /**
     * No comment provided
     *
     * Hash: 0x159B7318403A1CD8 | Since: 1103
     */
    function setGlobalRadioSignalLevel(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFBE20329593DEC9D | Since: 323
     */
    function recordBrokenGlass(pos: Vector3, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB32209EFFDC04913 | Since: 323
     */
    function clearAllBrokenGlass(): void;
    /**
     * No comment provided
     *
     * Hash: 0x70B8EC8FC108A634 | Since: 323
     */
    function scriptOverridesWindElevation(): void;
    /**
     * No comment provided
     *
     * Hash: 0x149AEE66F0CB3A99 | Since: 323
     */
    function setPedWallaDensity(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8BF907833BE275DE | Since: 323
     */
    function setPedInteriorWallaDensity(): void;
    /**
     * No comment provided
     *
     * Hash: 0x062D5EAD4DA2FA6A | Since: 323
     */
    function forcePedPanicWalla(): void;
    /**
     * Example:
     *
     * `bool prepareAlarm = AUDIO::PREPARE_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS");`
     * Full list of alarm names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/alarmSounds.json
     *
     * Hash: 0x9D74AE343DB65533 | Since: 323
     */
    function prepareAlarm(alarmName: string): boolean;
    /**
     * Example:
     *
     * This will start the alarm at Fort Zancudo.
     *
     * `AUDIO::START_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);`
     *
     * First parameter (char) is the name of the alarm.
     * Second parameter (bool) is unknown, it does not seem to make a difference if this one is 0 or 1.
     *
     * ----------
     *
     * It DOES make a difference but it has to do with the duration or something I dunno yet
     *
     * ----------
     *
     * Found in the b617d scripts:
     *
     * `AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS", 0);`
     * `AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS_UPPER", 1);`
     * `AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS_UPPER_B", 0);`
     * `AUDIO::START_ALARM("BIG_SCORE_HEIST_VAULT_ALARMS", a_0);`
     * `AUDIO::START_ALARM("FBI_01_MORGUE_ALARMS", 1);`
     * `AUDIO::START_ALARM("FIB_05_BIOTECH_LAB_ALARMS", 0);`
     * `AUDIO::START_ALARM("JEWEL_STORE_HEIST_ALARMS", 0);`
     * `AUDIO::START_ALARM("PALETO_BAY_SCORE_ALARM", 1);`
     * `AUDIO::START_ALARM("PALETO_BAY_SCORE_CHICKEN_FACTORY_ALARM", 0);`
     * `AUDIO::START_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);`
     * `AUDIO::START_ALARM("PORT_OF_LS_HEIST_SHIP_ALARMS", 0);`
     * `AUDIO::START_ALARM("PRISON_ALARMS", 0);`
     * `AUDIO::START_ALARM("PROLOGUE_VAULT_ALARMS", 0);`
     * Full list of alarm names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/alarmSounds.json
     *
     * Hash: 0x0355EF116C4C97B2 | Since: 323
     */
    function startAlarm(alarmName: string): void;
    /**
     * Example:
     *
     * This will stop the alarm at Fort Zancudo.
     *
     * `AUDIO::STOP_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);`
     *
     * First parameter (char) is the name of the alarm.
     * Second parameter (bool) has to be true (1) to have any effect.
     * Full list of alarm names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/alarmSounds.json
     *
     * Hash: 0xA1CADDCD98415A41 | Since: 323
     */
    function stopAlarm(alarmName: string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F794A877ADD4C92 | Since: 323
     */
    function stopAllAlarms(stop: boolean): void;
    /**
     * Example:
     *
     * `bool playing = AUDIO::IS_ALARM_PLAYING("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS");`
     * Full list of alarm names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/alarmSounds.json
     *
     * Hash: 0x226435CB96CCFC8C | Since: 323
     */
    function isAlarmPlaying(alarmName: string): boolean;
    /**
     * Returns hash of default vehicle horn
     *
     * Hash is stored in audVehicleAudioEntity
     *
     * Hash: 0x02165D55000219AC | Since: 323
     */
    function getVehicleDefaultHorn(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xACB5DCCA1EC76840 | Since: 323
     */
    function getVehicleDefaultHornIgnoreMods(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xF54BB7B61036F335 | Since: 323
     */
    function resetPedFlags(ped: number | Ped): void;
    /**
     * Enables/disables ped's "loud" footstep sound.
     *
     * Hash: 0x0653B735BFBDFE87 | Since: 1493
     */
    function setPedFootstepsEventsEnabled(ped: number | Ped, toggle: boolean): void;
    /**
     * Enables/disables ped's "quiet" footstep sound.
     *
     * Hash: 0x29DA3CA8D8B2692D | Since: 1493
     */
    function setPedClothEventsEnabled(ped: number | Ped, toggle: boolean): void;
    /**
     * Sets audio flag "OverridePlayerGroundMaterial"
     *
     * Hash: 0xD2CC78CD3D0B50F9 | Since: 323
     */
    function overridePlayerGroundMaterial(hash: number | string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF4DC1784BE94DFA | Since: 323
     */
    function useFootstepScriptSweeteners(ped: number | Ped, hash: number | string): void;
    /**
     * Sets audio flag "OverrideMicrophoneSettings"
     *
     * Hash: 0x75773E11BA459E90 | Since: 323
     */
    function overrideMicrophoneSettings(hash: number | string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD57AAAE0E2214D11 | Since: 323
     */
    function freezeMicrophone(): void;
    /**
     * If value is set to true, and ambient siren sound will be played.
     * Appears to enable/disable an audio flag.
     *
     * Hash: 0x552369F549563AD5 | Since: 323
     */
    function distantCopCarSirens(value: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x43FA0DFC5DF87815 | Since: 323
     */
    function setSirenCanBeControlledBy(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xB81CF134AEB56FFB | Since: 791
     */
    function enableStuntJump(): void;
    /**
     * Possible flag names:
     * "ActivateSwitchWheelAudio"
     * "AllowAmbientSpeechInSlowMo"
     * "AllowCutsceneOverScreenFade"
     * "AllowForceRadioAfterRetune"
     * "AllowPainAndAmbientSpeechToPlayDuringCutscene"
     * "AllowPlayerAIOnMission"
     * "AllowPoliceScannerWhenPlayerHasNoControl"
     * "AllowRadioDuringSwitch"
     * "AllowRadioOverScreenFade"
     * "AllowScoreAndRadio"
     * "AllowScriptedSpeechInSlowMo"
     * "AvoidMissionCompleteDelay"
     * "DisableAbortConversationForDeathAndInjury"
     * "DisableAbortConversationForRagdoll"
     * "DisableBarks"
     * "DisableFlightMusic"
     * "DisableReplayScriptStreamRecording"
     * "EnableHeadsetBeep"
     * "ForceConversationInterrupt"
     * "ForceSeamlessRadioSwitch"
     * "ForceSniperAudio"
     * "FrontendRadioDisabled"
     * "HoldMissionCompleteWhenPrepared"
     * "IsDirectorModeActive"
     * "IsPlayerOnMissionForSpeech"
     * "ListenerReverbDisabled"
     * "LoadMPData"
     * "MobileRadioInGame"
     * "OnlyAllowScriptTriggerPoliceScanner"
     * "PlayMenuMusic"
     * "PoliceScannerDisabled"
     * "ScriptedConvListenerMaySpeak"
     * "SpeechDucksScore"
     * "SuppressPlayerScubaBreathing"
     * "WantedMusicDisabled"
     * "WantedMusicOnMission"
     *
     * -------------------------------
     * No added flag names between b393d and b573d, including b573d.
     *
     * #######################################################################
     *
     * "IsDirectorModeActive" is an audio flag which will allow you to play speech infinitely without any pauses like in Director Mode.
     *
     * -----------------------------------------------------------------------
     *
     * All flag IDs and hashes:
     *
     * ID: 00 | Hash: 0x0FED7A7F
     * ID: 01 | Hash: 0x20A7858F
     * ID: 02 | Hash: 0xA11C2259
     * ID: 03 | Hash: 0x08DE4700
     * ID: 04 | Hash: 0x989F652F
     * ID: 05 | Hash: 0x3C9E76BA
     * ID: 06 | Hash: 0xA805FEB0
     * ID: 07 | Hash: 0x4B94EA26
     * ID: 08 | Hash: 0x803ACD34
     * ID: 09 | Hash: 0x7C741226
     * ID: 10 | Hash: 0x31DB9EBD
     * ID: 11 | Hash: 0xDF386F18
     * ID: 12 | Hash: 0x669CED42
     * ID: 13 | Hash: 0x51F22743
     * ID: 14 | Hash: 0x2052B35C
     * ID: 15 | Hash: 0x071472DC
     * ID: 16 | Hash: 0xF9928BCC
     * ID: 17 | Hash: 0x7ADBDD48
     * ID: 18 | Hash: 0xA959BA1A
     * ID: 19 | Hash: 0xBBE89B60
     * ID: 20 | Hash: 0x87A08871
     * ID: 21 | Hash: 0xED1057CE
     * ID: 22 | Hash: 0x1584AD7A
     * ID: 23 | Hash: 0x8582CFCB
     * ID: 24 | Hash: 0x7E5E2FB0
     * ID: 25 | Hash: 0xAE4F72DB
     * ID: 26 | Hash: 0x5D16D1FA
     * ID: 27 | Hash: 0x06B2F4B8
     * ID: 28 | Hash: 0x5D4CDC96
     * ID: 29 | Hash: 0x8B5A48BA
     * ID: 30 | Hash: 0x98FBD539
     * ID: 31 | Hash: 0xD8CB0473
     * ID: 32 | Hash: 0x5CBB4874
     * ID: 33 | Hash: 0x2E9F93A9
     * ID: 34 | Hash: 0xD93BEA86
     * ID: 35 | Hash: 0x92109B7D
     * ID: 36 | Hash: 0xB7EC9E4D
     * ID: 37 | Hash: 0xCABDBB1D
     * ID: 38 | Hash: 0xB3FD4A52
     * ID: 39 | Hash: 0x370D94E5
     * ID: 40 | Hash: 0xA0F7938F
     * ID: 41 | Hash: 0xCBE1CE81
     * ID: 42 | Hash: 0xC27F1271
     * ID: 43 | Hash: 0x9E3258EB
     * ID: 44 | Hash: 0x551CDA5B
     * ID: 45 | Hash: 0xCB6D663C
     * ID: 46 | Hash: 0x7DACE87F
     * ID: 47 | Hash: 0xF9DE416F
     * ID: 48 | Hash: 0x882E6E9E
     * ID: 49 | Hash: 0x16B447E7
     * ID: 50 | Hash: 0xBD867739
     * ID: 51 | Hash: 0xA3A58604
     * ID: 52 | Hash: 0x7E046BBC
     * ID: 53 | Hash: 0xD95FDB98
     * ID: 54 | Hash: 0x5842C0ED
     * ID: 55 | Hash: 0x285FECC6
     * ID: 56 | Hash: 0x9351AC43
     * ID: 57 | Hash: 0x50032E75
     * ID: 58 | Hash: 0xAE6D0D59
     * ID: 59 | Hash: 0xD6351785
     * ID: 60 | Hash: 0xD25D71BC
     * ID: 61 | Hash: 0x1F7F6423
     * ID: 62 | Hash: 0xE24C3AA6
     * ID: 63 | Hash: 0xBFFDD2B7
     *
     * Hash: 0xB9EFD5C25018725A | Since: 323
     */
    function setFlag(flagName: string, toggle: boolean): void;
    /**
     * p1 is always 0 in the scripts
     *
     * Hash: 0xC7ABCACA4985A766 | Since: 323
     */
    function prepareSynchronizedEvent(audioEvent: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x029FE7CD1B7E2E75 | Since: 323
     */
    function prepareSynchronizedEventForScene(sceneID: number, audioEvent: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8B2FD4560E55DD2D | Since: 323
     */
    function playSynchronizedEvent(sceneID: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x92D6A88E64A94430 | Since: 323
     */
    function stopSynchronizedEvent(sceneID: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC8EDE9BDBCCBA6D4 | Since: 323
     */
    function initSynchSceneWithPosition(audioEvent: string, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x950A154B8DAB6185 | Since: 323
     */
    function initSynchSceneWithEntity(audioEvent: string, entity: number | Entity): void;
    /**
     * Needs to be called every frame.
     * Audio mode to apply this frame: https://alloc8or.re/gta5/doc/enums/audSpecialEffectMode.txt
     *
     * Hash: 0x12561FCBB62D5B9C | Since: 323
     */
    function setSpecialEffectMode(mode: number): void;
    /**
     * Found in the b617d scripts, duplicates removed:
     *
     * `AUDIO::SET_PORTAL_SETTINGS_OVERRIDE("V_CARSHOWROOM_PS_WINDOW_UNBROKEN", "V_CARSHOWROOM_PS_WINDOW_BROKEN");`
     *
     * `AUDIO::SET_PORTAL_SETTINGS_OVERRIDE("V_CIA_PS_WINDOW_UNBROKEN", "V_CIA_PS_WINDOW_BROKEN");`
     *
     * `AUDIO::SET_PORTAL_SETTINGS_OVERRIDE("V_DLC_HEIST_APARTMENT_DOOR_CLOSED", "V_DLC_HEIST_APARTMENT_DOOR_OPEN");`
     *
     * `AUDIO::SET_PORTAL_SETTINGS_OVERRIDE("V_FINALEBANK_PS_VAULT_INTACT", "V_FINALEBANK_PS_VAULT_BLOWN");`
     *
     * `AUDIO::SET_PORTAL_SETTINGS_OVERRIDE("V_MICHAEL_PS_BATHROOM_WITH_WINDOW", "V_MICHAEL_PS_BATHROOM_WITHOUT_WINDOW");`
     *
     * Hash: 0x044DBAD7A7FA2BE5 | Since: 323
     */
    function setPortalSettingsOverride(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC9D623C5A3D8FD5D | Since: 3570
     */
    function setIndividualPortalSettingsOverride(interiorNameHash: number | string, roomIndex: number, doorIndex: number, newPortalSettingsName: string): void;
    /**
     * Found in the b617d scripts, duplicates removed:
     *
     * `AUDIO::REMOVE_PORTAL_SETTINGS_OVERRIDE("V_CARSHOWROOM_PS_WINDOW_UNBROKEN");`
     * `AUDIO::REMOVE_PORTAL_SETTINGS_OVERRIDE("V_CIA_PS_WINDOW_UNBROKEN");`
     * `AUDIO::REMOVE_PORTAL_SETTINGS_OVERRIDE("V_DLC_HEIST_APARTMENT_DOOR_CLOSED");`
     * `AUDIO::REMOVE_PORTAL_SETTINGS_OVERRIDE("V_FINALEBANK_PS_VAULT_INTACT");`
     * `AUDIO::REMOVE_PORTAL_SETTINGS_OVERRIDE("V_MICHAEL_PS_BATHROOM_WITH_WINDOW");`
     *
     * Hash: 0xB4BBFD9CD8B3922B | Since: 323
     */
    function removePortalSettingsOverride(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8EF105736194F80C | Since: 3570
     */
    function removeIndividualPortalSettingsOverride(interiorNameHash: number | string, roomIndex: number, doorIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE4E6DD5566D28C82 | Since: 323
     */
    function stopSmokeGrenadeExplosionSounds(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3A48AB4445D499BE | Since: 323
     */
    function getMusicVolSlider(): number;
    /**
     * No comment provided
     *
     * Hash: 0x4ADA3F19BE4A6047 | Since: 323
     */
    function requestTennisBanks(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x0150B6FF25A9E2E5 | Since: 323
     */
    function unrequestTennisBanks(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBEF34B1D9624D5DD | Since: 323
     */
    function setSkipMinigunSpinUp(): void;
    /**
     * No comment provided
     *
     * Hash: 0x806058BBDC136E06 | Since: 323
     */
    function stopCutscene(): void;
    /**
     * No comment provided
     *
     * Hash: 0x544810ED9DB6BBE6 | Since: 323
     */
    function hasLoadedMpDataSet(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5B50ABB1FE3746F4 | Since: 323
     */
    function hasLoadedSpDataSet(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD53F3A29BCE2580E | Since: 1365
     */
    function getVehicleHornSoundIndex(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x0350E7E17BA767D0 | Since: 1365
     */
    function setVehicleHornSoundIndex(vehicle: number | Vehicle, value: number): void;
}
export declare namespace brain {
    /**
     * `BRAIN::ADD_SCRIPT_TO_RANDOM_PED("pb_prostitute", ${s_f_y_hooker_01}, 100, 0);`
     *
     * - Nacorpio
     *
     * -----
     *
     * Hardcoded to not work in Multiplayer.
     *
     * Hash: 0x4EE5367468A65CCC | Since: 323
     */
    function addScriptToRandomPed(name: string, model: number | string): void;
    /**
     * Registers a script for any object with a specific model hash.
     *
     * `BRAIN::REGISTER_OBJECT_SCRIPT_BRAIN("ob_telescope", ${prop_telescope_01}, 100, 4.0, -1, 9);`
     *
     * - Nacorpio
     *
     * Hash: 0x0BE84C318BA6EC22 | Since: 323
     */
    function registerObjectScript(scriptName: string, modelHash: number | string, activationRange: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCCBA154209823057 | Since: 323
     */
    function isObjectWithinActivationRange(_object: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3CDC7136613284BD | Since: 323
     */
    function registerWorldPointScript(scriptName: string, activationRange: number): void;
    /**
     * Gets whether the world point the calling script is registered to is within desired range of the player.
     *
     * Hash: 0xC5042CC6F5E3D450 | Since: 323
     */
    function isWorldPointWithinActivationRange(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x67AA4D73F0CFA86B | Since: 323
     */
    function enableScriptSet(brainSet: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x14D8518E9760F08F | Since: 323
     */
    function disableScriptSet(brainSet: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0B40ED49D7D6FF84 | Since: 323
     */
    function reactivateAllWorldsThatAreWaitingTillOutOfRange(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4D953DF78EBF8158 | Since: 323
     */
    function reactivateAllObjectsThatAreWaitingTillOutOfRange(): void;
    /**
     * Possible values:
     *
     * act_cinema
     * am_mp_carwash_launch
     * am_mp_carwash_control
     * am_mp_property_ext
     * chop
     * fairgroundHub
     * launcher_BasejumpHeli
     * launcher_BasejumpPack
     * launcher_CarWash
     * launcher_golf
     * launcher_Hunting_Ambient
     * launcher_MrsPhilips
     * launcher_OffroadRacing
     * launcher_pilotschool
     * launcher_Racing
     * launcher_rampage
     * launcher_rampage
     * launcher_range
     * launcher_stunts
     * launcher_stunts
     * launcher_tennis
     * launcher_Tonya
     * launcher_Triathlon
     * launcher_Yoga
     * ob_mp_bed_low
     * ob_mp_bed_med
     *
     * Hash: 0x6D6840CEE8845831 | Since: 323
     */
    function reactivateNamedWorldsWaitingTillOutOfRange(scriptName: string): void;
    /**
     * Looks like a cousin of above function _6D6840CEE8845831 as it was found among them. Must be similar
     *
     * Here are possible values of argument -
     *
     * "ob_tv"
     * "launcher_Darts"
     *
     * Hash: 0x6E91B04E08773030 | Since: 323
     */
    function reactivateNamedObjectsWaitingTillOutOfRange(scriptName: string): void;
}
export declare namespace cam {
    /**
     * ease - smooth transition between the camera's positions
     * easeTime - Time in milliseconds for the transition to happen
     *
     * If you have created a script (rendering) camera, and want to go back to the
     * character (gameplay) camera, call this native with render set to 0.
     * Setting ease to 1 will smooth the transition.
     *
     * Hash: 0x07E5B515DB0636FC | Since: 323
     */
    function renderScripts(render: boolean, ease: boolean, easeTime: number): void;
    /**
     * This native makes the gameplay camera zoom into first person/third person with a special effect.
     *
     * Hash: 0xC819F3CBB62BF692 | Since: 323
     */
    function stopRenderingScriptsUsingCatchUp(render: boolean): void;
    /**
     * "DEFAULT_SCRIPTED_CAMERA"
     * "DEFAULT_ANIMATED_CAMERA"
     * "DEFAULT_SPLINE_CAMERA"
     * "DEFAULT_SCRIPTED_FLY_CAMERA"
     * "TIMED_SPLINE_CAMERA"
     *
     * Hash: 0xC3981DCE61D9E13F | Since: 323
     */
    function create(camName: string): number;
    /**
     * camName is always set to "DEFAULT_SCRIPTED_CAMERA" in Rockstar's scripts.
     * ------------
     * Camera names found in the b617d scripts:
     * "DEFAULT_ANIMATED_CAMERA"
     * "DEFAULT_SCRIPTED_CAMERA"
     * "DEFAULT_SCRIPTED_FLY_CAMERA"
     * "DEFAULT_SPLINE_CAMERA"
     * ------------
     * Side Note: It seems p8 is basically to represent what would be the bool p1 within CREATE_CAM native. As well as the p9 since it's always 2 in scripts seems to represent what would be the last param within SET_CAM_ROT native which normally would be 2.
     *
     * Hash: 0xB51194800B257161 | Since: 323
     */
    function createWithParams(camName: string, pos: Vector3, rot: Vector3, fov: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x5E3CF89C6BCCA67D | Since: 323
     */
    function createera(camHash: number | string): number;
    /**
     * p9 uses 2 by default
     *
     * Hash: 0x6ABFA3E16460F22D | Since: 323
     */
    function createeraWithParams(camHash: number | string, pos: Vector3, rot: Vector3, fov: number): number;
    /**
     * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
     *
     * Hash: 0x865908C81A2C22E9 | Since: 323
     */
    function destroy(cam: number | Camera, bScriptHostCam: boolean): void;
    /**
     * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
     *
     * Hash: 0x8E5FB15663F79120 | Since: 323
     */
    function destroyAlls(bScriptHostCam: boolean): void;
    /**
     * Returns whether or not the passed camera handle exists.
     *
     * Hash: 0xA7A932170592B50E | Since: 323
     */
    function doesExist(cam: number | Camera): boolean;
    /**
     * Set camera as active/inactive.
     *
     * Hash: 0x026FB97D0A425F84 | Since: 323
     */
    function setActive(cam: number | Camera, active: boolean): void;
    /**
     * Returns whether or not the passed camera handle is active.
     *
     * Hash: 0xDFB2B516207D3534 | Since: 323
     */
    function isActive(cam: number | Camera): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x02EC0AF5C5A49B7A | Since: 323
     */
    function isRendering(cam: number | Camera): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5234F9F10919EABA | Since: 323
     */
    function getRendering(): number;
    /**
     * No comment provided
     *
     * Hash: 0xBAC038F7459AE5AE | Since: 323
     */
    function getCoord(cam: number | Camera): Vector3;
    /**
     * The last parameter, as in other "ROT" methods, is usually 2.
     *
     * Hash: 0x7D304C1C955E3E12 | Since: 323
     */
    function getRot(cam: number | Camera, rotationOrder: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xC3330A45CCCDB26A | Since: 323
     */
    function getFov(cam: number | Camera): number;
    /**
     * No comment provided
     *
     * Hash: 0xC520A34DAFBF24B1 | Since: 323
     */
    function getNearClip(cam: number | Camera): number;
    /**
     * No comment provided
     *
     * Hash: 0xB60A9CFEB21CA6AA | Since: 323
     */
    function getFarClip(cam: number | Camera): number;
    /**
     * No comment provided
     *
     * Hash: 0xC2612D223D915A1C | Since: 2699
     */
    function getNearDof(cam: number | Camera): number;
    /**
     * No comment provided
     *
     * Hash: 0x255F8DAFD540D397 | Since: 323
     */
    function getFarDof(cam: number | Camera): number;
    /**
     * No comment provided
     *
     * Hash: 0x06D153C0B99B6128 | Since: 2699
     */
    function getDofStrength(cam: number | Camera): number;
    /**
     * No comment provided
     *
     * Hash: 0xBFD8727AEA3CCEBA | Since: 323
     */
    function setParams(cam: number | Camera, pos: Vector3, rot: Vector3, fieldOfView: number): void;
    /**
     * Sets the position of the cam.
     *
     * Hash: 0x4D41783FB745E42E | Since: 323
     */
    function setCoord(cam: number | Camera, pos: Vector3): void;
    /**
     * Sets the rotation of the cam.
     * Last parameter unknown.
     *
     * Last parameter seems to always be set to 2.
     *
     * Hash: 0x85973643155D0B07 | Since: 323
     */
    function setRot(cam: number | Camera, rot: Vector3, rotationOrder: number): void;
    /**
     * Sets the field of view of the cam.
     * ---------------------------------------------
     * Min: 1.0f
     * Max: 130.0f
     *
     * Hash: 0xB13C14F66A00D047 | Since: 323
     */
    function setFov(cam: number | Camera, fieldOfView: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC7848EFCCC545182 | Since: 323
     */
    function setNearClip(cam: number | Camera, nearClip: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAE306F2A904BF86E | Since: 323
     */
    function setFarClip(cam: number | Camera, farClip: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAABD62873FFB1A33 | Since: 2189
     */
    function forceFarClip(cam: number | Camera): void;
    /**
     * No comment provided
     *
     * Hash: 0x6F0F77FBA9A8F2E6 | Since: 323
     */
    function setMotionBlurStrength(cam: number | Camera, strength: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3FA4BF0A7AB7DE2C | Since: 323
     */
    function setNearDof(cam: number | Camera, nearDOF: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEDD91296CD01AEE0 | Since: 323
     */
    function setFarDof(cam: number | Camera, farDOF: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5EE29B4D7D5DF897 | Since: 323
     */
    function setDofStrength(cam: number | Camera, dofStrength: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3CF48F6F96E749DC | Since: 323
     */
    function setDofPlanes(cam: number | Camera): void;
    /**
     * No comment provided
     *
     * Hash: 0x16A96863A17552BB | Since: 323
     */
    function setUseShallowDofMode(cam: number | Camera, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA13B0222F3D94A94 | Since: 323
     */
    function setUseHiDof(): void;
    /**
     * Only used in R* Script fm_mission_controller_2020
     *
     * Hash: 0x731A880555DA3647 | Since: 2699
     */
    function setUseHiDofOnSyncedSceneThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF55E4046F6F831DC | Since: 323
     */
    function setDofOverriddenFocusDistance(camera: number | Camera): void;
    /**
     * No comment provided
     *
     * Hash: 0xE111A7C0D200CBC5 | Since: 323
     */
    function setDofOverriddenFocusDistanceBlendLevel(): void;
    /**
     * This native has its name defined inside its codE
     *
     *
     * Hash: 0x7DD234D6F3914C5B | Since: 323
     */
    function setDofFnumberOfLens(camera: number | Camera): void;
    /**
     * Native name labeled within its code
     *
     * Hash: 0x47B595D60664CFFA | Since: 1011
     */
    function setDofFocalLengthMultiplier(camera: number | Camera, multiplier: number): void;
    /**
     * This native has a name defined inside its code
     *
     * Hash: 0xC669EEA5D031B7DE | Since: 323
     */
    function setDofFocusDistanceBias(camera: number | Camera): void;
    /**
     * This native has a name defined inside its code
     *
     * Hash: 0xC3654A441402562D | Since: 323
     */
    function setDofMaxNearInFocusDistance(camera: number | Camera): void;
    /**
     * This native has a name defined inside its code
     *
     * Hash: 0x2C654B4943BDDF7C | Since: 323
     */
    function setDofMaxNearInFocusDistanceBlendLevel(camera: number | Camera): void;
    /**
     * This native has a name defined inside its code
     *
     * Hash: 0x7CF3AF51DCFE4108 | Since: 2944
     */
    function setDofShouldKeepLookAtTargetInFocus(camera: number | Camera, state: boolean): void;
    /**
     * Last param determines if its relative to the Entity
     *
     * Hash: 0xFEDB7D269E8C60E3 | Since: 323
     */
    function attachToEntity(cam: number | Camera, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, isRelative: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x61A3DBA14AB7F411 | Since: 323
     */
    function attachToPedBone(cam: number | Camera, ped: number | Ped, boneIndex: number, pos: Vector3, heading: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x149916F50C34A40D | Since: 1180
     */
    function hardAttachToPedBone(cam: number | Camera, ped: number | Ped, boneIndex: number): void;
    /**
     * Example from am_mp_drone script:
     *
     * `CAM::HARD_ATTACH_CAM_TO_ENTITY(Local_190.f_169, NETWORK::NET_TO_OBJ(Local_190.f_159), 0f, 0f, 180f, Var0, 1);`
     *
     * Hash: 0x202A5ED9CE01D6E7 | Since: 2189
     */
    function hardAttachToEntity(cam: number | Camera, entity: number | Entity, rot: Vector3, xOffset: number, yOffset: number, zOffset: number, isRelative: boolean): void;
    /**
     * This native works with vehicles only. Bone indexes are usually given by this native GET_ENTITY_BONE_INDEX_BY_NAME.
     *
     * Hash: 0x8DB3F12A02CAEF72 | Since: 1290
     */
    function attachToVehicleBone(cam: number | Camera, vehicle: number | Vehicle, boneIndex: number, relativeRotation: boolean, rot: Vector3, offsetX: number, offsetY: number, offsetZ: number, fixedDirection: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA2FABBE87F4BAD82 | Since: 323
     */
    function detach(cam: number | Camera): void;
    /**
     * The native seems to only be called once.
     *
     * The native is used as so,
     * `CAM::SET_CAM_INHERIT_ROLL_VEHICLE(l_544, getElem(2, &l_525, 4));`
     * In the exile1 script.
     *
     * Hash: 0x45F1DE9C34B93AE6 | Since: 323
     */
    function setInheritRollVehicle(cam: number | Camera): void;
    /**
     * No comment provided
     *
     * Hash: 0xF75497BB865F0803 | Since: 323
     */
    function pointAtCoord(cam: number | Camera, pos: Vector3): void;
    /**
     * p5 always seems to be 1 i.e TRUE
     *
     * Hash: 0x5640BFF86B16E8DC | Since: 323
     */
    function pointAtEntity(cam: number | Camera, entity: number | Entity): void;
    /**
     * Parameters p0-p5 seems correct. The bool p6 is unknown, but through every X360 script it's always 1. Please correct p0-p5 if any prove to be wrong.
     *
     * Hash: 0x68B2B5F33BA63C41 | Since: 323
     */
    function pointAtPedBone(cam: number | Camera, ped: number | Ped, boneIndex: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xF33AB75780BA57DE | Since: 323
     */
    function stopPointing(cam: number | Camera): void;
    /**
     * Allows you to aim and shoot at the direction the camera is facing.
     *
     * Hash: 0x8C1DC7770C51DC8D | Since: 323
     */
    function setAffectsAiming(cam: number | Camera, toggle: boolean): void;
    /**
     * Rotates the radar to match the camera's Z rotation
     *
     * Hash: 0x661B5C8654ADD825 | Since: 323
     */
    function setControlsMiniMapHeading(cam: number | Camera, toggle: boolean): void;
    /**
     * When set to true shadows appear more smooth but less detailed.
     * Set to false by default.
     *
     * Hash: 0xA2767257A320FC82 | Since: 323
     */
    function setIsInsideVehicle(cam: number | Camera, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x271017B9BA825366 | Since: 323
     */
    function allowMotionBlurDecay(): void;
    /**
     * NOTE: Debugging functions are not present in the retail version of the game.
     *
     * Hash: 0x1B93E0107865DD40 | Since: 323
     */
    function setDebugName(camera: number | Camera, name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x77C3CEC46BE286F6 | Since: 2372
     */
    function getDebug(): number;
    /**
     * I filled p1-p6 (the floats) as they are as other natives with 6 floats in a row are similar and I see no other method. So if a test from anyone proves them wrong please correct.
     *
     * p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one
     *
     * p8 big values ~100 will slow down the camera movement before reaching this node
     *
     * p9 != 0 seems to override the rotation/pitch (bool?)
     *
     * Hash: 0x8609C75EC438FB3B | Since: 323
     */
    function addSplineNode(camera: number | Camera, pos: Vector3, rot: Vector3, length: number, smoothingStyle: number, rotationOrder: number): void;
    /**
     * p0 is the spline camera to which the node is being added.
     * p1 is the camera used to create the node.
     * p3 is always 3 in scripts. It might be smoothing style or rotation order.
     *
     * Hash: 0x0A9F2A468B328E74 | Since: 323
     */
    function addSplineNodeUsingCameraFrame(cam: number | Camera, cam2: number | Camera, length: number): void;
    /**
     * p0 is the spline camera to which the node is being added.
     * p1 is the camera used to create the node.
     * p3 is always 3 in scripts. It might be smoothing style or rotation order.
     *
     * Hash: 0x0FB82563989CF4FB | Since: 323
     */
    function addSplineNodeUsingCamera(cam: number | Camera, cam2: number | Camera, length: number): void;
    /**
     * p2 is always 2 in scripts. It might be smoothing style or rotation order.
     *
     * Hash: 0x609278246A29CA34 | Since: 323
     */
    function addSplineNodeUsingGameplayFrame(cam: number | Camera, length: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x242B5874F0A4E052 | Since: 323
     */
    function setSplinePhase(cam: number | Camera): void;
    /**
     * Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.
     *
     * (returns 1.0f when no nodes has been added, reached end of non existing spline)
     *
     * Hash: 0xB5349E36C546509A | Since: 323
     */
    function getSplinePhase(cam: number | Camera): number;
    /**
     * I'm pretty sure the parameter is the camera as usual, but I am not certain so I'm going to leave it as is.
     *
     * Hash: 0xD9D0E694C8282C96 | Since: 323
     */
    function getSplineNodePhase(cam: number | Camera): number;
    /**
     * I named p1 as timeDuration as it is obvious. I'm assuming tho it is ran in ms(Milliseconds) as usual.
     *
     * Hash: 0x1381539FEE034CDA | Since: 323
     */
    function setSplineDuration(cam: number | Camera, timeDuration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1B0F412F109EA5D | Since: 323
     */
    function setSplineSmoothingStyle(cam: number | Camera, smoothingStyle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB22B17DF858716A6 | Since: 323
     */
    function getSplineNodeIndex(cam: number | Camera): number;
    /**
     * No comment provided
     *
     * Hash: 0x83B8201ED82A9A2D | Since: 323
     */
    function setSplineNodeEase(cam: number | Camera, easingFunction: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA6385DEB180F319F | Since: 323
     */
    function setSplineNodeVelocityScale(cam: number | Camera, scale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x40B62FA033EB0346 | Since: 323
     */
    function overrideSplineVelocity(cam: number | Camera): void;
    /**
     * Max value for p1 is 15.
     *
     * Hash: 0x7DCF7C708D292D55 | Since: 323
     */
    function overrideSplineMotionBlur(cam: number | Camera): void;
    /**
     * No comment provided
     *
     * Hash: 0x7BF1A54AE67AC070 | Since: 323
     */
    function setSplineNodeExtraFlags(cam: number | Camera, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0290F35C0AD97864 | Since: 323
     */
    function isSplinePaused(cam: number | Camera): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDDA77EE33C005AAF | Since: 3258
     */
    function interpolateWithParams(camera: number | Camera, camPosX: number, camPosY: number, camPosZ: number, camRotX: number, camRotY: number, camRotZ: number, fov: number, duration: number, posCurveType: number, rotCurveType: number, rotOrder: number, fovCurveType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x34CFC4C2A38E83E3 | Since: 3258
     */
    function activateWithInterpAndFovCurve(camTo: number | Camera, camFrom: number | Camera, duration: number, easeLocation: number, easeRotation: number, easeFov: number): void;
    /**
     * Previous declaration void SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, BOOL easeLocation, BOOL easeRotation) is completely wrong. The last two params are integers not BOOLs...
     *
     *
     * Hash: 0x9FBDA379383A52A4 | Since: 323
     */
    function setActiveWithInterp(camTo: number | Camera, camFrom: number | Camera, duration: number, easeLocation: number, easeRotation: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x036F97C908C2B52C | Since: 323
     */
    function isInterpolating(cam: number | Camera): boolean;
    /**
     * Possible shake types (updated b617d):
     *
     * DEATH_FAIL_IN_EFFECT_SHAKE
     * DRUNK_SHAKE
     * FAMILY5_DRUG_TRIP_SHAKE
     * HAND_SHAKE
     * JOLT_SHAKE
     * LARGE_EXPLOSION_SHAKE
     * MEDIUM_EXPLOSION_SHAKE
     * SMALL_EXPLOSION_SHAKE
     * ROAD_VIBRATION_SHAKE
     * SKY_DIVING_SHAKE
     * VIBRATE_SHAKE
     *
     * Full list of cam shake types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/camShakeTypesCompact.json
     *
     * Hash: 0x6A25241C340D3822 | Since: 323
     */
    function shake(cam: number | Camera, _type: string, amplitude: number): void;
    /**
     * Example from michael2 script.
     *
     * `CAM::ANIMATED_SHAKE_CAM(l_5069, "shake_cam_all@", "light", "", 1f);`
     *
     * Hash: 0xA2746EEAE3E577CD | Since: 323
     */
    function animatedShake(cam: number | Camera, amplitude: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B24BFE83A2BE47B | Since: 323
     */
    function isShaking(cam: number | Camera): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD93DB43B82BC0D00 | Since: 323
     */
    function setShakeAmplitude(cam: number | Camera, amplitude: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBDECF64367884AC3 | Since: 323
     */
    function stopShaking(cam: number | Camera): void;
    /**
     * `CAM::SHAKE_SCRIPT_GLOBAL("HAND_SHAKE", 0.2);`
     *
     * Full list of cam shake types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/camShakeTypesCompact.json
     *
     * Hash: 0xF4C8CF9E353AFECA | Since: 323
     */
    function shakeScriptGlobal(): void;
    /**
     * `CAM::ANIMATED_SHAKE_SCRIPT_GLOBAL("SHAKE_CAM_medium", "medium", "", 0.5f);`
     *
     * Full list of cam shake types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/camShakeTypesCompact.json
     *
     * Hash: 0xC2EAE3FB8CDBED31 | Since: 323
     */
    function animatedShakeScriptGlobal(): void;
    /**
     * In drunk_controller.c4, sub_309
     * `if (CAM::IS_SCRIPT_GLOBAL_SHAKING()) {`
     * `CAM::STOP_SCRIPT_GLOBAL_SHAKING(0);`
     * }
     *
     * Hash: 0xC912AF078AF19212 | Since: 323
     */
    function isScriptGlobalShaking(): boolean;
    /**
     * In drunk_controller.c4, sub_309
     * `if (CAM::IS_SCRIPT_GLOBAL_SHAKING()) {`
     * `CAM::STOP_SCRIPT_GLOBAL_SHAKING(0);`
     * }
     *
     * Hash: 0x1C9D7949FA533490 | Since: 323
     */
    function stopScriptGlobalShaking(): void;
    /**
     * p1: 0..16
     *
     * Hash: 0x5D96CFB59DA076A0 | Since: 2060
     */
    function triggerVehiclePartBrokeneraShake(vehicle: number | Vehicle): void;
    /**
     * Atleast one time in a script for the zRot Rockstar uses GET_ENTITY_HEADING to help fill the parameter.
     *
     * p9 is unknown at this time.
     * p10 throughout all the X360 Scripts is always 2.
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x9A2D0FB2E7852392 | Since: 323
     */
    function playAnim(cam: number | Camera, animName: string, animDictionary: string, pos: Vector3, rot: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC90621D8A0CEECF2 | Since: 323
     */
    function isPlayingAnim(cam: number | Camera, animName: string, animDictionary: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4145A4C44FF3B5A6 | Since: 323
     */
    function setAnimCurrentPhase(cam: number | Camera, phase: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA10B2DB49E92A6B0 | Since: 323
     */
    function getAnimCurrentPhase(cam: number | Camera): number;
    /**
     * Examples:
     *
     * `CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_2734, NETWORK::NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(l_2739), "PLAYER_EXIT_L_CAM", "mp_doorbell");`
     *
     * `CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_F0D[7\/\*1\*\/], l_F4D[15\/\*1\*\/], "ah3b_attackheli_cam2", "missheistfbi3b_helicrash");`
     *
     * Hash: 0xE32EFE9AB4A9AA0C | Since: 323
     */
    function playSynchronizedAnim(animName: string, animDictionary: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x503F5920162365B2 | Since: 323
     */
    function setFlyHorizontalResponse(cam: number | Camera): void;
    /**
     * No comment provided
     *
     * Hash: 0xE827B9382CFB41BA | Since: 791
     */
    function setFlyVerticalResponse(cam: number | Camera): void;
    /**
     * No comment provided
     *
     * Hash: 0xF9D02130ECDD1D77 | Since: 323
     */
    function setFlyMaxHeight(cam: number | Camera, height: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC91C6C55199308CA | Since: 323
     */
    function setFlyCoordAndConstrain(cam: number | Camera, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xC8B5C4A79CC18B94 | Since: 323
     */
    function setFlyVerticalControlsThisUpdate(cam: number | Camera): void;
    /**
     * No comment provided
     *
     * Hash: 0x5C48A1D6E3B33179 | Since: 323
     */
    function wasFlyConstrainedOnPreviousUdpate(cam: number | Camera): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB16FCE9DDC7BA182 | Since: 323
     */
    function isScreenFadedOut(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5A859503B0C08678 | Since: 323
     */
    function isScreenFadedIn(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x797AC7CB535BA28F | Since: 323
     */
    function isScreenFadingOut(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5C544BC6C57AC575 | Since: 323
     */
    function isScreenFadingIn(): boolean;
    /**
     * Fades the screen in.
     *
     * duration: The time the fade should take, in milliseconds.
     *
     * Hash: 0xD4E8E24955024033 | Since: 323
     */
    function doScreenFadeIn(duration: number): void;
    /**
     * Fades the screen out.
     *
     * duration: The time the fade should take, in milliseconds.
     *
     * Hash: 0x891B5B39AC6302AF | Since: 323
     */
    function doScreenFadeOut(duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDCD4EA924F42D01A | Since: 323
     */
    function setWidescreenBorders(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4879E4FE39074CDF | Since: 372
     */
    function areWidescreenBordersActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x14D6F5678D8F1B37 | Since: 323
     */
    function getGameplayCoord(): Vector3;
    /**
     * p0 dosen't seem to change much, I tried it with 0, 1, 2:
     * 0-Pitch(X): -70.000092
     * 0-Roll(Y): -0.000001
     * 0-Yaw(Z): -43.886459
     * 1-Pitch(X): -70.000092
     * 1-Roll(Y): -0.000001
     * 1-Yaw(Z): -43.886463
     * 2-Pitch(X): -70.000092
     * 2-Roll(Y): -0.000002
     * 2-Yaw(Z): -43.886467
     *
     * Hash: 0x837765A25378F0BB | Since: 323
     */
    function getGameplayRot(rotationOrder: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x65019750A0324133 | Since: 323
     */
    function getGameplayFov(): number;
    /**
     * some camera effect that is used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled.
     *
     * Hash: 0x487A82C650EB7799 | Since: 323
     */
    function setGameplayMotionBlurScalingThisUpdate(): void;
    /**
     * some camera effect that is (also) used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled.
     *
     * Hash: 0x0225778816FDC28C | Since: 323
     */
    function setGameplayMaxMotionBlurStrengthThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x743607648ADD4587 | Since: 323
     */
    function getGameplayRelativeHeading(): number;
    /**
     * Sets the camera position relative to heading in float from -360 to +360.
     *
     * Heading is alwyas 0 in aiming camera.
     *
     * Hash: 0xB4EC2312F4E5B1F1 | Since: 323
     */
    function setGameplayRelativeHeading(heading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3A6867B4845BEDA2 | Since: 323
     */
    function getGameplayRelativePitch(): number;
    /**
     * This native sets the camera's pitch (rotation on the x-axis).
     *
     * Hash: 0x6D0858B8EDFD2B7D | Since: 323
     */
    function setGameplayRelativePitch(angle: number, scalingFactor: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7295C203DD659DFE | Since: 2699
     */
    function resetGameplayFullAttachParentTransformTimer(): void;
    /**
     * No comment provided
     *
     * Hash: 0x48608C3464F58AB4 | Since: 505
     */
    function forceeraRelativeHeadingAndPitch(roll: number, pitch: number, yaw: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x28B022A17B068A3A | Since: 1734
     */
    function forceBonneteraRelativeHeadingAndPitch(): void;
    /**
     * Does nothing
     *
     * Hash: 0x103991D4A307D472 | Since: 323
     */
    function setFirstPersonShootereraHeading(yaw: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x759E13EBC1C15C5A | Since: 323
     */
    function setFirstPersonShootereraPitch(pitch: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x469F2ECDEC046337 | Since: 323
     */
    function setScriptederaIsFirstPersonThisFrame(): void;
    /**
     * Possible shake types (updated b617d):
     *
     * DEATH_FAIL_IN_EFFECT_SHAKE
     * DRUNK_SHAKE
     * FAMILY5_DRUG_TRIP_SHAKE
     * HAND_SHAKE
     * JOLT_SHAKE
     * LARGE_EXPLOSION_SHAKE
     * MEDIUM_EXPLOSION_SHAKE
     * SMALL_EXPLOSION_SHAKE
     * ROAD_VIBRATION_SHAKE
     * SKY_DIVING_SHAKE
     * VIBRATE_SHAKE
     *
     * Full list of cam shake types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/camShakeTypesCompact.json
     *
     * Hash: 0xFD55E49555E017CF | Since: 323
     */
    function shakeGameplay(shakeName: string, intensity: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x016C090630DF1F89 | Since: 323
     */
    function isGameplayShaking(): boolean;
    /**
     * Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake. Used in script "drunk_controller.ysc.c4" to simulate making the player drunk.
     *
     * Hash: 0xA87E00932DB4D85D | Since: 323
     */
    function setGameplayShakeAmplitude(amplitude: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0EF93E9F3D08C178 | Since: 323
     */
    function stopGameplayShaking(): void;
    /**
     * Forces gameplay cam to specified ped as if you were the ped or spectating it
     *
     * Hash: 0x8BBACBF51DA047A8 | Since: 323
     */
    function setGameplayFollowPedThisUpdate(ped: number | Ped): void;
    /**
     * Examples when this function will return 0 are:
     * - During busted screen.
     * - When player is coming out from a hospital.
     * - When player is coming out from a police station.
     * - When player is buying gun from AmmuNation.
     *
     * Hash: 0x39B5D1B10383F0C8 | Since: 323
     */
    function isGameplayRendering(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3044240D2E0FA842 | Since: 323
     */
    function isInterpolatingFromScripts(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x705A276EBFF3133D | Since: 323
     */
    function isInterpolatingToScripts(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDB90C6CCA48940F1 | Since: 323
     */
    function setGameplayAltitudeFovScalingState(): void;
    /**
     * Shows the crosshair even if it wouldn't show normally. Only works for one frame, so make sure to call it repeatedly.
     *
     * Hash: 0xEA7F0AD7E9BA676F | Since: 323
     */
    function disableGameplayAltitudeFovScalingThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x70FDA869F3317EA9 | Since: 323
     */
    function isGameplayLookingBehind(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2AED6301F67007D5 | Since: 323
     */
    function setGameplayIgnoreEntityCollisionThisUpdate(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x49482F9FCD825AAA | Since: 323
     */
    function disableCollisionForObject(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xA7092AFE81944852 | Since: 2189
     */
    function bypasseraCollisionBuoyancyTestThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFD3151CD37EA2245 | Since: 323
     */
    function setGameplayEntityToLimitFocusOverBoundingSphereThisUpdate(entity: number | Entity): void;
    /**
     * Sets some flag on cinematic camera
     *
     * Hash: 0xB1381B97F70C7B30 | Since: 1180
     */
    function disableFirstPersoneraWaterClippingTestThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDD79DF9F4D26E1C9 | Since: 323
     */
    function setFollowIgnoreAttachParentMovementThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE33D59DA70B58FDF | Since: 323
     */
    function isSphereVisible(pos: Vector3, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC6D3D26810C8E0F9 | Since: 323
     */
    function isFollowPedActive(): boolean;
    /**
     * From the scripts:
     *
     * `CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_ATTACHED_TO_ROPE_CAMERA", 0);`
     * `CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_ON_EXILE1_LADDER_CAMERA", 1500);`
     * `CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 0);`
     * `CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 3000);`
     * `CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_FAMILY5_CAMERA", 0);`
     * `CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 0);`
     *
     * Hash: 0x44A113DD6FFC48D1 | Since: 323
     */
    function setFollowPedThisUpdate(camName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x271401846BD26E92 | Since: 323
     */
    function useScriptForAmbientPopulationOriginThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC8391C309684595A | Since: 323
     */
    function setFollowPedLadderAlignThisUpdate(): void;
    /**
     * minimum: Degrees between -180f and 180f.
     * maximum: Degrees between -180f and 180f.
     *
     * Clamps the gameplay camera's current yaw.
     *
     * Eg. SET_THIRD_PERSON_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE(0.0f, 0.0f) will set the horizontal angle directly behind the player.
     *
     * Hash: 0x8F993D26E0CA5E8E | Since: 323
     */
    function setThirdPersonRelativeHeadingLimitsThisUpdate(minimum: number, maximum: number): void;
    /**
     * minimum: Degrees between -90f and 90f.
     * maximum: Degrees between -90f and 90f.
     *
     * Clamps the gameplay camera's current pitch.
     *
     * Eg. SET_THIRD_PERSON_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE(0.0f, 0.0f) will set the vertical angle directly behind the player.
     *
     * Hash: 0xA516C198B7DCA1E1 | Since: 323
     */
    function setThirdPersonRelativePitchLimitsThisUpdate(minimum: number, maximum: number): void;
    /**
     * Seems to animate the gameplay camera zoom.
     *
     * Eg. SET_THIRD_PERSON_CAM_ORBIT_DISTANCE_LIMITS_THIS_UPDATE(1f, 1000f);
     * will animate the camera zooming in from 1000 meters away.
     *
     * Game scripts use it like this:
     *
     * // Setting this to 1 prevents V key from changing zoom
     * `PLAYER::SET_PLAYER_FORCED_ZOOM(PLAYER::PLAYER_ID(), 1);`
     *
     * // These restrict how far you can move cam up/down left/right
     * `CAM::SET_THIRD_PERSON_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE(-20f, 50f);`
     * `CAM::SET_THIRD_PERSON_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE(-60f, 0f);`
     *
     * `CAM::SET_THIRD_PERSON_CAM_ORBIT_DISTANCE_LIMITS_THIS_UPDATE(1f, 1f);`
     *
     * Hash: 0xDF2E1F7742402E81 | Since: 323
     */
    function setThirdPersonOrbitDistanceLimitsThisUpdate(distance: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC456FB703431785 | Since: 3095
     */
    function getThirdPersonMinOrbitDistanceSpring(): number;
    /**
     * No comment provided
     *
     * Hash: 0xD4592A16D36673ED | Since: 3095
     */
    function getThirdPersonMaxOrbitDistanceSpring(): number;
    /**
     * Forces gameplay cam to specified vehicle as if you were in it
     *
     * Hash: 0xE9EA16D6E54CDCA4 | Since: 323
     */
    function setInVehicleStateThisUpdate(p0: number | Vehicle): void;
    /**
     * Disables first person camera for the current frame.
     *
     * Found in decompiled scripts:
     * `GRAPHICS::DRAW_DEBUG_TEXT_2D("Disabling First Person Cam", 0.5, 0.8, 0.0, 0, 0, 255, 255);`
     * `CAM::DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE();`
     *
     * Hash: 0xDE2EF5DA284CC8DF | Since: 323
     */
    function disableOnFootFirstPersonViewThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x59424BD75174C9B1 | Since: 323
     */
    function disableFirstPersonFlashEffectThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9F97DA93681F87EA | Since: 1734
     */
    function blockFirstPersonOrientationResetThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x33E6C8EFD0CD93E9 | Since: 323
     */
    function getFollowPedZoomLevel(): number;
    /**
     * See viewmode enum in CAM.GET_FOLLOW_VEHICLE_CAM_VIEW_MODE for return value
     *
     * Hash: 0x8D4D46230B2C353A | Since: 323
     */
    function getFollowPedViewMode(): number;
    /**
     * Sets the type of Player camera:
     *
     * 0 - Third Person Close
     * 1 - Third Person Mid
     * 2 - Third Person Far
     * 4 - First Person
     *
     * Hash: 0x5A4F9EDF1673F704 | Since: 323
     */
    function setFollowPedViewMode(viewMode: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCBBDE6D335D6D496 | Since: 323
     */
    function isFollowVehicleActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x91EF6EE6419E5B97 | Since: 323
     */
    function setFollowVehicleHighAngleModeThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9DFE13ECDC1EC196 | Since: 323
     */
    function setFollowVehicleHighAngleModeEveryUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x79C0E43EB9B944E2 | Since: 1734
     */
    function setTableGameseraThisUpdate(hash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEE82280AB767B690 | Since: 323
     */
    function getFollowVehicleZoomLevel(): number;
    /**
     * No comment provided
     *
     * Hash: 0x19464CB6E4078C8A | Since: 323
     */
    function setFollowVehicleZoomLevel(zoomLevel: number): void;
    /**
     * Returns the type of camera:
     *
     * enum _viewmode //0xA11D7CA8
     * {
     * THIRD_PERSON_NEAR = 0,
     * THIRD_PERSON_MEDIUM = 1,
     * THIRD_PERSON_FAR = 2,
     * CINEMATIC = 3,
     * FIRST_PERSON = 4
     * };
     *
     * Hash: 0xA4FF579AC0E3AAAE | Since: 323
     */
    function getFollowVehicleViewMode(): number;
    /**
     * Sets the type of Player camera in vehicles:
     * viewmode: see CAM.GET_FOLLOW_VEHICLE_CAM_VIEW_MODE
     *
     * Hash: 0xAC253D7842768F48 | Since: 323
     */
    function setFollowVehicleViewMode(viewMode: number): void;
    /**
     * context: see _GET_CAM_ACTIVE_VIEW_MODE_CONTEXT
     *
     * Hash: 0xEE778F8C7E1142E2 | Since: 323
     */
    function getViewModeForContext(context: number): number;
    /**
     * context: see _GET_CAM_ACTIVE_VIEW_MODE_CONTEXT, viewmode: see CAM.GET_FOLLOW_VEHICLE_CAM_VIEW_MODE
     *
     * Hash: 0x2A2173E46DAECD12 | Since: 323
     */
    function setViewModeForContext(context: number, viewMode: number): void;
    /**
     * enum Context
     * {
     * ON_FOOT,
     * IN_VEHICLE,
     * ON_BIKE,
     * IN_BOAT,
     * IN_AIRCRAFT,
     * IN_SUBMARINE,
     * IN_HELI,
     * IN_TURRET
     * };
     *
     * Hash: 0x19CAFA3C87F7C2FF | Since: 323
     */
    function getActiveViewModeContext(): number;
    /**
     * No comment provided
     *
     * Hash: 0x6493CF69859B116A | Since: 791
     */
    function useVehicleStuntSettingsThisUpdate(): void;
    /**
     * Sets gameplay camera to hash
     *
     * Hash: 0x425A920FDB9A0DDA | Since: 1180
     */
    function useDedicatedStunteraThisUpdate(camName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0AA27680A0BD43FA | Since: 1103
     */
    function forceVehicleStuntSettingsThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5C90CAB09951A12F | Since: 1365
     */
    function setFollowVehicleSeatThisUpdate(seatIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x68EDDA28A5976D07 | Since: 323
     */
    function isAimActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x74BD83EA840F6BC9 | Since: 323
     */
    function isAimActiveInAccurateMode(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5E346D934122613F | Since: 323
     */
    function isFirstPersonAimActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1A31FE0049E542F6 | Since: 323
     */
    function disableAimThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7EC52CC40597D170 | Since: 323
     */
    function getFirstPersonAimZoomFactor(): number;
    /**
     * No comment provided
     *
     * Hash: 0x70894BD0915C5BCA | Since: 323
     */
    function setFirstPersonAimZoomFactor(zoomFactor: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCED08CBE8EBB97C7 | Since: 323
     */
    function setFirstPersonAimZoomFactorLimitsThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F7F2B26DD3F18EE | Since: 323
     */
    function setFirstPersonAimRelativeHeadingLimitsThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBCFC632DB7673BF0 | Since: 323
     */
    function setFirstPersonAimRelativePitchLimitsThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0AF7B437918103B3 | Since: 323
     */
    function setFirstPersonAimNearClipThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x42156508606DE65E | Since: 323
     */
    function setThirdPersonAimNearClipThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4008EDF7D6E48175 | Since: 323
     */
    function setAllowCustomVehicleDriveByThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x380B4968D1E09E55 | Since: 1290
     */
    function forceTightspaceCustomFramingThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA200EB1EE790F448 | Since: 323
     */
    function getFinalRenderedCoord(): Vector3;
    /**
     * p0 seems to consistently be 2 across scripts
     *
     * `Function is called faily often by CAM::CREATE_CAM_WITH_PARAMS`
     *
     * Hash: 0x5B4E4C817FCC2DFB | Since: 323
     */
    function getFinalRenderedRot(rotationOrder: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x26903D9CD1175F2C | Since: 323
     */
    function getFinalRenderedRemotePlayerRot(player: number | string | Player, rotationOrder: number): Vector3;
    /**
     * Gets some camera fov
     *
     * Hash: 0x80EC114669DAEFF4 | Since: 323
     */
    function getFinalRenderedFov(): number;
    /**
     * No comment provided
     *
     * Hash: 0x5F35F6732C3FBBA0 | Since: 323
     */
    function getFinalRenderedRemotePlayerFov(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xD0082607100D7193 | Since: 323
     */
    function getFinalRenderedNearClip(): number;
    /**
     * No comment provided
     *
     * Hash: 0xDFC8CBC606FDB0FC | Since: 323
     */
    function getFinalRenderedFarClip(): number;
    /**
     * No comment provided
     *
     * Hash: 0xA03502FC581F7D9B | Since: 323
     */
    function getFinalRenderedNearDof(): number;
    /**
     * No comment provided
     *
     * Hash: 0x9780F32BCAF72431 | Since: 323
     */
    function getFinalRenderedFarDof(): number;
    /**
     * No comment provided
     *
     * Hash: 0x162F9D995753DC19 | Since: 323
     */
    function getFinalRenderedMotionBlurStrength(): number;
    /**
     * No comment provided
     *
     * Hash: 0xD51ADCD2D8BC0FB3 | Since: 323
     */
    function setGameplayCoordHint(pos: Vector3, duration: number, blendOutDuration: number, blendInDuration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2B486269ACD548D3 | Since: 323
     */
    function setGameplayPedHint(ped: number | Ped, x1: number, y1: number, z1: number, duration: number, blendOutDuration: number, blendInDuration: number): void;
    /**
     * Focuses the camera on the specified vehicle.
     *
     * Hash: 0xA2297E18F3E71C2E | Since: 323
     */
    function setGameplayVehicleHint(vehicle: number | Vehicle, offsetX: number, offsetY: number, offsetZ: number, time: number, easeInTime: number, easeOutTime: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x83E87508A2CA2AC6 | Since: 323
     */
    function setGameplayObjectHint(_object: number | Object, xOffset: number, yOffset: number, zOffset: number, time: number, easeInTime: number, easeOutTime: number): void;
    /**
     * p8 could be some sort of flag. Scripts use:
     * -244429742
     * 0
     * 1726668277
     * 1844968929
     *
     * Hash: 0x189E955A8313E298 | Since: 323
     */
    function setGameplayEntityHint(entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, time: number, easeInTime: number, easeOutTime: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE520FF1AD2785B40 | Since: 323
     */
    function isGameplayHintActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF46C581C61718916 | Since: 323
     */
    function stopGameplayHint(): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0xCCD078C2665D2973 | Since: 323
     */
    function stopGameplayHintBeingCancelledThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x247ACBC4ABBC9D1C | Since: 323
     */
    function stopCodeGameplayHint(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF72910D0F26F025 | Since: 323
     */
    function isCodeGameplayHintActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x513403FB9C56211F | Since: 323
     */
    function setGameplayHintFov(FOV: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF8BDBF3D573049A1 | Since: 323
     */
    function setGameplayHintFollowDistanceScalar(value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1F8363DFAD03848 | Since: 323
     */
    function setGameplayHintBaseOrbitPitchOffset(value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5D7B620DAE436138 | Since: 323
     */
    function setGameplayHinteraRelativeSideOffset(xOffset: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC92717EF615B6704 | Since: 323
     */
    function setGameplayHinteraRelativeVerticalOffset(yOffset: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE3433EADAAF7EE40 | Since: 323
     */
    function setGameplayHinteraBlendToFollowPedMediumViewMode(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x51669F7D1FB53D9F | Since: 323
     */
    function setCinematicButtonActive(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB15162CB5826E9E8 | Since: 323
     */
    function isCinematicRendering(): boolean;
    /**
     * p0 argument found in the b617d scripts: "DRUNK_SHAKE"
     *
     * Full list of cam shake types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/camShakeTypesCompact.json
     *
     * Hash: 0xDCE214D9ED58F3CF | Since: 323
     */
    function shakeCinematic(shakeType: string, amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBBC08F6B4CB8FF0A | Since: 323
     */
    function isCinematicShaking(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC724C701C30B2FE7 | Since: 323
     */
    function setCinematicShakeAmplitude(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2238E588E588A6D7 | Since: 323
     */
    function stopCinematicShaking(): void;
    /**
     * No comment provided
     *
     * Hash: 0xADFF1B2A555F5FBA | Since: 323
     */
    function disableCinematicBonneteraThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x62ECFCFDEE7885D6 | Since: 323
     */
    function disableCinematicVehicleIdleModeThisUpdate(): void;
    /**
     * Resets the vehicle idle camera timer. Calling this in a loop will disable the idle camera.
     *
     * Hash: 0x9E4CFFF989258472 | Since: 323
     */
    function invalidateCinematicVehicleIdleMode(): void;
    /**
     * Resets the idle camera timer. Calling that in a loop once every few seconds is enough to disable the idle cinematic camera.
     *
     * Hash: 0xF4F2C0D4EE209E20 | Since: 323
     */
    function invalidateIdle(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA9D2AA3E326D720 | Since: 323
     */
    function isCinematicIdleRendering(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4F32C0D5A90A9B40 | Since: 323
     */
    function isCinematicFirstPersonVehicleInteriorRendering(): boolean;
    /**
     * hash is always JOAAT("CAMERA_MAN_SHOT") in decompiled scripts
     *
     * Hash: 0x741B0129D4560F31 | Since: 323
     */
    function createCinematicShot(p0: number | string, time: number, entity: number | Entity): void;
    /**
     * Hash is always JOAAT("CAMERA_MAN_SHOT") in decompiled scripts
     *
     * Hash: 0xCC9F3371A7C28BC9 | Since: 323
     */
    function isCinematicShotActive(p0: number | string): boolean;
    /**
     * Only used once in carsteal3 with p0 set to -1096069633 (CAMERA_MAN_SHOT)
     *
     * Hash: 0x7660C6E75D3A078E | Since: 323
     */
    function stopCinematicShot(p0: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xA41BCD7213805AAC | Since: 323
     */
    function forceCinematicRenderingThisUpdate(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC9DA9E8789F5246 | Since: 323
     */
    function setCinematicNewsChannelActiveThisUpdate(): void;
    /**
     * Toggles the vehicle cinematic cam; requires the player ped to be in a vehicle to work.
     *
     * Hash: 0xDCF0754AC3D6FD4E | Since: 323
     */
    function setCinematicModeActive(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F2300CB7FA7B7F6 | Since: 323
     */
    function isInVehicleMobilePhoneeraRendering(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x17FCA7199A530203 | Since: 323
     */
    function disableCinematicSlowMoThisUpdate(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD7360051C885628B | Since: 372
     */
    function isBonnetCinematicRendering(): boolean;
    /**
     * Tests some cinematic camera flags
     *
     * Hash: 0xF5F1E89A970B7796 | Since: 1493
     */
    function isCinematicInputActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7B8A361C1813FBEF | Since: 573
     */
    function ignoreMenuPreferenceForBonneteraThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDB629FFD9285FA06 | Since: 323
     */
    function bypassCutsceneRenderingThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x324C5AA411DA7737 | Since: 323
     */
    function stopCutsceneShaking(): void;
    /**
     * Hardcoded to only work in multiplayer.
     *
     * Hash: 0x12DED8CA53D47EA5 | Since: 323
     */
    function setCutsceneFarClipThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x89215EC747DF244A | Since: 323
     */
    function getFocusPedOnScreen(): number;
    /**
     * No comment provided
     *
     * Hash: 0x5A43C76F7FC7BA5F | Since: 323
     */
    function disableNearClipScanThisUpdate(): void;
    /**
     * if p0 is 0, effect is cancelled
     *
     * if p0 is 1, effect zooms in, gradually tilts cam clockwise apx 30 degrees, wobbles slowly. Motion blur is active until cancelled.
     *
     * if p0 is 2, effect immediately tilts cam clockwise apx 30 degrees, begins to wobble slowly, then gradually tilts cam back to normal. The wobbling will continue until the effect is cancelled.
     *
     * Hash: 0x80C8B1846639BB19 | Since: 323
     */
    function setDeathFailEffectState(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5C41E6BABC9E2112 | Since: 323
     */
    function setFirstPersonFlashEffectType(): void;
    /**
     * From b617 scripts:
     *
     * `CAM::SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_NAME("DINGHY");`
     * `CAM::SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_NAME("ISSI2");`
     * `CAM::SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_NAME("SPEEDO");`
     *
     * Hash: 0x21E253A7F8DA5DFB | Since: 323
     */
    function setFirstPersonFlashEffectVehicleModelName(vehicleName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x11FA5D3479C7DD47 | Since: 323
     */
    function setFirstPersonFlashEffectVehicleModelHash(vehicleModel: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xEAF0FA793D05C592 | Since: 323
     */
    function isAllowedIndependenteraModes(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x62374889A4D59F72 | Since: 877
     */
    function eraPreventCollisionSettingsForTripleheadInInteriorsThisUpdate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8BFCEB5EA1B161B6 | Since: 323
     */
    function replayGetMaxDistanceAllowedFromPlayer(): number;
}
export declare namespace clock {
    /**
     * SET_CLOCK_TIME(12, 34, 56);
     *
     * Hash: 0x47C3B5848C3E45D8 | Since: 323
     */
    function setTime(hour: number, minute: number, second: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4055E40BD2DBEC1D | Since: 323
     */
    function pause(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC8CA9670B9D83B3B | Since: 323
     */
    function advanceTimeTo(hour: number, minute: number, second: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD716F30D8C8980E2 | Since: 323
     */
    function addToTime(hours: number, minutes: number, seconds: number): void;
    /**
     * Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)
     *
     * Hash: 0x25223CA6B4D20B7F | Since: 323
     */
    function getHours(): number;
    /**
     * Gets the current ingame clock minute.
     *
     * Hash: 0x13D2B8ADD79640F2 | Since: 323
     */
    function getMinutes(): number;
    /**
     * Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in GTA is only 48 minutes in real life.
     *
     * Hash: 0x494E97C2EF27C470 | Since: 323
     */
    function getSeconds(): number;
    /**
     * No comment provided
     *
     * Hash: 0xB096419DF0D06CE7 | Since: 323
     */
    function setDate(day: number, month: number, year: number): void;
    /**
     * Gets the current day of the week.
     *
     * 0: Sunday
     * 1: Monday
     * 2: Tuesday
     * 3: Wednesday
     * 4: Thursday
     * 5: Friday
     * 6: Saturday
     *
     * Hash: 0xD972E4BD7AEB235F | Since: 323
     */
    function getDayOfWeek(): number;
    /**
     * No comment provided
     *
     * Hash: 0x3D10BC92A4DB1D35 | Since: 323
     */
    function getDayOfMonth(): number;
    /**
     * No comment provided
     *
     * Hash: 0xBBC72712E80257A1 | Since: 323
     */
    function getMonth(): number;
    /**
     * No comment provided
     *
     * Hash: 0x961777E64BDAF717 | Since: 323
     */
    function getYear(): number;
    /**
     * No comment provided
     *
     * Hash: 0x2F8B4D1C595B11DB | Since: 323
     */
    function getMillisecondsPerGameMinute(): number;
    /**
     * Gets system time as year, month, day, hour, minute and second.
     *
     * Example usage:
     *
     * int year;
     * int month;
     * int day;
     * int hour;
     * int minute;
     * int second;
     *
     * `TIME::GET_POSIX_TIME(&year, &month, &day, &hour, &minute, &second);`
     *
     *
     * Hash: 0xDA488F299A5B164E | Since: 323
     */
    function getPosixTime(): [number, number, number, number, number, number];
    /**
     * Gets current UTC time
     *
     * Hash: 0x8117E09A19EEF4D3 | Since: 323
     */
    function getUtcTime(): [number, number, number, number, number, number];
    /**
     * Gets local system time as year, month, day, hour, minute and second.
     *
     * Example usage:
     *
     * int year;
     * int month;
     * int day;
     * int hour;
     * int minute;
     * int second;
     * `or use std::tm struct`
     *
     * `TIME::GET_LOCAL_TIME(&year, &month, &day, &hour, &minute, &second);`
     *
     *
     * Hash: 0x50C7A99057A69748 | Since: 323
     */
    function getLocalTime(): [number, number, number, number, number, number];
}
export declare namespace cutscene {
    /**
     * flags: Usually 8
     * Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
     *
     * Hash: 0x7A86743F475D9E09 | Since: 323
     */
    function request(cutsceneName: string, flags: number): void;
    /**
     * flags: Usually 8
     *
     * playbackFlags: Which scenes should be played.
     * Example: 0x105 (bit 0, 2 and 8 set) will enable scene 1, 3 and 9.
     * Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
     *
     * Hash: 0xC23DE0E91C30B58C | Since: 323
     */
    function requestWithPlaybackList(cutsceneName: string, playbackFlags: number, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x440AF51A3462B86F | Since: 323
     */
    function remove(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC59F528E9AB9F339 | Since: 323
     */
    function hasLoaded(): boolean;
    /**
     * Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
     *
     * Hash: 0x228D3D94F8A11C3C | Since: 323
     */
    function hasThisLoaded(cutsceneName: string): boolean;
    /**
     * Sets the cutscene's owning thread ID.
     *
     * Hash: 0x8D9DF6ECA8768583 | Since: 323
     */
    function setScriptCanStart(threadId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB56BBBCC2955D9CB | Since: 323
     */
    function canRequestAssetsForEntity(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x71B74D2AE19338D0 | Since: 323
     */
    function isPlaybackFlagSet(flag: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4C61C75BEE8184C2 | Since: 323
     */
    function setEntityStreamingFlags(cutsceneEntName: string): void;
    /**
     * Simply loads the cutscene and doesn't do extra stuff that REQUEST_CUTSCENE does.
     * Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
     *
     * Hash: 0x06A3524161C502BA | Since: 323
     */
    function requestCutFile(cutsceneName: string): void;
    /**
     * Simply checks if the cutscene has loaded and doesn't check via CutSceneManager as opposed to HAS_[THIS]_CUTSCENE_LOADED.
     * Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
     *
     * Hash: 0xA1C996C2A744262E | Since: 323
     */
    function hasCutFileLoaded(cutsceneName: string): boolean;
    /**
     * Simply unloads the cutscene and doesn't do extra stuff that REMOVE_CUTSCENE does.
     * Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
     *
     * Hash: 0xD00D76A7DFC9D852 | Since: 323
     */
    function removeCutFile(cutsceneName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x1FA904B60E492336 | Since: 3570
     */
    function getCutFileOffset(cutsceneName: string, index: number): Vector3;
    /**
     * Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
     *
     * Hash: 0x0ABC54DE641DC0FC | Since: 323
     */
    function getCutFileConcatCount(cutsceneName: string): number;
    /**
     * flags: Usually 0.
     *
     * Hash: 0x186D5CB5E7B0FF7B | Since: 323
     */
    function start(flags: number): void;
    /**
     * flags: Usually 0.
     *
     * Hash: 0x1C9ADDA3244A1FBF | Since: 323
     */
    function startAtCoords(pos: Vector3, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC7272775B4DC786E | Since: 323
     */
    function stop(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD220BDD222AC4A1E | Since: 323
     */
    function stopImmediately(): void;
    /**
     * p3 could be heading. Needs more research.
     *
     * Hash: 0xB812B3FD1C01CF27 | Since: 323
     */
    function setOrigin(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x011883F41211432A | Since: 323
     */
    function setOriginAndOrientation(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE625BEABBAFFDAB9 | Since: 323
     */
    function getTime(): number;
    /**
     * No comment provided
     *
     * Hash: 0x710286BC5EF4D6E1 | Since: 3258
     */
    function getPlayTime(): number;
    /**
     * No comment provided
     *
     * Hash: 0xEE53B14A19E480D4 | Since: 323
     */
    function getTotalDuration(): number;
    /**
     * No comment provided
     *
     * Hash: 0x971D7B15BCDBEF99 | Since: 1734
     */
    function getEndTime(): number;
    /**
     * No comment provided
     *
     * Hash: 0x5D583F71C901F2A3 | Since: 2802
     */
    function getPlayDuration(): number;
    /**
     * No comment provided
     *
     * Hash: 0x40C8656EDAEDD569 | Since: 323
     */
    function wasSkipped(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7C0A893088881D57 | Since: 323
     */
    function hasFinished(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x991251AFC3981F84 | Since: 323
     */
    function isActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD3C2E180A40F031E | Since: 323
     */
    function isPlaying(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x49010A6A396553D8 | Since: 323
     */
    function getSectionPlaying(): number;
    /**
     * No comment provided
     *
     * Hash: 0x0A2E9FDB9A8C62F6 | Since: 323
     */
    function getEntityIndexOfEntity(cutsceneEntName: string, modelHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x583DF8E3D4AFBD98 | Since: 323
     */
    function getConcatSectionPlaying(): number;
    /**
     * This function is hard-coded to always return 1.
     *
     * Hash: 0x4CEBC1ED31E8925E | Since: 323
     */
    function isAuthorized(cutsceneName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4FCD976DA686580C | Since: 1290
     */
    function doesHandleExist(cutsceneHandle: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xE40C1C56DF95C2E8 | Since: 323
     */
    function registerEntityFor(cutscenePed: number | Ped, cutsceneEntName: string, modelHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC0741A26499654CD | Since: 323
     */
    function getEntityIndexOfRegisteredEntity(cutsceneEntName: string, modelHash: number | string): number;
    /**
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0x7F96F23FA9B73327 | Since: 323
     */
    function setVehicleModelPlayerWillExitScene(modelHash: number | string): void;
    /**
     * Only used twice in R* scripts
     *
     * Hash: 0x9896CE4721BE84BA | Since: 323
     */
    function setTriggerArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
    /**
     * modelHash (p1) was always 0 in R* scripts
     *
     * Hash: 0x645D0B458D8E17B5 | Since: 323
     */
    function canSetEnterStateForRegisteredEntity(cutsceneEntName: string, modelHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4C6A6451C79E4662 | Since: 323
     */
    function canSetExitStateForRegisteredEntity(cutsceneEntName: string, modelHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB2CBCD0930DFB420 | Since: 323
     */
    function canSetExitStateForCamera(): boolean;
    /**
     * Toggles a value (bool) for cutscenes.
     *
     * Hash: 0xC61B86C9F61EB404 | Since: 323
     */
    function setPadCanShakeDuring(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8093F23ABACCC7D4 | Since: 323
     */
    function setFadeValues(): void;
    /**
     * No comment provided
     *
     * Hash: 0x20746F7B1032A3C7 | Since: 323
     */
    function setMultiheadFade(): void;
    /**
     * No comment provided
     *
     * Hash: 0x06EE9048FD080382 | Since: 323
     */
    function setMultiheadFadeManual(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA0FE76168A189DDB | Since: 323
     */
    function isMultiheadFadeUp(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2F137B508DE238F2 | Since: 323
     */
    function networkSetMocapCanBeSkipped(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE36A98D8AB3D3C66 | Since: 323
     */
    function setCarGeneratorsCanUpdateDuring(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5EDEF0CF8C1DAB3C | Since: 323
     */
    function canUseMobilePhoneDuring(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x41FAA8FB2ECE8720 | Since: 323
     */
    function setCanBeSkipped(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2131046957F31B04 | Since: 323
     */
    function setCanDisplayMinimapDuringThisUpdate(): void;
    /**
     * Full list of ped components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedComponentVariations.json
     *
     * Hash: 0xBA01E7B6DEEFBBC9 | Since: 323
     */
    function setPedComponentVariation(cutsceneEntName: string, componentId: number, drawableId: number, textureId: number, modelHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x2A56C06EBEF2B0D9 | Since: 323
     */
    function setPedComponentVariationFromPed(cutsceneEntName: string, ped: number | Ped, modelHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x499EF20C5DB25C59 | Since: 323
     */
    function doesEntityExist(cutsceneEntName: string, modelHash: number | string): boolean;
    /**
     * Thanks R*! ;)
     *
     * if ((l_161 == 0) || (l_161 == 2)) {
     * sub_2ea27("Trying to set Jimmy prop variation");
     * `CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION("Jimmy_Boston", 1, 0, 0, 0);`
     * }
     *
     * Full list of ped components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedComponentVariations.json
     *
     * Hash: 0x0546524ADE2E9723 | Since: 323
     */
    function setPedPropVariation(cutsceneEntName: string, componentId: number, drawableId: number, textureId: number, modelHash: number | string): void;
    /**
     * Possibly HAS_CUTSCENE_CUT_THIS_FRAME, needs more research.
     *
     * Hash: 0x708BDD8CD795B043 | Since: 323
     */
    function hasCutThisFrame(): boolean;
}
export declare namespace datafile {
    /**
     * Adds the given requestID to the watch list.
     *
     * Hash: 0xAD6875BBC0FC899C | Since: 323
     */
    function watchRequestId(requestId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6CC86E78358D5119 | Since: 323
     */
    function clearWatchList(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFCCAE5B92A830878 | Since: 323
     */
    function isValidRequestId(index: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x15FF52B809DB2353 | Since: 323
     */
    function hasLoadedFileData(requestId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF8CC1EBE0B62E29F | Since: 323
     */
    function hasValidFileData(requestId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x22DA66936E0FFF37 | Since: 323
     */
    function selectActiveFile(requestId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8F5EA1C01D65A100 | Since: 323
     */
    function deleteRequestedFile(requestId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC84527E235FCA219 | Since: 323
     */
    function ugcCreateContent(dataCount: number, contentName: string, description: string, tagsCsv: string, contentTypeName: string, publish: boolean): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xA5EFC3E847D60507 | Since: 323
     */
    function ugcCreateMission(contentName: string, description: string, tagsCsv: string, contentTypeName: string, publish: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x648E7A5434AF7969 | Since: 323
     */
    function ugcUpdateContent(contentId: string, dataCount: number, contentName: string, description: string, tagsCsv: string, contentTypeName: string): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x4645DE9980999E93 | Since: 323
     */
    function ugcUpdateMission(contentId: string, contentName: string, description: string, tagsCsv: string, contentTypeName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x692D808C34A82143 | Since: 323
     */
    function ugcSetPlayerData(contentId: string, rating: number, contentTypeName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA69AC4ADE82B57A4 | Since: 323
     */
    function selectUgcData(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9CB0BFA7A9342C3D | Since: 323
     */
    function selectUgcStats(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x52818819057F2B40 | Since: 323
     */
    function selectUgcPlayerData(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x01095C95CD46B624 | Since: 323
     */
    function selectCreatorStats(): boolean;
    /**
     * Loads a User-Generated Content (UGC) file. These files can be found in "[GTA5]\data\ugc" and "[GTA5]\common\patch\ugc". They seem to follow a naming convention, most likely of "[name]_[part].ugc". See example below for usage.
     *
     * Returns whether or not the file was successfully loaded.
     *
     * Example:
     * `DATAFILE::DATAFILE_LOAD_OFFLINE_UGC("RockstarPlaylists") // loads "rockstarplaylists_00.ugc"`
     *
     * Hash: 0xC5238C011AF405E4 | Since: 323
     */
    function loadOfflineUgc(filename: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD27058A1CA2B13EE | Since: 323
     */
    function create(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9AB9C1CFC8862DFB | Since: 323
     */
    function datafileDelete(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2ED61456317B8178 | Since: 323
     */
    function storeMissionHeader(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC55854C7D7274882 | Since: 323
     */
    function flushMissionHeader(): void;
    /**
     * No comment provided
     *
     * Hash: 0x906B778CA1DC72B6 | Since: 323
     */
    function getFileDict(): any;
    /**
     * No comment provided
     *
     * Hash: 0x83BCCE3224735F05 | Since: 323
     */
    function startSaveToCloud(filename: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4DFDD9EB705F8140 | Since: 323
     */
    function updateSaveToCloud(): [boolean, boolean];
    /**
     * No comment provided
     *
     * Hash: 0xBEDB96A7584AA8CF | Since: 323
     */
    function isSavePending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA6EEF01087181EDD | Since: 2189
     */
    function loadOfflineUgcForAdditionalDataFile(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6AD0BD5E087866CB | Since: 2189
     */
    function deleteForAdditionalDataFile(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDBF860CF1DB8E599 | Since: 2189
     */
    function getFileDictForAdditionalDataFile(): any;
    /**
     * No comment provided
     *
     * Hash: 0x35124302A556A325 | Since: 323
     */
    function datadictSetBool(key: string, value: boolean): any;
    /**
     * No comment provided
     *
     * Hash: 0xE7E035450A7948D5 | Since: 323
     */
    function datadictSetInt(key: string, value: number): any;
    /**
     * No comment provided
     *
     * Hash: 0xC27E1CC2D795105E | Since: 323
     */
    function datadictSetFloat(key: string, value: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x8FF3847DADD8E30C | Since: 323
     */
    function datadictSetString(key: string, value: string): any;
    /**
     * No comment provided
     *
     * Hash: 0x4CD49B76338C7DEE | Since: 323
     */
    function datadictSetVector(key: string, valueX: number, valueY: number, valueZ: number): any;
    /**
     * No comment provided
     *
     * Hash: 0xA358F56F10732EE1 | Since: 323
     */
    function datadictCreateDict(key: string): [any, any];
    /**
     * No comment provided
     *
     * Hash: 0x5B11728527CA6E5F | Since: 323
     */
    function datadictCreateArray(key: string): [any, any];
    /**
     * No comment provided
     *
     * Hash: 0x1186940ED72FFEEC | Since: 323
     */
    function datadictGetBool(key: string): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x78F06F6B1FB5A80C | Since: 323
     */
    function datadictGetInt(key: string): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0x06610343E73B9727 | Since: 323
     */
    function datadictGetFloat(key: string): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0x3D2FD9E763B24472 | Since: 323
     */
    function datadictGetString(key: string): [string, any];
    /**
     * No comment provided
     *
     * Hash: 0x46CD3CB66E0825CC | Since: 323
     */
    function datadictGetVector(key: string): [Vector3, any];
    /**
     * No comment provided
     *
     * Hash: 0xB6B9DDC412FCEEE2 | Since: 323
     */
    function datadictGetDict(key: string): [any, any];
    /**
     * No comment provided
     *
     * Hash: 0x7A983AA9DA2659ED | Since: 323
     */
    function datadictGetArray(key: string): [any, any];
    /**
     * Types:
     * 1 = Boolean
     * 2 = Integer
     * 3 = Float
     * 4 = String
     * 5 = Vector3
     * 6 = Object
     * 7 = Array
     *
     * Hash: 0x031C55ED33227371 | Since: 323
     */
    function datadictGetType(key: string): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0xF8B0F5A43E928C76 | Since: 323
     */
    function dataarrayAddBool(value: boolean): any;
    /**
     * No comment provided
     *
     * Hash: 0xCABDB751D86FE93B | Since: 323
     */
    function dataarrayAddInt(value: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x57A995FD75D37F56 | Since: 323
     */
    function dataarrayAddFloat(value: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x2F0661C155AEEEAA | Since: 323
     */
    function dataarrayAddString(value: string): any;
    /**
     * No comment provided
     *
     * Hash: 0x407F8D034F70F0C2 | Since: 323
     */
    function dataarrayAddVector(valueX: number, valueY: number, valueZ: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x6889498B3E19C797 | Since: 323
     */
    function dataarrayAddDict(): [any, any];
    /**
     * No comment provided
     *
     * Hash: 0x50C1B2874E50C114 | Since: 323
     */
    function dataarrayGetBool(arrayIndex: number): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x3E5AE19425CD74BE | Since: 323
     */
    function dataarrayGetInt(arrayIndex: number): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0xC0C527B525D7CFB5 | Since: 323
     */
    function dataarrayGetFloat(arrayIndex: number): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0xD3F2FFEB8D836F52 | Since: 323
     */
    function dataarrayGetString(arrayIndex: number): [string, any];
    /**
     * No comment provided
     *
     * Hash: 0x8D2064E5B64A628A | Since: 323
     */
    function dataarrayGetVector(arrayIndex: number): [Vector3, any];
    /**
     * No comment provided
     *
     * Hash: 0x8B5FADCC4E3A145F | Since: 323
     */
    function dataarrayGetDict(arrayIndex: number): [any, any];
    /**
     * No comment provided
     *
     * Hash: 0x065DB281590CEA2D | Since: 323
     */
    function dataarrayGetCount(): [number, any];
    /**
     * Types:
     * 1 = Boolean
     * 2 = Integer
     * 3 = Float
     * 4 = String
     * 5 = Vector3
     * 6 = Object
     * 7 = Array
     *
     * Hash: 0x3A0014ADB172A3C5 | Since: 323
     */
    function dataarrayGetType(arrayIndex: number): [number, any];
}
export declare namespace decorator {
    /**
     * No comment provided
     *
     * Hash: 0x95AED7B8E39ECAA4 | Since: 323
     */
    function decorSetTime(entity: number | Entity, propertyName: string, timestamp: number): boolean;
    /**
     * This function sets metadata of type bool to specified entity.
     *
     *
     * Hash: 0x6B1E8E2ED1335B71 | Since: 323
     */
    function decorSetBool(entity: number | Entity, propertyName: string, value: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x211AB1DD8D0F363A | Since: 323
     */
    function decorSetFloat(entity: number | Entity, propertyName: string, value: number): boolean;
    /**
     * Sets property to int.
     *
     * Hash: 0x0CE3AA5E1CA19E10 | Since: 323
     */
    function decorSetInt(entity: number | Entity, propertyName: string, value: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDACE671663F2F5DB | Since: 323
     */
    function decorGetBool(entity: number | Entity, propertyName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6524A2F114706F43 | Since: 323
     */
    function decorGetFloat(entity: number | Entity, propertyName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xA06C969B02A97298 | Since: 323
     */
    function decorGetInt(entity: number | Entity, propertyName: string): number;
    /**
     * Returns whether or not the specified property is set for the entity.
     *
     * Hash: 0x05661B80A8C9165F | Since: 323
     */
    function decorExistOn(entity: number | Entity, propertyName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x00EE9F297C738720 | Since: 323
     */
    function decorRemove(entity: number | Entity, propertyName: string): boolean;
    /**
     * https://alloc8or.re/gta5/doc/enums/eDecorType.txt
     *
     * Hash: 0x9FD90732F56403CE | Since: 323
     */
    function decorRegister(propertyName: string, _type: number): void;
    /**
     * type: see DECOR_REGISTER
     *
     * Hash: 0x4F14F9F870D6FBC8 | Since: 323
     */
    function decorIsRegisteredAsType(propertyName: string, _type: number): boolean;
    /**
     * Called after all decorator type initializations.
     *
     * Hash: 0xA9D14EEA259F9248 | Since: 323
     */
    function decorRegisterLock(): void;
}
export declare namespace dlc {
    /**
     * No comment provided
     *
     * Hash: 0x241FCA5B1AA14F75 | Since: 323
     */
    function areAnyCcsPending(): boolean;
    /**
     * Returns true if the given DLC pack is present.
     *
     * Hash: 0x812595A0644CE1DE | Since: 323
     */
    function isPresent(dlcHash: number | string): boolean;
    /**
     * This function is hard-coded to always return 1.
     *
     * Hash: 0xF2E07819EF1A5289 | Since: 323
     */
    function checkCloudDataCorrect(): boolean;
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0x9489659372A81585 | Since: 323
     */
    function getExtracontentCloudResult(): number;
    /**
     * This function is hard-coded to always return 1.
     *
     * Hash: 0xA213B11DFF526300 | Since: 323
     */
    function checkCompatPackConfiguration(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8D30F648014A92B5 | Since: 323
     */
    function getEverHadBadPackOrder(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x10D0A8F259E93EC9 | Since: 323
     */
    function getIsLoadingScreenActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC4637A6D03C24CC3 | Since: 1734
     */
    function getIsInitialLoadingScreenActive(): boolean;
    /**
     * Sets the value of the specified variable to 0.
     * Always returns true.
     *
     * Hash: 0x46E2B844905BC5F0 | Since: 323
     */
    function hasCloudRequestsFinished(unused: number): [boolean, boolean];
    /**
     * Unloads GROUP_MAP (GTAO/MP) DLC data and loads GROUP_MAP_SP DLC. Neither are loaded by default, ON_ENTER_MP is a cognate to this function and loads MP DLC (and unloads SP DLC by extension).
     * Works in singleplayer.
     *
     * Hash: 0xD7C10C4A637992C9 | Since: 323
     */
    function onEnterSp(): void;
    /**
     * This loads the GTA:O dlc map parts (high end garages, apartments).
     * Works in singleplayer.
     * In order to use GTA:O heist IPL's you have to call this native with the following params: SET_INSTANCE_PRIORITY_MODE(1);
     *
     * Hash: 0x0888C3502DBBEEF5 | Since: 323
     */
    function onEnterMp(): void;
}
export declare namespace entity {
    /**
     * Checks whether an entity exists in the game world.
     *
     * Hash: 0x7239B21A38F536BA | Since: 323
     */
    function doesExist(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDDE6DF5AE89981D2 | Since: 323
     */
    function doesBelongToThisScript(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x060D6E96F8B8E48D | Since: 323
     */
    function doesHaveDrawable(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDA95EA3317CC5064 | Since: 323
     */
    function doesHavePhysics(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x764EB96874EFFDC1 | Since: 2699
     */
    function doesHaveSkeleton(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2158E81A6AF65EA9 | Since: 2699
     */
    function doesHaveAnimDirector(entity: number | Entity): boolean;
    /**
     * P3 is always 3 as far as i cant tell
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x20B711662962B472 | Since: 323
     */
    function hasAnimFinished(entity: number | Entity, animDict: string, animName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x95EB9964FF5C5C65 | Since: 323
     */
    function hasBeenDamagedByAnyObject(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x605F5A140F202491 | Since: 323
     */
    function hasBeenDamagedByAnyPed(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDFD5033FDBA0A9C8 | Since: 323
     */
    function hasBeenDamagedByAnyVehicle(entity: number | Entity): boolean;
    /**
     * Entity 1 = Victim
     * Entity 2 = Attacker
     *
     * p2 seems to always be 1
     *
     * Hash: 0xC86D67D52A707CF8 | Since: 323
     */
    function hasBeenDamagedByEntity(entity1: number | Entity, entity2: number | Entity): boolean;
    /**
     * traceType is always 17 in the scripts.
     *
     * There is other codes used for traceType:
     * 19 - in jewelry_prep1a
     * 126 - in am_hunt_the_beast
     * 256 & 287 - in fm_mission_controller
     *
     * Hash: 0xFCDFF7B72D23A1AC | Since: 323
     */
    function hasClearLosToEntity(entity1: number | Entity, entity2: number | Entity, traceType: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x394BDE2A7BBA031E | Since: 1868
     */
    function hasClearLosToEntityAdjustForCover(entity1: number | Entity, entity2: number | Entity, traceType: number): boolean;
    /**
     * Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
     * This is one of the most CPU demanding BOOL natives in the game; avoid calling this in things like nested for-loops
     *
     * Hash: 0x0267D00AF114F17A | Since: 323
     */
    function hasClearLosToEntityInFront(entity1: number | Entity, entity2: number | Entity): boolean;
    /**
     * Called on tick.
     * Tested with vehicles, returns true whenever the vehicle is touching any entity.
     *
     * Note: for vehicles, the wheels can touch the ground and it will still return false, but if the body of the vehicle touches the ground, it will return true.
     *
     * Hash: 0x8BAD02F0368D9E14 | Since: 323
     */
    function hasCollidedWithAnything(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA75EE4F689B85391 | Since: 2802
     */
    function getLastHitByEntity(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x5C3D0A935F535C4C | Since: 323
     */
    function getLastMaterialHitBy(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xE465D4AB7CA6AE72 | Since: 323
     */
    function getCollisionNormalOfLastHitFor(entity: number | Entity): Vector3;
    /**
     * Based on carmod_shop script decompile this takes a vehicle parameter. It is called when repair is done on initial enter.
     *
     * Hash: 0x40FDEDB72F8293B2 | Since: 323
     */
    function forceAiAndAnimationUpdate(entity: number | Entity): void;
    /**
     * Returns a float value representing animation's current playtime with respect to its total playtime. This value increasing in a range from [0 to 1] and wrap back to 0 when it reach 1.
     *
     * Example:
     * 0.000000 - mark the starting of animation.
     * 0.500000 - mark the midpoint of the animation.
     * 1.000000 - mark the end of animation.
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x346D81500D088F42 | Since: 323
     */
    function getAnimCurrentTime(entity: number | Entity, animDict: string, animName: string): number;
    /**
     * Returns a float value representing animation's total playtime in milliseconds.
     *
     * Example:
     * GET_ENTITY_ANIM_TOTAL_TIME(PLAYER_ID(),"amb@world_human_yoga@female@base","base_b")
     * return 20800.000000
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x50BD2730B191E360 | Since: 323
     */
    function getAnimTotalTime(entity: number | Entity, animDict: string, animName: string): number;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0xFEDDF04D62B8D790 | Since: 323
     */
    function getAnimDuration(animDict: string, animName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x48C2BED9180FE123 | Since: 323
     */
    function getAttachedTo(entity: number | Entity): number;
    /**
     * Gets the current coordinates for a specified entity.
     * `entity` = The entity to get the coordinates from.
     * `alive` = Unused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.
     *
     * Hash: 0x3FEF770D40960D5A | Since: 323
     */
    function getCoords(entity: number | Entity, alive: boolean): Vector3;
    /**
     * Gets the entity's forward vector.
     *
     * Hash: 0x0A794A5A57F8DF91 | Since: 323
     */
    function getForwardVector(entity: number | Entity): Vector3;
    /**
     * Gets the X-component of the entity's forward vector.
     *
     * Hash: 0x8BB4EF4214E0E6D5 | Since: 323
     */
    function getForwardX(entity: number | Entity): number;
    /**
     * Gets the Y-component of the entity's forward vector.
     *
     * Hash: 0x866A4A5FAE349510 | Since: 323
     */
    function getForwardY(entity: number | Entity): number;
    /**
     * Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
     *
     * Hash: 0xE83D4F9BA2A38914 | Since: 323
     */
    function getHeading(entity: number | Entity): number;
    /**
     * Gets the heading of the entity physics in degrees, which tends to be more accurate than just "GET_ENTITY_HEADING". This can be clearly seen while, for example, ragdolling a ped/player.
     *
     * NOTE: The name and description of this native are based on independent research. If you find this native to be more suitable under a different name and/or described differently, please feel free to do so.
     *
     * Hash: 0x846BF6291198A71E | Since: 323
     */
    function getHeadingFromEulers(entity: number | Entity): number;
    /**
     * Returns an integer value of entity's current health.
     *
     * Example of range for ped:
     * - Player [0 to 200]
     * - Ped [100 to 200]
     * - Vehicle [0 to 1000]
     * - Object [0 to 1000]
     *
     * Health is actually a float value but this native casts it to int.
     * In order to get the actual value, do:
     * float health = *(float *)(entityAddress + 0x280);
     *
     * Hash: 0xEEF059FAD016D209 | Since: 323
     */
    function getHealth(entity: number | Entity): number;
    /**
     * Return an integer value of entity's maximum health.
     *
     * Example:
     * - Player = 200
     * - Ped = 150
     *
     * Hash: 0x15D757606D170C3C | Since: 323
     */
    function getMaxHealth(entity: number | Entity): number;
    /**
     * `For instance: ENTITY::SET_ENTITY_MAX_HEALTH(PLAYER::PLAYER_PED_ID(), 200); // director_mode.c4: 67849`
     *
     * Hash: 0x166E7CF68597D8B5 | Since: 323
     */
    function setMaxHealth(entity: number | Entity, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A504562485944DD | Since: 323
     */
    function getHeight(entity: number | Entity, pos: Vector3, atTop: boolean, inWorldCoords: boolean): number;
    /**
     * Return height (z-dimension) above ground.
     * Example: The pilot in a titan plane is 1.844176 above ground.
     *
     * How can i convert it to meters?
     * Everything seems to be in meters, probably this too.
     *
     * Hash: 0x1DD55701034110E5 | Since: 323
     */
    function getHeightAboveGround(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xECB2FC7235A7D137 | Since: 323
     */
    function getMatrix(entity: number | Entity): [Vector3, Vector3, Vector3, Vector3];
    /**
     * Returns the model hash from the entity
     *
     * Hash: 0x9F47B058362C84B5 | Since: 323
     */
    function getModel(entity: number | Entity): number;
    /**
     * Converts world coords (posX - Z) to coords relative to the entity
     *
     * Example:
     * posX is given as 50
     * entity's x coord is 40
     * the returned x coord will then be 10 or -10, not sure haven't used this in a while (think it is 10 though).
     *
     * Hash: 0x2274BC1C4885E333 | Since: 323
     */
    function getOffsetFromGivenWorldCoords(entity: number | Entity, pos: Vector3): Vector3;
    /**
     * Offset values are relative to the entity.
     *
     * x = left/right
     * y = forward/backward
     * z = up/down
     *
     * Hash: 0x1899F328B0E12848 | Since: 323
     */
    function getOffsetFromInWorldCoords(entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xD45DC2893621E1FE | Since: 323
     */
    function getPitch(entity: number | Entity): number;
    /**
     * w is the correct parameter name!
     *
     * Hash: 0x7B3703D2D32DFA18 | Since: 323
     */
    function getQuaternion(entity: number | Entity): [number, number, number, number];
    /**
     * Displays the current ROLL axis of the entity [-180.0000/180.0000+]
     * (Sideways Roll) such as a vehicle tipped on its side
     *
     * Hash: 0x831E0242595560DF | Since: 323
     */
    function getRoll(entity: number | Entity): number;
    /**
     * rotationOrder is the order yaw, pitch and roll is applied. Usually 2. Returns a vector where the Z coordinate is the yaw.
     *
     * rotationOrder refers to the order yaw pitch roll is applied; value ranges from 0 to 5 and is usually *2* in scripts.
     * What you use for rotationOrder when getting must be the same as rotationOrder when setting the rotation.
     *
     * What it returns is the yaw on the z part of the vector, which makes sense considering R* considers z as vertical. Here's a picture for those of you who don't understand pitch, yaw, and roll: www.allstar.fiu.edu/aero/images/pic5-1.gif
     *
     * Rotation Orders:
     * 0: ZYX - Rotate around the z-axis, then the y-axis and finally the x-axis.
     * 1: YZX - Rotate around the y-axis, then the z-axis and finally the x-axis.
     * 2: ZXY - Rotate around the z-axis, then the x-axis and finally the y-axis.
     * 3: XZY - Rotate around the x-axis, then the z-axis and finally the y-axis.
     * 4: YXZ - Rotate around the y-axis, then the x-axis and finally the z-axis.
     * 5: XYZ - Rotate around the x-axis, then the y-axis and finally the z-axis.
     *
     * Hash: 0xAFBD61CC738D9EB9 | Since: 323
     */
    function getRotation(entity: number | Entity, rotationOrder: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x213B91045D09B983 | Since: 323
     */
    function getRotationVelocity(entity: number | Entity): Vector3;
    /**
     * Returns the name of the script that owns/created the entity or nullptr. Second parameter is unused, can just be a nullptr.
     *
     * Hash: 0xA6E9C38DB51D7748 | Since: 323
     */
    function getScript(entity: number | Entity): [string, number];
    /**
     * result is in meters per second
     *
     * ------------------------------------------------------------
     * So would the conversion to mph and km/h, be along the lines of this.
     *
     * float speed = GET_ENTITY_SPEED(veh);
     * float kmh = (speed * 3.6);
     * float mph = (speed * 2.236936);
     * ------------------------------------------------------------
     *
     * Hash: 0xD5037BA82E12416F | Since: 323
     */
    function getSpeed(entity: number | Entity): number;
    /**
     * Relative can be used for getting speed relative to the frame of the vehicle, to determine for example, if you are going in reverse (-y speed) or not (+y speed).
     *
     * Hash: 0x9A8D700A51CB7B0D | Since: 323
     */
    function getSpeedVector(entity: number | Entity, relative: boolean): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x95EED5A694951F9F | Since: 323
     */
    function getUprightValue(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x4805D2B1D8CF94A9 | Since: 323
     */
    function getVelocity(entity: number | Entity): Vector3;
    /**
     * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
     *
     * Hash: 0xD7E3B9735C0F89D6 | Since: 323
     */
    function getObjectIndexFromIndex(entity: number | Entity): number;
    /**
     * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
     *
     * Hash: 0x04A2A40C73395041 | Since: 323
     */
    function getPedIndexFromIndex(entity: number | Entity): number;
    /**
     * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
     *
     * Hash: 0x4B53F92932ADFAC0 | Since: 323
     */
    function getVehicleIndexFromIndex(entity: number | Entity): number;
    /**
     * Returns the coordinates of an entity-bone.
     *
     * Hash: 0x44A8FCB8ED227738 | Since: 323
     */
    function getWorldPositionOfBone(entity: number | Entity, boneIndex: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x7196842CB375CDB3 | Since: 323
     */
    function getNearestPlayerTo(entity: number | Entity): number | string;
    /**
     * No comment provided
     *
     * Hash: 0x4DC9A62F844D9337 | Since: 323
     */
    function getNearestPlayerToOnTeam(entity: number | Entity, team: number): number | string;
    /**
     * No comment provided
     *
     * Hash: 0xFFBD7052D65BE0FF | Since: 2944
     */
    function getNearestParticipantTo(entity: number | Entity): number;
    /**
     * Returns:
     * 0 = no entity
     * 1 = ped
     * 2 = vehicle
     * 3 = object
     *
     * Hash: 0x8ACD366038D14505 | Since: 323
     */
    function getType(entity: number | Entity): number;
    /**
     * A population type, from the following enum: https://alloc8or.re/gta5/doc/enums/ePopulationType.txt
     *
     * Hash: 0xF6F5161F4534EDFF | Since: 323
     */
    function getPopulationType(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x731EC8A916BD11A1 | Since: 323
     */
    function isAn(handle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x524AC5ECEA15343E | Since: 323
     */
    function isAPed(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0A7B270912999B3C | Since: 323
     */
    function isAMissionEntity(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6AC7003FA6E5575E | Since: 323
     */
    function isAVehicle(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8D68C8FD0FACA94E | Since: 323
     */
    function isAnObject(entity: number | Entity): boolean;
    /**
     * Checks if entity is within x/y/zSize distance of x/y/z.
     *
     * Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0
     *
     * Hash: 0x20B60995556D004F | Since: 323
     */
    function isAtCoord(entity: number | Entity, pos: Vector3, xSize: number, ySize: number, zSize: number): boolean;
    /**
     * Checks if entity1 is within the box defined by x/y/zSize of entity2.
     *
     * Last three parameters are almost alwasy p5 = 0, p6 = 1, p7 = 0
     *
     * Hash: 0x751B70C3D034E187 | Since: 323
     */
    function isAtEntity(entity1: number | Entity, entity2: number | Entity, xSize: number, ySize: number, zSize: number): boolean;
    /**
     * Whether the entity is attached to any other entity.
     *
     * Hash: 0xB346476EF1A64897 | Since: 323
     */
    function isAttached(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCF511840CEEDE0CC | Since: 323
     */
    function isAttachedToAnyObject(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB1632E9A5F988D11 | Since: 323
     */
    function isAttachedToAnyPed(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x26AA915AD89BFB4B | Since: 323
     */
    function isAttachedToAnyVehicle(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEFBE71898A993728 | Since: 323
     */
    function isAttachedToEntity(_from: number | Entity, to: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5F9532F3B5CC2551 | Since: 323
     */
    function isDead(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x886E37EC497200B6 | Since: 323
     */
    function isInAir(entity: number | Entity): boolean;
    /**
     * `p8` is a debug flag invoking functions in the same path as ``DRAW_MARKER``
     * `p10` is some entity flag check, also used in `IS_ENTITY_AT_ENTITY`, `IS_ENTITY_IN_AREA`, and `IS_ENTITY_AT_COORD`.
     * See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
     *
     * Hash: 0x51210CED3DA1C78A | Since: 323
     */
    function isInAngledArea(entity: number | Entity, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, debug: boolean, includeZ: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x54736AA40E271165 | Since: 323
     */
    function isInArea(entity: number | Entity, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    /**
     * Full list of zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/zones.json
     *
     * Hash: 0xB6463CF6AF527071 | Since: 323
     */
    function isInZone(entity: number | Entity, zone: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCFB0A0D8EDD145A3 | Since: 323
     */
    function isInWater(entity: number | Entity): boolean;
    /**
     * Get how much of the entity is submerged.  1.0f is whole entity.
     *
     * Hash: 0xE81AFC1BC4CC41CE | Since: 323
     */
    function getSubmergedLevel(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x694E00132F2823ED | Since: 323
     */
    function setRequiresMoreExpensiveRiverCheck(entity: number | Entity, toggle: boolean): void;
    /**
     * Returns true if the entity is in between the minimum and maximum values for the 2d screen coords.
     * This means that it will return true even if the entity is behind a wall for example, as long as you're looking at their location.
     * Chipping
     *
     * Hash: 0xE659E47AF827484B | Since: 323
     */
    function isOnScreen(entity: number | Entity): boolean;
    /**
     * `See also PED::IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM 0x6EC47A344923E1ED 0x3C30B447`
     *
     * `Taken from ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "creatures@shark@move", "attack_player", 3)`
     *
     * p4 is always 3 in the scripts.
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x1F0B79228E461EC9 | Since: 323
     */
    function isPlayingAnim(entity: number | Entity, animDict: string, animName: string, taskFlag: number): boolean;
    /**
     * `a static ped will not react to natives like "APPLY_FORCE_TO_ENTITY" or "SET_ENTITY_VELOCITY" and oftentimes will not react to task-natives like "TASK::TASK_COMBAT_PED". The only way I know of to make one of these peds react is to ragdoll them (or sometimes to use CLEAR_PED_TASKS_IMMEDIATELY(). Static peds include almost all far-away peds, beach-combers, peds in certain scenarios, peds crossing a crosswalk, peds walking to get back into their cars, and others. If anyone knows how to make a ped non-static without ragdolling them, please edit this with the solution.`
     *
     * Hash: 0x1218E6886D3D8327 | Since: 323
     */
    function isStatic(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x17FFC1B2BA35A494 | Since: 323
     */
    function isTouchingEntity(entity: number | Entity, targetEntity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0F42323798A58C8C | Since: 323
     */
    function isTouchingModel(entity: number | Entity, modelHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5333F526F6AB19AA | Since: 323
     */
    function isUpright(entity: number | Entity, angle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1DBD58820FA61D71 | Since: 323
     */
    function isUpsidedown(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x47D6F43D77935C75 | Since: 323
     */
    function isVisible(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD796CB5BA8F20E32 | Since: 323
     */
    function isVisibleToScript(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE31C2C72B8692B64 | Since: 323
     */
    function isOccluded(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEE5D2A122E09EC42 | Since: 323
     */
    function wouldBeOccluded(entityModelHash: number | string, pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD05BFF0C0A12C68F | Since: 323
     */
    function isWaitingForWorldCollision(entity: number | Entity): boolean;
    /**
     * Applies a force to the specified entity.
     *
     * **List of force types (p1)**:
     * public enum ForceType
     * {
     * MinForce = 0,
     * MaxForceRot = 1,
     * MinForce2 = 2,
     * MaxForceRot2 = 3,
     * ForceNoRot = 4,
     * ForceRotPlusForce = 5
     * }
     * Research/documentation on the gtaforums can be found here https://gtaforums.com/topic/885669-precisely-define-object-physics/) and here https://gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/.
     *
     * p6/relative - makes the xyz force not relative to world coords, but to something else
     * p7/highForce - setting false will make the force really low
     *
     * Hash: 0x18FF00FC7EFF559E | Since: 323
     */
    function applyForceToCenterOfMass(entity: number | Entity, forceType: number, pos: Vector3, isDirectionRel: boolean, isForceRel: boolean): void;
    /**
     * Documented here:
     * gtaforums.com/topic/885669-precisely-define-object-physics/
     * gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/
     *
     * forceFlags:
     * First bit (lowest): Strong force flag, factor 100
     * Second bit: Unkown flag
     * Third bit: Momentum flag=1 (vector (x,y,z) is a momentum, more research needed)
     * If higher bits are unequal 0 the function doesn't applay any forces at all.
     * (As integer possible values are 0-7)
     *
     * 0: weak force
     * 1: strong force
     * 2: same as 0 (2nd bit?)
     * 3: same as 1
     * 4: weak momentum
     * 5: strong momentum
     * 6: same as 4
     * 7: same as 5
     *
     * isLocal: vector defined in local (body-fixed) coordinate frame
     * isMassRel: if true the force gets multiplied with the objects mass (this is why it was known as highForce) and different objects will have the same acceleration.
     *
     * p8 !!! Whenever I set this !=0, my script stopped.
     *
     * Hash: 0xC5F68BE9613E2D18 | Since: 323
     */
    function applyForceTo(entity: number | Entity, forceFlags: number, pos: Vector3, offX: number, offY: number, offZ: number, boneIndex: number, isDirectionRel: boolean, ignoreUpVec: boolean, isForceRel: boolean): void;
    /**
     * Attaches entity1 to bone (boneIndex) of entity2.
     *
     * boneIndex - this is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use the index for attaching to specific bones. entity1 will be attached to entity2's centre if bone index given doesn't correspond to bone indexes for that entity type.
     *
     * useSoftPinning - if set to false attached entity will not detach when fixed
     * collision - controls collision between the two entities (FALSE disables collision).
     * isPed - pitch doesnt work when false and roll will only work on negative numbers (only peds)
     * vertexIndex - position of vertex
     * fixedRot - if false it ignores entity vector
     *
     *
     * Hash: 0x6B9BBD38AB0796DF | Since: 323
     */
    function attachToEntity(entity1: number | Entity, entity2: number | Entity, boneIndex: number, pos: Vector3, rot: Vector3, useSoftPinning: boolean, collision: boolean, isPed: boolean, vertexIndex: number, fixedRot: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x5C48B75732C8456C | Since: 791
     */
    function attachBoneToEntityBone(entity1: number | Entity, entity2: number | Entity, boneIndex1: number, boneIndex2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFD1695C5D3B05439 | Since: 791
     */
    function attachBoneToEntityBoneYForward(entity1: number | Entity, entity2: number | Entity, boneIndex1: number, boneIndex2: number): void;
    /**
     * breakForce is the amount of force required to break the bond.
     * p14 - is always 1 in scripts
     * p15 - is 1 or 0 in scripts - unknoun what it does
     * p16 - controls collision between the two entities (FALSE disables collision).
     * p17 - do not teleport entity to be attached to the position of the bone Index of the target entity (if 1, entity will not be teleported to target bone)
     * p18 - is always 2 in scripts.
     *
     *
     *
     * Hash: 0xC3675780C92F90F9 | Since: 323
     */
    function attachToEntityPhysically(entity1: number | Entity, entity2: number | Entity, boneIndex1: number, boneIndex2: number, xPos1: number, yPos1: number, zPos1: number, xPos2: number, yPos2: number, zPos2: number, rot: Vector3, breakForce: number, fixedRot: boolean, collision: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x168A09D1B25B0BA4 | Since: 2944
     */
    function attachToEntityPhysicallyOverrideInverseMass(firstEntityIndex: number | Entity, secondEntityIndex: number | Entity, firstEntityBoneIndex: number, secondEntityBoneIndex: number, secondEntityOffsetX: number, secondEntityOffsetY: number, secondEntityOffsetZ: number, firstEntityOffsetX: number, firstEntityOffsetY: number, firstEntityOffsetZ: number, vecRotationX: number, vecRotationY: number, vecRotationZ: number, physicalStrength: number, constrainRotation: boolean, doInitialWarp: boolean, collideWithEntity: boolean, addInitialSeperation: boolean, rotOrder: number, invMassScaleA: number, invMassScaleB: number): void;
    /**
     * Called to update entity attachments.
     *
     * Hash: 0xF4080490ADC51C6F | Since: 323
     */
    function processAttachments(entity: number | Entity): void;
    /**
     * Returns the index of the bone. If the bone was not found, -1 will be returned.
     *
     * list:
     * https://pastebin.com/D7JMnX1g
     *
     * BoneNames:
     * chassis,
     * windscreen,
     * seat_pside_r,
     * seat_dside_r,
     * bodyshell,
     * suspension_lm,
     * suspension_lr,
     * platelight,
     * attach_female,
     * attach_male,
     * bonnet,
     * boot,
     * chassis_dummy,  //Center of the dummy
     * chassis_Control,    //Not found yet
     * door_dside_f,   //Door left, front
     * door_dside_r,   //Door left, back
     * door_pside_f,   //Door right, front
     * door_pside_r,   //Door right, back
     * Gun_GripR,
     * windscreen_f,
     * platelight, //Position where the light above the numberplate is located
     * VFX_Emitter,
     * window_lf,  //Window left, front
     * window_lr,  //Window left, back
     * window_rf,  //Window right, front
     * window_rr,  //Window right, back
     * engine, //Position of the engine
     * gun_ammo,
     * ROPE_ATTATCH,   //Not misspelled. In script "finale_heist2b.c4".
     * wheel_lf,   //Wheel left, front
     * wheel_lr,   //Wheel left, back
     * wheel_rf,   //Wheel right, front
     * wheel_rr,   //Wheel right, back
     * exhaust,    //Exhaust. shows only the position of the stock-exhaust
     * overheat,   //A position on the engine(not exactly sure, how to name it)
     * misc_e, //Not a car-bone.
     * seat_dside_f,   //Driver-seat
     * seat_pside_f,   //Seat next to driver
     * Gun_Nuzzle,
     * seat_r
     *
     * I doubt that the function is case-sensitive, since I found a "Chassis" and a "chassis". - Just tested: Definitely not case-sensitive.
     *
     *
     *
     * Hash: 0xFB71170B7E76ACBA | Since: 323
     */
    function getBoneIndexByName(entity: number | Entity, boneName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xA72CD9CA74A5ECBA | Since: 323
     */
    function clearLastDamageEntity(entity: number | Entity): void;
    /**
     * Deletes the specified entity, then sets the handle pointed to by the pointer to NULL.
     *
     * Hash: 0xAE3CBE5BF394C9C9 | Since: 323
     */
    function deleteEntity(entity: number | Entity): void;
    /**
     * If `collision` is set to true, both entities won't collide with the other until the distance between them is above 4 meters.
     * Set `dynamic` to true to keep velocity after dettaching
     *
     * Hash: 0x961AC54BF0613F5D | Since: 323
     */
    function detach(entity: number | Entity, dynamic: boolean, collision: boolean): void;
    /**
     * Freezes or unfreezes an entity preventing its coordinates to change by the player if set to `true`. You can still change the entity position using SET_ENTITY_COORDS.
     *
     * Hash: 0x428CA6DBD1094446 | Since: 323
     */
    function freezePosition(entity: number | Entity, toggle: boolean): void;
    /**
     * True means it can be deleted by the engine when switching lobbies/missions/etc, false means the script is expected to clean it up.
     *
     * "Allow Freeze If No Collision"
     *
     * Hash: 0x3910051CCECDB00C | Since: 323
     */
    function setShouldFreezeWaitingOnCollision(entity: number | Entity, toggle: boolean): void;
    /**
     * delta and bitset are guessed fields. They are based on the fact that most of the calls have 0 or nil field types passed in.
     *
     * The only time bitset has a value is 0x4000 and the only time delta has a value is during stealth with usually <1.0f values.
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x7FB218262B810701 | Since: 323
     */
    function playAnim(entity: number | Entity, animName: string, animDict: string, loop: boolean, stayInAnim: boolean, delta: number, bitset: any): boolean;
    /**
     * p4 and p7 are usually 1000.0f.
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0xC77720A12FE14A86 | Since: 323
     */
    function playSynchronizedAnim(entity: number | Entity, syncedScene: number, animation: string, propName: string): boolean;
    /**
     * p6,p7 probably animname and animdict
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0xB9C54555ED30FBC4 | Since: 323
     */
    function playSynchronizedMapAnim(x1: number, y1: number, z1: number, x2: number, y2: any, z2: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x11E79CAB7183B6F5 | Since: 323
     */
    function stopSynchronizedMapAnim(x1: number, y1: number, z1: number, x2: number, y2: any, z2: number): boolean;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * RAGEPluginHook list: docs.ragepluginhook.net/html/62951c37-a440-478c-b389-c471230ddfc5.htm
     *
     * Hash: 0x28004F88151E03E0 | Since: 323
     */
    function stopAnim(entity: number | Entity, animation: string, animGroup: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x43D3807C077261E3 | Since: 323
     */
    function stopSynchronizedAnim(entity: number | Entity): boolean;
    /**
     * `if (ENTITY::HAS_ANIM_EVENT_FIRED(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("CreateObject")))`
     *
     * Hash: 0xEAF4CD9EA3E7E922 | Since: 323
     */
    function hasAnimEventFired(entity: number | Entity, actionHash: number | string): boolean;
    /**
     * In the script "player_scene_t_bbfight.c4":
     * `"if (ENTITY::FIND_ANIM_EVENT_PHASE(&l_16E, &l_19F[v_4\/\*16\*\/], v_9, &v_A, &v_B))"`
     * -- &l_16E (p0) is requested as an anim dictionary earlier in the script.
     * -- &l_19F[v_4\/\*16\*\/] (p1) is used in other natives in the script as the "animation" param.
     * -- v_9 (p2) is instantiated as "victim_fall"; I'm guessing that's another anim
     * --v_A and v_B (p3 & p4) are both set as -1.0, but v_A is used immediately after this native for:
     * `"if (v_A < ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(...))"`
     * Both v_A and v_B are seemingly used to contain both Vector3's and floats, so I can't say what either really is other than that they are both output parameters. p4 looks more like a *Vector3 though
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x07F1BE2BCCAA27A7 | Since: 323
     */
    function findAnimEventPhase(animDictionary: string, animName: string): [boolean, any, any];
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x4487C259F0F70977 | Since: 323
     */
    function setAnimCurrentTime(entity: number | Entity, animDictionary: string, animName: string, time: number): void;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x28D1A16553C51776 | Since: 323
     */
    function setAnimSpeed(entity: number | Entity, animDictionary: string, animName: string, speedMultiplier: number): void;
    /**
     * Makes the specified entity (ped, vehicle or object) persistent. Persistent entities will not automatically be removed by the engine.
     *
     * p1 has no effect when either its on or off
     * maybe a quick disassembly will tell us what it does
     *
     * p2 has no effect when either its on or off
     * maybe a quick disassembly will tell us what it does
     *
     * Hash: 0xAD738C3085FE7E11 | Since: 323
     */
    function setAsMissionEntity(entity: number | Entity): void;
    /**
     * Marks the specified entity (ped, vehicle or object) as no longer needed if its population type is set to the mission type.
     * If the entity is ped, it will also clear their tasks immediately just like when CLEAR_PED_TASKS_IMMEDIATELY is called.
     * Entities marked as no longer needed, will be deleted as the engine sees fit.
     * Use this if you just want to just let the game delete the ped:
     * void MarkPedAsAmbientPed(Ped ped) {
     * auto addr = getScriptHandleBaseAddress(ped);
     *
     * if (!addr) {
     * return;
     * }
     *
     * //the game uses only lower 4 bits as entity population type
     * BYTE origValue = *(BYTE *)(addr + 0xDA);
     * `*(BYTE *)(addr + 0xDA) = ((origValue & 0xF0) | ePopulationType::POPTYPE_RANDOM_AMBIENT);`
     * }
     *
     * Hash: 0xB736A491E64A32CF | Since: 323
     */
    function setAsNoLongerNeeded(entity: number | Entity): void;
    /**
     * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
     *
     * Hash: 0x2595DD4236549CE3 | Since: 323
     */
    function setPedAsNoLongerNeeded(ped: number | Ped): void;
    /**
     * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
     *
     * Hash: 0x629BFA74418D6239 | Since: 323
     */
    function setVehicleAsNoLongerNeeded(vehicle: number | Vehicle): void;
    /**
     * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
     *
     * Hash: 0x3AE22DEB5BA5A3E6 | Since: 323
     */
    function setObjectAsNoLongerNeeded(obj: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x1760FFA8AB074D66 | Since: 323
     */
    function setCanBeDamaged(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD95CC5D2AB15A09F | Since: 757
     */
    function getCanBeDamaged(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE22D8FDE858B8119 | Since: 323
     */
    function setCanBeDamagedByRelationshipGroup(entity: number | Entity, bCanBeDamaged: boolean, relGroup: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x352E2B5CF420BF3B | Since: 573
     */
    function setCanOnlyBeDamagedByScriptParticipants(entity: number | Entity, toggle: boolean): void;
    /**
     * Sets whether the entity can be targeted without being in line-of-sight.
     *
     * Hash: 0xD3997889736FD899 | Since: 323
     */
    function setCanBeTargetedWithoutLos(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1A9205C1B9EE827F | Since: 323
     */
    function setCollision(entity: number | Entity, toggle: boolean, keepPhysics: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCCF1E97BEFDAE480 | Since: 323
     */
    function getCollisionDisabled(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9EBC85ED0FFFE51C | Since: 323
     */
    function setCompletelyDisableCollision(entity: number | Entity, toggle: boolean, keepPhysics: boolean): void;
    /**
     * p7 is always 1 in the scripts. Set to 1, an area around the destination coords for the moved entity is cleared from other entities.
     *
     * Often ends with 1, 0, 0, 1); in the scripts. It works.
     *
     * Axis - Invert Axis Flags
     *
     * Hash: 0x06843DA7060A026B | Since: 323
     */
    function setCoords(entity: number | Entity, pos: Vector3, xAxis: boolean, yAxis: boolean, zAxis: boolean, clearArea: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x621873ECE1178967 | Since: 323
     */
    function setCoordsWithoutPlantsReset(entity: number | Entity, pos: Vector3, alive: boolean, deadFlag: boolean, ragdollFlag: boolean, clearArea: boolean): void;
    /**
     * Axis - Invert Axis Flags
     *
     * Hash: 0x239A3351AC1DA385 | Since: 323
     */
    function setCoordsNoOffset(entity: number | Entity, pos: Vector3, xAxis: boolean, yAxis: boolean, zAxis: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1718DE8E3F2823CA | Since: 323
     */
    function setDynamic(entity: number | Entity, toggle: boolean): void;
    /**
     * Set the heading of an entity in degrees also known as "Yaw".
     *
     * Hash: 0x8E2530AA8ADA980E | Since: 323
     */
    function setHeading(entity: number | Entity, heading: number): void;
    /**
     * health >= 0
     * male ped ~= 100 - 200
     * female ped ~= 0 - 100
     *
     * Hash: 0x6B76DC1F3AE6E6A3 | Since: 323
     */
    function setHealth(entity: number | Entity, health: number, instigator: number | Entity, weaponType: number | string): void;
    /**
     * Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions and the tazer animation won't apply either.
     *
     * If you use this for a ped and you want Ragdoll to stay enabled, then do:
     * *(DWORD *)(pedAddress + 0x188) |= (1 << 9);
     *
     * Use this if you want to get the invincibility status:
     * bool IsPedInvincible(Ped ped)
     * {
     * auto addr = getScriptHandleBaseAddress(ped);
     *
     * if (addr)
     * {
     * DWORD flag = *(DWORD *)(addr + 0x188);
     * return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);
     * }
     *
     * return false;
     * }
     *
     * Hash: 0x3882114BDE571AD4 | Since: 323
     */
    function setInvincible(entity: number | Entity, toggle: boolean, dontResetOnCleanup: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEA02E132F5C68722 | Since: 323
     */
    function setIsTargetPriority(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x7CFBA6A80BDF3874 | Since: 323
     */
    function setLights(entity: number | Entity, toggle: boolean): void;
    /**
     * Loads collision grid for an entity spawned outside of a player's loaded area. This allows peds to execute tasks rather than sit dormant because of a lack of a physics grid.
     * Certainly not the main usage of this native but when set to true for a Vehicle, it will prevent the vehicle to explode if it is spawned far away from the player.
     *
     * Hash: 0x0DC7CABAB1E9B67E | Since: 323
     */
    function setLoadCollisionFlag(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE9676F61BC0B3321 | Since: 323
     */
    function hasCollisionLoadedAround(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0E46A3FCBDE2A1B1 | Since: 323
     */
    function setMaxSpeed(entity: number | Entity, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x79F020FF9EDC0748 | Since: 323
     */
    function setOnlyDamagedByPlayer(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7022BD828FA0B082 | Since: 323
     */
    function setOnlyDamagedByRelationshipGroup(entity: number | Entity): void;
    /**
     * Enable / disable each type of damage.
     *
     * waterProof is damage related to water not drowning
     * --------------
     * `p7 is to to '1' in am_mp_property_ext/int: ENTITY::SET_ENTITY_PROOFS(uParam0->f_19, true, true, true, true, true, true, 1, true);`
     *
     *
     * Hash: 0xFAEE099C6F890BB8 | Since: 323
     */
    function setProofs(entity: number | Entity, bulletProof: boolean, fireProof: boolean, explosionProof: boolean, collisionProof: boolean, meleeProof: boolean, steamProof: boolean, dontResetOnCleanup: boolean, waterProof: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBE8CD9BE829BBEBF | Since: 1604
     */
    function getProofs(entity: number | Entity): [boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean];
    /**
     * w is the correct parameter name!
     *
     * Hash: 0x77B21BE7AC540F07 | Since: 323
     */
    function setQuaternion(entity: number | Entity, pos: Vector3, w: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A50A1EEDAD01E65 | Since: 323
     */
    function setRecordsCollisions(entity: number | Entity, toggle: boolean): void;
    /**
     * rotationOrder refers to the order yaw pitch roll is applied
     * value ranges from 0 to 5. What you use for rotationOrder when setting must be the same as rotationOrder when getting the rotation.
     * Unsure what value corresponds to what rotation order, more testing will be needed for that.
     * For the most part R* uses 1 or 2 as the order.
     * p5 is usually set as true
     *
     *
     * Hash: 0x8524A8B0171D5E07 | Since: 323
     */
    function setRotation(entity: number | Entity, pitch: number, roll: number, yaw: number, rotationOrder: number): void;
    /**
     * p2 is always 0.
     *
     * Hash: 0xEA1C610A04DB6BBB | Since: 323
     */
    function setVisible(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC34BC448DA29F5E9 | Since: 573
     */
    function setWaterReflectionFlag(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE66377CDDADA4810 | Since: 1734
     */
    function setMirrorReflectionFlag(entity: number | Entity): void;
    /**
     * Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
     *
     * Hash: 0x1C99BB7B6E96D16F | Since: 323
     */
    function setVelocity(entity: number | Entity, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x8339643499D1222E | Since: 2372
     */
    function setAngularVelocity(entity: number | Entity, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x4A4722448F18EEF5 | Since: 323
     */
    function setHasGravity(entity: number | Entity, toggle: boolean): void;
    /**
     * LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).
     *
     * Hash: 0x5927F96A78577363 | Since: 323
     */
    function setLodDist(entity: number | Entity, value: number): void;
    /**
     * Returns the LOD distance of an entity.
     *
     * Hash: 0x4159C2762B5791D6 | Since: 323
     */
    function getLodDist(entity: number | Entity): number;
    /**
     * skin - everything alpha except skin
     * Set entity alpha level. Ranging from 0 to 255 but chnages occur after every 20 percent (after every 51).
     *
     * Hash: 0x44A0870B7E92D7C0 | Since: 323
     */
    function setAlpha(entity: number | Entity, alphaLevel: number, skin: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A47B3B5E63E94C6 | Since: 323
     */
    function getAlpha(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x9B1E824FFBB7027A | Since: 323
     */
    function resetAlpha(entity: number | Entity): void;
    /**
     * Similar to RESET_ENTITY_ALPHA
     *
     * Hash: 0x490861B88F4FD846 | Since: 944
     */
    function resetPickupGlow(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xCEA7C8E1B48FF68C | Since: 678
     */
    function setPickupCollidesWithProjectiles(): void;
    /**
     * Only called once in the scripts.
     *
     * Related to weapon objects.
     *
     *
     * Hash: 0x5C3B791D580E0BC2 | Since: 323
     */
    function setSortBias(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xACAD101E1FB66689 | Since: 323
     */
    function setAlwaysPrerender(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x730F5F8D3F0F2050 | Since: 323
     */
    function setRenderScorched(entity: number | Entity, toggle: boolean): void;
    /**
     * Example here: www.gtaforums.com/topic/830463-help-with-turning-lights-green-and-causing-peds-to-crash-into-each-other/#entry1068211340
     *
     * 0 = green
     * 1 = red
     * 2 = yellow
     * 3 = reset changes
     * changing lights may not change the behavior of vehicles
     *
     * Hash: 0x57C5DB656185EAC4 | Since: 323
     */
    function setTrafficlightOverride(entity: number | Entity, state: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x78E8E3A640178255 | Since: 323
     */
    function setIsInVehicle(entity: number | Entity): void;
    /**
     * Only works with objects!
     *
     * Hash: 0x92C47782FDA8B2A3 | Since: 323
     */
    function createModelSwap(pos: Vector3, radius: number, originalModel: number | string, newModel: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x033C0F9A64E229AE | Since: 323
     */
    function removeModelSwap(pos: Vector3, radius: number, originalModel: number | string, newModel: number | string): void;
    /**
     * p5 = sets as true in scripts
     * Same as the comment for CREATE_MODEL_SWAP unless for some reason p5 affects it this only works with objects as well.
     *
     * Network players do not see changes done with this.
     *
     * Hash: 0x8A97BCA30A0CE478 | Since: 323
     */
    function createModelHide(pos: Vector3, radius: number, modelHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3A52AE588830BF7F | Since: 323
     */
    function createModelHideExcludingScriptObjects(pos: Vector3, radius: number, modelHash: number | string): void;
    /**
     * This native makes entities visible that are hidden by the native CREATE_MODEL_HIDE.
     * p5 should be false, true does nothing
     *
     * Hash: 0xD9E3006FB3CBD765 | Since: 323
     */
    function removeModelHide(pos: Vector3, radius: number, modelHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x150E808B375A385A | Since: 323
     */
    function createForcedObject(pos: Vector3, modelHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x61B6775E83C0DB6F | Since: 323
     */
    function removeForcedObject(pos: Vector3, modelHash: number | string): void;
    /**
     * Calling this function disables collision between two entities.
     * The importance of the order for entity1 and entity2 is unclear.
     * The third parameter, `thisFrame`, decides whether the collision is to be disabled until it is turned back on, or if it's just this frame.
     *
     * Hash: 0xA53ED5520C07654A | Since: 323
     */
    function setNoCollisionEntity(entity1: number | Entity, entity2: number | Entity, thisFrameOnly: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A27A7827347B3B1 | Since: 3407
     */
    function setNoCollisionWithNetworkedEntity(entity1: number | Entity, entity2: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x295D82A8559F9150 | Since: 323
     */
    function setMotionBlur(entity: number | Entity, toggle: boolean): void;
    /**
     * p1 always false.
     *
     * Hash: 0xE12ABE5E3A389A6C | Since: 323
     */
    function setCanAutoVaultOn(entity: number | Entity, toggle: boolean): void;
    /**
     * p1 always false.
     *
     * Hash: 0xA80AE305E0A3044F | Since: 323
     */
    function setCanClimbOn(entity: number | Entity, toggle: boolean): void;
    /**
     * Only called within 1 script for x360. 'fm_mission_controller' and it used on an object.
     *
     * Ran after these 2 natives,
     * set_object_targettable(uParam0, 0);
     * set_entity_invincible(uParam0, 1);
     *
     * Hash: 0xDC6F8601FAF2E893 | Since: 323
     */
    function setWaitForCollisionsBeforeProbe(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2C2E3DC128F44309 | Since: 323
     */
    function setNoweapondecals(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x1A092BB0C3808B96 | Since: 323
     */
    function setUseMaxDistanceForWaterReflection(entity: number | Entity): void;
    /**
     * Gets the world rotation of the specified bone of the specified entity.
     *
     * Hash: 0xCE6294A232D03786 | Since: 791
     */
    function getBoneRotation(entity: number | Entity, boneIndex: number): Vector3;
    /**
     * Gets the world position of the specified bone of the specified entity.
     *
     * Hash: 0x46F8696933A63C9B | Since: 877
     */
    function getBonePostion(entity: number | Entity, boneIndex: number): Vector3;
    /**
     * Gets the local rotation of the specified bone of the specified entity.
     *
     * Hash: 0xBD8D32550E5CEBFE | Since: 1734
     */
    function getBoneObjectRotation(entity: number | Entity, boneIndex: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xCF1247CC86961FD6 | Since: 2802
     */
    function getBoneObjectPostion(entity: number | Entity, boneIndex: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xB328DCC3A3AA401B | Since: 791
     */
    function getBoneCount(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x6CE177D014502E8A | Since: 877
     */
    function enableBulletCollision(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xB17BC6453F6CF5AC | Since: 944
     */
    function setCanOnlyBeDamagedByEntity(entity1: number | Entity, entity2: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x68B562E124CC0AEF | Since: 1180
     */
    function setCantCauseCollisionDamagedEntity(entity1: number | Entity, entity2: number | Entity): void;
    /**
     * p1 is always set to 1
     *
     * Hash: 0x36F32DE87082343E | Since: 1011
     */
    function setAllowMigrateToSpectator(entity: number | Entity): void;
    /**
     * Gets the handle of an entity with a specific model hash attached to another entity, such as an object attached to a ped.
     * This native does not appear to have anything to do with pickups as in scripts it is used with objects.
     *
     * Example from fm_mission_controller_2020.c:
     *
     * `iVar8 = ENTITY::GET_ENTITY_OF_TYPE_ATTACHED_TO_ENTITY(bParam0->f_9, joaat("p_cs_clipboard"));`
     *
     * Hash: 0x1F922734E259BD26 | Since: 1180
     */
    function getOfTypeAttachedToEntity(entity: number | Entity, modelHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xD7B80E7C3BEFC396 | Since: 1180
     */
    function setPickUpByCargobobDisabled(entity: number | Entity, toggle: boolean): void;
}
export declare namespace event {
    /**
     * No comment provided
     *
     * Hash: 0xB604A2942ADED0EE | Since: 323
     */
    function setDecisionMaker(ped: number | Ped, name: number | string): void;
    /**
     * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
     *
     * Hash: 0x4FC9381A7AEE8968 | Since: 323
     */
    function clearDecisionMakerResponse(name: number | string, eventType: number): void;
    /**
     * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
     *
     * This is limited to 4 blocked events at a time.
     *
     * Hash: 0xE42FCDFD0E4196F7 | Since: 323
     */
    function blockDecisionMaker(name: number | string, eventType: number): void;
    /**
     * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
     *
     * Hash: 0xD7CD9CF34F2C99E8 | Since: 323
     */
    function unblockDecisionMaker(name: number | string, eventType: number): void;
    /**
     * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
     *
     * Hash: 0xD9F8455409B525E9 | Since: 323
     */
    function addShockingAtPosition(eventType: number, pos: Vector3, duration: number): number;
    /**
     * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
     *
     * Hash: 0x7FD8F3BE76F89422 | Since: 323
     */
    function addShockingForEntity(eventType: number, entity: number | Entity, duration: number): number;
    /**
     * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
     *
     * Hash: 0x1374ABB7C15BAB92 | Since: 323
     */
    function isShockingInSphere(eventType: number, pos: Vector3, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2CDA538C44C6CCE5 | Since: 323
     */
    function removeShocking(event: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEAABE8FDFA21274C | Since: 323
     */
    function removeAllShockings(): void;
    /**
     * No comment provided
     *
     * Hash: 0x340F1415B68AEADE | Since: 323
     */
    function removeShockingSpawnBlockingAreas(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F9A292AD0A3BD89 | Since: 323
     */
    function suppressShockingsNextFrame(): void;
    /**
     * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
     *
     * Hash: 0x3FD2EC8BF1F1CF30 | Since: 323
     */
    function suppressShockingTypeNextFrame(eventType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5F3B7749C112D552 | Since: 323
     */
    function suppressAgitationsNextFrame(): void;
}
export declare namespace extrametadata {
    /**
     * Character types:
     * 0 = Michael,
     * 1 = Franklin,
     * 2 = Trevor,
     * 3 = MPMale,
     * 4 = MPFemale
     *
     * Hash: 0x278F76C3B0A8F109 | Since: 323
     */
    function getNumTattooShopDlcItems(character: number): number;
    /**
     * Character types:
     * 0 = Michael,
     * 1 = Franklin,
     * 2 = Trevor,
     * 3 = MPMale,
     * 4 = MPFemale
     *
     *
     * enum TattooZoneData
     * {
     * ZONE_TORSO = 0,
     * ZONE_HEAD = 1,
     * ZONE_LEFT_ARM = 2,
     * ZONE_RIGHT_ARM = 3,
     * ZONE_LEFT_LEG = 4,
     * ZONE_RIGHT_LEG = 5,
     * ZONE_UNKNOWN = 6,
     * ZONE_NONE = 7,
     * };
     * struct outComponent
     * {
     * // these vars are suffixed with 4 bytes of padding each.
     * uint unk;
     * int unk2;
     * uint tattooCollectionHash;
     * uint tattooNameHash;
     * int unk3;
     * TattooZoneData zoneId;
     * uint unk4;
     * uint unk5;
     * // maybe more, not sure exactly, decompiled scripts are very vague around this part.
     * }
     *
     * Hash: 0xFF56381874F82086 | Since: 323
     */
    function getTattooShopDlcItemData(characterType: number, decorationIndex: number): [boolean, any];
    /**
     * Returns some sort of index/offset for overlays/decorations.
     *
     * Character types:
     * 0 = Michael,
     * 1 = Franklin,
     * 2 = Trevor,
     * 3 = MPMale,
     * 4 = MPFemale
     *
     * Hash: 0x10144267DD22866C | Since: 2189
     */
    function getTattooShopDlcItemIndex(overlayHash: number | string, character: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x1E8C308FD312C036 | Since: 323
     */
    function initShopPedComponent(): any;
    /**
     * No comment provided
     *
     * Hash: 0xEB0A2B758F7B850F | Since: 323
     */
    function initShopPedProp(): any;
    /**
     * No comment provided
     *
     * Hash: 0x50F457823CE6EB5F | Since: 323
     */
    function setupShopPedApparelQuery(): number;
    /**
     * character is 0 for Michael, 1 for Franklin, 2 for Trevor, 3 for freemode male, and 4 for freemode female.
     *
     * componentId is between 0 and 11 and corresponds to the usual component slots.
     *
     * p1 could be the outfit number; unsure.
     *
     * p2 is usually -1; unknown function.
     *
     * p3 appears to be for selecting between clothes and props; false is used with components/clothes, true is used with props.
     *
     * p4 is usually -1; unknown function.
     *
     * componentId is -1 when p3 is true in decompiled scripts.
     *
     * Hash: 0x9BDF59818B1E38C1 | Since: 323
     */
    function setupShopPedApparelQueryTu(character: number, componentId: number): number;
    /**
     * See https://git.io/JtcRf for example and structs.
     *
     * Hash: 0x249E310B2D920699 | Since: 323
     */
    function getShopPedQueryComponent(componentId: number): any;
    /**
     * Returns some sort of index/offset for components.
     * Needs _GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = false and componentId with the drawable's component slot first, returns -1 otherwise.
     *
     * Hash: 0x96E2929292A4DB77 | Since: 2189
     */
    function getShopPedQueryComponentIndex(componentHash: number | string): number;
    /**
     * More info here: https://gist.github.com/root-cause/3b80234367b0c856d60bf5cb4b826f86
     *
     * Hash: 0x74C0E2A57EC66760 | Since: 323
     */
    function getShopPedComponent(componentHash: number | string): any;
    /**
     * See https://git.io/JtcRf for example and structs.
     *
     * Hash: 0xDE44A00999B2837D | Since: 323
     */
    function getShopPedQueryProp(componentId: number): any;
    /**
     * Returns some sort of index/offset for props.
     * Needs _GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = true and componentId = -1 first, returns -1 otherwise.
     *
     * Hash: 0x6CEBE002E58DEE97 | Since: 2189
     */
    function getShopPedQueryPropIndex(componentHash: number | string): number;
    /**
     * More info here: https://gist.github.com/root-cause/3b80234367b0c856d60bf5cb4b826f86
     *
     * Hash: 0x5D5CAFF661DDF6FC | Since: 323
     */
    function getShopPedProp(componentHash: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0x0368B3A838070348 | Since: 323
     */
    function getHashNameForComponent(entity: number | Entity, componentId: number, drawableVariant: number, textureVariant: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x5D6160275CAEC8DD | Since: 323
     */
    function getHashNameForProp(entity: number | Entity, componentId: number, propIndex: number, propTextureIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xC17AD0E5752BECDA | Since: 323
     */
    function getShopPedApparelVariantComponentCount(componentHash: number | string): number;
    /**
     * `propHash`: Ped helmet prop hash?
     * This native returns 1 when the player helmet has a visor (there is another prop index for the same helmet with closed/opened visor variant) that can be toggled. 0 if there's no alternative version with a visor for this helmet prop.
     *
     * Hash: 0xD40AAC51E8E4C663 | Since: 791
     */
    function getShopPedApparelVariantPropCount(propHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x6E11F282F11863B6 | Since: 323
     */
    function getVariantComponent(componentHash: number | string, variantComponentIndex: number): [number, number, number];
    /**
     * No comment provided
     *
     * Hash: 0xD81B7F27BC773E66 | Since: 791
     */
    function getVariantProp(componentHash: number | string, variantPropIndex: number): [number, number, number];
    /**
     * Returns number of possible values of the forcedComponentIndex argument of GET_FORCED_COMPONENT.
     *
     * Hash: 0xC6B9DB42C04DD8C3 | Since: 323
     */
    function getShopPedApparelForcedComponentCount(componentHash: number | string): number;
    /**
     * Returns number of possible values of the forcedPropIndex argument of GET_FORCED_PROP.
     *
     * Hash: 0x017568A8182D98A6 | Since: 323
     */
    function getShopPedApparelForcedPropCount(componentHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x6C93ED8C2F74859B | Since: 323
     */
    function getForcedComponent(componentHash: number | string, forcedComponentIndex: number): [number, number, number];
    /**
     * No comment provided
     *
     * Hash: 0xE1CA84EBF72E691D | Since: 323
     */
    function getForcedProp(componentHash: number | string, forcedPropIndex: number): [number, number, number];
    /**
     * Full list of restriction tags by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedApparelRestrictionTags.json
     *
     * componentId/last parameter seems to be unused.
     *
     * Hash: 0x341DE7ED1D2A1BFD | Since: 323
     */
    function doesShopPedApparelHaveRestrictionTag(componentHash: number | string, restrictionTagHash: number | string, componentId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7796B21B76221BC5 | Since: 2612
     */
    function doesCurrentPedComponentHaveRestrictionTag(ped: number | Ped, componentId: number, restrictionTagHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD726BAB4554DA580 | Since: 2612
     */
    function doesCurrentPedPropHaveRestrictionTag(ped: number | Ped, componentId: number, restrictionTagHash: number | string): boolean;
    /**
     * characters
     *
     * 0: Michael
     * 1: Franklin
     * 2: Trevor
     * 3: MPMale
     * 4: MPFemale
     *
     * Hash: 0xF3FBE2D50A6A8C28 | Since: 323
     */
    function setupShopPedOutfitQuery(character: number): number;
    /**
     * outfitIndex: from 0 to SETUP_SHOP_PED_OUTFIT_QUERY(characterIndex, false) - 1.
     * See https://git.io/JtcB8 for example and outfit struct.
     *
     * Hash: 0x6D793F03A631FE56 | Since: 323
     */
    function getShopPedQueryOutfit(outfitIndex: number): any;
    /**
     * No comment provided
     *
     * Hash: 0xB7952076E444979D | Since: 323
     */
    function getShopPedOutfit(): any;
    /**
     * No comment provided
     *
     * Hash: 0x073CA26B079F956E | Since: 323
     */
    function getShopPedOutfitLocate(): number;
    /**
     * See https://git.io/JtcBH for example and structs.
     *
     * Hash: 0xA9F9C2E0FDE11CBB | Since: 323
     */
    function getShopPedOutfitPropVariant(outfitHash: number | string, variantIndex: number): [boolean, any];
    /**
     * See https://git.io/JtcBH for example and structs.
     *
     * Hash: 0x19F2A026EDF0013F | Since: 323
     */
    function getShopPedOutfitComponentVariant(outfitHash: number | string, variantIndex: number): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xA7A866D21CD2329B | Since: 323
     */
    function getNumDlcVehicles(): number;
    /**
     * dlcVehicleIndex is 0 to GET_NUM_DLC_VEHICLS() - 1
     *
     * Hash: 0xECC01B7C5763333C | Since: 323
     */
    function getDlcVehicleModel(dlcVehicleIndex: number): number;
    /**
     * dlcVehicleIndex takes a number from 0 - GET_NUM_DLC_VEHICLES() - 1.
     * outData is a struct of 3 8-byte items.
     * The Second item in the struct *(Hash *)(outData + 1) is the vehicle hash.
     *
     * Hash: 0x33468EDC08E371F6 | Since: 323
     */
    function getDlcVehicleData(dlcVehicleIndex: number): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x5549EE11FA22FCF2 | Since: 323
     */
    function getDlcVehicleFlags(dlcVehicleIndex: number): number;
    /**
     * Returns the total number of DLC weapons.
     *
     * Hash: 0xEE47635F352DA367 | Since: 323
     */
    function getNumDlcWeapons(): number;
    /**
     * Returns the total number of DLC weapons that are available in SP (availableInSP field in shop_weapon.meta).
     *
     * Hash: 0x4160B65AE085B5A9 | Since: 2060
     */
    function getNumDlcWeaponsSp(): number;
    /**
     *
     * dlcWeaponIndex takes a number from 0 - GET_NUM_DLC_WEAPONS() - 1.
     * struct DlcWeaponData
     * {
     * `int emptyCheck; //use DLC1::IS_CONTENT_ITEM_LOCKED on this`
     * int padding1;
     * int weaponHash;
     * int padding2;
     * int unk;
     * int padding3;
     * int weaponCost;
     * int padding4;
     * int ammoCost;
     * int padding5;
     * int ammoType;
     * int padding6;
     * int defaultClipSize;
     * int padding7;
     * char nameLabel[64];
     * char descLabel[64];
     * char desc2Label[64]; // usually "the" + name
     * char upperCaseNameLabel[64];
     * };
     *
     * Hash: 0x79923CD21BECE14E | Since: 323
     */
    function getDlcWeaponData(dlcWeaponIndex: number): [boolean, any];
    /**
     * Same as GET_DLC_WEAPON_DATA but only works for DLC weapons that are available in SP.
     *
     * Hash: 0x310836EE7129BA33 | Since: 2060
     */
    function getDlcWeaponDataSp(dlcWeaponIndex: number): [boolean, any];
    /**
     * Returns the total number of DLC weapon components.
     *
     * Hash: 0x405425358A7D61FE | Since: 323
     */
    function getNumDlcWeaponComponents(dlcWeaponIndex: number): number;
    /**
     * Returns the total number of DLC weapon components that are available in SP.
     *
     * Hash: 0xAD2A7A6DFF55841B | Since: 2060
     */
    function getNumDlcWeaponComponentsSp(dlcWeaponIndex: number): number;
    /**
     * p0 seems to be the weapon index
     * p1 seems to be the weapon component index
     * struct DlcComponentData{
     * int attachBone;
     * int padding1;
     * int bActiveByDefault;
     * int padding2;
     * int unk;
     * int padding3;
     * int componentHash;
     * int padding4;
     * int unk2;
     * int padding5;
     * int componentCost;
     * int padding6;
     * char nameLabel[64];
     * char descLabel[64];
     * };
     *
     *
     * Hash: 0x6CF598A2957C2BF8 | Since: 323
     */
    function getDlcWeaponComponentData(dlcWeaponIndex: number, dlcWeapCompIndex: number): [boolean, any];
    /**
     * Same as GET_DLC_WEAPON_COMPONENT_DATA but only works for DLC components that are available in SP.
     *
     * Hash: 0x31D5E073B6F93CDC | Since: 2060
     */
    function getDlcWeaponComponentDataSp(dlcWeaponIndex: number, dlcWeapCompIndex: number): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xD4D7B033C3AA243C | Since: 323
     */
    function isContentItemLocked(itemHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0564B9FF9631B82C | Since: 323
     */
    function isDlcVehicleMod(hash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC098810437312FFF | Since: 323
     */
    function getDlcVehicleModLockHash(hash: number | string): number;
    /**
     * From fm_deathmatch_creator and fm_race_creator:
     *
     * `FILES::REVERT_CONTENT_CHANGESET_GROUP_FOR_ALL(joaat("GROUP_MAP_SP"));`
     * `FILES::EXECUTE_CONTENT_CHANGESET_GROUP_FOR_ALL(joaat("GROUP_MAP"));`
     *
     * Hash: 0x6BEDF5769AC2DC07 | Since: 1604
     */
    function executeContentChangesetGroupForAll(hash: number | string): void;
    /**
     * From fm_deathmatch_creator and fm_race_creator:
     *
     * `FILES::REVERT_CONTENT_CHANGESET_GROUP_FOR_ALL(joaat("GROUP_MAP_SP"));`
     * `FILES::EXECUTE_CONTENT_CHANGESET_GROUP_FOR_ALL(joaat("GROUP_MAP"));`
     *
     * Hash: 0x3C1978285B036B25 | Since: 1604
     */
    function revertContentChangesetGroupForAll(hash: number | string): void;
}
export declare namespace fire {
    /**
     * Starts a fire:
     *
     * xyz: Location of fire
     * maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.
     * isGasFire: Whether or not the fire is powered by gasoline.
     *
     * Hash: 0x6B83617E04503888 | Since: 323
     */
    function startScript(pos: Vector3, maxChildren: number, isGasFire: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x7FF548385680673F | Since: 323
     */
    function removeScript(fireHandle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6A9D9708F6F23DF | Since: 323
     */
    function startEntity(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x7F0DD2EBBB651AFF | Since: 323
     */
    function stopEntity(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x28D3FED7190D3A0B | Since: 323
     */
    function isEntityOn(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x50CAD495A460B305 | Since: 323
     */
    function getNumberOfsInRange(pos: Vector3, radius: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x8F390AC4155099BA | Since: 1734
     */
    function setFlammabilityMultiplier(): void;
    /**
     * No comment provided
     *
     * Hash: 0x056A8A219B8E829F | Since: 323
     */
    function stopInRange(pos: Vector3, radius: number): void;
    /**
     * Returns TRUE if it found something. FALSE if not.
     *
     * Hash: 0x352A9F6BCF90081F | Since: 323
     */
    function getClosestPos(pos: Vector3): [boolean, Vector3];
    /**
     * BOOL isAudible = If explosion makes a sound.
     * BOOL isInvisible = If the explosion is invisible or not.
     *
     * explosionType: https://alloc8or.re/gta5/doc/enums/eExplosionTag.txt
     *
     * Hash: 0xE3AD2BDBAEE269AC | Since: 323
     */
    function addExplosion(pos: Vector3, explosionType: number, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number, noDamage: boolean): void;
    /**
     * isAudible: If explosion makes a sound.
     * isInvisible: If the explosion is invisible or not.
     * explosionType: See ADD_EXPLOSION.
     *
     * Hash: 0x172AA1B624FA1013 | Since: 323
     */
    function addOwnedExplosion(ped: number | Ped, pos: Vector3, explosionType: number, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
    /**
     * isAudible: If explosion makes a sound.
     * isInvisible: If the explosion is invisible or not.
     * explosionType: See ADD_EXPLOSION.
     *
     * Hash: 0x36DD3FE58B5E5212 | Since: 323
     */
    function addExplosionWithUserVfx(pos: Vector3, explosionType: number, explosionFx: number | string, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
    /**
     * explosionType: See ADD_EXPLOSION.
     *
     * Hash: 0x2E2EBA0EE7CED0E0 | Since: 323
     */
    function isExplosionInArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    /**
     * explosionType: See ADD_EXPLOSION.
     *
     * Hash: 0x6070104B699B2EF4 | Since: 323
     */
    function isExplosionActiveInArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    /**
     * explosionType: See ADD_EXPLOSION.
     *
     * Hash: 0xAB0F816885B0E483 | Since: 323
     */
    function isExplosionInSphere(explosionType: number, pos: Vector3, radius: number): boolean;
    /**
     * explosionType: See ADD_EXPLOSION.
     *
     * Hash: 0xB3CD51E3DB86F176 | Since: 1290
     */
    function getOwnerOfExplosionInSphere(explosionType: number, pos: Vector3, radius: number): number;
    /**
     * explosionType: See ADD_EXPLOSION, -1 for any explosion type
     *
     *
     * Hash: 0xA079A6C51525DC4B | Since: 323
     */
    function isExplosionInAngledArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): boolean;
    /**
     * Returns a handle to the first entity within the a circle spawned inside the 2 points from a radius.
     *
     * explosionType: See ADD_EXPLOSION.
     *
     * Hash: 0x14BA4BA137AF6CEC | Since: 323
     */
    function getOwnerOfExplosionInAngledArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x5241DB47A8B8AD54 | Since: 3570
     */
    function networkExpectExplosionEventsForPlayer(expect: boolean, player: number | string | Player): void;
}
export declare namespace graphics {
    /**
     * NOTE: Debugging functions are not present in the retail version of the game.
     *
     * Hash: 0x175B6BFC15CDD0C5 | Since: 323
     */
    function setDebugLinesAndSpheresDrawingActive(enabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7FDFADE676AA3CB0 | Since: 323
     */
    function drawDebugLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, r: number, g: number, b: number, alpha: number): void;
    /**
     * NOTE: Debugging functions are not present in the retail version of the game.
     *
     * Hash: 0xD8B9A8AC5608FF94 | Since: 323
     */
    function drawDebugLineWithTwoColours(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, r1: number, g1: number, b1: number, r2: number, g2: number, b2: number, alpha1: number, alpha2: number): void;
    /**
     * NOTE: Debugging functions are not present in the retail version of the game.
     *
     * Hash: 0xAAD68E1AB39DA632 | Since: 323
     */
    function drawDebugSphere(pos: Vector3, radius: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x083A2CA4F2E573BD | Since: 323
     */
    function drawDebugBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, r: number, g: number, b: number, alpha: number): void;
    /**
     * NOTE: Debugging functions are not present in the retail version of the game.
     *
     * Hash: 0x73B1189623049839 | Since: 323
     */
    function drawDebugCross(pos: Vector3, size: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * NOTE: Debugging functions are not present in the retail version of the game.
     *
     * Hash: 0x3903E216620488E8 | Since: 323
     */
    function drawDebugText(text: string, pos: Vector3, red: number, green: number, blue: number, alpha: number): void;
    /**
     * NOTE: Debugging functions are not present in the retail version of the game.
     *
     * Hash: 0xA3BB2E9555C05A8F | Since: 323
     */
    function drawDebugText2d(text: string, pos: Vector3, red: number, green: number, blue: number, alpha: number): void;
    /**
     * Draws a depth-tested line from one point to another.
     * ----------------
     * x1, y1, z1 : Coordinates for the first point
     * x2, y2, z2 : Coordinates for the second point
     * r, g, b, alpha : Color with RGBA-Values
     * I recommend using a predefined function to call this.
     * [VB.NET]
     * Public Sub DrawLine(from As Vector3, [to] As Vector3, col As Color)
     * [Function].Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, [to].X, [to].Y, [to].Z, col.R, col.G, col.B, col.A)
     * End Sub
     *
     * [C#]
     * public void DrawLine(Vector3 from, Vector3 to, Color col)
     * {
     * Function.Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, to.X, to.Y, to.Z, col.R, col.G, col.B, col.A);
     * }
     *
     * Hash: 0x6B7256074AE34680 | Since: 323
     */
    function drawLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * x/y/z - Location of a vertex (in world coords), presumably.
     * ----------------
     * x1, y1, z1     : Coordinates for the first point
     * x2, y2, z2     : Coordinates for the second point
     * x3, y3, z3     : Coordinates for the third point
     * r, g, b, alpha : Color with RGBA-Values
     *
     * Keep in mind that only one side of the drawn triangle is visible: It's the side, in which the vector-product of the vectors heads to: (b-a)x(c-a) Or (b-a)x(c-b).
     * But be aware: The function seems to work somehow differently. I have trouble having them drawn in rotated orientation. Try it yourself and if you somehow succeed, please edit this and post your solution.
     * I recommend using a predefined function to call this.
     * [VB.NET]
     * Public Sub DrawPoly(a As Vector3, b As Vector3, c As Vector3, col As Color)
     * [Function].Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A)
     * End Sub
     *
     * [C#]
     * public void DrawPoly(Vector3 a, Vector3 b, Vector3 c, Color col)
     * {
     * Function.Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A);
     * }
     * BTW: Intersecting triangles are not supported: They overlap in the order they were called.
     *
     * Hash: 0xAC26716048436851 | Since: 323
     */
    function drawPoly(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * Used for drawling Deadline trailing lights, see deadline.ytd
     *
     * p15 through p23 are values that appear to be related to illiumation, scaling, and rotation; more testing required.
     * For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
     *
     * Hash: 0x29280002282F1928 | Since: 877
     */
    function drawTexturedPoly(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red: number, green: number, blue: number, alpha: number, textureDict: string, textureName: string, u1: number, v1: number, w1: number, u2: number, v2: number, w2: number, u3: number, v3: number, w3: number): void;
    /**
     * Used for drawling Deadline trailing lights, see deadline.ytd
     *
     * Each vertex has its own colour that is blended/illuminated on the texture. Additionally, the R, G, and B components are floats that are int-casted internally.
     * For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
     *
     * Hash: 0x736D7AA1B750856B | Since: 877
     */
    function drawTexturedPolyWithThreeColours(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red1: number, green1: number, blue1: number, alpha1: number, red2: number, green2: number, blue2: number, alpha2: number, red3: number, green3: number, blue3: number, alpha3: number, textureDict: string, textureName: string, u1: number, v1: number, w1: number, u2: number, v2: number, w2: number, u3: number, v3: number, w3: number): void;
    /**
     * x,y,z = start pos
     * x2,y2,z2 = end pos
     *
     * Draw's a 3D Box between the two x,y,z coords.
     * --------------
     * Keep in mind that the edges of the box do only align to the worlds base-vectors. Therefore something like rotation cannot be applied. That means this function is pretty much useless, unless you want a static unicolor box somewhere.
     * I recommend using a predefined function to call this.
     * [VB.NET]
     * Public Sub DrawBox(a As Vector3, b As Vector3, col As Color)
     * [Function].Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A)
     * End Sub
     *
     * [C#]
     * public void DrawBox(Vector3 a, Vector3 b, Color col)
     * {
     * Function.Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A);
     * }
     *
     * Hash: 0xD3A9971CADAC7252 | Since: 323
     */
    function drawBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x23BA6B0C2AD7B0D3 | Since: 323
     */
    function setBackfaceculling(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC5C8F970D4EDFF71 | Since: 877
     */
    function setDepthwriting(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1DD2139A9A20DCE8 | Since: 323
     */
    function beginTakeMissionCreatorPhoto(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x90A78ECAA4E78453 | Since: 323
     */
    function getStatusOfTakeMissionCreatorPhoto(): number;
    /**
     * No comment provided
     *
     * Hash: 0x0A46AF8A78DC5E0A | Since: 323
     */
    function freeMemoryForMissionCreatorPhoto(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4862437A486F91B0 | Since: 323
     */
    function loadMissionCreatorPhoto(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x1670F8D05056F257 | Since: 323
     */
    function getStatusOfLoadMissionCreatorPhoto(): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0x7FA5D82B8F58EC06 | Since: 323
     */
    function beginCreateMissionCreatorPhotoPreview(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5B0316762AFD4A64 | Since: 323
     */
    function getStatusOfCreateMissionCreatorPhotoPreview(): number;
    /**
     * No comment provided
     *
     * Hash: 0x346EF3ECAAAB149E | Since: 323
     */
    function freeMemoryForMissionCreatorPhotoPreview(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA67C35C56EB1BD9D | Since: 323
     */
    function beginTakeHighQualityPhoto(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0D6CA79EEEBD8CA3 | Since: 323
     */
    function getStatusOfTakeHighQualityPhoto(): number;
    /**
     * No comment provided
     *
     * Hash: 0xD801CC02177FA3F1 | Since: 323
     */
    function freeMemoryForHighQualityPhoto(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1BBC135A4D25EDDE | Since: 323
     */
    function setTakenPhotoIsMugshot(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF3F776ADA161E47D | Since: 1604
     */
    function setArenaThemeAndVariationForTakenPhoto(): void;
    /**
     * No comment provided
     *
     * Hash: 0xADD6627C4D325458 | Since: 2189
     */
    function setOnIslandXForTakenPhoto(): void;
    /**
     * 1 match in 1 script. cellphone_controller.
     * p0 is -1 in scripts.
     *
     * Hash: 0x3DEC726C25A11BAC | Since: 323
     */
    function saveHighQualityPhoto(unused: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0C0C4E81E1AC60A0 | Since: 323
     */
    function getStatusOfSaveHighQualityPhoto(): number;
    /**
     * No comment provided
     *
     * Hash: 0x759650634F07B6B4 | Since: 323
     */
    function beginCreateLowQualityCopyOfPhoto(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCB82A0BF0E3E3265 | Since: 323
     */
    function getStatusOfCreateLowQualityCopyOfPhoto(): number;
    /**
     * No comment provided
     *
     * Hash: 0x6A12D88881435DCA | Since: 323
     */
    function freeMemoryForLowQualityPhoto(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1072F115DAB0717E | Since: 323
     */
    function drawLowQualityPhotoToPhone(): void;
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0x34D23450F028B0BF | Since: 323
     */
    function getMaximumNumberOfPhotos(): number;
    /**
     * This function is hard-coded to always return 96.
     *
     * Hash: 0xDC54A7AF8B3A14EF | Since: 323
     */
    function getMaximumNumberOfCloudPhotos(): number;
    /**
     * No comment provided
     *
     * Hash: 0x473151EBC762C6DA | Since: 323
     */
    function getCurrentNumberOfCloudPhotos(): number;
    /**
     * 2 matches across 2 scripts. Only showed in appcamera & appmedia. Both were 0.
     *
     * Hash: 0x2A893980E96B659A | Since: 323
     */
    function queueOperationToCreateSortedListOfPhotos(): boolean;
    /**
     * 3 matches across 3 scripts. First 2 were 0, 3rd was 1. Possibly a bool.
     * appcamera, appmedia, and cellphone_controller.
     *
     * Hash: 0xF5BED327CEA362B1 | Since: 323
     */
    function getStatusOfSortedListOperation(): number;
    /**
     * No comment provided
     *
     * Hash: 0x4AF92ACD3141D96C | Since: 323
     */
    function clearStatusOfSortedListOperation(): void;
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0xE791DF1F73ED2C8B | Since: 323
     */
    function doesThisPhotoSlotContainAValidPhoto(): boolean;
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0xEC72C258667BE5EA | Since: 323
     */
    function loadHighQualityPhoto(): boolean;
    /**
     * Hardcoded to always return 2.
     *
     * Hash: 0x40AFB081F8ADD4EE | Since: 323
     */
    function getLoadHighQualityPhotoStatus(): number;
    /**
     * No comment provided
     *
     * Hash: 0xF49E9A9716A04595 | Since: 323
     */
    function drawLightWithRangeex(pos: Vector3, r: number, g: number, b: number, range: number, intensity: number, shadow: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF2A1B2771A01DBD4 | Since: 323
     */
    function drawLightWithRange(pos: Vector3, colorR: number, colorG: number, colorB: number, range: number, intensity: number): void;
    /**
     * Parameters:
     * * pos - coordinate where the spotlight is located
     * * dir - the direction vector the spotlight should aim at from its current position
     * * r,g,b - color of the spotlight
     * * distance - the maximum distance the light can reach
     * * brightness - the brightness of the light
     * * roundness - "smoothness" of the circle edge
     * * radius - the radius size of the spotlight
     * * falloff - the falloff size of the light's edge (example: www.i.imgur.com/DemAWeO.jpg)
     *
     * Example in C# (spotlight aims at the closest vehicle):
     * Vector3 myPos = Game.Player.Character.Position;
     * Vehicle nearest = World.GetClosestVehicle(myPos , 1000f);
     * Vector3 destinationCoords = nearest.Position;
     * Vector3 dirVector = destinationCoords - myPos;
     * dirVector.Normalize();
     * Function.Call(Hash.DRAW_SPOT_LIGHT, pos.X, pos.Y, pos.Z, dirVector.X, dirVector.Y, dirVector.Z, 255, 255, 255, 100.0f, 1f, 0.0f, 13.0f, 1f);
     *
     * Hash: 0xD0F64B265C8C8B33 | Since: 323
     */
    function drawSpotLight(pos: Vector3, dirX: number, dirY: number, dirZ: number, colorR: number, colorG: number, colorB: number, distance: number, brightness: number, hardness: number, radius: number, falloff: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5BCA583A583194DB | Since: 323
     */
    function drawShadowedSpotLight(pos: Vector3, dirX: number, dirY: number, dirZ: number, colorR: number, colorG: number, colorB: number, distance: number, brightness: number, roundness: number, radius: number, falloff: number, shadowId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC9B18B4619F48F7B | Since: 323
     */
    function fadeUpPedLight(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDEADC0DEDEADC0DE | Since: 323
     */
    function updateLightsOnEntity(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x9641588DAB93B4B5 | Since: 877
     */
    function setLightOverrideMaxIntensityScale(): void;
    /**
     * No comment provided
     *
     * Hash: 0x393BD2275CEB7793 | Since: 1103
     */
    function getLightOverrideMaxIntensityScale(): number;
    /**
     * enum MarkerTypes
     * {
     * MarkerTypeUpsideDownCone = 0,
     * MarkerTypeVerticalCylinder = 1,
     * MarkerTypeThickChevronUp = 2,
     * MarkerTypeThinChevronUp = 3,
     * MarkerTypeCheckeredFlagRect = 4,
     * MarkerTypeCheckeredFlagCircle = 5,
     * MarkerTypeVerticleCircle = 6,
     * MarkerTypePlaneModel = 7,
     * MarkerTypeLostMCDark = 8,
     * MarkerTypeLostMCLight = 9,
     * MarkerTypeNumber0 = 10,
     * MarkerTypeNumber1 = 11,
     * MarkerTypeNumber2 = 12,
     * MarkerTypeNumber3 = 13,
     * MarkerTypeNumber4 = 14,
     * MarkerTypeNumber5 = 15,
     * MarkerTypeNumber6 = 16,
     * MarkerTypeNumber7 = 17,
     * MarkerTypeNumber8 = 18,
     * MarkerTypeNumber9 = 19,
     * MarkerTypeChevronUpx1 = 20,
     * MarkerTypeChevronUpx2 = 21,
     * MarkerTypeChevronUpx3 = 22,
     * MarkerTypeHorizontalCircleFat = 23,
     * MarkerTypeReplayIcon = 24,
     * MarkerTypeHorizontalCircleSkinny = 25,
     * MarkerTypeHorizontalCircleSkinny_Arrow = 26,
     * MarkerTypeHorizontalSplitArrowCircle = 27,
     * MarkerTypeDebugSphere = 28,
     * MarkerTypeDallorSign = 29,
     * MarkerTypeHorizontalBars = 30,
     * MarkerTypeWolfHead = 31
     * };
     *
     * dirX/Y/Z represent a heading on each axis in which the marker should face, alternatively you can rotate each axis independently with rotX/Y/Z (and set dirX/Y/Z all to 0).
     *
     * faceCamera - Rotates only the y-axis (the heading) towards the camera
     *
     * p19 - no effect, default value in script is 2
     *
     * rotate - Rotates only on the y-axis (the heading)
     *
     * textureDict - Name of texture dictionary to load texture from (e.g. "GolfPutting")
     *
     * textureName - Name of texture inside dictionary to load (e.g. "PuttingMarker")
     *
     * drawOnEnts - Draws the marker onto any entities that intersect it
     *
     * basically what he said, except textureDict and textureName are totally not const char*, or if so, then they are always set to 0/NULL/nullptr in every script I checked, eg:
     *
     * `bj.c: graphics::draw_marker(6, vParam0, 0f, 0f, 1f, 0f, 0f, 0f, 4f, 4f, 4f, 240, 200, 80, iVar1, 0, 0, 2, 0, 0, 0, false);`
     *
     * his is what I used to draw an amber downward pointing chevron "V", has to be redrawn every frame.  The 180 is for 180 degrees rotation around the Y axis, the 50 is alpha, assuming max is 100, but it will accept 255.
     *
     * `GRAPHICS::DRAW_MARKER(2, v.x, v.y, v.z + 2, 0, 0, 0, 0, 180, 0, 2, 2, 2, 255, 128, 0, 50, 0, 1, 1, 0, 0, 0, 0);`
     *
     *
     *
     * Hash: 0x28477EC23D892089 | Since: 323
     */
    function drawMarker(_type: number, pos: Vector3, dirX: number, dirY: number, dirZ: number, rot: Vector3, scale: Vector3, red: number, green: number, blue: number, alpha: number, bobUpAndDown: boolean, faceCamera: boolean, rotate: boolean, textureDict: string, textureName: string, drawOnEnts: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE82728F0DE75D13A | Since: 573
     */
    function drawMarkerEx(_type: number, pos: Vector3, dirX: number, dirY: number, dirZ: number, rot: Vector3, scale: Vector3, red: number, green: number, blue: number, alpha: number, bobUpAndDown: boolean, faceCamera: boolean, rotate: boolean, textureDict: string, textureName: string, drawOnEnts: boolean): void;
    /**
     * Draws a 3D sphere, typically seen in the GTA:O freemode event "Penned In".
     * Example https://imgur.com/nCbtS4H
     *
     * alpha - The alpha for the sphere. Goes from 0.0 to 1.0.
     *
     * Hash: 0x799017F9E3B10112 | Since: 463
     */
    function drawMarkerSphere(pos: Vector3, radius: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * Creates a checkpoint. Returns the handle of the checkpoint.
     *
     * 20/03/17 : Attention, checkpoints are already handled by the game itself, so you must not loop it like markers.
     *
     * Parameters:
     * * type - The type of checkpoint to create. See below for a list of checkpoint types.
     * * pos1 - The position of the checkpoint.
     * * pos2 - The position of the next checkpoint to point to.
     * * radius - The radius of the checkpoint.
     * * color - The color of the checkpoint.
     * * reserved - Special parameter, see below for details. Usually set to 0 in the scripts.
     *
     * Checkpoint types:
     * 0-4---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
     * 5-9---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
     * 10-14-------Ring: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
     * 15-19-------1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
     * 20-24-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
     * 25-29-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
     * 30-34-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
     * 35-38-------Ring: Airplane Up, Left, Right, UpsideDown
     * 39----------?
     * 40----------Ring: just a ring
     * 41----------?
     * 42-44-------Cylinder w/ number (uses 'reserved' parameter)
     * 45-47-------Cylinder no arrow or number
     *
     * If using type 42-44, reserved sets number / number and shape to display
     *
     * 0-99------------Just numbers (0-99)
     * 100-109-----------------Arrow (0-9)
     * 110-119------------Two arrows (0-9)
     * 120-129----------Three arrows (0-9)
     * 130-139----------------Circle (0-9)
     * 140-149------------CycleArrow (0-9)
     * 150-159----------------Circle (0-9)
     * 160-169----Circle  w/ pointer (0-9)
     * 170-179-------Perforated ring (0-9)
     * 180-189----------------Sphere (0-9)
     *
     * Hash: 0x0134F0835AB6BFCB | Since: 323
     */
    function createCheckpoint(_type: number, posX1: number, posY1: number, posZ1: number, posX2: number, posY2: number, posZ2: number, diameter: number, red: number, green: number, blue: number, alpha: number, reserved: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x4B5B4DA5D79F1943 | Since: 323
     */
    function setCheckpointInsideCylinderHeightScale(checkpoint: number, scale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x44621483FF966526 | Since: 877
     */
    function setCheckpointInsideCylinderScale(checkpoint: number, scale: number): void;
    /**
     * Sets the cylinder height of the checkpoint.
     *
     * Parameters:
     * * nearHeight - The height of the checkpoint when inside of the radius.
     * * farHeight - The height of the checkpoint when outside of the radius.
     * * radius - The radius of the checkpoint.
     *
     * Hash: 0x2707AAE9D9297D89 | Since: 323
     */
    function setCheckpointCylinderHeight(checkpoint: number, nearHeight: number, farHeight: number, radius: number): void;
    /**
     * Sets the checkpoint color.
     *
     * Hash: 0x7167371E8AD747F7 | Since: 323
     */
    function setCheckpointRgba(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * Sets the checkpoint icon color.
     *
     * Hash: 0xB9EA40907C680580 | Since: 323
     */
    function setCheckpointRgba2(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * This does not move an existing checkpoint... so wtf.
     *
     * Hash: 0xF51D36185993515D | Since: 323
     */
    function setCheckpointClipplaneWithPosNorm(checkpoint: number, pos: Vector3, unkX: number, unkY: number, unkZ: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFCF6788FC4860CD4 | Since: 1734
     */
    function setCheckpointForceOldArrowPointing(checkpoint: number): void;
    /**
     * Unknown. Called after creating a checkpoint (type: 51) in the creators.
     *
     * Hash: 0x615D3925E87A3B26 | Since: 323
     */
    function setCheckpointDecalRotAlignedToCameraRot(checkpoint: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDB1EA9411C8911EC | Since: 1180
     */
    function setCheckpointForceDirection(checkpoint: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3C788E7F6438754D | Since: 1180
     */
    function setCheckpointDirection(checkpoint: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xF5ED37F54CD4D52E | Since: 323
     */
    function deleteCheckpoint(checkpoint: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x22A249A53034450A | Since: 323
     */
    function dontRenderInGameUi(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC459CFA0CCE245B | Since: 323
     */
    function forceRenderInGameUi(toggle: boolean): void;
    /**
     * This function can requests texture dictonaries from following RPFs:
     * scaleform_generic.rpf
     * scaleform_minigames.rpf
     * scaleform_minimap.rpf
     * scaleform_web.rpf
     *
     * last param isnt a toggle
     *
     * Hash: 0xDFA2EF8E04127DD5 | Since: 323
     */
    function requestStreamedTextureDict(textureDict: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0145F696AAAAD2E4 | Since: 323
     */
    function hasStreamedTextureDictLoaded(textureDict: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBE2CACCF5A8AA805 | Since: 323
     */
    function setStreamedTextureDictAsNoLongerNeeded(textureDict: string): void;
    /**
     * Draws a rectangle on the screen.
     *
     * -x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)
     *
     * -y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)
     *
     * -width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)
     *
     * -height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)
     *
     * -R: Red part of the color. (0-255)
     *
     * -G: Green part of the color. (0-255)
     *
     * -B: Blue part of the color. (0-255)
     *
     * -A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)
     *
     * The total number of rectangles to be drawn in one frame is apparently limited to 399.
     *
     *
     * Hash: 0x3A618A217E5154F0 | Since: 323
     */
    function drawRect(x: number, y: number, width: number, height: number, r: number, g: number, b: number, a: number): void;
    /**
     * Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for TV channels and other draw commands that are used with a world render target.
     *
     * Hash: 0xC6372ECD45D73BCD | Since: 323
     */
    function setScriptGfxDrawBehindPausemenu(toggle: boolean): void;
    /**
     * Sets the draw order for script draw commands.
     *
     * Examples from decompiled scripts:
     * `GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);`
     * `GRAPHICS::DRAW_RECT(0.5, 0.5, 3.0, 3.0, v_4, v_5, v_6, a_0._f172, 0);`
     *
     * `GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);`
     * `GRAPHICS::DRAW_RECT(0.5, 0.5, 1.5, 1.5, 0, 0, 0, 255, 0);`
     *
     * Hash: 0x61BB1D9B3A95D802 | Since: 323
     */
    function setScriptGfxDrawOrder(drawOrder: number): void;
    /**
     * horizontalAlign: The horizontal alignment. This can be 67 ('C'), 76 ('L'), or 82 ('R').
     * verticalAlign: The vertical alignment. This can be 67 ('C'), 66 ('B'), or 84 ('T').
     *
     * This function anchors script draws to a side of the safe zone. This needs to be called to make the interface independent of the player's safe zone configuration.
     *
     * These values are equivalent to alignX and alignY in common:/data/ui/frontend.xml, which can be used as a baseline for default alignment.
     *
     * Using any other value (including 0) will result in the safe zone not being taken into account for this draw. The canonical value for this is 'I' (73).
     *
     * For example, you can use SET_SCRIPT_GFX_ALIGN(0, 84) to only scale on the Y axis (to the top), but not change the X axis.
     *
     * To reset the value, use RESET_SCRIPT_GFX_ALIGN.
     *
     * Hash: 0xB8A850F20A067EB6 | Since: 323
     */
    function setScriptGfxAlign(horizontalAlign: number, verticalAlign: number): void;
    /**
     * This function resets the alignment set using SET_SCRIPT_GFX_ALIGN and SET_SCRIPT_GFX_ALIGN_PARAMS to the default values ('I', 'I'; 0, 0, 0, 0).
     * This should be used after having used the aforementioned functions in order to not affect any other scripts attempting to draw.
     *
     * Hash: 0xE3A3DB414A373DAB | Since: 323
     */
    function resetScriptGfxAlign(): void;
    /**
     * Sets the draw offset/calculated size for SET_SCRIPT_GFX_ALIGN. If using any alignment other than left/top, the game expects the width/height to be configured using this native in order to get a proper starting position for the draw command.
     *
     * Hash: 0xF5A2C681787E579D | Since: 323
     */
    function setScriptGfxAlignParams(x: number, y: number, w: number, h: number): void;
    /**
     * Calculates the effective X/Y fractions when applying the values set by SET_SCRIPT_GFX_ALIGN and SET_SCRIPT_GFX_ALIGN_PARAMS
     *
     * Hash: 0x6DD8F5AA635EB4B2 | Since: 323
     */
    function getScriptGfxAlignPosition(x: number, y: number): [number, number];
    /**
     * Gets the scale of safe zone. if the safe zone size scale is max, it will return 1.0.
     *
     * Hash: 0xBAF107B6BB2C97F0 | Since: 323
     */
    function getSafeZoneSize(): number;
    /**
     * Draws a 2D sprite on the screen.
     *
     * Parameters:
     * textureDict - Name of texture dictionary to load texture from (e.g. "CommonMenu", "MPWeaponsCommon", etc.)
     *
     * textureName - Name of texture to load from texture dictionary (e.g. "last_team_standing_icon", "tennis_icon", etc.)
     *
     * screenX/Y - Screen offset (0.5 = center)
     * scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)
     *
     * heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
     *
     * red,green,blue - Sprite color (default = 255/255/255)
     *
     * alpha - opacity level
     *
     * Hash: 0xE7FFAE5EBF23D890 | Since: 323
     */
    function drawSprite(textureDict: string, textureName: string, screenSize: Vector2, width: number, height: number, heading: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * Used in arcade games and Beam hack minigame in Doomsday Heist. I will most certainly dive into this to try replicate arcade games.
     * x position must be between 0.0 and 1.0 (1.0 being the most right side of the screen)
     * y position must be between 0.0 and 1.0 (1.0 being the most bottom side of the screen)
     * width 0.0 - 1.0 is the reasonable amount generally
     * height 0.0 - 1.0 is the reasonable amount generally
     * p6 almost always 0.0
     * p11 seems to be unknown but almost always 0 int
     *
     * Hash: 0x2D3B147AFAD49DE0 | Since: 1290
     */
    function drawSpriteArx(textureDict: string, textureName: string, x: number, y: number, width: number, height: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * Similar to _DRAW_SPRITE, but seems to be some kind of "interactive" sprite, at least used by render targets.
     * These seem to be the only dicts ever requested by this native:
     *
     * prop_screen_biker_laptop
     * Prop_Screen_GR_Disruption
     * Prop_Screen_TaleOfUs
     * prop_screen_nightclub
     * Prop_Screen_IE_Adhawk
     * prop_screen_sm_free_trade_shipping
     * prop_screen_hacker_truck
     * MPDesktop
     * Prop_Screen_Nightclub
     * And a few others
     *
     *
     * Hash: 0x2BC54A8188768488 | Since: 877
     */
    function drawSpriteNamedRendertarget(textureDict: string, textureName: string, screenSize: Vector2, width: number, height: number, heading: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * Similar to DRAW_SPRITE, but allows to specify the texture coordinates used to draw the sprite.
     *
     * u1, v1 - texture coordinates for the top-left corner
     * u2, v2 - texture coordinates for the bottom-right corner
     *
     * Hash: 0x95812F9B26074726 | Since: 1868
     */
    function drawSpriteArxWithUv(textureDict: string, textureName: string, x: number, y: number, width: number, height: number, u1: number, v1: number, u2: number, v2: number, heading: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * Example:
     * `GRAPHICS::ADD_ENTITY_ICON(a_0, "MP_Arrow");`
     *
     * I tried this and nothing happened...
     *
     * Hash: 0x9CD43EEE12BF4DD0 | Since: 323
     */
    function addEntityIcon(entity: number | Entity, icon: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xE0E8BEECCA96BA31 | Since: 323
     */
    function setEntityIconVisibility(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1D5F595CCAE2E238 | Since: 323
     */
    function setEntityIconColor(entity: number | Entity, red: number, green: number, blue: number, alpha: number): void;
    /**
     * Sets the on-screen drawing origin for draw-functions (which is normally x=0,y=0 in the upper left corner of the screen) to a world coordinate.
     * From now on, the screen coordinate which displays the given world coordinate on the screen is seen as x=0,y=0.
     *
     * Example in C#:
     * Vector3 boneCoord = somePed.GetBoneCoord(Bone.SKEL_Head);
     * Function.Call(Hash.SET_DRAW_ORIGIN, boneCoord.X, boneCoord.Y, boneCoord.Z, 0);
     * Function.Call(Hash.DRAW_SPRITE, "helicopterhud", "hud_corner", -0.01, -0.015, 0.013, 0.013, 0.0, 255, 0, 0, 200);
     * Function.Call(Hash.DRAW_SPRITE, "helicopterhud", "hud_corner", 0.01, -0.015, 0.013, 0.013, 90.0, 255, 0, 0, 200);
     * Function.Call(Hash.DRAW_SPRITE, "helicopterhud", "hud_corner", -0.01, 0.015, 0.013, 0.013, 270.0, 255, 0, 0, 200);
     * Function.Call(Hash.DRAW_SPRITE, "helicopterhud", "hud_corner", 0.01, 0.015, 0.013, 0.013, 180.0, 255, 0, 0, 200);
     * Function.Call(Hash.CLEAR_DRAW_ORIGIN);
     *
     * Result: www11.pic-upload.de/19.06.15/bkqohvil2uao.jpg
     * If the pedestrian starts walking around now, the sprites are always around her head, no matter where the head is displayed on the screen.
     *
     * This function also effects the drawing of texts and other UI-elements.
     * `The effect can be reset by calling GRAPHICS::CLEAR_DRAW_ORIGIN().`
     *
     * Hash: 0xAA0008F3BBB8F416 | Since: 323
     */
    function setDrawOrigin(pos: Vector3): void;
    /**
     * `Resets the screen's draw-origin which was changed by the function GRAPHICS::SET_DRAW_ORIGIN(...) back to x=0,y=0.`
     *
     * `See GRAPHICS::SET_DRAW_ORIGIN(...) for further information.`
     *
     * Hash: 0xFF0B610F6BE0D7AF | Since: 323
     */
    function clearDrawOrigin(): void;
    /**
     * No comment provided
     *
     * Hash: 0x338D9F609FD632DB | Since: 1290
     */
    function setBinkMovie(name: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x70D2CC8A542A973C | Since: 1290
     */
    function playBinkMovie(binkMovie: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x63606A61DE68898A | Since: 1290
     */
    function stopBinkMovie(binkMovie: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x04D950EEFA4EED8C | Since: 1290
     */
    function releaseBinkMovie(binkMovie: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7118E83EEB9F7238 | Since: 1290
     */
    function drawBinkMovie(binkMovie: number, r: number, g: number, b: number, a: number): void;
    /**
     * In percentage: 0.0 - 100.0
     *
     * Hash: 0x0CB6B3446855B57A | Since: 1290
     */
    function setBinkMovieTime(binkMovie: number, progress: number): void;
    /**
     * In percentage: 0.0 - 100.0
     *
     * Hash: 0x8E17DDD6B9D5BF29 | Since: 1734
     */
    function getBinkMovieTime(binkMovie: number): number;
    /**
     * `binkMovie: Is return value from _SET_BINK_MOVIE. Has something to do with bink volume? (audRequestedSettings::SetVolumeCurveScale)`
     *
     * Hash: 0xAFF33B1178172223 | Since: 1290
     */
    function setBinkMovieVolume(binkMovie: number, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x845BAD77CC770633 | Since: 323
     */
    function attachTvAudioToEntity(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xF816F2933752322D | Since: 1868
     */
    function setBinkMovieAudioFrontend(binkMovie: number): void;
    /**
     * Probably changes tvs from being a 3d audio to being "global" audio
     *
     * Hash: 0x113D2C5DC57E1774 | Since: 323
     */
    function setTvAudioFrontend(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6805D58CAA427B72 | Since: 1290
     */
    function setBinkShouldSkip(binkMovie: number, bShouldSkip: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB66064452270E8F1 | Since: 323
     */
    function loadMovieMeshSet(movieMeshSetName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xEB119AA014E89183 | Since: 323
     */
    function releaseMovieMeshSet(movieMeshSet: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9B6E70C5CEEF4EEB | Since: 323
     */
    function queryMovieMeshSetState(): number;
    /**
     * int screenresx,screenresy;
     * GET_SCREEN_RESOLUTION(&screenresx,&screenresy);
     *
     * Hash: 0x888D57E407E63624 | Since: 323
     */
    function getScreenResolution(): [number, number];
    /**
     * Returns current screen resolution.
     *
     * Hash: 0x873C9F3104101DD3 | Since: 323
     */
    function getActualScreenResolution(): [number, number];
    /**
     * No comment provided
     *
     * Hash: 0xF1307EF624A80D87 | Since: 323
     */
    function getAspectRatio(b: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0xB2EBE8CBC58B90E9 | Since: 323
     */
    function getScreenAspectRatio(): number;
    /**
     * Setting Aspect Ratio Manually in game will return:
     *
     * false - for Narrow format Aspect Ratios (3:2, 4:3, 5:4, etc. )
     * true - for Wide format Aspect Ratios (5:3, 16:9, 16:10, etc. )
     *
     * Setting Aspect Ratio to "Auto" in game will return "false" or "true" based on the actual set Resolution Ratio.
     *
     * Hash: 0x30CF4BDA4FCB1905 | Since: 323
     */
    function getIsWidescreen(): boolean;
    /**
     * false = Any resolution < 1280x720
     * true = Any resolution >= 1280x720
     *
     * Hash: 0x84ED31191CC5D2C9 | Since: 323
     */
    function getIsHidef(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEFABC7722293DA7C | Since: 323
     */
    function adjustNextPosSizeAsNormalized169(): void;
    /**
     * Enables Night Vision.
     *
     * Example:
     * C#: Function.Call(Hash.SET_NIGHTVISION, true);
     * `C++: GRAPHICS::SET_NIGHTVISION(true);`
     *
     * BOOL toggle:
     * true = turns night vision on for your player.
     * false = turns night vision off for your player.
     *
     * Hash: 0x18F621F7A5B1F85D | Since: 323
     */
    function setNightvision(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x35FB78DC42B7BD21 | Since: 323
     */
    function getRequestingnightvision(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2202A3F42C8E5F79 | Since: 323
     */
    function getUsingnightvision(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEF398BEEE4EF45F9 | Since: 323
     */
    function setExposuretweak(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x814AF7DCAACC597B | Since: 372
     */
    function forceExposureReadback(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x43FA7CBE20DAB219 | Since: 1290
     */
    function overrideNightvisionLightRange(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE787BF1C5CF823C9 | Since: 323
     */
    function setNoiseoveride(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCB6A7C3BB17A0C67 | Since: 323
     */
    function setNoisinessoveride(value: number): void;
    /**
     * Convert a world coordinate into its relative screen coordinate.  (WorldToScreen)
     *
     * Returns a boolean; whether or not the operation was successful. It will return false if the coordinates given are not visible to the rendering camera.
     *
     *
     * For .NET users...
     *
     * VB:
     * Public Shared Function World3DToScreen2d(pos as vector3) As Vector2
     *
     * Dim x2dp, y2dp As New Native.OutputArgument
     *
     * Native.Function.Call(Of Boolean)(Native.Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.x, pos.y, pos.z, x2dp, y2dp)
     * Return New Vector2(x2dp.GetResult(Of Single), y2dp.GetResult(Of Single))
     *
     * End Function
     *
     * C#:
     * Vector2 World3DToScreen2d(Vector3 pos)
     * {
     * var x2dp = new OutputArgument();
     * var y2dp = new OutputArgument();
     *
     * Function.Call<bool>(Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.X, pos.Y, pos.Z, x2dp, y2dp);
     * return new Vector2(x2dp.GetResult<float>(), y2dp.GetResult<float>());
     * }
     * //USE VERY SMALL VALUES FOR THE SCALE OF RECTS/TEXT because it is dramatically larger on screen than in 3D, e.g '0.05' small.
     *
     * Used to be called _WORLD3D_TO_SCREEN2D
     *
     * I thought we lost you from the scene forever. It does seem however that calling SET_DRAW_ORIGIN then your natives, then ending it. Seems to work better for certain things such as keeping boxes around people for a predator missile e.g.
     *
     * Hash: 0x34E82F05DF2974F5 | Since: 323
     */
    function getScreenCoordFromWorldCoord(worldPos: Vector3): [boolean, number, number];
    /**
     * Returns the texture resolution of the passed texture dict+name.
     *
     * Note: Most texture resolutions are doubled compared to the console version of the game.
     *
     * Hash: 0x35736EE65BD00C11 | Since: 323
     */
    function getTextureResolution(textureDict: string, textureName: string): Vector3;
    /**
     * Overriding ped badge texture to a passed texture. It's synced between players (even custom textures!), don't forget to request used dict on *all* clients to make it sync properly. Can be removed by passing empty strings.
     *
     * Hash: 0x95EB5E34F821BABE | Since: 877
     */
    function overridePedCrewLogoTexture(ped: number | Ped, txd: string, txn: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE2892E7E55D7073A | Since: 323
     */
    function setDistanceBlurStrengthOverride(): void;
    /**
     * Purpose of p0 and p1 unknown.
     *
     * Hash: 0x0AB84296FED9CFC6 | Since: 323
     */
    function setFlash(fadeIn: number, duration: number, fadeOut: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3669F1B198DCAA4F | Since: 323
     */
    function disableOcclusionThisFrame(): void;
    /**
     * Does not affect weapons, particles, fire/explosions, flashlights or the sun.
     * When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.
     *
     * Used in Humane Labs Heist for EMP.
     *
     * state: True turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.
     *
     * Hash: 0x1268615ACE24D504 | Since: 323
     */
    function setArtificialLightsState(state: boolean): void;
    /**
     * If "blackout" is enabled, this native allows you to ignore "blackout" for vehicles.
     *
     * Hash: 0xE2B187C0939B3D32 | Since: 2060
     */
    function setArtificialVehicleLightsState(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC35A6D07C93802B2 | Since: 323
     */
    function disableHdtexThisFrame(): void;
    /**
     * Creates a tracked point, useful for checking the visibility of a 3D point on screen.
     *
     * Hash: 0xE2C9439ED45DEA60 | Since: 323
     */
    function createTrackedPoint(): number;
    /**
     * No comment provided
     *
     * Hash: 0x164ECBB3CF750CB0 | Since: 323
     */
    function setTrackedPointInfo(point: number, pos: Vector3, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC45CCDAAC9221CA8 | Since: 323
     */
    function isTrackedPointVisible(point: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB25DC90BAD56CA42 | Since: 323
     */
    function destroyTrackedPoint(point: number): void;
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0xBE197EAA669238F4 | Since: 323
     */
    function setGrassCullSphere(): number;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0x61F95E5BB3E0A8C6 | Since: 323
     */
    function removeGrassCullSphere(handle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAE51BC858F32BA66 | Since: 323
     */
    function procgrassEnableCullsphere(handle: number, pos: Vector3, scale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x649C97D52332341A | Since: 323
     */
    function procgrassDisableCullsphere(handle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2C42340F916C5930 | Since: 323
     */
    function procgrassIsCullsphereEnabled(handle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x14FC5833464340A8 | Since: 323
     */
    function procgrassEnableAmbscalescan(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0218BA067D249DEA | Since: 323
     */
    function procgrassDisableAmbscalescan(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1612C45F9E3E0D44 | Since: 323
     */
    function disableProcobjCreation(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5DEBD9C4DC995692 | Since: 323
     */
    function enableProcobjCreation(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAAE9BE70EC7C69AB | Since: 1290
     */
    function grassbatchEnableFlatteningExtInSphere(pos: Vector3, scale: number): void;
    /**
     * Wraps 0xAAE9BE70EC7C69AB with FLT_MAX as p7
     *
     * Hash: 0x6D955F6A9E0295B1 | Since: 323
     */
    function grassbatchEnableFlatteningInSphere(pos: Vector3, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x302C91AB2D477F7E | Since: 323
     */
    function grassbatchDisableFlattening(): void;
    /**
     * No comment provided
     *
     * Hash: 0x03FC694AE06C5A20 | Since: 323
     */
    function cascadeShadowsInitSession(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD2936CAB8B58FCBD | Since: 323
     */
    function cascadeShadowsSetCascadeBounds(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5F0F3F56635809EF | Since: 323
     */
    function cascadeShadowsSetCascadeBoundsScale(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5E9DAF5A20F15908 | Since: 323
     */
    function cascadeShadowsSetEntityTrackerScale(): void;
    /**
     * No comment provided
     *
     * Hash: 0x36F6626459D91457 | Since: 323
     */
    function cascadeShadowsSetSplitZExpWeight(): void;
    /**
     * No comment provided
     *
     * Hash: 0x259BA6D4E6F808F1 | Since: 1011
     */
    function cascadeShadowsSetBoundPosition(): void;
    /**
     * When this is set to ON, shadows only draw as you get nearer.
     *
     * When OFF, they draw from a further distance.
     *
     * Hash: 0x80ECBC0C856D3B0B | Since: 323
     */
    function cascadeShadowsEnableEntityTracker(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x25FC3E33A31AD0C9 | Since: 323
     */
    function cascadeShadowsSetScreenSizeCheckEnabled(): void;
    /**
     * Possible values:
     * "CSM_ST_POINT"
     * "CSM_ST_LINEAR"
     * "CSM_ST_TWOTAP"
     * "CSM_ST_BOX3x3"
     * "CSM_ST_BOX4x4"
     * "CSM_ST_DITHER2_LINEAR"
     * "CSM_ST_CUBIC"
     * "CSM_ST_DITHER4"
     * "CSM_ST_DITHER16"
     * "CSM_ST_SOFT16"
     * "CSM_ST_DITHER16_RPDB"
     * "CSM_ST_POISSON16_RPDB_GNORM"
     * "CSM_ST_HIGHRES_BOX4x4"
     * "CSM_ST_CLOUDS_SIMPLE"
     * "CSM_ST_CLOUDS_LINEAR"
     * "CSM_ST_CLOUDS_TWOTAP"
     * "CSM_ST_CLOUDS_BOX3x3"
     * "CSM_ST_CLOUDS_BOX4x4"
     * "CSM_ST_CLOUDS_DITHER2_LINEAR"
     * "CSM_ST_CLOUDS_SOFT16"
     * "CSM_ST_CLOUDS_DITHER16_RPDB"
     * "CSM_ST_CLOUDS_POISSON16_RPDB_GNORM"
     *
     * Hash: 0xB11D94BC55F41932 | Since: 323
     */
    function cascadeShadowsSetShadowSampleType(_type: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x27CB772218215325 | Since: 323
     */
    function cascadeShadowsClearShadowSampleType(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6DDBF9DFFC4AC080 | Since: 323
     */
    function cascadeShadowsSetAircraftMode(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD39D13C9FEBF0511 | Since: 323
     */
    function cascadeShadowsSetDynamicDepthMode(): void;
    /**
     * No comment provided
     *
     * Hash: 0x02AC28F3A01FA04A | Since: 323
     */
    function cascadeShadowsSetDynamicDepthValue(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0AE73D8DF3A762B2 | Since: 323
     */
    function cascadeShadowsEnableFreezer(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA465D9CC0D231BA | Since: 1011
     */
    function waterReflectionSetScriptObjectVisibility(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA51C4B86B71652AE | Since: 323
     */
    function golfTrailSetEnabled(toggle: boolean): void;
    /**
     * p8 seems to always be false.
     *
     * Hash: 0x312342E1A4874F3F | Since: 323
     */
    function golfTrailSetPath(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2485D34E50A22E84 | Since: 323
     */
    function golfTrailSetRadius(): void;
    /**
     * No comment provided
     *
     * Hash: 0x12995F2E53FFA601 | Since: 323
     */
    function golfTrailSetColour(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDBAA5EC848BA2D46 | Since: 323
     */
    function golfTrailSetTessellation(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC0416B061F2B7E5E | Since: 323
     */
    function golfTrailSetFixedControlPointEnable(): void;
    /**
     * 12 matches across 4 scripts. All 4 scripts were job creators.
     *
     * type ranged from 0 - 2.
     * p4 was always 0.2f. Likely scale.
     * assuming p5 - p8 is RGBA, the graphic is always yellow (255, 255, 0, 255).
     *
     * Tested but noticed nothing.
     *
     * Hash: 0xB1BB03742917A5D6 | Since: 323
     */
    function golfTrailSetFixedControlPoint(_type: number, pos: Vector3, red: number, green: number, blue: number, alpha: number): void;
    /**
     * Only appeared in Golf & Golf_mp. Parameters were all ptrs
     *
     * Hash: 0x9CFDD90B2B844BF7 | Since: 323
     */
    function golfTrailSetShaderParams(): void;
    /**
     * No comment provided
     *
     * Hash: 0x06F761EA47C1D3ED | Since: 323
     */
    function golfTrailSetFacing(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA4819F5E23E2FFAD | Since: 323
     */
    function golfTrailGetMaxHeight(): number;
    /**
     * No comment provided
     *
     * Hash: 0xA4664972A9B8F8BA | Since: 323
     */
    function golfTrailGetVisualControlPoint(): Vector3;
    /**
     * Toggles Heatvision on/off.
     *
     * Hash: 0x7E08924259E08CE0 | Since: 323
     */
    function setSeethrough(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x44B80ABAB9D80BD3 | Since: 323
     */
    function getUsingseethrough(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x70A64C0234EF522C | Since: 323
     */
    function seethroughReset(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA78DE25577300BA1 | Since: 573
     */
    function seethroughSetFadeStartdistance(distance: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D75795B9DC6EBBF | Since: 573
     */
    function seethroughSetFadeEnddistance(distance: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x43DBAE39626CE83F | Since: 1290
     */
    function seethroughGetMaxThickness(): number;
    /**
     * 0.0 = you will not be able to see people behind the walls. 50.0 and more = you will see everyone through the walls. More value is "better" view. See https://gfycat.com/FirmFlippantGourami
     * min: 1.0
     * max: 10000.0
     *
     * Hash: 0x0C8FAC83902A62DF | Since: 573
     */
    function seethroughSetMaxThickness(thickness: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFF5992E1C9E65D05 | Since: 573
     */
    function seethroughSetNoiseMin(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFEBFBFDFB66039DE | Since: 573
     */
    function seethroughSetNoiseMax(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x19E50EB6E33E1D28 | Since: 573
     */
    function seethroughSetHilightIntensity(intensity: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1636D7FC127B10D2 | Since: 573
     */
    function seethroughSetHighlightNoise(noise: number): void;
    /**
     * min: 0.0
     * max: 0.75
     *
     * Hash: 0xD7D0B00177485411 | Since: 323
     */
    function seethroughSetHeatscale(index: number, heatScale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1086127B3A63505E | Since: 573
     */
    function seethroughSetColorNear(red: number, green: number, blue: number): void;
    /**
     * Setter for GET_MOTIONBLUR_MAX_VEL_SCALER
     *
     * Hash: 0xB3C641F3630BF6DA | Since: 323
     */
    function setMotionblurMaxVelScaler(): void;
    /**
     * Getter for SET_MOTIONBLUR_MAX_VEL_SCALER
     *
     * Hash: 0xE59343E9E96529E7 | Since: 323
     */
    function getMotionblurMaxVelScaler(): number;
    /**
     * No comment provided
     *
     * Hash: 0x6A51F78772175A51 | Since: 1011
     */
    function setForceMotionblur(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE63D7C6EECECB66B | Since: 323
     */
    function togglePlayerDamageOverlay(toggle: boolean): void;
    /**
     * Sets an value related to timecycles.
     *
     * Hash: 0xE3E2C1B4C59DBC77 | Since: 323
     */
    function resetAdaptation(): void;
    /**
     * time in ms to transition to fully blurred screen
     *
     * Hash: 0xA328A24AAA6B7FDC | Since: 323
     */
    function triggerScreenblurFadeIn(transitionTime: number): boolean;
    /**
     * time in ms to transition from fully blurred to normal
     *
     * Hash: 0xEFACC8AEF94430D5 | Since: 323
     */
    function triggerScreenblurFadeOut(transitionTime: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDE81239437E8C5A8 | Since: 323
     */
    function disableScreenblurFade(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5CCABFFCA31DDE33 | Since: 323
     */
    function getScreenblurFadeCurrentTime(): number;
    /**
     * Returns whether screen transition to blur/from blur is running.
     *
     * Hash: 0x7B226C785A52A0A9 | Since: 323
     */
    function isScreenblurFadeRunning(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDFC252D8A3E15AB7 | Since: 323
     */
    function togglePausedRenderphases(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEB3DAC2C86001E5E | Since: 323
     */
    function getTogglePausedRenderphasesStatus(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE1C8709406F2C41C | Since: 323
     */
    function resetPausedRenderphases(): void;
    /**
     * No comment provided
     *
     * Hash: 0x851CD923176EBA7C | Since: 323
     */
    function grabPausemenuOwnership(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBA3D65906822BED5 | Since: 323
     */
    function setHidofOverride(nearplaneOut: number, nearplaneIn: number, farplaneOut: number, farplaneIn: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB569F41F3E7E83A4 | Since: 1103
     */
    function setLockAdaptiveDofDistance(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7AC24EAB6D74118D | Since: 323
     */
    function phonephotoeditorToggle(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBCEDB009461DA156 | Since: 323
     */
    function phonephotoeditorIsActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x27FEB5254759CDE3 | Since: 323
     */
    function phonephotoeditorSetFrameTxd(textureDict: string): boolean;
    /**
     * `GRAPHICS::START_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_paleto_roof_impact", -140.8576f, 6420.789f, 41.1391f, 0f, 0f, 267.3957f, 0x3F800000, 0, 0, 0);`
     *
     * Axis - Invert Axis Flags
     *
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     *
     * -------------------------------------------------------------------
     * C#
     *
     * Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, = you are calling this function.
     *
     * char *effectname = This is an in-game effect name, for e.g. "scr_fbi4_trucks_crash" is used to give the effects when truck crashes etc
     *
     * float x, y, z pos = this one is Simple, you just have to declare, where do you want this effect to take place at, so declare the ordinates
     *
     * float xrot, yrot, zrot = Again simple? just mention the value in case if you want the effect to rotate.
     *
     * float scale = is declare the scale of the effect, this may vary as per the effects for e.g 1.0f
     *
     * bool xaxis, yaxis, zaxis = To bool the axis values.
     *
     * example:
     * Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, "scr_fbi4_trucks_crash", GTA.Game.Player.Character.Position.X, GTA.Game.Player.Character.Position.Y, GTA.Game.Player.Character.Position.Z + 4f, 0, 0, 0, 5.5f, 0, 0, 0);
     *
     * Hash: 0x25129531F77B9ED3 | Since: 323
     */
    function startParticleFxNonLoopedAtCoord(effectName: string, pos: Vector3, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): boolean;
    /**
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     * Hash: 0xF56B8137DF10135D | Since: 323
     */
    function startNetworkedParticleFxNonLoopedAtCoord(effectName: string, pos: Vector3, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): boolean;
    /**
     * `GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE("scr_sh_bong_smoke", PLAYER::PLAYER_PED_ID(), -0.025f, 0.13f, 0f, 0f, 0f, 0f, 31086, 0x3F800000, 0, 0, 0);`
     *
     * Axis - Invert Axis Flags
     *
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     * Hash: 0x0E7E72961BA18619 | Since: 323
     */
    function startParticleFxNonLoopedOnPedBone(effectName: string, ped: number | Ped, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
    /**
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     * Hash: 0xA41B6A43642AC2CF | Since: 323
     */
    function startNetworkedParticleFxNonLoopedOnPedBone(effectName: string, ped: number | Ped, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
    /**
     * Starts a particle effect on an entity for example your player.
     *
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     * Example:
     * C#:
     * Function.Call(Hash.REQUEST_NAMED_PTFX_ASSET, "scr_rcbarry2");                     Function.Call(Hash.USE_PARTICLE_FX_ASSET, "scr_rcbarry2");                             Function.Call(Hash.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY, "scr_clown_appears", Game.Player.Character, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 1.0, false, false, false);
     *
     * `Internally this calls the same function as GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE`
     * however it uses -1 for the specified bone index, so it should be possible to start a non looped fx on an entity bone using that native
     *
     * -can confirm START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE does NOT work on vehicle bones.
     *
     * Hash: 0x0D53A3B8DA0809D2 | Since: 323
     */
    function startParticleFxNonLoopedOnEntity(effectName: string, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
    /**
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     * Hash: 0xC95EB1DB6E92113D | Since: 323
     */
    function startNetworkedParticleFxNonLoopedOnEntity(effectName: string, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
    /**
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     * Hash: 0x02B1F2A72E0F5325 | Since: 2189
     */
    function startParticleFxNonLoopedOnEntityBone(effectName: string, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
    /**
     * only works on some fx's, not networked
     *
     * Hash: 0x26143A59EF48B262 | Since: 323
     */
    function setParticleFxNonLoopedColour(r: number, g: number, b: number): void;
    /**
     * Usage example for C#:
     *
     * Function.Call(Hash.SET_PARTICLE_FX_NON_LOOPED_ALPHA, new InputArgument[] { 0.1f });
     *
     * Note: the argument alpha ranges from 0.0f-1.0f !
     *
     * Hash: 0x77168D722C58B2FC | Since: 323
     */
    function setParticleFxNonLoopedAlpha(alpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB7EF5850C39FABCA | Since: 2802
     */
    function setParticleFxNonLoopedScale(scale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1E2E01C00837D26E | Since: 2699
     */
    function setParticleFxNonLoopedEmitterSize(scale: number): void;
    /**
     * Used only once in the scripts (taxi_clowncar)
     *
     * Hash: 0x8CDE909A0370BB3A | Since: 323
     */
    function setParticleFxForceVehicleInterior(toggle: boolean): void;
    /**
     * `GRAPHICS::START_PARTICLE_FX_LOOPED_AT_COORD("scr_fbi_falling_debris", 93.7743f, -749.4572f, 70.86904f, 0f, 0f, 0f, 0x3F800000, 0, 0, 0, 0)`
     *
     *
     * p11 seems to be always 0
     *
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     * Hash: 0xE184F4F0DC5910E7 | Since: 323
     */
    function startParticleFxLoopedAtCoord(effectName: string, pos: Vector3, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
    /**
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     * Hash: 0xF28DA9F38CD1787C | Since: 323
     */
    function startParticleFxLoopedOnPedBone(effectName: string, ped: number | Ped, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
    /**
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     * Hash: 0x1AE42C1660FD6517 | Since: 323
     */
    function startParticleFxLoopedOnEntity(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
    /**
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     * Hash: 0xC6EB449E33977F0B | Since: 323
     */
    function startParticleFxLoopedOnEntityBone(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
    /**
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     * Hash: 0x6F60E89A7B64EE1D | Since: 323
     */
    function startNetworkedParticleFxLoopedOnEntity(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean, r: number, g: number, b: number, a: number): number;
    /**
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     * Hash: 0xDDE23F30CC5A0F03 | Since: 323
     */
    function startNetworkedParticleFxLoopedOnEntityBone(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean, r: number, g: number, b: number, a: number): number;
    /**
     * p1 is always 0 in the native scripts
     *
     * Hash: 0x8F75998877616996 | Since: 323
     */
    function stopParticleFxLooped(ptfxHandle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC401503DFE8D53CF | Since: 323
     */
    function removeParticleFx(ptfxHandle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB8FEAEEBCC127425 | Since: 323
     */
    function removeParticleFxFromEntity(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xDD19FA1C6D657305 | Since: 323
     */
    function removeParticleFxInRange(pos: Vector3, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBA0127DA25FD54C9 | Since: 372
     */
    function forceParticleFxInVehicleInterior(): void;
    /**
     * No comment provided
     *
     * Hash: 0x74AFEF0D2E1E409B | Since: 323
     */
    function doesParticleFxLoopedExist(ptfxHandle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF7DDEBEC43483C43 | Since: 323
     */
    function setParticleFxLoopedOffsets(ptfxHandle: number, pos: Vector3, rot: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x5F0C4B5B1C393BE2 | Since: 323
     */
    function setParticleFxLoopedEvolution(ptfxHandle: number, propertyName: string, amount: number, noNetwork: boolean): void;
    /**
     * only works on some fx's
     *
     * p4 = 0
     *
     * Hash: 0x7F8F65877F88783B | Since: 323
     */
    function setParticleFxLoopedColour(ptfxHandle: number, r: number, g: number, b: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x726845132380142E | Since: 323
     */
    function setParticleFxLoopedAlpha(ptfxHandle: number, alpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB44250AAA456492D | Since: 323
     */
    function setParticleFxLoopedScale(ptfxHandle: number, scale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDCB194B85EF7B541 | Since: 323
     */
    function setParticleFxLoopedFarClipDist(ptfxHandle: number, range: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4100BF0346A8D2C3 | Since: 3095
     */
    function setParticleFxLoopedCameraBias(ptfxHandle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEEC4047028426510 | Since: 323
     */
    function setParticleFxCamInsideVehicle(): void;
    /**
     * No comment provided
     *
     * Hash: 0xACEE6F360FC1F6B6 | Since: 323
     */
    function setParticleFxCamInsideNonplayerVehicle(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x96EF97DAEB89BEF5 | Since: 323
     */
    function setParticleFxShootoutBoat(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2A251AA48B2B46DB | Since: 323
     */
    function clearParticleFxShootoutBoat(): void;
    /**
     * No comment provided
     *
     * Hash: 0x908311265D42A820 | Since: 323
     */
    function setParticleFxBloodScale(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCFD16F0DB5A3535C | Since: 2060
     */
    function disableInWaterPtfx(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x5F6DF3D92271E8A1 | Since: 323
     */
    function disableDownwashPtfx(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2B40A97646381508 | Since: 1011
     */
    function setParticleFxSlipstreamLodrangeScale(scale: number): void;
    /**
     * Creates cartoon effect when Michel smokes the weed
     *
     * Hash: 0xD821490579791273 | Since: 323
     */
    function enableClownBloodVfx(toggle: boolean): void;
    /**
     * Creates a motion-blur sort of effect, this native does not seem to work, however by using the `START_SCREEN_EFFECT` native with `DrugsMichaelAliensFight` as the effect parameter, you should be able to get the effect.
     *
     * Hash: 0x9DCE1F0F78260875 | Since: 323
     */
    function enableAlienBloodVfx(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x27E32866E9A5C416 | Since: 323
     */
    function setParticleFxBulletImpactScale(scale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBB90E12CAC1DAB25 | Since: 323
     */
    function setParticleFxBulletImpactLodrangeScale(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA4AE345A153D573 | Since: 323
     */
    function setParticleFxBulletTraceNoAngleReject(): void;
    /**
     * No comment provided
     *
     * Hash: 0x54E22EA2C1956A8D | Since: 323
     */
    function setParticleFxBangScrapeLodrangeScale(): void;
    /**
     * No comment provided
     *
     * Hash: 0x949F397A288B28B3 | Since: 323
     */
    function setParticleFxFootLodrangeScale(): void;
    /**
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     * Hash: 0xBA3D194057C79A7B | Since: 877
     */
    function setParticleFxFootOverrideName(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5DBF05DB5926D089 | Since: 1011
     */
    function setSkidmarkRangeScale(scale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC6730E0D14E50703 | Since: 2545
     */
    function setPtfxForceVehicleInteriorFlag(): void;
    /**
     * No comment provided
     *
     * Hash: 0x170911F37F646F29 | Since: 2802
     */
    function registerPostfxBulletImpact(weaponWorldPosX: number, weaponWorldPosY: number, weaponWorldPosZ: number, intensity: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9B079E5221D984D3 | Since: 323
     */
    function forcePostfxBulletImpactsAfterHud(): void;
    /**
     * From the b678d decompiled scripts:
     *
     * `GRAPHICS::USE_PARTICLE_FX_ASSET("FM_Mission_Controler");`
     * `GRAPHICS::USE_PARTICLE_FX_ASSET("scr_apartment_mp");`
     * `GRAPHICS::USE_PARTICLE_FX_ASSET("scr_indep_fireworks");`
     * `GRAPHICS::USE_PARTICLE_FX_ASSET("scr_mp_cig_plane");`
     * `GRAPHICS::USE_PARTICLE_FX_ASSET("scr_mp_creator");`
     * `GRAPHICS::USE_PARTICLE_FX_ASSET("scr_ornate_heist");`
     * `GRAPHICS::USE_PARTICLE_FX_ASSET("scr_prison_break_heist_station");`
     *
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     * Hash: 0x6C38AF3693A69A91 | Since: 323
     */
    function useParticleFxAsset(name: string): void;
    /**
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     * Hash: 0xEA1E2D93F6F75ED9 | Since: 323
     */
    function setParticleFxOverride(oldAsset: string, newAsset: string): void;
    /**
     * Resets the effect of SET_PARTICLE_FX_OVERRIDE
     *
     * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
     *
     * Hash: 0x89C8553DD3274AAE | Since: 323
     */
    function resetParticleFxOverride(name: string): void;
    /**
     * Returns ptfxHandle
     * effectName: scr_sv_drag_burnout
     *
     * Hash: 0xDF269BE2909E181A | Since: 3095
     */
    function startVehicleParticleFxLooped(vehicle: number | Vehicle, effectName: string, frontBack: boolean, leftRight: boolean, localOnly: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0xA46B73FAA3460AE1 | Since: 323
     */
    function setWeatherPtfxUseOverrideSettings(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF78B803082D4386F | Since: 323
     */
    function setWeatherPtfxOverrideCurrLevel(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9C30613D50A6ADEF | Since: 323
     */
    function washDecalsInRange(pos: Vector3, range: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5B712761429DBC14 | Since: 323
     */
    function washDecalsFromVehicle(vehicle: number | Vehicle): void;
    /**
     * Fades nearby decals within the range specified
     *
     * Hash: 0xD77EDADB0420E6E0 | Since: 323
     */
    function fadeDecalsInRange(pos: Vector3): void;
    /**
     * Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...
     *
     * Hash: 0x5D6B2D4830A67C62 | Since: 323
     */
    function removeDecalsInRange(pos: Vector3, range: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCCF71CBDDF5B6CB9 | Since: 323
     */
    function removeDecalsFromObject(obj: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0xA6F6F70FDC6D144C | Since: 323
     */
    function removeDecalsFromObjectFacing(obj: number | Object, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xE91F1B65F2B48D57 | Since: 323
     */
    function removeDecalsFromVehicle(vehicle: number | Vehicle): void;
    /**
     * decal types:
     *
     * public enum DecalTypes
     * {
     * splatters_blood = 1010,
     * splatters_blood_dir = 1015,
     * splatters_blood_mist = 1017,
     * splatters_mud = 1020,
     * splatters_paint = 1030,
     * splatters_water = 1040,
     * splatters_water_hydrant = 1050,
     * splatters_blood2 = 1110,
     * weapImpact_metal = 4010,
     * weapImpact_concrete = 4020,
     * weapImpact_mattress = 4030,
     * weapImpact_mud = 4032,
     * weapImpact_wood = 4050,
     * weapImpact_sand = 4053,
     * weapImpact_cardboard = 4040,
     * weapImpact_melee_glass = 4100,
     * weapImpact_glass_blood = 4102,
     * weapImpact_glass_blood2 = 4104,
     * weapImpact_shotgun_paper = 4200,
     * weapImpact_shotgun_mattress,
     * weapImpact_shotgun_metal,
     * weapImpact_shotgun_wood,
     * weapImpact_shotgun_dirt,
     * weapImpact_shotgun_tvscreen,
     * weapImpact_shotgun_tvscreen2,
     * weapImpact_shotgun_tvscreen3,
     * weapImpact_melee_concrete = 4310,
     * weapImpact_melee_wood = 4312,
     * weapImpact_melee_metal = 4314,
     * burn1 = 4421,
     * burn2,
     * burn3,
     * burn4,
     * burn5,
     * bang_concrete_bang = 5000,
     * bang_concrete_bang2,
     * bang_bullet_bang,
     * bang_bullet_bang2 = 5004,
     * bang_glass = 5031,
     * bang_glass2,
     * solidPool_water = 9000,
     * solidPool_blood,
     * solidPool_oil,
     * solidPool_petrol,
     * solidPool_mud,
     * porousPool_water,
     * porousPool_blood,
     * porousPool_oil,
     * porousPool_petrol,
     * porousPool_mud,
     * porousPool_water_ped_drip,
     * liquidTrail_water = 9050
     * }
     *
     * Hash: 0xB302244A1839BDAD | Since: 323
     */
    function addDecal(decalType: number, pos: Vector3, width: number, height: number, rCoef: number, gCoef: number, bCoef: number, opacity: number, timeout: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x4F5212C7AD880DF8 | Since: 323
     */
    function addPetrolDecal(pos: Vector3, groundLvl: number, width: number, transparency: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x126D7F89FE859A5E | Since: 2699
     */
    function addOilDecal(pos: Vector3, groundLvl: number, width: number, transparency: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x99AC7F0D8B9C893D | Since: 323
     */
    function startPetrolTrailDecals(): void;
    /**
     * No comment provided
     *
     * Hash: 0x967278682CB6967A | Since: 323
     */
    function addPetrolTrailDecalInfo(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A123435A26C36CD | Since: 323
     */
    function endPetrolTrailDecals(): void;
    /**
     * No comment provided
     *
     * Hash: 0xED3F346429CCD659 | Since: 323
     */
    function removeDecal(decal: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC694D74949CAFD0C | Since: 323
     */
    function isDecalAlive(decal: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x323F647679A09103 | Since: 323
     */
    function getDecalWashLevel(decal: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xD9454B5752C857DC | Since: 323
     */
    function setDisablePetrolDecalsIgnitingThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x27CFB1B1E078CB2D | Since: 323
     */
    function setDisablePetrolDecalsRecyclingThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4B5CFC83122DF602 | Since: 323
     */
    function setDisableDecalRenderingThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F09F7976C512404 | Since: 323
     */
    function getIsPetrolDecalInRange(xCoord: number, yCoord: number, zCoord: number, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8A35C742130C6080 | Since: 323
     */
    function patchDecalDiffuseMap(decalType: number, textureDict: string, textureName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xB7ED70C49521A61D | Since: 323
     */
    function unpatchDecalDiffuseMap(decalType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x84C8D7C2D30D3280 | Since: 323
     */
    function moveVehicleDecals(): void;
    /**
     * boneIndex is always chassis_dummy in the scripts. The x/y/z params are location relative to the chassis bone.
     *
     * Hash: 0x428BDCB9DA58DA53 | Since: 323
     */
    function addVehicleCrewEmblem(vehicle: number | Vehicle, ped: number | Ped, boneIndex: number, x1: number, x2: number, x3: number, y1: number, y2: number, y3: number, z1: number, z2: number, z3: number, scale: number, alpha: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x82ACC484FFA3B05F | Since: 372
     */
    function abortVehicleCrewEmblemRequest(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xD2300034310557E4 | Since: 323
     */
    function removeVehicleCrewEmblem(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xFE26117A5841B2FF | Since: 323
     */
    function getVehicleCrewEmblemRequestState(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x060D935D3981A275 | Since: 323
     */
    function doesVehicleHaveCrewEmblem(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0E4299C549F0D1F1 | Since: 323
     */
    function disableCompositeShotgunDecals(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x02369D5C8A51FDCF | Since: 323
     */
    function disableScuffDecals(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x46D1A61A21F566FC | Since: 323
     */
    function setDecalBulletImpactRangeScale(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2A2A52824DB96700 | Since: 323
     */
    function overrideInteriorSmokeName(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x1600FD8CF72EBC12 | Since: 323
     */
    function overrideInteriorSmokeLevel(level: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEFB55E7C25D3B3BE | Since: 323
     */
    function overrideInteriorSmokeEnd(): void;
    /**
     * Used with 'NG_filmnoir_BW{01,02}' timecycles and the "NOIR_FILTER_SOUNDS" audioref.
     *
     * Hash: 0xA44FF770DFBC5DAE | Since: 323
     */
    function registerNoirLensEffect(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC9F98AC1884E73A2 | Since: 323
     */
    function disableVehicleDistantlights(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x03300B57FCAC6DDB | Since: 323
     */
    function renderShadowedLightsWithNoShadows(): void;
    /**
     * No comment provided
     *
     * Hash: 0x98EDF76A7271E4F2 | Since: 323
     */
    function requestEarlyLightCheck(): void;
    /**
     * Forces footstep tracks on all surfaces.
     *
     * Hash: 0xAEEDAD1420C65CC0 | Since: 323
     */
    function useSnowFootVfxWhenUnsheltered(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA342A3763B3AFB6C | Since: 3095
     */
    function forceAllowSnowFootVfxOnIce(toggle: boolean): void;
    /**
     * Forces vehicle trails on all surfaces.
     *
     * Hash: 0x4CC7F0FEA5283FE0 | Since: 323
     */
    function useSnowWheelVfxWhenUnsheltered(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEFD97FF47B745B8D | Since: 791
     */
    function disableRegionVfx(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6E9EF3A33C8899F8 | Since: 3095
     */
    function forceGroundSnowPass(toggle: boolean): void;
    /**
     * Only one match in the scripts:
     *
     * `GRAPHICS::PRESET_INTERIOR_AMBIENT_CACHE("int_carrier_hanger");`
     *
     * Hash: 0xD7021272EB0A451E | Since: 323
     */
    function presetInteriorAmbientCache(timecycleModifierName: string): void;
    /**
     * Loads the specified timecycle modifier. Modifiers are defined separately in another file (e.g. "timecycle_mods_1.xml")
     *
     * Parameters:
     * modifierName - The modifier to load (e.g. "V_FIB_IT3", "scanline_cam", etc.)
     *
     * Full list of timecycle modifiers by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/timecycleModifiers.json
     *
     * Hash: 0x2C933ABF17A1DF41 | Since: 323
     */
    function setTimecycleModifier(modifierName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x82E7FFCD5B2326B3 | Since: 323
     */
    function setTimecycleModifierStrength(strength: number): void;
    /**
     * Full list of timecycle modifiers by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/timecycleModifiers.json
     *
     * Hash: 0x3BCF567485E1971C | Since: 323
     */
    function setTransitionTimecycleModifier(modifierName: string, transition: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1CBA05AE7BD7EE05 | Since: 323
     */
    function setTransitionOutOfTimecycleModifier(strength: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0F07E7745A236711 | Since: 323
     */
    function clearTimecycleModifier(): void;
    /**
     * Only use for this in the PC scripts is:
     *
     * `if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)`
     *
     * Hash: 0xFDF3D97C674AFB66 | Since: 323
     */
    function getTimecycleModifierIndex(): number;
    /**
     * No comment provided
     *
     * Hash: 0x459FD2C8D0AB78BC | Since: 323
     */
    function getTimecycleTransitionModifierIndex(): number;
    /**
     * No comment provided
     *
     * Hash: 0x98D18905BF723B99 | Since: 1493
     */
    function getIsTimecycleTransitioningOut(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x58F735290861E6B4 | Since: 323
     */
    function pushTimecycleModifier(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3C8938D7D872211E | Since: 323
     */
    function popTimecycleModifier(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBBF327DED94E4DEB | Since: 323
     */
    function setCurrentPlayerTcmodifier(modifierName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xBDEB86F4D5809204 | Since: 323
     */
    function setPlayerTcmodifierTransition(value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF59707B3E5ED531 | Since: 323
     */
    function setNextPlayerTcmodifier(modifierName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x1A8E2C8B9CF4549C | Since: 323
     */
    function addTcmodifierOverride(modifierName1: string, modifierName2: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x15E33297C3E8DC60 | Since: 323
     */
    function clearAllTcmodifierOverrides(): void;
    /**
     * Full list of timecycle modifiers by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/timecycleModifiers.json
     *
     * Hash: 0x5096FD9CCB49056D | Since: 323
     */
    function setExtraTcmodifier(modifierName: string): void;
    /**
     * Clears the secondary timecycle modifier usually set with _SET_EXTRA_TIMECYCLE_MODIFIER
     *
     * Hash: 0x92CCC17A7A2285DA | Since: 323
     */
    function clearExtraTcmodifier(): void;
    /**
     * See GET_TIMECYCLE_MODIFIER_INDEX for use, works the same just for the secondary timecycle modifier.
     * Returns an integer representing the Timecycle modifier
     *
     * Hash: 0xBB0527EC6341496D | Since: 323
     */
    function getExtraTcmodifier(): number;
    /**
     * The same as SET_TIMECYCLE_MODIFIER_STRENGTH but for the secondary timecycle modifier.
     *
     * Hash: 0x2C328AF17210F009 | Since: 323
     */
    function enableMoonCycleOverride(strength: number): void;
    /**
     * Resets the extra timecycle modifier strength normally set with 0x2C328AF17210F009
     *
     * Hash: 0x2BF72AD5B41AA739 | Since: 323
     */
    function disableMoonCycleOverride(): void;
    /**
     * No comment provided
     *
     * Hash: 0x11FE353CF9733E6F | Since: 323
     */
    function requestScaleformMovie(scaleformName: string): number;
    /**
     * Another REQUEST_SCALEFORM_MOVIE equivalent.
     *
     * Hash: 0x65E7E78842E74CDB | Since: 372
     */
    function requestScaleformMovieWithIgnoreSuperWidescreen(scaleformName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xC514489CFB8AF806 | Since: 323
     */
    function requestScaleformMovieInstance(scaleformName: string): number;
    /**
     * Similar to REQUEST_SCALEFORM_MOVIE, but seems to be some kind of "interactive" scaleform movie?
     *
     * These seem to be the only scaleforms ever requested by this native:
     * "breaking_news"
     * "desktop_pc"
     * "ECG_MONITOR"
     * "Hacking_PC"
     * "TEETH_PULLING"
     *
     * Note: Unless this hash is out-of-order, this native is next-gen only.
     *
     *
     * Hash: 0xBD06C611BB9048C2 | Since: 323
     */
    function requestScaleformMovieSkipRenderWhilePaused(scaleformName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x85F01B8D5B90570E | Since: 323
     */
    function hasScaleformMovieLoaded(scaleformHandle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9743BCCF7CD6E1F6 | Since: 3407
     */
    function hasScaleformMovieNamedLoaded(scaleformName: string): [boolean, number];
    /**
     * val is 1-20 (0 will return false)
     *
     * Hash: 0x2FCB133CA50A49EB | Since: 1290
     */
    function isActiveScaleformMovieDeleting(val: number): boolean;
    /**
     * val is 1-20. Return is related to INSTRUCTIONAL_BUTTONS, COLOUR_SWITCHER_02, etc?
     *
     * Hash: 0x86255B1FC929E33E | Since: 1290
     */
    function isScaleformMovieDeleting(val: number): boolean;
    /**
     * Only values used in the scripts are:
     *
     * "heist_mp"
     * "heistmap_mp"
     * "instructional_buttons"
     * "heist_pre"
     *
     * Hash: 0x0C1C5D756FB5F337 | Since: 323
     */
    function hasScaleformMovieFilenameLoaded(scaleformName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8217150E1217EBFD | Since: 323
     */
    function hasScaleformContainerMovieLoadedIntoParent(scaleformHandle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1D132D614DD86811 | Since: 323
     */
    function setScaleformMovieAsNoLongerNeeded(scaleformHandle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2FDFB1B04C76E9C3 | Since: 3407
     */
    function setScaleformMovieNamedAsNoLongerNeeded(scaleformHandle: number, scaleformName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x6D8EB211944DCE08 | Since: 323
     */
    function setScaleformMovieToUseSystemTime(scaleform: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x32F34FF7F617643B | Since: 573
     */
    function setScaleformMovieToUseLargeRt(scaleformHandle: number, toggle: boolean): void;
    /**
     * This native is used in some casino scripts to fit the scaleform in the rendertarget.
     *
     * Hash: 0xE6A9F00D4240B519 | Since: 877
     */
    function setScaleformMovieToUseSuperLargeRt(scaleformHandle: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x54972ADAF0294A93 | Since: 323
     */
    function drawScaleformMovie(scaleformHandle: number, x: number, y: number, width: number, height: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * unk is not used so no need
     *
     * Hash: 0x0DF606929C105BE1 | Since: 323
     */
    function drawScaleformMovieFullscreen(scaleform: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCF537FDE4FBD4CE5 | Since: 323
     */
    function drawScaleformMovieFullscreenMasked(scaleform1: number, scaleform2: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x87D51D72255D4E78 | Since: 323
     */
    function drawScaleformMovie3d(scaleform: number, pos: Vector3, rot: Vector3, scale: Vector3, rotationOrder: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1CE592FDC749D6F5 | Since: 323
     */
    function drawScaleformMovie3dSolid(scaleform: number, pos: Vector3, rot: Vector3, scale: Vector3, rotationOrder: number): void;
    /**
     * Calls the Scaleform function.
     *
     * Hash: 0xFBD96D87AC96D533 | Since: 323
     */
    function callScaleformMovieMethod(scaleform: number, method: string): void;
    /**
     * Calls the Scaleform function and passes the parameters as floats.
     *
     * The number of parameters passed to the function varies, so the end of the parameter list is represented by -1.0.
     *
     * Hash: 0xD0837058AE2E4BEE | Since: 323
     */
    function callScaleformMovieMethodWithNumber(scaleform: number, methodName: string, param1: number, param2: number, param3: number, param4: number, param5: number): void;
    /**
     * Calls the Scaleform function and passes the parameters as strings.
     *
     * The number of parameters passed to the function varies, so the end of the parameter list is represented by 0 (NULL).
     *
     * Hash: 0x51BC1ED3CC44E8F7 | Since: 323
     */
    function callScaleformMovieMethodWithString(scaleform: number, methodName: string, param1: string, param2: string, param3: string, param4: string, param5: string): void;
    /**
     * Calls the Scaleform function and passes both float and string parameters (in their respective order).
     *
     * The number of parameters passed to the function varies, so the end of the float parameters is represented by -1.0, and the end of the string parameters is represented by 0 (NULL).
     *
     * NOTE: The order of parameters in the function prototype is important! All float parameters must come first, followed by the string parameters.
     *
     * Examples:
     * // function MY_FUNCTION(floatParam1, floatParam2, stringParam)
     * `GRAPHICS::CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER_AND_STRING(scaleform, "MY_FUNCTION", 10.0, 20.0, -1.0, -1.0, -1.0, "String param", 0, 0, 0, 0);`
     *
     * // function MY_FUNCTION_2(floatParam, stringParam1, stringParam2)
     * `GRAPHICS::CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER_AND_STRING(scaleform, "MY_FUNCTION_2", 10.0, -1.0, -1.0, -1.0, -1.0, "String param #1", "String param #2", 0, 0, 0);`
     *
     * Hash: 0xEF662D8D57E290B1 | Since: 323
     */
    function callScaleformMovieMethodWithNumberAndString(scaleform: number, methodName: string, floatParam1: number, floatParam2: number, floatParam3: number, floatParam4: number, floatParam5: number, stringParam1: string, stringParam2: string, stringParam3: string, stringParam4: string, stringParam5: string): void;
    /**
     * `Pushes a function from the Hud component Scaleform onto the stack. Same behavior as GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD, just a hud component id instead of a Scaleform.`
     *
     * Known components:
     * 19 - MP_RANK_BAR
     * 20 - HUD_DIRECTOR_MODE
     *
     * This native requires more research - all information can be found inside of 'hud.gfx'. Using a decompiler, the different components are located under "scripts\__Packages\com\rockstargames\gtav\hud\hudComponents" and "scripts\__Packages\com\rockstargames\gtav\Multiplayer".
     *
     * Hash: 0x98C494FD5BDFBFD5 | Since: 323
     */
    function beginScaleformScriptHudMovieMethod(hudComponent: number, methodName: string): boolean;
    /**
     * Push a function from the Scaleform onto the stack
     *
     *
     * Hash: 0xF6E48914C7A8694E | Since: 323
     */
    function beginScaleformMovieMethod(scaleform: number, methodName: string): boolean;
    /**
     * Starts frontend (pause menu) scaleform movie methods.
     * This can be used when you want to make custom frontend menus, and customize things like images or text in the menus etc.
     * Use `BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER` for header scaleform functions.
     *
     * Hash: 0xAB58C27C2E6123C6 | Since: 323
     */
    function beginScaleformMovieMethodOnFrontend(methodName: string): boolean;
    /**
     * Starts frontend (pause menu) scaleform movie methods for header options.
     * Use `BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND` to customize the content inside the frontend menus.
     *
     * Hash: 0xB9449845F73F5E9C | Since: 323
     */
    function beginScaleformMovieMethodOnFrontendHeader(methodName: string): boolean;
    /**
     * Pops and calls the Scaleform function on the stack
     *
     * Hash: 0xC6796A8FFA375E53 | Since: 323
     */
    function endScaleformMovieMethod(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC50AA39A577AF886 | Since: 323
     */
    function endScaleformMovieMethodReturnValue(): number;
    /**
     * methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
     * Returns true if the return value of a scaleform function is ready to be collected (using GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING or GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT).
     *
     * Hash: 0x768FF8961BA904D6 | Since: 323
     */
    function isScaleformMovieMethodReturnValueReady(methodReturn: number): boolean;
    /**
     * methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
     * Used to get a return value from a scaleform function. Returns an int in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING returns a string.
     *
     * Hash: 0x2DE7EFA66B906036 | Since: 323
     */
    function getScaleformMovieMethodReturnValueInt(methodReturn: number): number;
    /**
     * methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
     *
     * Hash: 0xD80A80346A45D761 | Since: 757
     */
    function getScaleformMovieMethodReturnValueBool(methodReturn: number): boolean;
    /**
     * methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
     * Used to get a return value from a scaleform function. Returns a string in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT returns an int.
     *
     * Hash: 0xE1E258829A885245 | Since: 323
     */
    function getScaleformMovieMethodReturnValueString(methodReturn: number): string;
    /**
     * Pushes an integer for the Scaleform function onto the stack.
     *
     * Hash: 0xC3D0841A0CC546A6 | Since: 323
     */
    function scaleformMovieMethodAddParamInt(value: number): void;
    /**
     * Pushes a float for the Scaleform function onto the stack.
     *
     * Hash: 0xD69736AAE04DB51A | Since: 323
     */
    function scaleformMovieMethodAddParamFloat(value: number): void;
    /**
     * Pushes a boolean for the Scaleform function onto the stack.
     *
     * Hash: 0xC58424BA936EB458 | Since: 323
     */
    function scaleformMovieMethodAddParamBool(value: boolean): void;
    /**
     * `Called prior to adding a text component to the UI. After doing so, GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING is called.`
     *
     * Examples:
     * `GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("NUMBER");`
     * `HUD::ADD_TEXT_COMPONENT_INTEGER(MISC::ABSI(a_1));`
     * `GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();`
     *
     * `GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");`
     * `HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(a_2);`
     * `GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();`
     *
     * `GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM2");`
     * `HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY(v_3);`
     * `HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY(v_4);`
     * `GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();`
     *
     * `GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM1");`
     * `HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY(v_3);`
     * `GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();`
     *
     * Hash: 0x80338406F3475E55 | Since: 323
     */
    function beginTextCommandScaleformString(componentType: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x362E2D3FE93A9959 | Since: 323
     */
    function endTextCommandScaleformString(): void;
    /**
     * Same as END_TEXT_COMMAND_SCALEFORM_STRING but does not perform HTML conversion for text tokens.
     *
     * Hash: 0xAE4E8157D9ECF087 | Since: 323
     */
    function endTextCommandUnparsedScaleformString(): void;
    /**
     * Same as SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING
     * Both SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING / _SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING_2 works, but _SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING_2 is usually used for "name" (organisation, players..).
     *
     * Hash: 0x77FE3402004CD1B0 | Since: 573
     */
    function scaleformMovieMethodAddParamLiteralString(_string: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xBA7148484BD90365 | Since: 323
     */
    function scaleformMovieMethodAddParamTextureNameString(_string: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xE83A3E3557A56640 | Since: 323
     */
    function scaleformMovieMethodAddParamPlayerNameString(_string: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5E657EF1099EDD65 | Since: 323
     */
    function doesLatestBriefStringExist(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEC52C631A1831C03 | Since: 323
     */
    function scaleformMovieMethodAddParamLatestBriefString(value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9304881D6F6537EA | Since: 323
     */
    function requestScaleformScriptHudMovie(hudComponent: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDF6E5987D2B4D140 | Since: 323
     */
    function hasScaleformScriptHudMovieLoaded(hudComponent: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF44A5456AC3F4F97 | Since: 323
     */
    function removeScaleformScriptHudMovie(hudComponent: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1C7CB175E012964 | Since: 323
     */
    function passKeyboardInputToScaleform(scaleformHandle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBAABBB23EB6E484E | Since: 323
     */
    function setTvChannel(channel: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFC1E275A90D39995 | Since: 323
     */
    function getTvChannel(): number;
    /**
     * No comment provided
     *
     * Hash: 0x2982BF73F66E9DDC | Since: 323
     */
    function setTvVolume(volume: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2170813D3DD8661B | Since: 323
     */
    function getTvVolume(): number;
    /**
     * `All calls to this native are preceded by calls to GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER and GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU, respectively.`
     *
     * "act_cinema.ysc", line 1483:
     * `HUD::SET_HUD_COMPONENT_POSITION(15, 0.0, -0.0375);`
     * `HUD::SET_TEXT_RENDER_ID(l_AE);`
     * `GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(4);`
     * `GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(1);`
     * `if (GRAPHICS::IS_TVSHOW_CURRENTLY_PLAYING(${movie_arthouse})) {`
     * `GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 0.7375, 1.0, 0.0, 255, 255, 255, 255);`
     * } else {
     * `GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);`
     * }
     *
     * "am_mp_property_int.ysc", line 102545:
     * `if (ENTITY::DOES_ENTITY_EXIST(a_2._f3)) {`
     * `if (HUD::IS_NAMED_RENDERTARGET_LINKED(ENTITY::GET_ENTITY_MODEL(a_2._f3))) {`
     * `HUD::SET_TEXT_RENDER_ID(a_2._f1);`
     * `GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(4);`
     * `GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(1);`
     * `GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);`
     * `if (GRAPHICS::GET_TV_CHANNEL() == -1) {`
     * sub_a8fa5(a_2, 1);
     * } else {
     * sub_a8fa5(a_2, 1);
     * `GRAPHICS::ATTACH_TV_AUDIO_TO_ENTITY(a_2._f3);`
     * }
     * `HUD::SET_TEXT_RENDER_ID(HUD::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID());`
     * }
     * }
     *
     *
     * Hash: 0xFDDC2B4ED3C69DF0 | Since: 323
     */
    function drawTvChannel(xPos: number, yPos: number, xScale: number, yScale: number, rotation: number, red: number, green: number, blue: number, alpha: number): void;
    /**
     * Loads specified video sequence into the TV Channel
     * TV_Channel ranges from 0-2
     * VideoSequence can be any of the following:
     * "PL_STD_CNT" CNT Standard Channel
     * "PL_STD_WZL" Weazel Standard Channel
     * "PL_LO_CNT"
     * "PL_LO_WZL"
     * "PL_SP_WORKOUT"
     * "PL_SP_INV" - Jay Norris Assassination Mission Fail
     * "PL_SP_INV_EXP" - Jay Norris Assassination Mission Success
     * "PL_LO_RS" - Righteous Slaughter Ad
     * "PL_LO_RS_CUTSCENE" - Righteous Slaughter Cut-scene
     * "PL_SP_PLSH1_INTRO"
     * "PL_LES1_FAME_OR_SHAME"
     * "PL_STD_WZL_FOS_EP2"
     * "PL_MP_WEAZEL" - Weazel Logo on loop
     * "PL_MP_CCTV" - Generic CCTV loop
     *
     * Restart:
     * 0=video sequence continues as normal
     * 1=sequence restarts from beginning every time that channel is selected
     *
     *
     * The above playlists work as intended, and are commonly used, but there are many more playlists, as seen in `tvplaylists.xml`. A pastebin below outlines all playlists, they will be surronded by the name tag I.E. (<Name>PL_STD_CNT</Name> = PL_STD_CNT).
     * https://pastebin.com/zUzGB6h7
     *
     * Hash: 0xF7B38B8305F1FE8B | Since: 323
     */
    function setTvChannelPlaylist(tvChannel: number, playlistName: string, restart: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2201C576FACAEBE8 | Since: 323
     */
    function setTvChannelPlaylistAtHour(tvChannel: number, playlistName: string, hour: number): void;
    /**
     * Does not actually return anything.
     *
     * Hash: 0xEE831F15A8D0D94A | Since: 3095
     */
    function setTvChannelPlaylistDirty(tvChannel: number): any;
    /**
     * No comment provided
     *
     * Hash: 0xBEB3D46BB7F043C0 | Since: 323
     */
    function clearTvChannelPlaylist(tvChannel: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F710BFF7DAE6261 | Since: 1604
     */
    function isPlaylistOnChannel(tvChannel: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0AD973CA1E077B60 | Since: 323
     */
    function isTvshowCurrentlyPlaying(videoCliphash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x74C180030FDE4B69 | Since: 323
     */
    function enableMovieKeyframeWait(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1C55B110E4DF534 | Since: 323
     */
    function setTvPlayerWatchingThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x30432A0118736E00 | Since: 1493
     */
    function getCurrentTvClipNamehash(): number;
    /**
     * No comment provided
     *
     * Hash: 0x873FA65C778AD970 | Since: 323
     */
    function enableMovieSubtitles(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD3A10FC7FD8D98CD | Since: 323
     */
    function ui3dsceneIsAvailable(): boolean;
    /**
     * All presets can be found in common\data\ui\uiscenes.meta
     *
     * Hash: 0xF1CEA8A4198D8E9A | Since: 323
     */
    function ui3dscenePushPreset(presetName: string): boolean;
    /**
     * It's called after UI3DSCENE_IS_AVAILABLE and UI3DSCENE_PUSH_PRESET
     *
     * presetName was always "CELEBRATION_WINNER"
     * All presets can be found in common\data\ui\uiscenes.meta
     *
     * Hash: 0x98C4FE6EC34154CA | Since: 323
     */
    function ui3dsceneAssignPedToSlot(presetName: string, ped: number | Ped, slot: number, pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7A42B2E236E71415 | Since: 323
     */
    function ui3dsceneClearPatchedData(): void;
    /**
     * No comment provided
     *
     * Hash: 0x108BE26959A9D9BB | Since: 323
     */
    function ui3dsceneMakePushedPresetPersistent(toggle: boolean): void;
    /**
     * This native enables/disables the gold putting grid display (https://i.imgur.com/TC6cku6.png).
     * This requires these two natives to be called as well to configure the grid: `TERRAINGRID_SET_PARAMS` and `TERRAINGRID_SET_COLOURS`.
     *
     * Hash: 0xA356990E161C9E65 | Since: 323
     */
    function terraingridActivate(toggle: boolean): void;
    /**
     * This native is used along with these two natives: `TERRAINGRID_ACTIVATE` and `TERRAINGRID_SET_COLOURS`.
     * This native configures the location, size, rotation, normal height, and the difference ratio between min, normal and max.
     *
     * All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
     *
     * This native renders a box at the given position, with a special shader that renders a grid on world geometry behind it. This box does not have backface culling.
     * The forward args here are a direction vector, something similar to what's returned by GET_ENTITY_FORWARD_VECTOR.
     * normalHeight and heightDiff are used for positioning the color gradient of the grid, colors specified via TERRAINGRID_SET_COLOURS.
     *
     * Example with box superimposed on the image to demonstrate: https://i.imgur.com/wdqskxd.jpg
     *
     * Hash: 0x1C4FC5752BCD8E48 | Since: 323
     */
    function terraingridSetParams(pos: Vector3, forwardX: number, forwardY: number, forwardZ: number, sizeX: number, sizeY: number, sizeZ: number, gridScale: number, glowIntensity: number, normalHeight: number, heightDiff: number): void;
    /**
     * This native is used along with these two natives: `TERRAINGRID_ACTIVATE` and `TERRAINGRID_SET_PARAMS`.
     * This native sets the colors for the golf putting grid. the 'min...' values are for the lower areas that the grid covers, the 'max...' values are for the higher areas that the grid covers, all remaining values are for the 'normal' ground height.
     * All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
     *
     * Hash: 0x5CE62918F8D703C7 | Since: 323
     */
    function terraingridSetColours(lowR: number, lowG: number, lowB: number, lowAlpha: number, r: number, g: number, b: number, alpha: number, highR: number, highG: number, highB: number, highAlpha: number): void;
    /**
     * duration - is how long to play the effect for in milliseconds. If 0, it plays the default length
     * if loop is true, the effect won't stop until you call ANIMPOSTFX_STOP on it. (only loopable effects)
     *
     * Full list of animpostFX / screen effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animPostFxNamesCompact.json
     *
     * Hash: 0x2206BF9A37B7F724 | Since: 323
     */
    function animpostfxPlay(effectName: string, duration: number, looped: boolean): void;
    /**
     * See ANIMPOSTFX_PLAY
     *
     * Full list of animpostFX / screen effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animPostFxNamesCompact.json
     *
     * Hash: 0x068E835A1D0DC0E3 | Since: 323
     */
    function animpostfxStop(effectName: string): void;
    /**
     * See ANIMPOSTFX_PLAY
     *
     * Full list of animpostFX / screen effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animPostFxNamesCompact.json
     *
     * Hash: 0xE35B38A27E8E7179 | Since: 877
     */
    function animpostfxGetCurrentTime(effectName: string): number;
    /**
     * Returns whether the specified effect is active.
     * See ANIMPOSTFX_PLAY
     *
     * Full list of animpostFX / screen effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animPostFxNamesCompact.json
     *
     * Hash: 0x36AD3E690DA5ACEB | Since: 323
     */
    function animpostfxIsRunning(effectName: string): boolean;
    /**
     * Stops ALL currently playing effects.
     *
     * Hash: 0xB4EDDC19532BFB85 | Since: 323
     */
    function animpostfxStopAll(): void;
    /**
     * Stops the effect and sets a value (bool) in its data (+0x199) to false.
     * See ANIMPOSTFX_PLAY
     *
     * Full list of animpostFX / screen effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animPostFxNamesCompact.json
     *
     * Hash: 0xD2209BE128B5418C | Since: 323
     */
    function animpostfxStopAndFlushRequests(effectName: string): void;
}
export declare namespace hud {
    /**
     * Initializes the text entry for the the text next to a loading prompt. All natives for building UI texts can be used here
     *
     *
     * e.g
     * void StartLoadingMessage(char *text, int spinnerType = 3)
     * {
     * BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("STRING");
     * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
     * END_TEXT_COMMAND_BUSYSPINNER_ON(spinnerType);
     * }
     * \/\*OR\*\/
     * void ShowLoadingMessage(char *text, int spinnerType = 3, int timeMs = 10000)
     * {
     * BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("STRING");
     * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
     * END_TEXT_COMMAND_BUSYSPINNER_ON(spinnerType);
     * WAIT(timeMs);
     * BUSYSPINNER_OFF();
     * }
     *
     *
     * These are some localized strings used in the loading spinner.
     * "PM_WAIT"                   = Please Wait
     * "CELEB_WPLYRS"              = Waiting For Players.
     * "CELL_SPINNER2"             = Scanning storage.
     * "ERROR_CHECKYACHTNAME" = Registering your yacht's name. Please wait.
     * "ERROR_CHECKPROFANITY"   = Checking your text for profanity. Please wait.
     * "FM_COR_AUTOD"                        = Just spinner no text
     * "FM_IHELP_WAT2"                        = Waiting for other players
     * "FM_JIP_WAITO"                            = Game options are being set
     * "FMMC_DOWNLOAD"                    = Downloading
     * "FMMC_PLYLOAD"                         = Loading
     * "FMMC_STARTTRAN"                    = Launching session
     * "HUD_QUITTING"                           =  Quiting session
     * "KILL_STRIP_IDM"                         = Waiting for to accept
     * "MP_SPINLOADING"                      = Loading
     *
     * Hash: 0xABA17D7CE615ADBF | Since: 323
     */
    function beginTextCommandBusyspinnerOn(_string: string): void;
    /**
     * enum eBusySpinnerType
     * {
     * BUSY_SPINNER_LEFT,
     * BUSY_SPINNER_LEFT_2,
     * BUSY_SPINNER_LEFT_3,
     * BUSY_SPINNER_SAVE,
     * BUSY_SPINNER_RIGHT,
     * };
     *
     * Hash: 0xBD12F8228410D9B4 | Since: 323
     */
    function endTextCommandBusyspinnerOn(busySpinnerType: number): void;
    /**
     * Removes the loading prompt at the bottom right of the screen.
     *
     * Hash: 0x10D373323E5B9C0D | Since: 323
     */
    function busyspinnerOff(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC65AB383CD91DF98 | Since: 323
     */
    function preloadBusyspinner(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD422FCC5F239A915 | Since: 323
     */
    function busyspinnerIsOn(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB2A592B04648A9CB | Since: 323
     */
    function busyspinnerIsDisplaying(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9245E81072704B8A | Since: 323
     */
    function disablePausemenuSpinner(): void;
    /**
     * Shows the cursor on screen for one frame.
     *
     * Hash: 0xAAE7CE1D63167423 | Since: 323
     */
    function setMouseCursorThisFrame(): void;
    /**
     * Changes the mouse cursor's sprite.
     * 1 = Normal
     * 6 = Left Arrow
     * 7 = Right Arrow
     *
     * Hash: 0x8DB8CFFD58B62552 | Since: 323
     */
    function setMouseCursorStyle(spriteId: number): void;
    /**
     * Shows/hides the frontend cursor on the pause menu or similar menus.
     * Clicking off and then on the game window will show it again.
     *
     * Hash: 0x98215325A695E78A | Since: 323
     */
    function setMouseCursorVisible(toggle: boolean): void;
    /**
     * Returns TRUE if mouse is hovering above instructional buttons. Works with all buttons gfx, such as popup_warning, pause_menu_instructional_buttons, instructional_buttons, etc. Note: You have to call TOGGLE_MOUSE_BUTTONS on the scaleform if you want this native to work.
     *
     * Hash: 0x3D9ACB1EB139E702 | Since: 323
     */
    function isMouseRolledOverInstructionalButtons(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x632B2940C67F4EA9 | Since: 323
     */
    function getMouseEvent(scaleformHandle: number): [boolean, any, any, any];
    /**
     * No comment provided
     *
     * Hash: 0x6F1554B0CC2089FA | Since: 323
     */
    function thefeedOnlyShowTooltips(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x55598D21339CB998 | Since: 323
     */
    function thefeedSetScriptedMenuHeight(pos: number): void;
    /**
     * Stops loading screen tips shown by invoking `THEFEED_SHOW`
     *
     * Hash: 0x32888337579A5970 | Since: 463
     */
    function thefeedHide(): void;
    /**
     * Once called each frame hides all above radar notifications.
     *
     * Hash: 0x25F87B30C382FCA7 | Since: 323
     */
    function thefeedHideThisFrame(): void;
    /**
     * Displays loading screen tips, requires `THEFEED_AUTO_POST_GAMETIPS_ON` to be called beforehand.
     *
     * Hash: 0x15CFA549788D35EF | Since: 463
     */
    function thefeedShow(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA8FDB297A8D25FBA | Since: 323
     */
    function thefeedFlushQueue(): void;
    /**
     * Removes a notification instantly instead of waiting for it to disappear
     *
     * Hash: 0xBE4390CB40B3E627 | Since: 323
     */
    function thefeedRemoveItem(notificationId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA13C11E1B5C06BFC | Since: 323
     */
    function thefeedForceRenderOn(): void;
    /**
     * Enables loading screen tips to be be shown (`THEFEED_SHOW`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
     *
     * Hash: 0x583049884A2EEE3C | Since: 323
     */
    function thefeedForceRenderOff(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFDB423997FA30340 | Since: 323
     */
    function thefeedPause(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE1CD1E48E025E661 | Since: 323
     */
    function thefeedResume(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA9CBFD40B3FA3010 | Since: 323
     */
    function thefeedIsPaused(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD4438C0564490E63 | Since: 323
     */
    function thefeedReportLogoOn(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB695E2CD0A2DA9EE | Since: 323
     */
    function thefeedReportLogoOff(): void;
    /**
     * Returns the handle for the notification currently displayed on the screen. Name may be a hash collision, but describes the function accurately.
     *
     * Hash: 0x82352748437638CA | Since: 323
     */
    function thefeedGetLastShownPhoneActivatableFeedId(): number;
    /**
     * Enables loading screen tips to be be shown (`THEFEED_SHOW`), blocks other kinds of notifications from being displayed (at least from current script). Call `THEFEED_AUTO_POST_GAMETIPS_OFF` to display those again.
     *
     * Hash: 0x56C8B608CFD49854 | Since: 323
     */
    function thefeedAutoPostGametipsOn(): void;
    /**
     * Displays "normal" notifications again after calling `THEFEED_AUTO_POST_GAMETIPS_ON` (those that were drawn before calling this native too), though those will have a weird offset and stay on screen forever (tested with notifications created from same script).
     *
     * Hash: 0xADED7F5748ACAFE6 | Since: 323
     */
    function thefeedAutoPostGametipsOff(): void;
    /**
     * From the decompiled scripts:
     * `HUD::THEFEED_SET_BACKGROUND_COLOR_FOR_NEXT_POST(6);`
     * `HUD::THEFEED_SET_BACKGROUND_COLOR_FOR_NEXT_POST(184);`
     * `HUD::THEFEED_SET_BACKGROUND_COLOR_FOR_NEXT_POST(190);`
     *
     * sets background color for the next notification
     * 6 = red
     * 184 = green
     * 190 = yellow
     *
     * Here is a list of some colors that can be used: https://gyazo.com/68bd384455fceb0a85a8729e48216e15
     *
     * Hash: 0x92F0DA1E27DB96DC | Since: 323
     */
    function thefeedSetBackgroundColorForNextPost(hudColorIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x17430B918701C342 | Since: 323
     */
    function thefeedSetRgbaParameterForNextMessage(red: number, green: number, blue: number, alpha: number): void;
    /**
     * Related to notification color flashing, setting count to 0 invalidates a `THEFEED_SET_RGBA_PARAMETER_FOR_NEXT_MESSAGE` call for the target notification.
     *
     * Hash: 0x17AD8C9706BDD88A | Since: 323
     */
    function thefeedSetFlashDurationParameterForNextMessage(count: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4A0C7C9BB10ABB36 | Since: 323
     */
    function thefeedSetVibrateParameterForNextMessage(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xFDD85225B2DEA55E | Since: 323
     */
    function thefeedResetAllParameters(): void;
    /**
     * Requires manual management of game stream handles (i.e., 0xBE4390CB40B3E627).
     *
     * Hash: 0xFDEC055AB549E328 | Since: 323
     */
    function thefeedFreezeNextPost(): void;
    /**
     * No comment provided
     *
     * Hash: 0x80FE4F3AB4E1B62A | Since: 323
     */
    function thefeedClearFrozenPost(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBAE4F9B97CD43B30 | Since: 323
     */
    function thefeedSetSnapFeedItemPositions(): void;
    /**
     * Used in the native scripts to reference "GET_PEDHEADSHOT_TXD_STRING" and "CHAR_DEFAULT".
     *
     * Hash: 0x317EBA71D7543F52 | Since: 323
     */
    function thefeedUpdateItemTexture(txdString1: string, txnString1: string, txdString2: string, txnString2: string): void;
    /**
     * Declares the entry type of a notification, for example "STRING".
     *
     * int ShowNotification(char *text)
     * {
     * BEGIN_TEXT_COMMAND_THEFEED_POST("STRING");
     * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
     * return END_TEXT_COMMAND_THEFEED_POST_TICKER(1, 1);
     * }
     *
     * Hash: 0x202709F4C58A0424 | Since: 323
     */
    function beginTextCommandThefeedPost(text: string): void;
    /**
     * List of picture names: https://pastebin.com/XdpJVbHz
     * Example result: https://i.imgur.com/SdEZ22m.png
     *
     * Hash: 0x2B7E9A4EAAA93C89 | Since: 323
     */
    function endTextCommandThefeedPostStats(statTitle: string, iconEnum: number, stepVal: boolean, barValue: number, isImportant: boolean, pictureTextureDict: string, pictureTextureName: string): number;
    /**
     * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
     *
     * List of picNames: https://pastebin.com/XdpJVbHz
     *
     *
     * flash is a bool for fading in.
     * iconTypes:
     * 1 : Chat Box
     * 2 : Email
     * 3 : Add Friend Request
     * 4 : Nothing
     * 5 : Nothing
     * 6 : Nothing
     * 7 : Right Jumping Arrow
     * 8 : RP Icon
     * 9 : $ Icon
     *
     * "sender" is the very top header. This can be any old string.
     * "subject" is the header under the sender.
     *
     * Hash: 0x1CCD9A37359072CF | Since: 323
     */
    function endTextCommandThefeedPostMessagetext(txdName: string, textureName: string, flash: boolean, iconType: number, sender: string, subject: string): number;
    /**
     * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
     *
     * Needs more research.
     *
     * Only one type of usage in the scripts:
     *
     * `HUD::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_SUBTITLE_LABEL("CHAR_ACTING_UP", "CHAR_ACTING_UP", 0, 0, "DI_FEED_CHAR", a_0);`
     *
     * Hash: 0xC6F580E4C94926AC | Since: 323
     */
    function endTextCommandThefeedPostMessagetextSubtitleLabel(txdName: string, textureName: string, flash: boolean, iconType: number, sender: string, subject: string): number;
    /**
     * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
     *
     * NOTE: 'duration' is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
     *
     * Example, only occurrence in the scripts:
     * `v_8 = HUD::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 0, 0, &v_9, "", a_5);`
     *
     * Hash: 0x1E6611149DB3DB6B | Since: 323
     */
    function endTextCommandThefeedPostMessagetextTu(txdName: string, textureName: string, flash: boolean, iconType: number, sender: string, subject: string, duration: number): number;
    /**
     * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
     *
     * List of picNames https://pastebin.com/XdpJVbHz
     *
     * flash is a bool for fading in.
     * iconTypes:
     * 1 : Chat Box
     * 2 : Email
     * 3 : Add Friend Request
     * 4 : Nothing
     * 5 : Nothing
     * 6 : Nothing
     * 7 : Right Jumping Arrow
     * 8 : RP Icon
     * 9 : $ Icon
     *
     * "sender" is the very top header. This can be any old string.
     * "subject" is the header under the sender.
     * "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
     * "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
     *
     * Hash: 0x5CBF7BADE20DB93E | Since: 323
     */
    function endTextCommandThefeedPostMessagetextWithCrewTag(txdName: string, textureName: string, flash: boolean, iconType: number, sender: string, subject: string, duration: number, clanTag: string): number;
    /**
     * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
     *
     * List of picNames:  https://pastebin.com/XdpJVbHz
     *
     * flash is a bool for fading in.
     * iconTypes:
     * 1 : Chat Box
     * 2 : Email
     * 3 : Add Friend Request
     * 4 : Nothing
     * 5 : Nothing
     * 6 : Nothing
     * 7 : Right Jumping Arrow
     * 8 : RP Icon
     * 9 : $ Icon
     *
     * "sender" is the very top header. This can be any old string.
     * "subject" is the header under the sender.
     * "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
     * "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
     * iconType2 is a mirror of iconType. It shows in the "subject" line, right under the original iconType.
     *
     *
     * int IconNotification(char *text, char *text2, char *Subject)
     * {
     * BEGIN_TEXT_COMMAND_THEFEED_POST("STRING");
     * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
     * _SET_NOTIFICATION_MESSAGE_CLAN_TAG_2("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 1, 7, text2, Subject, 1.0f, "__EXAMPLE", 7);
     * return END_TEXT_COMMAND_THEFEED_POST_TICKER(1, 1);
     * }
     *
     * Hash: 0x531B84E7DA981FB6 | Since: 323
     */
    function endTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon(txdName: string, textureName: string, flash: boolean, iconType1: number, sender: string, subject: string, duration: number, clanTag: string, iconType2: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x2ED7843F8F801023 | Since: 323
     */
    function endTextCommandThefeedPostTicker(blink: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x44FA03975424A0EE | Since: 323
     */
    function endTextCommandThefeedPostTickerForced(blink: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x378E809BF61EC840 | Since: 323
     */
    function endTextCommandThefeedPostTickerWithTokens(blink: boolean): number;
    /**
     * Shows an "award" notification above the minimap, example: https://i.imgur.com/e2DNaKX.png
     * Example:
     *
     * `HUD::BEGIN_TEXT_COMMAND_THEFEED_POST("HUNT");`
     * `HUD::END_TEXT_COMMAND_THEFEED_POST_AWARD("Hunting", "Hunting_Gold_128", 0, 109, "HUD_MED_UNLKED");`
     *
     * Hash: 0xAA295B6F28BD587D | Since: 323
     */
    function endTextCommandThefeedPostAward(textureDict: string, textureName: string, rpBonus: number, colorOverlay: number, titleLabel: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x97C9E4E7024A8F2C | Since: 323
     */
    function endTextCommandThefeedPostCrewtag(isLeader: boolean, unk0: boolean, clanDesc: number, R: number, G: number, B: number): [number, number];
    /**
     * No comment provided
     *
     * Hash: 0x137BC35589E34E1E | Since: 323
     */
    function endTextCommandThefeedPostCrewtagWithGameName(isLeader: boolean, unk0: boolean, clanDesc: number, playerName: string, R: number, G: number, B: number): [number, number];
    /**
     * No comment provided
     *
     * Hash: 0x33EE12743CCD6343 | Since: 323
     */
    function endTextCommandThefeedPostUnlock(gxtLabel1: string, gxtLabel2: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xC8F3AAF93D0600BF | Since: 323
     */
    function endTextCommandThefeedPostUnlockTu(gxtLabel1: string, gxtLabel2: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x7AE0589093A2E088 | Since: 323
     */
    function endTextCommandThefeedPostUnlockTuWithColor(): number;
    /**
     * No comment provided
     *
     * Hash: 0xF020C96915705B3A | Since: 323
     */
    function endTextCommandThefeedPostMpticker(blink: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x8EFCCF6EC66D85E4 | Since: 323
     */
    function endTextCommandThefeedPostCrewRankupWithLiteralFlag(): number;
    /**
     * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
     *
     * List of picNames: https://pastebin.com/XdpJVbHz
     * HUD colors and their values: https://pastebin.com/d9aHPbXN
     *
     * Shows a deathmatch score above the minimap, example: https://i.imgur.com/YmoMklG.png
     *
     * Hash: 0xB6871B0555B02996 | Since: 323
     */
    function endTextCommandThefeedPostVersusTu(txdName1: string, textureName1: string, count1: number, txdName2: string, textureName2: string, count2: number, hudColor1: number, hudColor2: number): number;
    /**
     * returns a notification handle, prints out a notification like below:
     * type range: 0 - 2
     * if you set type to 1, image goes from 0 - 39 - Xbox you can add text to
     *
     * example:
     * `HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1, 20, "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");`
     * - https://imgur.com/lGBPCz3
     *
     * Hash: 0xD202B92CBF1D816F | Since: 323
     */
    function endTextCommandThefeedPostReplay(_type: number, image: number, text: string): number;
    /**
     * returns a notification handle, prints out a notification like below:
     * type range: 0 - 2
     * if you set type to 1, button accepts "~INPUT_SOMETHING~"
     *
     * example:
     * `HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1, "~INPUT_TALK~", "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");`
     * - https://imgur.com/UPy0Ial
     *
     *
     * Examples from the scripts:
     * `l_D1[1\/\*1\*\/]=HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");`
     * `l_D1[2\/\*1\*\/]=HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1,"~INPUT_SAVE_REPLAY_CLIP~","");`
     * `l_D1[1\/\*1\*\/]=HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");`
     * `l_D1[2\/\*1\*\/]=HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1,"~INPUT_REPLAY_START_STOP_RECORDING_SECONDARY~","");`
     *
     *
     * Hash: 0xDD6CB2CCE7C2735C | Since: 323
     */
    function endTextCommandThefeedPostReplayInput(_type: number, button: string, text: string): number;
    /**
     * void ShowSubtitle(const char *text)
     * {
     * BEGIN_TEXT_COMMAND_PRINT("STRING");
     * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
     * END_TEXT_COMMAND_PRINT(2000, true);
     * }
     *
     * Hash: 0xB87A37EEB7FAA67D | Since: 323
     */
    function beginTextCommandPrint(GxtEntry: string): void;
    /**
     * Draws the subtitle at middle center of the screen.
     *
     * int duration = time in milliseconds to show text on screen before disappearing
     *
     * drawImmediately = If true, the text will be drawn immediately, if false, the text will be drawn after the previous subtitle has finished
     *
     * Used to be known as _DRAW_SUBTITLE_TIMED
     *
     * Hash: 0x9D77056A530643F6 | Since: 323
     */
    function endTextCommandPrint(duration: number, drawImmediately: boolean): void;
    /**
     * nothin doin.
     *
     * BOOL Message(const char* text)
     * {
     * BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED("STRING");
     * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
     * return END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED();
     * }
     *
     * Hash: 0x853648FD1063A213 | Since: 323
     */
    function beginTextCommandIsMessageDisplayed(text: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x8A9BA1AB3E237613 | Since: 323
     */
    function endTextCommandIsMessageDisplayed(): boolean;
    /**
     * The following were found in the decompiled script files:
     * STRING, TWOSTRINGS, NUMBER, PERCENTAGE, FO_TWO_NUM, ESMINDOLLA, ESDOLLA, MTPHPER_XPNO, AHD_DIST, CMOD_STAT_0, CMOD_STAT_1, CMOD_STAT_2, CMOD_STAT_3, DFLT_MNU_OPT, F3A_TRAFDEST, ES_HELP_SOC3
     *
     * ESDOLLA - cash
     * ESMINDOLLA - cash (negative)
     *
     * Used to be known as _SET_TEXT_ENTRY
     *
     * Hash: 0x25FBB336DF1804CB | Since: 323
     */
    function beginTextCommandDisplayText(text: string): void;
    /**
     * `After applying the properties to the text (See HUD::SET_TEXT_), this will draw the text in the applied position. Also 0.0f < x, y < 1.0f, percentage of the axis.`
     *
     * Used to be known as _DRAW_TEXT
     *
     * Hash: 0xCD015E5BB0D96A57 | Since: 323
     */
    function endTextCommandDisplayText(x: number, y: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x54CE8AC98E120CAB | Since: 323
     */
    function beginTextCommandGetScreenWidthOfDisplayText(text: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x85F061DA64ED2F67 | Since: 323
     */
    function endTextCommandGetScreenWidthOfDisplayText(): number;
    /**
     * int GetLineCount(char *text, float x, float y)
     * {
     * BEGIN_TEXT_COMMAND_GET_NUMBER_OF_LINES_FOR_STRING("STRING");
     * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
     * return BEGIN_TEXT_COMMAND_GET_NUMBER_OF_LINES_FOR_STRING(x, y);
     * }
     *
     * Hash: 0x521FB041D93DD0E4 | Since: 323
     */
    function beginTextCommandGetNumberOfLinesForString(entry: string): void;
    /**
     * Determines how many lines the text string will use when drawn on screen.
     * Must use 0x521FB041D93DD0E4 for setting up
     *
     * Hash: 0x9040DFB09BE75706 | Since: 323
     */
    function endTextCommandGetNumberOfLinesForString(x: number, y: number): number;
    /**
     * Used to be known as _SET_TEXT_COMPONENT_FORMAT
     *
     * Hash: 0x8509B634FBE7DA11 | Since: 323
     */
    function beginTextCommandDisplayHelp(inputType: string): void;
    /**
     * shape goes from -1 to 50 (may be more).
     * p0 is always 0.
     *
     * Example:
     * void FloatingHelpText(const char* text)
     * {
     * BEGIN_TEXT_COMMAND_DISPLAY_HELP("STRING");
     * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
     * END_TEXT_COMMAND_DISPLAY_HELP (0, 0, 1, -1);
     * }
     *
     * Image:
     * - imgbin.org/images/26209.jpg
     *
     * more inputs/icons:
     * - https://pastebin.com/nqNYWMSB
     *
     * Used to be known as _DISPLAY_HELP_TEXT_FROM_STRING_LABEL
     *
     * Hash: 0x238FFE5C7B0498A6 | Since: 323
     */
    function endTextCommandDisplayHelp(loop: boolean, beep: boolean, shape: number): void;
    /**
     * BOOL IsContextActive(char *ctx)
     * {
     * BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(ctx);
     * return END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(0);
     * }
     *
     * Hash: 0x0A24DA3A41B718F5 | Since: 323
     */
    function beginTextCommandIsThisHelpMessageBeingDisplayed(labelName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x10BDDBFC529428DD | Since: 323
     */
    function endTextCommandIsThisHelpMessageBeingDisplayed(): boolean;
    /**
     * Starts a text command to change the name of a blip displayed in the pause menu.
     * This should be paired with `END_TEXT_COMMAND_SET_BLIP_NAME`, once adding all required text components.
     * Example:
     *
     * `HUD::BEGIN_TEXT_COMMAND_SET_BLIP_NAME("STRING");`
     * `HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME("Name");`
     * `HUD::END_TEXT_COMMAND_SET_BLIP_NAME(blip);`
     *
     * Hash: 0xF9113A30DE5C6670 | Since: 323
     */
    function beginTextCommandSetBlipName(textLabel: string): void;
    /**
     * Finalizes a text command started with BEGIN_TEXT_COMMAND_SET_BLIP_NAME, setting the name of the specified blip.
     *
     * Hash: 0xBC38B49BCB83BC9B | Since: 323
     */
    function endTextCommandSetBlipName(blip: number | Blip): void;
    /**
     * No comment provided
     *
     * Hash: 0x23D69E0465570028 | Since: 323
     */
    function beginTextCommandAddDirectlyToPreviousBriefs(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCFDBDF5AE59BA0F4 | Since: 323
     */
    function endTextCommandAddDirectlyToPreviousBriefs(): void;
    /**
     * clears a print text command with this text
     *
     * Hash: 0xE124FA80A759019C | Since: 323
     */
    function beginTextCommandClearPrint(text: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xFCC75460ABA29378 | Since: 323
     */
    function endTextCommandClearPrint(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8F9EE5687F8EECCD | Since: 323
     */
    function beginTextCommandOverrideButtonText(gxtEntry: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xA86911979638106F | Since: 323
     */
    function endTextCommandOverrideButtonText(): void;
    /**
     * No comment provided
     *
     * Hash: 0x03B504CF259931BC | Since: 323
     */
    function addTextComponentInteger(value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE7DCB5B874BCD96E | Since: 323
     */
    function addTextComponentFloat(value: number, decimalPlaces: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC63CD5D2920ACBE7 | Since: 323
     */
    function addTextComponentSubstringTextLabel(labelName: string): void;
    /**
     * It adds the localized text of the specified GXT entry name. Eg. if the argument is GET_HASH_KEY("ES_HELP"), adds "Continue". Just uses a text labels hash key
     *
     * Hash: 0x17299B63C7683A2B | Since: 323
     */
    function addTextComponentSubstringTextLabelHashKey(gxtEntryHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x80EAD8E2E1D5D52E | Since: 323
     */
    function addTextComponentSubstringBlipName(blip: number | Blip): void;
    /**
     * No comment provided
     *
     * Hash: 0x6C188BE134E074AA | Since: 323
     */
    function addTextComponentSubstringPlayerName(text: string): void;
    /**
     * Adds a timer (e.g. "00:00:00:000"). The appearance of the timer depends on the flags, which needs more research.
     *
     * Hash: 0x1115F16B8AB9E8BF | Since: 323
     */
    function addTextComponentSubstringTime(timestamp: number, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0E4C749FF9DE9CC4 | Since: 323
     */
    function addTextComponentFormattedInteger(value: number, commaSeparated: boolean): void;
    /**
     * p1 was always -1
     *
     * Hash: 0x761B77454205A61D | Since: 323
     */
    function addTextComponentSubstringPhoneNumber(): void;
    /**
     * This native (along with ADD_TEXT_COMPONENT_SUBSTRING_KEYBOARD_DISPLAY and ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME) do not actually filter anything. They simply add the provided text (as of 944)
     *
     * Hash: 0x94CF4AC034C9C986 | Since: 323
     */
    function addTextComponentSubstringWebsite(website: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5F68520888E69014 | Since: 323
     */
    function addTextComponentSubstringKeyboardDisplay(_string: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x39BBF623FC803EAC | Since: 323
     */
    function setColourOfNextTextComponent(hudColor: number): void;
    /**
     * Returns a substring of a specified length starting at a specified position.
     *
     * Example:
     * // Get "STRING" text from "MY_STRING"
     * `subStr = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME("MY_STRING", 3, 6);`
     *
     * Hash: 0x169BD9382084C8C0 | Since: 323
     */
    function getCharacterFromAudioConversationFilename(text: string, position: number, length: number): string;
    /**
     * Returns a substring of a specified length starting at a specified position. The result is guaranteed not to exceed the specified max length.
     *
     * NOTE: The 'maxLength' parameter might actually be the size of the buffer that is returned. More research is needed. -CL69
     *
     * Example:
     * // Condensed example of how Rockstar uses this function
     * `strLen = HUD::GET_LENGTH_OF_LITERAL_STRING(MISC::GET_ONSCREEN_KEYBOARD_RESULT());`
     * `subStr = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_WITH_BYTE_LIMIT(MISC::GET_ONSCREEN_KEYBOARD_RESULT(), 0, strLen, 63);`
     *
     * --
     *
     * "fm_race_creator.ysc", line 85115:
     * // parameters modified for clarity
     * BOOL sub_8e5aa(char *text, int length) {
     * for (i = 0; i <= (length - 2); i += 1) {
     * `if (!MISC::ARE_STRINGS_EQUAL(HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_WITH_BYTE_LIMIT(text, i, i + 1, 1), " ")) {`
     * return FALSE;
     * }
     * }
     * return TRUE;
     * }
     *
     * Hash: 0xB2798643312205C5 | Since: 323
     */
    function getCharacterFromAudioConversationFilenameWithByteLimit(text: string, position: number, length: number, maxLength: number): string;
    /**
     * Returns a substring that is between two specified positions. The length of the string will be calculated using (endPosition - startPosition).
     *
     * Example:
     * // Get "STRING" text from "MY_STRING"
     * `subStr = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_BYTES("MY_STRING", 3, 9);`
     * // Overflows are possibly replaced with underscores (needs verification)
     * `subStr = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_BYTES("MY_STRING", 3, 10); // "STRING_"?`
     *
     * Hash: 0xCE94AEBA5D82908A | Since: 323
     */
    function getCharacterFromAudioConversationFilenameBytes(text: string, startPosition: number, endPosition: number): string;
    /**
     * `Gets a localized string literal from a label name. Can be used for output of e.g. VEHICLE::GET_LIVERY_NAME. To check if a GXT label can be localized with this, HUD::DOES_TEXT_LABEL_EXIST can be used.`
     *
     * Hash: 0x7B5280EBA9840C72 | Since: 323
     */
    function getFilenameForAudioConversation(labelName: string): string;
    /**
     * No comment provided
     *
     * Hash: 0xCC33FA791322B9D9 | Since: 323
     */
    function clearPrints(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D292F73ADBD9313 | Since: 323
     */
    function clearBrief(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6178F68A87A4D3A0 | Since: 323
     */
    function clearAllHelpMessages(): void;
    /**
     * p0: found arguments in the b617d scripts: https://pastebin.com/X5akCN7z
     *
     * Hash: 0xCF708001E1E536DD | Since: 323
     */
    function clearThisPrint(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2CEA2839313C09AC | Since: 323
     */
    function clearSmallPrints(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1C7302E725259789 | Since: 323
     */
    function doesTextBlockExist(gxt: string): boolean;
    /**
     * Request a gxt into the passed slot.
     *
     * Hash: 0x71A78003C8E71424 | Since: 323
     */
    function requestAdditionalText(gxt: string, slot: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6009F9F1AE90D8A6 | Since: 323
     */
    function requestAdditionalTextForDlc(gxt: string, slot: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x02245FE4BED318B8 | Since: 323
     */
    function hasAdditionalTextLoaded(slot: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2A179DF17CCF04CD | Since: 323
     */
    function clearAdditionalText(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8B6817B71B85EBF0 | Since: 323
     */
    function isStreamingAdditionalText(): boolean;
    /**
     * Checks if the specified gxt has loaded into the passed slot.
     *
     * Hash: 0xADBF060E2B30C5BC | Since: 323
     */
    function hasThisAdditionalTextLoaded(gxt: string, slot: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7984C03AA5CC2F41 | Since: 323
     */
    function isMessageBeingDisplayed(): boolean;
    /**
     * Checks if the passed gxt name exists in the game files.
     *
     * Hash: 0xAC09CA973C564252 | Since: 323
     */
    function doesTextLabelExist(gxt: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x98C3CF913D895111 | Since: 505
     */
    function getFirstNCharactersOfLiteralString(_string: string, length: number): string;
    /**
     * Returns the string length of the string from the gxt string .
     *
     * Hash: 0x801BD273D3A23F74 | Since: 323
     */
    function getLengthOfStringWithThisTextLabel(gxt: string): number;
    /**
     * Returns the length of the string passed (much like strlen).
     *
     * Hash: 0xF030907CCBB8A9FD | Since: 323
     */
    function getLengthOfLiteralString(_string: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x43E4111189E54F0E | Since: 323
     */
    function getLengthOfLiteralStringInBytes(_string: string): number;
    /**
     * This functions converts the hash of a street name into a readable string.
     *
     * `For how to get the hashes, see PATHFIND::GET_STREET_NAME_AT_COORD.`
     *
     * Hash: 0xD0EF8A959B8A4CB9 | Since: 323
     */
    function getStreetNameFromHashKey(hash: number | string): string;
    /**
     * No comment provided
     *
     * Hash: 0x1930DFA731813EC4 | Since: 323
     */
    function isPreferenceSwitchedOn(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9EB6522EA68F22FE | Since: 323
     */
    function isRadarPreferenceSwitchedOn(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAD6DACA4BA53E0A4 | Since: 323
     */
    function isSubtitlePreferenceSwitchedOn(): boolean;
    /**
     * If Hud should be displayed
     *
     * Hash: 0xA6294919E56FF02A | Since: 323
     */
    function display(toggle: boolean): void;
    /**
     * Enables drawing some hud components, such as help labels, this frame, when the player is dead.
     *
     * Hash: 0x7669F9E39DC17063 | Since: 323
     */
    function displayWhenNotInStateOfPlayThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x402F9ED62087E898 | Since: 323
     */
    function displayWhenPausedThisFrame(): void;
    /**
     * If Minimap / Radar should be displayed.
     *
     * Hash: 0xA0EBB943C300E693 | Since: 323
     */
    function displayRadar(toggle: boolean): void;
    /**
     * Setter for GET_FAKE_SPECTATOR_MODE
     *
     * Hash: 0xCD74233600C4EA6B | Since: 505
     */
    function setFakeSpectatorMode(toggle: boolean): void;
    /**
     * Getter for SET_FAKE_SPECTATOR_MODE
     *
     * Hash: 0xC2D2AD9EAAE265B8 | Since: 505
     */
    function getFakeSpectatorMode(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA86478C6958735C5 | Since: 323
     */
    function isHidden(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x157F93B036700462 | Since: 323
     */
    function isRadarHidden(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAF754F20EB5CD51A | Since: 323
     */
    function isMinimapRendering(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0C698D8F099174C7 | Since: 1180
     */
    function useVehicleTargetingReticule(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1BC0EA2912708625 | Since: 3095
     */
    function useVehicleTargetingReticuleOnVehicles(enable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE4C3B169876D33D7 | Since: 1290
     */
    function addValidVehicleHitHash(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEB81A3DADD503187 | Since: 1290
     */
    function clearValidVehicleHitHashes(): void;
    /**
     * Enable / disable showing route for the Blip-object.
     *
     * Hash: 0x4F7D8A9BFB0B43E9 | Since: 323
     */
    function setBlipRoute(blip: number | Blip, enabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD12882D3FF82BF11 | Since: 877
     */
    function clearAllBlipRoutes(): void;
    /**
     * No comment provided
     *
     * Hash: 0x837155CD2F63DA09 | Since: 323
     */
    function setBlipRouteColour(blip: number | Blip, colour: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2790F4B17D098E26 | Since: 573
     */
    function setForceShowGps(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6CDD58146A436083 | Since: 573
     */
    function setUseSetDestinationInPauseMap(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1942374085C8469 | Since: 505
     */
    function setBlockWantedFlash(disabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x60296AF4BA14ABC5 | Since: 323
     */
    function addNextMessageToPreviousBriefs(): void;
    /**
     * No comment provided
     *
     * Hash: 0x57D760D55F54E071 | Since: 323
     */
    function forceNextMessageToPreviousBriefsList(): void;
    /**
     * zoom ranges from 0 to 90f in R* Scripts
     *
     * Hash: 0xBD12C5EEE184C337 | Since: 323
     */
    function setRadarZoomPrecise(zoom: number): void;
    /**
     * zoomLevel ranges from 0 to 1400 in R* Scripts
     *
     * Hash: 0x096EF57A0C999BBA | Since: 323
     */
    function setRadarZoom(zoomLevel: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF98E4B3E56AFC7B1 | Since: 323
     */
    function setRadarZoomToBlip(blip: number | Blip, zoom: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCB7CC0D58405AD41 | Since: 323
     */
    function setRadarZoomToDistance(zoom: number): void;
    /**
     * Does nothing (it's a nullsub).
     *
     * Hash: 0xD2049635DEB9C375 | Since: 323
     */
    function updateRadarZoomToBlip(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7C9C91AB74A0360F | Since: 323
     */
    function getColour(hudColorIndex: number): [number, number, number, number];
    /**
     * Sets the color of HUD_COLOUR_SCRIPT_VARIABLE
     *
     * Hash: 0xD68A5FF8A3A89874 | Since: 323
     */
    function setScriptVariableColour(r: number, g: number, b: number, a: number): void;
    /**
     * Sets the color of HUD_COLOUR_SCRIPT_VARIABLE_2
     *
     * Hash: 0x16A304E6CB2BFAB9 | Since: 323
     */
    function setSecondScriptVariableColour(r: number, g: number, b: number, a: number): void;
    /**
     * makes hudColorIndex2 color into hudColorIndex color
     *
     * Hash: 0x1CCC708F0F850613 | Since: 323
     */
    function replaceColour(hudColorIndex: number, hudColorIndex2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF314CF4F0211894E | Since: 323
     */
    function replaceColourWithRgba(hudColorIndex: number, r: number, g: number, b: number, a: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1DFEDD15019315A9 | Since: 1493
     */
    function setAbilityBarVisibility(visible: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x889329C80FE5963C | Since: 1868
     */
    function setAllowAbilityBar(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x02CFBA0C9E9275CE | Since: 323
     */
    function flashAbilityBar(millisecondsToFlash: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9969599CCFF5D85E | Since: 323
     */
    function setAbilityBarValue(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA18AFB39081B6A1F | Since: 323
     */
    function flashWantedDisplay(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBA8D65C1C65702E5 | Since: 323
     */
    function forceOffWantedStarFlash(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2ACCB195F3CCD9DE | Since: 2545
     */
    function setCustomMpColor(hudColorId: number): void;
    /**
     * This gets the height of the FONT and not the total text. You need to get the number of lines your text uses, and get the height of a newline (I'm using a smaller value) to get the total text height.
     *
     * Hash: 0xDB88A37483346780 | Since: 323
     */
    function getRenderedCharacterHeight(size: number, font: number): number;
    /**
     * Size range : 0F to 1.0F
     * p0 is unknown and doesn't seem to have an effect, yet in the game scripts it changes to 1.0F sometimes.
     *
     * Hash: 0x07C837F9A01C34C9 | Since: 323
     */
    function setTextScale(scale: number, size: number): void;
    /**
     * colors you input not same as you think?
     * A: for some reason its R B G A
     *
     * Hash: 0xBE6B23FFA53FB442 | Since: 323
     */
    function setTextColour(red: number, green: number, blue: number, alpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC02F4DBFB51D988B | Since: 323
     */
    function setTextCentre(align: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B3C4650BC8BEE47 | Since: 323
     */
    function setTextRightJustify(toggle: boolean): void;
    /**
     * Types -
     * 0: Center-Justify
     * 1: Left-Justify
     * 2: Right-Justify
     *
     * Right-Justify requires SET_TEXT_WRAP, otherwise it will draw to the far right of the screen
     *
     * Hash: 0x4E096588B13FFECA | Since: 323
     */
    function setTextJustification(justifyType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9F4624F76E6953D1 | Since: 3095
     */
    function setTextLineHeightMult(lineHeightMult: number): void;
    /**
     * It sets the text in a specified box and wraps the text if it exceeds the boundries. Both values are for X axis. Useful when positioning text set to center or aligned to the right.
     *
     * start - left boundry on screen position (0.0 - 1.0)
     * end - right boundry on screen position (0.0 - 1.0)
     *
     * Hash: 0x63145D9C883A1A70 | Since: 323
     */
    function setTextWrap(start: number, end: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA50ABC31E3CDFAFF | Since: 323
     */
    function setTextLeading(): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0x038C1F517D7FDCF8 | Since: 323
     */
    function setTextProportional(): void;
    /**
     * fonts that mess up your text where made for number values/misc stuff
     *
     * Hash: 0x66E0276CC5F6B9DA | Since: 323
     */
    function setTextFont(fontType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1CA3E9EAC9D93E5E | Since: 323
     */
    function setTextDropShadow(): void;
    /**
     * distance - shadow distance in pixels, both horizontal and vertical
     * r, g, b, a - color
     *
     * Hash: 0x465C84BC39F1C351 | Since: 323
     */
    function setTextDropshadow(distance: number, r: number, g: number, b: number, a: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2513DFB0FB8400FE | Since: 323
     */
    function setTextOutline(): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0x441603240D202FA6 | Since: 323
     */
    function setTextEdge(r: number, g: number, b: number, a: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5F15302936E07111 | Since: 323
     */
    function setTextRenderId(renderId: number): void;
    /**
     * This function is hard-coded to always return 1.
     *
     * Hash: 0x52F0982D7FD156B6 | Since: 323
     */
    function getDefaultScriptRendertargetRenderId(): number;
    /**
     * No comment provided
     *
     * Hash: 0x57D9C12635E25CE3 | Since: 323
     */
    function registerNamedRendertarget(name: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x78DCDC15C9F116B4 | Since: 323
     */
    function isNamedRendertargetRegistered(name: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE9F6FFE837354DD4 | Since: 323
     */
    function releaseNamedRendertarget(name: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF6C09E276AEB3F2D | Since: 323
     */
    function linkNamedRendertarget(modelHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x1A6478B61C6BDC3B | Since: 323
     */
    function getNamedRendertargetRenderId(name: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x113750538FA31298 | Since: 323
     */
    function isNamedRendertargetLinked(modelHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8DFCED7A656F8802 | Since: 323
     */
    function clearHelp(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDAD37F45428801AE | Since: 323
     */
    function isHelpMessageOnScreen(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x214CD562A939246A | Since: 323
     */
    function hasScriptHiddenHelpThisFrame(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4D79439A6B55AC67 | Since: 323
     */
    function isHelpMessageBeingDisplayed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x327EDEEEAC55C369 | Since: 323
     */
    function isHelpMessageFadingOut(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB9C362BABECDDC7A | Since: 463
     */
    function setHelpMessageStyle(style: number, hudColor: number, alpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4A9923385BDB9DAD | Since: 323
     */
    function getStandardBlipEnumId(): number;
    /**
     * No comment provided
     *
     * Hash: 0x186E5D252FA50E7D | Since: 323
     */
    function getWaypointBlipEnumId(): number;
    /**
     * No comment provided
     *
     * Hash: 0x9A3FF3DE163034E8 | Since: 323
     */
    function getNumberOfActiveBlips(): number;
    /**
     * No comment provided
     *
     * Hash: 0x14F96AA50D6FBEA7 | Since: 323
     */
    function getNextBlipInfoId(blipSprite: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x1BEDE233E6CD2A1F | Since: 323
     */
    function getFirstBlipInfoId(blipSprite: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xD484BF71050CA1EE | Since: 1180
     */
    function getClosestBlipInfoId(blipSprite: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xFA7C7F0AADF25D09 | Since: 323
     */
    function getBlipInfoIdCoord(blip: number | Blip): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x1E314167F701DC3B | Since: 323
     */
    function getBlipInfoIdDisplay(blip: number | Blip): number;
    /**
     * Returns a value based on what the blip is attached to
     * 1 - Vehicle
     * 2 - Ped
     * 3 - Object
     * 4 - Coord
     * 5 - unk
     * 6 - Pickup
     * 7 - Radius
     *
     * Hash: 0xBE9B0959FFD0779B | Since: 323
     */
    function getBlipInfoIdType(blip: number | Blip): number;
    /**
     * No comment provided
     *
     * Hash: 0x4BA4E2553AFEDC2C | Since: 323
     */
    function getBlipInfoIdEntityIndex(blip: number | Blip): number;
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0x9B6786E4C03DD382 | Since: 323
     */
    function getBlipInfoIdPickupIndex(blip: number | Blip): any;
    /**
     * Returns the Blip handle of given Entity.
     *
     * Hash: 0xBC8DBDCA2436F7E8 | Since: 323
     */
    function getBlipFromEntity(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x46818D79B1F7499A | Since: 323
     */
    function addBlipForRadius(pos: Vector3, radius: number): number;
    /**
     * Adds a rectangular blip for the specified coordinates/area.
     *
     * It is recommended to use SET_BLIP_ROTATION and SET_BLIP_COLOUR to make the blip not rotate along with the camera.
     *
     * By default, the blip will show as a _regular_ blip with the specified color/sprite if it is outside of the minimap view.
     *
     * Example image:
     * minimap https://w.wew.wtf/pdcjig.png
     * big map https://w.wew.wtf/zgcjcm.png
     *
     * (Native name is _likely_ to actually be ADD_BLIP_FOR_AREA, but due to the usual reasons this can't be confirmed)
     *
     * Hash: 0xCE5D0E5E315DB238 | Since: 463
     */
    function addBlipForArea(pos: Vector3, width: number, height: number): number;
    /**
     * Returns red ( default ) blip attached to entity.
     *
     * Example:
     * Blip blip; //Put this outside your case or option
     * `blip = HUD::ADD_BLIP_FOR_ENTITY(YourPedOrBodyguardName);`
     * `HUD::SET_BLIP_AS_FRIENDLY(blip, true);`
     *
     * Hash: 0x5CDE92C702A8FCE7 | Since: 323
     */
    function addBlipForEntity(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xBE339365C863BD36 | Since: 323
     */
    function addBlipForPickup(pickup: any): number;
    /**
     * Creates an orange ( default ) Blip-object. Returns a Blip-object which can then be modified.
     *
     * Hash: 0x5A039BB0BCA604B6 | Since: 323
     */
    function addBlipForCoord(pos: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0x72DD432F3CDFC0EE | Since: 323
     */
    function triggerSonarBlip(pos: Vector3, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x60734CC207C9833C | Since: 323
     */
    function allowSonarBlips(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xAE2AF67E9D9AF65D | Since: 323
     */
    function setBlipCoords(blip: number | Blip, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x586AFE3FF72D996E | Since: 323
     */
    function getBlipCoords(blip: number | Blip): Vector3;
    /**
     * Sets the displayed sprite for a specific blip..
     *
     * You may have your own list, but since dev-c didn't show it I was bored and started looking through scripts and functions to get a presumable almost positive list of a majority of blip IDs
     * https://pastebin.com/Bpj9Sfft
     *
     * Blips Images + IDs:
     * https://gtaxscripting.blogspot.com/2016/05/gta-v-blips-id-and-image.html
     *
     * Hash: 0xDF735600A4696DAF | Since: 323
     */
    function setBlipSprite(blip: number | Blip, spriteId: number): void;
    /**
     * Blips Images + IDs:
     * gtaxscripting.blogspot.com/2016/05/gta-v-blips-id-and-image.html
     *
     * Hash: 0x1FC877464A04FC4F | Since: 323
     */
    function getBlipSprite(blip: number | Blip): number;
    /**
     * No comment provided
     *
     * Hash: 0x9FCB3CBFB3EAD69A | Since: 1734
     */
    function setCopBlipSprite(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB7B873520C84C118 | Since: 1734
     */
    function setCopBlipSpriteAsStandard(): void;
    /**
     * Doesn't work if the label text of gxtEntry is >= 80.
     *
     * Hash: 0xEAA0FFE120D92784 | Since: 323
     */
    function setBlipNameFromTextFile(blip: number | Blip, gxtEntry: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x127DE7B20C60A6A3 | Since: 323
     */
    function setBlipNameToPlayerName(blip: number | Blip, player: number | string | Player): void;
    /**
     * Sets alpha-channel for blip color.
     *
     * Example:
     *
     * `Blip blip = HUD::ADD_BLIP_FOR_ENTITY(entity);`
     * `HUD::SET_BLIP_COLOUR(blip , 3);`
     * `HUD::SET_BLIP_ALPHA(blip , 64);`
     *
     *
     * Hash: 0x45FF974EEE1C8734 | Since: 323
     */
    function setBlipAlpha(blip: number | Blip, alpha: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x970F608F0EE6C885 | Since: 323
     */
    function getBlipAlpha(blip: number | Blip): number;
    /**
     * No comment provided
     *
     * Hash: 0x2AEE8F8390D2298C | Since: 323
     */
    function setBlipFade(blip: number | Blip, opacity: number, duration: number): void;
    /**
     * Returns -1, 0, +1, depending on if the blip is fading out, doing nothing, or fading in respectively.
     *
     * Hash: 0x2C173AE2BDB9385E | Since: 463
     */
    function getBlipFadeDirection(blip: number | Blip): number;
    /**
     * After some testing, looks like you need to use CEIL() on the rotation (vehicle/ped heading) before using it there.
     *
     * Hash: 0xF87683CDF73C3F6E | Since: 323
     */
    function setBlipRotation(blip: number | Blip, rotation: number): void;
    /**
     * Does not require whole number/integer rotations.
     *
     * Hash: 0xA8B6AFDAC320AC87 | Since: 877
     */
    function setBlipRotationWithFloat(blip: number | Blip, heading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x003E92BA477F9D7F | Since: 2060
     */
    function getBlipRotation(blip: number | Blip): number;
    /**
     * Adds up after viewing multiple R* scripts. I believe that the duration is in miliseconds.
     *
     * Hash: 0xD3CD6FD297AE87CC | Since: 323
     */
    function setBlipFlashTimer(blip: number | Blip, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAA51DB313C010A7E | Since: 323
     */
    function setBlipFlashInterval(blip: number | Blip): void;
    /**
     * https://gtaforums.com/topic/864881-all-blip-color-ids-pictured/
     *
     * Hash: 0x03D7FB09E75D6B7E | Since: 323
     */
    function setBlipColour(blip: number | Blip, color: number): void;
    /**
     * Can be used to give blips any RGB colour with SET_BLIP_COLOUR(blip, 84).
     *
     * Hash: 0x14892474891E09EB | Since: 323
     */
    function setBlipSecondaryColour(blip: number | Blip, r: number, g: number, b: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDF729E8D20CF7327 | Since: 323
     */
    function getBlipColour(blip: number | Blip): number;
    /**
     * No comment provided
     *
     * Hash: 0x729B5F1EFBC0AAEE | Since: 323
     */
    function getBlipHudColour(blip: number | Blip): number;
    /**
     * No comment provided
     *
     * Hash: 0xDA5F8727EB75B926 | Since: 323
     */
    function isBlipShortRange(blip: number | Blip): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE41CA53051197A27 | Since: 323
     */
    function isBlipOnMinimap(blip: number | Blip): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDD2238F57B977751 | Since: 323
     */
    function doesBlipHaveGpsRoute(blip: number | Blip): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x54318C915D27E4CE | Since: 323
     */
    function setBlipHiddenOnLegend(blip: number | Blip, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE2590BC29220CEBB | Since: 323
     */
    function setBlipHighDetail(blip: number | Blip, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x24AC0137444F9FD5 | Since: 323
     */
    function setBlipAsMissionCreatorBlip(blip: number | Blip, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x26F49BF3381D933D | Since: 323
     */
    function isMissionCreatorBlip(blip: number | Blip): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5C90988E7C8E1AF4 | Since: 323
     */
    function getNewSelectedMissionCreatorBlip(): number;
    /**
     * No comment provided
     *
     * Hash: 0x4167EFE0527D706E | Since: 323
     */
    function isHoveringOverMissionCreatorBlip(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF1A6C18B35BCADE6 | Since: 323
     */
    function showStartMissionInstructionalButton(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC772A904CDE1186F | Since: 2545
     */
    function showContactInstructionalButton(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6865E26067B708C | Since: 3407
     */
    function showPurchaseInstructionalButton(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2916A928514C9827 | Since: 573
     */
    function reloadMapMenu(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB552929B85FC27EC | Since: 573
     */
    function setBlipMarkerLongDistance(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB14552383D39CE3E | Since: 323
     */
    function setBlipFlashes(blip: number | Blip, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2E8D9498C56DD0D1 | Since: 323
     */
    function setBlipFlashesAlternate(blip: number | Blip, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA5E41FD83AD6CEF0 | Since: 323
     */
    function isBlipFlashing(blip: number | Blip): boolean;
    /**
     * Sets whether or not the specified blip should only be displayed when nearby, or on the minimap.
     *
     * Hash: 0xBE8BE4FE60E27B72 | Since: 323
     */
    function setBlipAsShortRange(blip: number | Blip, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD38744167B2FA257 | Since: 323
     */
    function setBlipScale(blip: number | Blip, scale: number): void;
    /**
     * See https://imgur.com/a/lLkEsMN
     *
     * Hash: 0xCD6524439909C979 | Since: 1734
     */
    function setBlipScale2d(blip: number | Blip, xScale: number, yScale: number): void;
    /**
     * See this topic for more details : gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-35?p=1069477935
     *
     * Hash: 0xAE9FC9EF6A9FAC79 | Since: 323
     */
    function setBlipPriority(blip: number | Blip, priority: number): void;
    /**
     * Display Id behaviours:
     * 0 = Doesn't show up, ever, anywhere.
     * 1 = Doesn't show up, ever, anywhere.
     * 2 = Shows on both main map and minimap. (Selectable on map)
     * 3 = Shows on main map only. (Selectable on map)
     * 4 = Shows on main map only. (Selectable on map)
     * 5 = Shows on minimap only.
     * 6 = Shows on both main map and minimap. (Selectable on map)
     * 7 = Doesn't show up, ever, anywhere.
     * 8 = Shows on both main map and minimap. (Not selectable on map)
     * 9 = Shows on minimap only.
     * 10 = Shows on both main map and minimap. (Not selectable on map)
     *
     * Anything higher than 10 seems to be exactly the same as 10.
     *
     * Hash: 0x9029B2F3DA924928 | Since: 323
     */
    function setBlipDisplay(blip: number | Blip, displayId: number): void;
    /**
     * Example: https://i.imgur.com/skY6vAJ.png
     *
     * Index:
     * 1 = No distance shown in legend
     * 2 = Distance shown in legend
     * 7 = "Other Players" category, also shows distance in legend
     * 10 = "Property" category
     * 11 = "Owned Property" category
     *
     * Any other value behaves like index = 1, index wraps around after 255
     * Blips with categories 7, 10 or 11 will all show under the specific categories listing in the map legend, regardless of sprite or name.
     * Legend entries:
     * 7 = Other Players (BLIP_OTHPLYR)
     * 10 = Property (BLIP_PROPCAT)
     * 11 = Owned Property (BLIP_APARTCAT)
     *
     * Category needs to be `7` in order for blip names to show on the expanded minimap when using DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS.
     *
     * Hash: 0x234CDD44D996FD9A | Since: 323
     */
    function setBlipCategory(blip: number | Blip, index: number): void;
    /**
     * In the C++ SDK, this seems not to work-- the blip isn't removed immediately. I use it for saving cars.
     *
     * E.g.:
     *
     * `Ped pped = PLAYER::PLAYER_PED_ID();`
     * `Vehicle v = PED::GET_VEHICLE_PED_IS_USING(pped);`
     * `Blip b = HUD::ADD_BLIP_FOR_ENTITY(v);`
     *
     * works fine.
     * But later attempting to delete it with:
     *
     * `Blip b = HUD::GET_BLIP_FROM_ENTITY(v);`
     * `if (HUD::DOES_BLIP_EXIST(b)) HUD::REMOVE_BLIP(&b);`
     *
     * doesn't work. And yes, doesn't work without the DOES_BLIP_EXIST check either. Also, if you attach multiple blips to the same thing (say, a vehicle), and that thing disappears, the blips randomly attach to other things (in my case, a vehicle).
     *
     * `Thus for me, HUD::REMOVE_BLIP(&b) only works if there's one blip, (in my case) the vehicle is marked as no longer needed, you drive away from it and it eventually despawns, AND there is only one blip attached to it. I never intentionally attach multiple blips but if the user saves the car, this adds a blip. Then if they delete it, it is supposed to remove the blip, but it doesn't. Then they can immediately save it again, causing another blip to re-appear.`
     * -------------
     *
     * Passing the address of the variable instead of the value works for me.
     * e.g.
     * `int blip = HUD::ADD_BLIP_FOR_ENTITY(ped);`
     * `HUD::REMOVE_BLIP(&blip);`
     *
     *
     * Remove blip will currently crash your game, just artificially remove the blip by setting the sprite to a id that is 'invisible'.
     *
     * Hash: 0x86A652570E5F25DD | Since: 323
     */
    function removeBlip(blip: number | Blip): void;
    /**
     * false for enemy
     * true for friendly
     *
     * Hash: 0x6F6F290102C02AB4 | Since: 323
     */
    function setBlipAsFriendly(blip: number | Blip, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x742D6FD43115AF73 | Since: 323
     */
    function pulseBlip(blip: number | Blip): void;
    /**
     * No comment provided
     *
     * Hash: 0xA3C0B359DCB848B6 | Since: 323
     */
    function showNumberOnBlip(blip: number | Blip, _number: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x532CFF637EF80148 | Since: 323
     */
    function hideNumberOnBlip(blip: number | Blip): void;
    /**
     * No comment provided
     *
     * Hash: 0x75A16C3DA34F1245 | Since: 323
     */
    function showHeightOnBlip(blip: number | Blip, toggle: boolean): void;
    /**
     * Adds a green checkmark on top of a blip.
     *
     * Hash: 0x74513EA3E505181E | Since: 323
     */
    function showTickOnBlip(blip: number | Blip, toggle: boolean): void;
    /**
     * Adds a orange checkmark on top of a given blip handle: https://imgur.com/a/aw5OTMF
     * _SHOW_FRIEND_INDICATOR_ON_BLIP* - _SHOW_HEADING_INDICATOR_ON_BLIP*
     *
     * Hash: 0xCAC2031EBF79B1A8 | Since: 2699
     */
    function showGoldTickOnBlip(blip: number | Blip, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x19BD6E3C0E16A8FA | Since: 2802
     */
    function showForSaleIconOnBlip(blip: number | Blip, toggle: boolean): void;
    /**
     * Adds the GTA: Online player heading indicator to a blip.
     *
     * Hash: 0x5FBCA48327B914DF | Since: 323
     */
    function showHeadingIndicatorOnBlip(blip: number | Blip, toggle: boolean): void;
    /**
     * Highlights a blip by a cyan color circle.
     *
     * Color can be changed with SET_BLIP_SECONDARY_COLOUR
     *
     * Hash: 0xB81656BC81FE24D1 | Since: 323
     */
    function showOutlineIndicatorOnBlip(blip: number | Blip, toggle: boolean): void;
    /**
     * Highlights a blip by a half cyan circle on the right side of the blip. https://i.imgur.com/FrV9M4e.png
     * .Indicating that that player is a friend (in GTA:O). This color can not be changed.
     * To toggle the left side (crew member indicator) of the half circle around the blip, use: `SHOW_CREW_INDICATOR_ON_BLIP`
     *
     * Hash: 0x23C3EB807312F01A | Since: 323
     */
    function showFriendIndicatorOnBlip(blip: number | Blip, toggle: boolean): void;
    /**
     * Enables or disables the blue half circle https://i.imgur.com/iZes9Ec.png around the specified blip on the left side of the blip. This is used to indicate that the player is in your crew in GTA:O. Color is changeable by using `SET_BLIP_SECONDARY_COLOUR`.
     *
     * Hash: 0xDCFB5D4DB8BF367E | Since: 323
     */
    function showCrewIndicatorOnBlip(blip: number | Blip, toggle: boolean): void;
    /**
     * Must be toggled before being queued for animation
     *
     * Hash: 0xC4278F70131BAA6D | Since: 323
     */
    function setBlipExtendedHeightThreshold(blip: number | Blip, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x4B5B620C9B59ED34 | Since: 678
     */
    function setBlipShortHeightThreshold(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2C9F302398E13141 | Since: 1103
     */
    function setBlipUseHeightIndicatorOnEdge(blip: number | Blip): void;
    /**
     * Makes a blip go small when off the minimap.
     *
     * Hash: 0x2B6D467DAB714E8D | Since: 323
     */
    function setBlipAsMinimalOnEdge(blip: number | Blip, toggle: boolean): void;
    /**
     * Enabling this on a radius blip will make it outline only. See https://cdn.discordapp.com/attachments/553235301632573459/575132227935928330/unknown.png
     *
     * Hash: 0x25615540D894B814 | Since: 323
     */
    function setRadiusBlipEdge(blip: number | Blip, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA6DB27D19ECBB7DA | Since: 323
     */
    function doesBlipExist(blip: number | Blip): boolean;
    /**
     * This native removes the current waypoint from the map.
     *
     * Example:
     * C#:
     * Function.Call(Hash.SET_WAYPOINT_OFF);
     *
     * C++:
     * `HUD::SET_WAYPOINT_OFF();`
     *
     * Hash: 0xA7E4E2D361C2627F | Since: 323
     */
    function setWaypointOff(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD8E694757BCEA8E9 | Since: 323
     */
    function deleteWaypointsFromThisPlayer(): void;
    /**
     * No comment provided
     *
     * Hash: 0x81FA173F170560D1 | Since: 323
     */
    function refreshWaypoint(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1DD1F58F493F1DA5 | Since: 323
     */
    function isWaypointActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFE43368D2AA4F2FC | Since: 323
     */
    function setNewWaypoint(x: number, y: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB203913733F27884 | Since: 323
     */
    function setBlipBright(blip: number | Blip, toggle: boolean): void;
    /**
     * As of b2189, the third parameter sets the color of the cone (before b2189 it was ignored). Note that it uses HUD colors, not blip colors.
     *
     * Hash: 0x13127EC3665E8EE1 | Since: 323
     */
    function setBlipShowCone(blip: number | Blip, toggle: boolean, hudColorIndex: number): void;
    /**
     * Interesting fact: A hash collision for this is RESET_JETPACK_MODEL_SETTINGS
     *
     * Hash: 0xC594B315EDF2D4AF | Since: 323
     */
    function removeCopBlipFromPed(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xF83D0FEBE75E62C9 | Since: 1290
     */
    function setupFakeConeData(blip: number | Blip): void;
    /**
     * No comment provided
     *
     * Hash: 0x35A3CD97B2C0A6D2 | Since: 1290
     */
    function removeFakeConeData(blip: number | Blip): void;
    /**
     * No comment provided
     *
     * Hash: 0x8410C5E0CD847B9D | Since: 1290
     */
    function clearFakeConeArray(): void;
    /**
     * Applies to new eBlipParams _BLIP_CHANGE_46* and _BLIP_CHANGE_47*
     *
     * Hash: 0x25D984CFB64ED6DE | Since: 3095
     */
    function setBlipGpsRouteDisplayDistance(blip: number | Blip, blipChangeParam46: number, blipChangeParam47: boolean): void;
    /**
     * This native is used to colorize certain map components like the army base at the top of the map.
     * p2 appears to be always -1. If p2 is -1 then native wouldn't change the color. See https://gfycat.com/SkinnyPinkChupacabra
     *
     * Hash: 0x75A9A10948D1DEA6 | Since: 323
     */
    function setMinimapComponent(componentId: number, toggle: boolean, overrideColor: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6B50FC8749632EC1 | Since: 2189
     */
    function setMinimapSonarSweep(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x60E892BA4F5BDCA4 | Since: 323
     */
    function showAccountPicker(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDCD4EC3F419D02FA | Since: 323
     */
    function getMainPlayerBlipId(): number;
    /**
     * No comment provided
     *
     * Hash: 0x41350B4FC28E3941 | Since: 323
     */
    function setPmWarningscreenActive(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4B0311D3CDC4648F | Since: 323
     */
    function hideLoadingOnFadeThisFrame(): void;
    /**
     * List of interior hashes: https://pastebin.com/1FUyXNqY
     * Not for every interior zoom > 0 available.
     *
     * Hash: 0x59E727A1C9D3E31A | Since: 323
     */
    function setRadarAsInteriorThisFrame(interior: number | string, pos: Vector3, zoom: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x504DFE62A1692296 | Since: 1493
     */
    function setInsideVerySmallInterior(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7EC8ABA5E74B3D7A | Since: 2372
     */
    function setInsideVeryLargeInterior(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE81B7D2A3DAB2D81 | Since: 323
     */
    function setRadarAsExteriorThisFrame(): void;
    /**
     * Sets the position of the arrow icon representing the player on both the minimap and world map.
     *
     * Too bad this wouldn't work over the network (obviously not). Could spoof where we would be.
     *
     * Hash: 0x77E2DD177910E1CF | Since: 323
     */
    function setFakePausemapPlayerPositionThisFrame(x: number, y: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA17784FCA9548D15 | Since: 877
     */
    function setFakeGpsPlayerPositionThisFrame(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x9049FE339D5F6F6F | Since: 323
     */
    function isPausemapInInteriorMode(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5FBAE526203990C9 | Since: 323
     */
    function hideMinimapExteriorMapThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x20FE7FDFEEAD38C0 | Since: 323
     */
    function hideMinimapInteriorMapThisFrame(): void;
    /**
     * Toggles the Cayo Perico map.
     *
     * Hash: 0x5E1460624D194A38 | Since: 2189
     */
    function setUseIslandMap(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x35CCE12EAECB4A51 | Since: 2944
     */
    function setPauseExteriorRenderingWhileInInterior(): void;
    /**
     * When calling this, the current frame will have the players "arrow icon" be focused on the dead center of the radar.
     *
     * Hash: 0x6D14BFDC33B34F55 | Since: 323
     */
    function dontTiltMinimapThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x89DA85D949CE57A0 | Since: 2802
     */
    function dontZoomMinimapWhenRunningThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x55F5A5F07134DE60 | Since: 1180
     */
    function dontZoomMinimapWhenSnipingThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC3B07BA00A83B0F1 | Since: 323
     */
    function setWidescreenFormat(): void;
    /**
     * No comment provided
     *
     * Hash: 0x276B6CE369C33678 | Since: 323
     */
    function displayAreaName(toggle: boolean): void;
    /**
     * "DISPLAY_CASH(false);" makes the cash amount render on the screen when appropriate
     * "DISPLAY_CASH(true);" disables cash amount rendering
     *
     * Hash: 0x96DEC8D5430208B7 | Since: 323
     */
    function displayCash(toggle: boolean): void;
    /**
     * Related to displaying cash on the HUD
     * `Always called before HUD::CHANGE_FAKE_MP_CASH in decompiled scripts`
     *
     * Hash: 0x170F541E1CADD1DE | Since: 323
     */
    function useFakeMpCash(toggle: boolean): void;
    /**
     * Displays cash change notifications on HUD.
     *
     * Hash: 0x0772DF77852C2E30 | Since: 323
     */
    function changeFakeMpCash(cash: number, bank: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA5E78BA2B1331C55 | Since: 323
     */
    function displayAmmoThisFrame(display: boolean): void;
    /**
     * Displays the crosshair for this frame.
     *
     * Hash: 0x73115226F4814E62 | Since: 323
     */
    function displaySniperScopeThisFrame(): void;
    /**
     * Hides HUD and radar this frame and prohibits switching to other weapons (or accessing the weapon wheel)
     *
     * Hash: 0x719FF505F097FD20 | Since: 323
     */
    function hideAndRadarThisFrame(): void;
    /**
     * Controls whether to display 'Cash'/'Bank' next to the money balance HUD in Multiplayer (https://i.imgur.com/MiYUtNl.png)
     *
     * Hash: 0xE67C6DFD386EA5E7 | Since: 323
     */
    function allowDisplayOfMultiplayerCashText(allow: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC2D15BEF167E27BC | Since: 323
     */
    function setMultiplayerWalletCash(): void;
    /**
     * No comment provided
     *
     * Hash: 0x95CF81BD06EE1887 | Since: 323
     */
    function removeMultiplayerWalletCash(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDD21B55DF695CD0A | Since: 323
     */
    function setMultiplayerBankCash(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC7C6789AA1CFEDD0 | Since: 323
     */
    function removeMultiplayerBankCash(): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0xFD1D220394BCB824 | Since: 323
     */
    function setMultiplayerCash(): void;
    /**
     * Removes multiplayer cash hud each frame
     *
     * Hash: 0x968F270E39141ECA | Since: 323
     */
    function removeMultiplayerCash(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD46923FC481CA285 | Since: 323
     */
    function hideHelpTextThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x801879A9B4F4B2FB | Since: 372
     */
    function isImeInProgress(): boolean;
    /**
     * The messages are localized strings.
     * Examples:
     * "No_bus_money"
     * "Enter_bus"
     * "Tour_help"
     * "LETTERS_HELP2"
     * "Dummy"
     *
     * <strong>The bool appears to always be false (if it even is a bool, as it's represented by a zero)</strong>
     * --------
     * p1 doesn't seem to make a difference, regardless of the state it's in.
     *
     *
     * picture of where on the screen this is displayed?
     *
     * Hash: 0x960C9FF8F616E41C | Since: 323
     */
    function displayHelpTextThisFrame(message: string): void;
    /**
     * Forces the weapon wheel to show/hide.
     *
     * Hash: 0xEB354E5376BC81A7 | Since: 323
     */
    function forceWeaponWheel(show: boolean): void;
    /**
     * Displays "blazer_wheels_up" and "blazer_wheels_down" "weapon" icons when switching between jetski and quadbike modes. Works only on vehicles using "VEHICLE_TYPE_AMPHIBIOUS_QUADBIKE" vehicle type. Needs to be called every time prior to switching modes, otherwise the icon will only appear when switching modes once.
     *
     * Hash: 0x488043841BBE156F | Since: 1011
     */
    function forceSpecialVehicleWeaponWheel(): void;
    /**
     * Calling this each frame, stops the player from receiving a weapon via the weapon wheel.
     *
     * Hash: 0x0AFC4AF510774B47 | Since: 323
     */
    function suppressWeaponWheelResultsThisFrame(): void;
    /**
     * Returns the weapon hash to the selected/highlighted weapon in the wheel
     *
     * Hash: 0xA48931185F0536FE | Since: 323
     */
    function getWeaponWheelCurrentlyHighlighted(): number;
    /**
     * Set the active slotIndex in the wheel weapon to the slot associated with the provided Weapon hash
     *
     * Hash: 0x72C1056D678BB7D8 | Since: 323
     */
    function setWeaponWheelTopSlot(weaponHash: number | string): void;
    /**
     * Returns the weapon hash active in a specific weapon wheel slotList
     *
     * Hash: 0xA13E93403F26C812 | Since: 323
     */
    function getWeaponWheelTopSlot(weaponTypeIndex: number): number;
    /**
     * Sets a global that disables many weapon input tasks (shooting, aiming, etc.). Does not work with vehicle weapons, only used in selector.ysc
     *
     * Hash: 0x14C9FDCC41F81F63 | Since: 323
     */
    function showingCharacterSwitchSelection(toggle: boolean): void;
    /**
     * Only the script that originally called SET_GPS_FLAGS can set them again. Another script cannot set the flags, until the first script that called it has called CLEAR_GPS_FLAGS.
     *
     * Doesn't seem like the flags are actually read by the game at all.
     *
     * Hash: 0x5B440763A4C8D15B | Since: 323
     */
    function setGpsFlags(): void;
    /**
     * Clears the GPS flags. Only the script that originally called SET_GPS_FLAGS can clear them.
     *
     * Doesn't seem like the flags are actually read by the game at all.
     *
     * Hash: 0x21986729D6A3A830 | Since: 323
     */
    function clearGpsFlags(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1EAC5F91BCBC5073 | Since: 323
     */
    function setRaceTrackRender(toggle: boolean): void;
    /**
     * Does the same as SET_RACE_TRACK_RENDER(false);
     *
     * Hash: 0x7AA5B4CE533C858B | Since: 323
     */
    function clearGpsRaceTrack(): void;
    /**
     * Starts a new GPS custom-route, allowing you to plot lines on the map.
     * Lines are drawn directly between points.
     * The GPS custom route works like the GPS multi route, except it does not follow roads.
     * Example result: https://i.imgur.com/BDm5pzt.png
     * hudColor: The HUD color of the GPS path.
     * displayOnFoot: Draws the path regardless if the player is in a vehicle or not.
     * followPlayer: Draw the path partially between the previous and next point based on the players position between them. When false, the GPS appears to not disappear after the last leg is completed.
     *
     * Hash: 0xDB34E8D56FC13B08 | Since: 323
     */
    function startGpsCustomRoute(hudColor: number, displayOnFoot: boolean, followPlayer: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x311438A071DD9B1A | Since: 323
     */
    function addPointToGpsCustomRoute(pos: Vector3): void;
    /**
     * radarThickness: The width of the GPS route on the radar
     * mapThickness: The width of the GPS route on the map
     *
     * Hash: 0x900086F371220B6F | Since: 323
     */
    function setGpsCustomRouteRender(toggle: boolean, radarThickness: number, mapThickness: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE6DE0561D9232A64 | Since: 323
     */
    function clearGpsCustomRoute(): void;
    /**
     * Starts a new GPS multi-route, allowing you to create custom GPS paths.
     * GPS functions like the waypoint, except it can contain multiple points it's forced to go through.
     * Once the player has passed a point, the GPS will no longer force its path through it.
     *
     * Works independently from the player-placed waypoint and blip routes.
     * Example result: https://i.imgur.com/ZZHQatX.png
     * hudColor: The HUD color of the GPS path.
     * routeFromPlayer: Makes the GPS draw a path from the player to the next point, rather than the original path from the previous point.
     * displayOnFoot: Draws the GPS path regardless if the player is in a vehicle or not.
     *
     * Hash: 0x3D3D15AF7BCAAF83 | Since: 323
     */
    function startGpsMultiRoute(hudColor: number, routeFromPlayer: boolean, displayOnFoot: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA905192A6781C41B | Since: 323
     */
    function addPointToGpsMultiRoute(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x3DDA37128DD1ACA8 | Since: 323
     */
    function setGpsMultiRouteRender(toggle: boolean): void;
    /**
     * Does the same as SET_GPS_MULTI_ROUTE_RENDER(false);
     *
     * Hash: 0x67EEDEA1B9BAFD94 | Since: 323
     */
    function clearGpsMultiRoute(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFF4FB7C8CDFA3DA7 | Since: 323
     */
    function clearGpsPlayerWaypoint(): void;
    /**
     * No comment provided
     *
     * Hash: 0x320D0E0D936A0E9B | Since: 323
     */
    function setGpsFlashes(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7B21E0BB01E8224A | Since: 323
     */
    function setPlayerIconColour(color: number): void;
    /**
     * adds a short flash to the Radar/Minimap
     * Usage: UI.FLASH_MINIMAP_DISPLAY
     *
     * Hash: 0xF2DD778C22B15BDA | Since: 323
     */
    function flashMinimapDisplay(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B1DE27EE78E6A19 | Since: 323
     */
    function flashMinimapDisplayWithColor(hudColorIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6AFDFB93754950C7 | Since: 323
     */
    function toggleStealthRadar(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1A5CD7752DD28CD3 | Since: 323
     */
    function setMinimapInSpectatorMode(toggle: boolean, ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x5F28ECF5FC84772F | Since: 323
     */
    function setMissionName(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xE45087D85F468BC2 | Since: 323
     */
    function setMissionNameForUgcMission(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x817B86108EB94E51 | Since: 323
     */
    function setDescriptionForUgcMissionEightStrings(): void;
    /**
     * No comment provided
     *
     * Hash: 0x58FADDED207897DC | Since: 323
     */
    function setMinimapBlockWaypoint(toggle: boolean): void;
    /**
     * Toggles the North Yankton map
     *
     * Hash: 0x9133955F1A2DA957 | Since: 323
     */
    function setMinimapInPrologue(toggle: boolean): void;
    /**
     * This native does absolutely nothing on PC master builds, just a nullsub.
     *
     * Hash: 0xB09D42557C45EBA1 | Since: 3258
     */
    function setMinimapBackgroundHidden(toggle: boolean): void;
    /**
     * If true, the entire map will be revealed.
     *
     * FOW = Fog of War
     *
     * Hash: 0xF8DEE0A5600CBB93 | Since: 323
     */
    function setMinimapHideFow(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE0130B41D3CF4574 | Since: 323
     */
    function getMinimapFowDiscoveryRatio(): number;
    /**
     * No comment provided
     *
     * Hash: 0x6E31B91145873922 | Since: 323
     */
    function getMinimapFowCoordinateIsRevealed(pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x62E849B7EB28E770 | Since: 323
     */
    function setMinimapFowDoNotUpdate(): void;
    /**
     * Up to eight coordinates may be revealed per frame
     *
     * Hash: 0x0923DBF87DFF735E | Since: 323
     */
    function setMinimapFowRevealCoordinate(pos: Vector3): void;
    /**
     * Not much is known so far on what it does _exactly_.
     * All I know for sure is that it draws the specified hole ID on the pause menu map as well as on the mini-map/radar. This native also seems to change some other things related to the pause menu map's behaviour, for example: you can no longer set waypoints, the pause menu map starts up in a 'zoomed in' state. This native does not need to be executed every tick.
     * You need to center the minimap manually as well as change/lock it's zoom and angle in order for it to appear correctly on the minimap.
     * You'll also need to use the `GOLF` scaleform in order to get the correct minmap border to show up.
     * Use `0x35edd5b2e3ff01c0` to reset the map when you no longer want to display any golf holes (you still need to unlock zoom, position and angle of the radar manually after calling this).
     *
     * Hash: 0x71BDB63DBAF8DA59 | Since: 323
     */
    function setMinimapGolfCourse(hole: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x35EDD5B2E3FF01C0 | Since: 323
     */
    function setMinimapGolfCourseOff(): void;
    /**
     * Locks the minimap to the specified angle in integer degrees.
     *
     * angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.
     *
     * Hash: 0x299FAEBB108AE05B | Since: 323
     */
    function lockMinimapAngle(angle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8183455E16C42E3A | Since: 323
     */
    function unlockMinimapAngle(): void;
    /**
     * Locks the minimap to the specified world position.
     *
     * Hash: 0x1279E861A329E73F | Since: 323
     */
    function lockMinimapPosition(x: number, y: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3E93E06DB8EF1F30 | Since: 323
     */
    function unlockMinimapPosition(): void;
    /**
     * Argument must be 0.0f or above 38.0f, or it will be ignored.
     *
     * Hash: 0xD201F3FF917A506D | Since: 323
     */
    function setFakeMinimapMaxAltimeterHeight(altitude: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3F5CC444DCAAA8F2 | Since: 323
     */
    function setHealthDisplayValues(health: number, capacity: number, wasAdded: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x975D66A0BC17064C | Since: 323
     */
    function setMaxHealthDisplay(maximumValue: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x06A320535F5F0248 | Since: 323
     */
    function setMaxArmourDisplay(maximumValue: number): void;
    /**
     * Toggles the big minimap state like in GTA:Online.
     *
     * Hash: 0x231C8F89D0539D8F | Since: 323
     */
    function setBigmapActive(toggleBigMap: boolean, showFullMap: boolean): void;
    /**
     * Full list of components below
     *
     * HUD = 0;
     * HUD_WANTED_STARS = 1;
     * HUD_WEAPON_ICON = 2;
     * HUD_CASH = 3;
     * HUD_MP_CASH = 4;
     * HUD_MP_MESSAGE = 5;
     * HUD_VEHICLE_NAME = 6;
     * HUD_AREA_NAME = 7;
     * HUD_VEHICLE_CLASS = 8;
     * HUD_STREET_NAME = 9;
     * HUD_HELP_TEXT = 10;
     * HUD_FLOATING_HELP_TEXT_1 = 11;
     * HUD_FLOATING_HELP_TEXT_2 = 12;
     * HUD_CASH_CHANGE = 13;
     * HUD_RETICLE = 14;
     * HUD_SUBTITLE_TEXT = 15;
     * HUD_RADIO_STATIONS = 16;
     * HUD_SAVING_GAME = 17;
     * HUD_GAME_STREAM = 18;
     * HUD_WEAPON_WHEEL = 19;
     * HUD_WEAPON_WHEEL_STATS = 20;
     * MAX_HUD_COMPONENTS = 21;
     * MAX_HUD_WEAPONS = 22;
     * MAX_SCRIPTED_HUD_COMPONENTS = 141;
     *
     * Hash: 0xBC4C9EA5391ECC0D | Since: 323
     */
    function isComponentActive(id: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDD100EB17A94FF65 | Since: 323
     */
    function isScriptedComponentActive(id: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE374C498D8BADC14 | Since: 323
     */
    function hideScriptedComponentThisFrame(id: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4F38DCA127DAAEA2 | Since: 1734
     */
    function showScriptedComponentThisFrame(id: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x09C0403ED9A751C2 | Since: 323
     */
    function isScriptedComponentHiddenThisFrame(id: number): boolean;
    /**
     * This function hides various HUD (Heads-up Display) components.
     * Listed below are the integers and the corresponding HUD component.
     * - 1 : WANTED_STARS
     * - 2 : WEAPON_ICON
     * - 3 : CASH
     * - 4 : MP_CASH
     * - 5 : MP_MESSAGE
     * - 6 : VEHICLE_NAME
     * - 7 : AREA_NAME
     * - 8 : VEHICLE_CLASS
     * - 9 : STREET_NAME
     * - 10 : HELP_TEXT
     * - 11 : FLOATING_HELP_TEXT_1
     * - 12 : FLOATING_HELP_TEXT_2
     * - 13 : CASH_CHANGE
     * - 14 : RETICLE
     * - 15 : SUBTITLE_TEXT
     * - 16 : RADIO_STATIONS
     * - 17 : SAVING_GAME
     * - 18 : GAME_STREAM
     * - 19 : WEAPON_WHEEL
     * - 20 : WEAPON_WHEEL_STATS
     * - 21 : HUD_COMPONENTS
     * - 22 : HUD_WEAPONS
     *
     * These integers also work for the `SHOW_HUD_COMPONENT_THIS_FRAME` native, but instead shows the HUD Component.
     *
     * Hash: 0x6806C51AD12B83B8 | Since: 323
     */
    function hideComponentThisFrame(id: number): void;
    /**
     * This function hides various HUD (Heads-up Display) components.
     * Listed below are the integers and the corresponding HUD component.
     * - 1 : WANTED_STARS
     * - 2 : WEAPON_ICON
     * - 3 : CASH
     * - 4 : MP_CASH
     * - 5 : MP_MESSAGE
     * - 6 : VEHICLE_NAME
     * - 7 : AREA_NAME
     * - 8 : VEHICLE_CLASS
     * - 9 : STREET_NAME
     * - 10 : HELP_TEXT
     * - 11 : FLOATING_HELP_TEXT_1
     * - 12 : FLOATING_HELP_TEXT_2
     * - 13 : CASH_CHANGE
     * - 14 : RETICLE
     * - 15 : SUBTITLE_TEXT
     * - 16 : RADIO_STATIONS
     * - 17 : SAVING_GAME
     * - 18 : GAME_STREAM
     * - 19 : WEAPON_WHEEL
     * - 20 : WEAPON_WHEEL_STATS
     * - 21 : HUD_COMPONENTS
     * - 22 : HUD_WEAPONS
     *
     * These integers also work for the `HIDE_HUD_COMPONENT_THIS_FRAME` native, but instead hides the HUD Component.
     *
     * Hash: 0x0B4DF1FA60C0E664 | Since: 323
     */
    function showComponentThisFrame(id: number): void;
    /**
     * Hides area and vehicle name HUD components for one frame.
     *
     * Hash: 0xA4DEDE28B1814289 | Since: 323
     */
    function hideStreetAndCarNamesThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x12782CE0A636E9F0 | Since: 323
     */
    function resetReticuleValues(): void;
    /**
     * No comment provided
     *
     * Hash: 0x450930E616475D0D | Since: 323
     */
    function resetComponentValues(id: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAABB1F56E2A17CED | Since: 323
     */
    function setComponentPosition(id: number, x: number, y: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x223CA69A8C4417FD | Since: 323
     */
    function getComponentPosition(id: number): Vector3;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0xB57D8DD645CFA2CF | Since: 323
     */
    function clearReminderMessage(): void;
    /**
     * World to relative screen coords, this world to screen will keep the text on screen. Was named _GET_SCREEN_COORD_FROM_WORLD_COORD, but this conflicts with 0x34E82F05DF2974F5. As that hash actually matches GET_SCREEN_COORD_FROM_WORLD_COORD that one supercedes and this one was renamed to _GET_2D_COORD_FROM_3D_COORD
     *
     * Hash: 0xF9904D11F1ACBEC3 | Since: 323
     */
    function getScreenPositionFromWorldPosition(worldPos: Vector3): [number, number, number];
    /**
     * Shows a menu for reporting UGC content.
     *
     * Hash: 0x523A590C1A3CC0D3 | Since: 323
     */
    function openReportugcMenu(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEE4C0E6DBC6F2C6F | Since: 323
     */
    function forceCloseReportugcMenu(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9135584D09A3437E | Since: 323
     */
    function isReportugcMenuOpen(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2432784ACA090DA4 | Since: 323
     */
    function isFloatingHelpTextOnScreen(hudIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7679CC1BCEBE3D4C | Since: 323
     */
    function setFloatingHelpTextScreenPosition(hudIndex: number, x: number, y: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x784BA7E0ECEB4178 | Since: 323
     */
    function setFloatingHelpTextWorldPosition(hudIndex: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xB094BC1DB4018240 | Since: 323
     */
    function setFloatingHelpTextToEntity(hudIndex: number, entity: number | Entity, offsetX: number, offsetY: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x788E7FD431BD67F1 | Since: 323
     */
    function setFloatingHelpTextStyle(hudIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x50085246ABD3FEFA | Since: 323
     */
    function clearFloatingHelp(hudIndex: number): void;
    /**
     * clanFlag: takes a number 0-5
     *
     * Hash: 0x6DD05E9D83EFA4C9 | Since: 323
     */
    function createMpGamerTagWithCrewColor(player: number | string | Player, username: string, pointedClanTag: boolean, isRockstarClan: boolean, clanTag: string, clanFlag: number, r: number, g: number, b: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6E0EB3EB47C8D7AA | Since: 323
     */
    function isMpGamerTagMovieActive(): boolean;
    /**
     * clanFlag: takes a number 0-5
     *
     * Hash: 0xBFEFE3321A3F5015 | Since: 323
     */
    function createFakeMpGamerTag(ped: number | Ped, username: string, pointedClanTag: boolean, isRockstarClan: boolean, clanTag: string, clanFlag: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x31698AA80E0223F8 | Since: 323
     */
    function removeMpGamerTag(gamerTagId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4E929E7A5796FD26 | Since: 323
     */
    function isMpGamerTagActive(gamerTagId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x595B5178E412E199 | Since: 323
     */
    function isMpGamerTagFree(gamerTagId: number): boolean;
    /**
     * enum eMpGamerTagComponent
     * {
     * MP_TAG_GAMER_NAME,
     * MP_TAG_CREW_TAG,
     * MP_TAG_HEALTH_ARMOUR,
     * MP_TAG_BIG_TEXT,
     * MP_TAG_AUDIO_ICON,
     * MP_TAG_USING_MENU,
     * MP_TAG_PASSIVE_MODE,
     * MP_TAG_WANTED_STARS,
     * MP_TAG_DRIVER,
     * MP_TAG_CO_DRIVER,
     * MP_TAG_TAGGED,
     * MP_TAG_GAMER_NAME_NEARBY,
     * MP_TAG_ARROW,
     * MP_TAG_PACKAGES,
     * MP_TAG_INV_IF_PED_FOLLOWING,
     * MP_TAG_RANK_TEXT,
     * MP_TAG_TYPING,
     * MP_TAG_BAG_LARGE,
     * MP_TAG_ARROW,
     * MP_TAG_GANG_CEO,
     * MP_TAG_GANG_BIKER,
     * MP_TAG_BIKER_ARROW,
     * MP_TAG_MC_ROLE_PRESIDENT,
     * MP_TAG_MC_ROLE_VICE_PRESIDENT,
     * MP_TAG_MC_ROLE_ROAD_CAPTAIN,
     * MP_TAG_MC_ROLE_SARGEANT,
     * MP_TAG_MC_ROLE_ENFORCER,
     * MP_TAG_MC_ROLE_PROSPECT,
     * MP_TAG_TRANSMITTER,
     * MP_TAG_BOMB
     * };
     *
     * Hash: 0x63BB75ABEDC1F6A0 | Since: 323
     */
    function setMpGamerTagVisibility(gamerTagId: number, component: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEE76FF7E6A0166B0 | Since: 323
     */
    function setAllMpGamerTagsVisibility(gamerTagId: number, toggle: boolean): void;
    /**
     * Displays a bunch of icons above the players name, and level, and their name twice
     *
     * Hash: 0xA67F9C46D612B6F1 | Since: 323
     */
    function setMpGamerTagsShouldUseVehicleHealth(gamerTagId: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD29EC58C2F6B5014 | Since: 1365
     */
    function setMpGamerTagsShouldUsePointsHealth(gamerTagId: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1563FE35E9928E67 | Since: 1365
     */
    function setMpGamerTagsPointHealth(gamerTagId: number, value: number, maximumValue: number): void;
    /**
     * Sets a gamer tag's component colour
     *
     * gamerTagId is obtained using for example CREATE_FAKE_MP_GAMER_TAG
     * Ranges from 0 to 255. 0 is grey health bar, ~50 yellow, 200 purple.
     *
     * Hash: 0x613ED644950626AE | Since: 323
     */
    function setMpGamerTagColour(gamerTagId: number, component: number, hudColorIndex: number): void;
    /**
     * Ranges from 0 to 255. 0 is grey health bar, ~50 yellow, 200 purple.
     * Should be enabled as flag (2). Has 0 opacity by default.
     *
     * - This was _SET_MP_GAMER_TAG_HEALTH_BAR_COLOR,
     * -> Rockstar use the EU spelling of 'color' so I hashed the same name with COLOUR and it came back as the correct hash, so it has been corrected above.
     *
     * Hash: 0x3158C77A7E888AB4 | Since: 323
     */
    function setMpGamerTagHealthBarColour(gamerTagId: number, hudColorIndex: number): void;
    /**
     * Sets flag's sprite transparency. 0-255.
     *
     * Hash: 0xD48FE545CD46F857 | Since: 323
     */
    function setMpGamerTagAlpha(gamerTagId: number, component: number, alpha: number): void;
    /**
     * displays wanted star above head
     *
     * Hash: 0xCF228E2AA03099C3 | Since: 323
     */
    function setMpGamerTagWantedLevel(gamerTagId: number, wantedlvl: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9C16459B2324B2CF | Since: 877
     */
    function setMpGamerTagNumPackages(gamerTagId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDEA2B8283BAA3944 | Since: 323
     */
    function setMpGamerTagName(gamerTagId: number, _string: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xEB709A36958ABE0D | Since: 323
     */
    function isUpdatingMpGamerTagNameAndCrewDetails(gamerTagId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7B7723747CCB55B6 | Since: 323
     */
    function setMpGamerTagBigText(gamerTagId: number, _string: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x01A358D9128B7A86 | Since: 323
     */
    function getCurrentWebpageId(): number;
    /**
     * No comment provided
     *
     * Hash: 0x97D47996FC48CBAD | Since: 323
     */
    function getCurrentWebsiteId(): number;
    /**
     * Returns the ActionScript flagValue.
     * ActionScript flags are global flags that scaleforms use
     * Flags found during testing
     * 0: Returns 1 if the web_browser keyboard is open, otherwise 0
     * 1: Returns 1 if the player has clicked back twice on the opening page, otherwise 0 (web_browser)
     * 2: Returns how many links the player has clicked in the web_browser scaleform, returns 0 when the browser gets closed
     * 9: Returns the current selection on the mobile phone scaleform
     *
     * There are 20 flags in total.
     *
     * Hash: 0xE3B05614DCE1D014 | Since: 323
     */
    function getGlobalActionscriptFlag(flagIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xB99C4E4D9499DF29 | Since: 323
     */
    function resetGlobalActionscriptFlag(flagIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAF42195A42C63BBA | Since: 323
     */
    function isWarningMessageReadyForControl(): boolean;
    /**
     * You can only use text entries. No custom text.
     *
     * Example: SET_WARNING_MESSAGE("t20", 3, "adder", false, -1, 0, 0, true);
     * errorCode: shows an error code at the bottom left if nonzero
     *
     * Hash: 0x7B1776B3B53F8D74 | Since: 323
     */
    function setWarningMessage(titleMsg: string, flags: number, promptMsg: string, showBackground: boolean, errorCode: number): void;
    /**
     * Shows a warning message on screen with a header.
     * Note: You can only use text entries. No custom text. You can recreate this easily with scaleforms.
     * Example: https://i.imgur.com/ITJt8bJ.png
     *
     * Hash: 0xDC38CC1E35B6A5D7 | Since: 323
     */
    function setWarningMessageWithHeader(entryHeader: string, entryLine1: string, instructionalKey: number, entryLine2: string): [any, any];
    /**
     * You can use this native for custom input, without having to use any scaleform-related natives.
     * The native must be called on tick.
     * The entryHeader must be a valid label.
     * For Single lines use JL_INVITE_N as entryLine1, JL_INVITE_ND for multiple.
     * Notes:
     * - additionalIntInfo: replaces first occurrence of ~1~ in provided label with an integer
     * - additionalTextInfoLine1: replaces first occurrence of ~a~ in provided label, with your custom text
     * - additionalTextInfoLine2: replaces second occurrence of ~a~ in provided label, with your custom text
     * - showBackground: shows black background of the warning screen
     * - errorCode: shows an error code at the bottom left if nonzero
     * Example of usage:
     * SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS("ALERT", "JL_INVITE_ND", 66, "", true, -1, -1, "Testing line 1", "Testing line 2", true, 0);
     * Screenshot:
     * https://imgur.com/a/IYA7vJ8
     *
     * Hash: 0x701919482C74B5AB | Since: 323
     */
    function setWarningMessageWithHeaderAndSubstringFlags(entryHeader: string, entryLine1: string, instructionalKey: number, entryLine2: string, additionalIntInfo: any, additionalTextInfoLine1: string, additionalTextInfoLine2: string, showBackground: boolean, errorCode: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x38B55259C2E078ED | Since: 1493
     */
    function setWarningMessageWithHeaderExtended(entryHeader: string, entryLine1: string, flags: number, entryLine2: string, showBg: boolean): [any, any];
    /**
     * labelTitle: Label of the alert's title.
     * labelMsg: Label of the alert's message.
     * p2: This is an enum, check the description for a list.
     * p3: This is an enum, check the description for a list.
     * labelMsg2: Label of another message line
     * p5: usually 0
     * p6: usually -1
     * p7: usually 0
     * p8: unknown label
     * p9: unknown label
     * background: Set to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.
     * errorCode: Error code, shown at the bottom left if set to value other than 0.
     *
     * instructionalKey enum list:
     * Buttons = {
     * Empty = 0,
     * Select = 1, -- (RETURN)
     * Ok = 2, -- (RETURN)
     * Yes = 4, -- (RETURN)
     * Back = 8, -- (ESC)
     * Cancel = 16, -- (ESC)
     * No = 32, -- (ESC)
     * RetrySpace = 64, -- (SPACE)
     * Restart = 128, -- (SPACE)
     * Skip = 256, -- (SPACE)
     * Quit = 512, -- (ESC)
     * Adjust = 1024, -- (ARROWS)
     * SpaceKey = 2048, -- (SPACE)
     * Share = 4096, -- (SPACE)
     * SignIn = 8192, -- (SPACE)
     * Continue = 16384, -- (RETURN)
     * AdjustLeftRight = 32768, -- (SCROLL L/R)
     * AdjustUpDown = 65536, -- (SCROLL U/D)
     * Overwrite = 131072, -- (SPACE)
     * SocialClubSignup = 262144, -- (RETURN)
     * Confirm = 524288, -- (RETURN)
     * Queue = 1048576, -- (RETURN)
     * RetryReturn = 2097152, -- (RETURN)
     * BackEsc = 4194304, -- (ESC)
     * SocialClub = 8388608, -- (RETURN)
     * Spectate = 16777216, -- (SPACE)
     * OkEsc = 33554432, -- (ESC)
     * CancelTransfer = 67108864, -- (ESC)
     * LoadingSpinner = 134217728,
     * NoReturnToGTA = 268435456, -- (ESC)
     * CancelEsc = 536870912, -- (ESC)
     * }
     *
     * Alt = {
     * Empty = 0,
     * No = 1, -- (SPACE)
     * Host = 2, -- (ESC)
     * SearchForJob = 4, -- (RETURN)
     * ReturnKey = 8, -- (TURN)
     * Freemode = 16, -- (ESC)
     * }
     *
     * Example: https://i.imgur.com/TvmNF4k.png
     *
     * Hash: 0x15803FEC3B9A872B | Since: 573
     */
    function setWarningMessageWithHeaderAndSubstringFlagsExtended(labelTitle: string, labelMessage: string, labelMessage2: string, background: boolean, errorCode: number): void;
    /**
     * Has to do with the confirmation overlay (E.g. confirm exit)
     *
     * Hash: 0x81DF9ABA6C83DFF9 | Since: 1290
     */
    function getWarningScreenMessageHash(): number;
    /**
     * Some sort of list displayed in a warning message. Yet unknown how to prevent repeating.
     * Param names copied from the corresponding scaleform function "SET_LIST_ROW".
     * Example: https://i.imgur.com/arKvOYx.png
     *
     * Hash: 0x0C5A80A9E096D529 | Since: 323
     */
    function setWarningMessageOptionItems(index: number, name: string, cash: number, rp: number, lvl: number, colour: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDAF87174BE7454FF | Since: 323
     */
    function setWarningMessageOptionHighlight(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6EF54AB721DC6242 | Since: 323
     */
    function removeWarningMessageOptionItems(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE18B138FABC53103 | Since: 323
     */
    function isWarningMessageActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7792424AA0EAC32E | Since: 323
     */
    function clearDynamicPauseMenuErrorMessage(): void;
    /**
     * If toggle is true, the map is shown in full screen
     * If toggle is false, the map is shown in normal mode
     *
     * Hash: 0x5354C5BA2EA868A4 | Since: 323
     */
    function customMinimapSetActive(toggle: boolean): void;
    /**
     * Sets the sprite of the next BLIP_GALLERY blip, values used in the native scripts: 143 (ObjectiveBlue), 144 (ObjectiveGreen), 145 (ObjectiveRed), 146 (ObjectiveYellow).
     *
     * Hash: 0x1EAE6DD17B7A5EFA | Since: 323
     */
    function customMinimapSetBlipObject(spriteId: number): void;
    /**
     * Add a BLIP_GALLERY at the specific coordinate. Used in fm_maintain_transition_players to display race track points.
     *
     * Hash: 0x551DF99658DB6EE8 | Since: 323
     */
    function customMinimapCreateBlip(pos: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0x2708FC083123F9FF | Since: 323
     */
    function customMinimapClearBlips(): void;
    /**
     * Doesn't actually return anything.
     *
     * Hash: 0x1121BFA1A1A522A8 | Since: 323
     */
    function forceSonarBlipsThisFrame(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3F0CF9CB7E589B88 | Since: 463
     */
    function getNorthBlidIndex(): number;
    /**
     * Toggles whether or not name labels are shown on the expanded minimap next to player blips, like in GTA:O.
     * Doesn't need to be called every frame.
     * Preview: https://i.imgur.com/DfqKWfJ.png
     *
     * Make sure to call SET_BLIP_CATEGORY with index 7 for this to work on the desired blip.
     *
     * Hash: 0x82CEDC33687E1F50 | Since: 323
     */
    function displayPlayerNameTagsOnBlips(toggle: boolean): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0x211C4EF450086857 | Since: 323
     */
    function drawFrontendBackgroundThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF4F34A85CA2970C | Since: 323
     */
    function drawOverFadeThisFrame(): void;
    /**
     * Does stuff like this:
     * gyazo.com/7fcb78ea3520e3dbc5b2c0c0f3712617
     *
     * Example:
     * int GetHash = GET_HASH_KEY("fe_menu_version_corona_lobby");
     * ACTIVATE_FRONTEND_MENU(GetHash, 0, -1);
     *
     * BOOL p1 is a toggle to define the game in pause.
     * int p2 is unknown but -1 always works, not sure why though.
     *
     * [30/03/2017] ins1de :
     *
     * the int p2 is actually a component variable. When the pause menu is visible, it opens the tab related to it.
     *
     * Example : Function.Call(Hash.ACTIVATE_FRONTEND_MENU,-1171018317, 0, 42);
     * Result : Opens the "Online" tab without pausing the menu, with -1 it opens the map.Below is a list of all known Frontend Menu Hashes.
     * - FE_MENU_VERSION_SP_PAUSE
     * - FE_MENU_VERSION_MP_PAUSE
     * - FE_MENU_VERSION_CREATOR_PAUSE
     * - FE_MENU_VERSION_CUTSCENE_PAUSE
     * - FE_MENU_VERSION_SAVEGAME
     * - FE_MENU_VERSION_PRE_LOBBY
     * - FE_MENU_VERSION_LOBBY
     * - FE_MENU_VERSION_MP_CHARACTER_SELECT
     * - FE_MENU_VERSION_MP_CHARACTER_CREATION
     * - FE_MENU_VERSION_EMPTY
     * - FE_MENU_VERSION_EMPTY_NO_BACKGROUND
     * - FE_MENU_VERSION_TEXT_SELECTION
     * - FE_MENU_VERSION_CORONA
     * - FE_MENU_VERSION_CORONA_LOBBY
     * - FE_MENU_VERSION_CORONA_JOINED_PLAYERS
     * - FE_MENU_VERSION_CORONA_INVITE_PLAYERS
     * - FE_MENU_VERSION_CORONA_INVITE_FRIENDS
     * - FE_MENU_VERSION_CORONA_INVITE_CREWS
     * - FE_MENU_VERSION_CORONA_INVITE_MATCHED_PLAYERS
     * - FE_MENU_VERSION_CORONA_INVITE_LAST_JOB_PLAYERS
     * - FE_MENU_VERSION_CORONA_RACE
     * - FE_MENU_VERSION_CORONA_BETTING
     * - FE_MENU_VERSION_JOINING_SCREEN
     * - FE_MENU_VERSION_LANDING_MENU
     * - FE_MENU_VERSION_LANDING_KEYMAPPING_MENU
     *
     * Hash: 0xEF01D36B9C9D0C7B | Since: 323
     */
    function activateFrontendMenu(menuhash: number | string, togglePause: boolean, component: number): void;
    /**
     * Before using this native click the native above and look at the decription.
     *
     * Example:
     * int GetHash = Function.Call<int>(Hash.GET_HASH_KEY, "fe_menu_version_corona_lobby");
     * Function.Call(Hash.ACTIVATE_FRONTEND_MENU, GetHash, 0, -1);
     * Function.Call(Hash.RESTART_FRONTEND_MENU(GetHash, -1);
     *
     * This native refreshes the frontend menu.
     *
     * p1 = Hash of Menu
     * p2 = Unknown but always works with -1.
     *
     * Hash: 0x10706DC6AD2D49C0 | Since: 323
     */
    function restartFrontendMenu(menuHash: number | string): void;
    /**
     * `if (HUD::GET_CURRENT_FRONTEND_MENU_VERSION() == joaat("fe_menu_version_empty_no_background"))`
     *
     * Hash: 0x2309595AD6145265 | Since: 323
     */
    function getCurrentFrontendMenuVersion(): number;
    /**
     * No comment provided
     *
     * Hash: 0xDF47FC56C71569CF | Since: 323
     */
    function setPauseMenuActive(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6D3465A73092F0E6 | Since: 323
     */
    function disableFrontendThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBA751764F0821256 | Since: 323
     */
    function suppressFrontendRenderingThisFrame(): void;
    /**
     * Allows opening the pause menu this frame, when the player is dead.
     *
     * Hash: 0xCC3FDDED67BCFC63 | Since: 323
     */
    function allowPauseWhenNotInStateOfPlayThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x745711A75AB09277 | Since: 323
     */
    function setFrontendActive(active: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB0034A223497FFCB | Since: 323
     */
    function isPauseMenuActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2F057596F2BD0061 | Since: 323
     */
    function isStorePendingNetworkShutdownToOpen(): boolean;
    /**
     * Returns:
     *
     * 0
     * 5
     * 10
     * 15
     * 20
     * 25
     * 30
     * 35
     *
     *
     * Hash: 0x272ACD84970869C5 | Since: 323
     */
    function getPauseMenuState(): number;
    /**
     * No comment provided
     *
     * Hash: 0x5BFF36D6ED83E0AE | Since: 323
     */
    function getPauseMenuPosition(): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x1C491717107431C7 | Since: 323
     */
    function isPauseMenuRestarting(): boolean;
    /**
     * Not present in retail version of the game, actual definiton seems to be
     * _LOG_DEBUG_INFO(const char* category, const char* debugText);
     *
     * Hash: 0x2162C446DFDF38FD | Since: 323
     */
    function forceScriptedGfxWhenFrontendActive(): void;
    /**
     * No comment provided
     *
     * Hash: 0x77F16B447824DA6C | Since: 323
     */
    function pauseMenuceptionGoDeeper(page: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCDCA26E80FAECB8F | Since: 323
     */
    function pauseMenuceptionTheKick(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2DE6C5E2E996F178 | Since: 372
     */
    function pauseToggleFullscreenMap(): void;
    /**
     * Activates the specified frontend menu context.
     * pausemenu.xml defines some specific menu options using 'context'. Context is basically a 'condition'.
     * The `*ALL*` part of the context means that whatever is being defined, will be active when any or all of those conditions after `*ALL*` are met.
     * The `*NONE*` part of the context section means that whatever is being defined, will NOT be active if any or all of the conditions after `*NONE*` are met.
     * This basically allows you to hide certain menu sections, or things like instructional buttons.
     *
     * Hash: 0xDD564BDD0472C936 | Since: 323
     */
    function pauseMenuActivateContext(contextHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x444D8CF241EC25C5 | Since: 323
     */
    function pauseMenuDeactivateContext(contextHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x84698AB38D0C6636 | Since: 323
     */
    function pauseMenuIsContextActive(contextHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2A25ADC48F87841F | Since: 323
     */
    function pauseMenuIsContextMenuActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDE03620F8703A9DF | Since: 323
     */
    function pauseMenuGetHairColourIndex(): number;
    /**
     * No comment provided
     *
     * Hash: 0x359AF31A4B52F5ED | Since: 323
     */
    function pauseMenuGetMouseHoverIndex(): number;
    /**
     * No comment provided
     *
     * Hash: 0x13C4B962653A5280 | Since: 323
     */
    function pauseMenuGetMouseHoverUniqueId(): number;
    /**
     * No comment provided
     *
     * Hash: 0xC8E1071177A23BE5 | Since: 323
     */
    function pauseMenuGetMouseClickEvent(): [boolean, any, any, any];
    /**
     * No comment provided
     *
     * Hash: 0x4895BDEA16E7C080 | Since: 323
     */
    function pauseMenuRedrawInstructionalButtons(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC78E239AC5B2DDB9 | Since: 323
     */
    function pauseMenuSetBusySpinner(position: number, spinnerIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF06EBB91A81E09E3 | Since: 323
     */
    function pauseMenuSetWarnOnTabChange(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3BAB9A4E4F2FF5C7 | Since: 323
     */
    function isFrontendReadyForControl(): boolean;
    /**
     * Disables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard. Not sure about controller. Does not disable mouse controls. No need to call this every tick.
     *
     * To enable the keys again, use `0x14621BB1DF14E2B2`.
     *
     * Hash: 0xEC9264727EEC0F28 | Since: 323
     */
    function takeControlOfFrontend(): void;
    /**
     * Enables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard if they were disabled using the native below.
     * To disable the keys, use `0xEC9264727EEC0F28`
     *
     * Hash: 0x14621BB1DF14E2B2 | Since: 323
     */
    function releaseControlOfFrontend(): void;
    /**
     * No comment provided
     *
     * Hash: 0x66E7CB63C97B7D20 | Since: 323
     */
    function codeWantsScriptToTakeControl(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x593FEAE1F73392D4 | Since: 323
     */
    function getScreenCodeWantsScriptToControl(): number;
    /**
     * No comment provided
     *
     * Hash: 0x4E3CD0EF8A489541 | Since: 323
     */
    function isNavigatingMenuContent(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF284AC67940C6812 | Since: 323
     */
    function hasMenuTriggerEventOccurred(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2E22FEFA0100275E | Since: 323
     */
    function hasMenuLayoutChangedEventOccurred(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0CF54F20DE43879C | Since: 323
     */
    function setSavegameListUniqueId(): void;
    /**
     * No comment provided
     *
     * Hash: 0x36C1451A88A09630 | Since: 323
     */
    function getMenuTriggerEventDetails(): [number, number];
    /**
     * lastItemMenuId: this is the menuID of the last selected item minus 1000 (lastItem.menuID - 1000)
     * selectedItemMenuId: same as lastItemMenuId except for the currently selected menu item
     * selectedItemUniqueId: this is uniqueID of the currently selected menu item
     *
     * when the pausemenu is closed:
     * lastItemMenuId = -1
     * selectedItemMenuId = -1
     * selectedItemUniqueId = 0
     *
     * when the header gains focus:
     * lastItemMenuId updates as normal or 0 if the pausemenu was just opened
     * selectedItemMenuId becomes a unique id for the pausemenu page that focus was taken from (?) or 0 if the pausemenu was just opened
     * selectedItemUniqueId = -1
     *
     * when focus is moved from the header to a pausemenu page:
     * lastItemMenuId becomes a unique id for the pausemenu page that focus was moved to (?)
     * selectedItemMenuId = -1
     * selectedItemUniqueId updates as normal
     *
     * Hash: 0x7E17BE53E1AAABAF | Since: 323
     */
    function getMenuLayoutChangedEventDetails(): [number, number, number];
    /**
     * No comment provided
     *
     * Hash: 0xA238192F33110615 | Since: 323
     */
    function getPmPlayerCrewColor(): [boolean, number, number, number];
    /**
     * No comment provided
     *
     * Hash: 0xEF4CED81CEBEDC6D | Since: 323
     */
    function getMenuPedIntStat(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xCA6B2F7CE32AB653 | Since: 323
     */
    function getCharacterMenuPedIntStat(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x90A6526CF0381030 | Since: 323
     */
    function getMenuPedMaskedIntStat(statHash: number | string, mask: number): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x24A49BEAF468DC90 | Since: 323
     */
    function getCharacterMenuPedMaskedIntStat(statHash: number | string, mask: number): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x5FBD7095FE7AE57F | Since: 323
     */
    function getMenuPedFloatStat(statHash: number | string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x8F08017F9D7C47BD | Since: 323
     */
    function getCharacterMenuPedFloatStat(statHash: number): [boolean, number];
    /**
     * p0 was always 0xAE2602A3.
     *
     * Hash: 0x052991E59076E4E4 | Since: 323
     */
    function getMenuPedBoolStat(statHash: number | string): [boolean, boolean];
    /**
     * No comment provided
     *
     * Hash: 0x5E62BE5DC58E9E06 | Since: 323
     */
    function clearPedInPauseMenu(): void;
    /**
     * p1 is either 1 or 2 in the PC scripts.
     *
     * Hash: 0xAC0BFBDC3BE00E14 | Since: 323
     */
    function givePedToPauseMenu(ped: number | Ped): void;
    /**
     * Toggles the light state for the pause menu ped in frontend menus.
     *
     * This is used by R* in combination with `SET_PAUSE_MENU_PED_SLEEP_STATE` to toggle the "offline" or "online" state in the "friends" tab of the pause menu in GTA Online.
     *
     *
     * Example:
     * Lights On: https://vespura.com/hi/i/2019-04-01_16-09_540ee_1015.png
     * Lights Off: https://vespura.com/hi/i/2019-04-01_16-10_8b5e7_1016.png
     *
     * Hash: 0x3CA6050692BC61B0 | Since: 323
     */
    function setPauseMenuPedLighting(state: boolean): void;
    /**
     * Toggles the pause menu ped sleep state for frontend menus.
     *
     * Example: https://vespura.com/hi/i/2019-04-01_15-51_8ed38_1014.gif
     *
     * `state` 0 will make the ped slowly fall asleep, 1 will slowly wake the ped up.
     *
     * Hash: 0xECF128344E9FF9F1 | Since: 323
     */
    function setPauseMenuPedSleepState(state: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x805D7CBB36FD6C4C | Since: 323
     */
    function openOnlinePoliciesMenu(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF13FE2A80C05C561 | Since: 323
     */
    function areOnlinePoliciesUpToDate(): boolean;
    /**
     * Returns the same as IS_SOCIAL_CLUB_ACTIVE
     *
     * Hash: 0x6F72CD94F7B5B68C | Since: 323
     */
    function isOnlinePoliciesMenuActive(): boolean;
    /**
     * Uses the `SOCIAL_CLUB2` scaleform.
     * menu: GALLERY, MISSIONS, CREWS, MIGRATE, PLAYLISTS, JOBS
     *
     * Hash: 0x75D3691713C3B05A | Since: 323
     */
    function openSocialClubMenu(menu: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD2B32BE3FC1626C6 | Since: 323
     */
    function closeSocialClubMenu(): void;
    /**
     * `HUD::SET_SOCIAL_CLUB_TOUR("Gallery");`
     * `HUD::SET_SOCIAL_CLUB_TOUR("Missions");`
     * `HUD::SET_SOCIAL_CLUB_TOUR("General");`
     * `HUD::SET_SOCIAL_CLUB_TOUR("Playlists");`
     *
     * Hash: 0x9E778248D6685FE0 | Since: 323
     */
    function setSocialClubTour(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC406BE343FC4B9AF | Since: 323
     */
    function isSocialClubActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1185A8087587322C | Since: 323
     */
    function setTextInputBoxEnabled(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8817605C2BA76200 | Since: 323
     */
    function forceCloseTextInputBox(): void;
    /**
     * No comment provided
     *
     * Hash: 0x577599CCED639CA2 | Since: 505
     */
    function setAllowCommaOnTextInput(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6A1738B4323FE2D9 | Since: 573
     */
    function overrideMpTextChatTeamString(gxtEntryHash: number | string): void;
    /**
     * Returns whether or not the text chat (MULTIPLAYER_CHAT Scaleform component) is active.
     *
     * Hash: 0xB118AF58B5F332A1 | Since: 323
     */
    function isMpTextChatTyping(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1AC8F4AD40E22127 | Since: 323
     */
    function closeMpTextChat(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7C226D5346D4D10A | Since: 372
     */
    function mpTextChatIsTeamJob(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF47E567B3630DD12 | Since: 678
     */
    function overrideMpTextChatColor(hudColor: number): void;
    /**
     * Hides the chat history, closes the input box and makes it unable to be opened unless called again with FALSE.
     *
     * Hash: 0x1DB21A44B09E8BA3 | Since: 323
     */
    function mpTextChatDisable(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCEF214315D276FD1 | Since: 323
     */
    function flagPlayerContextInTournament(toggle: boolean): void;
    /**
     * This native turns on the AI blip on the specified ped. It also disappears automatically when the ped is too far or if the ped is dead. You don't need to control it with other natives.
     *
     * See gtaforums.com/topic/884370-native-research-ai-blips for further information.
     *
     * Hash: 0xD30C50DF888D58B5 | Since: 323
     */
    function setPedHasAiBlip(ped: number | Ped, hasCone: boolean): void;
    /**
     * color: see SET_BLIP_COLOUR
     *
     * Hash: 0xB13DCB4C6FAAD238 | Since: 505
     */
    function setPedHasAiBlipWithColour(ped: number | Ped, hasCone: boolean, color: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x15B8ECF844EE67ED | Since: 323
     */
    function doesPedHaveAiBlip(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE52B8E7F85D39A08 | Since: 323
     */
    function setPedAiBlipGangId(ped: number | Ped, gangId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3EED80DFF7325CAA | Since: 323
     */
    function setPedAiBlipHasCone(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0C4BBF625CA98C4E | Since: 323
     */
    function setPedAiBlipForcedOn(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x97C65887D4B37FA9 | Since: 323
     */
    function setPedAiBlipNoticeRange(ped: number | Ped, range: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFCFACD0DB9D7A57D | Since: 877
     */
    function setPedAiBlipSprite(ped: number | Ped, spriteId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7CD934010E115C2C | Since: 323
     */
    function getAiPedPedBlipIndex(ped: number | Ped): number;
    /**
     * Returns the current AI BLIP for the specified ped
     *
     * Hash: 0x56176892826A4FE8 | Since: 323
     */
    function getAiPedVehicleBlipIndex(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xA277800A9EAE340E | Since: 323
     */
    function hasDirectorModeBeenLaunchedByCode(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2632482FD6B9AB87 | Since: 323
     */
    function setDirectorModeLaunchedByScript(): void;
    /**
     * If toggle is true, hides special ability bar / character name in the pause menu
     * If toggle is false, shows special ability bar / character name in the pause menu
     *
     * Hash: 0x808519373FD336A3 | Since: 323
     */
    function setPlayerIsInDirectorMode(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x04655F9D075D0AE5 | Since: 323
     */
    function setDirectorModeAvailable(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x243296A510B562B6 | Since: 2060
     */
    function hidemarkersThisFrame(): void;
}
export declare namespace interior {
    /**
     * No comment provided
     *
     * Hash: 0xF49B58631D9E22D9 | Since: 1493
     */
    function getHeading(interior: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x252BDC06B73FA6EA | Since: 1290
     */
    function getLocationAndNamehash(interior: number): [Vector3, number];
    /**
     * Returns the group ID of the specified interior.
     * 0 = default
     * 1 = subway station, subway tracks, sewers
     * 3 = train tunnel under mirror park
     * 5 = tunnel near del perro
     * 6 = train tunnel near chilliad
     * 7 = train tunnel near josiah
     * 8 = train tunnel in sandy shores
     * 9 = braddock tunnel (near chilliad)
     * 12 = tunnel under fort zancudo
     * 14 = train tunnel under cypress flats
     * 18 = rockford plaza parking garage
     * 19 = arcadius parking garage
     * 20 = union depository parking garage
     * 21 = fib parking garage
     *
     * Hash: 0xE4A84ABF135EF91A | Since: 323
     */
    function getGroupId(interior: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x9E3B3E6D66F6E22F | Since: 323
     */
    function getOffsetFromInWorldCoords(interior: number, pos: Vector3): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xBC72B5D7A1CBD54D | Since: 323
     */
    function isScene(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x26B0E73D7EAAF4D3 | Since: 323
     */
    function isValid(interior: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB365FC0C4E27FFA7 | Since: 323
     */
    function clearRoomForEntity(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x52923C4710DD9907 | Since: 323
     */
    function forceRoomForEntity(entity: number | Entity, interior: number, roomHashKey: number | string): void;
    /**
     * Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.
     *
     * Hash: 0x47C2A06D4F5F424B | Since: 323
     */
    function getRoomKeyFromEntity(entity: number | Entity): number;
    /**
     * `Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY`
     *
     * Hash: 0x399685DB942336BC | Since: 323
     */
    function getKeyForEntityInRoom(entity: number | Entity): number;
    /**
     * Returns the handle of the interior that the entity is in. Returns 0 if outside.
     *
     * Hash: 0x2107BA504071A6BB | Since: 323
     */
    function getFromEntity(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x82EBB79E258FA2B7 | Since: 323
     */
    function retainEntityIn(entity: number | Entity, interior: number): void;
    /**
     * Immediately removes entity from an interior. Like sets entity to `limbo` room.
     *
     * Hash: 0x85D5422B2039A70D | Since: 2189
     */
    function clearStateOfEntity(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x38C1CB1CB119A016 | Since: 1493
     */
    function forceActivatingTrackingOnEntity(): void;
    /**
     * No comment provided
     *
     * Hash: 0x920D853F3E17F1DA | Since: 323
     */
    function forceRoomForGameViewport(interiorID: number, roomHashKey: number | string): void;
    /**
     * Example of use (carmod_shop)
     * `INTERIOR::SET_ROOM_FOR_GAME_VIEWPORT_BY_NAME("V_CarModRoom");`
     *
     * Hash: 0xAF348AFCB575A441 | Since: 323
     */
    function setRoomForGameViewportByName(roomName: string): void;
    /**
     * `Usage: INTERIOR::SET_ROOM_FOR_GAME_VIEWPORT_BY_KEY(INTERIOR::GET_KEY_FOR_ENTITY_IN_ROOM(PLAYER::PLAYER_PED_ID()));`
     *
     * Hash: 0x405DC2AEF6AF95B9 | Since: 323
     */
    function setRoomForGameViewportByKey(roomHashKey: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xA6575914D2A0B450 | Since: 323
     */
    function getRoomKeyForGameViewport(): number;
    /**
     * No comment provided
     *
     * Hash: 0x23B59D8912F94246 | Since: 323
     */
    function clearRoomForGameViewport(): void;
    /**
     * Returns the current interior id from gameplay camera
     *
     * Hash: 0xE7D267EC6CA966C3 | Since: 1604
     */
    function getFromPrimaryView(): number;
    /**
     * Returns interior ID from specified coordinates. If coordinates are outside, then it returns 0.
     *
     * Example for VB.NET
     * Dim interiorID As Integer = Native.Function.Call(Of Integer)(Hash.GET_INTERIOR_AT_COORDS, X, Y, Z)
     *
     * Hash: 0xB0F7F8663821D9C3 | Since: 323
     */
    function getAtCoords(pos: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0x3F6167F351168730 | Since: 323
     */
    function addPickupToRoomByName(pickup: any, roomName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x2CA429C029CCF247 | Since: 323
     */
    function pinInMemory(interior: number): void;
    /**
     * `Does something similar to INTERIOR::DISABLE_INTERIOR.`
     *
     * `You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside.`
     *
     * Hash: 0x261CCE7EED010641 | Since: 323
     */
    function unpin(interior: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6726BDCCC1932F0E | Since: 323
     */
    function isReady(interior: number): boolean;
    /**
     * Only used once in the entire game scripts.
     * Does not actually return anything.
     *
     * Hash: 0x4C2330E61D3DEB56 | Since: 323
     */
    function setInUse(interior: number): boolean;
    /**
     * Returns the interior ID representing the requested interior at that location (if found?). The supplied interior string is not the same as the one used to load the interior.
     *
     * `Use: INTERIOR::UNPIN_INTERIOR(INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(x, y, z, interior))`
     *
     * Interior types include: "V_Michael", "V_Franklins", "V_Franklinshouse", etc.. you can find them in the scripts.
     *
     * Not a very useful native as you could just use GET_INTERIOR_AT_COORDS instead and get the same result, without even having to specify the interior type.
     *
     * Hash: 0x05B7A89BD78797FC | Since: 323
     */
    function getAtCoordsWithType(pos: Vector3, interiorType: string): number;
    /**
     * Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
     *
     * Hash: 0xF0F77ADB9F67E79D | Since: 323
     */
    function getAtCoordsWithTypehash(pos: Vector3, typeHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x483ACA1176CA93F1 | Since: 1103
     */
    function activateGroupsUsingCamera(): void;
    /**
     * Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
     *
     * Hash: 0xEEA5AC2EDA7C33E8 | Since: 323
     */
    function isCollisionMarkedOutside(pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEC4CF9FCB29A4424 | Since: 323
     */
    function getFromCollision(pos: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0x7ECDF98587E92DEC | Since: 1604
     */
    function enableStadiumProbesThisFrame(toggle: boolean): void;
    /**
     * More info: http://gtaforums.com/topic/836367-adding-props-to-interiors/
     *
     * Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
     *
     * Hash: 0x55E86AF2712B36A1 | Since: 323
     */
    function activateEntitySet(interior: number, entitySetName: string): void;
    /**
     * Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
     *
     * Hash: 0x420BD37289EEE162 | Since: 323
     */
    function deactivateEntitySet(interior: number, entitySetName: string): void;
    /**
     * Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
     *
     * Hash: 0x35F7DD45E8C0A16D | Since: 323
     */
    function isEntitySetActive(interior: number, entitySetName: string): boolean;
    /**
     * Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
     *
     * Hash: 0xC1F1920BAF281317 | Since: 877
     */
    function setEntitySetTintIndex(interior: number, entitySetName: string, color: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x41F37C3427C75AE0 | Since: 323
     */
    function refresh(interior: number): void;
    /**
     * This is the native that is used to hide the exterior of GTA Online apartment buildings when you are inside an apartment.
     *
     * More info: http://gtaforums.com/topic/836301-hiding-gta-online-apartment-exteriors/
     *
     * Hash: 0xA97F257D0151A6AB | Since: 323
     */
    function enableExteriorCullModelThisFrame(mapObjectHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x50C375537449F369 | Since: 757
     */
    function enableShadowCullModelThisFrame(mapObjectHash: number | string): void;
    /**
     * Example:
     * This removes the interior from the strip club and when trying to walk inside the player just falls:
     *
     * `INTERIOR::DISABLE_INTERIOR(118018, true);`
     *
     * Hash: 0x6170941419D7D8EC | Since: 323
     */
    function disable(interior: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC5115A5A939DD15 | Since: 323
     */
    function isDisabled(interior: number): boolean;
    /**
     * `Does something similar to INTERIOR::DISABLE_INTERIOR`
     *
     * Hash: 0xD9175F941610DB54 | Since: 323
     */
    function cap(interior: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x92BAC8ACF88CEC26 | Since: 323
     */
    function isCapped(interior: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9E6542F0CE8E70A3 | Since: 323
     */
    function disableMetroSystem(toggle: boolean): void;
    /**
     * Jenkins hash _might_ be 0xFC227584.
     *
     * Hash: 0x7241CCB7D020DB69 | Since: 791
     */
    function setIsExteriorOnly(entity: number | Entity, toggle: boolean): void;
}
export declare namespace itemset {
    /**
     * No comment provided
     *
     * Hash: 0x35AD299F50D91B24 | Since: 323
     */
    function create(): number;
    /**
     * No comment provided
     *
     * Hash: 0xDE18220B1C183EDA | Since: 323
     */
    function destroy(itemset: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB1B1EA596344DFAB | Since: 323
     */
    function isValid(itemset: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE3945201F14637DD | Since: 323
     */
    function addTo(item: number, itemset: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x25E68244B0177686 | Since: 323
     */
    function removeFrom(item: number, itemset: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD9127E83ABF7C631 | Since: 323
     */
    function getSize(itemset: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x7A197E2521EE2BAB | Since: 323
     */
    function getIndexedItemIn(index: number, itemset: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x2D0FC594D1E9C107 | Since: 323
     */
    function isIn(item: number, itemset: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x41BC0D722FC04221 | Since: 323
     */
    function clean(itemset: number): void;
}
export declare namespace lobby {
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0xF2CA003F167E21D2 | Since: 323
     */
    function autoMultiplayerMenu(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEF7D17BC6C85264C | Since: 323
     */
    function autoMultiplayerFreemode(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB0C56BD3D808D863 | Since: 323
     */
    function setAutoMultiplayer(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8AA464D4E0F6ACCD | Since: 323
     */
    function autoMultiplayerEvent(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFC309E94546FCDB5 | Since: 323
     */
    function setAutoMultiplayerEvent(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC6DC823253FBB366 | Since: 323
     */
    function autoMultiplayerRandomJob(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC7E7181C09F33B69 | Since: 323
     */
    function setAutoMpRandomJob(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA1E0E893D915215 | Since: 323
     */
    function shutdownSessionClearsAutoMultiplayer(toggle: boolean): void;
}
export declare namespace localization {
    /**
     * Same return values as GET_CURRENT_LANGUAGE
     *
     * Hash: 0x497420E022796B3F | Since: 877
     */
    function getSystemLanguage(): number;
    /**
     * 0 = american (en-US)
     * 1 = french (fr-FR)
     * 2 = german (de-DE)
     * 3 = italian (it-IT)
     * 4 = spanish (es-ES)
     * 5 = brazilian (pt-BR)
     * 6 = polish (pl-PL)
     * 7 = russian (ru-RU)
     * 8 = korean (ko-KR)
     * 9 = chinesetrad (zh-TW)
     * 10 = japanese (ja-JP)
     * 11 = mexican (es-MX)
     * 12 = chinesesimp (zh-CN)
     *
     * Hash: 0x2BDD44CC428A7EAE | Since: 323
     */
    function getCurrentLanguage(): number;
    /**
     * Possible return values: 0, 1, 2
     *
     * Hash: 0xA8AE43AEC1A61314 | Since: 323
     */
    function getSystemDateType(): number;
}
export declare namespace misc {
    /**
     * No comment provided
     *
     * Hash: 0x8B3CA62B1EF19B62 | Since: 323
     */
    function getAllocatedStackSize(): number;
    /**
     * No comment provided
     *
     * Hash: 0xFEAD16FC8F9DFC0F | Since: 323
     */
    function getNumberOfFreeStacksOfThisSize(stackSize: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x444D98F98C11F3EC | Since: 323
     */
    function setRandomSeed(seed: number): void;
    /**
     * Maximum value is 1.
     * At a value of 0 the game will still run at a minimum time scale.
     *
     * Slow Motion 1: 0.6
     * Slow Motion 2: 0.4
     * Slow Motion 3: 0.2
     *
     * Hash: 0x1D408577D440E81E | Since: 323
     */
    function setTimeScale(timeScale: number): void;
    /**
     * If true, the player can't save the game.
     *
     *
     * If the parameter is true, sets the mission flag to true, if the parameter is false, the function does nothing at all.
     *
     * ^ also, if the mission flag is already set, the function does nothing at all
     *
     * Hash: 0xC4301E5121A0ED73 | Since: 323
     */
    function setMissionFlag(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA33CDCCDA663159E | Since: 323
     */
    function getMissionFlag(): boolean;
    /**
     * If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.
     * Does nothing if the mission flag is set.
     *
     * Hash: 0x971927086CFD2158 | Since: 323
     */
    function setRandomEventFlag(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD2D57F1D764117B1 | Since: 323
     */
    function getRandomEventFlag(): boolean;
    /**
     * Returns pointer to an empty string.
     *
     * Hash: 0x24DA7D7667FD7B09 | Since: 323
     */
    function getContentToLoad(): string;
    /**
     * Does nothing (it's a nullsub). Seems to be PS4 specific.
     *
     * Hash: 0x4DCDF92BF64236CD | Since: 323
     */
    function activityFeedCreate(): void;
    /**
     * Does nothing (it's a nullsub). Seems to be PS4 specific.
     *
     * Hash: 0x31125FD509D9043F | Since: 323
     */
    function activityFeedAddSubstringToCaption(): void;
    /**
     * Does nothing (it's a nullsub). Seems to be PS4 specific.
     *
     * Hash: 0xEBD3205A207939ED | Since: 323
     */
    function activityFeedAddLiteralSubstringToCaption(): void;
    /**
     * Does nothing (it's a nullsub). Seems to be PS4 specific.
     *
     * Hash: 0x97E7E2C04245115B | Since: 323
     */
    function activityFeedAddIntToCaption(): void;
    /**
     * Does nothing (it's a nullsub). Seems to be PS4 specific.
     *
     * Hash: 0x916CA67D26FD1E37 | Since: 2060
     */
    function activityFeedLargeImageUrl(): void;
    /**
     * Does nothing (it's a nullsub). Seems to be PS4 specific.
     *
     * Hash: 0xEB078CA2B5E82ADD | Since: 323
     */
    function activityFeedActionStartWithCommandLine(): void;
    /**
     * Does nothing (it's a nullsub). Seems to be PS4 specific.
     *
     * Hash: 0x703CC7F60CBB2B57 | Since: 323
     */
    function activityFeedActionStartWithCommandLineAdd(): void;
    /**
     * Does nothing (it's a nullsub). Seems to be PS4 specific.
     *
     * Hash: 0x8951EB9C6906D3C8 | Since: 323
     */
    function activityFeedPost(): void;
    /**
     * Does nothing (it's a nullsub). Seems to be PS4 specific.
     *
     * Used only once in the scripts (ingamehud) with p0 = "AF_GAMEMODE"
     *
     * Hash: 0xBA4B8D83BDC75551 | Since: 323
     */
    function activityFeedOnlinePlayedWithPost(): void;
    /**
     * Hardcoded to return false.
     *
     * Hash: 0xE8B9C0EC9E183F35 | Since: 323
     */
    function hasResumedFromSuspend(): boolean;
    /**
     * Sets GtaThread+0x14A
     *
     * Hash: 0x65D2EBB47E1CEC21 | Since: 323
     */
    function setScriptHighPrio(toggle: boolean): void;
    /**
     * Sets bit 3 in GtaThread+0x150
     *
     * Hash: 0x6F2135B6129620C1 | Since: 323
     */
    function setThisIsATriggerScript(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8D74E26F54B4E5C3 | Since: 323
     */
    function informCodeOfContentIdOfCurrentUgcMission(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB335F761606DB47C | Since: 323
     */
    function getBaseElementLocationFromMetadataBlock(): [boolean, any, any];
    /**
     * Returns current weather name hash
     *
     * Hash: 0x564B884A05EC45A3 | Since: 323
     */
    function getPrevWeatherTypeHashName(): number;
    /**
     * Returns weather name hash
     *
     * Hash: 0x711327CD09C8F162 | Since: 323
     */
    function getNextWeatherTypeHashName(): number;
    /**
     * No comment provided
     *
     * Hash: 0x44F28F86433B10A9 | Since: 323
     */
    function isPrevWeatherType(weatherType: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2FAA3A30BEC0F25D | Since: 323
     */
    function isNextWeatherType(weatherType: string): boolean;
    /**
     * The following weatherTypes are used in the scripts:
     * "CLEAR"
     * "EXTRASUNNY"
     * "CLOUDS"
     * "OVERCAST"
     * "RAIN"
     * "CLEARING"
     * "THUNDER"
     * "SMOG"
     * "FOGGY"
     * "XMAS"
     * "SNOW"
     * "SNOWLIGHT"
     * "BLIZZARD"
     * "HALLOWEEN"
     * "NEUTRAL"
     *
     * Hash: 0x704983DF373B198F | Since: 323
     */
    function setWeatherTypePersist(weatherType: string): void;
    /**
     * The following weatherTypes are used in the scripts:
     * "CLEAR"
     * "EXTRASUNNY"
     * "CLOUDS"
     * "OVERCAST"
     * "RAIN"
     * "CLEARING"
     * "THUNDER"
     * "SMOG"
     * "FOGGY"
     * "XMAS"
     * "SNOW"
     * "SNOWLIGHT"
     * "BLIZZARD"
     * "HALLOWEEN"
     * "NEUTRAL"
     *
     * Hash: 0xED712CA327900C8A | Since: 323
     */
    function setWeatherTypeNowPersist(weatherType: string): void;
    /**
     * The following weatherTypes are used in the scripts:
     * "CLEAR"
     * "EXTRASUNNY"
     * "CLOUDS"
     * "OVERCAST"
     * "RAIN"
     * "CLEARING"
     * "THUNDER"
     * "SMOG"
     * "FOGGY"
     * "XMAS"
     * "SNOW"
     * "SNOWLIGHT"
     * "BLIZZARD"
     * "HALLOWEEN"
     * "NEUTRAL"
     *
     * Hash: 0x29B487C359E19889 | Since: 323
     */
    function setWeatherTypeNow(weatherType: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xFB5045B7C42B75BF | Since: 323
     */
    function setWeatherTypeOvertimePersist(weatherType: string, time: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8B05F884CF7E8020 | Since: 323
     */
    function setRandomWeatherType(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCCC39339BEF76CF5 | Since: 323
     */
    function clearWeatherTypePersist(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0CF97F497FE7D048 | Since: 1103
     */
    function clearWeatherTypeNowPersistNetwork(milliseconds: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF3BBE884A14BB413 | Since: 323
     */
    function getCurrWeatherState(): [number, number, number];
    /**
     * Mixes two weather types. If percentWeather2 is set to 0.0f, then the weather will be entirely of weatherType1, if it is set to 1.0f it will be entirely of weatherType2. If it's set somewhere in between, there will be a mixture of weather behaviors. To test, try this in the RPH console, and change the float to different values between 0 and 1:
     *
     * execute "NativeFunction.Natives.x578C752848ECFA0C(Game.GetHashKey(""RAIN""), Game.GetHashKey(""SMOG""), 0.50f);
     *
     * Note that unlike most of the other weather natives, this native takes the hash of the weather name, not the plain string. These are the weather names and their hashes:
     *
     * CLEAR  0x36A83D84
     * EXTRASUNNY  0x97AA0A79
     * CLOUDS  0x30FDAF5C
     * OVERCAST    0xBB898D2D
     * RAIN    0x54A69840
     * CLEARING    0x6DB1A50D
     * THUNDER 0xB677829F
     * SMOG    0x10DCF4B5
     * FOGGY   0xAE737644
     * XMAS    0xAAC9C895
     * SNOWLIGHT   0x23FB812B
     * BLIZZARD    0x27EA2814
     *
     *
     *
     *
     *
     * \/\* OLD INVALID INFO BELOW \*\/
     * Not tested. Based purely on disassembly. Instantly sets the weather to sourceWeather, then transitions to targetWeather over the specified transitionTime in seconds.
     *
     * If an invalid hash is specified for sourceWeather, the current weather type will be used.
     * If an invalid hash is specified for targetWeather, the next weather type will be used.
     * If an invalid hash is specified for both sourceWeather and targetWeather, the function just changes the transition time of the current transition.
     *
     * Hash: 0x578C752848ECFA0C | Since: 323
     */
    function setCurrWeatherState(weatherType1: number | string, weatherType2: number | string, percentWeather2: number): void;
    /**
     * Appears to have an optional bool parameter that is unused in the scripts.
     *
     * If you pass true, something will be set to zero.
     *
     * Hash: 0xA43D5C6FE51ADBEF | Since: 323
     */
    function setOverrideWeather(weatherType: string): void;
    /**
     * Identical to SET_OVERRIDE_WEATHER but has an additional BOOL param that sets some weather var to 0 if true
     *
     * Hash: 0x1178E104409FE58C | Since: 2189
     */
    function setOverrideWeatherex(weatherType: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x338D2E3477711050 | Since: 323
     */
    function clearOverrideWeather(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB8F87EAD7533B176 | Since: 323
     */
    function waterOverrideSetShorewaveamplitude(amplitude: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC3EAD29AB273ECE8 | Since: 323
     */
    function waterOverrideSetShorewaveminamplitude(minAmplitude: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA7A1127490312C36 | Since: 323
     */
    function waterOverrideSetShorewavemaxamplitude(maxAmplitude: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x31727907B2C43C55 | Since: 323
     */
    function waterOverrideSetOceannoiseminamplitude(minAmplitude: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x405591EC8FD9096D | Since: 323
     */
    function waterOverrideSetOceanwaveamplitude(amplitude: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF751B16FB32ABC1D | Since: 323
     */
    function waterOverrideSetOceanwaveminamplitude(minAmplitude: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB3E6360DDE733E82 | Since: 323
     */
    function waterOverrideSetOceanwavemaxamplitude(maxAmplitude: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7C9C0B1EEB1F9072 | Since: 323
     */
    function waterOverrideSetRipplebumpiness(bumpiness: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6216B116083A7CB4 | Since: 323
     */
    function waterOverrideSetRippleminbumpiness(minBumpiness: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9F5E6BB6B34540DA | Since: 323
     */
    function waterOverrideSetRipplemaxbumpiness(maxBumpiness: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB9854DFDE0D833D6 | Since: 323
     */
    function waterOverrideSetRippledisturb(disturb: number): void;
    /**
     * This seems to edit the water wave, intensity around your current location.
     *
     * 0.0f = Normal
     * 1.0f = So Calm and Smooth, a boat will stay still.
     * 3.0f = Really Intense.
     *
     * Hash: 0xC54A08C85AE4D410 | Since: 323
     */
    function waterOverrideSetStrength(strength: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA8434F1DFF41D6E7 | Since: 323
     */
    function waterOverrideFadeIn(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC3C221ADDDE31A11 | Since: 323
     */
    function waterOverrideFadeOut(): void;
    /**
     * Sets the the normalized wind speed value. The wind speed clamps always at 12.0, SET_WIND sets the wind in a percentage, 0.0 is 0 and 1.0 is 12.0. Setting this value to a negative number resumes the random wind speed changes provided by the game.
     *
     * Hash: 0xAC3A74E8384A9919 | Since: 323
     */
    function setWind(speed: number): void;
    /**
     * Using this native will set the absolute wind speed value. The wind speed clamps to a range of 0.0- 12.0. Setting this value to a negative number resumes the random wind speed changes provided by the game.
     *
     * Hash: 0xEE09ECEDBABE47FC | Since: 323
     */
    function setWindSpeed(speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA8CF1CC0AFCD3F12 | Since: 323
     */
    function getWindSpeed(): number;
    /**
     * The wind direction in radians
     * 180 degrees (PI), wind will blow from the south. Setting this value to a negative number resumes the random wind direction changes provided by the game.
     *
     * Hash: 0xEB0F4468467B4528 | Since: 323
     */
    function setWindDirection(direction: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F400FEF721170DA | Since: 323
     */
    function getWindDirection(): Vector3;
    /**
     * With an `intensity` higher than `0.5f`, only the creation of puddles gets faster, rain and rain sound won't increase after that.
     * With an `intensity` of `0.0f` rain and rain sounds are disabled and there won't be any new puddles.
     * To use the rain intensity of the current weather, call this native with `-1f` as `intensity`.
     *
     * Hash: 0x643E26EA6E024D92 | Since: 323
     */
    function setRain(intensity: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x96695E368AD855F3 | Since: 323
     */
    function getRainLevel(): number;
    /**
     * No comment provided
     *
     * Hash: 0x7F06937B0CDCBC1A | Since: 1868
     */
    function setSnow(level: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC5868A966E5BE3AE | Since: 323
     */
    function getSnowLevel(): number;
    /**
     * creates single lightning+thunder at random position
     *
     * Hash: 0xF6062E089251C898 | Since: 323
     */
    function forceLightningFlash(): void;
    /**
     * No comment provided
     *
     * Hash: 0x02DEAAC8F8EA7FE7 | Since: 323
     */
    function setCloudSettingsOverride(): void;
    /**
     * No comment provided
     *
     * Hash: 0x11B56FBBF7224868 | Since: 323
     */
    function preloadCloudHat(name: string): void;
    /**
     * The following cloudhats are useable:
     * altostratus
     * Cirrus
     * cirrocumulus
     * Clear 01
     * Cloudy 01
     * Contrails
     * Horizon
     * horizonband1
     * horizonband2
     * horizonband3
     * horsey
     * Nimbus
     * Puffs
     * RAIN
     * Snowy 01
     * Stormy 01
     * stratoscumulus
     * Stripey
     * shower
     * Wispy
     *
     *
     * Hash: 0xFC4842A34657BFCB | Since: 323
     */
    function loadCloudHat(name: string, transitionTime: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA74802FB8D0B7814 | Since: 323
     */
    function unloadCloudHat(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x957E790EA1727B64 | Since: 323
     */
    function unloadAllCloudHats(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF36199225D6D8C86 | Since: 323
     */
    function setCloudsAlpha(opacity: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x20AC25E781AE4A84 | Since: 323
     */
    function getCloudsAlpha(): number;
    /**
     * No comment provided
     *
     * Hash: 0x9CD27B0045628463 | Since: 323
     */
    function getGameTimer(): number;
    /**
     * No comment provided
     *
     * Hash: 0x15C40837039FFAF7 | Since: 323
     */
    function getFrameTime(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE599A503B3837E1B | Since: 323
     */
    function getSystemTimeStep(): number;
    /**
     * No comment provided
     *
     * Hash: 0xFC8202EFC642E6F2 | Since: 323
     */
    function getFrameCount(): number;
    /**
     * No comment provided
     *
     * Hash: 0x313CE5879CEB6FCD | Since: 323
     */
    function getRandomFloatInRange(startRange: number, endRange: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xD53343AA4FB7DD28 | Since: 323
     */
    function getRandomIntInRange(startRange: number, endRange: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xF2D49816A804D134 | Since: 1734
     */
    function getRandomMwcIntInRange(startRange: number, endRange: number): number;
    /**
     * Gets the ground elevation at the specified position. Note that if the specified position is below ground level, the function will output zero!
     *
     * x: Position on the X-axis to get ground elevation at.
     * y: Position on the Y-axis to get ground elevation at.
     * z: Position on the Z-axis to get ground elevation at.
     * groundZ: The ground elevation at the specified position.
     * ignoreWater: Nearly always 0, very rarely 1 in the scripts: https://gfycat.com/NiftyTatteredCricket
     *
     * Bear in mind this native can only calculate the elevation when the coordinates are within the client's render distance.
     *
     * Hash: 0xC906A7DAB05C8D2B | Since: 323
     */
    function getGroundZFor3dCoord(pos: Vector3, ignoreWater: boolean): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x8BDC7BFC57A81E76 | Since: 323
     */
    function getGroundZAndNormalFor3dCoord(pos: Vector3): [boolean, number, Vector3];
    /**
     * No comment provided
     *
     * Hash: 0x9E82F0F362881B29 | Since: 505
     */
    function getGroundZExcludingObjectsFor3dCoord(pos: Vector3): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xC843060B5765DCE7 | Since: 323
     */
    function asin(): number;
    /**
     * No comment provided
     *
     * Hash: 0x1D08B970013C34B6 | Since: 323
     */
    function acos(): number;
    /**
     * No comment provided
     *
     * Hash: 0x632106CC96E82E91 | Since: 323
     */
    function tan(): number;
    /**
     * No comment provided
     *
     * Hash: 0xA9D1795CD5043663 | Since: 323
     */
    function atan(): number;
    /**
     * No comment provided
     *
     * Hash: 0x8927CBF9D22261A4 | Since: 323
     */
    function atan2(): number;
    /**
     * Returns the distance between two three-dimensional points, optionally ignoring the Z values.
     * If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.
     *
     * `Consider using this faster native instead: SYSTEM::VDIST - DVIST always takes in consideration the 3D coordinates.`
     *
     * Hash: 0xF1B760881820C952 | Since: 323
     */
    function getDistanceBetweenCoords(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, useZ: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x186FC4BE848E1C92 | Since: 323
     */
    function getAngleBetween2dVectors(x1: number, y1: number, x2: number, y2: number): number;
    /**
     * dx = x1 - x2
     * dy = y1 - y2
     *
     * Hash: 0x2FFB6B224F4B2926 | Since: 323
     */
    function getHeadingFromVector2d(dx: number, dy: number): number;
    /**
     * returns a float between 0.0 and 1.0, clamp: sets whether the product should be clamped between the given coordinates
     *
     * Hash: 0x7F8F6405F4777AF6 | Since: 323
     */
    function getRatioOfClosestPointOnLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, clamp: boolean): number;
    /**
     * clamp: sets whether the product should be clamped between the given coordinates
     *
     * Hash: 0x21C235BC64831E5A | Since: 323
     */
    function getClosestPointOnLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, clamp: boolean): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xF56DFB7B61BE7276 | Since: 323
     */
    function getLinePlaneIntersection(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xA0AD167E4B39D9A2 | Since: 2189
     */
    function getPointAreaOverlap(): boolean;
    /**
     * This sets bit [offset] of [address] to on.
     *
     * The offsets used are different bits to be toggled on and off, typically there is only one address used in a script.
     *
     * Example:
     * `MISC::SET_BIT(&bitAddress, 1);`
     *
     * To check if this bit has been enabled:
     * `MISC::IS_BIT_SET(bitAddress, 1); // will return 1 afterwards`
     *
     * Please note, this method may assign a value to [address] when used.
     *
     * Hash: 0x933D6A9EEC1BACD0 | Since: 323
     */
    function setBit(offset: number): number;
    /**
     * This sets bit [offset] of [address] to off.
     *
     * Example:
     * `MISC::CLEAR_BIT(&bitAddress, 1);`
     *
     * To check if this bit has been enabled:
     * `MISC::IS_BIT_SET(bitAddress, 1); // will return 0 afterwards`
     *
     * Hash: 0xE80492A9AC099A93 | Since: 323
     */
    function clearBit(offset: number): number;
    /**
     * This native converts its past string to hash. It is hashed using jenkins one at a time method.
     *
     * Hash: 0xD24D37CC275948CC | Since: 323
     */
    function getHashKey(_string: string): number;
    /**
     * This native always come right before SET_ENTITY_QUATERNION where its final 4 parameters are SLERP_NEAR_QUATERNION p9 to p12
     *
     * Hash: 0xF2F6A2FA49278625 | Since: 323
     */
    function slerpNearQuaternion(t: number, pos: Vector3, w: number, x1: number, y1: number, z1: number, w1: number): [number, number, number, number];
    /**
     * No comment provided
     *
     * Hash: 0xA61B4DF533DCB56E | Since: 323
     */
    function isAreaOccupied(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x39455BF4F4F55186 | Since: 1868
     */
    function isAreaOccupiedSlow(): boolean;
    /**
     * `range`: The range, seems to not be very accurate during testing.
     * `p4`: Unknown, when set to true it seems to always return true no matter what I try.
     * `checkVehicle`: Check for any vehicles in that area.
     * `checkPeds`: Check for any peds in that area.
     * `ignoreEntity`: This entity will be ignored if it's in the area. Set to 0 if you don't want to exclude any entities.
     * The BOOL parameters that are documented have not been confirmed. They are just documented from what I've found during testing. They may not work as expected in all cases.
     *
     * Returns true if there is anything in that location matching the provided parameters.
     *
     * Hash: 0xADCDE75E1C60F32D | Since: 323
     */
    function isPositionOccupied(pos: Vector3, range: number, checkVehicles: boolean, checkPeds: boolean, ignoreEntity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE54E209C35FFA18D | Since: 323
     */
    function isPointObscuredByAMissionEntity(): boolean;
    /**
     * Example: CLEAR_AREA(0, 0, 0, 30, true, false, false, false);
     *
     * Hash: 0xA56F01F3765B93A0 | Since: 323
     */
    function clearArea(pos: Vector3, radius: number, ignoreCopCars: boolean, ignoreObjects: boolean): void;
    /**
     * `MISC::CLEAR_AREA_LEAVE_VEHICLE_HEALTH(x, y, z, radius, false, false, false, false); seem to make all objects go away, peds, vehicles etc. All booleans set to true doesn't seem to change anything.`
     *
     * Hash: 0x957838AAF91BD12D | Since: 323
     */
    function clearAreaLeaveVehicleHealth(pos: Vector3, radius: number): void;
    /**
     * Example:
     * CLEAR_AREA_OF_VEHICLES(0.0f, 0.0f, 0.0f, 10000.0f, false, false, false, false, false, false);
     *
     * Hash: 0x01C7B9B38428AEB6 | Since: 323
     */
    function clearAreaOfVehicles(pos: Vector3, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x11DB3500F042A8AA | Since: 323
     */
    function clearAngledAreaOfVehicles(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): void;
    /**
     * I looked through the PC scripts that this site provides you with a link to find. It shows the last param mainly uses, (0, 2, 6, 16, and 17) so I am going to assume it is a type of flag.
     *
     * Hash: 0xDD9B9B385AAC7F5B | Since: 323
     */
    function clearAreaOfObjects(pos: Vector3, radius: number, flags: number): void;
    /**
     * Example:       CLEAR_AREA_OF_PEDS(0, 0, 0, 10000, 1);
     *
     * Hash: 0xBE31FD6CE464AC59 | Since: 323
     */
    function clearAreaOfPeds(pos: Vector3, radius: number, flags: number): void;
    /**
     * flags appears to always be 0
     *
     * Hash: 0x04F8FC8FCF58F88D | Since: 323
     */
    function clearAreaOfCops(pos: Vector3, radius: number, flags: number): void;
    /**
     * flags is usually 0 in the scripts.
     *
     * Hash: 0x0A1CB9094635D1A6 | Since: 323
     */
    function clearAreaOfProjectiles(pos: Vector3, radius: number, flags: number): void;
    /**
     * Possibly used to clear scenario points.
     *
     * Hash: 0x7EC6F9A478A6A512 | Since: 323
     */
    function clearScenarioSpawnHistory(): void;
    /**
     * ignoreVehicle - bypasses vehicle check of the local player (it will not open if you are in a vehicle and this is set to false)
     *
     * Hash: 0xC9BF75D28165FF77 | Since: 323
     */
    function setSaveMenuActive(ignoreVehicle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x397BAA01068BAA96 | Since: 323
     */
    function getStatusOfManualSave(): number;
    /**
     * No comment provided
     *
     * Hash: 0xB938B7E6D3C0620C | Since: 323
     */
    function setCreditsActive(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB51B9AB9EF81868C | Since: 323
     */
    function setCreditsFadeOutWithScreen(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x075F1D57402C93BA | Since: 323
     */
    function haveCreditsReachedEnd(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD19C0826DC20CF1C | Since: 2802
     */
    function areCreditsRunning(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9DC711BC69C548DF | Since: 323
     */
    function terminateAllScriptsWithThisName(scriptName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x9243BAC96D64C050 | Since: 323
     */
    function networkSetScriptIsSafeForNetworkGame(): void;
    /**
     * Returns the index of the newly created hospital spawn point.
     *
     * p3 might be radius?
     *
     * Hash: 0x1F464EF988465A81 | Since: 323
     */
    function addHospitalRestart(pos: Vector3): number;
    /**
     * The game by default has 5 hospital respawn points. Disabling them all will cause the player to respawn at the last position they were.
     *
     * Hash: 0xC8535819C450EBA8 | Since: 323
     */
    function disableHospitalRestart(hospitalIndex: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x452736765B31FC4B | Since: 323
     */
    function addPoliceRestart(): number;
    /**
     * Disables the spawn point at the police house on the specified index.
     *
     * policeIndex: The police house index.
     * toggle: true to enable the spawn point, false to disable.
     *
     * - Nacorpio
     *
     * Hash: 0x23285DED6EBD7EA3 | Since: 323
     */
    function disablePoliceRestart(policeIndex: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x706B5EDCAA7FA663 | Since: 323
     */
    function setRestartCoordOverride(pos: Vector3, heading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA2716D40842EAF79 | Since: 323
     */
    function clearRestartCoordOverride(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2C2B3493FBF51C71 | Since: 323
     */
    function pauseDeathArrestRestart(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x21FFB63D8C615361 | Since: 323
     */
    function ignoreNextRestart(toggle: boolean): void;
    /**
     * Sets whether the game should fade out after the player dies.
     *
     * Hash: 0x4A18E01DF2C87B86 | Since: 323
     */
    function setFadeOutAfterDeath(toggle: boolean): void;
    /**
     * Sets whether the game should fade out after the player is arrested.
     *
     * Hash: 0x1E0B4DC0D990A4E7 | Since: 323
     */
    function setFadeOutAfterArrest(toggle: boolean): void;
    /**
     * Sets whether the game should fade in after the player dies or is arrested.
     *
     * Hash: 0xDA66D2796BA33F12 | Since: 323
     */
    function setFadeInAfterDeathArrest(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF3D78F59DFE18D79 | Since: 323
     */
    function setFadeInAfterLoad(toggle: boolean): void;
    /**
     * returns savehouseHandle
     *
     * Hash: 0xC0714D0A7EEECA54 | Since: 323
     */
    function registerSaveHouse(pos: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0x4F548CABEAE553BC | Since: 323
     */
    function setSaveHouse(savehouseHandle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1162EA8AE9D24EEA | Since: 323
     */
    function overrideSaveHouse(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA4A0065E39C9F25C | Since: 323
     */
    function getSaveHouseDetailsAfterSuccessfulLoad(): [boolean, Vector3, number, boolean, boolean];
    /**
     * No comment provided
     *
     * Hash: 0x50EEAAD86232EE55 | Since: 323
     */
    function doAutoSave(): void;
    /**
     * Returns true if profile setting 208 is equal to 0.
     *
     * Hash: 0x6E04F06094C87047 | Since: 323
     */
    function getIsAutoSaveOff(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x69240733738C19A0 | Since: 323
     */
    function isAutoSaveInProgress(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2107A3773771186D | Since: 323
     */
    function hasCodeRequestedAutosave(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x06462A961E94B67C | Since: 323
     */
    function clearCodeRequestedAutosave(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE0E500246FF73D66 | Since: 323
     */
    function beginReplayStats(): void;
    /**
     * No comment provided
     *
     * Hash: 0x69FE6DC87BD2A5E9 | Since: 323
     */
    function addReplayStatValue(value: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xA23E821FBDF8A5F2 | Since: 323
     */
    function endReplayStats(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD642319C54AADEB6 | Since: 323
     */
    function haveReplayStatsBeenStored(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5B1F2E327B6B6FE1 | Since: 323
     */
    function getReplayStatMissionId(): number;
    /**
     * No comment provided
     *
     * Hash: 0x2B626A0150E4D449 | Since: 323
     */
    function getReplayStatMissionType(): number;
    /**
     * No comment provided
     *
     * Hash: 0xDC9274A7EF6B2867 | Since: 323
     */
    function getReplayStatCount(): number;
    /**
     * No comment provided
     *
     * Hash: 0x8098C8D6597AAE18 | Since: 323
     */
    function getReplayStatAtIndex(index: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x1B1AB132A16FDA55 | Since: 323
     */
    function clearReplayStats(): void;
    /**
     * No comment provided
     *
     * Hash: 0x72DE52178C291CB5 | Since: 323
     */
    function queueMissionRepeatLoad(): boolean;
    /**
     * Shows the screen which is visible before you redo a mission? The game will make a restoration point where you will cameback when the mission is over.
     * Returns 1 if the message isn't currently on screen
     *
     * Hash: 0x44A0BDC559B35F6E | Since: 323
     */
    function queueMissionRepeatSave(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEB2104E905C6F2E9 | Since: 323
     */
    function queueMissionRepeatSaveForBenchmarkTest(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2B5E102E4A42F2BF | Since: 323
     */
    function getStatusOfMissionRepeatSave(): number;
    /**
     * No comment provided
     *
     * Hash: 0x8A75CE2956274ADD | Since: 323
     */
    function isMemoryCardInUse(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x867654CBC7606F2C | Since: 323
     */
    function shootSingleBulletBetweenCoords(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, weaponHash: number | string, ownerPed: number | Ped, isAudible: boolean, isInvisible: boolean, speed: number): void;
    /**
     * entity - entity to ignore
     *
     * Hash: 0xE3A7742E0B7A2F8B | Since: 323
     */
    function shootSingleBulletBetweenCoordsIgnoreEntity(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, weaponHash: number | string, ownerPed: number | Ped, isAudible: boolean, isInvisible: boolean, speed: number, entity: number | Entity): void;
    /**
     * entity - entity to ignore
     * targetEntity - entity to home in on, if the weapon hash provided supports homing
     *
     * Hash: 0xBFE5756E7407064A | Since: 323
     */
    function shootSingleBulletBetweenCoordsIgnoreEntityNew(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, weaponHash: number | string, ownerPed: number | Ped, isAudible: boolean, isInvisible: boolean, speed: number, entity: number | Entity, targetEntity: number | Entity): void;
    /**
     * Gets the dimensions of a model.
     *
     * Calculate (maximum - minimum) to get the size, in which case, Y will be how long the model is.
     *
     * `Example from the scripts: MISC::GET_MODEL_DIMENSIONS(ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), &v_1A, &v_17);`
     *
     * Hash: 0x03E8D3D5F549087A | Since: 323
     */
    function getModelDimensions(modelHash: number | string): [Vector3, Vector3];
    /**
     * Sets a visually fake wanted level on the user interface. Used by Rockstar's scripts to "override" regular wanted levels and make custom ones while the real wanted level and multipliers are still in effect.
     *
     * Max is 6, anything above this makes it just 6. Also the mini-map gets the red & blue flashing effect.
     *
     * Hash: 0x1454F2448DE30163 | Since: 323
     */
    function setFakeWantedLevel(fakeWantedLevel: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4C9296CBCD1B971E | Since: 323
     */
    function getFakeWantedLevel(): number;
    /**
     * No comment provided
     *
     * Hash: 0xF14878FC50BEC6EE | Since: 323
     */
    function usingMissionCreator(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDEA36202FC3382DF | Since: 323
     */
    function allowMissionCreatorWarp(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x19E00D7322C6F85B | Since: 323
     */
    function setMinigameInProgress(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2B4A15E44DE0F478 | Since: 323
     */
    function isMinigameInProgress(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7B30F65D7B710098 | Since: 323
     */
    function isThisAMinigameScript(): boolean;
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0x61A23B7EDA9BDA24 | Since: 323
     */
    function isSniperInverted(): boolean;
    /**
     * Returns true if the game is using the metric measurement system (profile setting 227), false if imperial is used.
     *
     * Hash: 0xD3D15555431AB793 | Since: 323
     */
    function shouldUseMetricMeasurements(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC488FF2356EA7791 | Since: 323
     */
    function getProfileSetting(profileSetting: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x0C515FAB3FF9EA92 | Since: 323
     */
    function areStringsEqual(string1: string, string2: string): boolean;
    /**
     * Compares two strings up to a specified number of characters.
     *
     * Parameters:
     * str1 - String to be compared.
     * str2 - String to be compared.
     * matchCase - Comparison will be case-sensitive.
     * maxLength - Maximum number of characters to compare. A value of -1 indicates an infinite length.
     *
     * Returns:
     * A value indicating the relationship between the strings:
     * <0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'A' < 'B', so result = -1)
     * 0 - The contents of both strings are equal.
     * >0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'B' > 'A', so result = 1)
     *
     * Examples:
     * `MISC::COMPARE_STRINGS("STRING", "string", false, -1); // 0; equal`
     * `MISC::COMPARE_STRINGS("TESTING", "test", false, 4); // 0; equal`
     * `MISC::COMPARE_STRINGS("R2D2", "R2xx", false, 2); // 0; equal`
     * `MISC::COMPARE_STRINGS("foo", "bar", false, -1); // 4; 'f' > 'b'`
     * `MISC::COMPARE_STRINGS("A", "A", true, 1); // 0; equal`
     *
     * When comparing case-sensitive strings, lower-case characters are greater than upper-case characters:
     * `MISC::COMPARE_STRINGS("A", "a", true, 1); // -1; 'A' < 'a'`
     * `MISC::COMPARE_STRINGS("a", "A", true, 1); // 1; 'a' > 'A'`
     *
     * Hash: 0x1E34710ECD4AB0EB | Since: 323
     */
    function compareStrings(str1: string, str2: string, matchCase: boolean, maxLength: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xF0D31AD191A74F87 | Since: 323
     */
    function absi(value: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x73D57CFFDD12C355 | Since: 323
     */
    function absf(value: number): number;
    /**
     * Determines whether there is a sniper bullet within the specified coordinates. The coordinates form an axis-aligned bounding box.
     *
     * Hash: 0xFEFCF11B01287125 | Since: 323
     */
    function isSniperBulletInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    /**
     * Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.
     *
     * - Nacorpio
     *
     *
     * ownedByPlayer = only projectiles fired by the player will be detected.
     *
     * Hash: 0x5270A8FBC098C3F8 | Since: 323
     */
    function isProjectileInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, ownedByPlayer: boolean): boolean;
    /**
     * Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a axis-aligned bounding box.
     *
     * Hash: 0x2E0DC353342C4A6D | Since: 323
     */
    function isProjectileTypeInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, _type: number, ownedByPlayer: boolean): boolean;
    /**
     * See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
     *
     * Hash: 0xF0BC12401061DEA0 | Since: 323
     */
    function isProjectileTypeInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, ownedByPlayer: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x34318593248C8FB2 | Since: 323
     */
    function isProjectileTypeWithinDistance(pos: Vector3, projectileHash: number | string, radius: number, ownedByPlayer: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8D7A43EC6A5FEA45 | Since: 323
     */
    function getCoordsOfProjectileTypeInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, projectileHash: number | string, ownedByPlayer: boolean): [boolean, Vector3];
    /**
     * No comment provided
     *
     * Hash: 0x3DA8C28346B62CED | Since: 2802
     */
    function getCoordsOfProjectileTypeInAngledArea(vecAngledAreaPoint1X: number, vecAngledAreaPoint1Y: number, vecAngledAreaPoint1Z: number, vecAngledAreaPoint2X: number, vecAngledAreaPoint2Y: number, vecAngledAreaPoint2Z: number, distanceOfOppositeFace: number, weaponType: number | string, bIsPlayer: boolean): [boolean, Vector3];
    /**
     * No comment provided
     *
     * Hash: 0xDFB4138EEFED7B81 | Since: 323
     */
    function getCoordsOfProjectileTypeWithinDistance(ped: number | Ped, weaponHash: number | string, distance: number): [boolean, Vector3];
    /**
     * No comment provided
     *
     * Hash: 0x82FDE6A57EE4EE44 | Since: 323
     */
    function getProjectileOfProjectileTypeWithinDistance(ped: number | Ped, weaponHash: number | string, distance: number): [boolean, Vector3, number];
    /**
     * For projectiles, see: IS_PROJECTILE_TYPE_IN_ANGLED_AREA
     * See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
     * Returns True if a bullet, as maintained by a pool within CWeaponManager, has been fired into the defined angled area.
     *
     * Hash: 0x1A8B5F3C01E2B477 | Since: 323
     */
    function isBulletInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, ownedByPlayer: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3F2023999AD51C1F | Since: 323
     */
    function isBulletInArea(pos: Vector3, radius: number, ownedByPlayer: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDE0F6D7450D37351 | Since: 323
     */
    function isBulletInBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, ownedByPlayer: boolean): boolean;
    /**
     * p3 - possibly radius?
     *
     * Hash: 0x9870ACFB89A90995 | Since: 323
     */
    function hasBulletImpactedInArea(pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDC8C5D7CFEAB8394 | Since: 323
     */
    function hasBulletImpactedInBox(): boolean;
    /**
     * PS4
     *
     * Hash: 0xA72BC0B675B1519E | Since: 323
     */
    function isOrbisVersion(): boolean;
    /**
     * XBOX ONE
     *
     * Hash: 0x4D982ADB1978442D | Since: 323
     */
    function isDurangoVersion(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF6201B4DAF662A9D | Since: 323
     */
    function isXbox360Version(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCCA1072C29D096C2 | Since: 323
     */
    function isPs3Version(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x48AF36444B965238 | Since: 323
     */
    function isPcVersion(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0A27B2B6282F7169 | Since: 2545
     */
    function isSteamVersion(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE2BCD0EFAE90D1F4 | Since: 3504
     */
    function isXboxpcVersion(): boolean;
    /**
     * Used to block some of the prostitute stuff due to laws in Australia.
     *
     * Hash: 0x9F1935CA1F724008 | Since: 323
     */
    function isAussieVersion(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB8C0BB75D8A77DB3 | Since: 2545
     */
    function isJapaneseVersion(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x138679CA01E21F53 | Since: 2612
     */
    function isXboxPlatform(): boolean;
    /**
     * Xbox Series (Scarlett) version...
     *
     * Hash: 0xC545AB1CF97ABB34 | Since: 2612
     */
    function isScarlettVersion(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF911E695C1EB8518 | Since: 2612
     */
    function isScePlatform(): boolean;
    /**
     * PS5 (Prospero) version...
     *
     * Hash: 0x807ABE1AB65C24D2 | Since: 2612
     */
    function isProsperoVersion(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF22B6C47C6EAB066 | Since: 323
     */
    function isStringNull(_string: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCA042B6957743895 | Since: 323
     */
    function isStringNullOrEmpty(_string: string): boolean;
    /**
     * Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.
     *
     * If all checks have passed successfully, the return value will be set to whatever strtol(string, 0i64, 10); returns.
     *
     * Hash: 0x5A5F40FE637EB584 | Since: 323
     */
    function stringToInt(_string: string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x8EF07E15701D61ED | Since: 323
     */
    function setBitsInRange(rangeStart: number, rangeEnd: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x53158863FCC0893A | Since: 323
     */
    function getBitsInRange(_var: number, rangeStart: number, rangeEnd: number): number;
    /**
     * See description of `ADD_STUNT_JUMP_ANGLED` for detailed info. The only difference really is this one does not have the radius (or angle, not sure) floats parameters for entry and landing zones.
     *
     * Hash: 0x1A992DA297A4630C | Since: 323
     */
    function addStuntJump(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, x4: number, y4: number, z4: number, camX: number, camY: number, camZ: number): number;
    /**
     * Creates a new stunt jump.
     *
     * The radius1 and radius2 might actually not be a radius at all, but that's what it seems to me testing them in-game. But they may be 'angle' floats instead, considering this native is named ADD_STUNT_JUMP_**ANGLED**.
     *
     * Info about the specific 'parameter sections':
     *
     *
     * <strong>x1, y1, z1, x2, y2, z2 and radius1:</strong>
     *
     * First coordinates are for the jump entry area, and the radius that will be checked around that area. So if you're not exactly within the coordinates, but you are within the outter radius limit then it will still register as entering the stunt jump. Note as mentioned above, the radius is just a guess, I'm not really sure about it's exact purpose.
     *
     *
     * <strong>x3, y3, z3, x4, y4, z4 and radius2:</strong>
     *
     * Next part is the landing area, again starting with the left bottom (nearest to the stunt jump entry zone) coordinate, and the second one being the top right furthest away part of the landing area. Followed by another (most likely) radius float, this is usually slightly larger than the entry zone 'radius' float value, just because you have quite a lot of places where you can land (I'm guessing).
     *
     *
     * <strong>camX, camY and camZ:</strong>
     *
     * The final coordinate in this native is the Camera position. Rotation and zoom/FOV is managed by the game itself, you just need to provide the camera location.
     *
     *
     * <strong>unk1, unk2 and unk3:</strong>
     *
     * Not sure what these are for, but they're always `150, 0, 0` in decompiled scripts.
     *
     * Here is a list of almost all of the stunt jumps from GTA V (taken from decompiled scripts): https://pastebin.com/EW1jBPkY
     *
     * Hash: 0xBBE5D803A5360CBF | Since: 323
     */
    function addStuntJumpAngled(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius1: number, x3: number, y3: number, z3: number, x4: number, y4: number, z4: number, radius2: number, camX: number, camY: number, camZ: number): number;
    /**
     * Toggles some stunt jump stuff.
     *
     * Hash: 0xFB80AB299D2EE1BD | Since: 757
     */
    function toggleShowOptionalStuntJumpCamera(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC518000E39DAE1F | Since: 323
     */
    function deleteStuntJump(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE369A5783B866016 | Since: 323
     */
    function enableStuntJumpSet(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA5272EBEDD4747F6 | Since: 323
     */
    function disableStuntJumpSet(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD79185689F8FD5DF | Since: 323
     */
    function setStuntJumpsCanTrigger(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7A3F19700A4D0525 | Since: 323
     */
    function isStuntJumpInProgress(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2272B0A1343129F4 | Since: 323
     */
    function isStuntJumpMessageShowing(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x996DD1E1E02F1008 | Since: 323
     */
    function getNumSuccessfulStuntJumps(): number;
    /**
     * No comment provided
     *
     * Hash: 0x6856EC3D35C81EA4 | Since: 323
     */
    function getTotalSuccessfulStuntJumps(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE6B7B0ACD4E4B75E | Since: 323
     */
    function cancelStuntJump(): void;
    /**
     * Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused which means you will lose control and the game remains in paused mode until you exit GTA5.exe
     *
     * Hash: 0x577D1284D6873711 | Since: 323
     */
    function setGamePaused(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xAA391C728106F7AF | Since: 323
     */
    function setThisScriptCanBePaused(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB98236CAAECEF897 | Since: 323
     */
    function setThisScriptCanRemoveBlipsCreatedByAnyScript(toggle: boolean): void;
    /**
     * This native appears on the cheat_controller script and tracks a combination of buttons, which may be used to toggle cheats in-game. Credits to ThreeSocks for the info. The hash contains the combination, while the "amount" represents the amount of buttons used in a combination. The following page can be used to make a button combination: gta5offset.com/ts/hash/
     *
     * INT_SCORES_SCORTED was a hash collision
     *
     * Hash: 0x071E2A839DE82D90 | Since: 323
     */
    function hasCheatWithHashBeenActivated(hash: number | string, amount: number): boolean;
    /**
     * Get inputted "Cheat code", for example:
     *
     * while (TRUE)
     * {
     * `if (MISC::HAS_PC_CHEAT_WITH_HASH_BEEN_ACTIVATED(${fugitive}))`
     * {
     * // Do something.
     * }
     * `SYSTEM::WAIT(0);`
     * }
     *
     * Calling this will also set the last saved string hash to zero.
     *
     *
     * Hash: 0x557E43C447E700A8 | Since: 323
     */
    function hasPcCheatWithHashBeenActivated(hash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFA3FFB0EEBC288A3 | Since: 2060
     */
    function overrideFreezeFlags(): void;
    /**
     * Formerly known as _LOWER_MAP_PROP_DENSITY and wrongly due to idiots as _ENABLE_MP_DLC_MAPS.
     * Sets the maximum prop density and changes a loading screen flag from 'loading story mode' to 'loading GTA Online'. Does not touch DLC map data at all.
     *
     * In fact, I doubt this changes the flag whatsoever, that's the OTHER native idiots use together with this that does so, this one only causes a loading screen to show as it reloads map data.
     *
     * Hash: 0x9BAE5AD2508DF078 | Since: 323
     */
    function setInstancePriorityMode(): void;
    /**
     * Sets an unknown flag used by CScene in determining which entities from CMapData scene nodes to draw, similar to SET_INSTANCE_PRIORITY_MODE.
     *
     * Hash: 0xC5F0A8EBD3F361CE | Since: 323
     */
    function setInstancePriorityHint(flag: number): void;
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0x7EA2B6AF97ECA6ED | Since: 323
     */
    function isFrontendFading(): boolean;
    /**
     * spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called
     *
     * Hash: 0x7472BB270D7B4F3E | Since: 323
     */
    function populateNow(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCBAD6729F7B1F4FC | Since: 323
     */
    function getIndexOfCurrentLevel(): number;
    /**
     * level can be from 0 to 3
     * 0: 9.8 - normal
     * 1: 2.4 - low
     * 2: 0.1 - very low
     * 3: 0.0 - off
     *
     * Hash: 0x740E14FAD5842351 | Since: 323
     */
    function setGravityLevel(level: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA9575F812C6A7997 | Since: 323
     */
    function startSaveData(): any;
    /**
     * No comment provided
     *
     * Hash: 0x74E20C9145FB66FD | Since: 323
     */
    function stopSaveData(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA09F896CE912481F | Since: 323
     */
    function getSizeOfSaveData(): number;
    /**
     * No comment provided
     *
     * Hash: 0x34C9EE5986258415 | Since: 323
     */
    function registerIntToSave(name: string): any;
    /**
     * No comment provided
     *
     * Hash: 0xA735353C77334EA0 | Since: 323
     */
    function registerInt64ToSave(name: string): any;
    /**
     * No comment provided
     *
     * Hash: 0x10C2FA78D0E128A1 | Since: 323
     */
    function registerEnumToSave(name: string): any;
    /**
     * No comment provided
     *
     * Hash: 0x7CAEC29ECB5DFEBB | Since: 323
     */
    function registerFloatToSave(name: string): any;
    /**
     * No comment provided
     *
     * Hash: 0xC8F4131414C835A1 | Since: 323
     */
    function registerBoolToSave(name: string): any;
    /**
     * No comment provided
     *
     * Hash: 0xEDB1232C5BEAE62F | Since: 323
     */
    function registerTextLabelToSave(name: string): any;
    /**
     * `MISC::REGISTER_TEXT_LABEL_15_TO_SAVE(&a_0._f1, "tlPlateText");`
     * `MISC::REGISTER_TEXT_LABEL_15_TO_SAVE(&a_0._f1C, "tlPlateText_pending");`
     * `MISC::REGISTER_TEXT_LABEL_15_TO_SAVE(&a_0._f10B, "tlCarAppPlateText");`
     *
     * Hash: 0x6F7794F28C6B2535 | Since: 323
     */
    function registerTextLabel15ToSave(name: string): any;
    /**
     * Only found 3 times in decompiled scripts.
     *
     * `MISC::REGISTER_TEXT_LABEL_23_TO_SAVE(a_0, "Movie_Name_For_This_Player");`
     * `MISC::REGISTER_TEXT_LABEL_23_TO_SAVE(&a_0._fB, "Ringtone_For_This_Player");`
     * `MISC::REGISTER_TEXT_LABEL_23_TO_SAVE(&a_0._f1EC4._f12[v_A\/\*6\*\/], &v_13); // where v_13 is "MPATMLOGSCRS0" thru "MPATMLOGSCRS15"`
     *
     * Hash: 0x48F069265A0E4BEC | Since: 323
     */
    function registerTextLabel23ToSave(name: string): any;
    /**
     * Only found 2 times in decompiled scripts.
     *
     * `MISC::REGISTER_TEXT_LABEL_31_TO_SAVE(&a_0._f1F5A._f6[0\/\*8\*\/], "TEMPSTAT_LABEL"); // gets saved in a struct called "g_SaveData_STRING_ScriptSaves"`
     * `MISC::REGISTER_TEXT_LABEL_31_TO_SAVE(&a_0._f4B4[v_1A\/\*8\*\/], &v_5); // where v_5 is "Name0" thru "Name9", gets saved in a struct called "OUTFIT_Name"`
     *
     * Hash: 0x8269816F6CFD40F8 | Since: 323
     */
    function registerTextLabel31ToSave(name: string): any;
    /**
     * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(a_0, "Thumb_label");`
     * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f10, "Photo_label");`
     * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(a_0, "GXTlabel");`
     * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f21, "StringComp");`
     * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f43, "SecondStringComp");`
     * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f53, "ThirdStringComp");`
     * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f32, "SenderStringComp");`
     * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f726[v_1A\/\*16\*\/], &v_20); // where v_20 is "LastJobTL_0_1" thru "LastJobTL_2_1", gets saved in a struct called "LAST_JobGamer_TL"`
     * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f4B, "PAID_PLAYER");`
     * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f5B, "RADIO_STATION");`
     *
     * Hash: 0xFAA457EF263E8763 | Since: 323
     */
    function registerTextLabel63ToSave(name: string): any;
    /**
     * No comment provided
     *
     * Hash: 0xBF737600CDDBEADD | Since: 323
     */
    function startSaveStructWithSize(size: number, structName: string): any;
    /**
     * No comment provided
     *
     * Hash: 0xEB1774DF12BB9F12 | Since: 323
     */
    function stopSaveStruct(): void;
    /**
     * No comment provided
     *
     * Hash: 0x60FE567DF1B1AF9D | Since: 323
     */
    function startSaveArrayWithSize(size: number, arrayName: string): any;
    /**
     * No comment provided
     *
     * Hash: 0x04456F95153C6BE4 | Since: 323
     */
    function stopSaveArray(): void;
    /**
     * No comment provided
     *
     * Hash: 0x213AEB2B90CBA7AC | Since: 877
     */
    function copyScriptStruct(size: number): [any, any];
    /**
     * https://alloc8or.re/gta5/doc/enums/DispatchType.txt
     *
     * Hash: 0xDC0F817884CDD856 | Since: 323
     */
    function enableDispatchService(dispatchService: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9B2BD3773123EA2F | Since: 323
     */
    function blockDispatchServiceResourceCreation(dispatchService: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEB4A0C2D56441717 | Since: 323
     */
    function getNumberResourcesAllocatedToWantedLevel(dispatchService: number): number;
    /**
     * As for the 'police' incident, it will call police cars to you, but unlike PedsInCavalcades & Merryweather they won't start shooting at you unless you shoot first or shoot at them. The top 2 however seem to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I found out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 param I cant say is radius, but for the pedsInCavalcades and Merryweather R* uses 0.0f and for the top 3 (Emergency Services) they use 3.0f.
     *
     * Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course not IV).
     *
     * Side Note 2: I say it breaks as if you call this proper,
     * if(CREATE_INCIDENT) etc it will return false if you do as I said above.
     * =====================================================
     *
     * Hash: 0x3F892CAF67444AE7 | Since: 323
     */
    function createIncident(dispatchService: number, pos: Vector3, numUnits: number, radius: number): [boolean, number];
    /**
     * As for the 'police' incident, it will call police cars to you, but unlike PedsInCavalcades & Merryweather they won't start shooting at you unless you shoot first or shoot at them. The top 2 however seem to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I found out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 param I cant say is radius, but for the pedsInCavalcades and Merryweather R* uses 0.0f and for the top 3 (Emergency Services) they use 3.0f.
     *
     * Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course not IV).
     *
     * Side Note 2: I say it breaks as if you call this proper,
     * if(CREATE_INCIDENT) etc it will return false if you do as I said above.
     * =====================================================
     *
     * Hash: 0x05983472F0494E60 | Since: 323
     */
    function createIncidentWithEntity(dispatchService: number, ped: number | Ped, numUnits: number, radius: number): [boolean, number];
    /**
     * Delete an incident with a given id.
     *
     * =======================================================
     * Correction, I have change this to int, instead of int*
     * as it doesn't use a pointer to the createdIncident.
     * If you try it you will crash (or) freeze.
     * =======================================================
     *
     * Hash: 0x556C1AA270D5A207 | Since: 323
     */
    function deleteIncident(incidentId: number): void;
    /**
     * =======================================================
     * Correction, I have change this to int, instead of int*
     * as it doesn't use a pointer to the createdIncident.
     * If you try it you will crash (or) freeze.
     * =======================================================
     *
     * Hash: 0xC8BC6461E629BEAA | Since: 323
     */
    function isIncidentValid(incidentId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB08B85D860E7BA3C | Since: 323
     */
    function setIncidentRequestedUnits(incidentId: number, dispatchService: number, numUnits: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD261BA3E7E998072 | Since: 323
     */
    function setIdealSpawnDistanceForIncident(incidentId: number): void;
    /**
     * Finds a position ahead of the player by predicting the players next actions.
     * The positions match path finding node positions.
     * When roads diverge, the position may rapidly change between two or more positions. This is due to the engine not being certain of which path the player will take.
     *
     * Hash: 0x6874E2190B0C1972 | Since: 323
     */
    function findSpawnPointInDirection(pos: Vector3, fwdVecX: number, fwdVecY: number, fwdVecZ: number, distance: number): [boolean, Vector3];
    /**
     * No comment provided
     *
     * Hash: 0x67F6413D3220E18D | Since: 323
     */
    function addPopMultiplierArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x1327E2FE9746BAEE | Since: 323
     */
    function doesPopMultiplierAreaExist(id: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB129E447A2EDA4BF | Since: 323
     */
    function removePopMultiplierArea(id: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1312F4B242609CE3 | Since: 1290
     */
    function isPopMultiplierAreaNetworked(id: number): boolean;
    /**
     * This native is adding a zone, where you can change density settings. For example, you can add a zone on 0.0, 0.0, 0.0 with radius 900.0 and vehicleMultiplier 0.0, and you will not see any new population vehicle spawned in a radius of 900.0 from 0.0, 0.0, 0.0. Returns the id. You can have only 15 zones at the same time. You can remove zone using REMOVE_POP_MULTIPLIER_SPHERE
     *
     * Hash: 0x32C7A7E8C43A1F80 | Since: 323
     */
    function addPopMultiplierSphere(pos: Vector3, radius: number, pedMultiplier: number, vehicleMultiplier: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x171BAFB3C60389F4 | Since: 791
     */
    function doesPopMultiplierSphereExist(id: number): boolean;
    /**
     * Removes population multiplier sphere
     *
     * Hash: 0xE6869BECDD8F2403 | Since: 323
     */
    function removePopMultiplierSphere(id: number): void;
    /**
     * Makes the ped jump around like they're in a tennis match
     *
     * Hash: 0x28A04B411933F8A6 | Since: 323
     */
    function enableTennisMode(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x5D5479D115290C3F | Since: 323
     */
    function isTennisMode(ped: number | Ped): boolean;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0xE266ED23311F24D4 | Since: 323
     */
    function playTennisSwingAnim(ped: number | Ped, animDict: string, animName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x17DF68D720AA77F8 | Since: 323
     */
    function getTennisSwingAnimComplete(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x19BFED045C647C49 | Since: 323
     */
    function getTennisSwingAnimCanBeInterrupted(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE95B0C7D5BA3B96B | Since: 323
     */
    function getTennisSwingAnimSwung(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8FA9C42FC5D7C64B | Since: 323
     */
    function playTennisDiveAnim(ped: number | Ped): void;
    /**
     * From the scripts:
     *
     * `MISC::SET_TENNIS_MOVE_NETWORK_SIGNAL_FLOAT(sub_aa49(a_0), "ForcedStopDirection", v_E);`
     *
     * Related to tennis mode.
     *
     * Hash: 0x54F157E0336A3822 | Since: 323
     */
    function setTennisMoveNetworkSignalFloat(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x5896F2BD5683A4E1 | Since: 1868
     */
    function resetDispatchSpawnLocation(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD10F442036302D50 | Since: 323
     */
    function setDispatchSpawnLocation(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x77A84429DD9F0A15 | Since: 323
     */
    function resetDispatchIdealSpawnDistance(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6FE601A64180D423 | Since: 323
     */
    function setDispatchIdealSpawnDistance(distance: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEB2DB0CAD13154B3 | Since: 323
     */
    function resetDispatchTimeBetweenSpawnAttempts(): void;
    /**
     * No comment provided
     *
     * Hash: 0x44F7CBC1BEB3327D | Since: 323
     */
    function setDispatchTimeBetweenSpawnAttempts(): void;
    /**
     * No comment provided
     *
     * Hash: 0x48838ED9937A15D1 | Since: 323
     */
    function setDispatchTimeBetweenSpawnAttemptsMultiplier(): void;
    /**
     * To remove, see: REMOVE_DISPATCH_SPAWN_BLOCKING_AREA
     * See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
     *
     * Hash: 0x918C7B2D2FF3928B | Since: 323
     */
    function addDispatchSpawnAngledBlockingArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x2D4259F1FEB81DA9 | Since: 323
     */
    function addDispatchSpawnSphereBlockingArea(x1: number, y1: number, x2: number, y2: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x264AC28B01B353A5 | Since: 323
     */
    function removeDispatchSpawnBlockingArea(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAC7BFD5C1D83EA75 | Since: 323
     */
    function resetDispatchSpawnBlockingAreas(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD9F692D349249528 | Since: 323
     */
    function resetWantedResponseNumPedsToSpawn(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE532EC1A63231B4F | Since: 323
     */
    function setWantedResponseNumPedsToSpawn(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB8721407EE9C3FF6 | Since: 323
     */
    function addTacticalNavMeshPoint(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xB3CD58CCA6CDA852 | Since: 323
     */
    function clearTacticalNavMeshPoints(): void;
    /**
     * Activates (usused?) riot mode. All NPCs are being hostile to each other (including player). Also the game will give weapons (pistols, smgs) to random NPCs.
     *
     * Hash: 0x2587A48BC88DFADF | Since: 323
     */
    function setRiotModeEnabled(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA78CFA0366592FE | Since: 323
     */
    function displayOnscreenKeyboardWithLongerInitialString(windowTitle: string, defaultText: string, defaultConcat1: string, defaultConcat2: string, defaultConcat3: string, defaultConcat4: string, defaultConcat5: string, defaultConcat6: string, defaultConcat7: string, maxInputLength: number): any;
    /**
     * `sfink: note, p0 is set to 6 for PC platform in at least 1 script, or to `unk::_get_ui_language_id() == 0` otherwise.`
     *
     * NOTE: windowTitle uses text labels, and an invalid value will display nothing.
     *
     * www.gtaforums.com/topic/788343-vrel-script-hook-v/?p=1067380474
     *
     * windowTitle's
     * -----------------
     * CELL_EMAIL_BOD  =   "Enter your Eyefind message"
     * CELL_EMAIL_BODE =   "Message too long. Try again"
     * CELL_EMAIL_BODF    =   "Forbidden message. Try again"
     * CELL_EMAIL_SOD    =   "Enter your Eyefind subject"
     * CELL_EMAIL_SODE =   "Subject too long. Try again"
     * CELL_EMAIL_SODF    =   "Forbidden text. Try again"
     * CELL_EMASH_BOD   =   "Enter your Eyefind message"
     * CELL_EMASH_BODE =   "Message too long. Try again"
     * CELL_EMASH_BODF    =   "Forbidden message. Try again"
     * CELL_EMASH_SOD    =   "Enter your Eyefind subject"
     * CELL_EMASH_SODE =   "Subject too long. Try again"
     * CELL_EMASH_SODF    =   "Forbidden Text. Try again"
     * FMMC_KEY_TIP10   =   "Enter Synopsis"
     * FMMC_KEY_TIP12  =   "Enter Custom Team Name"
     * FMMC_KEY_TIP12F =   "Forbidden Text. Try again"
     * FMMC_KEY_TIP12N  =   "Custom Team Name"
     * FMMC_KEY_TIP8 =   "Enter Message"
     * FMMC_KEY_TIP8F   =   "Forbidden Text. Try again"
     * FMMC_KEY_TIP8FS  =   "Invalid Message. Try again"
     * FMMC_KEY_TIP8S  =   "Enter Message"
     * FMMC_KEY_TIP9    =   "Enter Outfit Name"
     * FMMC_KEY_TIP9F   =   "Invalid Outfit Name. Try again"
     * FMMC_KEY_TIP9N  =   "Outfit Name"
     * PM_NAME_CHALL  =   "Enter Challenge Name"
     *
     * Hash: 0x00DC833F2568DBF6 | Since: 323
     */
    function displayOnscreenKeyboard(windowTitle: string, defaultText: string, defaultConcat1: string, defaultConcat2: string, defaultConcat3: string, maxInputLength: number): void;
    /**
     * Returns the current status of the onscreen keyboard, and updates the output.
     *
     * Status Codes:
     *
     * -1: Keyboard isn't active
     * 0: User still editing
     * 1: User has finished editing
     * 2: User has canceled editing
     *
     * Hash: 0x0CF2B696BBF945AE | Since: 323
     */
    function updateOnscreenKeyboard(): number;
    /**
     * Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.
     *
     * Hash: 0x8362B09B91893647 | Since: 323
     */
    function getOnscreenKeyboardResult(): string;
    /**
     * DO NOT use this as it doesn't clean up the text input box properly and your script will get stuck in the UPDATE_ONSCREEN_KEYBOARD() loop.
     * Use FORCE_CLOSE_TEXT_INPUT_BOX instead.
     *
     * Hash: 0x58A39BE597CE99CD | Since: 757
     */
    function cancelOnscreenKeyboard(): void;
    /**
     * p0 was always 2 in R* scripts.
     * Called before calling DISPLAY_ONSCREEN_KEYBOARD if the input needs to be saved.
     *
     * Hash: 0x3ED1438C1F5C6612 | Since: 323
     */
    function nextOnscreenKeyboardResultWillDisplayUsingTheseFonts(): void;
    /**
     * Appears to remove stealth kill action from memory
     *
     * Hash: 0xA6A12939F16D85BE | Since: 323
     */
    function actionManagerEnableAction(hash: number | string, enable: boolean): void;
    /**
     * GET_GAME_TIMER() / 1000
     *
     * Hash: 0x3F60413F5DF65748 | Since: 2612
     */
    function getRealWorldTime(): number;
    /**
     * No comment provided
     *
     * Hash: 0x1EAE0A6E978894A2 | Since: 323
     */
    function supressRandomEventThisFrame(eventType: number, suppress: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA66C71C98D5F2CFB | Since: 323
     */
    function setExplosiveAmmoThisFrame(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x11879CDD803D30F4 | Since: 323
     */
    function setFireAmmoThisFrame(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xFF1BED81BFDC0FE0 | Since: 323
     */
    function setExplosiveMeleeThisFrame(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x57FFF03E423A4C0B | Since: 323
     */
    function setSuperJumpThisFrame(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x438822C279B73B93 | Since: 573
     */
    function setBeastJumpThisFrame(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xA1183BCFEE0F93D1 | Since: 1180
     */
    function setForcedJumpThisFrame(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x6FDDF453C0C756EC | Since: 323
     */
    function hasGameInstalledThisSession(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFB00CA71DA386228 | Since: 323
     */
    function setTickerJohnmarstonIsDone(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5AA3BEFA29F03AD4 | Since: 323
     */
    function areProfileSettingsValid(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE3D969D2785FFB5E | Since: 323
     */
    function preventArrestStateThisFrame(): void;
    /**
     * Sets the localplayer playerinfo state back to playing (State 0)
     *
     * States are:
     * -1: "Invalid"
     * 0: "Playing"
     * 1: "Died"
     * 2: "Arrested"
     * 3: "Failed Mission"
     * 4: "Left Game"
     * 5: "Respawn"
     * 6: "In MP Cutscene"
     *
     * Hash: 0xC0AA53F866B3134D | Since: 323
     */
    function forceGameStatePlaying(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A60017F841A54F2 | Since: 323
     */
    function scriptRaceInit(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1FF6BF9A63E5757F | Since: 323
     */
    function scriptRaceShutdown(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1BB299305C3E8C13 | Since: 323
     */
    function scriptRacePlayerHitCheckpoint(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x8EF5573A1F801A5C | Since: 323
     */
    function scriptRaceGetPlayerSplitTime(player: number | string | Player): [boolean, number, number];
    /**
     * No comment provided
     *
     * Hash: 0x92790862E36C2ADA | Since: 323
     */
    function startEndUserBenchmark(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC7DB36C24634F52B | Since: 323
     */
    function stopEndUserBenchmark(): void;
    /**
     * No comment provided
     *
     * Hash: 0x437138B6A830166A | Since: 323
     */
    function resetEndUserBenchmark(): void;
    /**
     * Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\GTA V\Benchmarks and submits some metrics.
     *
     * Hash: 0x37DEB0AA183FB6D8 | Since: 323
     */
    function saveEndUserBenchmark(): void;
    /**
     * Returns true if the current frontend menu is FE_MENU_VERSION_SP_PAUSE
     *
     * Hash: 0xEA2F2061875EED90 | Since: 323
     */
    function uiStartedEndUserBenchmark(): boolean;
    /**
     * Returns true if the current frontend menu is FE_MENU_VERSION_LANDING_MENU
     *
     * Hash: 0x3BBBD13E5041A79E | Since: 323
     */
    function landingScreenStartedEndUserBenchmark(): boolean;
    /**
     * Returns true if command line option '-benchmark' is set.
     *
     * Hash: 0xA049A5BE0F04F2F8 | Since: 323
     */
    function isCommandlineEndUserBenchmark(): boolean;
    /**
     * Returns value of the '-benchmarkIterations' command line option.
     *
     * Hash: 0x4750FC27570311EC | Since: 323
     */
    function getBenchmarkIterations(): number;
    /**
     * Returns value of the '-benchmarkPass' command line option.
     *
     * Hash: 0x1B2366C3F2A5C8DF | Since: 323
     */
    function getBenchmarkPass(): number;
    /**
     * In singleplayer it does exactly what the name implies. In FiveM / GTA:Online it shows `Disconnecting from GTA Online` HUD and then quits the game.
     *
     * Hash: 0xE574A662ACAEFBB1 | Since: 372
     */
    function restartGame(): void;
    /**
     * Exits the game and downloads a fresh social club update on next restart.
     *
     * Hash: 0xEB6891F03362FB12 | Since: 323
     */
    function quitGame(): void;
    /**
     * Hardcoded to always return true.
     *
     * Hash: 0x14832BF2ABA53FC5 | Since: 323
     */
    function hasAsyncInstallFinished(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC79AE21974B01FB2 | Since: 323
     */
    function cleanupAsyncInstall(): void;
    /**
     * aka "constrained"
     *
     * Hash: 0x684A41975F077262 | Since: 323
     */
    function plmIsInConstrainedMode(): boolean;
    /**
     * Returns duration of how long the game has been in power-saving mode (aka "constrained") in milliseconds.
     *
     * Hash: 0xABB2FA71C83A1B72 | Since: 323
     */
    function plmGetConstrainedDurationMs(): number;
    /**
     * If toggle is true, the ped's head is shown in the pause menu
     * If toggle is false, the ped's head is not shown in the pause menu
     *
     * Hash: 0x4EBB7E87AA0DBED4 | Since: 323
     */
    function setPlayerIsInAnimalForm(toggle: boolean): void;
    /**
     * Although we don't have a jenkins hash for this one, the name is 100% confirmed.
     *
     * Hash: 0x9689123E3F213AA5 | Since: 323
     */
    function getIsPlayerInAnimalForm(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9D8D44ADBBA61EF2 | Since: 323
     */
    function setPlayerIsRepeatingAMission(toggle: boolean): void;
    /**
     * Does nothing (it's a nullsub).
     *
     * Hash: 0x23227DF0B2115469 | Since: 323
     */
    function disableScreenDimmingThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD10282B6E3751BA0 | Since: 323
     */
    function getCityDensity(): number;
    /**
     * No comment provided
     *
     * Hash: 0x693478ACBD7F18E7 | Since: 1103
     */
    function useActiveCameraForTimeslicingCentre(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4B82FA6F2D624634 | Since: 2612
     */
    function setContentIdIndex(contentId: number | string, index: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xECF041186C5A94DC | Since: 2612
     */
    function getContentIdIndex(contentId: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xBA4583AF4C678A9B | Since: 3095
     */
    function setContentPropType(model: number | string, _type: number): void;
    /**
     * Returns prop type for given model hash
     *
     * Hash: 0x8BAF8AD59F47AAFC | Since: 3095
     */
    function getContentPropType(model: number | string): number;
}
export declare namespace mobile {
    /**
     * Creates a mobile phone of the specified type.
     *
     * Possible phone types:
     *
     * 0 - Default phone / Michael's phone
     * 1 - Trevor's phone
     * 2 - Franklin's phone
     * 3 - Unused police phone
     * 4 - Prologue phone
     *
     * Higher values may crash your game.
     *
     * Hash: 0xA4E8E696C532FBC7 | Since: 323
     */
    function createPhone(phoneType: number): void;
    /**
     * Destroys the currently active mobile phone.
     *
     * Hash: 0x3BC861DF703E5097 | Since: 323
     */
    function destroyPhone(): void;
    /**
     * The minimum/default is 500.0f. If you plan to make it bigger set it's position as well. Also this seems to need to be called in a loop as when you close the phone the scale is reset. If not in a loop you'd need to call it everytime before you re-open the phone.
     *
     * Hash: 0xCBDD322A73D6D932 | Since: 323
     */
    function setPhoneScale(scale: number): void;
    /**
     * Last parameter is unknown and always zero.
     *
     * Hash: 0xBB779C0CA917E865 | Since: 323
     */
    function setPhoneRotation(rot: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x1CEFB61F193070AE | Since: 323
     */
    function getPhoneRotation(p1: number | Vehicle): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x693A5C6D6734085B | Since: 323
     */
    function setPhonePosition(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x584FDFDA48805B86 | Since: 323
     */
    function getPhonePosition(): Vector3;
    /**
     * If bool Toggle = true so the mobile is hide to screen.
     * If bool Toggle = false so the mobile is show to screen.
     *
     * Hash: 0xF511F759238A5122 | Since: 323
     */
    function scriptIsMovingPhoneOffscreen(toggle: boolean): void;
    /**
     * This one is weird and seems to return a TRUE state regardless of whether the phone is visible on screen or tucked away.
     *
     *
     * I can confirm the above. This function is hard-coded to always return 1.
     *
     * Hash: 0xC4E2813898C97A4B | Since: 323
     */
    function canPhoneBeSeenOnScreen(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x375A706A5C2FD084 | Since: 372
     */
    function setPhoneDofState(toggle: boolean): void;
    /**
     * For move the finger of player, the value of int goes 1 at 5.
     *
     * Hash: 0x95C9E72F3D7DEC9B | Since: 323
     */
    function cellSetInput(direction: number): void;
    /**
     * if the bool "Toggle" is "true" so the phone is lean.
     * if the bool "Toggle" is "false" so the phone is not lean.
     *
     * Hash: 0x44E44169EF70138E | Since: 323
     */
    function cellHorizontalModeToggle(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xFDE8F069C542D126 | Since: 323
     */
    function cellCamActivate(): void;
    /**
     * No comment provided
     *
     * Hash: 0x015C49A93E3E086E | Since: 323
     */
    function cellCamActivateSelfieMode(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA2CCBE62CD4C91A4 | Since: 323
     */
    function cellCamActivateShallowDofMode(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1B0B4AEED5B9B41C | Since: 323
     */
    function cellCamSetSelfieModeSideOffsetScaling(): void;
    /**
     * No comment provided
     *
     * Hash: 0x53F4892D18EC90A4 | Since: 323
     */
    function cellCamSetSelfieModeHorzPanOffset(horizontalPan: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3117D84EFA60F77B | Since: 323
     */
    function cellCamSetSelfieModeVertPanOffset(vertPan: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x15E69E2802C24B8D | Since: 323
     */
    function cellCamSetSelfieModeRollOffset(roll: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAC2890471901861C | Since: 323
     */
    function cellCamSetSelfieModeDistanceScaling(distanceScaling: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD6ADE981781FCA09 | Since: 323
     */
    function cellCamSetSelfieModeHeadYawOffset(yaw: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF1E22DC13F5EEBAD | Since: 323
     */
    function cellCamSetSelfieModeHeadRollOffset(roll: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x466DA42C89865553 | Since: 323
     */
    function cellCamSetSelfieModeHeadPitchOffset(pitch: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x439E9BC95B7E7FBE | Since: 323
     */
    function cellCamIsCharVisibleNoFaceCheck(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB4A53E05F68B6FA1 | Since: 323
     */
    function getPhoneRenderId(): number;
}
export declare namespace money {
    /**
     * No comment provided
     *
     * Hash: 0x3DA5ECD1A56CBA6D | Since: 323
     */
    function networkInitializeCash(wallet: number, bank: number): void;
    /**
     * Note the 2nd parameters are always 1, 0. I have a feeling it deals with your money, wallet, bank. So when you delete the character it of course wipes the wallet cash at that time. So if that was the case, it would be eg, NETWORK_DELETE_CHARACTER(characterIndex, deleteWalletCash, deleteBankCash);
     *
     * Hash: 0x05A50AF38947EB8D | Since: 323
     */
    function networkDeleteCharacter(characterSlot: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x821418C727FCACD7 | Since: 791
     */
    function networkManualDeleteCharacter(characterSlot: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFB2456B2040A6A67 | Since: 323
     */
    function networkGetPlayerIsHighEarner(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA921DED15FDF28F5 | Since: 323
     */
    function networkClearCharacterWallet(characterSlot: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFB18DF9CB95E0105 | Since: 323
     */
    function networkGivePlayerJobshareCash(amount: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x56A3B51944C50598 | Since: 323
     */
    function networkReceivePlayerJobshareCash(value: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x1C2473301B1C66BA | Since: 323
     */
    function networkCanShareJobCash(): boolean;
    /**
     * index
     * -------
     * See function sub_1005 in am_boat_taxi.ysc
     *
     * context
     * ----------
     * "BACKUP_VAGOS"
     * "BACKUP_LOST"
     * "BACKUP_FAMILIES"
     * "HIRE_MUGGER"
     * "HIRE_MERCENARY"
     * "BUY_CARDROPOFF"
     * "HELI_PICKUP"
     * "BOAT_PICKUP"
     * "CLEAR_WANTED"
     * "HEAD_2_HEAD"
     * "CHALLENGE"
     * "SHARE_LAST_JOB"
     * "DEFAULT"
     *
     * reason
     * ---------
     * "NOTREACHTARGET"
     * "TARGET_ESCAPE"
     * "DELIVERY_FAIL"
     * "NOT_USED"
     * "TEAM_QUIT"
     * "SERVER_ERROR"
     * "RECEIVE_LJ_L"
     * "CHALLENGE_PLAYER_LEFT"
     * "DEFAULT"
     *
     * unk
     * -----
     * Unknown bool value
     *
     *
     *
     * Hash: 0xF9C812CD7C46E817 | Since: 323
     */
    function networkRefundCash(index: number, context: string, reason: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x18B7AE224B087E26 | Since: 323
     */
    function networkDeductCash(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x81404F3DC124FE5B | Since: 323
     */
    function networkMoneyCanBet(amount: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3A54E33660DED67F | Since: 323
     */
    function networkCanBet(amount: number): boolean;
    /**
     * GTAO_CASINO_HOUSE
     * GTAO_CASINO_INSIDETRACK
     * GTAO_CASINO_LUCKYWHEEL
     * GTAO_CASINO_BLACKJACK
     * GTAO_CASINO_ROULETTE
     * GTAO_CASINO_SLOTS
     * GTAO_CASINO_PURCHASE_CHIPS
     *
     * NETWORK_C*
     *
     * Hash: 0x158C16F5E4CF41F8 | Since: 1734
     */
    function networkCasinoCanBet(hash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x394DCDB9E836B7A9 | Since: 1734
     */
    function networkCasinoCanBetPvc(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF62F6D9528358FE4 | Since: 1734
     */
    function networkCasinoCanBetAmount(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8968D4D8C6C40C11 | Since: 1734
     */
    function networkCasinoCanBuyChipsPvc(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3BD101471C7F9EEC | Since: 1734
     */
    function networkCasinoBuyChips(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xED44897CB336F480 | Since: 1734
     */
    function networkCasinoSellChips(): boolean;
    /**
     * Does nothing (it's a nullsub).
     *
     * Hash: 0xCD0F5B5D932AE473 | Since: 323
     */
    function networkDeferCashTransactionsUntilShopSave(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9777734DAD16992F | Since: 573
     */
    function canPayAmountToBoss(amount: number): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xED1517D3AF17C698 | Since: 323
     */
    function networkEarnFromPickup(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x718FBBF67414FA36 | Since: 1290
     */
    function networkEarnFromCashingOut(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA03D4ACE0A3284CE | Since: 323
     */
    function networkEarnFromGangattackPickup(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA700D8A9905F78A | Since: 1604
     */
    function networkEarnAssassinateTargetKilled(amount: number): void;
    /**
     * For the money bags that drop a max of $40,000. Often called 40k bags.
     *
     * Most likely NETWORK_EARN_FROM_ROB***
     *
     * Hash: 0xF514621E8EA463D0 | Since: 323
     */
    function networkEarnFromRobArmoredCars(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB1CC1B9EC3007A2A | Since: 323
     */
    function networkEarnFromCrateDrop(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x827A5BA1A44ACA6D | Since: 323
     */
    function networkEarnFromBetting(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB2CC4836834E8A98 | Since: 323
     */
    function networkEarnFromJob(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDEBBF584665411D0 | Since: 1734
     */
    function networkEarnFromJobx2(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC8407624CEF2354B | Since: 791
     */
    function networkEarnFromPremiumJob(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x61326EE6DF15B0CA | Since: 323
     */
    function networkEarnFromBendJob(amount: number, heistHash: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x2B171E6B2F64D8DF | Since: 323
     */
    function networkEarnFromChallengeWin(): any;
    /**
     * No comment provided
     *
     * Hash: 0x131BB5DA15453ACF | Since: 323
     */
    function networkEarnFromBounty(amount: number): [any, any];
    /**
     * No comment provided
     *
     * Hash: 0xF92A014A634442D6 | Since: 323
     */
    function networkEarnFromImportExport(amount: number, modelHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x45B8154E077D9E4D | Since: 323
     */
    function networkEarnFromHoldups(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x849648349D77F5C5 | Since: 323
     */
    function networkEarnFromProperty(amount: number, propertyName: number | string): void;
    /**
     * DSPORT
     *
     * Hash: 0x515B4A22E4D3C6D7 | Since: 323
     */
    function networkEarnFromAiTargetKill(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4337511FA8221D36 | Since: 323
     */
    function networkEarnFromNotBadsport(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB539BD8A4C1EECF8 | Since: 323
     */
    function networkEarnFromVehicle(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3F4D00167E41E0AD | Since: 323
     */
    function networkEarnFromPersonalVehicle(): void;
    /**
     * type either Monthly,Weekly,Daily
     *
     * Hash: 0x6EA318C91C1A8786 | Since: 323
     */
    function networkEarnFromDailyObjectives(amount: number, _type: string, characterSlot: number): void;
    /**
     * Example for p1: "AM_DISTRACT_COPS"
     *
     * Hash: 0xFB6DB092FBAE29E6 | Since: 323
     */
    function networkEarnFromAmbientJob(): any;
    /**
     * No comment provided
     *
     * Hash: 0x6816FB4416760775 | Since: 323
     */
    function networkEarnFromJobBonus(): [any, any];
    /**
     * No comment provided
     *
     * Hash: 0xFA009A62990671D4 | Since: 1290
     */
    function networkEarnFromCriminalMastermind(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D4FDBB035229669 | Since: 1290
     */
    function networkEarnHeistAward(): void;
    /**
     * No comment provided
     *
     * Hash: 0x11B0A20C493F7E36 | Since: 1290
     */
    function networkEarnFirstTimeBonus(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCDA1C62BE2777802 | Since: 573
     */
    function networkEarnGoon(): void;
    /**
     * No comment provided
     *
     * Hash: 0x08B0CA7A6AB3AC32 | Since: 573
     */
    function networkEarnBoss(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0CB1BE0633C024A8 | Since: 573
     */
    function networkEarnAgency(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3E4ADAFF1830F146 | Since: 757
     */
    function networkEarnFromWarehouse(amount: number, id: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xECA658CE2A4E5A72 | Since: 757
     */
    function networkEarnFromContraband(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x84C0116D012E8FC2 | Since: 757
     */
    function networkEarnFromDestroyingContraband(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B7E4FB50D5F3D65 | Since: 1180
     */
    function networkEarnFromSmugglerWork(): void;
    /**
     * No comment provided
     *
     * Hash: 0x31BA138F6304FB9F | Since: 1180
     */
    function networkEarnFromHangarTrade(): void;
    /**
     * No comment provided
     *
     * Hash: 0x55A1E095DB052FA5 | Since: 877
     */
    function networkEarnPurchaseClubHouse(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8586789730B10CAF | Since: 877
     */
    function networkEarnFromBusinessProduct(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEDEAD9A91EC768B3 | Since: 944
     */
    function networkEarnFromVehicleExport(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDEE612F2D71B0308 | Since: 1180
     */
    function networkEarnSmugglerAgency(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6B170F9A02E9E87 | Since: 1493
     */
    function networkEarnBountyHunterReward(): void;
    /**
     * No comment provided
     *
     * Hash: 0x42FCE14F50F27291 | Since: 1493
     */
    function networkEarnFromBusinessBattle(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA75EAC69F59E96E7 | Since: 1493
     */
    function networkEarnFromClubManagementParticipation(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC5156361F26E2212 | Since: 1493
     */
    function networkEarnFromFmbbPhonecallMission(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0B39CF0D53F1C883 | Since: 1493
     */
    function networkEarnFromBusinessHubSell(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1FDA0AA679C9919B | Since: 1493
     */
    function networkEarnFromFmbbBossWork(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFFFBA1B1F7C0B6F4 | Since: 1493
     */
    function networkEarnFmbbWageBonus(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAB3CAA6B422164DA | Since: 323
     */
    function networkCanSpend(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7303E27CC6532080 | Since: 323
     */
    function networkCanSpend2(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xF0077C797F66A355 | Since: 323
     */
    function networkBuyItem(amount: number, item: number | string, item_name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x17C3A7D31EAE39F9 | Since: 323
     */
    function networkSpentTaxi(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5FD5ED82CBBE9989 | Since: 323
     */
    function networkPayEmployeeWage(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9346E14F2AF74D46 | Since: 323
     */
    function networkPayMatchEntryFee(amount: number, matchId: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x1C436FD11FFA692F | Since: 323
     */
    function networkSpentBetting(amount: number, matchId: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD99DB210089617FE | Since: 573
     */
    function networkSpentWager(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEE99784E4467689C | Since: 323
     */
    function networkSpentInStripclub(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD9B067E55253E3DD | Since: 323
     */
    function networkBuyHealthcare(cost: number): void;
    /**
     * p1 = 0 (always)
     * p2 = 1 (always)
     *
     * Hash: 0x763B4BD305338F19 | Since: 323
     */
    function networkBuyAirstrike(cost: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA3EDDAA42411D3B9 | Since: 323
     */
    function networkBuyBackupGang(npcProvider: number): void;
    /**
     * p1 = 0 (always)
     * p2 = 1 (always)
     *
     * Hash: 0x81AA4610E3FD3A69 | Since: 323
     */
    function networkBuyHeliStrike(cost: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB162DC95C0A3317B | Since: 323
     */
    function networkSpentAmmoDrop(): void;
    /**
     * p1 is just an assumption. p2 was false and p3 was true.
     *
     * Hash: 0x7B718E197453F2D9 | Since: 323
     */
    function networkBuyBounty(amount: number, victim: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x650A08A280870AF6 | Since: 323
     */
    function networkBuyProperty(cost: number, propertyName: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x75AF80E61248EEBD | Since: 323
     */
    function networkBuySmokes(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7BF1D73DB2ECA492 | Since: 323
     */
    function networkSpentHeliPickup(): void;
    /**
     * No comment provided
     *
     * Hash: 0x524EE43A37232C00 | Since: 323
     */
    function networkSpentBoatPickup(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA6DD8458CE24012C | Since: 323
     */
    function networkSpentBullShark(): void;
    /**
     * No comment provided
     *
     * Hash: 0x289016EC778D60E0 | Since: 323
     */
    function networkSpentCashDrop(amount: number): void;
    /**
     * Only used once in a script (am_contact_requests)
     * p1 = 0
     * p2 = 1
     *
     * Hash: 0xE404BFB981665BF0 | Since: 323
     */
    function networkSpentHireMugger(): void;
    /**
     * No comment provided
     *
     * Hash: 0x995A65F15F581359 | Since: 323
     */
    function networkSpentRobbedByMugger(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE7B80E2BF9D80BD6 | Since: 323
     */
    function networkSpentHireMercenary(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE1B13771A843C4F6 | Since: 323
     */
    function networkSpentBuyWantedlevel(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA628A745E2275C5D | Since: 323
     */
    function networkSpentBuyOfftheradar(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6E176F1B18BC0637 | Since: 323
     */
    function networkSpentBuyRevealPlayers(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEC03C719DB2F4306 | Since: 323
     */
    function networkSpentCarwash(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B38ECB05A63A685 | Since: 323
     */
    function networkSpentCinema(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7FE61782AD94CC09 | Since: 323
     */
    function networkSpentTelescope(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD9B86B9872039763 | Since: 323
     */
    function networkSpentHoldups(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6D3A430D1A809179 | Since: 323
     */
    function networkSpentBuyPassiveMode(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA230C9682556CF1 | Since: 323
     */
    function networkSpentBankInterest(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB21B89501CFAC79E | Since: 323
     */
    function networkSpentProstitutes(): void;
    /**
     * No comment provided
     *
     * Hash: 0x812F5488B1B2A299 | Since: 323
     */
    function networkSpentArrestBail(): void;
    /**
     * According to how I understood this in the freemode script alone,
     * The first parameter is determined by a function named, func_5749 within the freemode script which has a list of all the vehicles and a set price to return which some vehicles deals with globals as well. So the first parameter is basically the set in stone insurance cost it's gonna charge you for that specific vehicle model.
     *
     * The second parameter whoever put it was right, they call GET_ENTITY_MODEL with the vehicle as the paremeter.
     *
     * The third parameter is the network handle as they call their little struct<13> func or atleast how the script decompiled it to look which in lamens terms just returns the network handle of the previous owner based on DECOR_GET_INT(vehicle, "Previous_Owner").
     *
     * The fourth parameter is a bool that returns true/false depending on if your bank balance is greater then 0.
     *
     * The fifth and last parameter is a bool that returns true/false depending on if you have the money for the car based on the cost returned by func_5749. In the freemode script eg,
     * `bool hasTheMoney = MONEY::_GET_BANK_BALANCE() < carCost.`
     *
     * Hash: 0x9FF28D88C766E3E8 | Since: 323
     */
    function networkSpentPayVehicleInsurancePremium(amount: number, vehicleModel: number | string, notBankrupt: boolean, hasTheMoney: boolean): any;
    /**
     * No comment provided
     *
     * Hash: 0xACDE7185B374177C | Since: 323
     */
    function networkSpentCallPlayer(): any;
    /**
     * No comment provided
     *
     * Hash: 0x29B260B84947DFCC | Since: 323
     */
    function networkSpentBounty(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6A445B64ED7ABEB5 | Since: 323
     */
    function networkSpentFromRockstar(): void;
    /**
     * Hardcoded to return 0.
     *
     * Hash: 0x9B5016A6433A68C5 | Since: 323
     */
    function networkSpendEarnedFromBankAndWallets(amount: number): number;
    /**
     * This isn't a hash collision.
     *
     * Hash: 0x20194D48EAEC9A41 | Since: 323
     */
    function processCashGift(): [string, number, number];
    /**
     * No comment provided
     *
     * Hash: 0xCD4D66B43B1DD28D | Since: 2189
     */
    function networkSpentMoveSubmarine(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7C99101F7FCE2EE5 | Since: 323
     */
    function networkSpentPlayerHealthcare(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD5BB406F4E04019F | Since: 323
     */
    function networkSpentNoCops(): void;
    /**
     * No comment provided
     *
     * Hash: 0x948705F6F9C50824 | Since: 2699
     */
    function networkSpentCargoSourcing(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8204DA7934DF3155 | Since: 323
     */
    function networkSpentRequestJob(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D26502BB97BFE62 | Since: 323
     */
    function networkSpentRequestHeist(): void;
    /**
     * The first parameter is the amount spent which is store in a global when this native is called. The global returns 10. Which is the price for both rides.
     *
     * The last 3 parameters are,
     * 2,0,1 in the am_ferriswheel.c
     * 1,0,1 in the am_rollercoaster.c
     *
     *
     * Hash: 0x8A7B3952DD64D2B5 | Since: 323
     */
    function networkBuyFairgroundRide(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7C4FCCD2E4DEB394 | Since: 323
     */
    function networkEconomyHasFixedCrazyNumbers(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x28F174A67B8D0C2F | Since: 323
     */
    function networkSpentJobSkip(amount: number, matchId: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xFFBE02CD385356BD | Since: 573
     */
    function networkSpentBossGoon(amount: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x08A1B82B91900682 | Since: 573
     */
    function networkSpendGoon(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDBC966A01C02BCA7 | Since: 573
     */
    function networkSpendBoss(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE7DF4E0545DFB56E | Since: 573
     */
    function networkSpentMoveYacht(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFC4EE00A7B3BFB76 | Since: 573
     */
    function networkSpentRenameOrganization(): void;
    /**
     * No comment provided
     *
     * Hash: 0x30FD873ECE50E9F6 | Since: 757
     */
    function networkBuyContrabandMission(p2: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x112209CE0290C03A | Since: 757
     */
    function networkSpentPaServiceHeli(): void;
    /**
     * No comment provided
     *
     * Hash: 0xED5FD7AF10F5E262 | Since: 757
     */
    function networkSpentPaServiceVehicle(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0D30EB83668E63C5 | Since: 757
     */
    function networkSpentPaServiceSnack(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB49ECA122467D05F | Since: 757
     */
    function networkSpentPaServiceDancer(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE23ADC6FCB1F29AE | Since: 757
     */
    function networkSpentPaServiceImpound(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0FE8E1FCD2B86B33 | Since: 757
     */
    function networkSpentPaHeliPickup(): void;
    /**
     * No comment provided
     *
     * Hash: 0x69EF772B192614C1 | Since: 757
     */
    function networkSpentPurchaseOfficeProperty(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8E243837643D9583 | Since: 757
     */
    function networkSpentUpgradeOfficeProperty(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBD0EFB25CCA8F97A | Since: 757
     */
    function networkSpentPurchaseWarehouseProperty(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA95F667A755725DA | Since: 757
     */
    function networkSpentUpgradeWarehouseProperty(): void;
    /**
     * No comment provided
     *
     * Hash: 0x33981D6804E62F49 | Since: 944
     */
    function networkSpentPurchaseImpexpWarehouseProperty(amount: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x4128464231E3CA0B | Since: 944
     */
    function networkSpentUpgradeImpexpWarehouseProperty(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2FAB6614CE22E196 | Since: 944
     */
    function networkSpentTradeImpexpWarehouseProperty(): void;
    /**
     * No comment provided
     *
     * Hash: 0x05F04155A226FBBF | Since: 757
     */
    function networkSpentOrderWarehouseVehicle(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE8B0B270B6E7C76E | Since: 757
     */
    function networkSpentOrderBodyguardVehicle(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5BCDE0F640C773D2 | Since: 877
     */
    function networkSpentJukebox(): void;
    /**
     * No comment provided
     *
     * Hash: 0x998E18CEB44487FC | Since: 877
     */
    function networkSpentPurchaseClubHouse(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA07759E6FDDD7CF | Since: 877
     */
    function networkSpentUpgradeClubHouse(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6FD97159FE3C971A | Since: 877
     */
    function networkSpentPurchaseBusinessProperty(): void;
    /**
     * No comment provided
     *
     * Hash: 0x675D19C6067CAE08 | Since: 877
     */
    function networkSpentUpgradeBusinessProperty(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA51B086B0B2C0F7A | Since: 877
     */
    function networkSpentTradeBusinessProperty(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD7CCCBA28C4ECAF0 | Since: 877
     */
    function networkSpentMcAbility(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0035BB914316F1E3 | Since: 877
     */
    function networkSpentPayBusinessSupplies(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5F456788B05FAEAC | Since: 944
     */
    function networkSpentChangeAppearance(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA75CCF58A60A5FD1 | Since: 944
     */
    function networkSpentVehicleExportMods(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB4C2EC463672474E | Since: 944
     */
    function networkSpentPurchaseOfficeGarage(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2AFC2D19B50797F2 | Since: 944
     */
    function networkSpentUpgradeOfficeGarage(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC1952F3773BA18FE | Since: 944
     */
    function networkSpentImportExportRepair(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCCB339CC970452DA | Since: 1180
     */
    function networkSpentPurchaseHangar(): void;
    /**
     * No comment provided
     *
     * Hash: 0x615EB504B0788DAF | Since: 1180
     */
    function networkSpentUpgradeHangar(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB18AC2ECBB15CB6A | Since: 1180
     */
    function networkSpentHangarUtilityCharges(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB1F1346FD57685D7 | Since: 1180
     */
    function networkSpentHangarStaffCharges(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAC272C0AE01B4BD8 | Since: 1103
     */
    function networkSpentBuyTruck(): void;
    /**
     * No comment provided
     *
     * Hash: 0x365E877C61D6988B | Since: 1103
     */
    function networkSpentUpgradeTruck(): void;
    /**
     * No comment provided
     *
     * Hash: 0x12D148D26538D0F9 | Since: 1103
     */
    function networkSpentBuyBunker(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0C82D21A77C22D49 | Since: 1103
     */
    function networkSpentUpradeBunker(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9251B6ABF2D0A5B4 | Since: 1103
     */
    function networkEarnFromSellBunker(amount: number, bunkerHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5D97630A8A0EF123 | Since: 1103
     */
    function networkSpentBallisticEquipment(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7A5349B773584675 | Since: 1290
     */
    function networkEarnRdrBonus(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x35F8DA0E8A31EF1B | Since: 1180
     */
    function networkEarnWagePayment(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x005ACA7100BD101D | Since: 1180
     */
    function networkEarnWagePaymentBonus(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4EA3F425C7744D21 | Since: 1290
     */
    function networkSpentBuyBase(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3DD3F33A5D55EA6F | Since: 1290
     */
    function networkSpentUpgradeBase(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0CCE73BC7A11E885 | Since: 1290
     */
    function networkSpentBuyTiltrotor(): void;
    /**
     * No comment provided
     *
     * Hash: 0x165E135D6DFA2907 | Since: 1290
     */
    function networkSpentUpgradeTiltrotor(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5BBBD92186E1F1C5 | Since: 1290
     */
    function networkSpentEmployAssassins(): void;
    /**
     * No comment provided
     *
     * Hash: 0x771ADB0E7635B7BF | Since: 1290
     */
    function networkSpendGangopsCannon(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDA947AE8880D5C18 | Since: 1290
     */
    function networkSpendGangopsSkipMission(): void;
    /**
     * No comment provided
     *
     * Hash: 0x487009DD91D93429 | Since: 1868
     */
    function networkSpendCasinoHeistSkipMission(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0E1E2FF3F4EC11AA | Since: 1290
     */
    function networkEarnSellBase(amount: number, baseNameHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5B669CF2299A271F | Since: 1290
     */
    function networkEarnTargetRefund(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2DCB19ABAB0380A8 | Since: 1290
     */
    function networkEarnGangopsWages(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x15BB2A5C757EB91F | Since: 1290
     */
    function networkEarnGangopsWagesBonus(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCAC672087B4A24AB | Since: 1290
     */
    function networkEarnDarChallenge(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x128A747F4A230952 | Since: 1290
     */
    function networkEarnDoomsdayFinaleBonus(amount: number, vehicleHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xA9A31475F530DFDA | Since: 1290
     */
    function networkEarnGangopsAward(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2597A0D4A4FC2C77 | Since: 1290
     */
    function networkEarnGangopsElite(amount: number, actIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1B882107C23A9022 | Since: 1290
     */
    function networkServiceEarnGangopsRivalDelivery(earnedMoney: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA19EC0786E326E06 | Since: 1290
     */
    function networkSpendGangopsStartStrand(_type: number, amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5ECE6FD7B4EC8D6A | Since: 1290
     */
    function networkSpendGangopsTripSkip(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xED26584F6BDCBBFD | Since: 1290
     */
    function networkEarnGangopsPrepParticipation(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA9160796D47A2CF8 | Since: 1290
     */
    function networkEarnGangopsSetup(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1C121FC9545E0D52 | Since: 1290
     */
    function networkEarnGangopsFinale(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2A7CEC72C3443BCC | Since: 1290
     */
    function networkSpendGangopsRepairCost(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE0F82D68C7039158 | Since: 1493
     */
    function networkEarnNightclub(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB4DEAE67F35E2ACD | Since: 1493
     */
    function networkEarnNightclubDancing(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFDD8D2440DAF1590 | Since: 1604
     */
    function networkEarnBbEventBonus(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2A93C46AAB1EACC9 | Since: 1493
     */
    function networkSpentPurchaseHackerTruck(): void;
    /**
     * No comment provided
     *
     * Hash: 0x226C284C830D0CA8 | Since: 1493
     */
    function networkSpentUpgradeHackerTruck(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE8815FE993896AD3 | Since: 1493
     */
    function networkEarnHackerTruck(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xED76D195E6E3BF7F | Since: 1493
     */
    function networkSpentPurchaseNightclubAndWarehouse(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1DC9B749E7AE282B | Since: 1493
     */
    function networkSpentUpgradeNightclubAndWarehouse(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC6E74CF8C884C880 | Since: 1493
     */
    function networkEarnNightclubAndWarehouse(): void;
    /**
     * No comment provided
     *
     * Hash: 0x65482BFD0923C8A1 | Since: 1493
     */
    function networkSpendNightclubAndWarehouse(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE284D46FFDB82E36 | Since: 1493
     */
    function networkSpentRdrHatchetBonus(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x876056684281655D | Since: 1493
     */
    function networkSpentNightclubEntryFee(player: number | string | Player, amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDD21B016E4289465 | Since: 1493
     */
    function networkSpendNightclubBarDrink(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1BEA0CD93470BB1F | Since: 1493
     */
    function networkSpendBountyHunterMission(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6C8A544E4CF14FC | Since: 1493
     */
    function networkSpentRehireDj(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x14EAEA58F93B55AF | Since: 1604
     */
    function networkSpentArenaJoinSpectator(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE08256F972C7BB2C | Since: 1604
     */
    function networkEarnArenaSkillLevelProgression(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0F99F70C61F14619 | Since: 1604
     */
    function networkEarnArenaCareerProgression(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE5F5A060439C2F5D | Since: 1604
     */
    function networkSpendMakeItRain(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x40D5DA9550B7CB46 | Since: 1604
     */
    function networkSpendBuyArena(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x037ABB06825D7AB1 | Since: 1604
     */
    function networkSpendUpgradeArena(amount: number): void;
    /**
     * type either, 1 for cam spectate, 2 for drone
     *
     * Hash: 0x7049BF858601DC0F | Since: 1604
     */
    function networkSpendArenaSpectatorBox(amount: number, _type: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9A5BD1D0000B339C | Since: 1604
     */
    function networkSpendSpinTheWheelPayment(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x676C48776CACBB5A | Since: 1604
     */
    function networkEarnSpinTheWheelCash(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x619496D837EFD920 | Since: 1604
     */
    function networkSpendArenaPremium(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x631F1CB8FB4130AA | Since: 1604
     */
    function networkEarnArenaWar(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5E7AE8AABE8B7C0D | Since: 1604
     */
    function networkEarnArenaWarAssassinateTarget(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA82959062361B259 | Since: 1604
     */
    function networkEarnArenaWarEventCargo(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDFF49EE984E7AAE8 | Since: 1734
     */
    function networkEarnRcTimeTrial(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5128DF14A5BB86FC | Since: 1734
     */
    function networkEarnDailyObjectiveEvent(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFBBE0570EDF39D46 | Since: 1734
     */
    function networkSpendCasinoMembership(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x34A6FC4D06C4DA0F | Since: 1734
     */
    function networkSpendBuyCasino(amount: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x4740D62BC1B4EBEA | Since: 1734
     */
    function networkSpendUpgradeCasino(amount: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x88BF9B612B84D3C3 | Since: 1734
     */
    function networkSpendCasinoGeneric(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0819DB99FD2FBBD8 | Since: 1734
     */
    function networkEarnCasinoTimeTrialWin(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5517F90043466049 | Since: 1734
     */
    function networkEarnCollectablesActionFigures(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x83AD64F53F4E9483 | Since: 1734
     */
    function networkEarnCasinoCollectableCompletedCollection(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8BCB27A057DF7B7F | Since: 1734
     */
    function networkEarnSellPrizeVehicle(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x566FD402B25787DE | Since: 1734
     */
    function networkEarnCasinoMissionReward(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAC95ED552157E092 | Since: 1734
     */
    function networkEarnCasinoStoryMissionReward(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x09E8F18641BE2575 | Since: 1734
     */
    function networkEarnCasinoMissionParticipation(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x973A9781A34F8DEB | Since: 1734
     */
    function networkEarnCasinoAward(amount: number, hash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x870289A558348378 | Since: 1868
     */
    function networkSpendBuyArcade(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5574637681911FDA | Since: 1868
     */
    function networkSpendUpgradeArcade(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD30E8392F407C328 | Since: 1868
     */
    function networkSpendCasinoHeist(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB5B58E24868CB09E | Since: 1868
     */
    function networkSpendArcadeMgmt(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEAD3D81F2C3A1458 | Since: 1868
     */
    function networkSpendPlayArcade(): void;
    /**
     * No comment provided
     *
     * Hash: 0x43AA7FAC4E6D6687 | Since: 1868
     */
    function networkSpendArcade(): void;
    /**
     * No comment provided
     *
     * Hash: 0x72E7C7B9615FA3C3 | Since: 1868
     */
    function networkEarnCasinoHeist(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4C3B75694F7E0D9C | Since: 1868
     */
    function networkEarnUpgradeArcade(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD29334ED1A256DBF | Since: 1868
     */
    function networkEarnArcade(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA95CFB4E02390842 | Since: 1868
     */
    function networkEarnCollectables(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0DD362F14F18942A | Since: 1868
     */
    function networkEarnChallenge(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3EC7471E6909798A | Since: 1868
     */
    function networkEarnCasinoHeistAwards(): void;
    /**
     * No comment provided
     *
     * Hash: 0x84FF63BD4966F33D | Since: 1734
     */
    function networkEarnCollectableItem(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5C9B198AF5A54FA6 | Since: 2060
     */
    function networkEarnCollectableCompletedCollection(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDE68E30D89F97132 | Since: 2060
     */
    function networkEarnYatchMission(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE2E244AB823B4483 | Since: 2060
     */
    function networkEarnDispatchCall(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x54ABA22FA6371249 | Since: 2189
     */
    function networkSpendBeachParty(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6C8BC1488527AAAB | Since: 2189
     */
    function networkSpendSubmarine(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC991C255AA6D90B2 | Since: 2189
     */
    function networkSpendCasinoClub(amount1: number, amount2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x90CD7C6871FBF1B4 | Since: 2189
     */
    function networkSpendBuySub(): void;
    /**
     * No comment provided
     *
     * Hash: 0x89049A84065CE68E | Since: 2189
     */
    function networkSpendUpgradeSub(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE86689E5F82DE429 | Since: 2189
     */
    function networkSpendIslandHeist(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD21D111C46BA9F15 | Since: 2189
     */
    function networkEarnIslandHeist(amount1: number, amount2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA51338E0DCCD4065 | Since: 2189
     */
    function networkEarnBeachPartyLostFound(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE2BB399D90942091 | Since: 2189
     */
    function networkEarnFromIslandHeistDjMission(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1464E17207CD36E2 | Since: 2372
     */
    function networkSpendCarClubMembership(amount1: number, amount2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x925227803A0EAA1B | Since: 2372
     */
    function networkSpendCarClubBar(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9BEA350D7C48061B | Since: 2372
     */
    function networkSpendAutoshopModify(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1E46824E6FB92B5 | Since: 2372
     */
    function networkSpendCarClubTakeover(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEEB7E5D1FEB20869 | Since: 2372
     */
    function networkSpendBuyAutoshop(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDD829AA198FDC46C | Since: 2372
     */
    function networkSpendUpgradeAutoshop(): void;
    /**
     * No comment provided
     *
     * Hash: 0x36A7FD5A7194B03E | Since: 2372
     */
    function networkEarnAutoshopBusiness(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC66D1CF99ED7FE25 | Since: 2372
     */
    function networkEarnAutoshopIncome(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC6227792A188E2E | Since: 2372
     */
    function networkEarnCarclubMembership(): void;
    /**
     * No comment provided
     *
     * Hash: 0x533073E8A596008C | Since: 2372
     */
    function networkEarnDailyVehicle(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFE65AFE7308E32B2 | Since: 2372
     */
    function networkEarnDailyVehicleBonus(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB846F547D3792DF6 | Since: 2372
     */
    function networkEarnTunerAward(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBCB266247193AC61 | Since: 2372
     */
    function networkEarnTunerRobbery(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC10322A8D3E061EE | Since: 2372
     */
    function networkEarnUpgradeAutoshop(): void;
    /**
     * No comment provided
     *
     * Hash: 0x93AA4165CB67E925 | Since: 2372
     */
    function networkSpendInteractionMenuAbility(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB9F7A469460E7A4A | Since: 2372
     */
    function networkSpendSetCommonFields(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7E2F4E8F44CAF4E0 | Since: 2699
     */
    function networkSpendSetDiscount(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEA8CD3C9B3C35884 | Since: 2545
     */
    function networkSpendBuyAgency(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6CCA64840589A3B6 | Since: 2545
     */
    function networkSpendUpgradeAgency(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1B2120405080125C | Since: 2545
     */
    function networkSpendAgency(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF8793B91EA094A7 | Since: 2545
     */
    function networkSpendHidden(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD9DF467CBE4398C8 | Since: 2545
     */
    function networkSpendSourceBike(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD86581F9E7CDA383 | Since: 2545
     */
    function networkSpendCompSuv(): void;
    /**
     * No comment provided
     *
     * Hash: 0x61A2DF64ED2D396E | Since: 2545
     */
    function networkSpendSuvFstTrvl(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEBD482B82ACB8BAD | Since: 2545
     */
    function networkSpendSupply(): void;
    /**
     * No comment provided
     *
     * Hash: 0x923AEA8E78F8DF0B | Since: 2699
     */
    function networkSpendBikeShop(): void;
    /**
     * No comment provided
     *
     * Hash: 0x02D24A35A9CC3503 | Since: 2699
     */
    function networkSpendVehicleRequested(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2CEB0E0BC2A77C05 | Since: 2699
     */
    function networkSpendGunrunning(): void;
    /**
     * No comment provided
     *
     * Hash: 0x663B4B9D11742A12 | Since: 2545
     */
    function networkEarnAgencySafe(): void;
    /**
     * No comment provided
     *
     * Hash: 0x146D4EB6D22A403F | Since: 2545
     */
    function networkEarnAwardContract(): void;
    /**
     * No comment provided
     *
     * Hash: 0x38482AD49CB905C7 | Since: 2545
     */
    function networkEarnAgencyContract(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7397A115030F1BE3 | Since: 2545
     */
    function networkEarnAwardPhone(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE29F3D5FA63B1B82 | Since: 2545
     */
    function networkEarnAgencyPhone(): void;
    /**
     * No comment provided
     *
     * Hash: 0x88D6C327D6C57C45 | Since: 2545
     */
    function networkEarnAwardFixerMission(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6283E5DE4C4460C6 | Since: 2545
     */
    function networkEarnFixerPrep(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBA154373C5FE51E8 | Since: 2545
     */
    function networkEarnFixerFinale(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF4A8E57460BF2037 | Since: 2545
     */
    function networkEarnFixerAgencyShortTrip(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5B4DBDED84D6A420 | Since: 2545
     */
    function networkEarnAwardShortTrip(): void;
    /**
     * No comment provided
     *
     * Hash: 0x235D41210B3A1A5E | Since: 2545
     */
    function networkEarnFixerRivalDelivery(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD07C7C3F1995108C | Since: 2545
     */
    function networkEarnUpgradeAgency(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1254B5B3925EFD3D | Since: 2545
     */
    function networkSpendApartmentUtilities(amount: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x92D1CFDA1227FF1C | Since: 2545
     */
    function networkSpendBusinessPropertyFees(): void;
    /**
     * No comment provided
     *
     * Hash: 0x45087AE480B233AC | Since: 2699
     */
    function networkEarnSightseeingReward(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2C5809EB9DF57257 | Since: 2699
     */
    function networkEarnBikerShop(): void;
    /**
     * No comment provided
     *
     * Hash: 0x71BEC32FA466E105 | Since: 2699
     */
    function networkEarnBiker(): void;
    /**
     * No comment provided
     *
     * Hash: 0x59498BC8B1C8B15C | Since: 2699
     */
    function networkYohanSourceGoods(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA2ED36DCF0FCA413 | Since: 2802
     */
    function networkSpendBuyMfgarage(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCF8F346DDDC66643 | Since: 2802
     */
    function networkSpendUpgradeMfgarage(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB48185C0CA67B16B | Since: 2802
     */
    function networkSpendBuySupplies(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF1E26A7924327152 | Since: 2802
     */
    function networkSpendBuyAcidLab(): void;
    /**
     * No comment provided
     *
     * Hash: 0x110EE9D486C23126 | Since: 2802
     */
    function networkSpendUpgradeAcidLabEquipment(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA7D541C9ACD63133 | Since: 2802
     */
    function networkSpendUpgradeAcidLabArmor(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2940558E05BCC2EC | Since: 2802
     */
    function networkSpendUpgradeAcidLabScoop(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4B99AB08C92C54E4 | Since: 2802
     */
    function networkSpendUpgradeAcidLabMines(): void;
    /**
     * No comment provided
     *
     * Hash: 0x842B1C5AF61ACDE9 | Since: 2802
     */
    function networkSpendRenameAcidLab(): void;
    /**
     * No comment provided
     *
     * Hash: 0x446798F7495DD7D8 | Since: 2802
     */
    function networkSpendRenameAcidProduct(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDDF047577F1A02A7 | Since: 2802
     */
    function networkEarnAwardJuggaloMission(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1A8165767AD2D23 | Since: 2802
     */
    function networkEarnAwardAcidLab(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC30650FA74A19D02 | Since: 2802
     */
    function networkEarnAwardDailyStash(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD01EBAEA1F905EF6 | Since: 2802
     */
    function networkEarnAwardDeadDrop(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBEAFBB1B98B7EF55 | Since: 2802
     */
    function networkEarnAwardRandomEvent(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA914768AD35CD3A5 | Since: 2802
     */
    function networkEarnAwardTaxi(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA81017EE1324FDFE | Since: 2802
     */
    function networkEarnStreetDealer(): void;
    /**
     * No comment provided
     *
     * Hash: 0x79B656937DF6DF5D | Since: 2802
     */
    function networkEarnSellAcid(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE3942D59E8A7F70D | Since: 2802
     */
    function networkEarnSetupParticipationAcidLab(): void;
    /**
     * No comment provided
     *
     * Hash: 0x136F11B5DF1B304D | Since: 2802
     */
    function networkEarnSourceParticipationAcidLab(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA3EF9B09A8D76B4 | Since: 2802
     */
    function networkEarnSellParticipationAcidLab(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE01D10BA8CD53621 | Since: 2802
     */
    function networkEarnJuggaloStoryMission(): void;
    /**
     * No comment provided
     *
     * Hash: 0x40FF6CCCC476185C | Since: 2802
     */
    function networkEarnJuggaloStoryMissionParticipation(): void;
    /**
     * JUGGALO_PHONE_MISSION...
     *
     * Hash: 0xCE4452AE85F5E252 | Since: 2802
     */
    function networkEarnFooliganJob(): void;
    /**
     * JUGGALO_PHONE_MISSION_PARTICIPATION...
     *
     * Hash: 0xC376B92D0E060970 | Since: 2802
     */
    function networkEarnFooliganJobParticipation(): void;
    /**
     * No comment provided
     *
     * Hash: 0x991E1588FAD9019D | Since: 2802
     */
    function networkEarnTaxiJob(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCABC9874AFA70D6D | Since: 2802
     */
    function networkEarnDailyStashHouseCompleted(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9C0C6BD0F94CE391 | Since: 2802
     */
    function networkEarnDailyStashHouseParticipation(): void;
    /**
     * Used for SERVICE_EARN_AVENGER_OPERATIONS & SERVICE_EARN_AVENGER_OPS_BONUS
     *
     * Hash: 0x55F006B9D4A46C1D | Since: 2944
     */
    function networkEarnAvenger(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDEA273D5F8A9661A | Since: 2944
     */
    function networkEarnSmugglerOps(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDCEF983C24191997 | Since: 2944
     */
    function networkEarnBonusObjective(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF8332B06F0EECC9C | Since: 2944
     */
    function networkEarnProgressHub(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8C7E8D6F96C9E948 | Since: 2944
     */
    function networkSpentAirFreight(hangarCargoSourcingPrice: number, fromBank: boolean, fromBankAndWallet: boolean, cost: number, warehouseId: number, warehouseSlot: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xED1B407BADA42CEC | Since: 2944
     */
    function networkSpentSkipCargoSourceSetup(amount: number, fromBank: boolean, fromBankAndWallet: boolean, cost: number): void;
    /**
     * Hash p3 = STEALTH_MODULE
     *
     * Hash: 0x95CE79A6939C537A | Since: 2944
     */
    function networkSpentStealthModule(amount: number, fromBank: boolean, fromBankAndWallet: boolean, p3: number | string): void;
    /**
     * Hash p3 = MISSILE_JAMMER
     *
     * Hash: 0xD687100F616163F4 | Since: 2944
     */
    function networkSpentMissileJammer(amount: number, fromBank: boolean, fromBankAndWallet: boolean, p3: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x2803B027479FB640 | Since: 3095
     */
    function networkSpentGeneric(price: number, stat: number | string, spent: number | string): any;
    /**
     * _NETWORK_EARN_G*
     *
     * Hash: 0xBF7B5BB7ED890380 | Since: 3095
     */
    function networkEarnGeneric(amount: number, earn: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0xE03B9F95556E48E9 | Since: 3095
     */
    function networkClearTransactionTelemetryNonce(): void;
    /**
     * No comment provided
     *
     * Hash: 0x76EF28DA05EA395A | Since: 323
     */
    function networkGetVcBankBalance(): number;
    /**
     * No comment provided
     *
     * Hash: 0xA40F9C2623F6A8B5 | Since: 323
     */
    function networkGetVcWalletBalance(characterSlot: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x5CBAD97E059E1B94 | Since: 323
     */
    function networkGetVcBalance(): number;
    /**
     * No comment provided
     *
     * Hash: 0x5D1E75F91C07DEE5 | Since: 323
     */
    function networkGetEvcBalance(): number;
    /**
     * No comment provided
     *
     * Hash: 0x4F54F3B6C202FB4E | Since: 323
     */
    function networkGetPvcBalance(): number;
    /**
     * No comment provided
     *
     * Hash: 0xF9B10B529DCFB33B | Since: 323
     */
    function networkGetStringWalletBalance(characterSlot: number): string;
    /**
     * No comment provided
     *
     * Hash: 0xA6FA3979BED01B81 | Since: 323
     */
    function networkGetStringBankBalance(): string;
    /**
     * No comment provided
     *
     * Hash: 0x700AF71AE615E6DD | Since: 323
     */
    function networkGetStringBankWalletBalance(character: number): string;
    /**
     * Returns true if wallet balance >= amount.
     *
     * Hash: 0xED5AB8860415BABA | Since: 323
     */
    function networkGetCanSpendFromWallet(amount: number, characterSlot: number): boolean;
    /**
     * Returns true if bank balance >= amount.
     *
     * Hash: 0xA31FD6A0865B6D14 | Since: 323
     */
    function networkGetCanSpendFromBank(amount: number): boolean;
    /**
     * Returns true if bank balance + wallet balance >= amount.
     *
     * Hash: 0xDC18531D7019A535 | Since: 323
     */
    function networkGetCanSpendFromBankAndWallet(amount: number, characterSlot: number): boolean;
    /**
     * Retturns the same value as NETWORK_GET_REMAINING_TRANSFER_BALANCE.
     *
     * Hash: 0x13A8DE2FD77D04F3 | Since: 323
     */
    function networkGetPvcTransferBalance(): number;
    /**
     * Returns false if amount > wallet balance or daily transfer limit has been hit.
     *
     * Hash: 0x08E8EEADFD0DC4A0 | Since: 323
     */
    function networkGetCanTransferCash(amount: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5D17BE59D2123284 | Since: 323
     */
    function networkCanReceivePlayerCash(): boolean;
    /**
     * Returns the same value as NETWORK_GET_PVC_TRANSFER_BALANCE.
     *
     * Hash: 0xEA560AC9EEB1E19B | Since: 323
     */
    function networkGetRemainingTransferBalance(): number;
    /**
     * Does nothing and always returns 0.
     *
     * Hash: 0xF70EFA14FE091429 | Since: 323
     */
    function withdrawVc(amount: number): number;
    /**
     * Does nothing and always returns false.
     *
     * Hash: 0xE260E0BB9CD995AC | Since: 323
     */
    function depositVc(amount: number): boolean;
    /**
     * This function is hard-coded to always return 1.
     *
     * Hash: 0xE154B48B68EF72BC | Since: 323
     */
    function hasVcWithdrawalCompleted(): boolean;
    /**
     * This function is hard-coded to always return 1.
     *
     * Hash: 0x6FCF8DDEA146C45B | Since: 323
     */
    function wasVcWithdrawalSuccessful(): boolean;
}
export declare namespace netshopping {
    /**
     * No comment provided
     *
     * Hash: 0x7D2708796355B20B | Since: 1290
     */
    function netGameserverUseServerTransactions(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBD4D7EAF8A30F637 | Since: 323
     */
    function netGameserverCatalogItemIsValid(name: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x247F0F73A182EA0B | Since: 323
     */
    function netGameserverCatalogItemKeyIsValid(hash: number | string): boolean;
    /**
     * bool is always true in game scripts
     *
     * Hash: 0xC27009422FCCA88D | Since: 323
     */
    function netGameserverGetPrice(itemHash: number | string, categoryHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x3C4487461E9B0DCB | Since: 323
     */
    function netGameserverCatalogIsValid(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2B949A1E6AEC8F6A | Since: 323
     */
    function netGameserverIsCatalogCurrent(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x85F6C9ABA1DE2BCF | Since: 323
     */
    function netGameserverGetCatalogCloudCrc(): number;
    /**
     * No comment provided
     *
     * Hash: 0x357B152EF96C30B6 | Since: 323
     */
    function netGameserverRefreshServerCatalog(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCF38DAFBB49EDE5E | Since: 323
     */
    function netGameserverRetrieveCatalogRefreshStatus(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xE3E5A7C64CA2C6ED | Since: 323
     */
    function netGameserverInitSession(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0395CB47B022E62C | Since: 323
     */
    function netGameserverRetrieveInitSessionStatus(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xA135AC892A58FC07 | Since: 323
     */
    function netGameserverStartSession(charSlot: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x72EB7BA9B69BF6AB | Since: 323
     */
    function netGameserverStartSessionPending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x170910093218C8B9 | Since: 323
     */
    function netGameserverRetrieveStartSessionStatus(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xC13C38E47EA5DF31 | Since: 323
     */
    function netGameserverRetrieveSessionErrorCode(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xB24F0944DA203D9E | Since: 323
     */
    function netGameserverIsSessionValid(charSlot: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x74A0FD0688F1EE45 | Since: 323
     */
    function netGameserverClearSession(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2F41D51BA3BCD1F1 | Since: 323
     */
    function netGameserverSessionApplyReceivedData(charSlot: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x810E8431C0614BF9 | Since: 323
     */
    function netGameserverIsSessionRefreshPending(): boolean;
    /**
     * Note: only one of the arguments can be set to true at a time
     *
     * Hash: 0x35A1B3E1D1315CFA | Since: 323
     */
    function netGameserverStartSessionRestart(inventory: boolean, playerbalance: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x613F125BA3BD2EB9 | Since: 372
     */
    function netGameserverTransactionInProgress(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x897433D292B44130 | Since: 323
     */
    function netGameserverGetSessionStateAndStatus(): [boolean, number, boolean];
    /**
     * No comment provided
     *
     * Hash: 0x279F08B1A4B29B7E | Since: 323
     */
    function netGameserverBasketStart(categoryHash: number | string, actionHash: number | string, flags: number): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xFA336E7F40C0A0D0 | Since: 372
     */
    function netGameserverBasketEnd(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA65568121DF2EA26 | Since: 323
     */
    function netGameserverBasketIsActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF30980718C8ED876 | Since: 323
     */
    function netGameserverBasketAddItem(quantity: number): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x27F76CC6C55AD30E | Since: 323
     */
    function netGameserverBasketIsFull(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE1A0450ED46A7812 | Since: 323
     */
    function netGameserverBasketApplyServerData(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x39BE7CEA8D9CC8E6 | Since: 323
     */
    function netGameserverCheckoutStart(transactionId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4B64CD6D18474126 | Since: 3570
     */
    function netGameserverCheckoutPending(transactionId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3C5FD37B5499582E | Since: 323
     */
    function netGameserverBeginService(categoryHash: number | string, itemHash: number | string, actionTypeHash: number | string, value: number, flags: number): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xE2A99A9B524BEFFF | Since: 323
     */
    function netGameserverEndService(transactionId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x51F1A8E48C3D2F6D | Since: 323
     */
    function netGameserverDeleteCharacter(slot: number, transfer: boolean, reason: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0A6D923DFFC9BD89 | Since: 323
     */
    function netGameserverDeleteCharacterGetStatus(): number;
    /**
     * No comment provided
     *
     * Hash: 0x112CEF1615A1139F | Since: 323
     */
    function netGameserverDeleteSetTelemetryNonceSeed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD47A2C1BA117471D | Since: 323
     */
    function netGameserverTransferBankToWallet(charSlot: number, amount: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC2F7FE5309181C7D | Since: 323
     */
    function netGameserverTransferWalletToBank(charSlot: number, amount: number): boolean;
    /**
     * Same as 0x350AA5EBC03D3BD2
     *
     * Hash: 0x23789E777D14CE44 | Since: 323
     */
    function netGameserverTransferBankToWalletGetStatus(): number;
    /**
     * Same as 0x23789E777D14CE44
     *
     * Hash: 0x350AA5EBC03D3BD2 | Since: 323
     */
    function netGameserverTransferWalletToBankGetStatus(): number;
    /**
     * Used to be NETWORK_SHOP_CASH_TRANSFER_SET_TELEMETRY_NONCE_SEED
     *
     * Hash: 0x498C1E05CE5F7877 | Since: 323
     */
    function netGameserverTransferCashSetTelemetryNonceSeed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9507D4271988E1AE | Since: 323
     */
    function netGameserverSetTelemetryNonceSeed(): boolean;
}
export declare namespace network {
    /**
     * Online version is defined here: update\update.rpf\common\data\version.txt
     *
     * Example:
     *
     * [ONLINE_VERSION_NUMBER]
     * 1.33
     *
     * _GET_ONLINE_VERSION() will return "1.33"
     *
     * Hash: 0xFCA9373EF340AC0A | Since: 323
     */
    function getOnlineVersion(): string;
    /**
     * Returns whether the player is signed into Social Club.
     *
     * Hash: 0x054354A99211EB96 | Since: 323
     */
    function isSignedIn(): boolean;
    /**
     * Returns whether the game is not in offline mode.
     *
     * seemed not to work for some ppl
     *
     * Hash: 0x1077788E268557C2 | Since: 323
     */
    function isSignedOnline(): boolean;
    /**
     * This function is hard-coded to always return 1.
     *
     * Hash: 0xBD545D44CCE70597 | Since: 323
     */
    function isNpAvailable(): boolean;
    /**
     * This function is hard-coded to always return 1.
     *
     * Hash: 0xEBCAB9E5048434F4 | Since: 323
     */
    function isNpPending(): boolean;
    /**
     * Hardcoded to return zero.
     *
     * ==== PS4 specific info ====
     *
     * Returns some sort of unavailable reason:
     * -1 = REASON_INVALID
     * 0 = REASON_OTHER
     * 1 = REASON_SYSTEM_UPDATE
     * 2 = REASON_GAME_UPDATE
     * 3 = REASON_SIGNED_OUT
     * 4 = REASON_AGE
     * 5 = REASON_CONNECTION
     *
     * =================================
     *
     * Hash: 0x74FB3E29E6D10FA9 | Since: 323
     */
    function getNpUnavailableReason(): number;
    /**
     * This function is hard-coded to always return 1.
     *
     * Hash: 0x7808619F31FF22DB | Since: 323
     */
    function isConnetedToNpPresence(): boolean;
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0xA0FA4EC6A05DA44E | Since: 323
     */
    function isLoggedInToPsn(): boolean;
    /**
     * Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
     *
     * Hash: 0x85443FF4C328F53B | Since: 323
     */
    function hasValidRosCredentials(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8D11E61A4ABF49CC | Since: 323
     */
    function isRefreshingRosCredentials(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9A4CF4F48AD77302 | Since: 323
     */
    function isCloudAvailable(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x67A5589628E0CFF6 | Since: 323
     */
    function hasSocialClubAccount(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBA9775570DB788CF | Since: 323
     */
    function areSocialClubPoliciesCurrent(): boolean;
    /**
     * If you are host, returns true else returns false.
     *
     * Hash: 0x8DB296B814EDDA07 | Since: 323
     */
    function isHost(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8251FB94DC4FDFC8 | Since: 2612
     */
    function getHostPlayerIndex(): number | string;
    /**
     * No comment provided
     *
     * Hash: 0x4237E822315D8BA9 | Since: 323
     */
    function wasGameSuspended(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x25CB5A9F37BFD063 | Since: 323
     */
    function haveOnlinePrivileges(): boolean;
    /**
     * For the XboxPC version this returns true if XPRIVILEGE_MULTIPLAYER_SESSIONS is granted but XPRIVILEGE_CROSS_PLAY is NOT granted.
     * For more information, see https://learn.microsoft.com/en-us/gaming/gdk/_content/gc/live/features/identity/privileges/concepts/live-user-privileges-client#privilege-ids-to-check
     *
     * Always returns false for non-XboxPC versions.
     *
     * Hash: 0xA6BC0D9BCF9662FA | Since: 3504
     */
    function multiplayerCrossplayNotAllowed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1353F87E89946207 | Since: 323
     */
    function hasAgeRestrictions(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x72D918C99BCACC54 | Since: 323
     */
    function haveUserContentPrivileges(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAEEF48CDF5B6CE7C | Since: 323
     */
    function haveCommunicationPrivileges(player: number | string | Player): boolean;
    /**
     * Appears to be PlayStation-specific. Always returns true on other platforms if signed in with the primary user profile
     *
     * Hash: 0xE1E02509169C124E | Since: 3095
     */
    function havePlatformCommunicationPrivileges(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x78321BEA235FD8CD | Since: 323
     */
    function checkOnlinePrivileges(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x595F028698072DD9 | Since: 323
     */
    function checkUserContentPrivileges(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x83F28CE49FBBFFBA | Since: 323
     */
    function checkCommunicationPrivileges(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x07EAB372C8841D99 | Since: 1011
     */
    function checkTextCommunicationPrivileges(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x906CA41A4B74ECA4 | Since: 1493
     */
    function isUsingOnlinePromotion(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x023ACAB2DC9DC4A4 | Since: 1493
     */
    function shouldShowPromotionAlertScreen(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x76BF03FADBF154F5 | Since: 323
     */
    function hasSocialNetworkingSharingPriv(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9614B71F8ADB982B | Since: 323
     */
    function getAgeGroup(): number;
    /**
     * No comment provided
     *
     * Hash: 0x0CF6CC51AA18F0F8 | Since: 1180
     */
    function checkPrivileges(): boolean;
    /**
     * Hardcoded to return false.
     *
     * Hash: 0x64E5C4CC82847B73 | Since: 1734
     */
    function isPrivilegeCheckInProgress(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1F7BC3539F9E0224 | Since: 1180
     */
    function setPrivilegeCheckResultNotNeeded(): void;
    /**
     * Hardcoded to return true.
     *
     * Hash: 0xDE9225854F37BF72 | Since: 2612
     */
    function resolvePrivilegeUserContent(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5EA784D197556507 | Since: 323
     */
    function havePlatformSubscription(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA8ACB6459542A8C8 | Since: 323
     */
    function isPlatformSubscriptionCheckPending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x83FE8D7229593017 | Since: 323
     */
    function showAccountUpgradeUi(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7788DFE15016A182 | Since: 2612
     */
    function isShowingSystemUiOrRecentlyRequestedUpsell(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x53C10C8BD774F2C9 | Since: 1011
     */
    function needToStartNewGameButBlocked(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x580CE4438479CC61 | Since: 323
     */
    function canBail(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x95914459A87EBA28 | Since: 323
     */
    function bail(): void;
    /**
     * No comment provided
     *
     * Hash: 0x283B6062A2C01E9B | Since: 323
     */
    function onReturnToSinglePlayer(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8B4FFC790CA131EF | Since: 617
     */
    function transitionStart(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC3BFED92026A2AAD | Since: 617
     */
    function transitionAddStage(hash: number | string, state: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x04918A41BC9B8157 | Since: 617
     */
    function transitionFinish(): boolean;
    /**
     * 11 - Need to download tunables.
     * 12 - Need to download background script.
     *
     * Returns 1 if the multiplayer is loaded, otherwhise 0.
     *
     * Hash: 0xAF50DA1A3F8B1BA4 | Since: 323
     */
    function canAccessMultiplayer(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x6FA9825D0B5A721B | Since: 3570
     */
    function checkCanAccessAndAlert(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x967E6FB554E1B6DE | Since: 3570
     */
    function getAccessCodeLabelHeading(accessCode: number): string;
    /**
     * No comment provided
     *
     * Hash: 0x214CA1730793EBA8 | Since: 3570
     */
    function getAccessCodeLabelBody(accessCode: number): string;
    /**
     * No comment provided
     *
     * Hash: 0x9747292807126EDA | Since: 323
     */
    function isMultiplayerDisabled(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7E782A910C362C25 | Since: 323
     */
    function canEnterMultiplayer(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x330ED4D05491934F | Since: 323
     */
    function sessionDoFreeroamQuickmatch(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2CFC76E0D087C994 | Since: 323
     */
    function sessionDoFriendMatchmaking(): boolean;
    /**
     * p4 seems to be unused in 1.60/build 2628
     *
     * Hash: 0x94BC51E9449D917F | Since: 323
     */
    function sessionDoCrewMatchmaking(crewId: number, maxPlayers: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBE3E347A87ACEB82 | Since: 323
     */
    function sessionDoActivityQuickmatch(): boolean;
    /**
     * Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
     *
     * Hash: 0x6F3D4ED9BEE4E61D | Since: 323
     */
    function sessionHost(maxPlayers: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xED34C0C02C098BB7 | Since: 323
     */
    function sessionHostClosed(maxPlayers: number): boolean;
    /**
     * Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
     *
     * Hash: 0xB9CFD27A5D578D83 | Since: 323
     */
    function sessionHostFriendsOnly(maxPlayers: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFBCFA2EA2E206890 | Since: 323
     */
    function sessionIsClosedFriends(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x74732C6CA90DA2B4 | Since: 323
     */
    function sessionIsClosedCrew(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF3929C2379B60CCE | Since: 323
     */
    function sessionIsSolo(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCEF70AA5B3F89BA1 | Since: 323
     */
    function sessionIsPrivate(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE0128328CF1FD9F4 | Since: 3095
     */
    function sessionLeaveIncludingReason(leaveFlags: number, leaveReason: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB9351A07A0D458B1 | Since: 2060
     */
    function sessionLeave(): boolean;
    /**
     * Only works as host.
     *
     * Hash: 0xFA8904DC5F304220 | Since: 323
     */
    function sessionKickPlayer(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xD6D09A6F32F49EF1 | Since: 323
     */
    function sessionGetKickVote(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x041C7F2A6C9894E6 | Since: 463
     */
    function sessionReserveSlotsTransition(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x59DF79317F85A7E0 | Since: 323
     */
    function joinPreviouslyFailedSession(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFFE1E5B792D92B34 | Since: 323
     */
    function joinPreviouslyFailedTransition(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x49EC8030F5015F8B | Since: 323
     */
    function sessionSetMatchmakingGroup(matchmakingGroup: number): void;
    /**
     * playerType is an unsigned int from 0 to 4
     * 0 = regular joiner
     * 4 = spectator
     *
     * Hash: 0x8B6A4DD0AF9CE215 | Since: 323
     */
    function sessionSetMatchmakingGroupMax(playerType: number, playerCount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x56CE820830EF040B | Since: 323
     */
    function sessionGetMatchmakingGroupFree(): number;
    /**
     * groupId range: [0, 4]
     *
     * Hash: 0xCAE55F48D3D7875C | Since: 323
     */
    function sessionAddActiveMatchmakingGroup(groupId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF49ABC20D8552257 | Since: 323
     */
    function sessionSetUniqueCrewLimit(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCDC936BF35EDCB73 | Since: 3095
     */
    function sessionGetUniqueCrewLimit(): number;
    /**
     * No comment provided
     *
     * Hash: 0x4811BBAC21C5FCD5 | Since: 323
     */
    function sessionSetUniqueCrewLimitTransition(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5539C3EBF104A53A | Since: 323
     */
    function sessionSetUniqueCrewOnlyCrewsTransition(): void;
    /**
     * No comment provided
     *
     * Hash: 0x702BC4D605522539 | Since: 323
     */
    function sessionSetCrewLimitMaxMembersTransition(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3F52E880AAF6C8CA | Since: 323
     */
    function sessionSetMatchmakingPropertyId(): void;
    /**
     * p0 in the decompiled scripts is always the stat mesh_texblend * 0.07 to int
     *
     * Hash: 0xF1EEA2DDA9FFA69D | Since: 323
     */
    function sessionSetMatchmakingMentalState(): void;
    /**
     * No comment provided
     *
     * Hash: 0x59D421683D31835A | Since: 573
     */
    function sessionSetNumBosses(num: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1153FA02A659051C | Since: 323
     */
    function sessionSetScriptValidateJoin(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC19F6C8E7865A6FF | Since: 323
     */
    function sessionValidateJoin(): void;
    /**
     * ..
     *
     * Hash: 0x236406F60CF216D6 | Since: 323
     */
    function addFollowers(): number;
    /**
     * No comment provided
     *
     * Hash: 0x058F43EC59A8631A | Since: 323
     */
    function clearFollowers(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6D03BFBD643B2A02 | Since: 323
     */
    function getGlobalMultiplayerClock(): [number, number, number];
    /**
     * No comment provided
     *
     * Hash: 0x600F8CB31C7AAB6E | Since: 323
     */
    function sessionSetGamemode(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDFFA5BE8381C3314 | Since: 463
     */
    function sessionGetHostAimPreference(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE532D6811B3A4D2A | Since: 323
     */
    function findGamersInCrew(crewId: number): boolean;
    /**
     * Uses attributes to find players with similar stats. Upper/Lower limit must be above zero or the fallback limit +/-0.1 is used.
     * There can be up to 15 attributes, they are as follows:
     *
     * 0 = Races
     * 1 = Parachuting
     * 2 = Horde
     * 3 = Darts
     * 4 = Arm Wrestling
     * 5 = Tennis
     * 6 = Golf
     * 7 = Shooting Range
     * 8 = Deathmatch
     * 9 = MPPLY_MCMWIN/MPPLY_CRMISSION
     *
     * Hash: 0xF7B2CFDE5C9F700D | Since: 323
     */
    function findMatchedGamers(attribute: number, fallbackLimit: number, lowerLimit: number, upperLimit: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDDDF64C91BFCF0AA | Since: 323
     */
    function isFindingGamers(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF9B83B77929D8863 | Since: 323
     */
    function didFindGamersSucceed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA1B043EE79A916FB | Since: 323
     */
    function getNumFoundGamers(): number;
    /**
     * No comment provided
     *
     * Hash: 0x9DCFF2AFB68B3476 | Since: 323
     */
    function getFoundGamer(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x6D14CCEE1B40381A | Since: 323
     */
    function clearFoundGamers(): void;
    /**
     * No comment provided
     *
     * Hash: 0x85A0EF54A500882C | Since: 323
     */
    function queueGamerForStatus(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x2CC848A861D01493 | Since: 323
     */
    function getGamerStatusFromQueue(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x94A8394D150B013A | Since: 323
     */
    function isGettingGamerStatus(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5AE17C6B0134B7F1 | Since: 323
     */
    function didGetGamerStatusSucceed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x02A8BEC6FD9AF660 | Since: 323
     */
    function getGamerStatusResult(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x86E0660E4F5C956D | Since: 323
     */
    function clearGetGamerStatus(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC6F8AB8A4189CF3A | Since: 323
     */
    function sessionJoinInvite(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2FBF47B1B36D36F9 | Since: 323
     */
    function sessionCancelInvite(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA29177F7703B5644 | Since: 323
     */
    function sessionForceCancelInvite(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAC8C7B9B88C4A668 | Since: 323
     */
    function hasPendingInvite(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC42DD763159F3461 | Since: 323
     */
    function hasConfirmedInvite(): boolean;
    /**
     * Triggers a CEventNetworkInviteConfirmed event
     *
     * Hash: 0x62A0296C1BB1CEB3 | Since: 323
     */
    function requestInviteConfirmedEvent(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x23DFB504655D0CE4 | Since: 323
     */
    function sessionWasInvited(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE57397B4A3429DD0 | Since: 323
     */
    function sessionGetInviter(): any;
    /**
     * Seems to be true while "Getting GTA Online session details" shows up.
     *
     * Hash: 0xD313DE83394AF134 | Since: 323
     */
    function sessionIsAwaitingInviteResponse(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBDB6F89C729CF388 | Since: 323
     */
    function sessionIsDisplayingInviteConfirmation(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA0682D67EF1FBA3D | Since: 323
     */
    function suppressInvite(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x34F9E9049454A7A0 | Since: 323
     */
    function blockInvites(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCFEB8AF24FC1D0BB | Since: 323
     */
    function blockJoinQueueInvites(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x68980414688F7F9D | Since: 2612
     */
    function setCanReceiveRsInvites(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF814FEC6A19FD6E0 | Since: 323
     */
    function storeInviteThroughRestart(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B07B9CE4D390375 | Since: 323
     */
    function allowInviteProcessInPlayerSwitch(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7AC752103856FB20 | Since: 323
     */
    function setScriptReadyForEvents(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x74698374C45701D2 | Since: 323
     */
    function isOfflineInvitePending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x140E6A44870A11CE | Since: 323
     */
    function clearOfflineInvitePending(): void;
    /**
     * Retrieves the failed invite join alert reason
     *
     * Hash: 0x7B335F84501145BB | Since: 3179
     */
    function inviteGetJoinFailReason(): string;
    /**
     * Clears the failed invite join alert reason
     *
     * Hash: 0x8EF5F5811A940F82 | Since: 3179
     */
    function inviteClearJoinFailReason(): void;
    /**
     * Loads up the map that is loaded when beeing in mission creator
     * Player gets placed in a mix between online/offline mode
     * p0 is always 2 in R* scripts.
     *
     * Appears to be patched in gtav b757 (game gets terminated) alonside with most other network natives to prevent online modding ~ghost30812
     *
     * Hash: 0xC74C33FCA52856D5 | Since: 323
     */
    function sessionHostSinglePlayer(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3442775428FD2DAA | Since: 323
     */
    function sessionLeaveSinglePlayer(): void;
    /**
     * No comment provided
     *
     * Hash: 0x10FAB35428CCC9D7 | Since: 323
     */
    function isGameInProgress(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD83C2B94E7508980 | Since: 323
     */
    function isSessionActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCA97246103B63917 | Since: 323
     */
    function isInSession(): boolean;
    /**
     * Hardcoded to return 0.
     *
     * Hash: 0x0292BD7F3766CEBC | Since: 3095
     */
    function isAmericasVersion(): boolean;
    /**
     * This checks if player is playing on gta online or not.
     * Please add an if and block your mod if this is "true".
     *
     * Hash: 0x9DE624D2FC4B603F | Since: 323
     */
    function isSessionStarted(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF4435D66A8E2905E | Since: 323
     */
    function isSessionBusy(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4EEBC3694E49C572 | Since: 323
     */
    function canSessionEnd(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4C9034162368E206 | Since: 2060
     */
    function getGameMode(): number;
    /**
     * No comment provided
     *
     * Hash: 0x271CC6AB59EBF9A5 | Since: 323
     */
    function sessionMarkVisible(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBA416D68C631496A | Since: 323
     */
    function sessionIsVisible(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA73667484D7037C3 | Since: 323
     */
    function sessionBlockJoinRequests(toggle: boolean): void;
    /**
     * num player slots allowed in session, seems to work? 32 max
     *
     * Hash: 0xB4AB419E0D86ACAE | Since: 323
     */
    function sessionChangeSlots(slots: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x53AFD64C6758F2F9 | Since: 323
     */
    function sessionGetPrivateSlots(): number;
    /**
     * No comment provided
     *
     * Hash: 0x9C1556705F864230 | Since: 323
     */
    function sessionVoiceHost(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6793E42BE02B575D | Since: 323
     */
    function sessionVoiceLeave(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xABD5E88B8A2D3DB2 | Since: 323
     */
    function sessionVoiceConnectToPlayer(): any;
    /**
     * No comment provided
     *
     * Hash: 0x7F8413B7FC2AA6B9 | Since: 323
     */
    function sessionVoiceRespondToRequest(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5B8ED3DB018927B1 | Since: 323
     */
    function sessionVoiceSetTimeout(timeout: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x855BC38818F6F684 | Since: 323
     */
    function sessionIsInVoiceSession(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB5D3453C98456528 | Since: 323
     */
    function sessionIsVoiceSessionActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEF0912DDF7C4CB4B | Since: 323
     */
    function sessionIsVoiceSessionBusy(): boolean;
    /**
     * Message is limited to 64 characters.
     *
     * Hash: 0x3A214F2EC889B100 | Since: 323
     */
    function sendTextMessage(message: string): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x75138790B4359A74 | Since: 323
     */
    function setActivitySpectator(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x12103B9E0C9F92FB | Since: 323
     */
    function isActivitySpectator(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0E4F77F7B9D74D84 | Since: 573
     */
    function setActivityPlayerMax(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D277B76D1D12222 | Since: 323
     */
    function setActivitySpectatorMax(maxSpectators: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x73E2B500410DA5A2 | Since: 323
     */
    function getActivityPlayerNum(): number;
    /**
     * No comment provided
     *
     * Hash: 0x2763BBAA72A7BCB9 | Since: 323
     */
    function isActivitySpectatorFromHandle(): [boolean, any];
    /**
     * p0: Unknown int
     * p1: Unknown int
     * p2: Unknown int
     * p3: Unknown int
     * p4: Unknown always 0 in decompiled scripts
     * p5: BOOL purpose unknown, both 0 and 1 are used in decompiled scripts.
     * p6: BOOL purpose unknown, both 0 and 1 are used in decompiled scripts.
     * p7: Unknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.
     * p8: Unknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.
     * p9: Unknown int, sometimes 0, but also 32768 or 16384 appear in decompiled scripst, maybe a flag of some sort?
     *
     * From what I can tell it looks like it does the following:
     * Creates/hosts a new transition to another online session, using this in FiveM will result in other players being disconencted from the server/preventing them from joining. This is most likely because I entered the wrong session parameters since they're pretty much all unknown right now.
     * You also need to use `NetworkJoinTransition(Player player)` and `NetworkLaunchTransition()`.
     *
     * Hash: 0xA60BB5CE242BB254 | Since: 323
     */
    function hostTransition(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x71FB0EBCD4915D56 | Since: 323
     */
    function doTransitionQuickmatch(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA091A5E44F0072E5 | Since: 323
     */
    function doTransitionQuickmatchAsync(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9C4AB58491FDC98A | Since: 323
     */
    function doTransitionQuickmatchWithGroup(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xA06509A691D12BE4 | Since: 323
     */
    function joinGroupActivity(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1888694923EF4591 | Since: 393
     */
    function clearGroupActivity(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB13E88E655E5A3BC | Since: 323
     */
    function retainActivityGroup(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6512765E3BE78C50 | Since: 323
     */
    function isTransitionClosedFriends(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0DBD5D7E3C5BEC3B | Since: 323
     */
    function isTransitionClosedCrew(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5DC577201723960A | Since: 323
     */
    function isTransitionSolo(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5A6AA44FF8E931E6 | Since: 323
     */
    function isTransitionPrivate(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x617F49C2668E6155 | Since: 757
     */
    function getNumTransitionNonAsyncGamers(): number;
    /**
     * No comment provided
     *
     * Hash: 0x261E97AD7BCF3D40 | Since: 323
     */
    function markAsPreferredActivity(): void;
    /**
     * No comment provided
     *
     * Hash: 0x39917E1B4CB0F911 | Since: 323
     */
    function markAsWaitingAsync(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2CE9D95E4051AECD | Since: 678
     */
    function setInProgressFinishTime(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF26739BCD9907D5 | Since: 323
     */
    function setTransitionCreatorHandle(): any;
    /**
     * No comment provided
     *
     * Hash: 0xFB3272229A82C759 | Since: 323
     */
    function clearTransitionCreatorHandle(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4A595C32F77DFF76 | Since: 323
     */
    function inviteGamersToTransition(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xCA2C8073411ECDB6 | Since: 323
     */
    function setGamerInvitedToTransition(): any;
    /**
     * No comment provided
     *
     * Hash: 0xD23A1A815D21DB19 | Since: 323
     */
    function leaveTransition(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2DCF46CB1A4F0884 | Since: 323
     */
    function launchTransition(): boolean;
    /**
     * Appears to set whether a transition should be started when the session is migrating.
     *
     * Hash: 0xA2E9C1AB8A92E8CD | Since: 323
     */
    function setDoNotLaunchFromJoinAsMigratedHost(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x023782EFC70585EE | Since: 2699
     */
    function cancelTransitionMatchmaking(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEAA572036990CD1B | Since: 323
     */
    function bailTransition(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3E9BB38102A589B0 | Since: 323
     */
    function doTransitionToGame(maxPlayers: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4665F51EFED00034 | Since: 323
     */
    function doTransitionToNewGame(maxPlayers: number): boolean;
    /**
     * p2 is true 3/4 of the occurrences I found.
     * 'players' is the number of players for a session. On PS3/360 it's always 18. On PC it's 32.
     *
     * Hash: 0x3AAD8B2FCA1E289F | Since: 323
     */
    function doTransitionToFreemode(players: number): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x9E80A5BA8109F974 | Since: 323
     */
    function doTransitionToNewFreemode(players: number): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x9D7696D8F4FA6CB7 | Since: 323
     */
    function isTransitionToGame(): boolean;
    /**
     * Returns count.
     *
     * Hash: 0x73B000F7FBC55829 | Since: 323
     */
    function getTransitionMembers(dataCount: number): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0x521638ADA1BA0D18 | Since: 323
     */
    function applyTransitionParameter(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEBEFC2E77084F599 | Since: 323
     */
    function applyTransitionParameterString(_string: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x31D1D2B858D25E6B | Since: 323
     */
    function sendTransitionGamerInstruction(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x5728BB6D63E3FF1D | Since: 323
     */
    function markTransitionGamerAsFullyJoined(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x0B824797C9BF2159 | Since: 323
     */
    function isTransitionHost(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6B5C83BA3EFE6A10 | Since: 323
     */
    function isTransitionHostFromHandle(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x65042B9774C4435E | Since: 323
     */
    function getTransitionHost(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x68049AEFF83D8F0A | Since: 323
     */
    function isInTransition(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x53FA83401D9C07FE | Since: 323
     */
    function isTransitionStarted(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x520F3282A53D26B7 | Since: 323
     */
    function isTransitionBusy(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x292564C735375EDF | Since: 323
     */
    function isTransitionMatchmaking(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC571D0E77D8BBC29 | Since: 323
     */
    function isTransitionLeavePostponed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1398582B7F72B3ED | Since: 505
     */
    function transitionSetInProgress(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F8E00FB18239600 | Since: 573
     */
    function transitionSetContentCreator(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6F4383B7C92F11A | Since: 573
     */
    function transitionSetActivityIsland(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2B3A8F7CA3A38FDE | Since: 323
     */
    function openTransitionMatchmaking(): void;
    /**
     * No comment provided
     *
     * Hash: 0x43F4DBA69710E01E | Since: 323
     */
    function closeTransitionMatchmaking(): void;
    /**
     * No comment provided
     *
     * Hash: 0x37A4494483B9F5C9 | Since: 323
     */
    function isTransitionOpenToMatchmaking(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0C978FDA19692C2C | Since: 323
     */
    function setTransitionVisibilityLock(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD0A484CB2F829FBE | Since: 323
     */
    function isTransitionVisibilityLocked(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x30DE938B516F0AD2 | Since: 323
     */
    function setTransitionActivityId(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEEEDA5E6D7080987 | Since: 323
     */
    function changeTransitionSlots(): void;
    /**
     * No comment provided
     *
     * Hash: 0x973D76AA760A6CB6 | Since: 323
     */
    function transitionBlockJoinRequests(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9AC9CCBFA8C29795 | Since: 323
     */
    function hasPlayerStartedTransition(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2615AA2A695930C1 | Since: 323
     */
    function areTransitionDetailsValid(): boolean;
    /**
     * int handle[76];
     * NETWORK_HANDLE_FROM_FRIEND(iSelectedPlayer, &handle[0], 13);
     * Player uVar2 = NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(&handle[0]);
     * NETWORK_JOIN_TRANSITION(uVar2);
     * nothing doin.
     *
     * Hash: 0x9D060B08CD63321A | Since: 323
     */
    function joinTransition(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7284A47B3540E6CF | Since: 323
     */
    function hasInvitedGamerToTransition(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x3F9990BF5F22759C | Since: 323
     */
    function hasTransitionInviteBeenAcked(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x05095437424397FA | Since: 323
     */
    function isActivitySession(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x236905C700FDB54D | Since: 2612
     */
    function disableRealtimeMultiplayer(): void;
    /**
     * Does nothing. It's just a nullsub.
     *
     * Hash: 0x4A9FDE3A5A6D0437 | Since: 323
     */
    function setPresenceSessionInvitesBlocked(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC3C7A6AFDB244624 | Since: 323
     */
    function sendInviteViaPresence(dataCount: number): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xC116FF9B4D488291 | Since: 323
     */
    function sendTransitionInviteViaPresence(dataCount: number): [boolean, any];
    /**
     * Contains the string "NETWORK_SEND_PRESENCE_TRANSITION_INVITE" but so does 0xC116FF9B4D488291; seems to fit alphabetically here, tho.
     *
     * Hash: 0x1171A97A3D3981B6 | Since: 323
     */
    function sendImportantTransitionInviteViaPresence(dataCount: number): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x742B58F723233ED9 | Since: 323
     */
    function getPresenceInviteIndexById(): number;
    /**
     * No comment provided
     *
     * Hash: 0xCEFA968912D0F78D | Since: 323
     */
    function getNumPresenceInvites(): number;
    /**
     * No comment provided
     *
     * Hash: 0xFA91550DF9318B22 | Since: 323
     */
    function acceptPresenceInvite(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF0210268DB0974B1 | Since: 323
     */
    function removePresenceInvite(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDFF09646E12EC386 | Since: 323
     */
    function getPresenceInviteId(): number;
    /**
     * No comment provided
     *
     * Hash: 0x4962CC4AA2F345B7 | Since: 323
     */
    function getPresenceInviteInviter(): string;
    /**
     * No comment provided
     *
     * Hash: 0x38D5B0FEBB086F75 | Since: 323
     */
    function getPresenceInviteHandle(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x26E1CD96B0903D60 | Since: 323
     */
    function getPresenceInviteSessionId(): number;
    /**
     * No comment provided
     *
     * Hash: 0x24409FC4C55CB22D | Since: 323
     */
    function getPresenceInviteContentId(): string;
    /**
     * No comment provided
     *
     * Hash: 0xD39B3FFF8FFDD5BF | Since: 323
     */
    function getPresenceInvitePlaylistLength(): number;
    /**
     * No comment provided
     *
     * Hash: 0x728C4CC7920CD102 | Since: 323
     */
    function getPresenceInvitePlaylistCurrent(): number;
    /**
     * No comment provided
     *
     * Hash: 0x3DBF2DF0AEB7D289 | Since: 323
     */
    function getPresenceInviteFromAdmin(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8806CEBFABD3CE05 | Since: 323
     */
    function getPresenceInviteIsTournament(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x76D9B976C4C09FDE | Since: 323
     */
    function hasFollowInvite(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC88156EBB786F8D5 | Since: 323
     */
    function actionFollowInvite(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x439BFDE3CD0610F6 | Since: 323
     */
    function clearFollowInvite(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEBF8284D8CADEB53 | Since: 323
     */
    function removeAndCancelAllInvites(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7524B431B2E6F7EE | Since: 323
     */
    function removeTransitionInvite(): any;
    /**
     * No comment provided
     *
     * Hash: 0x726E0375C7A26368 | Since: 323
     */
    function removeAllTransitionInvite(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF083835B70BA9BFE | Since: 323
     */
    function removeAndCancelAllTransitionInvites(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D80CD1D0E6327DE | Since: 323
     */
    function inviteGamers(): [boolean, any, any];
    /**
     * No comment provided
     *
     * Hash: 0x4D86CD31E8976ECE | Since: 323
     */
    function hasInvitedGamer(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x71DC455F5CD1C2B1 | Since: 505
     */
    function hasMadeInviteDecision(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x3855FB5EB2C5E8B2 | Since: 505
     */
    function getInviteReplyStatus(): number;
    /**
     * No comment provided
     *
     * Hash: 0x74881E6BCAE2327C | Since: 323
     */
    function getCurrentlySelectedGamerHandleFromInviteMenu(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x7206F674F2A3B1BB | Since: 323
     */
    function setCurrentlySelectedGamerHandleFromInviteMenu(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x66F010A4B031A331 | Since: 323
     */
    function setInviteOnCallForInviteMenu(): any;
    /**
     * No comment provided
     *
     * Hash: 0x44B37CDCAE765AAE | Since: 323
     */
    function checkDataManagerSucceededForHandle(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x4AD490AE1536933B | Since: 372
     */
    function checkDataManagerForHandle(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x0D77A82DC2D0DA59 | Since: 323
     */
    function setInviteFailedMessageForInviteMenu(): [any, any];
    /**
     * No comment provided
     *
     * Hash: 0xCBBD7C4991B64809 | Since: 323
     */
    function filloutPmPlayerList(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x716B6DB9D1886106 | Since: 323
     */
    function filloutPmPlayerListWithNames(): [boolean, any, any];
    /**
     * No comment provided
     *
     * Hash: 0xE26CCFF8094D8C74 | Since: 323
     */
    function refreshPlayerListStats(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x796A87B3B68D1F3D | Since: 323
     */
    function setCurrentDataManagerHandle(): [boolean, any];
    /**
     * Hardcoded to return false.
     *
     * Hash: 0x2FC5650B0271CB57 | Since: 323
     */
    function isInPlatformParty(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x01ABCE5E7CBDA196 | Since: 323
     */
    function getPlatformPartyMemberCount(): number;
    /**
     * No comment provided
     *
     * Hash: 0x120364DE2845DAF8 | Since: 323
     */
    function getPlatformPartyMembers(dataSize: number): [number, any];
    /**
     * Hardcoded to return false.
     *
     * Hash: 0xFD8B834A8BA05048 | Since: 323
     */
    function isInPlatformPartyChat(): boolean;
    /**
     * This would be nice to see if someone is in party chat, but 2 sad notes.
     * 1) It only becomes true if said person is speaking in that party at the time.
     * 2) It will never, become true unless you are in that party with said person.
     *
     * Hash: 0x8DE9945BCC9AEC52 | Since: 323
     */
    function isChattingInPlatformParty(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x2BF66D2E7414F686 | Since: 323
     */
    function canQueueForPreviousSessionJoin(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x14922ED3E38761F0 | Since: 323
     */
    function isQueuingForSessionJoin(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6CE50E47F5543D0C | Since: 573
     */
    function clearQueuedJoinRequest(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA2888E3833C8E96 | Since: 323
     */
    function sendQueuedJoinRequest(): void;
    /**
     * No comment provided
     *
     * Hash: 0x25D990F8E0E3F13C | Since: 323
     */
    function removeAllQueuedJoinRequests(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF1B84178F8674195 | Since: 323
     */
    function seedRandomNumberGenerator(seed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x599E4FA1F87EB5FF | Since: 323
     */
    function getRandomInt(): number;
    /**
     * Same as GET_RANDOM_INT_IN_RANGE
     *
     * Hash: 0xE30CF56F1EFA5F43 | Since: 323
     */
    function getRandomIntRanged(rangeStart: number, rangeEnd: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x04BD27B5ACB67067 | Since: 2802
     */
    function getRandomFloatRanged(rangeStart: number, rangeEnd: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x655B91F1495A9090 | Since: 323
     */
    function playerIsCheater(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x172F75B6EE2233BA | Since: 323
     */
    function playerGetCheaterReason(): number;
    /**
     * No comment provided
     *
     * Hash: 0x19D8DA0E5A68045A | Since: 323
     */
    function playerIsBadsport(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x472841A026D26D8B | Since: 1103
     */
    function remoteCheaterPlayerDetected(player: number | string | Player, a: number, b: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEC5E3AF5289DCA81 | Since: 323
     */
    function badSportPlayerLeftDetected(event: number, amountReceived: number): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x7F562DBC212E81F9 | Since: 2545
     */
    function addInvalidObjectModel(modelHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x791EDB5803B2F468 | Since: 2545
     */
    function removeInvalidObjectModel(modelHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x03B2F03A53D85E41 | Since: 2545
     */
    function clearInvalidObjectModels(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE66C690248F11150 | Since: 323
     */
    function applyPedScarData(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x1CA59E306ECB80A5 | Since: 323
     */
    function setThisScriptIsNetworkScript(maxNumMissionParticipants: number, instanceId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1110739EEADB592 | Since: 323
     */
    function tryToSetThisScriptIsNetworkScript(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2910669969E9535E | Since: 323
     */
    function getThisScriptIsNetworkScript(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA6C90FBC38E395EE | Since: 323
     */
    function getMaxNumParticipants(): number;
    /**
     * No comment provided
     *
     * Hash: 0x18D0456E86604654 | Since: 323
     */
    function getNumParticipants(): number;
    /**
     * No comment provided
     *
     * Hash: 0x57D158647A6BFABF | Since: 323
     */
    function getScriptStatus(): number;
    /**
     * No comment provided
     *
     * Hash: 0x3E9B2F01C50DF595 | Since: 323
     */
    function registerHostBroadcastVariables(numVars: number, debugName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x3364AA97340CA215 | Since: 323
     */
    function registerPlayerBroadcastVariables(numVars: number, debugName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xEA8C0DDB10E2822A | Since: 1868
     */
    function registerHighFrequencyHostBroadcastVariables(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD6D7478CA62B8D41 | Since: 1868
     */
    function registerHighFrequencyPlayerBroadcastVariables(): void;
    /**
     * No comment provided
     *
     * Hash: 0x64F62AFB081E260D | Since: 323
     */
    function finishBroadcastingData(): void;
    /**
     * No comment provided
     *
     * Hash: 0x72C8588ABE22C972 | Since: 3586
     */
    function getHostBroadcastDataSizeUnsynced(scriptNameHash: number | string, instance: number, positionHash: number | string, handlerNum: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xB99CD664FD4720A1 | Since: 3586
     */
    function getPlayerBroadcastDataSizeUnsynced(scriptNameHash: number | string, instance: number, positionHash: number | string, handlerNum: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xE448693B3EA3B92C | Since: 3586
     */
    function getBroadcastDataHostUpdateSize(scriptNameHash: number | string, instance: number, positionHash: number | string, handlerNum: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xAC3F722321800755 | Since: 3586
     */
    function getBroadcastDataPlayerUpdateSize(scriptNameHash: number | string, instance: number, positionHash: number | string, handlerNum: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x5D10B3795F3FC886 | Since: 323
     */
    function hasReceivedHostBroadcastData(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x24FB80D107371267 | Since: 323
     */
    function getPlayerIndex(player: number | string | Player): number | string;
    /**
     * No comment provided
     *
     * Hash: 0x1B84DF6AF2A46938 | Since: 323
     */
    function getParticipantIndex(index: number): number;
    /**
     * Returns the Player associated to a given Ped when in an online session.
     *
     * Hash: 0x6C0E2E0125610278 | Since: 323
     */
    function getPlayerIndexFromPed(ped: number | Ped): number | string;
    /**
     * Returns the amount of players connected in the current session. Only works when connected to a session/server.
     *
     * Hash: 0xA4A79DD2D9600654 | Since: 323
     */
    function getNumConnectedPlayers(): number;
    /**
     * No comment provided
     *
     * Hash: 0x93DC1BE4E1ABE9D1 | Since: 323
     */
    function isPlayerConnected(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCF61D4B4702EE9EB | Since: 323
     */
    function getTotalNumPlayers(): number;
    /**
     * No comment provided
     *
     * Hash: 0x6FF8FF40B6357D45 | Since: 323
     */
    function isParticipantActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB8DFD30D6973E135 | Since: 323
     */
    function isPlayerActive(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3CA58F6CB7CBD784 | Since: 323
     */
    function isPlayerAParticipant(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x83CD99A1E6061AB5 | Since: 323
     */
    function isHostOfThisScript(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC7B4D79B01FA7A5C | Since: 323
     */
    function getHostOfThisScript(): number | string;
    /**
     * scriptName examples:
     * "freemode", "AM_CR_SecurityVan", ...
     *
     * Most of the time, these values are used:
     * instance_id = -1
     * position_hash = 0
     *
     * Hash: 0x1D6A14F1F9A736FC | Since: 323
     */
    function getHostOfScript(scriptName: string, instance_id: number, position_hash: number): number | string;
    /**
     * No comment provided
     *
     * Hash: 0x3B3D11CD9FFCDFC9 | Since: 323
     */
    function setMissionFinished(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D40DF90FAD26098 | Since: 323
     */
    function isScriptActive(scriptName: string, instance_id: number, position_hash: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDA7DE67F5FE5EE13 | Since: 2245
     */
    function isScriptActiveByHash(scriptHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x560B423D73015E77 | Since: 1604
     */
    function isThreadANetworkScript(threadId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3658E8CD94FC121A | Since: 323
     */
    function getNumScriptParticipants(scriptName: string, instance_id: number, position_hash: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x638A3A81733086DB | Since: 323
     */
    function getInstanceIdOfThisScript(): number;
    /**
     * No comment provided
     *
     * Hash: 0x257ED0FADF750BCF | Since: 2372
     */
    function getPositionHashOfThisScript(): number;
    /**
     * No comment provided
     *
     * Hash: 0x1AD5B71586B94820 | Since: 323
     */
    function isPlayerAParticipantOnScript(player: number | string | Player, script: string, instance_id: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2302C0264EA58D31 | Since: 323
     */
    function preventScriptHostMigration(): void;
    /**
     * No comment provided
     *
     * Hash: 0x741A3D8380319A81 | Since: 323
     */
    function requestToBeHostOfThisScript(): void;
    /**
     * Return the local Participant ID
     *
     * Hash: 0x90986E8876CE0A83 | Since: 323
     */
    function participantId(): number | string;
    /**
     * Return the local Participant ID.
     *
     * This native is exactly the same as 'PARTICIPANT_ID' native.
     *
     * Hash: 0x57A3BDDAD8E5AA0A | Since: 323
     */
    function participantIdToInt(): number;
    /**
     * No comment provided
     *
     * Hash: 0x2DA41ED6E1FCD7A5 | Since: 463
     */
    function getKillerOfPlayer(player: number | string | Player): [number | string, number];
    /**
     * No comment provided
     *
     * Hash: 0x7A1ADEEF01740A24 | Since: 323
     */
    function getDestroyerOfNetworkId(netId: number): [number | string, number];
    /**
     * No comment provided
     *
     * Hash: 0xC434133D9BA52777 | Since: 463
     */
    function getDestroyerOfEntity(entity: number | Entity): [number | string, number];
    /**
     * NETWORK_GET_ASSISTED_DAMAGE_OF_ENTITY that ensures the entity is dead (IS_ENTITY_DEAD)
     *
     * Hash: 0x83660B734994124D | Since: 463
     */
    function getAssistedKillOfEntity(player: number | string | Player, entity: number | Entity): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x4CACA84440FA26F6 | Since: 323
     */
    function getAssistedDamageOfEntity(player: number | string | Player, entity: number | Entity): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x42B2DAA6B596F5F8 | Since: 323
     */
    function getEntityKillerOfPlayer(player: number | string | Player): [number, number];
    /**
     * No comment provided
     *
     * Hash: 0x2C863ACDCD12B3DB | Since: 2699
     */
    function setCurrentPublicContentId(missionId: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3DAD00265FBF356B | Since: 2802
     */
    function setCurrentChatOption(newChatOption: number): void;
    /**
     * mpSettingSpawn:
     *
     * enum eMpSettingSpawn
     * {
     * MP_SETTING_SPAWN_NULL,
     * MP_SETTING_SPAWN_PROPERTY,
     * MP_SETTING_SPAWN_LAST_POSITION,
     * MP_SETTING_SPAWN_GARAGE,
     * MP_SETTING_SPAWN_RANDOM,
     * MP_SETTING_SPAWN_PRIVATE_YACHT,
     * MP_SETTING_SPAWN_OFFICE,
     * MP_SETTING_SPAWN_CLUBHOUSE,
     * MP_SETTING_SPAWN_IE_WAREHOUSE,
     * MP_SETTING_SPAWN_BUNKER,
     * MP_SETTING_SPAWN_HANGAR,
     * MP_SETTING_SPAWN_DEFUNCT_BASE,
     * MP_SETTING_SPAWN_NIGHTCLUB,
     * MP_SETTING_SPAWN_ARENA_GARAGE,
     * MP_SETTING_SPAWN_CASINO_APARTMENT,
     * MP_SETTING_SPAWN_ARCADE,
     * MP_SETTING_SPAWN_SUBMARINE,
     * MP_SETTING_SPAWN_CAR_MEET,
     * MP_SETTING_SPAWN_AUTO_SHOP,
     * MP_SETTING_SPAWN_FIXER_HQ,
     * MP_SETTING_SPAWN_MAX,
     * };
     *
     * Hash: 0xAA6D5451DC3448B6 | Since: 2699
     */
    function setCurrentSpawnLocationOption(mpSettingSpawn: number | string): void;
    /**
     * Used by MetricVEHICLE_DIST_DRIVEN
     *
     * Hash: 0x8C70252FC40F320B | Since: 2699
     */
    function setVehicleDrivenInTestDrive(toggle: boolean): void;
    /**
     * Sets 'loc' variable used in MetricVEHICLE_DIST_DRIVEN
     *
     * Hash: 0xA0CE91E47531D3BB | Since: 2944
     */
    function setVehicleDrivenLocation(location: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xEA23C49EAA83ACFB | Since: 323
     */
    function resurrectLocalPlayer(pos: Vector3, heading: number, changetime: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2D95C7E2D7E07307 | Since: 323
     */
    function setLocalPlayerInvincibleTime(time: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8A8694B48715B000 | Since: 323
     */
    function isLocalPlayerInvincible(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9DD368BF06983221 | Since: 323
     */
    function disableInvincibleFlashing(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF0BC9BCD24A511D5 | Since: 2372
     */
    function patchPostCutsceneHs4fTunEnt(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x524FF0AEFF9C3973 | Since: 323
     */
    function setLocalPlayerSyncLookAt(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB07D3185E11657A5 | Since: 323
     */
    function hasEntityBeenRegisteredWithThisThread(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA11700682F3AD45C | Since: 323
     */
    function getNetworkIdFromEntity(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xCE4E5D9B0A4FF560 | Since: 323
     */
    function getEntityFromNetworkId(netId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xC7827959479DCC78 | Since: 323
     */
    function getEntityIsNetworked(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0991549DE4D64762 | Since: 323
     */
    function getEntityIsLocal(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x06FAACD625D80CAA | Since: 323
     */
    function registerEntityAsNetworked(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x7368E683BB9038D6 | Since: 323
     */
    function unregisterNetworkedEntity(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x38CE16C96BD11344 | Since: 323
     */
    function doesNetworkIdExist(netId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x18A47D074708FD68 | Since: 323
     */
    function doesEntityExistWithNetworkId(netId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA670B3662FAFFBD0 | Since: 323
     */
    function requestControlOfNetworkId(netId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4D36070FE0215186 | Since: 323
     */
    function hasControlOfNetworkId(netId: number): boolean;
    /**
     * Returns true if the specified network id is controlled by someone else.
     *
     * Hash: 0x7242F8B741CE1086 | Since: 678
     */
    function isNetworkIdRemotelyControlled(netId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB69317BF5E782347 | Since: 323
     */
    function requestControlOfEntity(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x870DDFD5A4A796E4 | Since: 323
     */
    function requestControlOfDoor(doorID: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x01BF60A500E28887 | Since: 323
     */
    function hasControlOfEntity(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5BC9495F0B3B6FA6 | Since: 323
     */
    function hasControlOfPickup(pickup: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCB3C68ADB06195DF | Since: 323
     */
    function hasControlOfDoor(doorHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC01E93FAC20C3346 | Since: 323
     */
    function isDoorNetworked(doorHash: number | string): boolean;
    /**
     * calls from vehicle to net.
     *
     *
     * Hash: 0xB4C94523F023419C | Since: 323
     */
    function vehToNet(vehicle: number | Vehicle): number;
    /**
     * gets the network id of a ped
     *
     * Hash: 0x0EDEC3C276198689 | Since: 323
     */
    function pedToNet(ped: number | Ped): number;
    /**
     * Lets objects spawn online simply do it like this:
     *
     * int createdObject = OBJ_TO_NET(CREATE_OBJECT_NO_OFFSET(oball, pCoords.x, pCoords.y, pCoords.z, 1, 0, 0));
     *
     * Hash: 0x99BFDC94A603E541 | Since: 323
     */
    function objToNet(_object: number | Object): number;
    /**
     * No comment provided
     *
     * Hash: 0x367B936610BA360C | Since: 323
     */
    function netToVeh(netHandle: number): number;
    /**
     * gets the ped id of a network id
     *
     * Hash: 0xBDCD95FC216A8B3E | Since: 323
     */
    function netToPed(netHandle: number): number;
    /**
     * gets the object id of a network id
     *
     * Hash: 0xD8515F5FEA14CB3F | Since: 323
     */
    function netToObj(netHandle: number): number;
    /**
     * gets the entity id of a network id
     *
     * Hash: 0xBFFEAB45A9A9094A | Since: 323
     */
    function netToEnt(netHandle: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xE86051786B66CD8E | Since: 323
     */
    function getLocalHandle(gamerHandleSize: number): any;
    /**
     * No comment provided
     *
     * Hash: 0xDCD51DD8F87AEC5C | Since: 323
     */
    function handleFromUserId(userId: string, gamerHandleSize: number): any;
    /**
     * No comment provided
     *
     * Hash: 0xA0FD21BED61E5C4C | Since: 323
     */
    function handleFromMemberId(memberId: string, gamerHandleSize: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x388EB2B86C73B6B3 | Since: 323
     */
    function handleFromPlayer(player: number | string | Player, gamerHandleSize: number): any;
    /**
     * No comment provided
     *
     * Hash: 0xBC1D768F2F5D6C05 | Since: 323
     */
    function hashFromPlayerHandle(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x58575AC3CF2CA8EC | Since: 323
     */
    function hashFromGamerHandle(): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0xD45CB817D7E177D2 | Since: 323
     */
    function handleFromFriend(friendIndex: number, gamerHandleSize: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x9F0C0A981D73FA56 | Since: 323
     */
    function gamertagFromHandleStart(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xB071E27958EF4CF0 | Since: 323
     */
    function gamertagFromHandlePending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFD00798DBA7523DD | Since: 323
     */
    function gamertagFromHandleSucceeded(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x426141162EBE5CDB | Since: 323
     */
    function getGamertagFromHandle(): [string, any];
    /**
     * Hardcoded to return -1.
     *
     * Hash: 0xD66C9E72B3CC4982 | Since: 323
     */
    function displaynamesFromHandlesStart(): [number, any];
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0x58CC181719256197 | Since: 323
     */
    function getDisplaynamesFromHandles(): number;
    /**
     * No comment provided
     *
     * Hash: 0x57DBA049E110F217 | Since: 323
     */
    function areHandlesTheSame(): [boolean, any, any];
    /**
     * No comment provided
     *
     * Hash: 0x6F79B93B0A8E4133 | Since: 323
     */
    function isHandleValid(gamerHandleSize: number): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xCE5F689CF5A0A49D | Since: 323
     */
    function getPlayerFromGamerHandle(): [number | string, any];
    /**
     * No comment provided
     *
     * Hash: 0xC82630132081BB6F | Since: 323
     */
    function memberIdFromGamerHandle(): [string, any];
    /**
     * No comment provided
     *
     * Hash: 0x0F10B05DDF8D16E9 | Since: 323
     */
    function isGamerInMySession(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x859ED1CEA343FCA8 | Since: 323
     */
    function showProfileUi(): any;
    /**
     * Returns the name of a given player. Returns "**Invalid**" if rlGamerInfo of the given player cannot be retrieved or the player doesn't exist.
     *
     * Hash: 0x7718D2E2060837D2 | Since: 323
     */
    function playerGetName(player: number | string | Player): string;
    /**
     * Returns a string of the player's Rockstar Id.
     * Takes a 24 char buffer. Returns the buffer or "**Invalid**" if rlGamerInfo of the given player cannot be retrieved or the player doesn't exist.
     *
     * Hash: 0x4927FC39CD0869A0 | Since: 323
     */
    function playerGetUserid(player: number | string | Player): [string, number];
    /**
     * Checks if a specific value (BYTE) in CNetGamePlayer is nonzero.
     * Returns always false in Singleplayer.
     *
     * No longer used for dev checks since first mods were released on PS3 & 360.
     * R* now checks with the IS_DLC_PRESENT native for the dlc hash 2532323046,
     * if that is present it will unlock dev stuff.
     *
     * Hash: 0x544ABDDA3B409B6D | Since: 323
     */
    function playerIsRockstarDev(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x565E430DB3B05BEC | Since: 323
     */
    function playerIndexIsCheater(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x815F18AD865F057F | Since: 463
     */
    function entityGetObjectId(entity: number | Entity): number;
    /**
     * I've had this return the player's ped handle sometimes, but also other random entities.
     * Whatever p0 is, it's at least not synced to other players.
     * At least not all the time, some p0 values actually output the same entity, (different handle of course, but same entity).
     * But another p0 value may return an entity for player x, but not for player y (it'll just return -1 even if the entity exists on both clients).
     *
     * Returns an entity handle or -1, value changes based on p0's value.
     *
     * Hash: 0x37D5F739FD494675 | Since: 505
     */
    function getEntityFromObjectId(): number;
    /**
     * No comment provided
     *
     * Hash: 0x7E58745504313A2E | Since: 323
     */
    function isInactiveProfile(): [boolean, any];
    /**
     * Returns the name from given friend gamer handle.
     *
     * Hash: 0x338ECE3637937BC2 | Since: 3258
     */
    function loadGamerDisplayName(): [string, any];
    /**
     * No comment provided
     *
     * Hash: 0xAFEBB0D5D8F687D2 | Since: 323
     */
    function getMaxFriends(): number;
    /**
     * No comment provided
     *
     * Hash: 0x203F1CFD823B27A4 | Since: 323
     */
    function getFriendCount(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE11EBBB2A783FE8B | Since: 323
     */
    function getFriendName(friendIndex: number): string;
    /**
     * No comment provided
     *
     * Hash: 0x4164F227D052E293 | Since: 323
     */
    function getFriendDisplayName(friendIndex: number): string;
    /**
     * No comment provided
     *
     * Hash: 0x425A44533437B64D | Since: 323
     */
    function isFriendOnline(name: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x87EB7A3FFCB314DB | Since: 323
     */
    function isFriendHandleOnline(): [boolean, any];
    /**
     * In scripts R* calls 'NETWORK_GET_FRIEND_NAME' in this param.
     *
     * Hash: 0x2EA9A3BEDF3F17B8 | Since: 323
     */
    function isFriendInSameTitle(friendName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x57005C18827F3A28 | Since: 323
     */
    function isFriendInMultiplayer(friendName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1A24A179F9B31654 | Since: 323
     */
    function isFriend(): [boolean, any];
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0x0BE73DA6984A6E33 | Since: 323
     */
    function isPendingFriend(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6EA101606F6E4D81 | Since: 323
     */
    function isAddingFriend(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8E02D73914064223 | Since: 323
     */
    function addFriend(message: string): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xBAD8F2A42B844821 | Since: 323
     */
    function isFriendIndexOnline(friendIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1B857666604B1A74 | Since: 323
     */
    function setPlayerIsPassive(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x82377B65E943F72D | Since: 323
     */
    function getPlayerOwnsWaypoint(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC927EC229934AF60 | Since: 323
     */
    function canSetWaypoint(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4C2A9FDC22377075 | Since: 372
     */
    function ignoreRemoteWaypoints(): void;
    /**
     * communicationType: 0 = VOICE; 1 = TEXT_CHAT; 2 = TEXT_MESSAGE; 3 = EMAIL; 4 = USER_CONTENT; 5 = USER_TEXT
     *
     * Hash: 0xDBDF80673BBA3D65 | Since: 3095
     */
    function doesCommunicationGroupHavePermission(communicationType: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x20C12650830A64EC | Since: 3570
     */
    function doesCommunicationGroupHaveSettingsEnabled(communicationType: number): boolean;
    /**
     * Returns communicationGroupFlag
     * communicationType: see 0xDBDF80673BBA3D65
     *
     * enum eCommunicationGroupFlag
     * {
     * COMMUNICATION_GROUP_LOCAL_PLAYER = 1 << 0,
     * COMMUNICATION_GROUP_FRIENDS = 1 << 1,
     * COMMUNICATION_GROUP_SMALL_CREW = 1 << 2,
     * COMMUNICATION_GROUP_LARGE_CREW = 1 << 3,
     * COMMUNICATION_GROUP_RECENT_PLAYER = 1 << 4,
     * COMMUNICATION_GROUP_SAME_SESSION = 1 << 5,
     * COMMUNICATION_GROUP_SAME_TEAM = 1 << 6,
     * COMMUNICATION_GROUP_INVALID = 1 << 7,
     * };
     *
     * Hash: 0x40DF02F371F40883 | Since: 3095
     */
    function getCommunicationGroupFlags(communicationType: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x97F35B898D2D067F | Since: 3570
     */
    function getCommunicationGroupDefaultFlags(communicationType: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xBF66ACD9AE81A99F | Since: 3570
     */
    function getCommunicationGroupValue(communicationType: number): number;
    /**
     * communicationType: see 0xDBDF80673BBA3D65
     * communicationGroupFlag: see 0x40DF02F371F40883
     *
     * Hash: 0xE549F846DE7D32D5 | Since: 3095
     */
    function setCommunicationGroupFlags(communicationType: number, communicationGroupFlag: number): void;
    /**
     * _NETWORK_HAS_P*
     * checkType 3 is similar as using 0x9F633448E4C73207
     *
     * Hash: 0x62E29CDA11F9C230 | Since: 3258
     */
    function hasPlayerPassedCheckType(checkType: number): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xAD4326FCA30D62F8 | Since: 2802
     */
    function isPlayerOnBlocklist(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xB309EBEA797E001F | Since: 323
     */
    function setScriptAutomuted(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x26F07DD83A5F7F98 | Since: 323
     */
    function hasAutomuteOverride(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE870F9F1F7B4F1FA | Since: 323
     */
    function hasHeadset(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7D395EA61622E116 | Since: 323
     */
    function setLookAtTalkers(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC0D2AF00BCC234CA | Since: 323
     */
    function isPushToTalkActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF2FD55CB574BCC55 | Since: 323
     */
    function gamerHasHeadset(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x71C33B22606CD88A | Since: 323
     */
    function isGamerTalking(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x559EBF901A8C68E0 | Since: 2699
     */
    function permissionsHasGamerRecord(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x8F5D1AD832AEB06C | Since: 323
     */
    function canCommunicateWithGamer(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xA150A4F065806B1F | Since: 944
     */
    function canTextChatWithGamer(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xCE60DE011B6C7978 | Since: 323
     */
    function isGamerMutedByMe(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xDF02A2C93F1F26DA | Since: 323
     */
    function amIMutedByGamer(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xE944C4F5AF1B5883 | Since: 323
     */
    function isGamerBlockedByMe(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x15337C7C268A27B2 | Since: 323
     */
    function amIBlockedByGamer(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xB57A49545BA53CE7 | Since: 323
     */
    function canViewGamerUserContent(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xCCA4318E1AB03F1F | Since: 323
     */
    function hasViewGamerUserContentResult(): [boolean, any];
    /**
     * NETWORK_CAN_*
     *
     * Hash: 0x9F633448E4C73207 | Since: 3258
     */
    function canTextFromGamerBeViewed(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x07DD29D5E22763F1 | Since: 323
     */
    function canPlayMultiplayerWithGamer(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x135F9B7B7ADD2185 | Since: 323
     */
    function canGamerPlayMultiplayerWithMe(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x021ABCBD98EC4320 | Since: 2612
     */
    function canSendLocalInvite(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x421E34C55F125964 | Since: 2612
     */
    function canReceiveLocalInvite(): [boolean, any];
    /**
     * returns true if someone is screaming or talking in a microphone
     *
     * Hash: 0x031E11F3D447647E | Since: 323
     */
    function isPlayerTalking(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3FB99A8B08D18FD6 | Since: 323
     */
    function playerHasHeadset(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8C71288AE68EDE39 | Since: 323
     */
    function isPlayerMutedByMe(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9D6981DFC91A8604 | Since: 323
     */
    function amIMutedByPlayer(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x57AF1F8E27483721 | Since: 323
     */
    function isPlayerBlockedByMe(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x87F395D957D4353D | Since: 323
     */
    function amIBlockedByPlayer(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x21A1684A25C2867F | Since: 323
     */
    function getPlayerLoudness(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xCBF12D65F95AD686 | Since: 323
     */
    function setTalkerProximity(value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x84F0F13120B4E098 | Since: 323
     */
    function getTalkerProximity(): number;
    /**
     * No comment provided
     *
     * Hash: 0xBABEC9E69A91C57B | Since: 323
     */
    function setVoiceActive(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCFEB46DCD7D8D5EB | Since: 323
     */
    function remainInGameChat(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAF66059A131AA269 | Since: 323
     */
    function overrideTransitionChat(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD5B4883AC32F24C3 | Since: 323
     */
    function setTeamOnlyChat(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x265559DA40B3F327 | Since: 573
     */
    function setScriptControllingTeams(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4348BFDA56023A2F | Since: 573
     */
    function setSameTeamAsLocalPlayer(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6F697A66CE78674E | Since: 323
     */
    function overrideTeamRestrictions(team: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x70DA3BF8DACD3210 | Since: 323
     */
    function setOverrideSpectatorMode(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3C5C1E2C2FF814B1 | Since: 323
     */
    function setOverrideTutorialSessionChat(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D7AFCBF21C51712 | Since: 323
     */
    function setProximityAffectsTeam(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF46A1E03E8755980 | Since: 323
     */
    function setNoSpectatorChat(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6A5D89D7769A40D8 | Since: 323
     */
    function setIgnoreSpectatorChatLimitsSameTeam(toggle: boolean): void;
    /**
     * Could possibly bypass being muted or automatically muted
     *
     * Hash: 0x3039AE5AD2C9C0C4 | Since: 323
     */
    function overrideChatRestrictions(player: number | string | Player, toggle: boolean): void;
    /**
     * This is used alongside the native,
     * 'NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS'. Read its description for more info.
     *
     * Hash: 0x97DD4C5944CC2E6A | Since: 323
     */
    function overrideSendRestrictions(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x57B192B4D4AD23D5 | Since: 323
     */
    function overrideSendRestrictionsAll(toggle: boolean): void;
    /**
     * R* uses this to hear all player when spectating.
     * It allows you to hear other online players when their chat is on none, crew and or friends
     *
     * Hash: 0xDDF73E2B1FEC5AB4 | Since: 323
     */
    function overrideReceiveRestrictions(player: number | string | Player, toggle: boolean): void;
    /**
     * p0 is always false in scripts.
     *
     * Hash: 0x0FF2862B61A58AF9 | Since: 323
     */
    function overrideReceiveRestrictionsAll(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF6212C2EFEF1A23 | Since: 323
     */
    function setVoiceChannel(channel: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE036A705F989E049 | Since: 323
     */
    function clearVoiceChannel(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDBD2056652689917 | Since: 323
     */
    function applyVoiceProximityOverride(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xF03755696450470C | Since: 323
     */
    function clearVoiceProximityOverride(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5E3AA4CA2B6FB0EE | Since: 323
     */
    function enableVoiceBandwidthRestriction(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA575C391FEA25CC | Since: 323
     */
    function disableVoiceBandwidthRestriction(player: number | string | Player): void;
    /**
     * NETWORK_GET_M[A-U]
     *
     * Hash: 0xADB57E5B663CCA8B | Since: 323
     */
    function getMuteCountForPlayer(p0: number | string | Player): [number, number];
    /**
     * No comment provided
     *
     * Hash: 0x8EF52ACAECC51D9C | Since: 1734
     */
    function setSpectatorToNonSpectatorTextChat(toggle: boolean): void;
    /**
     * Same as _IS_TEXT_CHAT_ACTIVE, except it does not check if the text chat HUD component is initialized, and therefore may crash.
     *
     * Hash: 0x5FCF4D7069B09026 | Since: 323
     */
    function textChatIsTyping(): boolean;
    /**
     * Starts a new singleplayer game (at the prologue).
     *
     * Hash: 0x593850C16A36B692 | Since: 323
     */
    function shutdownAndLaunchSinglePlayerGame(): void;
    /**
     * In singleplayer this will re-load your game.
     *
     * In FiveM / GTA:Online this disconnects you from the session, and starts loading single player, however you still remain connected to the server (only if you're the host, if you're not then you also (most likely) get disconnected from the server) and other players will not be able to join until you exit the game.
     *
     * You might need to DoScreenFadeIn and ShutdownLoadingScreen otherwise you probably won't end up loading into SP at all.
     *
     * Somewhat related note: opening the pause menu after loading into this 'singleplayer' mode crashes the game.
     *
     * Hash: 0x9ECA15ADFE141431 | Since: 505
     */
    function shutdownAndLoadMostRecentSave(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF808475FA571D823 | Since: 323
     */
    function setFriendlyFireOption(toggle: boolean): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0x1DCCACDCFC569362 | Since: 323
     */
    function setRichPresence(): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0x3E200C2BCF4164EB | Since: 323
     */
    function setRichPresenceString(textLabel: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5ED0356A0CE3A34F | Since: 323
     */
    function getTimeoutTime(): number;
    /**
     * p4 and p5 are always 0 in scripts
     *
     * Hash: 0x9769F811D1785B03 | Since: 323
     */
    function leavePedBehindBeforeWarp(player: number | string | Player, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF22E0F32968E967 | Since: 323
     */
    function leavePedBehindBeforeCutscene(player: number | string | Player): void;
    /**
     * entity must be a valid entity; ped can be NULL
     *
     * Hash: 0x715135F4B82AC90D | Since: 323
     */
    function removeAllStickyBombsFromEntity(entity: number | Entity, ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x17C9E241111A674D | Since: 2060
     */
    function keepEntityCollisionDisabledAfterAnimScene(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2E4C123D1C8A710E | Since: 505
     */
    function isAnyPlayerNear(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x579CCED0265D4896 | Since: 323
     */
    function clanServiceIsValid(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB124B57F571D8F18 | Since: 323
     */
    function clanPlayerIsActive(): [boolean, any];
    /**
     * bufferSize is 35 in the scripts.
     *
     * `bufferSize is the elementCount of p0(desc), sizeof(p0) == 280 == p1*8 == 35 * 8, p2(netHandle) is obtained from NETWORK::NETWORK_HANDLE_FROM_PLAYER.  And no, I can't explain why 35 * sizeof(int) == 280 and not 140, but I'll get back to you on that.`
     *
     * the answer is: because p0 an int64_t* / int64_t[35].  and FYI p2 is an int64_t[13]
     *
     * https://pastebin.com/cSZniHak
     *
     * Hash: 0xEEE6EACBE8874FBA | Since: 323
     */
    function clanPlayerGetDesc(bufferSize: number): [boolean, any, any];
    /**
     * bufferSize is 35 in the scripts.
     *
     * Hash: 0x7543BB439F63792B | Since: 323
     */
    function clanIsRockstarClan(bufferSize: number): [boolean, any];
    /**
     * bufferSize is 35 in the scripts.
     *
     * Hash: 0xF45352426FF3A4F0 | Since: 323
     */
    function clanGetUiFormattedTag(bufferSize: number): [any, string];
    /**
     * No comment provided
     *
     * Hash: 0x1F471B79ACC90BEF | Since: 323
     */
    function clanGetLocalMembershipsCount(): number;
    /**
     * No comment provided
     *
     * Hash: 0x48DE78AF2C8885B8 | Since: 323
     */
    function clanGetMembershipDesc(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xA989044E70010ABE | Since: 323
     */
    function clanDownloadMembership(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x5B9E023DC6EBEDC0 | Since: 323
     */
    function clanDownloadMembershipPending(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xB3F64A6A91432477 | Since: 323
     */
    function clanAnyDownloadMembershipPending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBB6E6FEE99D866B2 | Since: 323
     */
    function clanRemoteMembershipsAreInCache(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xAAB11F6C4ADBC2C1 | Since: 323
     */
    function clanGetMembershipCount(): [number, number];
    /**
     * No comment provided
     *
     * Hash: 0x48A59CF88D43DF0E | Since: 323
     */
    function clanGetMembershipValid(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xC8BC2011F67B3411 | Since: 323
     */
    function clanGetMembership(): [boolean, number, any];
    /**
     * No comment provided
     *
     * Hash: 0x9FAAA4F4FC71F87F | Since: 323
     */
    function clanJoin(clanDesc: number): boolean;
    /**
     * Only documented...
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x729E3401F0430686 | Since: 323
     */
    function clanCrewinfoGetStringValue(animDict: string, animName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2B51EDBEFC301339 | Since: 323
     */
    function clanCrewinfoGetCrewranktitle(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC32EA7A2F6CA7557 | Since: 323
     */
    function clanHasCrewinfoMetadataBeenReceived(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5835D9CD92E83184 | Since: 323
     */
    function clanGetEmblemTxdName(): [boolean, any, string];
    /**
     * No comment provided
     *
     * Hash: 0x13518FF1C6B28938 | Since: 323
     */
    function clanRequestEmblem(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA134777FF7F33331 | Since: 323
     */
    function clanIsEmblemReady(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x113E6E3E50E286B0 | Since: 323
     */
    function clanReleaseEmblem(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9AA46BADAD0E27ED | Since: 323
     */
    function getPrimaryClanDataClear(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x042E4B70B93E6054 | Since: 323
     */
    function getPrimaryClanDataCancel(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCE86D8191B762107 | Since: 323
     */
    function getPrimaryClanDataStart(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xB5074DB804E28CE7 | Since: 323
     */
    function getPrimaryClanDataPending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5B4F04F19376A0BA | Since: 323
     */
    function getPrimaryClanDataSuccess(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC080FF658B2E41DA | Since: 323
     */
    function getPrimaryClanDataNew(): [boolean, any, any];
    /**
     * Whether or not another player is allowed to take control of the entity
     *
     * Hash: 0x299EEB23175895FC | Since: 323
     */
    function setIdCanMigrate(netId: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE05E81A888FA63C8 | Since: 323
     */
    function setIdExistsOnAllMachines(netId: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA8A024587329F36A | Since: 323
     */
    function setIdAlwaysExistsForPlayer(netId: number, player: number | string | Player, toggle: boolean): void;
    /**
     * "No Reassign" in CPhysicalScriptGameStateDataNode
     *
     * Hash: 0x9D724B400A7E8FFC | Since: 2189
     */
    function setIdCanBeReassigned(netId: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD830567D88A1E873 | Since: 323
     */
    function setEntityCanBlend(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0379DAF89BA09AA5 | Since: 944
     */
    function setObjectCanBlendWhenFixed(_object: number | Object, toggle: boolean): void;
    /**
     * if set to true other network players can't see it
     * if set to false other network player can see it
     * =========================================
     * ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
     *
     * pc or last gen?
     *
     * ^^ last-gen
     *
     * Hash: 0xF1CA12B18AEF5298 | Since: 323
     */
    function setEntityOnlyExistsForParticipants(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA6928482543022B4 | Since: 323
     */
    function setIdVisibleInCutscene(netId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x32EBD154CB6B8B99 | Since: 505
     */
    function setIdVisibleInCutsceneHack(netId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x76B3F29D3F967692 | Since: 2189
     */
    function setIdVisibleInCutsceneRemainHack(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAAA553E7DD28A457 | Since: 323
     */
    function setCutsceneEntities(toggle: boolean): void;
    /**
     * Getter for SET_NETWORK_CUTSCENE_ENTITIES.
     *
     * Hash: 0x66D6A5E9C511214A | Since: 2699
     */
    function areCutsceneEntitiesed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3FA36981311FA4FF | Since: 323
     */
    function setIdPassControlInTutorial(netId: number, state: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA1607996431332DF | Since: 323
     */
    function isIdOwnedByParticipant(netId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x96320E6549DAE7B4 | Since: 2802
     */
    function setRemotePlayerVisibleInCutscene(player: number | string | Player, locallyVisible: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1065D68947E7B6E | Since: 323
     */
    function setLocalPlayerVisibleInCutscene(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE5F773C1A1D9D168 | Since: 323
     */
    function setLocalPlayerInvisibleLocally(bIncludePlayersVehicle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7619364C82D3BF14 | Since: 323
     */
    function setLocalPlayerVisibleLocally(bIncludePlayersVehicle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x12B37D54667DB0B8 | Since: 323
     */
    function setPlayerInvisibleLocally(player: number | string | Player, bIncludePlayersVehicle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xFAA10F1FAFB11AF2 | Since: 323
     */
    function setPlayerVisibleLocally(player: number | string | Player, bIncludePlayersVehicle: boolean): void;
    /**
     * Hardcoded to not work in SP.
     *
     * Hash: 0x416DBD4CD6ED8DD2 | Since: 323
     */
    function fadeOutLocalPlayer(): void;
    /**
     * normal - transition like when your coming out of LSC
     * slow - transition like when you walk into a mission
     *
     *
     * Hash: 0xDE564951F95E09ED | Since: 323
     */
    function fadeOutEntity(entity: number | Entity, normal: boolean, slow: boolean): void;
    /**
     * state - 0 does 5 fades
     * state - 1 does 6 fades
     *
     * p3: setting to 1 made vehicle fade in slower, probably "slow" as per NETWORK_FADE_OUT_ENTITY
     *
     * Hash: 0x1F4ED342ACEFE62D | Since: 323
     */
    function fadeInEntity(entity: number | Entity, state: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x631DC5DFF4B110E3 | Since: 323
     */
    function isPlayerFading(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x422F32CC7E56ABAD | Since: 323
     */
    function isEntityFading(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE73092F4157CD126 | Since: 323
     */
    function isPlayerInCutscene(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE0031D3C8F36AB82 | Since: 323
     */
    function setEntityVisibleInCutscene(): void;
    /**
     * Makes the provided entity visible for yourself for the current frame.
     *
     * Hash: 0xE135A9FF3F5D05D8 | Since: 323
     */
    function setEntityLocallyInvisible(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x241E289B5C059EDC | Since: 323
     */
    function setEntityLocallyVisible(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x6E192E33AD436366 | Since: 323
     */
    function isDamageTrackerActiveOnId(netID: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD45B1FFCCD52FF19 | Since: 323
     */
    function activateDamageTrackerOnId(netID: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB2092A1EAA7FD45F | Since: 757
     */
    function isDamageTrackerActiveOnPlayer(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBEC0816FF5ACBCDA | Since: 757
     */
    function activateDamageTrackerOnPlayer(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD82CF8E64C8729D8 | Since: 323
     */
    function isSphereVisibleToAnotherMachine(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDC3A310219E5DA62 | Since: 323
     */
    function isSphereVisibleToPlayer(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4E5C93BD0C32FBF8 | Since: 323
     */
    function reserveMissionObjects(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB60FEBA45333D36F | Since: 323
     */
    function reserveMissionPeds(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x76B02E21ED27A469 | Since: 323
     */
    function reserveMissionVehicles(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x797F9C5E661D920E | Since: 1290
     */
    function reserveLocalMissionObjects(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2C8DF5D129595281 | Since: 1493
     */
    function reserveLocalMissionPeds(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x42613035157E4208 | Since: 1103
     */
    function reserveLocalMissionVehicles(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x800DD4721A8B008B | Since: 323
     */
    function canRegisterMissionObjects(amount: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBCBF4FEF9FA5D781 | Since: 323
     */
    function canRegisterMissionPeds(amount: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7277F1F2E085EE74 | Since: 323
     */
    function canRegisterMissionVehicles(amount: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0A49D1CB6E34AF72 | Since: 757
     */
    function canRegisterMissionPickups(amount: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE16AA70CE9BEEDC3 | Since: 877
     */
    function canRegisterMissionDoors(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x69778E7564BADE6D | Since: 323
     */
    function canRegisterMissionEntities(ped_amt: number, vehicle_amt: number, object_amt: number, pickup_amt: number): boolean;
    /**
     * p0 appears to be for MP
     *
     * Hash: 0xAA81B5F10BC43AC2 | Since: 323
     */
    function getNumReservedMissionObjects(): number;
    /**
     * p0 appears to be for MP
     *
     * Hash: 0x1F13D5AE5CB17E17 | Since: 323
     */
    function getNumReservedMissionPeds(): number;
    /**
     * p0 appears to be for MP
     *
     * Hash: 0xCF3A965906452031 | Since: 323
     */
    function getNumReservedMissionVehicles(): number;
    /**
     * No comment provided
     *
     * Hash: 0x12B6281B6C6706C0 | Since: 323
     */
    function getNumCreatedMissionObjects(): number;
    /**
     * No comment provided
     *
     * Hash: 0xCB215C4B56A7FAE7 | Since: 323
     */
    function getNumCreatedMissionPeds(): number;
    /**
     * No comment provided
     *
     * Hash: 0x0CD9AB83489430EA | Since: 323
     */
    function getNumCreatedMissionVehicles(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE42D626EEC94E5D9 | Since: 1290
     */
    function getReservedMissionEntitiesInArea(pos: Vector3): [any, any, any];
    /**
     * No comment provided
     *
     * Hash: 0xC7BE335216B5EC7C | Since: 323
     */
    function getMaxNumObjects(): number;
    /**
     * No comment provided
     *
     * Hash: 0x0C1F7D49C39D2289 | Since: 323
     */
    function getMaxNumPeds(): number;
    /**
     * No comment provided
     *
     * Hash: 0x0AFCE529F69B21FF | Since: 323
     */
    function getMaxNumVehicles(): number;
    /**
     * No comment provided
     *
     * Hash: 0xA72835064DD63E4C | Since: 323
     */
    function getMaxNumPickups(): number;
    /**
     * No comment provided
     *
     * Hash: 0xBA7F0B77D80A4EB7 | Since: 372
     */
    function setObjectScopeDistance(_object: number | Object, range: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0F1A4B45B7693B95 | Since: 2189
     */
    function allowCloningWhileInTutorial(): void;
    /**
     * A value between 1.0 and 5.0
     *
     * Hash: 0xC6FCEE21C6FCEE21 | Since: 2545
     */
    function setTaskCutsceneInscopeMultipler(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCFE359CCCFE359CC | Since: 3258
     */
    function hideEntityInTutorialSession(netHandle: number, hide: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7A5487FE9FAA6B48 | Since: 323
     */
    function getTime(): number;
    /**
     * Returns the same value as GET_NETWORK_TIME in freemode, but as opposed to `GET_NETWORK_TIME` it always gets the most recent time, instead of once per tick.
     * Could be used for benchmarking since it can return times in ticks.
     *
     * Hash: 0x89023FBBF9200E9F | Since: 323
     */
    function getTimeAccurate(): number;
    /**
     * No comment provided
     *
     * Hash: 0x46718ACEEDEAFC84 | Since: 323
     */
    function hasTimeStarted(): boolean;
    /**
     * Adds the first argument to the second.
     *
     * Hash: 0x017008CCDAD48503 | Since: 323
     */
    function getTimeOffset(timeA: number, timeB: number): number;
    /**
     * Subtracts the second argument from the first, then returns whether the result is negative.
     *
     * Hash: 0xCB2CF5148012C8D0 | Since: 323
     */
    function isTimeLessThan(timeA: number, timeB: number): boolean;
    /**
     * Subtracts the first argument from the second, then returns whether the result is negative.
     *
     * Hash: 0xDE350F8651E4346C | Since: 323
     */
    function isTimeMoreThan(timeA: number, timeB: number): boolean;
    /**
     * Returns true if the two times are equal; otherwise returns false.
     *
     * Hash: 0xF5BC95857BD6D512 | Since: 323
     */
    function isTimeEqualTo(timeA: number, timeB: number): boolean;
    /**
     * Subtracts the second argument from the first.
     *
     * Hash: 0xA2C6FC031D46FFF0 | Since: 323
     */
    function getTimeDifference(timeA: number, timeB: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x9E23B1777A927DAD | Since: 323
     */
    function getTimeAsString(time: number): string;
    /**
     * Same as GET_CLOUD_TIME_AS_INT but returns the value as a hex string (%I64X).
     *
     * Hash: 0xF12E6CD06C73D69E | Since: 1103
     */
    function getCloudTimeAsString(): string;
    /**
     * Returns POSIX timestamp, an int representing the cloud time.
     *
     * Hash: 0x9A73240B49945C76 | Since: 323
     */
    function getCloudTimeAsInt(): number;
    /**
     * Takes the specified time and writes it to the structure specified in the second argument.
     *
     * struct date_time
     * {
     * int year;
     * int PADDING1;
     * int month;
     * int PADDING2;
     * int day;
     * int PADDING3;
     * int hour;
     * int PADDING4;
     * int minute;
     * int PADDING5;
     * int second;
     * int PADDING6;
     * };
     *
     * Hash: 0xAC97AF97FA68E5D5 | Since: 323
     */
    function convertPosixTime(posixTime: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x423DE3854BB50894 | Since: 323
     */
    function setInSpectatorMode(toggle: boolean, playerPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x419594E137637120 | Since: 323
     */
    function setInSpectatorModeExtended(toggle: boolean, playerPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xFC18DB55AE19E046 | Since: 323
     */
    function setInFreeCamMode(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x5C707A667DF8B9FA | Since: 323
     */
    function setAntagonisticToPlayer(toggle: boolean, player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x048746E388762E11 | Since: 323
     */
    function isInSpectatorMode(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9CA5DE655269FEC4 | Since: 323
     */
    function setInMpCutscene(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6CC27C9FA2040220 | Since: 323
     */
    function isInMpCutscene(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x63F9EE203C3619F2 | Since: 323
     */
    function isPlayerInMpCutscene(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFAC18E7356BD3210 | Since: 1180
     */
    function hideProjectileInCutscene(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEC51713AB6EC36E8 | Since: 323
     */
    function setVehicleRespotTimer(netId: number, time: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDD7CEF5B3A4DA8A6 | Since: 2802
     */
    function isVehicleRunningRespotTimer(networkID: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6274C4712850841E | Since: 323
     */
    function setVehicleAsGhost(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * `rage::netBlenderLinInterp::GetPositionMaxForUpdateLevel`
     *
     * Hash: 0xA2A707979FE754DC | Since: 877
     */
    function setVehicleMaxPositionDeltaMultiplier(vehicle: number | Vehicle, multiplier: number): void;
    /**
     * `Enables a periodic ShapeTest within the NetBlender and invokes rage::netBlenderLinInterp::GoStraightToTarget (or some functional wrapper).`
     *
     * Hash: 0x838DA0936A24ED4D | Since: 944
     */
    function setEnableHighSpeedEdgeFallDetection(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x5FFE9B4144F9712F | Since: 323
     */
    function setLocalPlayerAsGhost(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x21D04D7BC538C146 | Since: 323
     */
    function isEntityAGhost(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x13F1FCB111B820B0 | Since: 877
     */
    function setNonParticipantsOfThisScriptAsGhosts(): void;
    /**
     * Enables ghosting between specific players
     *
     * Hash: 0xA7C511FA1C5BDA38 | Since: 463
     */
    function setRemotePlayerAsGhost(player: number | string | Player): void;
    /**
     * Must be a value between 1 and 254
     *
     * Hash: 0x658500AE6D723A7E | Since: 791
     */
    function setGhostAlpha(alpha: number): void;
    /**
     * Resets the entity ghost alpha to the default value (128)
     *
     * Hash: 0x17330EBF2F2124A8 | Since: 791
     */
    function resetGhostAlpha(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4BA166079D658ED4 | Since: 944
     */
    function setEntityGhostedForGhostPlayers(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD7B6C73CAD419BCF | Since: 944
     */
    function setInvertGhosting(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7EF7649B64D7FF10 | Since: 944
     */
    function isEntityInGhostCollision(entity: number | Entity): boolean;
    /**
     * reportData includes mc, ceo, yacht and licenceplate names
     *
     * Hash: 0x527803286A8B6C81 | Since: 3258
     */
    function setFreemodeReportData(): [any, any];
    /**
     * No comment provided
     *
     * Hash: 0x28123C8B056CC8AA | Since: 3274
     */
    function isObjectReassignmentInProgress(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x77758139EC9B66C7 | Since: 323
     */
    function usePlayerColourInsteadOfTeamColour(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7CD6BC4C2BBDD526 | Since: 323
     */
    function createSynchronisedScene(pos: Vector3, rot: Vector3, rotationOrder: number, useOcclusionPortal: boolean, looped: boolean, animTime: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x742A637471BCECD9 | Since: 323
     */
    function addPedToSynchronisedScene(ped: number | Ped, netScene: number, animDict: string, animnName: string, speed: number, speedMultiplier: number, duration: number, flag: number, playbackRate: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA5EAFE473E45C442 | Since: 1290
     */
    function addPedToSynchronisedSceneWithIk(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF2404D68CBC855FA | Since: 323
     */
    function addEntityToSynchronisedScene(entity: number | Entity, netScene: number, animDict: string, animName: string, speed: number, speedMulitiplier: number, flag: number): void;
    /**
     * Similar structure as NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE but it includes this time a hash.
     * In casino_slots it is used one time in a synced scene involving a ped and the slot machine?
     *
     * Hash: 0x45F35C0EDC33B03B | Since: 1734
     */
    function addMapEntityToSynchronisedScene(netScene: number, modelHash: number | string, pos: Vector3, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCF8BD3B0BD6D42D7 | Since: 323
     */
    function addSynchronisedSceneCamera(netScene: number, animDict: string, animName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x478DCBD2A98B705A | Since: 323
     */
    function attachSynchronisedSceneToEntity(netScene: number, entity: number | Entity, bone: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9A1B3FCDB36C8697 | Since: 323
     */
    function startSynchronisedScene(netScene: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC254481A4574CB2F | Since: 323
     */
    function stopSynchronisedScene(netScene: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x02C40BF885C567B6 | Since: 323
     */
    function getLocalSceneFromNetworkId(netId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xC9B43A33D09CADA7 | Since: 323
     */
    function forceLocalUseOfSyncedSceneCamera(netScene: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x144DA052257AE7D8 | Since: 1103
     */
    function allowRemoteSyncedSceneLocalPlayerRequests(): void;
    /**
     * p0 is always 0. p1 is pointing to a global.
     *
     * Hash: 0xFB1F9381E80FA13F | Since: 323
     */
    function findLargestBunchOfPlayers(): boolean;
    /**
     * One of the first things it does is get the players ped.
     * Then it calls a function that is used in some tasks and ped based functions.
     * p5, p6, p7 is another coordinate (or zero), often related to `GET_BLIP_COORDS, in the decompiled scripts.
     *
     * Hash: 0x5A6FFA2433E2F14C | Since: 323
     */
    function startRespawnSearchForPlayer(player: number | string | Player, pos: Vector3, radius: number, flags: number): boolean;
    /**
     * p8, p9, p10 is another coordinate, or zero, often related to `GET_BLIP_COORDS in the decompiled scripts.
     *
     * Hash: 0x4BA92A18502BCA61 | Since: 323
     */
    function startRespawnSearchInAngledAreaForPlayer(player: number | string | Player, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, flags: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3C891A251567DFCE | Since: 323
     */
    function queryRespawnResults(): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0xFB8F2A6F3DF08CBE | Since: 323
     */
    function cancelRespawnSearch(): void;
    /**
     * Based on scripts such as in freemode.c how they call their vars vVar and fVar the 2nd and 3rd param it a Vector3 and Float, but the first is based on get_random_int_in_range..
     *
     * Hash: 0x371EA43692861CF1 | Since: 323
     */
    function getRespawnResult(randomInt: number): [Vector3, number];
    /**
     * No comment provided
     *
     * Hash: 0x6C34F1208B8923FD | Since: 323
     */
    function getRespawnResultFlags(): number;
    /**
     * No comment provided
     *
     * Hash: 0x17E0198B3882C2CB | Since: 323
     */
    function startSoloTutorialSession(): void;
    /**
     * teamId must be < 3, instanceId must be < 64
     *
     * Hash: 0xFB680D403909DC70 | Since: 323
     */
    function allowGangToJoinTutorialSession(teamId: number, instanceId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD0AFAFF5A51D72F7 | Since: 323
     */
    function endTutorialSession(): void;
    /**
     * No comment provided
     *
     * Hash: 0xADA24309FE08DACF | Since: 323
     */
    function isInTutorialSession(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB37E4E6A2388CA7B | Since: 323
     */
    function waitingPopClearTutorialSession(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x35F0B98A8387274D | Since: 323
     */
    function isTutorialSessionChangePending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3B39236746714134 | Since: 323
     */
    function getPlayerTutorialSessionInstance(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x9DE986FC9A87C474 | Since: 323
     */
    function arePlayersInSameTutorialSession(player: number | string | Player, index: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFEA7A352DDB34D52 | Since: 2545
     */
    function blockProxyMigrationBetweenTutorialSessions(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBBDF066252829606 | Since: 323
     */
    function concealPlayer(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x919B3C98ED8292F9 | Since: 323
     */
    function isPlayerConcealed(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1632BE0AC1E62876 | Since: 877
     */
    function concealEntity(entity: number | Entity, toggle: boolean): void;
    /**
     * Note: This only works for vehicles, which appears to be a bug (since the setter _does_ work for every entity type and the name is 99% correct).
     *
     * Hash: 0x71302EC70689052A | Since: 877
     */
    function isEntityConcealed(entity: number | Entity): boolean;
    /**
     * Works in Singleplayer too.
     * Passing wrong data (e.g. hours above 23) will cause the game to crash.
     *
     * Hash: 0xE679E3E06E363892 | Since: 323
     */
    function overrideClockTime(hours: number, minutes: number, seconds: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x42BF1D2E723B6D7E | Since: 2189
     */
    function overrideClockRate(ms: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD972DF67326F966E | Since: 323
     */
    function clearClockTimeOverride(): void;
    /**
     * Does nothing in final builds.
     *
     * Hash: 0xCBD02360C5E16871 | Since: 3570
     */
    function syncClockTimeOverride(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD7C95D322FF57522 | Since: 323
     */
    function isClockTimeOverridden(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x494C8FB299290269 | Since: 323
     */
    function addEntityArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
    /**
     * To remove, see: NETWORK_REMOVE_ENTITY_AREA
     * See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
     *
     * Hash: 0x376C6375BA60293A | Since: 323
     */
    function addEntityAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x25B99872D588A101 | Since: 323
     */
    function addClientEntityArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x2B1C623823DB0D9D | Since: 1103
     */
    function addClientEntityAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x93CF869BAA0C4874 | Since: 323
     */
    function removeEntityArea(areaHandle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE64A3CA08DFA37A9 | Since: 323
     */
    function entityAreaDoesExist(areaHandle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4DF7CFFF471A7FB1 | Since: 323
     */
    function entityAreaHaveAllReplied(areaHandle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4A2D4E8BF4265B0F | Since: 323
     */
    function entityAreaIsOccupied(areaHandle: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2B1813ABA29016C5 | Since: 323
     */
    function useHighPrecisionBlending(netID: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA6FCECCF4721D679 | Since: 1604
     */
    function setCustomArenaBallParams(netId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x95BAF97C82464629 | Since: 1604
     */
    function entityUseHighPrecisionRotation(netId: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x924426BFFD82E915 | Since: 323
     */
    function requestCloudBackgroundScripts(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8132C0EB8B2B3293 | Since: 323
     */
    function isCloudBackgroundScriptRequestPending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x42FB3B532D526E6C | Since: 323
     */
    function requestCloudTunables(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0467C11ED88B7D28 | Since: 323
     */
    function isTunableCloudRequestPending(): boolean;
    /**
     * Actually returns the version (TUNABLE_VERSION)
     *
     * Hash: 0x10BD227A753B0D84 | Since: 323
     */
    function getTunableCloudCrc(): number;
    /**
     * Sets up tunable contexts for _NETWORK_GET_TUNABLES_REGISTRATION_{BOOL|INT|FLOAT}
     *
     * Hash: 0x014A73449675121D | Since: 3258
     */
    function setTunablesRegistrationContexts(): any;
    /**
     * Clears tunable contexts that were set up using _NETWORK_SET_TUNABLES_REGISTRATION_CONTEXTS
     *
     * Hash: 0x0C87C83C8950432B | Since: 3258
     */
    function clearTunablesRegistrationContexts(): void;
    /**
     * Checks if the given tunable exists and returns its value. Otherwise returns defaultValue.
     * Possible tunable contexts must first be set up using _NETWORK_SET_TUNABLES_REGISTRATION_CONTEXTS.
     *
     * Hash: 0xB327CF1B8C2C0EA3 | Since: 3258
     */
    function getTunablesRegistrationBool(tunableName: number | string, defaultValue: boolean): boolean;
    /**
     * Checks if the given tunable exists and returns its value. Otherwise returns defaultValue.
     * Possible tunable contexts must first be set up using _NETWORK_SET_TUNABLES_REGISTRATION_CONTEXTS.
     *
     * Hash: 0x0D94071E55F4C9CE | Since: 3258
     */
    function getTunablesRegistrationInt(tunableName: number | string, defaultValue: number): number;
    /**
     * Checks if the given tunable exists and returns its value. Otherwise returns defaultValue.
     * Possible tunable contexts must first be set up using _NETWORK_SET_TUNABLES_REGISTRATION_CONTEXTS.
     *
     * Hash: 0x367E5E33E7F0DD1A | Since: 3258
     */
    function getTunablesRegistrationFloat(tunableName: number | string, defaultValue: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x85E5F8B9B898B20A | Since: 323
     */
    function doesTunableExist(tunableContext: string, tunableName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8BE1146DFD5D4468 | Since: 323
     */
    function accessTunableInt(tunableContext: string, tunableName: string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xE5608CA7BC163A5F | Since: 323
     */
    function accessTunableFloat(tunableContext: string, tunableName: string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xAA6A47A573ABB75A | Since: 323
     */
    function accessTunableBool(tunableContext: string, tunableName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE4E53E1419D81127 | Since: 323
     */
    function doesTunableExistHash(tunableContext: number | string, tunableName: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFAFC23AEE23868DB | Since: 393
     */
    function accessTunableModificationDetectionClear(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x40FCE03E50E8DBE8 | Since: 323
     */
    function accessTunableIntHash(tunableContext: number | string, tunableName: number | string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x3A8B55FDA4C8DDEF | Since: 393
     */
    function accessTunableIntModificationDetectionRegistrationHash(contextHash: number | string, nameHash: number | string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x972BC203BBC4C4D5 | Since: 323
     */
    function accessTunableFloatHash(tunableContext: number | string, tunableName: number | string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x1950DAE9848A4739 | Since: 393
     */
    function accessTunableFloatModificationDetectionRegistrationHash(contextHash: number | string, nameHash: number | string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xEA16B69D93D71A45 | Since: 323
     */
    function accessTunableBoolHash(tunableContext: number | string, tunableName: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x697F508861875B42 | Since: 393
     */
    function accessTunableBoolModificationDetectionRegistrationHash(contextHash: number | string, nameHash: number | string): [boolean, boolean];
    /**
     * Returns defaultValue if the tunable doesn't exist.
     *
     * Hash: 0xC7420099936CE286 | Since: 323
     */
    function tryAccessTunableBoolHash(tunableContext: number | string, tunableName: number | string, defaultValue: boolean): boolean;
    /**
     * Return the content modifier id (the tunables context if you want) of a specific content.
     *
     * It takes the content hash (which is the mission id hash), and return the content modifier id, used as the tunables context.
     *
     * The mission id can be found on the Social club, for example, 'socialclub.rockstargames.com/games/gtav/jobs/job/A8M6Bz8MLEC5xngvDCzGwA'
     *
     * 'A8M6Bz8MLEC5xngvDCzGwA' is the mission id, so the game hash this and use it as the parameter for this native.
     *
     *
     * Hash: 0x187382F8A3E0A6C3 | Since: 323
     */
    function getContentModifierListId(contentHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x7DB53B37A2F211A0 | Since: 323
     */
    function getBoneIdOfFatalHit(): number;
    /**
     * No comment provided
     *
     * Hash: 0x72433699B4E6DD64 | Since: 323
     */
    function resetBodyTracker(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD38C4A6D047C019D | Since: 323
     */
    function getNumberBodyTrackerHits(): number;
    /**
     * No comment provided
     *
     * Hash: 0x2E0BF682CC778D49 | Since: 323
     */
    function hasBoneBeenHitByKiller(boneIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0EDE326D47CD0F3E | Since: 323
     */
    function setAttributeDamageToPlayer(ped: number | Ped, player: number | string | Player): boolean;
    /**
     * Allows vehicle wheels to be destructible even when the vehicle entity is invincible.
     *
     * Hash: 0x890E2C5ABED7236D | Since: 1365
     */
    function triggerDamageEventForZeroDamage(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE9D0244ACBEE1BC4 | Since: 3258
     */
    function triggerDamageEventForZeroPedDamage(entity: number | Entity, trigger: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x38B7C51AB1EDC7D8 | Since: 1734
     */
    function triggerDamageEventForZeroWeaponHash(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3FC795691834481D | Since: 1868
     */
    function setNoLongerNeeded(entity: number | Entity, toggle: boolean): void;
    /**
     * In the console script dumps, this is only referenced once.
     * `NETWORK::NETWORK_EXPLODE_VEHICLE(vehicle, 1, 0, 0);`
     *
     * ^^^^^ That must be PC script dumps? In X360 Script Dumps it is reference a few times with 2 differences in the parameters.
     * Which as you see below is 1, 0, 0 + 1, 1, 0 + 1, 0, and a *param?
     *
     * am_plane_takedown.c
     * network_explode_vehicle(net_to_veh(Local_40.imm_2), 1, 1, 0);
     *
     * armenian2.c
     * network_explode_vehicle(Local_80[6 <2>], 1, 0, 0);
     *
     * fm_horde_controler.c
     * network_explode_vehicle(net_to_veh(*uParam0), 1, 0, *uParam0);
     *
     * fm_mission_controller.c, has 6 hits so not going to list them.
     *
     * Side note, setting the first parameter to 0 seems to mute sound or so?
     *
     * Seems it's like ADD_EXPLOSION, etc. the first 2 params. The 3rd atm no need to worry since it always seems to be 0.
     *
     *
     * Hash: 0x301A42153C9AD707 | Since: 323
     */
    function explodeVehicle(vehicle: number | Vehicle, isAudible: boolean, isInvisible: boolean, netId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2A5E0621DD815A9A | Since: 463
     */
    function explodeHeli(vehicle: number | Vehicle, isAudible: boolean, isInvisible: boolean, netId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCD71A4ECAB22709E | Since: 323
     */
    function useLogarithmicBlendingThisFrame(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xA7E30DE9272B6D49 | Since: 323
     */
    function overrideCoordsAndHeading(entity: number | Entity, pos: Vector3, heading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE6717E652B8C8D8A | Since: 617
     */
    function enableExtraVehicleOrientationBlendChecks(netId: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x407091CF6037118E | Since: 323
     */
    function disableProximityMigration(netID: number): void;
    /**
     * p0 in the decompiled scripts is always the stat mesh_texblend * 0.07 to int
     *
     * Hash: 0x367EF5E2F439B4C6 | Since: 323
     */
    function setPlayerMentalState(): void;
    /**
     * No comment provided
     *
     * Hash: 0x94538037EE44F5CF | Since: 323
     */
    function setMinimumRankForMission(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBD0BE0BFC927EAC1 | Since: 323
     */
    function cacheLocalPlayerHeadBlendData(): void;
    /**
     * No comment provided
     *
     * Hash: 0x237D5336A9A54108 | Since: 323
     */
    function hasCachedPlayerHeadBlendData(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x99B72C7ABDE5C910 | Since: 323
     */
    function applyCachedPlayerHeadBlendData(ped: number | Ped, player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF2EAC213D5EA0623 | Since: 323
     */
    function getNumCommerceItems(): number;
    /**
     * No comment provided
     *
     * Hash: 0xEA14EEF5B7CD2C30 | Since: 323
     */
    function isCommerceDataValid(): boolean;
    /**
     * Does nothing (it's a nullsub).
     *
     * Hash: 0xB606E6CC59664972 | Since: 323
     */
    function triggerCommerceDataFetch(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1D4DC17C38FEAFF0 | Since: 323
     */
    function isCommerceDataFetchInProgress(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x662635855957C411 | Since: 323
     */
    function getCommerceItemId(index: number): string;
    /**
     * No comment provided
     *
     * Hash: 0xB4271092CA7EDF48 | Since: 323
     */
    function getCommerceItemName(index: number): string;
    /**
     * No comment provided
     *
     * Hash: 0xCA94551B50B4932C | Since: 323
     */
    function getCommerceProductPrice(index: number): string;
    /**
     * No comment provided
     *
     * Hash: 0x2A7776C709904AB0 | Since: 323
     */
    function getCommerceItemNumCats(index: number): number;
    /**
     * index2 is unused
     *
     * Hash: 0x6F44CBF56D79FAC0 | Since: 323
     */
    function getCommerceItemCat(index: number, index2: number): string;
    /**
     * No comment provided
     *
     * Hash: 0x58C21165F6545892 | Since: 323
     */
    function openCommerceStore(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2EAC52B4019E2782 | Since: 323
     */
    function isCommerceStoreOpen(): boolean;
    /**
     * Access to the store for shark cards etc...
     *
     * Hash: 0x9641A9FF718E9C5E | Since: 323
     */
    function setStoreEnabled(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA2F952104FC6DD4B | Since: 323
     */
    function requestCommerceItemImage(index: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x72D0706CD6CCDB58 | Since: 323
     */
    function releaseAllCommerceItemImages(): void;
    /**
     * No comment provided
     *
     * Hash: 0x722F5D28B61C5EA8 | Since: 323
     */
    function getCommerceItemTexturename(index: number): string;
    /**
     * No comment provided
     *
     * Hash: 0x883D79C4071E18B3 | Since: 323
     */
    function isStoreAvailableToUser(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x265635150FB0D82E | Since: 323
     */
    function delayMpStoreOpen(): void;
    /**
     * No comment provided
     *
     * Hash: 0x444C4525ECE0A4B9 | Since: 323
     */
    function resetStoreGameTracking(): void;
    /**
     * No comment provided
     *
     * Hash: 0x59328EB08C5CEB2B | Since: 323
     */
    function isUserOldEnoughToAccessStore(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFAE628F1E9ADB239 | Since: 323
     */
    function setLastViewedShopItem(p0: number | string, p2: number | string): void;
    /**
     * Checks some commerce stuff
     *
     * Hash: 0x754615490A029508 | Since: 1290
     */
    function getUserPremiumAccess(): number;
    /**
     * Checks some commerce stuff
     *
     * Hash: 0x155467ACA0F55705 | Since: 1290
     */
    function getUserStarterAccess(): number;
    /**
     * No comment provided
     *
     * Hash: 0xC64DED7EF0D2FE37 | Since: 323
     */
    function cloudDeleteMemberFile(): number;
    /**
     * No comment provided
     *
     * Hash: 0x4C61B39930D045DA | Since: 323
     */
    function cloudHasRequestCompleted(requestId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3A3D5568AF297CD5 | Since: 323
     */
    function cloudDidRequestSucceed(requestId: number): boolean;
    /**
     * Downloads prod.cloud.rockstargames.com/titles/gta5/[platform]/check.json
     *
     * Hash: 0x4F18196C8D38768D | Since: 323
     */
    function cloudCheckAvailability(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC7ABAC5DE675EE3B | Since: 323
     */
    function cloudIsCheckingAvailability(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0B0CC10720653F3B | Since: 323
     */
    function cloudGetAvailabilityCheckResult(): boolean;
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0x8B0C2964BA471961 | Since: 323
     */
    function getContentToLoadType(): number;
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0x88B588B41FF7868E | Since: 323
     */
    function getIsLaunchFromLiveArea(): boolean;
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0x67FC09BC554A75E5 | Since: 323
     */
    function getIsLiveAreaLaunchWithContent(): boolean;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0x966DD84FB6A46017 | Since: 323
     */
    function clearServiceEventArguments(): void;
    /**
     * No comment provided
     *
     * Hash: 0x152D90E4C1B4738A | Since: 323
     */
    function ugcCopyContent(): [boolean, any, any];
    /**
     * No comment provided
     *
     * Hash: 0x9FEDF86898F100E9 | Since: 323
     */
    function ugcIsCreating(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5E24341A7F92A74B | Since: 323
     */
    function ugcHasCreateFinished(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x24E4E51FC16305F9 | Since: 323
     */
    function ugcDidCreateSucceed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFBC5E768C7A77A6A | Since: 323
     */
    function ugcGetCreateResult(): number;
    /**
     * No comment provided
     *
     * Hash: 0xC55A0B40FFB1ED23 | Since: 323
     */
    function ugcGetCreateContentId(): string;
    /**
     * No comment provided
     *
     * Hash: 0x17440AA15D1D3739 | Since: 323
     */
    function ugcClearCreateResult(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9BF438815F5D96EA | Since: 323
     */
    function ugcQueryMyContent(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x692D58DF40657E8C | Since: 323
     */
    function ugcQueryByCategory(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x158EC424F35EC469 | Since: 323
     */
    function ugcQueryByContentId(contentId: string, latestVersion: boolean, contentTypeName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC7397A83F7A2A462 | Since: 323
     */
    function ugcQueryByContentIds(count: number, latestVersion: boolean, contentTypeName: string): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x6D4CB481FAC835E8 | Since: 323
     */
    function ugcQueryMostRecentlyCreatedContent(offset: number, count: number, contentTypeName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD5A4B59980401588 | Since: 323
     */
    function ugcGetBookmarkedContent(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x3195F8DD0D531052 | Since: 323
     */
    function ugcGetMyContent(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xF9E1CCAE8BA4C281 | Since: 323
     */
    function ugcGetFriendContent(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x9F6E2821885CAEE2 | Since: 323
     */
    function ugcGetCrewContent(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x678BB03C1A3BD51E | Since: 323
     */
    function ugcGetGetByCategory(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x815E5E3073DA1D67 | Since: 323
     */
    function ugcGetGetByContentId(contentId: string, contentTypeName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB8322EEB38BE7C26 | Since: 323
     */
    function ugcGetGetByContentIds(dataCount: number, contentTypeName: string): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xA7862BC5ED1DFD7E | Since: 323
     */
    function ugcGetMostRecentlyCreatedContent(): [boolean, any, any];
    /**
     * No comment provided
     *
     * Hash: 0x97A770BEEF227E2B | Since: 323
     */
    function ugcGetMostRecentlyPlayedContent(): [boolean, any, any];
    /**
     * No comment provided
     *
     * Hash: 0x5324A0E3E4CE3570 | Since: 323
     */
    function ugcGetTopRatedContent(): [boolean, any, any];
    /**
     * No comment provided
     *
     * Hash: 0xE9B99B6853181409 | Since: 323
     */
    function ugcCancelQuery(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD53ACDBEF24A46E8 | Since: 323
     */
    function ugcIsGetting(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x02ADA21EA2F6918F | Since: 323
     */
    function ugcHasGetFinished(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x941E5306BCD7C2C7 | Since: 323
     */
    function ugcDidGetSucceed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC87E740D9F3872CC | Since: 323
     */
    function ugcWasQueryForceCancelled(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEDF7F927136C224B | Since: 323
     */
    function ugcGetQueryResult(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE0A6138401BCB837 | Since: 323
     */
    function ugcGetContentNum(): number;
    /**
     * No comment provided
     *
     * Hash: 0x769951E2455E2EB5 | Since: 323
     */
    function ugcGetContentTotal(): number;
    /**
     * No comment provided
     *
     * Hash: 0x3A17A27D75C74887 | Since: 323
     */
    function ugcGetContentHash(): number;
    /**
     * No comment provided
     *
     * Hash: 0xBA96394A0EECFA65 | Since: 323
     */
    function ugcClearQueryResults(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCD67AD041A394C9C | Since: 323
     */
    function ugcGetContentUserId(): string;
    /**
     * No comment provided
     *
     * Hash: 0x584770794D758C18 | Since: 323
     */
    function ugcGetContentCreatorGamerHandle(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x8C8D2739BA44AF0F | Since: 323
     */
    function ugcGetContentCreatedByLocalPlayer(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x703F12425ECA8BF5 | Since: 323
     */
    function ugcGetContentUserName(): string;
    /**
     * No comment provided
     *
     * Hash: 0xAEAB987727C5A8A4 | Since: 323
     */
    function ugcGetContentIsUsingScNickname(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA7BAB11E7C9C6C5A | Since: 323
     */
    function ugcGetContentCategory(): number;
    /**
     * Return the mission id of a job.
     *
     * Hash: 0x55AA95F481D694D2 | Since: 323
     */
    function ugcGetContentId(): string;
    /**
     * Return the root content id of a job.
     *
     * Hash: 0xC0173D6BFF4E0348 | Since: 323
     */
    function ugcGetRootContentId(): string;
    /**
     * No comment provided
     *
     * Hash: 0xBF09786A7FCAB582 | Since: 323
     */
    function ugcGetContentName(): string;
    /**
     * No comment provided
     *
     * Hash: 0x4A56710BAB5C4DB4 | Since: 3407
     */
    function ugcGetContentDescription(index: number): string;
    /**
     * No comment provided
     *
     * Hash: 0x7CF0448787B23758 | Since: 323
     */
    function ugcGetContentDescriptionHash(): number;
    /**
     * No comment provided
     *
     * Hash: 0xBAF6BABF9E7CCC13 | Since: 323
     */
    function ugcGetContentPath(): string;
    /**
     * No comment provided
     *
     * Hash: 0xCFD115B373C0DF63 | Since: 323
     */
    function ugcGetContentUpdatedDate(): any;
    /**
     * No comment provided
     *
     * Hash: 0x37025B27D9B658B1 | Since: 323
     */
    function ugcGetContentFileVersion(): number;
    /**
     * No comment provided
     *
     * Hash: 0x1D610EB0FEA716D9 | Since: 323
     */
    function ugcGetContentHasLoResPhoto(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7FCC39C46C3C03BD | Since: 323
     */
    function ugcGetContentHasHiResPhoto(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x32DD916F3F7C9672 | Since: 323
     */
    function ugcGetContentLanguage(): number;
    /**
     * No comment provided
     *
     * Hash: 0x3054F114121C21EA | Since: 323
     */
    function ugcGetContentIsPublished(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA9240A96C74CCA13 | Since: 323
     */
    function ugcGetContentIsVerified(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1ACCFBA3D8DAB2EE | Since: 323
     */
    function ugcGetContentRating(): number;
    /**
     * No comment provided
     *
     * Hash: 0x759299C5BB31D2A9 | Since: 323
     */
    function ugcGetContentRatingCount(): number;
    /**
     * No comment provided
     *
     * Hash: 0x87E5C46C187FE0AE | Since: 323
     */
    function ugcGetContentRatingPositiveCount(): number;
    /**
     * No comment provided
     *
     * Hash: 0x4E548C0D7AE39FF9 | Since: 323
     */
    function ugcGetContentRatingNegativeCount(): number;
    /**
     * No comment provided
     *
     * Hash: 0x70EA8DA57840F9BE | Since: 323
     */
    function ugcGetContentHasPlayerRecord(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x993CBE59D350D225 | Since: 323
     */
    function ugcGetContentHasPlayerBookmarked(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x171DF6A0C07FB3DC | Since: 323
     */
    function ugcRequestContentDataFromIndex(): number;
    /**
     * No comment provided
     *
     * Hash: 0x7FD2990AF016795E | Since: 323
     */
    function ugcRequestContentDataFromParams(contentTypeName: string, contentId: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x5E0165278F6339EE | Since: 323
     */
    function ugcRequestCachedDescription(): number;
    /**
     * No comment provided
     *
     * Hash: 0x2D5DC831176D0114 | Since: 323
     */
    function ugcIsDescriptionRequestInProgress(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEBFA8D50ADDC54C4 | Since: 323
     */
    function ugcHasDescriptionRequestFinished(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x162C23CA83ED0A62 | Since: 323
     */
    function ugcDidDescriptionRequestSucceed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x40F7E66472DF3E5C | Since: 323
     */
    function ugcGetCachedDescription(): string;
    /**
     * No comment provided
     *
     * Hash: 0x5A34CD9C3C5BEC44 | Since: 323
     */
    function ugcReleaseCachedDescription(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x68103E2247887242 | Since: 323
     */
    function ugcReleaseAllCachedDescriptions(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC33E7CBC06EC1A8D | Since: 3095
     */
    function ugcHasPermissionToWrite(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1DE0F5F50D723CAA | Since: 323
     */
    function ugcPublish(contentId: string, baseContentId: string, contentTypeName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x274A1519DFC1094F | Since: 323
     */
    function ugcSetBookmarked(contentId: string, bookmarked: boolean, contentTypeName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD05D1A6C74DA3498 | Since: 323
     */
    function ugcSetDeleted(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x45E816772E93A9DB | Since: 323
     */
    function ugcIsModifying(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x299EF3C576773506 | Since: 323
     */
    function ugcHasModifyFinished(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x793FF272D5B365F4 | Since: 323
     */
    function ugcDidModifySucceed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5A0A3D1A186A5508 | Since: 323
     */
    function ugcGetModifyResult(): number;
    /**
     * No comment provided
     *
     * Hash: 0xA1E5E0204A6FCC70 | Since: 323
     */
    function ugcClearModifyResult(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB746D20B17F2A229 | Since: 323
     */
    function ugcGetCreatorsByUserId(): [boolean, any, any];
    /**
     * No comment provided
     *
     * Hash: 0x63B406D7884BFA95 | Since: 323
     */
    function ugcHasQueryCreatorsFinished(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4D02279C83BE69FE | Since: 323
     */
    function ugcDidQueryCreatorsSucceed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x597F8DBA9B206FC7 | Since: 323
     */
    function ugcGetCreatorNum(): number;
    /**
     * No comment provided
     *
     * Hash: 0x5CAE833B0EE0C500 | Since: 323
     */
    function ugcLoadOfflineQuery(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x61A885D3F7CFEE9A | Since: 323
     */
    function ugcClearOfflineQuery(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF98DDE0A8ED09323 | Since: 323
     */
    function ugcSetQueryDataFromOffline(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFD75DABC0957BF33 | Since: 323
     */
    function ugcSetUsingOfflineContent(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF53E48461B71EECB | Since: 323
     */
    function ugcIsLanguageSupported(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x098AB65B9ED9A9EC | Since: 323
     */
    function facebookPostCompletedHeist(heistName: string, cashEarned: number, xpEarned: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDC48473142545431 | Since: 323
     */
    function facebookPostCreateCharacter(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0AE1F1653B554AB9 | Since: 323
     */
    function facebookPostCompletedMilestone(milestoneId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x62B9FEC9A11F10EF | Since: 323
     */
    function facebookHasPostCompleted(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA75E2B6733DA5142 | Since: 323
     */
    function facebookDidPostSucceed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x43865688AE10F0D7 | Since: 323
     */
    function facebookCanPostToFacebook(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x16160DA74A8E74A2 | Since: 323
     */
    function textureDownloadRequest(filePath: string, name: string): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0x0B203B4AFDE53A4F | Since: 323
     */
    function titleTextureDownloadRequest(filePath: string, name: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x308F96458B7087CC | Since: 323
     */
    function ugcTextureDownloadRequest(): number;
    /**
     * No comment provided
     *
     * Hash: 0x487EB90B98E9FB19 | Since: 323
     */
    function textureDownloadRelease(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5776ED562C134687 | Since: 323
     */
    function textureDownloadHasFailed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3448505B6E35262D | Since: 323
     */
    function textureDownloadGetName(): string;
    /**
     * 0 = succeeded
     * 1 = pending
     * 2 = failed
     *
     * Hash: 0x8BD6C6DEA20E82C6 | Since: 323
     */
    function getStatusOfTextureDownload(): number;
    /**
     * Returns true if profile setting 901 is set to true and sets it to false.
     *
     * Hash: 0x60EDD13EB3AC1FF3 | Since: 323
     */
    function checkRosLinkWentdownNotNet(): boolean;
    /**
     * Returns true if the NAT type is Strict (3) and a certain number of connections have failed.
     *
     * Hash: 0x82A2B386716608F1 | Since: 393
     */
    function shouldShowStrictNatWarning(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEFFB25453D8600F9 | Since: 323
     */
    function isCableConnected(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x66B59CFFD78467AF | Since: 323
     */
    function haveScsPrivateMsgPriv(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x606E4D3E3CCCF3EB | Since: 323
     */
    function haveRosSocialClubPriv(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8020A73847E0CA7D | Since: 323
     */
    function haveRosBannedPriv(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA0AD7E2AF5349F61 | Since: 323
     */
    function haveRosCreateTicketPriv(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5F91D5D0B36AA310 | Since: 323
     */
    function haveRosMultiplayerPriv(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x422D396F80A96547 | Since: 323
     */
    function haveRosLeaderboardWritePriv(): boolean;
    /**
     * index is always 18 in scripts
     *
     * Hash: 0xA699957E60D80214 | Since: 323
     */
    function hasRosPrivilege(index: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC22912B1D85F26B1 | Since: 323
     */
    function hasRosPrivilegeEndDate(privilege: number): [boolean, number, any];
    /**
     * No comment provided
     *
     * Hash: 0x593570C289A77688 | Since: 323
     */
    function hasRosPrivilegePlayedLastGen(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x91B87C55093DE351 | Since: 323
     */
    function hasRosPrivilegeSpecialEditionContent(): boolean;
    /**
     * Checks for privilege 29
     *
     * Hash: 0xD9719341663C385F | Since: 3095
     */
    function hasRosPrivilegeMpTextCommunication(): boolean;
    /**
     * Checks for privilege 30
     *
     * Hash: 0x8956A309BE90057C | Since: 3095
     */
    function hasRosPrivilegeMpVoiceCommunication(): boolean;
    /**
     * Checks for privilege 31
     *
     * Hash: 0x9BA54B3CFB82ADDD | Since: 3258
     */
    function hasRosPrivilegeReporting(): boolean;
    /**
     * Always returns -1. Seems to be XB1 specific.
     *
     * Hash: 0xDEB2B99A1AF1A2A6 | Since: 323
     */
    function startUserContentPermissionsCheck(): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0x9465E683B12D3F6B | Since: 323
     */
    function skipRadioResetNextClose(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA59CCAE5D01E4CE | Since: 1734
     */
    function skipRadioResetNextOpen(): void;
    /**
     * Returns true if dinput8.dll is present in the game directory.
     * You will get following error message if that is true: "You are attempting to access GTA Online servers with an altered version of the game."
     *
     * Hash: 0x659CF2EF7F550C4F | Since: 1011
     */
    function skipRadioWarning(): boolean;
    /**
     * NETWORK_F[I-O]
     *
     * Hash: 0xB7C7F6AD6424304B | Since: 323
     */
    function forceLocalPlayerScarSync(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC505036A35AFD01B | Since: 323
     */
    function disableLeaveRemotePedBehind(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x267C78C60E806B9A | Since: 323
     */
    function allowRemoteAttachmentModification(entity: number | Entity, toggle: boolean): void;
    /**
     * Does nothing (it's a nullsub).
     *
     * Hash: 0x6BFF5F84102DF80A | Since: 323
     */
    function showChatRestrictionMsc(player: number | string | Player): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0x5C497525F803486B | Since: 323
     */
    function showPsnUgcRestriction(): void;
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0x6FB7BB3607D27FA2 | Since: 323
     */
    function isTitleUpdateRequired(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x45A83257ED02D9BC | Since: 323
     */
    function quitMpToDesktop(): void;
    /**
     * No comment provided
     *
     * Hash: 0x16D3D49902F697BB | Since: 323
     */
    function isConnectedViaRelay(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD414BE129BB81B32 | Since: 323
     */
    function getAverageLatency(player: number | string | Player): number;
    /**
     * Same as NETWORK_GET_AVERAGE_LATENCY
     *
     * Hash: 0x0E3A041ED6AC2B45 | Since: 323
     */
    function getAveragePing(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x350C23949E43686C | Since: 323
     */
    function getAveragePacketLoss(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xFF8FCF9FFC458A1C | Since: 323
     */
    function getNumUnackedReliables(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x3765C3A3E8192E10 | Since: 323
     */
    function getUnreliableResendCount(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x52C1EADAF7B10302 | Since: 323
     */
    function getHighestReliableResendCount(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x5626D9D6810730D5 | Since: 350
     */
    function reportCodeTamper(): void;
    /**
     * No comment provided
     *
     * Hash: 0x64D779659BC37B19 | Since: 393
     */
    function getLastEntityPosReceivedOverNetwork(entity: number | Entity): Vector3;
    /**
     * Returns the coordinates of another player.
     * Does not work if you enter your own player id as p0 (will return `(0.0, 0.0, 0.0)` in that case).
     *
     * Hash: 0x125E6D638B8605D4 | Since: 393
     */
    function getLastPlayerPosReceivedOverNetwork(player: number | string | Player): Vector3;
    /**
     * Used by NetBlender
     *
     * Hash: 0x33DE49EDF4DDE77A | Since: 1103
     */
    function getLastVelReceivedOverNetwork(entity: number | Entity): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xAA5FAFCD2C5F5E47 | Since: 1103
     */
    function getPredictedVelocity(entity: number | Entity, maxSpeedToPredict: number): Vector3;
    /**
     * Does nothing (it's a nullsub).
     *
     * Hash: 0xAEDF1BC1C133D6E3 | Since: 323
     */
    function dumpNetIfConfig(): void;
    /**
     * Does nothing (it's a nullsub).
     *
     * Hash: 0x2555CF7DA5473794 | Since: 323
     */
    function getSignallingInfo(): any;
    /**
     * Does nothing (it's a nullsub).
     *
     * Hash: 0x6FD992C4A1C1B986 | Since: 323
     */
    function getNetStatisticsInfo(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDB663CC9FF3407A9 | Since: 1734
     */
    function getPlayerAccountId(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xC1447451DDB512F0 | Since: 2372
     */
    function ugcNav(): void;
    /**
     * enum eNetworkGameRestartReason
     * {
     * BE_RESTART_SERVICE_NOT_RUNNING = 1, 	// BattlEye service not running
     * BE_RESTART_SERVICE_NEEDS_UPDATE, 		// BattlEye service needs an update
     * BE_RESTART_UNKNOWN_REASON,				// Unknown BattlEye reason
     * BE_RESTART_EF_DISABLED_WITH_BE,			// BattlEye Enforcement Flag is disabled, but BattlEye is active
     * BE_RESTART_EF_ENABLED_NO_BE,			// BattlEye Enforcement Flag is enabled, but BattlEye is not active
     * BE_RESTART_BE_MODULES_FAILED_TO_LOAD,	// BattlEye modules failed to load
     * NUM_NETWORK_GAME_RESTART_REASONS
     * };
     *
     * Hash: 0x7F7E8401F81CB65B | Since: 3323
     */
    function getGameRestartReason(): number;
    /**
     * If the restart reason is 4 (BE_RESTART_EF_DISABLED_WITH_BE), will cause the game to exit with exit code 622011. Otherwise exits with code 622010. Has no effect when a restart hasn't been requested (reason == 0 or reason > 6).
     *
     * Note that this 'confirmation' itself does not restart the game, a call to QUIT_GAME or similar is required afterwards.
     *
     * Hash: 0x0A141818CA2311AD | Since: 3323
     */
    function confirmGameRestart(): void;
    /**
     * Returns the restart reason as a string, see _NETWORK_GET_GAME_RESTART_REASON. Returns a null pointer when a restart hasn't been requested (reason == 0 or reason > 6).
     *
     * Hash: 0x47B11D51FC50A259 | Since: 3323
     */
    function getGameRestartReasonMessageLabel(): string;
    /**
     * 0x20211000 = HUD_BE_ERROR_FAILED_UNKNOWN
     * 0x20212000 = HUD_BE_ERROR_FAILED_CLIENT_INIT
     * 0x20213000 = HUD_BE_ERROR_FAILED_SERVER_INIT
     * 0x20214000 = HUD_BE_ERROR_FAILED_AUTH_ATTEMPTS
     * 0x20215000 = HUD_BE_ERROR_UNTRUSTED_HOST
     * 0x20216000 = HUD_BE_ERROR_KICKED
     * 0x20217000 = HUD_BE_ERROR_BANNED
     * 0x50140000 = HUD_BE_BLOCK_BANNED
     *
     * Note: an invalid error code returns a null pointer!
     *
     * Hash: 0xCBA50F371E45B90D | Since: 3323
     */
    function getBattleyeErrorMessageLabel(errorCode: number): string;
}
export declare namespace object {
    /**
     * List of object models that can be created without any additional effort like making sure ytyp is loaded etc: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ObjectList.ini
     *
     * Hash: 0x509D5878EB39E842 | Since: 323
     */
    function create(modelHash: number | string, pos: Vector3, isNetwork: boolean, bScriptHostObj: boolean, dynamic: boolean): number;
    /**
     * List of object models that can be created without any additional effort like making sure ytyp is loaded etc: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ObjectList.ini
     *
     * Hash: 0x9A294B2138ABB884 | Since: 323
     */
    function createNoOffset(modelHash: number | string, pos: Vector3, isNetwork: boolean, bScriptHostObj: boolean, dynamic: boolean): number;
    /**
     * Deletes the specified object, then sets the handle pointed to by the pointer to NULL.
     *
     * Hash: 0x539E0AE3E6634B9F | Since: 323
     */
    function deleteObject(obj: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x58A850EAEE20FAA3 | Since: 323
     */
    function placeOnGroundProperly(_object: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD76EEEF746057FD6 | Since: 505
     */
    function placeOnGroundOrObjectProperly(_object: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAFE24E4D29249E4A | Since: 1734
     */
    function rotate(_object: number | Object): boolean;
    /**
     * Returns true if the object has finished moving.
     *
     * If false, moves the object towards the specified X, Y and Z coordinates with the specified X, Y and Z speed.
     *
     * See also: https://gtagmodding.com/opcode-database/opcode/034E/
     * Has to be looped until it returns true.
     *
     * Hash: 0x2FDFF4107B8C1147 | Since: 323
     */
    function slide(_object: number | Object, toX: number, toY: number, toZ: number, speedX: number, speedY: number, speedZ: number, collision: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8A7391690F5AFD81 | Since: 323
     */
    function setTargettable(_object: number | Object, targettable: boolean): void;
    /**
     * Sets the 34th and 35th object flags related to player peds.
     *
     * Hash: 0xB39F03368DB0CAA2 | Since: 3258
     */
    function setTargettableByPlayer(_object: number | Object, setFlag34: boolean, setFlag35: boolean): void;
    /**
     * Overrides a flag on the object which determines if the object should be avoided by a vehicle in task CTaskVehicleGoToPointWithAvoidanceAutomobile.
     *
     * Hash: 0x77F33F2CCF64B3AA | Since: 323
     */
    function setForceVehiclesToAvoid(_object: number | Object, toggle: boolean): void;
    /**
     * Has 8 params in the latest patches.
     *
     * isMission - if true doesn't return mission objects
     *
     * Hash: 0xE143FA2249364369 | Since: 323
     */
    function getClosestOfType(pos: Vector3, radius: number, modelHash: number | string, isMission: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x8ABFB70C49CC43E2 | Since: 323
     */
    function hasBeenBroken(_object: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x761B0E69AC4D007E | Since: 323
     */
    function hasClosestOfTypeBeenBroken(modelHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x46494A2475701343 | Since: 323
     */
    function hasClosestOfTypeBeenCompletelyDestroyed(pos: Vector3, radius: number, modelHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2542269291C6AC84 | Since: 1180
     */
    function getHasBeenCompletelyDestroyed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x163E252DE035A133 | Since: 323
     */
    function getOffsetFromCoordAndHeadingInWorldCoords(pos: Vector3, heading: number, xOffset: number, yOffset: number, zOffset: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x163F8B586BC95F2A | Since: 323
     */
    function getCoordsAndRotationOfClosestOfType(pos: Vector3, radius: number, modelHash: number | string, rotationOrder: number): [boolean, Vector3, Vector3];
    /**
     * Hardcoded to not work in multiplayer.
     *
     *
     * Used to lock/unlock doors to interior areas of the game.
     *
     * (Possible) Door Types:
     *
     * https://pastebin.com/9S2m3qA4
     *
     * Heading is either 1, 0 or -1 in the scripts. Means default closed(0) or opened either into(1) or out(-1) of the interior.
     * Locked means that the heading is locked.
     * p6 is always 0.
     *
     * 225 door types, model names and coords found in stripclub.c4:
     * https://pastebin.com/gywnbzsH
     *
     * get door info: https://pastebin.com/i14rbekD
     *
     * Hash: 0xF82D8F1926A02C3D | Since: 323
     */
    function setStateOfClosestDoorOfType(_type: number | string, pos: Vector3, locked: boolean, heading: number): void;
    /**
     * locked is 0 if no door is found
     * locked is 0 if door is unlocked
     * locked is 1 if door is found and unlocked.
     *
     * -------------
     * the locked bool is either 0(unlocked)(false) or 1(locked)(true)
     *
     * Hash: 0xEDC1A5B84AEF33FF | Since: 323
     */
    function getStateOfClosestDoorOfType(_type: number | string, pos: Vector3): [boolean, number];
    /**
     * Hardcoded not to work in multiplayer environments.
     * When you set locked to 0 the door open and to 1 the door close
     * `OBJECT::SET_LOCKED_UNSTREAMED_IN_DOOR_OF_TYPE(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 0, 0.0, 50.0, 0);  //door open`
     *
     * `OBJECT::SET_LOCKED_UNSTREAMED_IN_DOOR_OF_TYPE(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 1, 0.0, 50.0, 0);  //door close`
     *
     * Hash: 0x9B12F9A24FABEDB0 | Since: 323
     */
    function setLockedUnstreamedInDoorOfType(modelHash: number | string, pos: Vector3, locked: boolean, xRotMult: number, yRotMult: number, zRotMult: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x006E4B040ED37EC3 | Since: 1868
     */
    function playAutoStartAnim(): void;
    /**
     * doorHash has to be unique. scriptDoor false; relies upon getNetworkGameScriptHandler. isLocal On true disables the creation CRequestDoorEvent's in DOOR_SYSTEM_SET_DOOR_STATE.
     * p5 only set to true in single player native scripts.
     * If scriptDoor is true, register the door on the script handler host (note: there's a hardcap on the number of script IDs that can be added to the system at a given time). If scriptDoor and isLocal are both false, the door is considered to be in a "Persists w/o netobj" state.
     *
     * door hashes normally look like PROP_[int]_DOOR_[int] for interior doors and PROP_BUILDING_[int]_DOOR_[int] exterior doors but you can just make up your own hash if you want
     * All doors need to be registered with ADD_DOOR_TO_SYSTEM before they can be manipulated with the door natives and the easiest way to get door models is just find the door in codewalker.
     *
     * Example: AddDoorToSystem("PROP_43_DOOR_0", "hei_v_ilev_fh_heistdoor2", -1456.818, -520.5037, 69.67043, 0, 0, 0)
     *
     * Hash: 0x6F8838D03D1DC226 | Since: 323
     */
    function addDoorToSystem(doorHash: number | string, modelHash: number | string, pos: Vector3, scriptDoor: boolean, isLocal: boolean): void;
    /**
     * CDoor and CDoorSystemData still internally allocated (and their associations between doorHash, modelHash, and coordinates).
     * Only its NetObj removed and flag ``*(v2 + 192) |= 8u`` (1604 retail) toggled.
     *
     * Hash: 0x464D8E1427156FE4 | Since: 323
     */
    function removeDoorFromSystem(doorHash: number | string): void;
    /**
     * Lockstates not applied and CNetObjDoor's not created until DOOR_SYSTEM_GET_IS_PHYSICS_LOADED returns true.
     * `requestDoor` on true, and when door system is configured to, i.e., "persists w/o netobj", generate a CRequestDoorEvent.
     * `forceUpdate` on true, forces an update on the door system (same path as netObjDoor_applyDoorStuff)
     * Door lock states:
     * 0: UNLOCKED
     * 1: LOCKED
     * 2: DOORSTATE_FORCE_LOCKED_UNTIL_OUT_OF_AREA
     * 3: DOORSTATE_FORCE_UNLOCKED_THIS_FRAME
     * 4: DOORSTATE_FORCE_LOCKED_THIS_FRAME
     * 5: DOORSTATE_FORCE_OPEN_THIS_FRAME
     * 6: DOORSTATE_FORCE_CLOSED_THIS_FRAME
     *
     * Hash: 0x6BAB9442830C7F53 | Since: 323
     */
    function doorSystemSetDoorState(doorHash: number | string, state: number, requestDoor: boolean, forceUpdate: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x160AA1B32F6139B8 | Since: 323
     */
    function doorSystemGetDoorState(doorHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x4BC2854478F3A749 | Since: 323
     */
    function doorSystemGetDoorPendingState(doorHash: number | string): number;
    /**
     * Includes networking check: ownership vs. or the door itself **isn't** networked.
     * `forceUpdate` on true invokes DOOR_SYSTEM_SET_DOOR_STATE otherwise requestDoor is unused.
     *
     * Hash: 0x03C27E13B42A0E82 | Since: 323
     */
    function doorSystemSetAutomaticRate(doorHash: number | string, rate: number, requestDoor: boolean, forceUpdate: boolean): void;
    /**
     * `forceUpdate` on true invokes DOOR_SYSTEM_SET_DOOR_STATE otherwise requestDoor is unused.
     *
     * Hash: 0x9BA001CB45CBF627 | Since: 323
     */
    function doorSystemSetAutomaticDistance(doorHash: number | string, distance: number, requestDoor: boolean, forceUpdate: boolean): void;
    /**
     * Sets the ajar angle of a door.
     * Ranges from -1.0 to 1.0, and 0.0 is closed / default.
     * `forceUpdate` on true invokes DOOR_SYSTEM_SET_DOOR_STATE otherwise requestDoor is unused.
     *
     * Hash: 0xB6E6FBA95C7324AC | Since: 323
     */
    function doorSystemSetOpenRatio(doorHash: number | string, ajar: number, requestDoor: boolean, forceUpdate: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE851471AEFC3374F | Since: 1868
     */
    function doorSystemGetAutomaticDistance(doorHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x65499865FCA6E5EC | Since: 323
     */
    function doorSystemGetOpenRatio(doorHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x8562FD8AB1E94D39 | Since: 3407
     */
    function doorSystemGetIsSpringRemoved(doorHash: number | string): boolean;
    /**
     * Includes networking check: ownership vs. or the door itself **isn't** networked.
     * `forceUpdate` on true invokes DOOR_SYSTEM_SET_DOOR_STATE otherwise requestDoor is unused.
     *
     * Hash: 0xC485E07E4F0B7958 | Since: 323
     */
    function doorSystemSetSpringRemoved(doorHash: number | string, removed: boolean, requestDoor: boolean, forceUpdate: boolean): void;
    /**
     * Includes networking check: ownership vs. or the door itself **isn't** networked.
     *
     * Hash: 0xD9B71952F78A2640 | Since: 323
     */
    function doorSystemSetHoldOpen(doorHash: number | string, toggle: boolean): void;
    /**
     * Some property related to gates. Native name between ``DOOR_SYSTEM_SET_AUTOMATIC_RATE`` and ``DOOR_SYSTEM_SET_DOOR_STATE``.
     *
     * Hash: 0xA85A21582451E951 | Since: 323
     */
    function doorSystemSetDoorOpenForRaces(doorHash: number | string): void;
    /**
     * `if (OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(doorHash))`
     * {
     * `OBJECT::REMOVE_DOOR_FROM_SYSTEM(doorHash);`
     * }
     *
     * Hash: 0xC153C43EA202C8C1 | Since: 323
     */
    function isDoorRegisteredWithSystem(doorHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC531EE8A1145A149 | Since: 323
     */
    function isDoorClosed(doorHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC7F29CA00F46350E | Since: 323
     */
    function openAllBarriersForRace(): void;
    /**
     * Clears the fields sets by 0xC7F29CA00F46350E (1604 retail: 0x1424A7A10, 0x1424A7A11) and iterates over the global CDoor's bucket-list.
     * Related to its "Pre-networked state"?
     *
     * Hash: 0x701FDA1E82076BA4 | Since: 323
     */
    function closeAllBarriersForRace(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDF97CDD4FC08FD34 | Since: 323
     */
    function doorSystemGetIsPhysicsLoaded(): boolean;
    /**
     * Search radius: 0.5
     *
     * Hash: 0x589F80B325CC82C5 | Since: 323
     */
    function doorSystemFindExistingDoor(pos: Vector3, modelHash: number | string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x90E47239EA1980B8 | Since: 323
     */
    function isGarageEmpty(garageHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x024A60DEB0EA69F0 | Since: 323
     */
    function isPlayerEntirelyInsideGarage(garageHash: number | string, player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1761DC5D8471CBAA | Since: 323
     */
    function isPlayerPartiallyInsideGarage(garageHash: number | string, player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x85B6C850546FDDE2 | Since: 323
     */
    function areEntitiesEntirelyInsideGarage(garageHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x673ED815D6E323B7 | Since: 323
     */
    function isAnyEntityEntirelyInsideGarage(garageHash: number | string): boolean;
    /**
     * Despite the name, it does work for any entity type.
     *
     * Hash: 0x372EF6699146A1E4 | Since: 323
     */
    function isEntirelyInsideGarage(garageHash: number | string, entity: number | Entity): boolean;
    /**
     * Despite the name, it does work for any entity type.
     *
     * Hash: 0xF0EED5A6BC7B237A | Since: 323
     */
    function isPartiallyInsideGarage(garageHash: number | string, entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDA05194260CDCDF9 | Since: 678
     */
    function clearGarage(garageHash: number | string, isNetwork: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x190428512B240692 | Since: 323
     */
    function clearsInsideGarage(garageHash: number | string, vehicles: boolean, peds: boolean, objects: boolean, isNetwork: boolean): void;
    /**
     * Sets a flag. A valid id is 0x157DC10D
     *
     * Hash: 0x659F9D71F52843F8 | Since: 1290
     */
    function disableTidyingUpInGarage(id: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF2E1A7133DD356A6 | Since: 323
     */
    function enableSavingInGarage(garageHash: number | string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x66A49D021870FE88 | Since: 323
     */
    function closeSafehouseGarages(): void;
    /**
     * p5 is usually 0.
     *
     * Hash: 0xBFA48E2FF417213F | Since: 323
     */
    function doesOfTypeExistAtCoords(pos: Vector3, radius: number, hash: number | string): boolean;
    /**
     * An angled area is an X-Z oriented rectangle with three parameters:
     * 1. origin: the mid-point along a base edge of the rectangle;
     * 2. extent: the mid-point of opposite base edge on the other Z;
     * 3. width: the length of the base edge; (named derived from logging strings ``CNetworkRoadNodeWorldStateData``).
     *
     * The oriented rectangle can then be derived from the direction of the two points (``norm(origin - extent)``), its orthonormal, and the width, e.g:
     * 1. golf_mp https://i.imgur.com/JhsQAK9.png
     * 2. am_taxi https://i.imgur.com/TJWCZaT.jpg
     *
     * Hash: 0x2A70BAE8883E4C81 | Since: 323
     */
    function isPointInAngledArea(pos: Vector3, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, debug: boolean, includeZ: boolean): boolean;
    /**
     * Overrides the climbing/blocking flags of the object, used in the native scripts mostly for "prop_dock_bouy_*"
     *
     * Hash: 0x4D89D607CB3DD1D2 | Since: 323
     */
    function setAllowLowLodBuoyancy(_object: number | Object, toggle: boolean): void;
    /**
     * Adjust the physics parameters of a prop, or otherwise known as "object". This is useful for simulated gravity.
     *
     * Other parameters seem to be unknown.
     *
     * p2: seems to be weight and gravity related. Higher value makes the obj fall faster. Very sensitive?
     * p3: seems similar to p2
     * p4: makes obj fall slower the higher the value
     * p5: similar to p4
     *
     * Hash: 0xF6DF6E90DE7DF90F | Since: 323
     */
    function setPhysicsParams(_object: number | Object, weight: number, gravity: number, buoyancy: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB6FBFD079B8D0596 | Since: 323
     */
    function getFragmentDamageHealth(): number;
    /**
     * No comment provided
     *
     * Hash: 0x406137F8EF90EAF5 | Since: 323
     */
    function setActivatePhysicsAsSoonAsItIsUnfrozen(_object: number | Object, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x397DC58FF00298D1 | Since: 323
     */
    function isAnyNearPoint(pos: Vector3, range: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8C90FE4B381BA60A | Since: 323
     */
    function isNearPoint(objectHash: number | string, pos: Vector3, range: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4A39DB43E47CF3AA | Since: 323
     */
    function removeHighDetailModel(_object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0xE7E4C198B0185900 | Since: 323
     */
    function breakFragmentChild(p0: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0xE05F6AEEFEB0BB02 | Since: 1180
     */
    function damageFragmentChild(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF9C1681347C8BD15 | Since: 323
     */
    function fixFragment(_object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0xB252BC036B525623 | Since: 323
     */
    function trackVisibility(_object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x8B32ACE6326A7546 | Since: 323
     */
    function isVisible(_object: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC6033D32241F6FB5 | Since: 323
     */
    function setIsSpecialGolfball(_object: number | Object, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEB6F1A9B5510A5D2 | Since: 323
     */
    function setTakesDamageFromCollidingWithBuildings(): void;
    /**
     * No comment provided
     *
     * Hash: 0xABDABF4E1EDECBFA | Since: 1365
     */
    function allowDamageEventsForNonNetworkeds(value: boolean): void;
    /**
     * Requires a component_at_*_flsh to be attached to the weapon object
     *
     * Hash: 0xBCE595371A5FBAAF | Since: 323
     */
    function setCutscenesWeaponFlashlightOnThisFrame(_object: number | Object, toggle: boolean): void;
    /**
     * Example:
     * `OBJECT::GET_RAYFIRE_MAP_OBJECT(-809.9619750976562, 170.919, 75.7406997680664, 3.0, "des_tvsmash");`
     *
     * Hash: 0xB48FCED898292E52 | Since: 323
     */
    function getRayfireMap(pos: Vector3, radius: number, name: string): number;
    /**
     * Defines the state of a destructible object.
     * Use the GET_RAYFIRE_MAP_OBJECT native to find an object's handle with its name / coords.
     * State 2 == object just spawned
     * State 4 == Beginning of the animation
     * State 6 == Start animation
     * State 9 == End of the animation
     *
     * Hash: 0x5C29F698D404C5E1 | Since: 323
     */
    function setStateOfRayfireMap(_object: number | Object, state: number): void;
    /**
     * Get a destructible object's state.
     * Substract 1 to get the real state.
     * See SET_STATE_OF_RAYFIRE_MAP_OBJECT to see the different states
     * For example, if the object just spawned (state 2), the native will return 3.
     *
     * Hash: 0x899BA936634A322E | Since: 323
     */
    function getStateOfRayfireMap(_object: number | Object): number;
    /**
     * Returns true if a destructible object with this handle exists, false otherwise.
     *
     * Hash: 0x52AF537A0C5B8AAD | Since: 323
     */
    function doesRayfireMapExist(_object: number | Object): boolean;
    /**
     * `object`: The des-object handle to get the animation progress from.
     * Return value is a float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.
     *
     * Hash: 0x260EE4FDBDF4DB01 | Since: 323
     */
    function getRayfireMapAnimPhase(_object: number | Object): number;
    /**
     * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
     *
     * Hash: 0xFBA08C503DD5FA58 | Since: 323
     */
    function createPickup(pickupHash: number | string, pos: Vector3, value: number, modelHash: number | string): any;
    /**
     * flags:
     * 8 (1 << 3): place on ground
     * 512 (1 << 9): spin around
     *
     * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
     *
     * Hash: 0x891804727E0A98B7 | Since: 323
     */
    function createPickupRotate(pickupHash: number | string, pos: Vector3, rot: Vector3, flag: number, amount: number, modelHash: number | string): any;
    /**
     * No comment provided
     *
     * Hash: 0x394CD08E31313C28 | Since: 944
     */
    function forcePickupRotateFaceUp(): void;
    /**
     * No comment provided
     *
     * Hash: 0x826D1EE4D1CAFC78 | Since: 505
     */
    function setCustomPickupWeaponHash(pickupHash: number | string, pickup: any): void;
    /**
     * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
     *
     * Hash: 0x673966A0C0FD7171 | Since: 323
     */
    function createAmbientPickup(pickupHash: number | string, pos: Vector3, flags: number, value: number, modelHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x9C93764223E29C50 | Since: 2372
     */
    function createNonNetworkedAmbientPickup(pickupHash: number | string, pos: Vector3, flags: number, value: number, modelHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x1E3F1B1B891A2AAA | Since: 573
     */
    function blockPlayersForAmbientPickup(): void;
    /**
     * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
     *
     * Hash: 0x2EAF1FDB2FB55698 | Since: 323
     */
    function createPortablePickup(pickupHash: number | string, pos: Vector3, placeOnGround: boolean, modelHash: number | string): number;
    /**
     * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
     *
     * Hash: 0x125494B98A21AAF7 | Since: 323
     */
    function createNonNetworkedPortablePickup(pickupHash: number | string, pos: Vector3, placeOnGround: boolean, modelHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x8DC39368BDD57755 | Since: 323
     */
    function attachPortablePickupToPed(pickupObject: number | Object, ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xCF463D1E9A0AECB1 | Since: 323
     */
    function detachPortablePickupFromPed(pickupObject: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x5CE2E45A5CE2E45A | Since: 2545
     */
    function forcePortablePickupLastAccessiblePositionSetting(_object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x867458251D47CCB2 | Since: 463
     */
    function hidePortablePickupWhenDetached(pickupObject: number | Object, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0BF3B3BD47D79C08 | Since: 323
     */
    function setMaxNumPortablePickupsCarriedByPlayer(modelHash: number | string, _number: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x78857FC65CADB909 | Since: 323
     */
    function setLocalPlayerCanCollectPortablePickups(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6E16BC2503FF1FF0 | Since: 323
     */
    function getSafePickupCoords(pos: Vector3): Vector3;
    /**
     * Adds an area that seems to be related to pickup physics behavior.
     * Max amount of areas is 10. Only works in multiplayer.
     *
     * Hash: 0xD4A7A435B3710D05 | Since: 1290
     */
    function addExtendedPickupProbeArea(pos: Vector3, radius: number): void;
    /**
     * Clears all areas created by ADD_EXTENDED_PICKUP_PROBE_AREA
     *
     * Hash: 0xB7C6D80FB371659A | Since: 1290
     */
    function clearExtendedPickupProbeAreas(): void;
    /**
     * No comment provided
     *
     * Hash: 0x225B8B35C88029B3 | Since: 323
     */
    function getPickupCoords(pickup: any): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x8DCA505A5C196F05 | Since: 1180
     */
    function suppressPickupSoundForPickup(): void;
    /**
     * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
     *
     * Hash: 0x27F9D613092159CF | Since: 323
     */
    function removeAllPickupsOfType(pickupHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x80EC48E6679313F9 | Since: 323
     */
    function hasPickupBeenCollected(pickup: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3288D8ACAECD2AB2 | Since: 323
     */
    function removePickup(pickup: any): void;
    /**
     * Spawns one or more money pickups.
     *
     * x: The X-component of the world position to spawn the money pickups at.
     * y: The Y-component of the world position to spawn the money pickups at.
     * z: The Z-component of the world position to spawn the money pickups at.
     * value: The combined value of the pickups (in dollars).
     * amount: The number of pickups to spawn.
     * model: The model to use, or 0 for default money model.
     *
     * Example:
     * CREATE_MONEY_PICKUPS(x, y, z, 1000, 3, 0x684a97ae);
     *
     * Spawns 3 spray cans that'll collectively give $1000 when picked up. (Three spray cans, each giving $334, $334, $332 = $1000).
     *
     * ==============================================
     *
     * Max is 2000 in MP. So if you put the amount to 20, but the value to $400,000 eg. They will only be able to pickup 20 - $2,000 bags. So, $40,000
     *
     * Hash: 0x0589B5E791CE9B2B | Since: 323
     */
    function createMoneyPickups(pos: Vector3, value: number, amount: number, model: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xAFC1CA75AD4074D1 | Since: 323
     */
    function doesPickupExist(pickup: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD9EFB6DBF7DAAEA3 | Since: 323
     */
    function doesPickupObjectExist(pickupObject: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5099BC55630B25AE | Since: 323
     */
    function getPickup(pickup: any): number;
    /**
     * No comment provided
     *
     * Hash: 0xFC481C641EBBD27D | Since: 1365
     */
    function isAPickup(_object: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0378C08504160D0D | Since: 323
     */
    function isAPortablePickup(_object: number | Object): boolean;
    /**
     * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
     *
     * Hash: 0xF9C36251F6E48E33 | Since: 323
     */
    function doesPickupOfTypeExistInArea(pickupHash: number | string, pos: Vector3, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x78015C9B4B3ECC9D | Since: 323
     */
    function setPickupRegenerationTime(pickup: any, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x758A5C1B3B1E1990 | Since: 1011
     */
    function forcePickupRegenerate(): void;
    /**
     * Disabling/enabling a player from getting pickups. From the scripts:
     *
     * `OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);`
     * `OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);`
     * `OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 1);`
     * `OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);`
     * `OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 0);`
     * `OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 1);`
     *
     * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
     *
     * Hash: 0x616093EC6B139DD9 | Since: 323
     */
    function setPlayerPermittedToCollectPickupsOfType(player: number | string | Player, pickupHash: number | string, toggle: boolean): void;
    /**
     * Maximum amount of pickup models that can be disallowed is 30.
     *
     * Hash: 0x88EAEC617CD26926 | Since: 323
     */
    function setLocalPlayerPermittedToCollectPickupsWithModel(modelHash: number | string, toggle: boolean): void;
    /**
     * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
     *
     * Hash: 0xFDC07C58E8AAB715 | Since: 1734
     */
    function allowAllPlayersToCollectPickupsOfType(pickupHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x53E0DF1A2A3CF0CA | Since: 323
     */
    function setTeamPickup(_object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x92AEFB5F6E294023 | Since: 323
     */
    function preventCollectionOfPortablePickup(_object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x27F248C3FEBFAAD3 | Since: 2372
     */
    function setPickupGlowWhenUncollectable(pickup: any, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x08BD8BA5BDE2C2FA | Since: 3407
     */
    function setPickupGlowDisabled(pickup: any, toggle: boolean): void;
    /**
     * p1 is always 0.51. This native is called before SET_PICKUP_REGENERATION_TIME in all occurances.
     *
     * Hash: 0x0596843B34B95CE5 | Since: 505
     */
    function setPickupGlowOffset(pickup: any): void;
    /**
     * p1 is always -0.2 in scripts and p2 is always true in scripts.
     *
     * Hash: 0xA08FE5E49BDC39DD | Since: 323
     */
    function setPickupObjectGlowOffset(pickup: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x62454A641B41F3C5 | Since: 678
     */
    function setGlowInSameTeam(pickup: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x39A5FB7EAF150840 | Since: 678
     */
    function setPickupArrowMarker(pickup: any, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x834344A414C7C85D | Since: 2372
     */
    function allowPickupArrowMarkerWhenUncollectable(pickup: any, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDB41D07A45A6D4B7 | Since: 323
     */
    function getDefaultAmmoForWeaponPickup(pickupHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x318516E02DE3ECE2 | Since: 323
     */
    function setPickupGenerationRangeMultiplier(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB3ECA65C7317F174 | Since: 944
     */
    function getPickupGenerationRangeMultiplier(): number;
    /**
     * No comment provided
     *
     * Hash: 0x31F924B53EADDF65 | Since: 323
     */
    function setOnlyAllowAmmoCollectionWhenLow(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1C1B69FAE509BA97 | Since: 757
     */
    function setPickupUncollectable(pickup: any, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x858EC9FD25DE04AA | Since: 757
     */
    function setPickupTransparentWhenUncollectable(pickup: any, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3ED2B83AB2E82799 | Since: 757
     */
    function setPickupHiddenWhenUncollectable(pickup: any, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8881C98A31117998 | Since: 678
     */
    function setPickupObjectTransparentWhenUncollectable(pickup: any, toggle: boolean): void;
    /**
     * p0 is either 0 or 50 in scripts.
     *
     * Hash: 0x8CFF648FBD7330F1 | Since: 757
     */
    function setPickupAlphaWhenTransparent(): void;
    /**
     * No comment provided
     *
     * Hash: 0x46F3ADD1E2D5BAF2 | Since: 877
     */
    function setPortablePickupPersist(pickup: any, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x641F272B52E2F0F8 | Since: 877
     */
    function allowPortablePickupToMigrateToNonParticipants(pickup: any, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x4C134B4DF76025D0 | Since: 1180
     */
    function forceActivatePhysicsOnUnfixedPickup(pickup: any, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xAA059C615DE9DD03 | Since: 1180
     */
    function allowPickupByNoneParticipant(pickup: any, toggle: boolean): void;
    /**
     * enum ePickupRewardType
     * {
     * PICKUP_REWARD_TYPE_AMMO = (1 << 0),
     * PICKUP_REWARD_TYPE_BULLET_MP = (1 << 1),
     * PICKUP_REWARD_TYPE_MISSILE_MP = (1 << 2),
     * PICKUP_REWARD_TYPE_GRENADE_LAUNCHER_MP = (1 << 3),
     * PICKUP_REWARD_TYPE_ARMOUR = (1 << 4),
     * PICKUP_REWARD_TYPE_HEALTH = (1 << 5),
     * PICKUP_REWARD_TYPE_HEALTH_VARIABLE = PICKUP_REWARD_TYPE_HEALTH,
     * PICKUP_REWARD_TYPE_MONEY_FIXED = (1 << 6),
     * PICKUP_REWARD_TYPE_MONEY_VARIABLE = PICKUP_REWARD_TYPE_MONEY_FIXED,
     * PICKUP_REWARD_TYPE_WEAPON = (1 << 7),
     * PICKUP_REWARD_TYPE_STAT = (1 << 8),
     * PICKUP_REWARD_TYPE_STAT_VARIABLE = PICKUP_REWARD_TYPE_STAT,
     * PICKUP_REWARD_TYPE_VEHICLE_FIX = (1 << 9),
     * PICKUP_REWARD_TYPE_FIREWORK_MP = (1 << 10),
     * };
     *
     * Hash: 0xF92099527DB8E2A7 | Since: 323
     */
    function suppressPickupRewardType(rewardType: number, suppress: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA2C1F5E92AFE49ED | Since: 323
     */
    function clearAllPickupRewardTypeSuppression(): void;
    /**
     * No comment provided
     *
     * Hash: 0x762DB2D380B48D04 | Since: 323
     */
    function clearPickupRewardTypeSuppression(rewardType: number): void;
    /**
     * draws circular marker at pos
     * -1 = none
     * 0 = red
     * 1 = green
     * 2 = blue
     * 3 = green larger
     * 4 = nothing
     * 5 = green small
     *
     * Hash: 0x3430676B11CDF21D | Since: 323
     */
    function renderFakePickupGlow(pos: Vector3, colorIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7813E8B8C4AE4799 | Since: 1734
     */
    function setPickupCollectableInVehicle(pickup: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xBFFE53AE7E67FCDC | Since: 1290
     */
    function setPickupTrackDamageEvents(pickup: any, toggle: boolean): void;
    /**
     * Sets entity+38 to C (when false) or 0xFF3f (when true)
     *
     * Hash: 0xD05A3241B9A86F19 | Since: 1180
     */
    function setEntityFlagSuppressShadow(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB2D0BDE54F0E8E5A | Since: 323
     */
    function setEntityFlagRenderSmallShadow(_object: number | Object, toggle: boolean): void;
    /**
     * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
     *
     * Hash: 0x08F96CA6C551AD51 | Since: 323
     */
    function getWeaponTypeFromPickupType(pickupHash: number | string): number;
    /**
     * Returns the pickup hash for the given weapon hash
     *
     * Hash: 0xD6429A016084F1A5 | Since: 1290
     */
    function getPickupTypeFromWeaponHash(weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x11D1E53A726891FE | Since: 323
     */
    function isPickupWeaponValid(_object: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE84EB93729C5F36A | Since: 757
     */
    function getTintIndex(_object: number | Object): number;
    /**
     * enum ObjectPaintVariants
     * {
     * Pacific = 0,
     * Azure = 1,
     * Nautical = 2,
     * Continental = 3,
     * Battleship = 4,
     * Intrepid = 5,
     * Uniform = 6,
     * Classico = 7,
     * Mediterranean = 8,
     * Command = 9,
     * Mariner = 10,
     * Ruby = 11,
     * Vintage = 12,
     * Pristine = 13,
     * Merchant = 14,
     * Voyager = 15
     * };
     *
     * Hash: 0x971DA0055324D033 | Since: 323
     */
    function setTintIndex(_object: number | Object, textureVariation: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF12E33034D887F66 | Since: 1103
     */
    function setTintIndexClosestBuildingOfType(pos: Vector3, radius: number, modelHash: number | string, textureVariation: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x31574B1B41268673 | Since: 2189
     */
    function setPropTintIndex(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5F048334B4A4E774 | Since: 1493
     */
    function setPropLightColor(_object: number | Object, r: number, g: number, b: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xADF084FB8F075D06 | Since: 1604
     */
    function isPropLightOverriden(_object: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3B2FD68DB5F8331C | Since: 757
     */
    function setIsVisibleInMirrors(_object: number | Object, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x96EE0EBA0163DF80 | Since: 791
     */
    function setSpeedBoostAmount(_object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0xDF6CA0330F2E737B | Since: 791
     */
    function setSpeedBoostDuration(_object: number | Object, duration: number): void;
    /**
     * returns pickup hash.
     *
     * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
     *
     * Hash: 0x5EAAD83F8CFB4575 | Since: 323
     */
    function convertOldPickupTypeToNew(pickupHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xF538081986E49E9D | Since: 323
     */
    function setForceThisFrame(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xADBE4809F19F927A | Since: 323
     */
    function onlyCleanUpWhenOutOfRange(_object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x8CAAB2BD3EA58BD4 | Since: 1011
     */
    function setDisableCollisionsBetweenCarsAndCarParachute(): void;
    /**
     * No comment provided
     *
     * Hash: 0x63ECF581BC70E363 | Since: 1365
     */
    function setProjectilesShouldExplodeOnContact(entity: number | Entity): void;
    /**
     * Activate the physics to: "xs_prop_arena_{flipper,wall,bollard,turntable,pit}"
     *
     * Hash: 0x911024442F4898F0 | Since: 1604
     */
    function setDriveArticulatedJoint(_object: number | Object, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB20834A7DD3D8896 | Since: 1604
     */
    function setDriveArticulatedJointWithInflictor(_object: number | Object, toggle: boolean, ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x734E1714D077DA9A | Since: 1604
     */
    function setIsAPressurePlate(_object: number | Object, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1A6CBB06E2D0D79D | Since: 1604
     */
    function setWeaponImpactsApplyGreaterForce(_object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x43C677F1E1158005 | Since: 1604
     */
    function getIsArticulatedJointAtMinAngle(_object: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3BD770D281982DB5 | Since: 1604
     */
    function getIsArticulatedJointAtMaxAngle(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1C57C94A6446492A | Since: 1604
     */
    function setIsArticulated(_object: number | Object, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB5B7742424BD4445 | Since: 1604
     */
    function setIsBall(_object: number | Object, toggle: boolean): void;
}
export declare namespace pad {
    /**
     * control: 0: PLAYER_CONTROL, 1: CAMERA_CONTROL, 2: FRONTEND_CONTROL
     * For more info, see https://docs.fivem.net/docs/game-references/controls/
     *
     * Hash: 0x1CEA6BFDF248E5D9 | Since: 323
     */
    function isControlEnabled(control: number, action: number): boolean;
    /**
     * Returns whether a control is currently pressed.
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0xF3A21BCD95725A4A | Since: 323
     */
    function isControlPressed(control: number, action: number): boolean;
    /**
     * Returns whether a control is currently _not_ pressed.
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0x648EE3E7F38877DD | Since: 323
     */
    function isControlReleased(control: number, action: number): boolean;
    /**
     * Returns whether a control was newly pressed since the last check.
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0x580417101DDB492F | Since: 323
     */
    function isControlJustPressed(control: number, action: number): boolean;
    /**
     * Returns whether a control was newly released since the last check.
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0x50F940259D3841E6 | Since: 323
     */
    function isControlJustReleased(control: number, action: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE9CB8C56E90D5079 | Since: 3407
     */
    function isControlHeldDown(control: number, action: number, duration: number): boolean;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0xD95E79E8686D2C27 | Since: 323
     */
    function getControlValue(control: number, action: number): number;
    /**
     * Returns the value of GET_CONTROL_VALUE normalized (i.e. a real number value between -1 and 1)
     *
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0xEC3C9B8D5327B563 | Since: 323
     */
    function getControlNormal(control: number, action: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x5B73C77D9EB66E24 | Since: 323
     */
    function setUseAdjustedMouseCoords(toggle: boolean): void;
    /**
     * Seems to return values between -1 and 1 for controls like gas and steering.
     *
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0x5B84D09CEC5209C5 | Since: 323
     */
    function getControlUnboundNormal(control: number, action: number): number;
    /**
     * This is for simulating player input.
     * value is a float value from 0 - 1
     *
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0xE8A25867FBA3B05E | Since: 323
     */
    function setControlValueNextFrame(control: number, action: number, value: number): boolean;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0xE2587F8CBBD87B1D | Since: 323
     */
    function isDisabledControlPressed(control: number, action: number): boolean;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0xFB6C4072E9A32E92 | Since: 757
     */
    function isDisabledControlReleased(control: number, action: number): boolean;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0x91AEF906BCA88877 | Since: 323
     */
    function isDisabledControlJustPressed(control: number, action: number): boolean;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0x305C8DCD79DA8B0F | Since: 323
     */
    function isDisabledControlJustReleased(control: number, action: number): boolean;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0x11E65974A982637C | Since: 323
     */
    function getDisabledControlNormal(control: number, action: number): number;
    /**
     * The "disabled" variant of GET_CONTROL_UNBOUND_NORMAL.
     *
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0x4F8A26A890FD62FB | Since: 323
     */
    function getDisabledControlUnboundNormal(control: number, action: number): number;
    /**
     * Returns time in ms since last input.
     *
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0xD7D22F5592AED8BA | Since: 323
     */
    function getControlHowLongAgo(control: number): number;
    /**
     * control: unused parameter
     *
     * Hash: 0xA571D46727E2B718 | Since: 323
     */
    function isUsingKeyboardAndMouse(control: number): boolean;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0x13337B38DB572509 | Since: 323
     */
    function isUsingCursor(control: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFC695459D4D0E219 | Since: 323
     */
    function setCursorPosition(x: number, y: number): boolean;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hardcoded to return false.
     *
     * Hash: 0x23F09EADC01449D6 | Since: 323
     */
    function isUsingRemotePlay(control: number): boolean;
    /**
     * control: unused parameter
     *
     * Hash: 0x6CD79468A1E595C6 | Since: 323
     */
    function haveControlsChanged(control: number): boolean;
    /**
     * allowXOSwap appears to always be true.
     *
     * EG:
     * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 201, 1) \/\*INPUT_FRONTEND_ACCEPT (e.g. Enter button)\*\/
     * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 202, 1) \/\*INPUT_FRONTEND_CANCEL (e.g. ESC button)\*\/
     * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 51, 1) \/\*INPUT_CONTEXT (e.g. E button)\*\/
     *
     * gtaforums.com/topic/819070-c-draw-instructional-buttons-scaleform-movie/#entry1068197378
     *
     * control: unused parameter
     *
     * Hash: 0x0499D7B09FC9B407 | Since: 323
     */
    function getControlInstructionalButtonsString(control: number, action: number, allowXOSwap: boolean): string;
    /**
     * control: unused parameter
     *
     * Hash: 0x80C2FD58D720C801 | Since: 323
     */
    function getControlGroupInstructionalButtonsString(control: number, controlGroup: number, allowXOSwap: boolean): string;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0x8290252FFF36ACB5 | Since: 323
     */
    function setControlLightEffectColor(control: number, red: number, green: number, blue: number): void;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0xCB0360EFEFB2580D | Since: 323
     */
    function clearControlLightEffect(control: number): void;
    /**
     * control: see IS_CONTROL_ENABLED
     * duration in milliseconds
     * frequency should range from about 10 (slow vibration) to 255 (very fast)
     *
     * example:
     * SET_CONTROL_SHAKE(PLAYER_CONTROL, 100, 200);
     *
     * Hash: 0x48B3886C1358D0D5 | Since: 323
     */
    function setControlShake(control: number, duration: number, frequency: number): void;
    /**
     * Does nothing (it's a nullsub).
     *
     * Hash: 0x14D29BB12D47F68C | Since: 323
     */
    function setControlTriggerShake(control: number, leftDuration: number, leftFrequency: number, rightDuration: number, rightFrequency: number): void;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0x38C16A305E8CDC8D | Since: 323
     */
    function stopControlShake(control: number): void;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0xF239400E16C23E08 | Since: 323
     */
    function setControlShakeSuppressedId(control: number, uniqueId: number): void;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0xA0CEFCEA390AAB9B | Since: 323
     */
    function clearControlShakeSuppressedId(control: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x77B612531280010D | Since: 323
     */
    function isLookInverted(): boolean;
    /**
     * Used with IS_LOOK_INVERTED() and negates its affect.
     *
     * --
     *
     * Not sure how the person above got that description, but here's an actual example:
     *
     * `if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2)) {`
     * if (a_5) {
     * `if (PAD::IS_LOOK_INVERTED()) {`
     * a_3 *= -1;
     * }
     * `if (PAD::IS_MOUSE_LOOK_INVERTED()) {`
     * a_3 *= -1;
     * }
     * }
     * }
     *
     * Hash: 0xE1615EC03B3BB4FD | Since: 323
     */
    function isMouseLookInverted(): boolean;
    /**
     * Hard-coded to return 3 if using KBM, otherwise same behavior as GET_LOCAL_PLAYER_GAMEPAD_AIM_STATE.
     *
     * Hash: 0xBB41AFBBBC0A0287 | Since: 323
     */
    function getLocalPlayerAimState(): number;
    /**
     * `Returns the local player's targeting mode. See PLAYER::SET_PLAYER_TARGETING_MODE.`
     *
     * Hash: 0x59B9A7AF4C95133C | Since: 323
     */
    function getLocalPlayerGameAimState(): number;
    /**
     * No comment provided
     *
     * Hash: 0x25AAA32BDC98F2A3 | Since: 1365
     */
    function getIsUsingAlternateHandbrake(): boolean;
    /**
     * Returns profile setting 225.
     *
     * Hash: 0x0F70731BACCFBB96 | Since: 323
     */
    function getIsUsingAlternateDriveby(): boolean;
    /**
     * Returns profile setting 17.
     *
     * Hash: 0xFC859E2374407556 | Since: 323
     */
    function getAllowMovementWhileZoomed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x798FDEB5B1575088 | Since: 323
     */
    function setPlayerShakesWhenControllerDisabled(toggle: boolean): void;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0xEDE476E5EE29EDB1 | Since: 323
     */
    function setInputExclusive(control: number, action: number): void;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0xFE99B66D079CF6BC | Since: 323
     */
    function disableControlAction(control: number, action: number, disableRelatedActions: boolean): void;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0x351220255D64C155 | Since: 323
     */
    function enableControlAction(control: number, action: number, enableRelatedActions: boolean): void;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0x5F4B6931816E599B | Since: 323
     */
    function disableAllControlActions(control: number): void;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0xA5FFE9B05F199DE7 | Since: 323
     */
    function enableAllControlActions(control: number): void;
    /**
     * Used in carsteal3 script with schemeName = "Carsteal4_spycar".
     *
     * Hash: 0x3D42B92563939375 | Since: 323
     */
    function initPcScriptedControls(schemeName: string): boolean;
    /**
     * Same as INIT_PC_SCRIPTED_CONTROLS
     *
     * Hash: 0x4683149ED1DDE7A1 | Since: 323
     */
    function switchPcScriptedControls(schemeName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x643ED62D5EA3BEBD | Since: 323
     */
    function shutdownPcScriptedControls(): void;
    /**
     * control: see IS_CONTROL_ENABLED
     *
     * Hash: 0x7F4724035FDCA1DD | Since: 323
     */
    function allowAlternativeScriptControlsLayout(control: number): void;
    /**
     * Always returns zero.
     *
     * Hash: 0x18E474F40EF05F10 | Since: 3570
     */
    function getGameType(): number;
}
export declare namespace pathfind {
    /**
     * When nodeEnabled is set to false, all nodes in the area get disabled.
     * `GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns true afterwards.
     * If it's true, `GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns false.
     *
     * Hash: 0xBF1A602B5BA52FEE | Since: 323
     */
    function setRoadsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, nodeEnabled: boolean, unknown2: boolean): void;
    /**
     * unknown3 is related to `SEND_SCRIPT_WORLD_STATE_EVENT > CNetworkRoadNodeWorldStateData` in networked environments.
     * See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
     *
     * Hash: 0x1A5AA1208AF5DB59 | Since: 323
     */
    function setRoadsInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, unknown1: boolean, unknown2: boolean, unknown3: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x34F060F4BF92E018 | Since: 323
     */
    function setPedPathsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
    /**
     * Flags are:
     * 1 = 1 = B02_IsFootpath
     * 2 = 4 = !B15_InteractionUnk
     * 4 = 0x20 = !B14_IsInterior
     * 8 = 0x40 = !B07_IsWater
     * 16 = 0x200 = B17_IsFlatGround
     * When onGround == true outPosition is a position located on the nearest pavement.
     *
     * When a safe coord could not be found the result of a function is false and outPosition == Vector3.Zero.
     *
     * In the scripts these flags are used: 0, 14, 12, 16, 20, 21, 28. 0 is most commonly used, then 16.
     *
     * 16 works for me, 0 crashed the script.
     *
     * Hash: 0xB61C8E878A4199CA | Since: 323
     */
    function getSafeCoordForPed(pos: Vector3, onGround: boolean, flags: number): [boolean, Vector3];
    /**
     * https://gtaforums.com/topic/843561-pathfind-node-types
     *
     * Hash: 0x240A18690AE96513 | Since: 323
     */
    function getClosestVehicleNode(pos: Vector3, nodeFlags: number): [boolean, Vector3];
    /**
     * Get the closest vehicle node to a given position.
     *
     * Hash: 0x2EABE3B06F58C1BE | Since: 323
     */
    function getClosestMajorVehicleNode(pos: Vector3, unknown1: number, unknown2: number): [boolean, Vector3];
    /**
     * p5, p6 and p7 seems to be about the same as p4, p5 and p6 for GET_CLOSEST_VEHICLE_NODE. p6 and/or p7 has something to do with finding a node on the same path/road and same direction(at least for this native, something to do with the heading maybe). Edit this when you find out more.
     *
     * nodeType: 0 = main roads, 1 = any dry path, 3 = water
     * p6 is always 3.0
     * p7 is always 0
     *
     * gtaforums.com/topic/843561-pathfind-node-types
     *
     * Example of usage, moving vehicle to closest path/road:
     * `Vector3 coords = ENTITY::GET_ENTITY_COORDS(playerVeh, true);`
     * Vector3 closestVehicleNodeCoords;
     * float roadHeading;
     * `PATHFIND::GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(coords.x, coords.y, coords.z, &closestVehicleNodeCoords, &roadHeading, 1, 3, 0);`
     * `ENTITY::SET_ENTITY_HEADING(playerVeh, roadHeading);`
     * `ENTITY::SET_ENTITY_COORDS(playerVeh, closestVehicleNodeCoords.x, closestVehicleNodeCoords.y, closestVehicleNodeCoords.z, 1, 0, 0, 1);`
     * `VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(playerVeh);`
     *
     * ------------------------------------------------------------------
     * C# Example (ins1de) : https://pastebin.com/fxtMWAHD
     *
     * Hash: 0xFF071FB798B803B0 | Since: 323
     */
    function getClosestVehicleNodeWithHeading(pos: Vector3, nodeType: number): [boolean, Vector3, number];
    /**
     * No comment provided
     *
     * Hash: 0xE50E52416CCF948B | Since: 323
     */
    function getNthClosestVehicleNode(pos: Vector3, nthClosest: number, nodeFlags: number, unknown1: number, unknown2: number): [boolean, Vector3];
    /**
     * Returns the id.
     *
     * Hash: 0x22D7275A79FE8215 | Since: 323
     */
    function getNthClosestVehicleNodeId(pos: Vector3, nth: number, nodeFlags: number): number;
    /**
     * Get the nth closest vehicle node and its heading.
     *
     * Hash: 0x80CA6A8B6C094CC4 | Since: 323
     */
    function getNthClosestVehicleNodeWithHeading(pos: Vector3, nthClosest: number, nodeFlags: number, unknown3: number, unknown4: number): [boolean, Vector3, number, number];
    /**
     * No comment provided
     *
     * Hash: 0x6448050E9C2A7207 | Since: 323
     */
    function getNthClosestVehicleNodeIdWithHeading(pos: Vector3, nthClosest: number, nodeFlags: number): [number, Vector3, number];
    /**
     * See gtaforums.com/topic/843561-pathfind-node-types for node type info. 0 = paved road only, 1 = any road, 3 = water
     *
     * p10 always equals 3.0
     * p11 always equals 0
     *
     * Hash: 0x45905BE8654AE067 | Since: 323
     */
    function getNthClosestVehicleNodeFavourDirection(pos: Vector3, desiredX: number, desiredY: number, desiredZ: number, nthClosest: number, nodeFlags: number): [boolean, Vector3, number];
    /**
     * Gets the density and flags of the closest node to the specified position.
     * Density is a value between 0 and 15, indicating how busy the road is.
     * Flags is a bit field.
     *
     * Hash: 0x0568566ACBB5DEDC | Since: 323
     */
    function getVehicleNodeProperties(pos: Vector3): [boolean, number, number];
    /**
     * Returns true if the id is non zero.
     *
     * Hash: 0x1EAF30FCFBF5AF74 | Since: 323
     */
    function isVehicleNodeIdValid(vehicleNodeId: number): boolean;
    /**
     * Calling this with an invalid node id, will crash the game.
     * Note that IS_VEHICLE_NODE_ID_VALID simply checks if nodeId is not zero. It does not actually ensure that the id is valid.
     * Eg. IS_VEHICLE_NODE_ID_VALID(1) will return true, but will crash when calling GET_VEHICLE_NODE_POSITION().
     *
     * Hash: 0x703123E5E7D429C2 | Since: 323
     */
    function getVehicleNodePosition(nodeId: number): Vector3;
    /**
     * Returns false for nodes that aren't used for GPS routes.
     * Example:
     * Nodes in Fort Zancudo and LSIA are false
     *
     * Hash: 0xA2AE5C478B96E3B6 | Since: 323
     */
    function getVehicleNodeIsGpsAllowed(nodeID: number): boolean;
    /**
     * Returns true when the node is Offroad. Alleys, some dirt roads, and carparks return true.
     * Normal roads where plenty of Peds spawn will return false
     *
     * Hash: 0x4F5070AA58F69279 | Since: 323
     */
    function getVehicleNodeIsSwitchedOff(nodeID: number): boolean;
    /**
     * p1 seems to be always 1.0f in the scripts
     *
     * Hash: 0x132F52BBA570FE92 | Since: 323
     */
    function getClosestRoad(pos: Vector3): [boolean, Vector3, Vector3, any, any, number];
    /**
     * No comment provided
     *
     * Hash: 0xC2AB6BFE34E92F8B | Since: 2802
     */
    function loadAllPathNodes(_set: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x228E5C6AD4D74BFD | Since: 323
     */
    function setAllowStreamPrologueNodes(toggle: boolean): void;
    /**
     * Activates Cayo Perico path nodes if passed `1`. GPS navigation will start working, maybe more stuff will change, not sure. It seems if you try to unload (pass `0`) when close to the island, your game might crash.
     *
     * Hash: 0xF74B1FFA4A15FBEA | Since: 2189
     */
    function setAllowStreamHeistIslandNodes(_type: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF7B79A50B905A30D | Since: 323
     */
    function areNodesLoadedForArea(x1: number, y1: number, x2: number, y2: number): boolean;
    /**
     * Used internally for long range tasks
     *
     * Hash: 0x07FB139B592FA687 | Since: 323
     */
    function requestPathNodesInAreaThisFrame(x1: number, y1: number, x2: number, y2: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1EE7063B80FFC77C | Since: 323
     */
    function setRoadsBackToOriginal(): void;
    /**
     * See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
     * bool p7 - always 1
     *
     * Hash: 0x0027501B9F3B407E | Since: 323
     */
    function setRoadsBackToOriginalInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0B919E1FB47CC4E0 | Since: 323
     */
    function setAmbientPedRangeMultiplierThisFrame(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAA76052DDA9BFC3E | Since: 323
     */
    function adjustAmbientPedSpawnDensitiesThisFrame(): void;
    /**
     * p6 is always 0
     *
     * Hash: 0xE04B48F2CC926253 | Since: 323
     */
    function setPedPathsBackToOriginal(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x93E0DB8440B73A7D | Since: 323
     */
    function getRandomVehicleNode(pos: Vector3, radius: number): [boolean, Vector3, number];
    /**
     * No comment provided
     *
     * Hash: 0x809549AFC7AEC597 | Since: 2944
     */
    function getSpawnCoordsForVehicleNode(nodeAddress: number, towardsCoorsX: number, towardsCoorsY: number, towardsCoorsZ: number): [Vector3, number];
    /**
     * Determines the name of the street which is the closest to the given coordinates.
     *
     * x,y,z - the coordinates of the street
     * streetName - returns a hash to the name of the street the coords are on
     * crossingRoad - if the coordinates are on an intersection, a hash to the name of the crossing road
     *
     * `Note: the names are returned as hashes, the strings can be returned using the function HUD::GET_STREET_NAME_FROM_HASH_KEY.`
     *
     * Hash: 0x2EB41072B4C1E4C0 | Since: 323
     */
    function getStreetNameAtCoord(pos: Vector3): [number, number];
    /**
     * p3 is 0 in the only game script occurrence (trevor3) but 1 doesn't seem to make a difference
     *
     * distToNxJunction seems to be the distance in metres * 10.0f
     *
     * direction:
     * 0 = This happens randomly during the drive for seemingly no reason but if you consider that this native is only used in trevor3, it seems to mean "Next frame, stop whatever's being said and tell the player the direction."
     * 1 = Route is being calculated or the player is going in the wrong direction
     * 2 = Please Proceed the Highlighted Route
     * 3 = In (distToNxJunction) Turn Left
     * 4 = In (distToNxJunction) Turn Right
     * 5 = In (distToNxJunction) Keep Straight
     * 6 = In (distToNxJunction) Turn Sharply To The Left
     * 7 = In (distToNxJunction) Turn Sharply To The Right
     * 8 = Route is being recalculated or the navmesh is confusing. This happens randomly during the drive but consistently at {2044.0358, 2996.6116, 44.9717} if you face towards the bar and the route needs you to turn right. In that particular case, it could be a bug with how the turn appears to be 270 deg. CCW instead of "right." Either way, this seems to be the engine saying "I don't know the route right now."
     *
     * return value set to 0 always
     *
     * Hash: 0xF90125F1F79ECDF8 | Since: 323
     */
    function generateDirectionsToCoord(pos: Vector3): [number, number, number, number];
    /**
     * No comment provided
     *
     * Hash: 0x72751156E7678833 | Since: 323
     */
    function setIgnoreNoGpsFlag(toggle: boolean): void;
    /**
     * See: SET_BLIP_ROUTE
     *
     * Hash: 0x1FC289A0C3FF470F | Since: 323
     */
    function setIgnoreNoGpsFlagUntilFirstNormalNode(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC20483CD3DD5201 | Since: 323
     */
    function setGpsDisabledZone(x1: number, y1: number, z1: number, x2: number, y2: number, z3: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBBB45C3CF5C8AA85 | Since: 323
     */
    function getGpsBlipRouteLength(): number;
    /**
     * p3 can be 0, 1 or 2.
     *
     * Hash: 0xF3162836C28F9DA5 | Since: 505
     */
    function getPosAlongGpsTypeRoute(): [boolean, Vector3];
    /**
     * No comment provided
     *
     * Hash: 0x869DAACBBE9FA006 | Since: 323
     */
    function getGpsBlipRouteFound(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA0F8A7517A273C05 | Since: 463
     */
    function getRoadBoundaryUsingHeading(pos: Vector3, heading: number): [boolean, Vector3];
    /**
     * No comment provided
     *
     * Hash: 0x16F46FB18C8009E4 | Since: 323
     */
    function getPositionBySideOfRoad(pos: Vector3): [boolean, Vector3];
    /**
     * Gets a value indicating whether the specified position is on a road.
     * The vehicle parameter is not implemented (ignored).
     *
     * Hash: 0x125BF4ABFC536B09 | Since: 323
     */
    function isPointOnRoad(pos: Vector3, vehicle: number | Vehicle): boolean;
    /**
     * Gets the next zone that has been disabled using SET_GPS_DISABLED_ZONE_AT_INDEX.
     *
     * Hash: 0xD3A6A0EF48823A8C | Since: 323
     */
    function getNextGpsDisabledZoneIndex(): number;
    /**
     * Disables the GPS route displayed on the minimap while within a certain zone (area). When in a disabled zone and creating a waypoint, the GPS route is not shown on the minimap until you are outside of the zone. When disabled, the direct distance is shown on minimap opposed to distance to travel. Seems to only work before setting a waypoint.
     * You can clear the disabled zone with CLEAR_GPS_DISABLED_ZONE_AT_INDEX.
     *
     * <strong>Setting a waypoint at the same coordinate:</strong>
     * Disabled Zone: https://i.imgur.com/P9VUuxM.png
     * Enabled Zone (normal): https://i.imgur.com/BPi24aw.png
     *
     * Hash: 0xD0BC1C6FB18EE154 | Since: 323
     */
    function setGpsDisabledZoneAtIndex(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, index: number): void;
    /**
     * Clears a disabled GPS route area from a certain index previously set using `SET_GPS_DISABLED_ZONE_AT_INDEX`.
     *
     * Hash: 0x2801D0012266DF07 | Since: 323
     */
    function clearGpsDisabledZoneAtIndex(index: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x387EAD7EE42F6685 | Since: 323
     */
    function addNavmeshRequiredRegion(x: number, y: number, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x916F0A3CDEC3445E | Since: 323
     */
    function removeNavmeshRequiredRegions(): void;
    /**
     * No comment provided
     *
     * Hash: 0x705A844002B39DC0 | Since: 944
     */
    function isNavmeshRequiredRegionInUse(): boolean;
    /**
     * Set toggle true to disable navmesh.
     * Set toggle false to enable navmesh.
     *
     * Hash: 0x4C8872D8CDBE1B8B | Since: 323
     */
    function disableNavmeshInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8415D95B194A3AEA | Since: 323
     */
    function areAllNavmeshRegionsLoaded(): boolean;
    /**
     * Returns whether navmesh for the region is loaded. The region is a rectangular prism defined by it's top left deepest corner to it's bottom right shallowest corner.
     *
     * If you can re-word this so it makes more sense, please do. I'm horrible with words sometimes...
     *
     * Hash: 0xF813C7E63F9062A5 | Since: 323
     */
    function isNavmeshLoadedInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x01708E8DD3FF8C65 | Since: 323
     */
    function getNumNavmeshesExistingInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xFCD5C8E06E502F5A | Since: 323
     */
    function addNavmeshBlockingObject(): number;
    /**
     * No comment provided
     *
     * Hash: 0x109E99373F290687 | Since: 323
     */
    function updateNavmeshBlockingObject(): void;
    /**
     * No comment provided
     *
     * Hash: 0x46399A7895957C0E | Since: 323
     */
    function removeNavmeshBlockingObject(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0EAEB0DB4B132399 | Since: 323
     */
    function doesNavmeshBlockingObjectExist(): boolean;
    /**
     * Returns CGameWorldHeightMap's maximum Z value at specified point (grid node).
     *
     * Hash: 0x29C24BFBED8AB8FB | Since: 323
     */
    function getApproxHeightForPoint(x: number, y: number): number;
    /**
     * Returns CGameWorldHeightMap's maximum Z among all grid nodes that intersect with the specified rectangle.
     *
     * Hash: 0x8ABE8608576D9CE3 | Since: 323
     */
    function getApproxHeightForArea(x1: number, y1: number, x2: number, y2: number): number;
    /**
     * Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
     *
     * Hash: 0x336511A34F2E5185 | Since: 323
     */
    function getApproxFloorForPoint(x: number, y: number): number;
    /**
     * Returns CGameWorldHeightMap's minimum Z among all grid nodes that intersect with the specified rectangle.
     *
     * Hash: 0x3599D741C9AC6310 | Since: 323
     */
    function getApproxFloorForArea(x1: number, y1: number, x2: number, y2: number): number;
    /**
     * Calculates the travel distance between a set of points.
     *
     * Doesn't seem to correlate with distance on gps sometimes.
     * This function returns the value 100000.0 over long distances, seems to be a failure mode result, potentially occurring when not all path nodes are loaded into pathfind.
     *
     * Hash: 0xADD95C7005C4A197 | Since: 323
     */
    function calculateTravelDistanceBetweenPoints(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
}
export declare namespace ped {
    /**
     * https://alloc8or.re/gta5/doc/enums/ePedType.txt
     *
     * Full list of peds by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/peds.json
     *
     * Hash: 0xD49F9B0955C367DE | Since: 323
     */
    function create(pedType: number, modelHash: number | string, pos: Vector3, heading: number, isNetwork: boolean, bScriptHostPed: boolean): number;
    /**
     * Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.
     *
     * Hash: 0x9614299DCB53E54B | Since: 323
     */
    function deletePed(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF29A16337FACADB | Since: 323
     */
    function clone(ped: number | Ped, isNetwork: boolean, bScriptHostPed: boolean, copyHeadBlendFlag: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0x668FD40BCBA5DE48 | Since: 463
     */
    function cloneAlt(ped: number | Ped, isNetwork: boolean, bScriptHostPed: boolean, copyHeadBlendFlag: boolean): number;
    /**
     * Copies ped's components and props to targetPed.
     *
     * Hash: 0xE952D6431689AD9A | Since: 323
     */
    function cloneToTarget(ped: number | Ped, targetPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x148B08C2D2ACB884 | Since: 463
     */
    function cloneToTargetAlt(ped: number | Ped, targetPed: number | Ped): void;
    /**
     * Gets a value indicating whether the specified ped is in the specified vehicle.
     *
     * If 'atGetIn' is false, the function will not return true until the ped is sitting in the vehicle and is about to close the door. If it's true, the function returns true the moment the ped starts to get onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, the function will not return true until the ped has descended down into the submersible and gotten into the seat, while if it's true, it'll return true the moment the hatch has been opened and the ped is about to descend into the submersible.
     *
     * Hash: 0xA3EE4A07279BB9DB | Since: 323
     */
    function isInVehicle(ped: number | Ped, vehicle: number | Vehicle, atGetIn: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x796D90EFB19AA332 | Since: 323
     */
    function isInModel(ped: number | Ped, modelHash: number | string): boolean;
    /**
     * Gets a value indicating whether the specified ped is in any vehicle.
     *
     * If 'atGetIn' is false, the function will not return true until the ped is sitting in the vehicle and is about to close the door. If it's true, the function returns true the moment the ped starts to get onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, the function will not return true until the ped has descended down into the submersible and gotten into the seat, while if it's true, it'll return true the moment the hatch has been opened and the ped is about to descend into the submersible.
     *
     * Hash: 0x997ABD671D25CA0B | Since: 323
     */
    function isInAnyVehicle(ped: number | Ped, atGetIn: boolean): boolean;
    /**
     * xyz - relative to the world origin.
     *
     * Hash: 0x16EC4839969F9F5E | Since: 323
     */
    function isCopInArea3d(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    /**
     * Gets a value indicating whether this ped's health is below its injured threshold.
     *
     * The default threshold is 100.
     *
     * Hash: 0x84A2DD9AC37C35C1 | Since: 323
     */
    function isInjured(ped: number | Ped): boolean;
    /**
     * Returns whether the specified ped is hurt.
     *
     * Hash: 0x5983BB449D7FDB12 | Since: 323
     */
    function isHurt(ped: number | Ped): boolean;
    /**
     * Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.
     * If the handle is invalid, the function returns true.
     *
     * Hash: 0xD839450756ED5A80 | Since: 323
     */
    function isFatallyInjured(ped: number | Ped): boolean;
    /**
     * Seems to consistently return true if the ped is dead.
     *
     * p1 is always passed 1 in the scripts.
     *
     * I suggest to remove "OR_DYING" part, because it does not detect dying phase.
     *
     * That's what the devs call it, cry about it.
     *
     * lol
     *
     * Hash: 0x3317DEDB88C95038 | Since: 323
     */
    function isDeadOrDying(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE0A0AEC214B1FABA | Since: 323
     */
    function isConversationDead(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3998B1276A3300E5 | Since: 323
     */
    function isAimingFromCover(ped: number | Ped): boolean;
    /**
     * Returns whether the specified ped is reloading.
     *
     * Hash: 0x24B100C68C645951 | Since: 323
     */
    function isReloading(ped: number | Ped): boolean;
    /**
     * Returns true if the given ped has a valid pointer to CPlayerInfo in its CPed class. That's all.
     *
     * Hash: 0x12534C348C6CB68B | Since: 323
     */
    function isAPlayer(ped: number | Ped): boolean;
    /**
     * pedType: see CREATE_PED
     *
     * Full list of peds by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/peds.json
     *
     * Hash: 0x7DD959874C1FD534 | Since: 323
     */
    function createInsideVehicle(vehicle: number | Vehicle, pedType: number, modelHash: number | string, seat: number, isNetwork: boolean, bScriptHostPed: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0xAA5A7ECE2AA8FE70 | Since: 323
     */
    function setDesiredHeading(ped: number | Ped, heading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFF287323B0E2C69A | Since: 323
     */
    function forceAllHeadingValuesToAlign(ped: number | Ped): void;
    /**
     * angle is ped's view cone
     *
     * Hash: 0xD71649DB0A545AA3 | Since: 323
     */
    function isFacingPed(ped: number | Ped, otherPed: number | Ped, angle: number): boolean;
    /**
     * Notes: The function only returns true while the ped is:
     * A.) Swinging a random melee attack (including pistol-whipping)
     *
     * B.) Reacting to being hit by a melee attack (including pistol-whipping)
     *
     * C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter).
     *
     * You don't have to be holding the melee-targetting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds
     *
     * Hash: 0x4E209B2C1EAD5159 | Since: 323
     */
    function isInMeleeCombat(ped: number | Ped): boolean;
    /**
     * Returns true if the ped doesn't do any movement. If the ped is being pushed forwards by using APPLY_FORCE_TO_ENTITY for example, the function returns false.
     *
     * Hash: 0x530944F6F4B8A214 | Since: 323
     */
    function isStopped(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7E9DFE24AC1E58EF | Since: 323
     */
    function isShootingInArea(ped: number | Ped, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA0D3D71EA1086C55 | Since: 323
     */
    function isAnyShootingInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    /**
     * Returns whether the specified ped is shooting.
     *
     * Hash: 0x34616828CD07F1A1 | Since: 323
     */
    function isShooting(ped: number | Ped): boolean;
    /**
     * accuracy = 0-100, 100 being perfectly accurate
     *
     * Hash: 0x7AEFB85C1D49DEB6 | Since: 323
     */
    function setAccuracy(ped: number | Ped, accuracy: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x37F4AD56ECBC0CD6 | Since: 323
     */
    function getAccuracy(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x87DDEB611B329A9C | Since: 1103
     */
    function setAmbientLawAccuracyModifier(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC9D55B1A358A5BF7 | Since: 323
     */
    function isModel(ped: number | Ped, modelHash: number | string): boolean;
    /**
     * Forces the ped to fall back and kills it.
     *
     * It doesn't really explode the ped's head but it kills the ped
     *
     * Hash: 0x2D05CED3A38D0F3A | Since: 323
     */
    function explodeHead(ped: number | Ped, weaponHash: number | string): void;
    /**
     * Judging purely from a quick disassembly, if the ped is in a vehicle, the ped will be deleted immediately. If not, it'll be marked as no longer needed. - very elegant..
     *
     * Hash: 0xAC6D445B994DF95E | Since: 323
     */
    function removeElegantly(ped: number | Ped): void;
    /**
     * Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.
     *
     * Hash: 0x5BA652A0CD14DF2F | Since: 323
     */
    function addArmourTo(ped: number | Ped, amount: number): void;
    /**
     * Sets the armor of the specified ped.
     *
     * ped: The Ped to set the armor of.
     * amount: A value between 0 and 100 indicating the value to set the Ped's armor to.
     *
     * Hash: 0xCEA04D83135264CC | Since: 323
     */
    function setArmour(ped: number | Ped, amount: number): void;
    /**
     * Ped: The ped to warp.
     * vehicle: The vehicle to warp the ped into.
     * Seat_Index: [-1 is driver seat, -2 first free passenger seat]
     *
     * Moreinfo of Seat Index
     * DriverSeat = -1
     * Passenger = 0
     * Left Rear = 1
     * RightRear = 2
     *
     * Hash: 0xF75B0D629E1C063D | Since: 323
     */
    function setIntoVehicle(ped: number | Ped, vehicle: number | Vehicle, seatIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3C028C636A414ED9 | Since: 323
     */
    function setAllowVehiclesOverride(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3E8349C08E4B82E4 | Since: 323
     */
    function canCreateRandom(): boolean;
    /**
     * vb.net
     * Dim ped_handle As Integer
     * With Game.Player.Character
     * Dim pos As Vector3 = .Position + .ForwardVector * 3
     * ped_handle = Native.Function.Call(Of Integer)(Hash.CREATE_RANDOM_PED, pos.X, pos.Y, pos.Z)
     * End With
     *
     * Creates a Ped at the specified location, returns the Ped Handle.
     * Ped will not act until SET_PED_AS_NO_LONGER_NEEDED is called.
     *
     * Hash: 0xB4AC7D0CF06BFE8F | Since: 323
     */
    function createRandom(pos: Vector3): number;
    /**
     * No comment provided
     *
     * Hash: 0x9B62392B474F44A0 | Since: 323
     */
    function createRandomAsDriver(vehicle: number | Vehicle, returnHandle: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0xB8EB95E5B4E56978 | Since: 323
     */
    function canCreateRandomDriver(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEACEEDA81751915C | Since: 323
     */
    function canCreateRandomBikeRider(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9E8C908F41584ECD | Since: 323
     */
    function setMoveAnimsBlendOut(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xC1670E958EEE24E5 | Since: 323
     */
    function setCanBeDraggedOut(ped: number | Ped, toggle: boolean): void;
    /**
     * ntoggle was always false except in one instance (b678).
     *
     * The one time this is set to true seems to do with when you fail the mission.
     *
     * Hash: 0xF2BEBCDFAFDAA19E | Since: 323
     */
    function setAllowHurtCombatForAllMissionPeds(toggle: boolean): void;
    /**
     * Returns true/false if the ped is/isn't male.
     *
     * Hash: 0x6D9F5FAA7488BA46 | Since: 323
     */
    function isMale(ped: number | Ped): boolean;
    /**
     * Returns true/false if the ped is/isn't humanoid.
     *
     * Hash: 0xB980061DA992779D | Since: 323
     */
    function isHuman(ped: number | Ped): boolean;
    /**
     * Gets the vehicle the specified Ped is in. Returns 0 if the ped is/was not in a vehicle.
     *
     * Hash: 0x9A9112A0FE9A4713 | Since: 323
     */
    function getVehicleIsIn(ped: number | Ped, includeEntering: boolean): number;
    /**
     * Resets the value for the last vehicle driven by the Ped.
     *
     * Hash: 0xBB8DE8CF6A8DD8BB | Since: 323
     */
    function resetLastVehicle(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x95E3D6257B166CF2 | Since: 323
     */
    function setDensityMultiplierThisFrame(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7A556143A1C03898 | Since: 323
     */
    function setScenarioDensityMultiplierThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A7F62FDA59759BD | Since: 323
     */
    function suppressAmbientAggressiveCleanupThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5086C7843552CF85 | Since: 323
     */
    function setScriptedConversionCoordThisFrame(pos: Vector3): void;
    /**
     * The distance between these points, is the diagonal of a box (remember it's 3D).
     *
     * Hash: 0xEE01041D559983EA | Since: 323
     */
    function setNonCreationArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2E05208086BA0651 | Since: 323
     */
    function clearNonCreationArea(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4759CC730F947C81 | Since: 323
     */
    function instantlyFillPopulation(): void;
    /**
     * `Same function call as PED::GET_MOUNT, aka just returns 0`
     *
     * Hash: 0x460BC76A0E10655E | Since: 323
     */
    function isOnMount(ped: number | Ped): boolean;
    /**
     *
     * Function just returns 0
     * void __fastcall ped__get_mount(NativeContext *a1)
     * {
     * NativeContext *v1; // rbx@1
     *
     * v1 = a1;
     * GetAddressOfPedFromScriptHandle(a1->Args->Arg1);
     * v1->Returns->Item1= 0;
     * }
     *
     * Hash: 0xE7E11B8DCBED1058 | Since: 323
     */
    function getMount(ped: number | Ped): number;
    /**
     * Gets a value indicating whether the specified ped is on top of any vehicle.
     *
     * Return 1 when ped is on vehicle.
     * Return 0 when ped is not on a vehicle.
     *
     *
     * Hash: 0x67722AEB798E5FAB | Since: 323
     */
    function isOnVehicle(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEC5F66E459AF3BB2 | Since: 323
     */
    function isOnSpecificVehicle(ped: number | Ped, vehicle: number | Vehicle): boolean;
    /**
     * Maximum possible amount of money on MP is 2000. ~JX
     *
     * -----------------------------------------------------------------------------
     *
     * Maximum amount that a ped can theoretically have is 65535 (0xFFFF) since the amount is stored as an unsigned short (uint16_t) value.
     *
     * Hash: 0xA9C8960E8684C1B5 | Since: 323
     */
    function setMoney(ped: number | Ped, amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3F69145BBA87BAE7 | Since: 323
     */
    function getMoney(ped: number | Ped): number;
    /**
     * Related to Peds dropping pickup_health_snack; p0 is a value between [0.0, 1.0] that corresponds to drop rate
     *
     * Hash: 0xFF4803BC019852D9 | Since: 323
     */
    function setHealthSnacksCarriedByAllNews(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B0E6172C9A4D902 | Since: 323
     */
    function setAmbientsDropMoney(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC73EFFC5E043A8BA | Since: 3258
     */
    function setBlockAmbientsFromDroppingWeaponsThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9911F4A24485F653 | Since: 323
     */
    function setBlockingOfNonTemporaryEventsForAmbientsThisFrame(): void;
    /**
     * Ped no longer takes critical damage modifiers if set to FALSE.
     * Example: Headshotting a player no longer one shots them. Instead they will take the same damage as a torso shot.
     *
     * Hash: 0xEBD76F2359F190AC | Since: 323
     */
    function setSuffersCriticalHits(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xAFC976FD0580C7B3 | Since: 323
     */
    function setUpperBodyDamageOnly(ped: number | Ped, toggle: boolean): void;
    /**
     * Detect if ped is sitting in the specified vehicle
     * [True/False]
     *
     * Hash: 0xA808AA1D79230FC2 | Since: 323
     */
    function isSittingInVehicle(ped: number | Ped, vehicle: number | Vehicle): boolean;
    /**
     * Detect if ped is in any vehicle
     * [True/False]
     *
     * Hash: 0x826AA586EDB9FEF8 | Since: 323
     */
    function isSittingInAnyVehicle(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x01FEE67DB37F59B2 | Since: 323
     */
    function isOnFoot(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x94495889E22C6479 | Since: 323
     */
    function isOnAnyBike(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC70B5FAE151982D8 | Since: 323
     */
    function isPlantingBomb(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCD5003B097200F36 | Since: 323
     */
    function getDeadPickupCoords(ped: number | Ped): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x2E0E1C2B4F6CB339 | Since: 323
     */
    function isInAnyBoat(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFBFC01CCFB35D99E | Since: 323
     */
    function isInAnySub(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x298B91AE825E5705 | Since: 323
     */
    function isInAnyHeli(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5FFF4CFC74D8FB80 | Since: 323
     */
    function isInAnyPlane(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9134873537FA419C | Since: 323
     */
    function isInFlyingVehicle(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x56CEF0AC79073BDE | Since: 323
     */
    function setDiesInWater(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x65671A4FB8218930 | Since: 2699
     */
    function getDiesInWater(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD718A22995E2B4BC | Since: 323
     */
    function setDiesInSinkingVehicle(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9483AF821605B1D8 | Since: 323
     */
    function getArmour(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xEDF4079F9D54C9A1 | Since: 323
     */
    function setStayInVehicleWhenJacked(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC7EF1BA83230BA07 | Since: 323
     */
    function setCanBeShotInVehicle(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD75960F6BD9EA49C | Since: 323
     */
    function getLastDamageBone(ped: number | Ped): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x8EF6B7AC68E2F01B | Since: 323
     */
    function clearLastDamageBone(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x1B1E2A40A65B8521 | Since: 323
     */
    function setAiWeaponDamageModifier(value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEA16670E7BA4743C | Since: 323
     */
    function resetAiWeaponDamageModifier(): void;
    /**
     * No comment provided
     *
     * Hash: 0x66460DEDDD417254 | Since: 323
     */
    function setAiMeleeWeaponDamageModifier(modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x46E56A7CD1D63C3F | Since: 323
     */
    function resetAiMeleeWeaponDamageModifier(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F3C3D9F50681DE4 | Since: 323
     */
    function setTreatAsAmbientForDriverLockon(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x63F58F7C80513AAD | Since: 323
     */
    function setCanBeTargetted(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF1CA77833E58F2C | Since: 323
     */
    function setCanBeTargettedByTeam(ped: number | Ped, team: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x66B57B72E0836A76 | Since: 323
     */
    function setCanBeTargettedByPlayer(ped: number | Ped, player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x061CB768363D6424 | Since: 323
     */
    function setAllowLockonToIfFriendly(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xFD325494792302D7 | Since: 323
     */
    function setUseCameraHeadingForDesiredDirectionLockOnTest(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0BD04E29640C9C12 | Since: 323
     */
    function isInAnyPoliceVehicle(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x16E42E800B472221 | Since: 323
     */
    function forceToOpenParachute(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x7DCE8BDA0F1C1200 | Since: 323
     */
    function isInParachuteFreeFall(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFB92A102F1C4DFA3 | Since: 323
     */
    function isFalling(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCEDABC5900A0BF97 | Since: 323
     */
    function isJumping(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x412F1364FA066CFB | Since: 573
     */
    function isLanding(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x451D05012CCEC234 | Since: 573
     */
    function isDoingABeastJump(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x53E8CB4F48BFE623 | Since: 323
     */
    function isClimbing(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x117C70D1F5730B5E | Since: 323
     */
    function isVaulting(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5527B8246FEF9B11 | Since: 323
     */
    function isDiving(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x433DDFFE2044B636 | Since: 323
     */
    function isJumpingOutOfVehicle(ped: number | Ped): boolean;
    /**
     * Returns true if the ped is currently opening a door (CTaskOpenDoor).
     *
     * Hash: 0x26AF0E8E30BD2A2C | Since: 323
     */
    function isOpeningDoor(ped: number | Ped): boolean;
    /**
     * Returns:
     *
     * -1: Normal
     * 0: Wearing parachute on back
     * 1: Parachute opening
     * 2: Parachute open
     * 3: Falling to doom (e.g. after exiting parachute)
     *
     * Normal means no parachute?
     *
     * Hash: 0x79CFD9827CC979B6 | Since: 323
     */
    function getParachuteState(ped: number | Ped): number;
    /**
     * -1: no landing
     * 0: landing on both feet
     * 1: stumbling
     * 2: rolling
     * 3: ragdoll
     *
     * Hash: 0x8B9F1FC6AE8166C0 | Since: 323
     */
    function getParachuteLandingType(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x333FC8DB079B7186 | Since: 323
     */
    function setParachuteTintIndex(ped: number | Ped, tintIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEAF5F7E5AE7C6C9D | Since: 323
     */
    function getParachuteTintIndex(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xE88DA0751C22A2AD | Since: 323
     */
    function setReserveParachuteTintIndex(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8C4F3BF23B6237DB | Since: 323
     */
    function createParachuteBagObject(ped: number | Ped): number;
    /**
     * This is the SET_CHAR_DUCKING from GTA IV, that makes Peds duck. This function does nothing in GTA V. It cannot set the ped as ducking in vehicles, and IS_PED_DUCKING will always return false.
     *
     * Hash: 0x030983CA930B692D | Since: 323
     */
    function setDucking(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD125AE748725C6BC | Since: 323
     */
    function isDucking(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6E575D6A898AB852 | Since: 323
     */
    function isInAnyTaxi(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF107E836A70DCE05 | Since: 323
     */
    function setIdRange(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x52D59AB61DDC05DD | Since: 323
     */
    function setHighlyPerceptive(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F074C904D85129E | Since: 393
     */
    function setCopPerceptionOverrides(seeingRange: number, seeingRangePeripheral: number, hearingRange: number, visualFieldMinAzimuthAngle: number, visualFieldMaxAzimuthAngle: number, fieldOfGazeMaxAngle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEC4B4B3B9908052A | Since: 323
     */
    function setInjuredOnGroundBehaviour(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x733C87D4CE22BEA2 | Since: 323
     */
    function disableInjuredOnGroundBehaviour(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xF29CF591C4BF6CEE | Since: 323
     */
    function setSeeingRange(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x33A8F7F7D5F7F33C | Since: 323
     */
    function setHearingRange(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2DB492222FB21E26 | Since: 323
     */
    function setVisualFieldMinAngle(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x70793BDCA1E854D4 | Since: 323
     */
    function setVisualFieldMaxAngle(ped: number | Ped, value: number): void;
    /**
     * This native refers to the field of vision the ped has below them, starting at 0 degrees. The angle value should be negative.
     * -90f should let the ped see 90 degrees below them, for example.
     *
     * Hash: 0x7A276EB2C224D70F | Since: 323
     */
    function setVisualFieldMinElevationAngle(ped: number | Ped, angle: number): void;
    /**
     * This native refers to the field of vision the ped has above them, starting at 0 degrees. 90f would let the ped see enemies directly above of them.
     *
     * Hash: 0x78D0B67629D75856 | Since: 323
     */
    function setVisualFieldMaxElevationAngle(ped: number | Ped, angle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9C74B0BC831B753A | Since: 323
     */
    function setVisualFieldPeripheralRange(ped: number | Ped, range: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3B6405E8AB34A907 | Since: 323
     */
    function setVisualFieldCenterAngle(ped: number | Ped, angle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF2C71A32CAD5FBD | Since: 1493
     */
    function getVisualFieldCenterAngle(ped: number | Ped): number;
    /**
     * p1 is usually 0 in the scripts. action is either 0 or a pointer to "DEFAULT_ACTION".
     *
     * Hash: 0x88CBB5CEB96B7BD2 | Since: 323
     */
    function setStealthMovement(ped: number | Ped, action: string): void;
    /**
     * Returns whether the entity is in stealth mode
     *
     * Hash: 0x7C2AC9CA66575FBF | Since: 323
     */
    function getStealthMovement(ped: number | Ped): boolean;
    /**
     * Creates a new ped group.
     * Groups can contain up to 8 peds.
     *
     * The parameter is unused.
     *
     * Returns a handle to the created group, or 0 if a group couldn't be created.
     *
     * Hash: 0x90370EBE0FEE1A3D | Since: 323
     */
    function createGroup(unused: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x2A7819605465FBCE | Since: 323
     */
    function setAsGroupLeader(ped: number | Ped, groupId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9F3480FE65DB31B5 | Since: 323
     */
    function setAsGroupMember(ped: number | Ped, groupId: number): void;
    /**
     * This only will teleport the ped to the group leader if the group leader teleports (sets coords).
     *
     * Only works in singleplayer
     *
     * Hash: 0x2E2F4240B3F24647 | Since: 323
     */
    function setCanTeleportToGroupLeader(pedHandle: number | Ped, groupHandle: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8EB2F69076AF7053 | Since: 323
     */
    function removeGroup(groupId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xED74007FFB146BC2 | Since: 323
     */
    function removeFromGroup(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x9BB01E3834671191 | Since: 323
     */
    function isGroupMember(ped: number | Ped, groupId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1C86D8AEF8254B78 | Since: 323
     */
    function isHangingOnToVehicle(ped: number | Ped): boolean;
    /**
     * Sets the range at which members will automatically leave the group.
     *
     * Hash: 0x4102C7858CFEE4E4 | Since: 323
     */
    function setGroupSeparationRange(groupHandle: number, separationRange: number): void;
    /**
     * Ped will stay on the ground after being stunned for at lest ms time. (in milliseconds)
     *
     * Hash: 0xFA0675AB151073FA | Since: 323
     */
    function setMinGroundTimeForStungun(ped: number | Ped, ms: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD6A86331A537A7B9 | Since: 323
     */
    function isProne(ped: number | Ped): boolean;
    /**
     * Checks to see if ped and target are in combat with eachother. Only goes one-way: if target is engaged in combat with ped but ped has not yet reacted, the function will return false until ped starts fighting back.
     *
     * `p1 is usually 0 in the scripts because it gets the ped id during the task sequence. For instance: PED::IS_PED_IN_COMBAT(l_42E[4\/\*14\*\/], PLAYER::PLAYER_PED_ID()) // armenian2.ct4: 43794`
     *
     * Hash: 0x4859F1FC66A6278E | Since: 323
     */
    function isInCombat(ped: number | Ped, target: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x32C27A11307B01CC | Since: 2372
     */
    function getTargetFromCombatPed(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xEAD42DE3610D0721 | Since: 323
     */
    function canInCombatSeeTarget(ped: number | Ped, target: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB2C086CC1BF8F2BF | Since: 323
     */
    function isDoingDriveby(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4AE4FF911DFB61DA | Since: 323
     */
    function isJacking(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9A497FE2DF198913 | Since: 323
     */
    function isBeingJacked(ped: number | Ped): boolean;
    /**
     * p1 is always 0
     *
     * Hash: 0x4FBACCE3B4138EE8 | Since: 323
     */
    function isBeingStunned(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9B128DC36C1E04CF | Since: 323
     */
    function getsJacker(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x5486A79D9FBD342D | Since: 323
     */
    function getJackTarget(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xBBCCE00B381F8482 | Since: 323
     */
    function isFleeing(ped: number | Ped): boolean;
    /**
     * p1 is nearly always 0 in the scripts.
     *
     * Hash: 0x60DFD0691A170B88 | Since: 323
     */
    function isInCover(ped: number | Ped, exceptUseWeapon: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x845333B3150583AB | Since: 323
     */
    function isInCoverFacingLeft(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6A03BF943D767C93 | Since: 323
     */
    function isInHighCover(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9F65DBC537E59AD5 | Since: 323
     */
    function isGoingIntoCover(ped: number | Ped): boolean;
    /**
     * i could be time. Only example in the decompiled scripts uses it as -1.
     *
     * Hash: 0xAAD6D1ACF08F4612 | Since: 323
     */
    function setPinnedDown(ped: number | Ped, pinned: boolean, i: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA32ABFEB2A03B306 | Since: 3095
     */
    function hasClearLosToEntity(ped: number | Ped, entity: number | Entity, pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6F4C85ACD641BCD2 | Since: 323
     */
    function getSeatIsTryingToEnter(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x814FA8BE5449445D | Since: 323
     */
    function getVehicleIsTryingToEnter(ped: number | Ped): number;
    /**
     * Returns the Entity (Ped, Vehicle, or ?Object?) that killed the 'ped'
     *
     * Is best to check if the Ped is dead before asking for its killer.
     *
     * Hash: 0x93C8B64DEB84728C | Since: 323
     */
    function getSourceOfDeath(ped: number | Ped): number;
    /**
     * Returns the hash of the weapon/model/object that killed the ped.
     *
     * Hash: 0x16FFE42AB2D2DC59 | Since: 323
     */
    function getCauseOfDeath(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x1E98817B311AE98A | Since: 323
     */
    function getTimeOfDeath(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x5407B7288D0478B7 | Since: 323
     */
    function countsInCombatWithTarget(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x336B3D200AB007CB | Since: 323
     */
    function countsInCombatWithTargetWithinRadius(ped: number | Ped, pos: Vector3, radius: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xADB3F206518799E8 | Since: 323
     */
    function setRelationshipGroupDefaultHash(ped: number | Ped, hash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC80A74AC829DDD92 | Since: 323
     */
    function setRelationshipGroupHash(ped: number | Ped, hash: number | string): void;
    /**
     * Sets the relationship between two groups. This should be called twice (once for each group).
     *
     * Relationship types:
     * 0 = Companion
     * 1 = Respect
     * 2 = Like
     * 3 = Neutral
     * 4 = Dislike
     * 5 = Hate
     * 255 = Pedestrians
     *
     * Example:
     * `PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);`
     * `PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);`
     *
     * Hash: 0xBF25EB89375A37AD | Since: 323
     */
    function setRelationshipBetweenGroups(relationship: number, group1: number | string, group2: number | string): void;
    /**
     * Clears the relationship between two groups. This should be called twice (once for each group).
     *
     * Relationship types:
     * 0 = Companion
     * 1 = Respect
     * 2 = Like
     * 3 = Neutral
     * 4 = Dislike
     * 5 = Hate
     * 255 = Pedestrians
     * (Credits: Inco)
     *
     * Example:
     * `PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);`
     * `PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);`
     *
     * Hash: 0x5E29243FB56FC6D4 | Since: 323
     */
    function clearRelationshipBetweenGroups(relationship: number, group1: number | string, group2: number | string): void;
    /**
     * Can't select void. This function returns nothing. The hash of the created relationship group is output in the second parameter.
     *
     * Hash: 0xF372BC22FCB88606 | Since: 323
     */
    function addRelationshipGroup(name: string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xB6BA2444AB393DA2 | Since: 323
     */
    function removeRelationshipGroup(groupHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xCC6E3B6BB69501F1 | Since: 505
     */
    function doesRelationshipGroupExist(groupHash: number | string): boolean;
    /**
     * Gets the relationship between two peds. This should be called twice (once for each ped).
     *
     * Relationship types:
     * 0 = Companion
     * 1 = Respect
     * 2 = Like
     * 3 = Neutral
     * 4 = Dislike
     * 5 = Hate
     * 255 = Pedestrians
     * (Credits: Inco)
     *
     * Example:
     * `PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, l_1017, 0xA49E591C);`
     * `PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, 0xA49E591C, l_1017);`
     *
     * Hash: 0xEBA5AD3A0EAF7121 | Since: 323
     */
    function getRelationshipBetweens(ped1: number | Ped, ped2: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x42FDD0F017B1E38E | Since: 323
     */
    function getRelationshipGroupDefaultHash(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x7DBDD04862D95F04 | Since: 323
     */
    function getRelationshipGroupHash(ped: number | Ped): number;
    /**
     * Gets the relationship between two groups. This should be called twice (once for each group).
     *
     * Relationship types:
     * 0 = Companion
     * 1 = Respect
     * 2 = Like
     * 3 = Neutral
     * 4 = Dislike
     * 5 = Hate
     * 255 = Pedestrians
     *
     * Example:
     * `PED::GET_RELATIONSHIP_BETWEEN_GROUPS(l_1017, 0xA49E591C);`
     * `PED::GET_RELATIONSHIP_BETWEEN_GROUPS(0xA49E591C, l_1017);`
     *
     * Hash: 0x9E6B70061662AE5C | Since: 323
     */
    function getRelationshipBetweenGroups(group1: number | string, group2: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x5615E0C5EB2BC6E2 | Since: 877
     */
    function setRelationshipGroupAffectsWantedLevel(group: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xAD27D957598E49E9 | Since: 1290
     */
    function tellGroupsInAreaToAttack(ped: number | Ped, hash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x4328652AE5769C71 | Since: 323
     */
    function setCanBeTargetedWithoutLos(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x112942C6E708F70B | Since: 323
     */
    function setToInformRespectedFriends(ped: number | Ped, radius: number, maxFriends: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x625B774D75C87068 | Since: 323
     */
    function isRespondingToEvent(ped: number | Ped, event: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBA656A3BB01BDEA3 | Since: 2189
     */
    function getPosFromFiredEvent(ped: number | Ped, eventType: number): [boolean, any];
    /**
     * FIRING_PATTERN_BURST_FIRE = 0xD6FF6D61 ( 1073727030 )
     * FIRING_PATTERN_BURST_FIRE_IN_COVER = 0x026321F1 ( 40051185 )
     * FIRING_PATTERN_BURST_FIRE_DRIVEBY = 0xD31265F2 ( -753768974 )
     * FIRING_PATTERN_FROM_GROUND = 0x2264E5D6 ( 577037782 )
     * FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 0x7A845691 ( 2055493265 )
     * FIRING_PATTERN_FULL_AUTO = 0xC6EE6B4C ( -957453492 )
     * FIRING_PATTERN_SINGLE_SHOT = 0x5D60E4E0 ( 1566631136 )
     * FIRING_PATTERN_BURST_FIRE_PISTOL = 0xA018DB8A ( -1608983670 )
     * FIRING_PATTERN_BURST_FIRE_SMG = 0xD10DADEE ( 1863348768 )
     * FIRING_PATTERN_BURST_FIRE_RIFLE = 0x9C74B406 ( -1670073338 )
     * FIRING_PATTERN_BURST_FIRE_MG = 0xB573C5B4 ( -1250703948 )
     * FIRING_PATTERN_BURST_FIRE_PUMPSHOTGUN = 0x00BAC39B ( 12239771 )
     * FIRING_PATTERN_BURST_FIRE_HELI = 0x914E786F ( -1857128337 )
     * FIRING_PATTERN_BURST_FIRE_MICRO = 0x42EF03FD ( 1122960381 )
     * FIRING_PATTERN_SHORT_BURSTS = 0x1A92D7DF ( 445831135 )
     * FIRING_PATTERN_SLOW_FIRE_TANK = 0xE2CA3A71 ( -490063247 )
     *
     * Firing pattern info: https://pastebin.com/Px036isB
     *
     * Hash: 0x9AC577F5A12AD8A9 | Since: 323
     */
    function setFiringPattern(ped: number | Ped, patternHash: number | string): void;
    /**
     * shootRate 0-1000
     *
     * Hash: 0x614DA022990752DC | Since: 323
     */
    function setShootRate(ped: number | Ped, shootRate: number): void;
    /**
     * combatType can be between 0-14. See GET_COMBAT_FLOAT below for a list of possible parameters.
     *
     * Hash: 0xFF41B4B141ED981C | Since: 323
     */
    function setCombatFloat(ped: number | Ped, combatType: number): void;
    /**
     * p0: Ped Handle
     * p1: int i | 0 <= i <= 27
     *
     * p1 probably refers to the attributes configured in combatbehavior.meta. There are 13. Example:
     *
     * <BlindFireChance value="0.1"/>
     * <WeaponShootRateModifier value="1.0"/>
     * <TimeBetweenBurstsInCover value="1.25"/>
     * <BurstDurationInCover value="2.0"/>
     * <TimeBetweenPeeks value="10.0"/>
     * <WeaponAccuracy value="0.18"/>
     * <FightProficiency value="0.8"/>
     * <StrafeWhenMovingChance value="1.0"/>
     * <WalkWhenStrafingChance value="0.0"/>
     * <AttackWindowDistanceForCover value="55.0"/>
     * <TimeToInvalidateInjuredTarget value="9.0"/>
     * <TriggerChargeTime_Near value="4.0"/>
     * <TriggerChargeTime_Far value="10.0"/>
     *
     * -------------Confirmed by editing combatbehavior.meta:
     * p1:
     * 0=BlindFireChance
     * 1=BurstDurationInCover
     * 3=TimeBetweenBurstsInCover
     * 4=TimeBetweenPeeks
     * 5=StrafeWhenMovingChance
     * 8=WalkWhenStrafingChance
     * 11=AttackWindowDistanceForCover
     * 12=TimeToInvalidateInjuredTarget
     * 16=OptimalCoverDistance
     *
     *
     * Hash: 0x52DFF8A10508090A | Since: 323
     */
    function getCombatFloat(ped: number | Ped): number;
    /**
     * p1 may be a BOOL representing whether or not the group even exists
     *
     * Hash: 0x8DE69FE35CA09A45 | Since: 323
     */
    function getGroupSize(groupID: number): [any, number];
    /**
     * No comment provided
     *
     * Hash: 0x7C6B0C22F9F40BBE | Since: 323
     */
    function doesGroupExist(groupId: number): boolean;
    /**
     * Returns the group id of which the specified ped is a member of.
     *
     * Hash: 0xF162E133B4E7A675 | Since: 323
     */
    function getGroupIndex(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x5891CAC5D4ACFF74 | Since: 323
     */
    function isInGroup(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6A3975DEA89F9A17 | Since: 323
     */
    function getPlayerIsFollowing(ped: number | Ped): number | string;
    /**
     * 0: Default
     * 1: Circle Around Leader
     * 2: Alternative Circle Around Leader
     * 3: Line, with Leader at center
     *
     * Hash: 0xCE2F5FC3AF7E8C1E | Since: 323
     */
    function setGroupFormation(groupId: number, formationType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1D9D45004C28C916 | Since: 323
     */
    function setGroupFormationSpacing(groupId: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x63DAB4CCB3273205 | Since: 323
     */
    function resetGroupFormationDefaultSpacing(groupHandle: number): void;
    /**
     * Gets ID of vehicle player using. It means it can get ID at any interaction with vehicle. Enter\exit for example. And that means it is faster than GET_VEHICLE_PED_IS_IN but less safe.
     *
     * Hash: 0x6094AD011A2EA87D | Since: 323
     */
    function getVehicleIsUsing(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xF92691AED837A5FC | Since: 323
     */
    function getVehicleIsEntering(ped: number | Ped): number;
    /**
     * enable or disable the gravity of a ped
     *
     * Examples:
     * `PED::SET_PED_GRAVITY(PLAYER::PLAYER_PED_ID(), 0x00000001);`
     * `PED::SET_PED_GRAVITY(Local_289[iVar0 \/\*20\*\/], 0x00000001);`
     *
     * Hash: 0x9FF447B6B6AD960A | Since: 323
     */
    function setGravity(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x100CD221F572F6E1 | Since: 3407
     */
    function setSurvivesBeingOutOfWater(ped: number | Ped, toggle: boolean): boolean;
    /**
     * damages a ped with the given amount
     *
     * Hash: 0x697157CED63F18D4 | Since: 323
     */
    function applyDamageTo(ped: number | Ped, damageAmount: number, weaponType: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x36B77BB84687C318 | Since: 323
     */
    function getTimeDamagedByWeapon(ped: number | Ped, weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xDA1F1B7BE1A8766F | Since: 323
     */
    function setAllowedToDuck(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3DBFC55D5C9BB447 | Since: 323
     */
    function setNeverLeavesGroup(ped: number | Ped, toggle: boolean): void;
    /**
     * https://alloc8or.re/gta5/doc/enums/ePedType.txt
     *
     * Hash: 0xFF059E1E4C01E63C | Since: 323
     */
    function getType(ped: number | Ped): number;
    /**
     * Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. SWAT and Army will still shoot at you. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.
     *
     * Hash: 0xBB03C38DD3FB7FFD | Since: 323
     */
    function setAsCop(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB3352E018D6F89DF | Since: 2699
     */
    function setHealthPendingLastDamageEventOverrideFlag(toggle: boolean): void;
    /**
     * Sets the maximum health of a ped.
     *
     * Hash: 0xF5F6378C4F3419D3 | Since: 323
     */
    function setMaxHealth(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4700A416E8324EF3 | Since: 323
     */
    function getMaxHealth(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x43C851690662113D | Since: 323
     */
    function setMaxTimeInWater(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6BA428C528D9E522 | Since: 323
     */
    function setMaxTimeUnderwater(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2735233A786B1BEF | Since: 323
     */
    function setCorpseRagdollFriction(ped: number | Ped): void;
    /**
     * seatIndex must be <= 2
     *
     * Hash: 0x952F06BEECD775CC | Since: 323
     */
    function setVehicleForcedSeatUsage(ped: number | Ped, vehicle: number | Vehicle, seatIndex: number, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE6CA85E7259CE16B | Since: 323
     */
    function clearAllVehicleForcedSeatUsage(ped: number | Ped): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0xB282749D5E028163 | Since: 877
     */
    function setCanBeKnockedOffBike(): void;
    /**
     * state: https://alloc8or.re/gta5/doc/enums/eKnockOffVehicle.txt
     *
     * Hash: 0x7A6535691B477C48 | Since: 323
     */
    function setCanBeKnockedOffVehicle(ped: number | Ped, state: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x51AC07A44D4F5B8A | Since: 323
     */
    function canKnockOffVehicle(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x45BBCBA77C29A841 | Since: 323
     */
    function knockOffVehicle(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x87052FE446E07247 | Since: 323
     */
    function setCoordsNoGang(ped: number | Ped, pos: Vector3): void;
    /**
     * from fm_mission_controller.c4 (variable names changed for clarity):
     *
     * `int groupID = PLAYER::GET_PLAYER_GROUP(PLAYER::PLAYER_ID());`
     * `PED::GET_GROUP_SIZE(group, &unused, &groupSize);`
     * if (groupSize >= 1) {
     * . . . . for (int memberNumber = 0; memberNumber < groupSize; memberNumber++) {
     * `. . . . . . . . Ped ped1 = PED::GET_PED_AS_GROUP_MEMBER(groupID, memberNumber);`
     * . . . . . . . . //and so on
     *
     * Hash: 0x51455483CF23ED97 | Since: 323
     */
    function getAsGroupMember(groupID: number, memberNumber: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x5CCE68DBD5FE93EC | Since: 323
     */
    function getAsGroupLeader(groupID: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x971D38760FBC02EF | Since: 323
     */
    function setKeepTask(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x49E50BDB8BA4DAB2 | Since: 323
     */
    function setAllowMinorReactionsAsMissionPed(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9DE327631295B4C2 | Since: 323
     */
    function isSwimming(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC024869A53992F34 | Since: 323
     */
    function isSwimmingUnderWater(ped: number | Ped): boolean;
    /**
     * teleports ped to coords along with the vehicle ped is in
     *
     * Hash: 0x9AFEFF481A85AB2E | Since: 323
     */
    function setCoordsKeepVehicle(ped: number | Ped, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x2A30922C90C9B42C | Since: 323
     */
    function setDiesInVehicle(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x102E68B2024D536D | Since: 323
     */
    function setCreateRandomCops(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8A4986851C4EF6E7 | Since: 323
     */
    function setCreateRandomCopsNotOnScenarios(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x444CB7D7DBE6973D | Since: 323
     */
    function setCreateRandomCopsOnScenarios(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x5EE2CAFF7F17770D | Since: 323
     */
    function canCreateRandomCops(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x02A0C9720B854BFA | Since: 323
     */
    function setAsEnemy(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1CCE141467FF42A2 | Since: 323
     */
    function setCanSmashGlass(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x6F972C1AB75A1ED0 | Since: 323
     */
    function isInAnyTrain(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBB062B2B5722478E | Since: 323
     */
    function isGettingIntoAVehicle(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x44D28D5DDFE5F68C | Since: 323
     */
    function isTryingToEnterALockedVehicle(ped: number | Ped): boolean;
    /**
     * ped can not pull out a weapon when true
     *
     * Hash: 0xDF1AF8B5D56542FA | Since: 323
     */
    function setEnableHandcuffs(ped: number | Ped, toggle: boolean): void;
    /**
     * Used with SET_ENABLE_HANDCUFFS in decompiled scripts. From my observations, I have noticed that while being ragdolled you are not able to get up but you can still run. Your legs can also bend.
     *
     * Hash: 0xC52E0F855C58FC2E | Since: 323
     */
    function setEnableBoundAnkles(ped: number | Ped, toggle: boolean): void;
    /**
     * Enables diving motion when underwater.
     *
     * Hash: 0xF99F62004024D506 | Since: 323
     */
    function setEnableScuba(ped: number | Ped, toggle: boolean): void;
    /**
     * Setting ped to true allows the ped to shoot "friendlies".
     *
     * p2 set to true when toggle is also true seams to make peds permanently unable to aim at, even if you set p2 back to false.
     *
     * p1 = false & p2 = false for unable to aim at.
     * p1 = true & p2 = false for able to aim at.
     *
     * Hash: 0xB3B1CB349FF9C75D | Since: 323
     */
    function setCanAttackFriendly(ped: number | Ped, toggle: boolean): void;
    /**
     * Returns the ped's alertness (0-3).
     *
     * Values :
     *
     * 0 : Neutral
     * 1 : Heard something (gun shot, hit, etc)
     * 2 : Knows (the origin of the event)
     * 3 : Fully alerted (is facing the event?)
     *
     * If the Ped does not exist, returns -1.
     *
     * Hash: 0xF6AA118530443FD2 | Since: 323
     */
    function getAlertness(ped: number | Ped): number;
    /**
     * value ranges from 0 to 3.
     *
     * Hash: 0xDBA71115ED9941A6 | Since: 323
     */
    function setAlertness(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC0ED94165A48BC2 | Since: 323
     */
    function setGetOutUpsideDownVehicle(ped: number | Ped, toggle: boolean): void;
    /**
     * transitionSpeed is the time in seconds it takes to transition from one movement clipset to another.	ransitionSpeed is usually 1.0f
     *
     * List of movement clipsets:
     * Thanks to elsewhat for list.
     *
     * "ANIM_GROUP_MOVE_BALLISTIC"
     * "ANIM_GROUP_MOVE_LEMAR_ALLEY"
     * "clipset@move@trash_fast_turn"
     * "FEMALE_FAST_RUNNER"
     * "missfbi4prepp1_garbageman"
     * "move_characters@franklin@fire"
     * "move_characters@Jimmy@slow@"
     * "move_characters@michael@fire"
     * "move_f@flee@a"
     * "move_f@scared"
     * "move_f@sexy@a"
     * "move_heist_lester"
     * "move_injured_generic"
     * "move_lester_CaneUp"
     * "move_m@bag"
     * "MOVE_M@BAIL_BOND_NOT_TAZERED"
     * "MOVE_M@BAIL_BOND_TAZERED"
     * "move_m@brave"
     * "move_m@casual@d"
     * "move_m@drunk@moderatedrunk"
     * "MOVE_M@DRUNK@MODERATEDRUNK"
     * "MOVE_M@DRUNK@MODERATEDRUNK_HEAD_UP"
     * "MOVE_M@DRUNK@SLIGHTLYDRUNK"
     * "MOVE_M@DRUNK@VERYDRUNK"
     * "move_m@fire"
     * "move_m@gangster@var_e"
     * "move_m@gangster@var_f"
     * "move_m@gangster@var_i"
     * "move_m@JOG@"
     * "MOVE_M@PRISON_GAURD"
     * "MOVE_P_M_ONE"
     * "MOVE_P_M_ONE_BRIEFCASE"
     * "move_p_m_zero_janitor"
     * "move_p_m_zero_slow"
     * "move_ped_bucket"
     * "move_ped_crouched"
     * "move_ped_mop"
     * "MOVE_M@FEMME@"
     * "MOVE_F@FEMME@"
     * "MOVE_M@GANGSTER@NG"
     * "MOVE_F@GANGSTER@NG"
     * "MOVE_M@POSH@"
     * "MOVE_F@POSH@"
     * "MOVE_M@TOUGH_GUY@"
     * "MOVE_F@TOUGH_GUY@"
     *
     * ~ NotCrunchyTaco
     *
     * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
     *
     * Hash: 0xAF8A94EDE7712BEF | Since: 323
     */
    function setMovementClipset(ped: number | Ped, clipSet: string, transitionSpeed: number): void;
    /**
     * If p1 is 0.0, I believe you are back to normal.
     * If p1 is 1.0, it looks like you can only rotate the ped, not walk.
     *
     * Using the following code to reset back to normal
     * `PED::RESET_PED_MOVEMENT_CLIPSET(PLAYER::PLAYER_PED_ID(), 0.0);`
     *
     * Hash: 0xAA74EC0CB0AAEA2C | Since: 323
     */
    function resetMovementClipset(ped: number | Ped): void;
    /**
     * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
     *
     * Hash: 0x29A28F3F8CF6D854 | Since: 323
     */
    function setStrafeClipset(ped: number | Ped, clipSet: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x20510814175EA477 | Since: 323
     */
    function resetStrafeClipset(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x2622E35B77D3ACA2 | Since: 323
     */
    function setWeaponMovementClipset(ped: number | Ped, clipSet: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x97B0DB5B4AA74E77 | Since: 323
     */
    function resetWeaponMovementClipset(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xED34AB6C5CB36520 | Since: 323
     */
    function setDriveByClipsetOverride(ped: number | Ped, clipset: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x4AFE3690D7E0B5AC | Since: 323
     */
    function clearDriveByClipsetOverride(ped: number | Ped): void;
    /**
     * Found in the b617d scripts:
     * `PED::SET_PED_MOTION_IN_COVER_CLIPSET_OVERRIDE(v_7, "trevor_heist_cover_2h");`
     *
     * Hash: 0x9DBA107B4937F809 | Since: 323
     */
    function setMotionInCoverClipsetOverride(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xC79196DCB36F6121 | Since: 323
     */
    function clearMotionInCoverClipsetOverride(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x80054D7FCC70EEC6 | Since: 323
     */
    function clearFallUpperBodyClipsetOverride(ped: number | Ped): void;
    /**
     * `PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_PASSENGER"));`
     * `PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_RESTRICTED_PASSENGER"));`
     * `PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT"));`
     * `PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT_REAR"));`
     * `PED::SET_PED_IN_VEHICLE_CONTEXT(l_95, MISC::GET_HASH_KEY("MISS_FAMILY2_JIMMY_BICYCLE"));`
     * `PED::SET_PED_IN_VEHICLE_CONTEXT(num3, MISC::GET_HASH_KEY("MISSFBI2_MICHAEL_DRIVEBY"));`
     * `PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISS_ARMENIAN3_FRANKLIN_TENSE"));`
     * `PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISSFBI5_TREVOR_DRIVING"));`
     *
     * Hash: 0x530071295899A8C6 | Since: 323
     */
    function setInVehicleContext(ped: number | Ped, context: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x22EF8FF8778030EB | Since: 323
     */
    function resetInVehicleContext(ped: number | Ped): void;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x6EC47A344923E1ED | Since: 323
     */
    function isScriptedScenarioUsingConditionalAnim(ped: number | Ped, animDict: string, anim: string): boolean;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
     *
     * Hash: 0x6C60394CB4F75E9A | Since: 323
     */
    function setAlternateWalkAnim(ped: number | Ped, animDict: string, animName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x8844BBFCE30AA9E9 | Since: 323
     */
    function clearAlternateWalkAnim(ped: number | Ped): void;
    /**
     * stance:
     * 0 = idle
     * 1 = walk
     * 2 = running
     *
     * p5 = usually set to true
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
     *
     * Hash: 0x90A43CC281FFAB46 | Since: 323
     */
    function setAlternateMovementAnim(ped: number | Ped, stance: number, animDictionary: string, animationName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD8D19675ED5FBDCE | Since: 323
     */
    function clearAlternateMovementAnim(ped: number | Ped, stance: number): void;
    /**
     * From the scripts:
     * `PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),`
     * "ANIM_GROUP_GESTURE_MISS_FRA0");
     * `PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),`
     * "ANIM_GROUP_GESTURE_MISS_DocksSetup1");
     *
     * Hash: 0xDDF803377F94AAA8 | Since: 323
     */
    function setGestureGroup(ped: number | Ped, animGroupGesture: string): void;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0xBE22B26DD764C040 | Since: 323
     */
    function getAnimInitialOffsetPosition(animDict: string, animName: string, pos: Vector3, rot: Vector3): Vector3;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x4B805E6046EE9E47 | Since: 323
     */
    function getAnimInitialOffsetRotation(animDict: string, animName: string, pos: Vector3, rot: Vector3): Vector3;
    /**
     * Ids
     * 0 - Head
     * 1 - Beard
     * 2 - Hair
     * 3 - Torso
     * 4 - Legs
     * 5 - Hands
     * 6 - Foot
     * 7 - ------
     * 8 - Accessories 1
     * 9 - Accessories 2
     * 10- Decals
     * 11 - Auxiliary parts for torso
     *
     * Hash: 0x67F3780DD425D4FC | Since: 323
     */
    function getDrawableVariation(ped: number | Ped, componentId: number): number;
    /**
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Hash: 0x27561561732A7842 | Since: 323
     */
    function getNumberOfDrawableVariations(ped: number | Ped, componentId: number): number;
    /**
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Hash: 0x04A355E041E004E6 | Since: 323
     */
    function getTextureVariation(ped: number | Ped, componentId: number): number;
    /**
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Hash: 0x8F7156A3142A6BAD | Since: 323
     */
    function getNumberOfTextureVariations(ped: number | Ped, componentId: number, drawableId: number): number;
    /**
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Hash: 0x5FAF9754E789FB47 | Since: 323
     */
    function getNumberOfPropDrawableVariations(ped: number | Ped, propId: number): number;
    /**
     * Need to check behavior when drawableId = -1
     *
     * - Doofy.Ass
     * Why this function doesn't work and return nill value?
     * GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(PLAYER.PLAYER_PED_ID(), 0, 5)
     *
     * tick: scripts/addins/menu_execute.lua:51: attempt to call field 'GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS' (a nil value)
     *
     *
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Hash: 0xA6E7F1CEB523E171 | Since: 323
     */
    function getNumberOfPropTextureVariations(ped: number | Ped, propId: number, drawableId: number): number;
    /**
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Hash: 0xE3DD5F2A84B42281 | Since: 323
     */
    function getPaletteVariation(ped: number | Ped, componentId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x9E30E91FB03A2CAF | Since: 323
     */
    function getMpOutfitDataFromMetadata(): [boolean, any, any];
    /**
     * No comment provided
     *
     * Hash: 0x1E77FA7A62EE6C4C | Since: 323
     */
    function getFmMaleShopApparelItemIndex(): number;
    /**
     * No comment provided
     *
     * Hash: 0xF033419D1B81FAE8 | Since: 323
     */
    function getFmFemaleShopApparelItemIndex(): number;
    /**
     * Checks if the component variation is valid, this works great for randomizing components using loops.
     *
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Full list of ped components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedComponentVariations.json
     *
     * Hash: 0xE825F6B6CEA7671D | Since: 323
     */
    function isComponentVariationValid(ped: number | Ped, componentId: number, drawableId: number, textureId: number): boolean;
    /**
     * paletteId: 0 to 3.
     *
     * componentId:
     * enum ePedVarComp
     * {
     * PV_COMP_INVALID = -1,
     * PV_COMP_HEAD,
     * PV_COMP_BERD,
     * PV_COMP_HAIR,
     * PV_COMP_UPPR,
     * PV_COMP_LOWR,
     * PV_COMP_HAND,
     * PV_COMP_FEET,
     * PV_COMP_TEEF,
     * PV_COMP_ACCS,
     * PV_COMP_TASK,
     * PV_COMP_DECL,
     * PV_COMP_JBIB,
     * PV_COMP_MAX
     * };
     *
     * Examples: https://gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Full list of ped components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedComponentVariations.json
     *
     * Hash: 0x262B14F48D29DE80 | Since: 323
     */
    function setComponentVariation(ped: number | Ped, componentId: number, drawableId: number, textureId: number, paletteId: number): void;
    /**
     * p1 is always 0 in R* scripts.
     *
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Hash: 0xC8A9481A01E63C28 | Since: 323
     */
    function setRandomComponentVariation(ped: number | Ped): void;
    /**
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Hash: 0xC44AA05345C992C6 | Since: 323
     */
    function setRandomProps(ped: number | Ped): void;
    /**
     * Sets Ped Default Clothes
     *
     * Hash: 0x45EEE61580806D63 | Since: 323
     */
    function setDefaultComponentVariation(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x137BBD05230DB22D | Since: 323
     */
    function setBlendFromParents(ped: number | Ped): void;
    /**
     * The "shape" parameters control the shape of the ped's face. The "skin" parameters control the skin tone. ShapeMix and skinMix control how much the first and second IDs contribute,(typically mother and father.) ThirdMix overrides the others in favor of the third IDs. IsParent is set for "children" of the player character's grandparents during old-gen character creation. It has unknown effect otherwise.
     *
     * The IDs start at zero and go Male Non-DLC, Female Non-DLC, Male DLC, and Female DLC.
     *
     * !!!Can someone add working example for this???
     *
     * try this:
     * headBlendData headData;
     * GET_PED_HEAD_BLEND_DATA(PLAYER_PED_ID(), &headData);
     *
     * SET_PED_HEAD_BLEND_DATA(PLAYER_PED_ID(), headData.shapeFirst, headData.shapeSecond, headData.shapeThird, headData.skinFirst, headData.skinSecond
     * , headData.skinThird, headData.shapeMix, headData.skinMix, headData.skinThird, 0);
     *
     *
     * For more info please refer to this topic.
     * gtaforums.com/topic/858970-all-gtao-face-ids-pedset-ped-head-blend-data-explained
     *
     * Hash: 0x9414E18B9434C2FE | Since: 323
     */
    function setHeadBlendData(ped: number | Ped, shapeFirstID: number, shapeSecondID: number, shapeThirdID: number, skinFirstID: number, skinSecondID: number, skinThirdID: number, shapeMix: number, skinMix: number, thirdMix: number, isParent: boolean): void;
    /**
     * The pointer is to a padded struct that matches the arguments to SET_PED_HEAD_BLEND_DATA(...). There are 4 bytes of padding after each field.
     * pass this struct in the second parameter
     * struct headBlendData
     * {
     * int shapeFirst;
     * int padding1;
     * int shapeSecond;
     * int padding2;
     * int shapeThird;
     * int padding3;
     * int skinFirst;
     * int padding4;
     * int skinSecond;
     * int padding5;
     * int skinThird;
     * int padding6;
     * float shapeMix;
     * int padding7;
     * float skinMix;
     * int padding8;
     * float thirdMix;
     * int padding9;
     * bool isParent;
     * };
     *
     * Hash: 0x2746BD9D88C5C5D0 | Since: 323
     */
    function getHeadBlendData(ped: number | Ped): [boolean, any];
    /**
     * See SET_PED_HEAD_BLEND_DATA().
     *
     * Hash: 0x723538F61C647C5A | Since: 323
     */
    function updateHeadBlendData(ped: number | Ped, shapeMix: number, skinMix: number, thirdMix: number): void;
    /**
     * Used for freemode (online) characters.
     *
     * For some reason, the scripts use a rounded float for the index.
     * Indexes:
     * 1. black
     * 2. very light blue/green
     * 3. dark blue
     * 4. brown
     * 5. darker brown
     * 6. light brown
     * 7. blue
     * 8. light blue
     * 9. pink
     * 10. yellow
     * 11. purple
     * 12. black
     * 13. dark green
     * 14. light brown
     * 15. yellow/black pattern
     * 16. light colored spiral pattern
     * 17. shiny red
     * 18. shiny half blue/half red
     * 19. half black/half light blue
     * 20. white/red perimter
     * 21. green snake
     * 22. red snake
     * 23. dark blue snake
     * 24. dark yellow
     * 25. bright yellow
     * 26. all black
     * 28. red small pupil
     * 29. devil blue/black
     * 30. white small pupil
     * 31. glossed over
     *
     * Hash: 0x50B56988B170AFDF | Since: 323
     */
    function setHeadBlendEyeColor(ped: number | Ped, index: number): void;
    /**
     * A getter for _SET_PED_EYE_COLOR. Returns -1 if fails to get.
     *
     * Hash: 0x76BBA2CEE66D47E9 | Since: 1011
     */
    function getHeadBlendEyeColor(ped: number | Ped): number;
    /**
     * OverlayID ranges from 0 to 12, index from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1, and opacity from 0.0 to 1.0.
     *
     * overlayID       Part                  Index, to disable
     * 0               Blemishes             0 - 23, 255
     * 1               Facial Hair           0 - 28, 255
     * 2               Eyebrows              0 - 33, 255
     * 3               Ageing                0 - 14, 255
     * 4               Makeup                0 - 74, 255
     * 5               Blush                 0 - 6, 255
     * 6               Complexion            0 - 11, 255
     * 7               Sun Damage            0 - 10, 255
     * 8               Lipstick              0 - 9, 255
     * 9               Moles/Freckles        0 - 17, 255
     * 10              Chest Hair            0 - 16, 255
     * 11              Body Blemishes        0 - 11, 255
     * 12              Add Body Blemishes    0 - 1, 255
     *
     * Hash: 0x48F44967FA05CC1E | Since: 323
     */
    function setHeadOverlay(ped: number | Ped, overlayID: number, index: number, opacity: number): void;
    /**
     * Likely a char, if that overlay is not set, e.i. "None" option, returns 255;
     *
     * This might be the once removed native GET_PED_HEAD_OVERLAY.
     *
     * Hash: 0xA60EF3B6461A4D43 | Since: 323
     */
    function getHeadOverlay(ped: number | Ped, overlayID: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xCF1CE768BB43480E | Since: 323
     */
    function getHeadOverlayNum(overlayID: number): number;
    /**
     *
     *
     * ColorType is 1 for eyebrows, beards, and chest hair; 2 for blush and lipstick; and 0 otherwise, though not called in those cases.
     *
     * Called after SET_PED_HEAD_OVERLAY().
     *
     * Hash: 0x497BF74A7B9CB952 | Since: 323
     */
    function setHeadOverlayTint(ped: number | Ped, overlayID: number, colorType: number, colorID: number, secondColorID: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4CFFC65454C93A49 | Since: 323
     */
    function setHairTint(ped: number | Ped, colorID: number, highlightColorID: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE5C0CF872C2AD150 | Since: 323
     */
    function getNumHairTints(): number;
    /**
     * No comment provided
     *
     * Hash: 0xD1F7CA1535D22818 | Since: 323
     */
    function getNumMakeupTints(): number;
    /**
     * Input: Haircolor index, value between 0 and 63 (inclusive).
     * Output: RGB values for the haircolor specified in the input.
     *
     * This is used with the hair color swatches scaleform.
     * Use `GET_PED_MAKEUP_TINT_COLOR` to get the makeup colors.
     *
     * Hash: 0x4852FC386E2E1BB5 | Since: 323
     */
    function getHairTintColor(hairColorIndex: number): [number, number, number];
    /**
     * Input: Makeup color index, value between 0 and 63 (inclusive).
     * Output: RGB values for the makeup color specified in the input.
     *
     * This is used with the makeup color swatches scaleform.
     * Use `GET_PED_HAIR_TINT_COLOR` to get the hair colors.
     *
     * Hash: 0x013E5CFC38CD5387 | Since: 323
     */
    function getMakeupTintColor(makeupColorIndex: number): [number, number, number];
    /**
     * No comment provided
     *
     * Hash: 0xED6D8E27A43B8CDE | Since: 323
     */
    function isHairTintForCreator(colorId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEA9960D07DADCF10 | Since: 323
     */
    function getDefaultSecondaryTintForCreator(colorId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x3E802F11FBE27674 | Since: 323
     */
    function isLipstickTintForCreator(colorId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF41B5D290C99A3D6 | Since: 323
     */
    function isBlushTintForCreator(colorId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE0D36E5D9E99CC21 | Since: 323
     */
    function isHairTintForBarber(colorID: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAAA6A3698A69E048 | Since: 323
     */
    function getDefaultSecondaryTintForBarber(colorID: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x0525A2C2562F3CD4 | Since: 323
     */
    function isLipstickTintForBarber(colorID: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x604E810189EE3A59 | Since: 323
     */
    function isBlushTintForBarber(colorID: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x09E7ECA981D9B210 | Since: 1290
     */
    function isBlushFacepaintTintForBarber(colorId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC56FBF2F228E1DAC | Since: 323
     */
    function getTintIndexForLastGenHairTexture(modelHash: number | string, drawableId: number, textureId: number): number;
    /**
     * Sets the various freemode face features, e.g. nose length, chin shape. Scale ranges from -1.0 to 1.0.
     *
     *
     *
     * 0 - Nose Width (Thin/Wide)
     *
     * 1 - Nose Peak (Up/Down)
     *
     * 2 - Nose Length (Long/Short)
     *
     * 3 - Nose Bone Curveness (Crooked/Curved)
     *
     * 4 - Nose Tip (Up/Down)
     *
     * 5 - Nose Bone Twist (Left/Right)
     *
     * 6 - Eyebrow (Up/Down)
     *
     * 7 - Eyebrow (In/Out)
     *
     * 8 - Cheek Bones (Up/Down)
     *
     * 9 - Cheek Sideways Bone Size (In/Out)
     *
     * 10 - Cheek Bones Width (Puffed/Gaunt)
     *
     * 11 - Eye Opening (Both) (Wide/Squinted)
     *
     * 12 - Lip Thickness (Both) (Fat/Thin)
     *
     * 13 - Jaw Bone Width (Narrow/Wide)
     *
     * 14 - Jaw Bone Shape (Round/Square)
     *
     * 15 - Chin Bone (Up/Down)
     *
     * 16 - Chin Bone Length (In/Out or Backward/Forward)
     *
     * 17 - Chin Bone Shape (Pointed/Square)
     *
     * 18 - Chin Hole (Chin Bum)
     *
     * 19 - Neck Thickness (Thin/Thick)
     *
     * Hash: 0x71A5C1DBA060049E | Since: 323
     */
    function setMicroMorph(ped: number | Ped, index: number, scale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x654CD0A825161131 | Since: 323
     */
    function hasHeadBlendFinished(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4668D80430D6C299 | Since: 323
     */
    function finalizeHeadBlend(ped: number | Ped): void;
    /**
     * p4 seems to vary from 0 to 3.
     * Preview: https://gfycat.com/MaleRareAmazonparrot
     *
     * Hash: 0xCC9682B8951C5229 | Since: 323
     */
    function setHeadBlendPaletteColor(ped: number | Ped, r: number, g: number, b: number, id: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA21C118553BBDF02 | Since: 323
     */
    function disableHeadBlendPaletteColor(ped: number | Ped): void;
    /**
     * Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
     *
     * Used when calling SET_PED_HEAD_BLEND_DATA.
     *
     * Hash: 0x68D353AB88B97E0C | Since: 323
     */
    function getHeadBlendFirstIndex(_type: number): number;
    /**
     * Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
     *
     * Hash: 0x5EF37013A6539C9D | Since: 323
     */
    function getHeadBlendNumHeads(_type: number): number;
    /**
     * from extreme3.c4
     * `PED::SET_PED_PRELOAD_VARIATION_DATA(PLAYER::PLAYER_PED_ID(), 8, PED::GET_PED_DRAWABLE_VARIATION(PLAYER::PLAYER_PED_ID(), 8), PED::GET_PED_TEXTURE_VARIATION(PLAYER::PLAYER_PED_ID(), 8));`
     *
     * p1 is probably componentId
     *
     * Hash: 0x39D55A620FCB6A3A | Since: 323
     */
    function setPreloadVariationData(ped: number | Ped, slot: number, drawableId: number, textureId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x66680A92700F43DF | Since: 323
     */
    function hasPreloadVariationDataFinished(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5AAB586FFEC0FD96 | Since: 323
     */
    function releasePreloadVariationData(ped: number | Ped): void;
    /**
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Hash: 0x2B16A3BFF1FBCE49 | Since: 323
     */
    function setPreloadPropData(ped: number | Ped, componentId: number, drawableId: number, TextureId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x784002A632822099 | Since: 323
     */
    function hasPreloadPropDataFinished(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF79F9DEF0AADE61A | Since: 323
     */
    function releasePreloadPropData(ped: number | Ped): void;
    /**
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Hash: 0x898CC20EA75BACD8 | Since: 323
     */
    function getPropIndex(ped: number | Ped, componentId: number): number;
    /**
     * ComponentId can be set to various things based on what category you're wanting to set
     * enum PedPropsData
     * {
     * PED_PROP_HATS = 0,
     * PED_PROP_GLASSES = 1,
     * PED_PROP_EARS = 2,
     * PED_PROP_WATCHES = 3,
     * };
     * Usage: SET_PED_PROP_INDEX(playerPed, PED_PROP_HATS, GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS(playerPed, PED_PROP_HATS), GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(playerPed, PED_PROP_HATS, 0), TRUE);
     *
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Hash: 0x93376B65A266EB5F | Since: 323
     */
    function setPropIndex(ped: number | Ped, componentId: number, drawableId: number, TextureId: number, attach: boolean): void;
    /**
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Hash: 0x6FD7816A36615F48 | Since: 323
     */
    function knockOffProp(ped: number | Ped): void;
    /**
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Hash: 0x0943E5B8E078E76E | Since: 323
     */
    function clearProp(ped: number | Ped, propId: number): void;
    /**
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Hash: 0xCD8A7537A9B52F06 | Since: 323
     */
    function clearAllProps(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xAFF4710E2A0A6C12 | Since: 323
     */
    function dropAmbientProp(ped: number | Ped): void;
    /**
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Hash: 0xE131A28626F81AB2 | Since: 323
     */
    function getPropTextureIndex(ped: number | Ped, componentId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x1280804F7CFD2D6C | Since: 323
     */
    function clearParachutePackVariation(ped: number | Ped): void;
    /**
     * This native sets a scuba mask for freemode models and an oxygen bottle for player_* models. It works on freemode and player_* models.
     *
     * Hash: 0x36C6984C3ED0C911 | Since: 323
     */
    function setScubaGearVariation(ped: number | Ped): void;
    /**
     * Removes the scubagear (for mp male: component id: 8, drawableId: 123, textureId: any) from peds. Does not play the 'remove scuba gear' animation, but instantly removes it.
     *
     * Hash: 0xB50EB4CCB29704AC | Since: 323
     */
    function clearScubaGearVariation(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xFEC9A3B1820F3331 | Since: 323
     */
    function isUsingScubaGearVariation(): boolean;
    /**
     * `works with TASK::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS to make a ped completely oblivious to all events going on around him`
     *
     * Hash: 0x9F8AA94D6D97DBF4 | Since: 323
     */
    function setBlockingOfNonTemporaryEvents(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x4F5F651ACCC9C4CF | Since: 323
     */
    function setBoundsOrientation(ped: number | Ped, pos: Vector3): void;
    /**
     * `PED::REGISTER_TARGET(l_216, PLAYER::PLAYER_PED_ID()); from re_prisonbreak.txt.`
     *
     * l_216 = RECSBRobber1
     *
     * Hash: 0x2F25D9AEFA34FBA2 | Since: 323
     */
    function registerTarget(ped: number | Ped, target: number | Ped): void;
    /**
     * Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).
     *
     * Hash: 0x9222F300BF8354FE | Since: 323
     */
    function registerHatedTargetsAround(ped: number | Ped, radius: number): void;
    /**
     * Gets a random ped in the x/y/zRadius near the x/y/z coordinates passed.
     *
     * Ped Types:
     * Any = -1
     * Player = 1
     * Male = 4
     * Female = 5
     * Cop = 6
     * Human = 26
     * SWAT = 27
     * Animal = 28
     * Army = 29
     *
     * Hash: 0x876046A8E3A4B71C | Since: 323
     */
    function getRandomAtCoord(pos: Vector3, xRadius: number, yRadius: number, zRadius: number, pedType: number): number;
    /**
     * Gets the closest ped in a radius.
     *
     * Ped Types:
     * Any ped = -1
     * Player = 1
     * Male = 4
     * Female = 5
     * Cop = 6
     * Human = 26
     * SWAT = 27
     * Animal = 28
     * Army = 29
     *
     * ------------------
     * P4 P5 P7 P8
     * 1  0  x  x  = return nearest walking Ped
     * 1  x  0  x  = return nearest walking Ped
     * x  1  1  x  = return Ped you are using
     * 0  0  x  x  = no effect
     * 0  x  0  x  = no effect
     *
     * x = can be 1 or 0. Does not have any obvious changes.
     *
     * This function does not return ped who is:
     * 1. Standing still
     * 2. Driving
     * 3. Fleeing
     * 4. Attacking
     *
     * This function only work if the ped is:
     * 1. walking normally.
     * 2. waiting to cross a road.
     *
     * `Note: PED::GET_PED_NEARBY_PEDS works for more peds.`
     *
     * Hash: 0xC33AB876A77F8164 | Since: 323
     */
    function getClosest(pos: Vector3, radius: number, pedType: number): [boolean, number];
    /**
     * Sets a value indicating whether scenario peds should be returned by the next call to a command that returns peds. Eg. GET_CLOSEST_PED.
     *
     * Hash: 0x14F19A8782C8071E | Since: 323
     */
    function setScenariosToBeReturnedByNextCommand(value: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x03EA03AF85A85CB7 | Since: 323
     */
    function getCanBeGrabbedByScript(ped: number | Ped): boolean;
    /**
     * Scripts use 0.2, 0.5 and 1.0. Value must be >= 0.0 && <= 1.0
     *
     * Hash: 0xDED5AF5A0EA4B297 | Since: 323
     */
    function setDriverRacingModifier(driver: number | Ped, modifier: number): void;
    /**
     * The function specifically verifies the value is equal to, or less than 1.0f. If it is greater than 1.0f, the function does nothing at all.
     *
     * Hash: 0xB195FFA8042FC5C3 | Since: 323
     */
    function setDriverAbility(driver: number | Ped, ability: number): void;
    /**
     * range 0.0f - 1.0f
     *
     * Hash: 0xA731F608CA104E3C | Since: 323
     */
    function setDriverAggressiveness(driver: number | Ped, aggressiveness: number): void;
    /**
     * Prevents the ped from going limp.
     *
     * [Example: Can prevent peds from falling when standing on moving vehicles.]
     *
     * Hash: 0x128F79EDCECE4FD5 | Since: 323
     */
    function canRagdoll(ped: number | Ped): boolean;
    /**
     * p4/p5: Unused in TU27
     * Ragdoll Types:
     * **0**: CTaskNMRelax
     * **1**: CTaskNMScriptControl: Hardcoded not to work in networked environments.
     * **Else**: CTaskNMBalance
     * time1- Time(ms) Ped is in ragdoll mode; only applies to ragdoll types 0 and not 1.
     *
     * time2- Unknown time, in milliseconds
     *
     * ragdollType-
     * 0 : Normal ragdoll
     * 1 : Falls with stiff legs/body
     * 2 : Narrow leg stumble(may not fall)
     * 3 : Wide leg stumble(may not fall)
     *
     * p4, p5, p6- No idea. In R*'s scripts they are usually either "true, true, false" or "false, false, false".
     *
     *
     *
     *
     * EDIT 3/11/16: unclear what 'mircoseconds' mean-- a microsecond is 1000x a ms, so time2 must be 1000x time1?  more testing needed.  -sob
     *
     * Edit Mar 21, 2017: removed part about time2 being the microseconds version of time1. this just isn't correct. time2 is in milliseconds, and time1 and time2 don't seem to be connected in any way.
     *
     * Hash: 0xAE99FB955581844A | Since: 323
     */
    function setToRagdoll(ped: number | Ped, time1: number, time2: number, ragdollType: number): boolean;
    /**
     * Return variable is never used in R*'s scripts.
     *
     * Not sure what p2 does. It seems like it would be a time judging by it's usage in R*'s scripts, but didn't seem to affect anything in my testings.
     *
     * enum eRagdollType
     * {
     * RD_MALE=0,
     * RD_FEMALE = 1,
     * RD_MALE_LARGE = 2,
     * RD_CUSTOM = 3,
     * }
     *
     * x, y, and z are coordinates, most likely to where the ped will fall.
     *
     * p8 to p13 are always 0f in R*'s scripts.
     *
     * (Simplified) Example of the usage of the function from R*'s scripts:
     * `ped::set_ped_to_ragdoll_with_fall(ped, 1500, 2000, 1, -entity::get_entity_forward_vector(ped), 1f, 0f, 0f, 0f, 0f, 0f, 0f);`
     *
     *
     * Hash: 0xD76632D99E4966C8 | Since: 323
     */
    function setToRagdollWithFall(ped: number | Ped, time: number, ragdollType: number, pos: Vector3, velocity: number): boolean;
    /**
     * Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
     *
     * Hash: 0xF0A4F1BBF4FA7497 | Since: 323
     */
    function setRagdollOnCollision(ped: number | Ped, toggle: boolean): void;
    /**
     * If the ped handle passed through the parenthesis is in a ragdoll state this will return true.
     *
     * Hash: 0x47E4E977581C5B55 | Since: 323
     */
    function isRagdoll(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE3B6097CC25AA69E | Since: 323
     */
    function isRunningRagdollTask(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x01F6594B923B9251 | Since: 323
     */
    function setRagdollForceFall(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x9FA4664CF62E47E8 | Since: 323
     */
    function resetRagdollTimer(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xB128377056A54E2A | Since: 323
     */
    function setCanRagdoll(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1871251F3B5ACD7 | Since: 323
     */
    function isRunningMeleeTask(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2AFE52F782F25775 | Since: 323
     */
    function isRunningMobilePhoneTask(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA3F3564A5B3646C0 | Since: 323
     */
    function isMobilePhoneToEar(ped: number | Ped): boolean;
    /**
     * Works for both player and peds,
     *
     * enum eRagdollBlockingFlags
     * {
     * RBF_BULLET_IMPACT = 0,
     * RBF_VEHICLE_IMPACT = 1,
     * RBF_FIRE = 2,
     * RBF_ELECTROCUTION = 3,
     * RBF_PLAYER_IMPACT = 4,
     * RBF_EXPLOSION = 5,0
     * RBF_IMPACT_OBJECT = 6,
     * RBF_MELEE = 7,
     * RBF_RUBBER_BULLET = 8,
     * RBF_FALLING = 9,
     * RBF_WATER_JET = 10,
     * RBF_DROWNING = 11,
     * _0x9F52E2C4 = 12,
     * RBF_PLAYER_BUMP = 13,
     * RBF_PLAYER_RAGDOLL_BUMP = 14,
     * RBF_PED_RAGDOLL_BUMP = 15,
     * RBF_VEHICLE_GRAB = 16,
     * RBF_SMOKE_GRENADE = 17,
     * };
     *
     *
     *
     * Hash: 0x26695EC767728D84 | Since: 323
     */
    function setRagdollBlockingFlags(ped: number | Ped, blockingFlag: number): void;
    /**
     * See SET_RAGDOLL_BLOCKING_FLAGS for flags
     *
     * Hash: 0xD86D101FCFD00A4B | Since: 323
     */
    function clearRagdollBlockingFlags(ped: number | Ped, blockingFlag: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC7F76DF27A5045A1 | Since: 323
     */
    function setAngledDefensiveArea(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D3151A373974804 | Since: 323
     */
    function setSphereDefensiveArea(ped: number | Ped, pos: Vector3, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF9B8F91AAD3B953E | Since: 323
     */
    function setDefensiveSphereAttachedToPed(ped: number | Ped, target: number | Ped, xOffset: number, yOffset: number, zOffset: number, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE4723DB6E736CCFF | Since: 323
     */
    function setDefensiveSphereAttachedToVehicle(ped: number | Ped, target: number | Vehicle, xOffset: number, yOffset: number, zOffset: number, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4EF47FE21698A8B6 | Since: 323
     */
    function setDefensiveAreaAttachedToPed(ped: number | Ped, attachPed: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x413C6C763A4AFFAD | Since: 323
     */
    function setDefensiveAreaDirection(ped: number | Ped): void;
    /**
     * Ped will no longer get angry when you stay near him.
     *
     * Hash: 0x74D4E028107450A9 | Since: 323
     */
    function removeDefensiveArea(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3C06B8786DD94CD1 | Since: 323
     */
    function getDefensiveAreaPosition(ped: number | Ped): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xBA63D9FE45412247 | Since: 323
     */
    function isDefensiveAreaActive(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8421EB4DA7E391B9 | Since: 323
     */
    function setPreferredCoverSet(ped: number | Ped, itemSet: any): void;
    /**
     * No comment provided
     *
     * Hash: 0xFDDB234CF74073D9 | Since: 323
     */
    function removePreferredCoverSet(ped: number | Ped): void;
    /**
     * It will revive/cure the injured ped. The condition is ped must not be dead.
     *
     * Upon setting and converting the health int, found, if health falls below 5, the ped will lay on the ground in pain(Maximum default health is 100).
     *
     * This function is well suited there.
     *
     * Hash: 0x8D8ACD8388CD99CE | Since: 323
     */
    function reviveInjured(ped: number | Ped): void;
    /**
     * This function will simply bring the dead person back to life.
     *
     * Try not to use it alone, since using this function alone, will make peds fall through ground in hell(well for the most of the times).
     *
     * Instead, before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at.(For instance, Around 2 floats of Player's current position.)
     *
     * Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
     *
     * Hash: 0x71BC8E838B9C6035 | Since: 323
     */
    function resurrect(ped: number | Ped): void;
    /**
     * NOTE: Debugging functions are not present in the retail version of the game.
     *
     * *untested but char *name could also be a hash for a localized string
     *
     * Hash: 0x98EFA132A4117BE1 | Since: 323
     */
    function setNameDebug(ped: number | Ped, name: string): void;
    /**
     * Gets the offset the specified ped has moved since the previous tick.
     *
     * If worldSpace is false, the returned offset is relative to the ped. That is, if the ped has moved 1 meter right and 5 meters forward, it'll return 1,5,0.
     *
     * If worldSpace is true, the returned offset is relative to the world. That is, if the ped has moved 1 meter on the X axis and 5 meters on the Y axis, it'll return 1,5,0.
     *
     * Hash: 0xE0AF41401ADF87E3 | Since: 323
     */
    function getExtractedDisplacement(ped: number | Ped, worldSpace: boolean): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x5BA7919BED300023 | Since: 323
     */
    function setDiesWhenInjured(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x97A790315D3831FD | Since: 323
     */
    function setEnableWeaponBlocking(ped: number | Ped, toggle: boolean): void;
    /**
     * p1 was always 1 (true).
     *
     * Kicks the ped from the current vehicle and keeps the rendering-focus on this ped (also disables its collision). If doing this for your player ped, you'll still be able to drive the vehicle.
     *
     * Hash: 0xF9ACF4A08098EA25 | Since: 323
     */
    function specialFunctionDoNotUse(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x3AC1F7B898F30C05 | Since: 323
     */
    function resetVisibleDamage(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x816F6981C60BF53B | Since: 323
     */
    function applyBloodDamageByZone(ped: number | Ped): void;
    /**
     * woundTypes:
     * - soak_splat
     * - wound_sheet
     * - BulletSmall
     * - BulletLarge
     * - ShotgunSmall
     * - ShotgunSmallMonolithic
     * - ShotgunLarge
     * - ShotgunLargeMonolithic
     * - NonFatalHeadshot
     * - stab
     * - BasicSlash
     * - Scripted_Ped_Splash_Back
     * - BackSplash
     *
     * Hash: 0x83F7E01C7B769A26 | Since: 323
     */
    function applyBlood(ped: number | Ped, boneIndex: number, rot: Vector3, woundType: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3311E47B91EDCBBC | Since: 323
     */
    function applyBloodByZone(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF0D582CBF2D9B0F | Since: 323
     */
    function applyBloodSpecific(ped: number | Ped): void;
    /**
     * enum eDamageZone
     * {
     * DZ_Torso = 0,
     * DZ_Head,
     * DZ_LeftArm,
     * DZ_RightArm,
     * DZ_LeftLeg,
     * DZ_RightLeg,
     * };
     *
     * Decal Names:
     * scar
     * blushing
     * cs_flush_anger
     * cs_flush_anger_face
     * bruise
     * bruise_large
     * herpes
     * ArmorBullet
     * basic_dirt_cloth
     * basic_dirt_skin
     * cs_trev1_dirt
     *
     * APPLY_PED_DAMAGE_DECAL(ped, 1, 0.5f, 0.513f, 0f, 1f, unk, 0, 0, "blushing");
     *
     * Hash: 0x397C38AA7B4A5F83 | Since: 323
     */
    function applyDamageDecal(ped: number | Ped, damageZone: number, xOffset: number, yOffset: number, heading: number, scale: number, alpha: number, variation: number, fadeIn: boolean, decalName: string): void;
    /**
     * Damage Packs:
     *
     * "SCR_TrevorTreeBang"
     * "HOSPITAL_0"
     * "HOSPITAL_1"
     * "HOSPITAL_2"
     * "HOSPITAL_3"
     * "HOSPITAL_4"
     * "HOSPITAL_5"
     * "HOSPITAL_6"
     * "HOSPITAL_7"
     * "HOSPITAL_8"
     * "HOSPITAL_9"
     * "SCR_Dumpster"
     * "BigHitByVehicle"
     * "SCR_Finale_Michael_Face"
     * "SCR_Franklin_finb"
     * "SCR_Finale_Michael"
     * "SCR_Franklin_finb2"
     * "Explosion_Med"
     * "SCR_Torture"
     * "SCR_TracySplash"
     * "Skin_Melee_0"
     *
     * Additional damage packs:
     *
     * gist.github.com/alexguirre/f3f47f75ddcf617f416f3c8a55ae2227
     * Full list of ped damage packs by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedDamagePacks.json
     *
     * Hash: 0x46DF918788CB093F | Since: 323
     */
    function applyDamagePack(ped: number | Ped, damagePack: string, damage: number, mult: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8FE22675A5A45817 | Since: 323
     */
    function clearBloodDamage(ped: number | Ped): void;
    /**
     * Somehow related to changing ped's clothes.
     *
     * Hash: 0x56E3B78C5408D9F4 | Since: 323
     */
    function clearBloodDamageByZone(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x62AB793144DE75DC | Since: 323
     */
    function hideBloodDamageByZone(ped: number | Ped): void;
    /**
     * p1: from 0 to 5 in the b617d scripts.
     * p2: "blushing" and "ALL" found in the b617d scripts.
     *
     * Hash: 0x523C79AEEFCC4A2A | Since: 323
     */
    function clearDamageDecalByZone(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x71EAB450D86954A1 | Since: 323
     */
    function getDecorationsState(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x2B694AFCF64E6994 | Since: 323
     */
    function markDecorationsAsClonedFromLocalPlayer(ped: number | Ped): void;
    /**
     * It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.
     *
     * Hash: 0x9C720776DAA43E7E | Since: 323
     */
    function clearWetness(ped: number | Ped): void;
    /**
     * It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.
     *
     *
     *
     * Hash: 0x44CB6447D2571AA0 | Since: 323
     */
    function setWetnessHeight(ped: number | Ped, height: number): void;
    /**
     * `combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function`
     *
     * Hash: 0xB5485E4907B53019 | Since: 323
     */
    function setWetnessEnabledThisFrame(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xAC0BB4D87777CAE2 | Since: 2802
     */
    function setWetness(ped: number | Ped, wetLevel: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6585D955A68452A5 | Since: 323
     */
    function clearEnvDirt(ped: number | Ped): void;
    /**
     * Sweat is set to 100.0 or 0.0 in the decompiled scripts.
     *
     * Hash: 0x27B0405F59637D1F | Since: 323
     */
    function setSweat(ped: number | Ped, sweat: number): void;
    /**
     * Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.
     *
     * collection - PedDecorationCollection filename hash
     * overlay - Item name hash
     *
     * Example:
     * Entry inside "mpbeach_overlays.xml" -
     * <Item>
     * <uvPos x="0.500000" y="0.500000" />
     * <scale x="0.600000" y="0.500000" />
     * <rotation value="0.000000" />
     * <nameHash>FM_Hair_Fuzz</nameHash>
     * <txdHash>mp_hair_fuzz</txdHash>
     * <txtHash>mp_hair_fuzz</txtHash>
     * <zone>ZONE_HEAD</zone>
     * <type>TYPE_TATTOO</type>
     * <faction>FM</faction>
     * <garment>All</garment>
     * <gender>GENDER_DONTCARE</gender>
     * <award />
     * <awardLevel />
     * </Item>
     *
     * Code:
     * `PED::ADD_PED_DECORATION_FROM_HASHES(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("mpbeach_overlays"), MISC::GET_HASH_KEY("fm_hair_fuzz"))`
     *
     * Full list of ped overlays / decorations by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedOverlayCollections.json
     *
     * Hash: 0x5F5D1665E352A839 | Since: 323
     */
    function addDecorationFromHashes(ped: number | Ped, collection: number | string, overlay: number | string): void;
    /**
     * Full list of ped overlays / decorations by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedOverlayCollections.json
     *
     * Hash: 0x5619BFA07CFD7833 | Since: 323
     */
    function addDecorationFromHashesInCorona(ped: number | Ped, collection: number | string, overlay: number | string): void;
    /**
     * Returns the zoneID for the overlay if it is a member of collection.
     * enum ePedDecorationZone
     * {
     * ZONE_TORSO = 0,
     * ZONE_HEAD = 1,
     * ZONE_LEFT_ARM = 2,
     * ZONE_RIGHT_ARM = 3,
     * ZONE_LEFT_LEG = 4,
     * ZONE_RIGHT_LEG = 5,
     * ZONE_MEDALS = 6,
     * ZONE_INVALID = 7
     * };
     *
     * Full list of ped overlays / decorations by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedOverlayCollections.json
     *
     * Hash: 0x9FD452BFBE7A7A8B | Since: 323
     */
    function getDecorationZoneFromHashes(collection: number | string, overlay: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x0E5173C163976E38 | Since: 323
     */
    function clearDecorations(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xE3B27E70CEAB9F0C | Since: 323
     */
    function clearDecorationsLeaveScars(ped: number | Ped): void;
    /**
     * Despite this function's name, it simply returns whether the specified handle is a Ped.
     *
     * Hash: 0x11B499C1E0FF8559 | Since: 323
     */
    function wasSkeletonUpdated(ped: number | Ped): boolean;
    /**
     * Gets the position of the specified bone of the specified ped.
     *
     * ped: The ped to get the position of a bone from.
     * boneId: The ID of the bone to get the position from. This is NOT the index.
     * offsetX: The X-component of the offset to add to the position relative to the bone's rotation.
     * offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.
     * offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.
     *
     * Hash: 0x17C07FC640E86B4E | Since: 323
     */
    function getBoneCoords(ped: number | Ped, boneId: number, offsetX: number, offsetY: number, offsetZ: number): Vector3;
    /**
     * Creates a new NaturalMotion message.
     *
     * startImmediately: If set to true, the character will perform the message the moment it receives it by GIVE_PED_NM_MESSAGE. If false, the Ped will get the message but won't perform it yet. While it's a boolean value, if negative, the message will not be initialized.
     * messageId: The ID of the NaturalMotion message.
     *
     * If a message already exists, this function does nothing. A message exists until the point it has been successfully dispatched by GIVE_PED_NM_MESSAGE.
     *
     * Hash: 0x418EF2A1BCE56685 | Since: 323
     */
    function createNmMessage(startImmediately: boolean, messageId: number): void;
    /**
     * Sends the message that was created by a call to CREATE_NM_MESSAGE to the specified Ped.
     *
     * If a message hasn't been created already, this function does nothing.
     * If the Ped is not ragdolled with Euphoria enabled, this function does nothing.
     * The following call can be used to ragdoll the Ped with Euphoria enabled: SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
     *
     * Call order:
     * SET_PED_TO_RAGDOLL
     * CREATE_NM_MESSAGE
     * GIVE_PED_NM_MESSAGE
     *
     * Multiple messages can be chained. Eg. to make the ped stagger and swing his arms around, the following calls can be made:
     * SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
     * CREATE_NM_MESSAGE(true, 0); // stopAllBehaviours - Stop all other behaviours, in case the Ped is already doing some Euphoria stuff.
     * GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
     * CREATE_NM_MESSAGE(true, 1151); // staggerFall - Attempt to walk while falling.
     * GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
     * CREATE_NM_MESSAGE(true, 372); // armsWindmill - Swing arms around.
     * GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
     *
     * Hash: 0xB158DFCCC56E5C5B | Since: 323
     */
    function giveNmMessage(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x1B5C85C612E5256E | Since: 323
     */
    function addScenarioBlockingArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xD37401D78A929A49 | Since: 323
     */
    function removeScenarioBlockingAreas(): void;
    /**
     * No comment provided
     *
     * Hash: 0x31D16B74C6E29D66 | Since: 323
     */
    function removeScenarioBlockingArea(): void;
    /**
     * No comment provided
     *
     * Hash: 0x28157D43CF600981 | Since: 323
     */
    function setScenariosSpawnInSphereArea(pos: Vector3, range: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8A24B067D175A7BD | Since: 678
     */
    function doesScenarioBlockingAreaExists(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
    /**
     * Full list of ped scenarios by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenariosCompact.json
     *
     * Hash: 0x1BF094736DD62C2E | Since: 323
     */
    function isUsingScenario(ped: number | Ped, scenario: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x57AB4A3080F85143 | Since: 323
     */
    function isUsingAnyScenario(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFE07FF6495D52E2A | Since: 323
     */
    function setPanicExitScenario(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9A77DFD295E29B09 | Since: 323
     */
    function toggleScenarioCowerInPlace(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x25361A96E0F7E419 | Since: 323
     */
    function triggerScenarioPanicexittoflee(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEC6935EBE0847B90 | Since: 323
     */
    function setShouldPlayDirectedNormalScenarioExit(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA3A9299C4F2ADB98 | Since: 323
     */
    function setShouldPlayNormalScenarioExit(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xF1C03A5352243A30 | Since: 323
     */
    function setShouldPlayImmediateScenarioExit(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xEEED8FAFEC331A70 | Since: 323
     */
    function setShouldPlayFleeScenarioExit(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x425AECF167663F48 | Since: 323
     */
    function setShouldIgnoreScenarioExitCollisionChecks(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x5B6010B3CBC29095 | Since: 323
     */
    function setShouldIgnoreScenarioNavChecks(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCEDA60A74219D064 | Since: 323
     */
    function setShouldProbeForScenarioExitsInOneFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC30BDAEE47256C13 | Since: 1868
     */
    function isGesturing(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x007FDE5A7897E426 | Since: 2802
     */
    function resetFacialIdleAnim(ped: number | Ped): void;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0xE1E65CA8AC9C00ED | Since: 323
     */
    function playFacialAnim(ped: number | Ped, animName: string, animDict: string): void;
    /**
     * Clipsets:
     * facials@gen_female@base
     * facials@gen_male@base
     * facials@p_m_zero@base
     *
     * Typically followed with SET_FACIAL_IDLE_ANIM_OVERRIDE:
     * mood_drunk_1
     * mood_stressed_1
     * mood_happy_1
     * mood_talking_1
     *
     *
     * Hash: 0x5687C7F05B39E401 | Since: 1493
     */
    function setFacialClipset(ped: number | Ped, animDict: string): void;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0xFFC24B988B938B38 | Since: 323
     */
    function setFacialIdleAnimOverride(ped: number | Ped, animName: string, animDict: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x726256CC1EEB182F | Since: 323
     */
    function clearFacialIdleAnimOverride(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xBAF20C5432058024 | Since: 323
     */
    function setCanPlayGestureAnims(ped: number | Ped, toggle: boolean): void;
    /**
     * p2 usually 0
     *
     * Hash: 0xF833DDBA3B104D43 | Since: 323
     */
    function setCanPlayVisemeAnims(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x33A60D8BDD6E508C | Since: 323
     */
    function setIsIgnoredByAutoOpenDoors(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x6373D1349925A70E | Since: 323
     */
    function setCanPlayAmbientAnims(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0EB0585D15254740 | Since: 323
     */
    function setCanPlayAmbientBaseAnims(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC2EE020F5FB4DB53 | Since: 323
     */
    function triggerIdleAnimationOn(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x6C3B4D6D13B4C841 | Since: 323
     */
    function setCanArmIk(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC11C18092C5530DC | Since: 323
     */
    function setCanHeadIk(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x73518ECE2485412B | Since: 323
     */
    function setCanLegIk(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF2B7106D37947CE0 | Since: 323
     */
    function setCanTorsoIk(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF5846EDB26A98A24 | Since: 323
     */
    function setCanTorsoReactIk(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x6647C5F6F5792496 | Since: 323
     */
    function setCanTorsoVehicleIk(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xEC4686EC06434678 | Since: 323
     */
    function setCanUseAutoConversationLookat(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x5CD3CB88A7F8850D | Since: 323
     */
    function isHeadtrackingPed(ped1: number | Ped, ped2: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x813A0A7C9D2E831F | Since: 323
     */
    function isHeadtrackingEntity(ped: number | Ped, entity: number | Entity): boolean;
    /**
     * This is only called once in the scripts.
     *
     * sub_1CD9(&l_49, 0, getElem(3, &l_34, 4), "MICHAEL", 0, 1);
     * sub_1CA8("WORLD_HUMAN_SMOKING", 2);
     * `PED::SET_PED_PRIMARY_LOOKAT(getElem(3, &l_34, 4), PLAYER::PLAYER_PED_ID());`
     *
     * Hash: 0xCD17B554996A8D9E | Since: 323
     */
    function setPrimaryLookat(ped: number | Ped, lookAt: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x78C4E9961DB3EB5B | Since: 323
     */
    function setClothPinFrames(): void;
    /**
     * No comment provided
     *
     * Hash: 0x82A3D6D9CC2CB8E3 | Since: 323
     */
    function setClothPackageIndex(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA660FAF550EB37E5 | Since: 323
     */
    function setClothProne(): void;
    /**
     * enum ePedConfigFlags
     * {
     * _CPED_CONFIG_FLAG_0xC63DE95E = 1,
     * CPED_CONFIG_FLAG_NoCriticalHits = 2,
     * CPED_CONFIG_FLAG_DrownsInWater = 3,
     * CPED_CONFIG_FLAG_DisableReticuleFixedLockon = 4,
     * _CPED_CONFIG_FLAG_0x37D196F4 = 5,
     * _CPED_CONFIG_FLAG_0xE2462399 = 6,
     * CPED_CONFIG_FLAG_UpperBodyDamageAnimsOnly = 7,
     * _CPED_CONFIG_FLAG_0xEDDEB838 = 8,
     * _CPED_CONFIG_FLAG_0xB398B6FD = 9,
     * _CPED_CONFIG_FLAG_0xF6664E68 = 10,
     * _CPED_CONFIG_FLAG_0xA05E7CA3 = 11,
     * _CPED_CONFIG_FLAG_0xCE394045 = 12,
     * CPED_CONFIG_FLAG_NeverLeavesGroup = 13,
     * _CPED_CONFIG_FLAG_0xCD8D1411 = 14,
     * _CPED_CONFIG_FLAG_0xB031F1A9 = 15,
     * _CPED_CONFIG_FLAG_0xFE65BEE3 = 16,
     * CPED_CONFIG_FLAG_BlockNonTemporaryEvents = 17,
     * _CPED_CONFIG_FLAG_0x380165BD = 18,
     * _CPED_CONFIG_FLAG_0x07C045C7 = 19,
     * _CPED_CONFIG_FLAG_0x583B5E2D = 20,
     * _CPED_CONFIG_FLAG_0x475EDA58 = 21,
     * _CPED_CONFIG_FLAG_0x8629D05B = 22,
     * _CPED_CONFIG_FLAG_0x1522968B = 23,
     * CPED_CONFIG_FLAG_IgnoreSeenMelee = 24,
     * _CPED_CONFIG_FLAG_0x4CC09C4B = 25,
     * _CPED_CONFIG_FLAG_0x034F3053 = 26,
     * _CPED_CONFIG_FLAG_0xD91BA7CC = 27,
     * _CPED_CONFIG_FLAG_0x5C8DC66E = 28,
     * CPED_CONFIG_FLAG_GetOutUndriveableVehicle = 29,
     * _CPED_CONFIG_FLAG_0x6580B9D2 = 30,
     * _CPED_CONFIG_FLAG_0x0EF7A297 = 31,
     * CPED_CONFIG_FLAG_WillFlyThruWindscreen = 32,
     * CPED_CONFIG_FLAG_DieWhenRagdoll = 33,
     * CPED_CONFIG_FLAG_HasHelmet = 34,
     * CPED_CONFIG_FLAG_UseHelmet = 35,
     * CPED_CONFIG_FLAG_DontTakeOffHelmet = 36,
     * _CPED_CONFIG_FLAG_0xB130D17B = 37,
     * _CPED_CONFIG_FLAG_0x5F071200 = 38,
     * CPED_CONFIG_FLAG_DisableEvasiveDives = 39,
     * _CPED_CONFIG_FLAG_0xC287AAFF = 40,
     * _CPED_CONFIG_FLAG_0x203328CC = 41,
     * CPED_CONFIG_FLAG_DontInfluenceWantedLevel = 42,
     * CPED_CONFIG_FLAG_DisablePlayerLockon = 43,
     * CPED_CONFIG_FLAG_DisableLockonToRandomPeds = 44,
     * CPED_CONFIG_FLAG_AllowLockonToFriendlyPlayers = 45,
     * _CPED_CONFIG_FLAG_0xDB115BFA = 46,
     * CPED_CONFIG_FLAG_PedBeingDeleted = 47,
     * CPED_CONFIG_FLAG_BlockWeaponSwitching = 48,
     * _CPED_CONFIG_FLAG_0xF8E99565 = 49,
     * _CPED_CONFIG_FLAG_0xDD17FEE6 = 50,
     * _CPED_CONFIG_FLAG_0x7ED9B2C9 = 51,
     * _CPED_CONFIG_FLAG_NoCollison = 52,
     * _CPED_CONFIG_FLAG_0x5A6C1F6E = 53,
     * _CPED_CONFIG_FLAG_0xD749FC41 = 54,
     * _CPED_CONFIG_FLAG_0x357F63F3 = 55,
     * _CPED_CONFIG_FLAG_0xC5E60961 = 56,
     * _CPED_CONFIG_FLAG_0x29275C3E = 57,
     * CPED_CONFIG_FLAG_IsFiring = 58,
     * CPED_CONFIG_FLAG_WasFiring = 59,
     * CPED_CONFIG_FLAG_IsStanding = 60,
     * CPED_CONFIG_FLAG_WasStanding = 61,
     * CPED_CONFIG_FLAG_InVehicle = 62,
     * CPED_CONFIG_FLAG_OnMount = 63,
     * CPED_CONFIG_FLAG_AttachedToVehicle = 64,
     * CPED_CONFIG_FLAG_IsSwimming = 65,
     * CPED_CONFIG_FLAG_WasSwimming = 66,
     * CPED_CONFIG_FLAG_IsSkiing = 67,
     * CPED_CONFIG_FLAG_IsSitting = 68,
     * CPED_CONFIG_FLAG_KilledByStealth = 69,
     * CPED_CONFIG_FLAG_KilledByTakedown = 70,
     * CPED_CONFIG_FLAG_Knockedout = 71,
     * _CPED_CONFIG_FLAG_0x3E3C4560 = 72,
     * _CPED_CONFIG_FLAG_0x2994C7B7 = 73,
     * _CPED_CONFIG_FLAG_0x6D59D275 = 74,
     * CPED_CONFIG_FLAG_UsingCoverPoint = 75,
     * CPED_CONFIG_FLAG_IsInTheAir = 76,
     * _CPED_CONFIG_FLAG_0x2D493FB7 = 77,
     * CPED_CONFIG_FLAG_IsAimingGun = 78,
     * _CPED_CONFIG_FLAG_0x14D69875 = 79,
     * _CPED_CONFIG_FLAG_0x40B05311 = 80,
     * _CPED_CONFIG_FLAG_0x8B230BC5 = 81,
     * _CPED_CONFIG_FLAG_0xC74E5842 = 82,
     * _CPED_CONFIG_FLAG_0x9EA86147 = 83,
     * _CPED_CONFIG_FLAG_0x674C746C = 84,
     * _CPED_CONFIG_FLAG_0x3E56A8C2 = 85,
     * _CPED_CONFIG_FLAG_0xC144A1EF = 86,
     * _CPED_CONFIG_FLAG_0x0548512D = 87,
     * _CPED_CONFIG_FLAG_0x31C93909 = 88,
     * _CPED_CONFIG_FLAG_0xA0269315 = 89,
     * _CPED_CONFIG_FLAG_0xD4D59D4D = 90,
     * _CPED_CONFIG_FLAG_0x411D4420 = 91,
     * _CPED_CONFIG_FLAG_0xDF4AEF0D = 92,
     * CPED_CONFIG_FLAG_ForcePedLoadCover = 93,
     * _CPED_CONFIG_FLAG_0x300E4CD3 = 94,
     * _CPED_CONFIG_FLAG_0xF1C5BF04 = 95,
     * _CPED_CONFIG_FLAG_0x89C2EF13 = 96,
     * CPED_CONFIG_FLAG_VaultFromCover = 97,
     * _CPED_CONFIG_FLAG_0x02A852C8 = 98,
     * _CPED_CONFIG_FLAG_0x3D9407F1 = 99,
     * _CPED_CONFIG_FLAG_IsDrunk = 100, // 0x319B4558
     * CPED_CONFIG_FLAG_ForcedAim = 101,
     * _CPED_CONFIG_FLAG_0xB942D71A = 102,
     * _CPED_CONFIG_FLAG_0xD26C55A8 = 103,
     * CPED_CONFIG_FLAG_OpenDoorArmIK = 104,
     * CPED_CONFIG_FLAG_ForceReload = 105,
     * CPED_CONFIG_FLAG_DontActivateRagdollFromVehicleImpact = 106,
     * CPED_CONFIG_FLAG_DontActivateRagdollFromBulletImpact = 107,
     * CPED_CONFIG_FLAG_DontActivateRagdollFromExplosions = 108,
     * CPED_CONFIG_FLAG_DontActivateRagdollFromFire = 109,
     * CPED_CONFIG_FLAG_DontActivateRagdollFromElectrocution = 110,
     * _CPED_CONFIG_FLAG_0x83C0A4BF = 111,
     * _CPED_CONFIG_FLAG_0x0E0FAF8C = 112,
     * CPED_CONFIG_FLAG_KeepWeaponHolsteredUnlessFired = 113,
     * _CPED_CONFIG_FLAG_0x43B80B79 = 114,
     * _CPED_CONFIG_FLAG_0x0D2A9309 = 115,
     * CPED_CONFIG_FLAG_GetOutBurningVehicle = 116,
     * CPED_CONFIG_FLAG_BumpedByPlayer = 117,
     * CPED_CONFIG_FLAG_RunFromFiresAndExplosions = 118,
     * CPED_CONFIG_FLAG_TreatAsPlayerDuringTargeting = 119,
     * CPED_CONFIG_FLAG_IsHandCuffed = 120,
     * CPED_CONFIG_FLAG_IsAnkleCuffed = 121,
     * CPED_CONFIG_FLAG_DisableMelee = 122,
     * CPED_CONFIG_FLAG_DisableUnarmedDrivebys = 123,
     * CPED_CONFIG_FLAG_JustGetsPulledOutWhenElectrocuted = 124,
     * _CPED_CONFIG_FLAG_0x5FED6BFD = 125,
     * CPED_CONFIG_FLAG_WillNotHotwireLawEnforcementVehicle = 126,
     * CPED_CONFIG_FLAG_WillCommandeerRatherThanJack = 127,
     * CPED_CONFIG_FLAG_CanBeAgitated = 128,
     * CPED_CONFIG_FLAG_ForcePedToFaceLeftInCover = 129,
     * CPED_CONFIG_FLAG_ForcePedToFaceRightInCover = 130,
     * CPED_CONFIG_FLAG_BlockPedFromTurningInCover = 131,
     * CPED_CONFIG_FLAG_KeepRelationshipGroupAfterCleanUp = 132,
     * CPED_CONFIG_FLAG_ForcePedToBeDragged = 133,
     * CPED_CONFIG_FLAG_PreventPedFromReactingToBeingJacked = 134,
     * CPED_CONFIG_FLAG_IsScuba = 135,
     * CPED_CONFIG_FLAG_WillArrestRatherThanJack = 136,
     * CPED_CONFIG_FLAG_RemoveDeadExtraFarAway = 137,
     * CPED_CONFIG_FLAG_RidingTrain = 138,
     * CPED_CONFIG_FLAG_ArrestResult = 139,
     * CPED_CONFIG_FLAG_CanAttackFriendly = 140,
     * CPED_CONFIG_FLAG_WillJackAnyPlayer = 141,
     * _CPED_CONFIG_FLAG_0x6901E731 = 142,
     * _CPED_CONFIG_FLAG_0x9EC9BF6C = 143,
     * CPED_CONFIG_FLAG_WillJackWantedPlayersRatherThanStealCar = 144,
     * CPED_CONFIG_FLAG_ShootingAnimFlag = 145,
     * CPED_CONFIG_FLAG_DisableLadderClimbing = 146,
     * CPED_CONFIG_FLAG_StairsDetected = 147,
     * CPED_CONFIG_FLAG_SlopeDetected = 148,
     * _CPED_CONFIG_FLAG_0x1A15670B = 149,
     * CPED_CONFIG_FLAG_CowerInsteadOfFlee = 150,
     * CPED_CONFIG_FLAG_CanActivateRagdollWhenVehicleUpsideDown = 151,
     * CPED_CONFIG_FLAG_AlwaysRespondToCriesForHelp = 152,
     * CPED_CONFIG_FLAG_DisableBloodPoolCreation = 153,
     * CPED_CONFIG_FLAG_ShouldFixIfNoCollision = 154,
     * CPED_CONFIG_FLAG_CanPerformArrest = 155,
     * CPED_CONFIG_FLAG_CanPerformUncuff = 156,
     * CPED_CONFIG_FLAG_CanBeArrested = 157,
     * _CPED_CONFIG_FLAG_0xF7960FF5 = 158,
     * CPED_CONFIG_FLAG_PlayerPreferFrontSeatMP = 159,
     * _CPED_CONFIG_FLAG_0x0C6C3099 = 160,
     * _CPED_CONFIG_FLAG_0x645F927A = 161,
     * _CPED_CONFIG_FLAG_0xA86549B9 = 162,
     * _CPED_CONFIG_FLAG_0x8AAF337A = 163,
     * _CPED_CONFIG_FLAG_0x13BAA6E7 = 164,
     * _CPED_CONFIG_FLAG_0x5FB9D1F5 = 165,
     * CPED_CONFIG_FLAG_IsInjured = 166,
     * CPED_CONFIG_FLAG_DontEnterVehiclesInPlayersGroup = 167,
     * _CPED_CONFIG_FLAG_0xD8072639 = 168,
     * CPED_CONFIG_FLAG_PreventAllMeleeTaunts = 169,
     * CPED_CONFIG_FLAG_ForceDirectEntry = 170,
     * CPED_CONFIG_FLAG_AlwaysSeeApproachingVehicles = 171,
     * CPED_CONFIG_FLAG_CanDiveAwayFromApproachingVehicles = 172,
     * CPED_CONFIG_FLAG_AllowPlayerToInterruptVehicleEntryExit = 173,
     * CPED_CONFIG_FLAG_OnlyAttackLawIfPlayerIsWanted = 174,
     * _CPED_CONFIG_FLAG_0x90008BFA = 175,
     * _CPED_CONFIG_FLAG_0x07C7A910 = 176,
     * CPED_CONFIG_FLAG_PedsJackingMeDontGetIn = 177,
     * _CPED_CONFIG_FLAG_0xCE4E8BE2 = 178,
     * CPED_CONFIG_FLAG_PedIgnoresAnimInterruptEvents = 179,
     * CPED_CONFIG_FLAG_IsInCustody = 180,
     * CPED_CONFIG_FLAG_ForceStandardBumpReactionThresholds = 181,
     * CPED_CONFIG_FLAG_LawWillOnlyAttackIfPlayerIsWanted = 182,
     * CPED_CONFIG_FLAG_IsAgitated = 183,
     * CPED_CONFIG_FLAG_PreventAutoShuffleToDriversSeat = 184,
     * CPED_CONFIG_FLAG_UseKinematicModeWhenStationary = 185,
     * CPED_CONFIG_FLAG_EnableWeaponBlocking = 186,
     * CPED_CONFIG_FLAG_HasHurtStarted = 187,
     * CPED_CONFIG_FLAG_DisableHurt = 188,
     * CPED_CONFIG_FLAG_PlayerIsWeird = 189,
     * _CPED_CONFIG_FLAG_0x32FC208B = 190,
     * _CPED_CONFIG_FLAG_0x0C296E5A = 191,
     * _CPED_CONFIG_FLAG_0xE63B73EC = 192,
     * CPED_CONFIG_FLAG_DoNothingWhenOnFootByDefault = 193,
     * CPED_CONFIG_FLAG_UsingScenario = 194,
     * CPED_CONFIG_FLAG_VisibleOnScreen = 195,
     * _CPED_CONFIG_FLAG_0xD88C58A1 = 196,
     * _CPED_CONFIG_FLAG_0x5A3DCF43 = 197,
     * _CPED_CONFIG_FLAG_0xEA02B420 = 198,
     * CPED_CONFIG_FLAG_DontActivateRagdollOnVehicleCollisionWhenDead = 199,
     * CPED_CONFIG_FLAG_HasBeenInArmedCombat = 200,
     * _CPED_CONFIG_FLAG_0x5E6466F6 = 201,
     * CPED_CONFIG_FLAG_Avoidance_Ignore_All = 202,
     * CPED_CONFIG_FLAG_Avoidance_Ignored_by_All = 203,
     * CPED_CONFIG_FLAG_Avoidance_Ignore_Group1 = 204,
     * CPED_CONFIG_FLAG_Avoidance_Member_of_Group1 = 205,
     * CPED_CONFIG_FLAG_ForcedToUseSpecificGroupSeatIndex = 206,
     * _CPED_CONFIG_FLAG_0x415B26B9 = 207,
     * CPED_CONFIG_FLAG_DisableExplosionReactions = 208,
     * CPED_CONFIG_FLAG_DodgedPlayer = 209,
     * CPED_CONFIG_FLAG_WaitingForPlayerControlInterrupt = 210,
     * CPED_CONFIG_FLAG_ForcedToStayInCover = 211,
     * CPED_CONFIG_FLAG_GeneratesSoundEvents = 212,
     * CPED_CONFIG_FLAG_ListensToSoundEvents = 213,
     * CPED_CONFIG_FLAG_AllowToBeTargetedInAVehicle = 214,
     * CPED_CONFIG_FLAG_WaitForDirectEntryPointToBeFreeWhenExiting = 215,
     * CPED_CONFIG_FLAG_OnlyRequireOnePressToExitVehicle = 216,
     * CPED_CONFIG_FLAG_ForceExitToSkyDive = 217,
     * _CPED_CONFIG_FLAG_0x3C7DF9DF = 218,
     * _CPED_CONFIG_FLAG_0x848FFEF2 = 219,
     * CPED_CONFIG_FLAG_DontEnterLeadersVehicle = 220,
     * CPED_CONFIG_FLAG_DisableExitToSkyDive = 221,
     * _CPED_CONFIG_FLAG_0x84F722FA = 222,
     * _CPED_CONFIG_FLAG_Shrink = 223, // 0xD1B87B1F
     * _CPED_CONFIG_FLAG_0x728AA918 = 224,
     * CPED_CONFIG_FLAG_DisablePotentialToBeWalkedIntoResponse = 225,
     * CPED_CONFIG_FLAG_DisablePedAvoidance = 226,
     * CPED_CONFIG_FLAG_ForceRagdollUponDeath = 227,
     * _CPED_CONFIG_FLAG_0x1EA7225F = 228,
     * CPED_CONFIG_FLAG_DisablePanicInVehicle = 229,
     * CPED_CONFIG_FLAG_AllowedToDetachTrailer = 230,
     * _CPED_CONFIG_FLAG_0xFC3E572D = 231,
     * _CPED_CONFIG_FLAG_0x08E9F9CF = 232,
     * _CPED_CONFIG_FLAG_0x2D3BA52D = 233,
     * _CPED_CONFIG_FLAG_0xFD2F53EA = 234,
     * _CPED_CONFIG_FLAG_0x31A1B03B = 235,
     * CPED_CONFIG_FLAG_IsHoldingProp = 236,
     * CPED_CONFIG_FLAG_BlocksPathingWhenDead = 237,
     * _CPED_CONFIG_FLAG_0xCE57C9A3 = 238,
     * _CPED_CONFIG_FLAG_0x26149198 = 239,
     * CPED_CONFIG_FLAG_ForceSkinCharacterCloth = 240,
     * CPED_CONFIG_FLAG_LeaveEngineOnWhenExitingVehicles = 241,
     * CPED_CONFIG_FLAG_PhoneDisableTextingAnimations = 242,
     * CPED_CONFIG_FLAG_PhoneDisableTalkingAnimations = 243,
     * CPED_CONFIG_FLAG_PhoneDisableCameraAnimations = 244,
     * CPED_CONFIG_FLAG_DisableBlindFiringInShotReactions = 245,
     * CPED_CONFIG_FLAG_AllowNearbyCoverUsage = 246,
     * _CPED_CONFIG_FLAG_0x0C754ACA = 247,
     * CPED_CONFIG_FLAG_CanPlayInCarIdles = 248,
     * CPED_CONFIG_FLAG_CanAttackNonWantedPlayerAsLaw = 249,
     * CPED_CONFIG_FLAG_WillTakeDamageWhenVehicleCrashes = 250,
     * CPED_CONFIG_FLAG_AICanDrivePlayerAsRearPassenger = 251,
     * CPED_CONFIG_FLAG_PlayerCanJackFriendlyPlayers = 252,
     * CPED_CONFIG_FLAG_OnStairs = 253,
     * _CPED_CONFIG_FLAG_0xE1A2F73F = 254,
     * CPED_CONFIG_FLAG_AIDriverAllowFriendlyPassengerSeatEntry = 255,
     * _CPED_CONFIG_FLAG_0xF1EB20A9 = 256,
     * CPED_CONFIG_FLAG_AllowMissionPedToUseInjuredMovement = 257,
     * _CPED_CONFIG_FLAG_0x329DCF1A = 258,
     * _CPED_CONFIG_FLAG_0x8D90DD1B = 259,
     * _CPED_CONFIG_FLAG_0xB8A292B7 = 260,
     * CPED_CONFIG_FLAG_PreventUsingLowerPrioritySeats = 261,
     * _CPED_CONFIG_FLAG_0x2AF558F0 = 262,
     * _CPED_CONFIG_FLAG_0x82251455 = 263,
     * _CPED_CONFIG_FLAG_0x30CF498B = 264,
     * _CPED_CONFIG_FLAG_0xE1CD50AF = 265,
     * _CPED_CONFIG_FLAG_0x72E4AE48 = 266,
     * _CPED_CONFIG_FLAG_0xC2657EA1 = 267,
     * CPED_CONFIG_FLAG_TeleportToLeaderVehicle = 268,
     * CPED_CONFIG_FLAG_Avoidance_Ignore_WeirdPedBuffer = 269,
     * CPED_CONFIG_FLAG_OnStairSlope = 270,
     * _CPED_CONFIG_FLAG_0xA0897933 = 271,
     * CPED_CONFIG_FLAG_DontBlipCop = 272,
     * CPED_CONFIG_FLAG_ClimbedShiftedFence = 273,
     * _CPED_CONFIG_FLAG_0xF7823618 = 274,
     * CPED_CONFIG_FLAG_KillWhenTrapped = 275,
     * CPED_CONFIG_FLAG_EdgeDetected = 276,
     * _CPED_CONFIG_FLAG_0x92B67896 = 277,
     * _CPED_CONFIG_FLAG_0xCAD677C9 = 278,
     * CPED_CONFIG_FLAG_AvoidTearGas = 279,
     * _CPED_CONFIG_FLAG_0x5276AC7B = 280,
     * CPED_CONFIG_FLAG_DisableGoToWritheWhenInjured = 281,
     * CPED_CONFIG_FLAG_OnlyUseForcedSeatWhenEnteringHeliInGroup = 282,
     * _CPED_CONFIG_FLAG_0x9139724D = 283,
     * _CPED_CONFIG_FLAG_0xA1457461 = 284,
     * CPED_CONFIG_FLAG_DisableWeirdPedEvents = 285,
     * CPED_CONFIG_FLAG_ShouldChargeNow = 286,
     * CPED_CONFIG_FLAG_RagdollingOnBoat = 287,
     * CPED_CONFIG_FLAG_HasBrandishedWeapon = 288,
     * _CPED_CONFIG_FLAG_0x1B9EE8A1 = 289,
     * _CPED_CONFIG_FLAG_0xF3F5758C = 290,
     * _CPED_CONFIG_FLAG_0x2A9307F1 = 291,
     * _CPED_CONFIG_FLAG_FreezePosition = 292, // 0x7403D216
     * _CPED_CONFIG_FLAG_0xA06A3C6C = 293,
     * CPED_CONFIG_FLAG_DisableShockingEvents = 294,
     * _CPED_CONFIG_FLAG_0xF8DA25A5 = 295,
     * CPED_CONFIG_FLAG_NeverReactToPedOnRoof = 296,
     * _CPED_CONFIG_FLAG_0xB31F1187 = 297,
     * _CPED_CONFIG_FLAG_0x84315402 = 298,
     * CPED_CONFIG_FLAG_DisableShockingDrivingOnPavementEvents = 299,
     * _CPED_CONFIG_FLAG_0xC7829B67 = 300,
     * CPED_CONFIG_FLAG_DisablePedConstraints = 301,
     * CPED_CONFIG_FLAG_ForceInitialPeekInCover = 302,
     * _CPED_CONFIG_FLAG_0x2ADA871B = 303,
     * _CPED_CONFIG_FLAG_0x47BC8A58 = 304,
     * CPED_CONFIG_FLAG_DisableJumpingFromVehiclesAfterLeader = 305,
     * _CPED_CONFIG_FLAG_0x4A133C50 = 306,
     * _CPED_CONFIG_FLAG_0xC58099C3 = 307,
     * _CPED_CONFIG_FLAG_0xF3D76D41 = 308,
     * _CPED_CONFIG_FLAG_0xB0EEE9F2 = 309,
     * CPED_CONFIG_FLAG_IsInCluster = 310,
     * CPED_CONFIG_FLAG_ShoutToGroupOnPlayerMelee = 311,
     * CPED_CONFIG_FLAG_IgnoredByAutoOpenDoors = 312,
     * _CPED_CONFIG_FLAG_0xD4136C22 = 313,
     * CPED_CONFIG_FLAG_ForceIgnoreMeleeActiveCombatant = 314,
     * CPED_CONFIG_FLAG_CheckLoSForSoundEvents = 315,
     * _CPED_CONFIG_FLAG_0xD5C98277 = 316,
     * CPED_CONFIG_FLAG_CanSayFollowedByPlayerAudio = 317,
     * CPED_CONFIG_FLAG_ActivateRagdollFromMinorPlayerContact = 318,
     * _CPED_CONFIG_FLAG_0xD8BE1D54 = 319,
     * CPED_CONFIG_FLAG_ForcePoseCharacterCloth = 320,
     * CPED_CONFIG_FLAG_HasClothCollisionBounds = 321,
     * CPED_CONFIG_FLAG_HasHighHeels = 322,
     * _CPED_CONFIG_FLAG_0x86B01E54 = 323,
     * CPED_CONFIG_FLAG_DontBehaveLikeLaw = 324,
     * _CPED_CONFIG_FLAG_0xC03B736C = 325, // SpawnedAtScenario?
     * CPED_CONFIG_FLAG_DisablePoliceInvestigatingBody = 326,
     * CPED_CONFIG_FLAG_DisableWritheShootFromGround = 327,
     * CPED_CONFIG_FLAG_LowerPriorityOfWarpSeats = 328,
     * CPED_CONFIG_FLAG_DisableTalkTo = 329,
     * CPED_CONFIG_FLAG_DontBlip = 330,
     * CPED_CONFIG_FLAG_IsSwitchingWeapon = 331,
     * CPED_CONFIG_FLAG_IgnoreLegIkRestrictions = 332,
     * _CPED_CONFIG_FLAG_0x150468FD = 333,
     * _CPED_CONFIG_FLAG_0x914EBD6B = 334,
     * _CPED_CONFIG_FLAG_0x79AF3B6D = 335,
     * _CPED_CONFIG_FLAG_0x75C7A632 = 336,
     * _CPED_CONFIG_FLAG_0x52D530E2 = 337,
     * _CPED_CONFIG_FLAG_0xDB2A90E0 = 338,
     * CPED_CONFIG_FLAG_AllowTaskDoNothingTimeslicing = 339,
     * _CPED_CONFIG_FLAG_0x12ADB567 = 340,
     * _CPED_CONFIG_FLAG_0x105C8518 = 341,
     * CPED_CONFIG_FLAG_NotAllowedToJackAnyPlayers = 342,
     * _CPED_CONFIG_FLAG_0xED152C3E = 343,
     * _CPED_CONFIG_FLAG_0xA0EFE6A8 = 344,
     * CPED_CONFIG_FLAG_AlwaysLeaveTrainUponArrival = 345,
     * _CPED_CONFIG_FLAG_0xCDDFE830 = 346,
     * CPED_CONFIG_FLAG_OnlyWritheFromWeaponDamage = 347,
     * CPED_CONFIG_FLAG_UseSloMoBloodVfx = 348,
     * CPED_CONFIG_FLAG_EquipJetpack = 349,
     * CPED_CONFIG_FLAG_PreventDraggedOutOfCarThreatResponse = 350,
     * _CPED_CONFIG_FLAG_0xE13D1F7C = 351,
     * _CPED_CONFIG_FLAG_0x40E25FB9 = 352,
     * _CPED_CONFIG_FLAG_0x930629D9 = 353,
     * _CPED_CONFIG_FLAG_0xECCF0C7F = 354,
     * _CPED_CONFIG_FLAG_0xB6E9613B = 355,
     * CPED_CONFIG_FLAG_ForceDeepSurfaceCheck = 356,
     * CPED_CONFIG_FLAG_DisableDeepSurfaceAnims = 357,
     * CPED_CONFIG_FLAG_DontBlipNotSynced = 358,
     * CPED_CONFIG_FLAG_IsDuckingInVehicle = 359,
     * CPED_CONFIG_FLAG_PreventAutoShuffleToTurretSeat = 360,
     * CPED_CONFIG_FLAG_DisableEventInteriorStatusCheck = 361,
     * CPED_CONFIG_FLAG_HasReserveParachute = 362,
     * CPED_CONFIG_FLAG_UseReserveParachute = 363,
     * CPED_CONFIG_FLAG_TreatDislikeAsHateWhenInCombat = 364,
     * CPED_CONFIG_FLAG_OnlyUpdateTargetWantedIfSeen = 365,
     * CPED_CONFIG_FLAG_AllowAutoShuffleToDriversSeat = 366,
     * _CPED_CONFIG_FLAG_0xD7E07D37 = 367,
     * _CPED_CONFIG_FLAG_0x03C4FD24 = 368,
     * _CPED_CONFIG_FLAG_0x7675789A = 369,
     * _CPED_CONFIG_FLAG_0xB7288A88 = 370,
     * _CPED_CONFIG_FLAG_0xC06B6291 = 371,
     * CPED_CONFIG_FLAG_PreventReactingToSilencedCloneBullets = 372,
     * CPED_CONFIG_FLAG_DisableInjuredCryForHelpEvents = 373,
     * CPED_CONFIG_FLAG_NeverLeaveTrain = 374,
     * CPED_CONFIG_FLAG_DontDropJetpackOnDeath = 375,
     * _CPED_CONFIG_FLAG_0x147F1FFB = 376,
     * _CPED_CONFIG_FLAG_0x4376DD79 = 377,
     * _CPED_CONFIG_FLAG_0xCD3DB518 = 378,
     * _CPED_CONFIG_FLAG_0xFE4BA4B6 = 379,
     * CPED_CONFIG_FLAG_DisableAutoEquipHelmetsInBikes = 380,
     * _CPED_CONFIG_FLAG_0xBCD816CD = 381,
     * _CPED_CONFIG_FLAG_0xCF02DD69 = 382,
     * _CPED_CONFIG_FLAG_0xF73AFA2E = 383,
     * _CPED_CONFIG_FLAG_0x80B9A9D0 = 384,
     * _CPED_CONFIG_FLAG_0xF601F7EE = 385,
     * _CPED_CONFIG_FLAG_0xA91350FC = 386,
     * _CPED_CONFIG_FLAG_0x3AB23B96 = 387,
     * CPED_CONFIG_FLAG_IsClimbingLadder = 388,
     * CPED_CONFIG_FLAG_HasBareFeet = 389,
     * CPED_CONFIG_FLAG_UNUSED_REPLACE_ME_2 = 390,
     * CPED_CONFIG_FLAG_GoOnWithoutVehicleIfItIsUnableToGetBackToRoad = 391,
     * CPED_CONFIG_FLAG_BlockDroppingHealthSnacksOnDeath = 392,
     * _CPED_CONFIG_FLAG_0xC11D3E8F = 393,
     * CPED_CONFIG_FLAG_ForceThreatResponseToNonFriendToFriendMeleeActions = 394,
     * CPED_CONFIG_FLAG_DontRespondToRandomPedsDamage = 395,
     * CPED_CONFIG_FLAG_AllowContinuousThreatResponseWantedLevelUpdates = 396,
     * CPED_CONFIG_FLAG_KeepTargetLossResponseOnCleanup = 397,
     * CPED_CONFIG_FLAG_PlayersDontDragMeOutOfCar = 398,
     * CPED_CONFIG_FLAG_BroadcastRepondedToThreatWhenGoingToPointShooting = 399,
     * CPED_CONFIG_FLAG_IgnorePedTypeForIsFriendlyWith = 400,
     * CPED_CONFIG_FLAG_TreatNonFriendlyAsHateWhenInCombat = 401,
     * CPED_CONFIG_FLAG_DontLeaveVehicleIfLeaderNotInVehicle = 402,
     * _CPED_CONFIG_FLAG_0x5E5B9591 = 403,
     * CPED_CONFIG_FLAG_AllowMeleeReactionIfMeleeProofIsOn = 404,
     * _CPED_CONFIG_FLAG_0x77840177 = 405,
     * _CPED_CONFIG_FLAG_0x1C7ACAC4 = 406,
     * CPED_CONFIG_FLAG_UseNormalExplosionDamageWhenBlownUpInVehicle = 407,
     * CPED_CONFIG_FLAG_DisableHomingMissileLockForVehiclePedInside = 408,
     * CPED_CONFIG_FLAG_DisableTakeOffScubaGear = 409,
     * CPED_CONFIG_FLAG_IgnoreMeleeFistWeaponDamageMult = 410,
     * CPED_CONFIG_FLAG_LawPedsCanFleeFromNonWantedPlayer = 411,
     * CPED_CONFIG_FLAG_ForceBlipSecurityPedsIfPlayerIsWanted = 412,
     * CPED_CONFIG_FLAG_IsHolsteringWeapon = 413,
     * CPED_CONFIG_FLAG_UseGoToPointForScenarioNavigation = 414,
     * CPED_CONFIG_FLAG_DontClearLocalPassengersWantedLevel = 415,
     * CPED_CONFIG_FLAG_BlockAutoSwapOnWeaponPickups = 416,
     * CPED_CONFIG_FLAG_ThisPedIsATargetPriorityForAI = 417,
     * CPED_CONFIG_FLAG_IsSwitchingHelmetVisor = 418,
     * CPED_CONFIG_FLAG_ForceHelmetVisorSwitch = 419,
     * _CPED_CONFIG_FLAG_0xCFF5F6DE = 420,
     * CPED_CONFIG_FLAG_UseOverrideFootstepPtFx = 421,
     * CPED_CONFIG_FLAG_DisableVehicleCombat = 422,
     * _CPED_CONFIG_FLAG_0xFE401D26 = 423,
     * CPED_CONFIG_FLAG_FallsLikeAircraft = 424,
     * _CPED_CONFIG_FLAG_0x2B42AE82 = 425,
     * CPED_CONFIG_FLAG_UseLockpickVehicleEntryAnimations = 426,
     * CPED_CONFIG_FLAG_IgnoreInteriorCheckForSprinting = 427,
     * CPED_CONFIG_FLAG_SwatHeliSpawnWithinLastSpottedLocation = 428,
     * CPED_CONFIG_FLAG_DisableStartEngine = 429,
     * CPED_CONFIG_FLAG_IgnoreBeingOnFire = 430,
     * CPED_CONFIG_FLAG_DisableTurretOrRearSeatPreference = 431,
     * CPED_CONFIG_FLAG_DisableWantedHelicopterSpawning = 432,
     * CPED_CONFIG_FLAG_UseTargetPerceptionForCreatingAimedAtEvents = 433,
     * CPED_CONFIG_FLAG_DisableHomingMissileLockon = 434,
     * CPED_CONFIG_FLAG_ForceIgnoreMaxMeleeActiveSupportCombatants = 435,
     * CPED_CONFIG_FLAG_StayInDefensiveAreaWhenInVehicle = 436,
     * CPED_CONFIG_FLAG_DontShoutTargetPosition = 437,
     * CPED_CONFIG_FLAG_DisableHelmetArmor = 438,
     * _CPED_CONFIG_FLAG_0xCB7F3A1E = 439,
     * _CPED_CONFIG_FLAG_0x50178878 = 440,
     * CPED_CONFIG_FLAG_PreventVehExitDueToInvalidWeapon = 441,
     * CPED_CONFIG_FLAG_IgnoreNetSessionFriendlyFireCheckForAllowDamage = 442,
     * CPED_CONFIG_FLAG_DontLeaveCombatIfTargetPlayerIsAttackedByPolice = 443,
     * CPED_CONFIG_FLAG_CheckLockedBeforeWarp = 444,
     * CPED_CONFIG_FLAG_DontShuffleInVehicleToMakeRoom = 445,
     * CPED_CONFIG_FLAG_GiveWeaponOnGetup = 446,
     * CPED_CONFIG_FLAG_DontHitVehicleWithProjectiles = 447,
     * CPED_CONFIG_FLAG_DisableForcedEntryForOpenVehiclesFromTryLockedDoor = 448,
     * CPED_CONFIG_FLAG_FiresDummyRockets = 449,
     * CPED_CONFIG_FLAG_PedIsArresting = 450,
     * CPED_CONFIG_FLAG_IsDecoyPed = 451,
     * CPED_CONFIG_FLAG_HasEstablishedDecoy = 452,
     * CPED_CONFIG_FLAG_BlockDispatchedHelicoptersFromLanding = 453,
     * CPED_CONFIG_FLAG_DontCryForHelpOnStun = 454,
     * _CPED_CONFIG_FLAG_0xB68D3EAB = 455,
     * CPED_CONFIG_FLAG_CanBeIncapacitated = 456,
     * _CPED_CONFIG_FLAG_0x4BD5EBAD = 457,
     * CPED_CONFIG_FLAG_DontChangeTargetFromMelee = 458,
     * };
     *
     * Hash: 0x1913FE4CBF41C463 | Since: 323
     */
    function setConfigFlag(ped: number | Ped, flagId: number, value: boolean): void;
    /**
     * `PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 240, 1);`
     * Known values:
     * PRF_PreventGoingIntoStillInVehicleState = 236 *(fanatic2.c)*
     *
     * Hash: 0xC1E8A365BF3B29F2 | Since: 323
     */
    function setResetFlag(ped: number | Ped, flagId: number, doReset: boolean): void;
    /**
     * See SET_PED_CONFIG_FLAG
     *
     * Hash: 0x7EE53118C892B513 | Since: 323
     */
    function getConfigFlag(ped: number | Ped, flagId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAF9E59B1B1FBF2A0 | Since: 323
     */
    function getResetFlag(ped: number | Ped, flagId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0BDDB8D9EC6BCF3C | Since: 323
     */
    function setGroupMemberPassengerIndex(ped: number | Ped, index: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B7A646C242A7059 | Since: 323
     */
    function setCanEvasiveDive(ped: number | Ped, toggle: boolean): void;
    /**
     * Presumably returns the Entity that the Ped is currently diving out of the way of.
     *
     * var num3;
     * `if (PED::IS_PED_EVASIVE_DIVING(A_0, &num3) != 0)`
     * `if (ENTITY::IS_ENTITY_A_VEHICLE(num3) != 0)`
     *
     * Hash: 0x414641C26E105898 | Since: 323
     */
    function isEvasiveDiving(ped: number | Ped): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x96A05E4FB321B1BA | Since: 323
     */
    function setShootsAtCoord(ped: number | Ped, pos: Vector3, toggle: boolean): void;
    /**
     * Full list of peds by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/peds.json
     *
     * Hash: 0xE163A4BCE4DE6F11 | Since: 323
     */
    function setModelIsSuppressed(modelHash: number | string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB47BD05FA66B40CF | Since: 323
     */
    function stopAnyModelBeingSuppressed(): void;
    /**
     * No comment provided
     *
     * Hash: 0x638C03B0F9878F57 | Since: 323
     */
    function setCanBeTargetedWhenInjured(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7FB17BA2E7DECA5B | Since: 323
     */
    function setGeneratesDeadBodyEvents(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE43A13C9E4CCCBCF | Since: 323
     */
    function blockFromGeneratingDeadBodyEventsWhenDead(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3E9679C1DFCF422C | Since: 877
     */
    function setWillOnlyAttackWantedPlayer(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDF993EE5E90ABA25 | Since: 323
     */
    function setCanRagdollFromPlayerImpact(ped: number | Ped, toggle: boolean): void;
    /**
     * PoliceMotorcycleHelmet   1024
     * RegularMotorcycleHelmet   4096
     * FiremanHelmet 16384
     * PilotHeadset  32768
     * PilotHelmet   65536
     * --
     * p2 is generally 4096 or 16384 in the scripts. p1 varies between 1 and 0.
     *
     * Hash: 0x54C7C4A94367717E | Since: 323
     */
    function giveHelmet(ped: number | Ped, cannotRemove: boolean, helmetFlag: number, textureIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA7B2458D0AD6DED8 | Since: 323
     */
    function removeHelmet(ped: number | Ped, instantly: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x14590DDBEDB1EC85 | Since: 323
     */
    function isTakingOffHelmet(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x560A43136EB58105 | Since: 323
     */
    function setHelmet(ped: number | Ped, canWearHelmet: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC0E78D5C2CE3EB25 | Since: 323
     */
    function setHelmetFlag(ped: number | Ped, helmetFlag: number): void;
    /**
     * List of component/props ID
     * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
     *
     * Hash: 0x26D83693ED99291C | Since: 323
     */
    function setHelmetPropIndex(ped: number | Ped, propIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3F7325574E41B44D | Since: 791
     */
    function setHelmetVisorPropIndices(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xB9496CE47546DB2C | Since: 791
     */
    function isHelmetVisorUp(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF1550C4BD22582E2 | Since: 323
     */
    function setHelmetTextureIndex(ped: number | Ped, textureIndex: number): void;
    /**
     * Returns true if the ped passed through the parenthesis is wearing a helmet.
     *
     * Hash: 0xF33BDFE19B309B19 | Since: 323
     */
    function isWearingHelmet(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x687C0B594907D2E8 | Since: 323
     */
    function clearStoredHatProp(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x451294E859ECC018 | Since: 323
     */
    function getHelmetStoredHatPropIndex(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x9D728C1E12BF5518 | Since: 323
     */
    function getHelmetStoredHatTexIndex(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xF2385935BFFD4D92 | Since: 323
     */
    function isCurrentHeadPropAHelmet(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x332B562EEDA62399 | Since: 323
     */
    function setToLoadCover(ped: number | Ped, toggle: boolean): void;
    /**
     * It simply makes the said ped to cower behind cover object(wall, desk, car)
     *
     * Peds flee attributes must be set to not to flee, first. Else, most of the peds, will just flee from gunshot sounds or any other panic situations.
     *
     * Hash: 0xCB7553CDCEF4A735 | Since: 323
     */
    function setCanCowerInCover(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC514825C507E3736 | Since: 323
     */
    function setCanPeekInCover(ped: number | Ped, toggle: boolean): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0x94D94BF1A75AED3D | Since: 323
     */
    function setPlaysHeadOnHornAnimWhenDiesInVehicle(ped: number | Ped, toggle: boolean): void;
    /**
     * "IK" stands for "Inverse kinematics." I assume this has something to do with how the ped uses his legs to balance. In the scripts, the second parameter is always an int with a value of 2, 0, or sometimes 1
     *
     * Hash: 0xC396F5B86FF9FEBD | Since: 323
     */
    function setLegIkMode(ped: number | Ped, mode: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A986918B102B448 | Since: 323
     */
    function setMotionBlur(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xED7F7EFE9FABF340 | Since: 323
     */
    function setCanSwitchWeapon(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEEB64139BA29A7CF | Since: 323
     */
    function setDiesInstantlyInWater(ped: number | Ped, toggle: boolean): void;
    /**
     * Only appears in lamar1 script.
     *
     * Hash: 0x1A330D297AAC6BC1 | Since: 323
     */
    function setLadderClimbInputState(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xC158D28142A34608 | Since: 323
     */
    function stopWeaponFiringWhenDropped(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x5917BBA32D06C230 | Since: 323
     */
    function setScriptedAnimSeatOffset(ped: number | Ped): void;
    /**
     * enum eCombatMovement // 0x4F456B61
     * {
     * CM_Stationary,
     * CM_Defensive,
     * CM_WillAdvance,
     * CM_WillRetreat
     * };
     *
     * Hash: 0x4D9CA1009AFBD057 | Since: 323
     */
    function setCombatMovement(ped: number | Ped, combatMovement: number): void;
    /**
     * See SET_PED_COMBAT_MOVEMENT
     *
     * Hash: 0xDEA92412FCAEB3F5 | Since: 323
     */
    function getCombatMovement(ped: number | Ped): number;
    /**
     * enum eCombatAbility // 0xE793438C
     * {
     * CA_Poor,
     * CA_Average,
     * CA_Professional,
     * CA_NumTypes
     * };
     *
     * Hash: 0xC7622C0D36B2FDA8 | Since: 323
     */
    function setCombatAbility(ped: number | Ped, abilityLevel: number): void;
    /**
     * enum eCombatRange // 0xB69160F5
     * {
     * CR_Near,
     * CR_Medium,
     * CR_Far,
     * CR_VeryFar,
     * CR_NumRanges
     * };
     *
     * Hash: 0x3C606747B23E497B | Since: 323
     */
    function setCombatRange(ped: number | Ped, combatRange: number): void;
    /**
     * See SET_PED_COMBAT_RANGE
     *
     * Hash: 0xF9D9F7F2DB8E2FA0 | Since: 323
     */
    function getCombatRange(ped: number | Ped): number;
    /**
     * enum eCombatAttributes // 0x0E8E7201
     * {
     * BF_CanUseCover = 0,
     * BF_CanUseVehicles = 1,
     * BF_CanDoDrivebys = 2,
     * BF_CanLeaveVehicle = 3,
     * BF_CanUseDynamicStrafeDecisions = 4,
     * BF_AlwaysFight = 5,
     * BF_0x66BB9FCC = 6,
     * BF_0x6837DA41 = 7,
     * BF_0xB4A13A5A = 8,
     * BF_0xEE326AAD = 9,
     * BF_0x7DF2CCFA = 10,
     * BF_0x0036D422 = 11,
     * BF_BlindFireWhenInCover = 12,
     * BF_Aggressive = 13,
     * BF_CanInvestigate = 14,
     * BF_HasRadio = 15,
     * BF_0x6BDE28D1 = 16,
     * BF_AlwaysFlee = 17,
     * BF_0x7852797D = 18,
     * BF_0x33497B95 = 19,
     * BF_CanTauntInVehicle = 20,
     * BF_CanChaseTargetOnFoot = 21,
     * BF_WillDragInjuredPedsToSafety = 22,
     * BF_0xCD7168B8 = 23,
     * BF_UseProximityFiringRate = 24,
     * BF_0x48F914F8 = 25,
     * BF_0x2EA543D0 = 26,
     * BF_PerfectAccuracy = 27,
     * BF_CanUseFrustratedAdvance = 28,
     * BF_0x3D131AC1 = 29,
     * BF_0x3AD95F27 = 30,
     * BF_MaintainMinDistanceToTarget = 31,
     * BF_0xEAD68AD2 = 32,
     * BF_0xA206C2E0 = 33,
     * BF_CanUsePeekingVariations = 34,
     * BF_0xA5715184 = 35,
     * BF_0xD5265533 = 36,
     * BF_0x2B84C2BF = 37,
     * BF_DisableBulletReactions = 38,
     * BF_CanBust = 39,
     * BF_0xAA525726 = 40,
     * BF_CanCommandeerVehicles = 41,
     * BF_CanFlank = 42,
     * BF_SwitchToAdvanceIfCantFindCover = 43,
     * BF_SwitchToDefensiveIfInCover = 44,
     * BF_0xEB4786A0 = 45,
     * BF_CanFightArmedPedsWhenNotArmed = 46,
     * BF_0xA08E9402 = 47,
     * BF_0x952EAD7D = 48,
     * BF_UseEnemyAccuracyScaling = 49,
     * BF_CanCharge = 50,
     * BF_0xDA8C2BD3 = 51,
     * BF_0x6562F017 = 52,
     * BF_0xA2C3D53B = 53,
     * BF_AlwaysEquipBestWeapon = 54,
     * BF_CanSeeUnderwaterPeds = 55,
     * BF_0xF619486B = 56,
     * BF_0x61EB63A3 = 57,
     * BF_DisableFleeFromCombat = 58,
     * BF_0x8976D12B = 59,
     * BF_CanThrowSmokeGrenade = 60,
     * BF_NonMissionPedsFleeFromThisPedUnlessArmed = 61,
     * BF_0x5452A10C = 62,
     * BF_FleesFromInvincibleOpponents = 63,
     * BF_DisableBlockFromPursueDuringVehicleChase = 64,
     * BF_DisableSpinOutDuringVehicleChase = 65,
     * BF_DisableCruiseInFrontDuringBlockDuringVehicleChase = 66,
     * BF_0x0B404731 = 67,
     * BF_DisableReactToBuddyShot = 68,
     * BF_0x7FFD6AEB = 69,
     * BF_0x51F4AEF8 = 70,
     * BF_PermitChargeBeyondDefensiveArea = 71,
     * BF_0x63E0A8E2 = 72,
     * BF_0xDF974436 = 73,
     * BF_0x556C080B = 74,
     * BF_0xA4D50035 = 75,
     * BF_SetDisableShoutTargetPositionOnCombatStart = 76,
     * BF_DisableRespondedToThreatBroadcast = 77,
     * BF_0xCBB01765 = 78,
     * BF_0x4F862ED4 = 79,
     * BF_0xEF9C7C40 = 80,
     * BF_0xE51B494F = 81,
     * BF_0x054D0199 = 82,
     * BF_0xD36BCE94 = 83,
     * BF_0xFB11F690 = 84,
     * BF_0xD208A9AD = 85,
     * BF_AllowDogFighting = 86,
     * BF_0x07A6E531 = 87,
     * BF_0x34F9317B = 88,
     * BF_0x4240F5A9 = 89,
     * BF_0xEE129DBD = 90,
     * BF_0x053AEAD9 = 91
     * };
     *
     * Hash: 0x9F7794730795E019 | Since: 323
     */
    function setCombatAttributes(ped: number | Ped, attributeId: number, enabled: boolean): void;
    /**
     * enum eTargetLossResponseType
     * {
     * TLR_ExitTask,
     * TLR_NeverLoseTarget,
     * TLR_SearchForTarget
     * };
     *
     * Hash: 0x0703B9079823DA4A | Since: 323
     */
    function setTargetLossResponse(ped: number | Ped, responseType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDCCA191DF9980FD7 | Since: 323
     */
    function isPerformingMeleeAction(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFD4CCDBCC59941B7 | Since: 323
     */
    function isPerformingStealthKill(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEBD0EDBA5BE957CF | Since: 323
     */
    function isPerformingACounterAttack(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x863B23EFDE9C5DF2 | Since: 323
     */
    function isBeingStealthKilled(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x18A3E9EE1297FD39 | Since: 323
     */
    function getMeleeTargetFor(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xF9800AA1A771B000 | Since: 323
     */
    function wasKilledByStealth(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7F08E26039C7347C | Since: 323
     */
    function wasKilledByTakedown(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x61767F73EACEED21 | Since: 323
     */
    function wasKnockedOut(ped: number | Ped): boolean;
    /**
     * bit 1 (0x2) = use vehicle
     * bit 15 (0x8000) = force cower
     *
     * Hash: 0x70A2D1137C8ED7C9 | Since: 323
     */
    function setFleeAttributes(ped: number | Ped, attributeFlags: number, enable: boolean): void;
    /**
     * p1: Only "CODE_HUMAN_STAND_COWER" found in the b617d scripts.
     *
     * Hash: 0xA549131166868ED3 | Since: 323
     */
    function setCowerHash(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x2016C603D6B8987C | Since: 323
     */
    function setSteersAroundDeadBodies(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x46F2193B3AD1D891 | Since: 323
     */
    function setSteersAroundPeds(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1509C089ADC208BF | Since: 323
     */
    function setSteersAroundObjects(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEB6FB9D48DDE23EC | Since: 323
     */
    function setSteersAroundVehicles(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA9B61A329BFDCBEA | Since: 323
     */
    function setIsAvoidedByOthers(): void;
    /**
     * No comment provided
     *
     * Hash: 0x570389D1C3DE3C6B | Since: 323
     */
    function setIncreasedAvoidanceRadius(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x576594E8D64375E2 | Since: 323
     */
    function setBlocksPathingWhenDead(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA52D5247A4227E14 | Since: 323
     */
    function setNoTimeDelayBeforeShot(): void;
    /**
     * No comment provided
     *
     * Hash: 0x083961498679DC9F | Since: 323
     */
    function isAnyNearPoint(pos: Vector3, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2208438012482A1A | Since: 323
     */
    function forceAiAndAnimationUpdate(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xFCF37A457CB96DC0 | Since: 323
     */
    function isHeadingTowardsPosition(ped: number | Ped, pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7D7A2E43E74E2EB8 | Since: 323
     */
    function requestVisibilityTracking(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x2BC338A7B21F4608 | Since: 323
     */
    function requestVehicleVisibilityTracking(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xCD018C591F94CB43 | Since: 323
     */
    function requestRestrictedVehicleVisibilityTracking(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x75BA1CB3B7D40CAF | Since: 323
     */
    function requestUseSmallBboxVisibilityTracking(ped: number | Ped): void;
    /**
     * returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.
     *
     *
     * Target needs to be tracked.. won't work otherwise.
     *
     * Hash: 0x91C8E617F64188AC | Since: 323
     */
    function isTrackedVisible(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x511F1A683387C7E2 | Since: 323
     */
    function getTrackedPixelcount(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x4C5E1F087CD10BB7 | Since: 323
     */
    function isTracked(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8507BCB710FA6DC0 | Since: 323
     */
    function hasReceivedEvent(ped: number | Ped, eventId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6CD5A433374D4CFB | Since: 323
     */
    function canSeeHatedPed(ped1: number | Ped, ped2: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9C6A6C19B6C0C496 | Since: 323
     */
    function canShuffleToOrFromTurretSeat(ped: number | Ped): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x2DFC81C9B9608549 | Since: 944
     */
    function canShuffleToOrFromExtraSeat(ped: number | Ped): [boolean, number];
    /**
     * no bone= -1
     *
     * boneIds:
     * SKEL_ROOT = 0x0,
     * SKEL_Pelvis = 0x2e28,
     * SKEL_L_Thigh = 0xe39f,
     * SKEL_L_Calf = 0xf9bb,
     * SKEL_L_Foot = 0x3779,
     * SKEL_L_Toe0 = 0x83c,
     * IK_L_Foot = 0xfedd,
     * PH_L_Foot = 0xe175,
     * MH_L_Knee = 0xb3fe,
     * SKEL_R_Thigh = 0xca72,
     * SKEL_R_Calf = 0x9000,
     * SKEL_R_Foot = 0xcc4d,
     * SKEL_R_Toe0 = 0x512d,
     * IK_R_Foot = 0x8aae,
     * PH_R_Foot = 0x60e6,
     * MH_R_Knee = 0x3fcf,
     * RB_L_ThighRoll = 0x5c57,
     * RB_R_ThighRoll = 0x192a,
     * SKEL_Spine_Root = 0xe0fd,
     * SKEL_Spine0 = 0x5c01,
     * SKEL_Spine1 = 0x60f0,
     * SKEL_Spine2 = 0x60f1,
     * SKEL_Spine3 = 0x60f2,
     * SKEL_L_Clavicle = 0xfcd9,
     * SKEL_L_UpperArm = 0xb1c5,
     * SKEL_L_Forearm = 0xeeeb,
     * SKEL_L_Hand = 0x49d9,
     * SKEL_L_Finger00 = 0x67f2,
     * SKEL_L_Finger01 = 0xff9,
     * SKEL_L_Finger02 = 0xffa,
     * SKEL_L_Finger10 = 0x67f3,
     * SKEL_L_Finger11 = 0x1049,
     * SKEL_L_Finger12 = 0x104a,
     * SKEL_L_Finger20 = 0x67f4,
     * SKEL_L_Finger21 = 0x1059,
     * SKEL_L_Finger22 = 0x105a,
     * SKEL_L_Finger30 = 0x67f5,
     * SKEL_L_Finger31 = 0x1029,
     * SKEL_L_Finger32 = 0x102a,
     * SKEL_L_Finger40 = 0x67f6,
     * SKEL_L_Finger41 = 0x1039,
     * SKEL_L_Finger42 = 0x103a,
     * PH_L_Hand = 0xeb95,
     * IK_L_Hand = 0x8cbd,
     * RB_L_ForeArmRoll = 0xee4f,
     * RB_L_ArmRoll = 0x1470,
     * MH_L_Elbow = 0x58b7,
     * SKEL_R_Clavicle = 0x29d2,
     * SKEL_R_UpperArm = 0x9d4d,
     * SKEL_R_Forearm = 0x6e5c,
     * SKEL_R_Hand = 0xdead,
     * SKEL_R_Finger00 = 0xe5f2,
     * SKEL_R_Finger01 = 0xfa10,
     * SKEL_R_Finger02 = 0xfa11,
     * SKEL_R_Finger10 = 0xe5f3,
     * SKEL_R_Finger11 = 0xfa60,
     * SKEL_R_Finger12 = 0xfa61,
     * SKEL_R_Finger20 = 0xe5f4,
     * SKEL_R_Finger21 = 0xfa70,
     * SKEL_R_Finger22 = 0xfa71,
     * SKEL_R_Finger30 = 0xe5f5,
     * SKEL_R_Finger31 = 0xfa40,
     * SKEL_R_Finger32 = 0xfa41,
     * SKEL_R_Finger40 = 0xe5f6,
     * SKEL_R_Finger41 = 0xfa50,
     * SKEL_R_Finger42 = 0xfa51,
     * PH_R_Hand = 0x6f06,
     * IK_R_Hand = 0x188e,
     * RB_R_ForeArmRoll = 0xab22,
     * RB_R_ArmRoll = 0x90ff,
     * MH_R_Elbow = 0xbb0,
     * SKEL_Neck_1 = 0x9995,
     * SKEL_Head = 0x796e,
     * IK_Head = 0x322c,
     * FACIAL_facialRoot = 0xfe2c,
     * FB_L_Brow_Out_000 = 0xe3db,
     * FB_L_Lid_Upper_000 = 0xb2b6,
     * FB_L_Eye_000 = 0x62ac,
     * FB_L_CheekBone_000 = 0x542e,
     * FB_L_Lip_Corner_000 = 0x74ac,
     * FB_R_Lid_Upper_000 = 0xaa10,
     * FB_R_Eye_000 = 0x6b52,
     * FB_R_CheekBone_000 = 0x4b88,
     * FB_R_Brow_Out_000 = 0x54c,
     * FB_R_Lip_Corner_000 = 0x2ba6,
     * FB_Brow_Centre_000 = 0x9149,
     * FB_UpperLipRoot_000 = 0x4ed2,
     * FB_UpperLip_000 = 0xf18f,
     * FB_L_Lip_Top_000 = 0x4f37,
     * FB_R_Lip_Top_000 = 0x4537,
     * FB_Jaw_000 = 0xb4a0,
     * FB_LowerLipRoot_000 = 0x4324,
     * FB_LowerLip_000 = 0x508f,
     * FB_L_Lip_Bot_000 = 0xb93b,
     * FB_R_Lip_Bot_000 = 0xc33b,
     * FB_Tongue_000 = 0xb987,
     * RB_Neck_1 = 0x8b93,
     * IK_Root = 0xdd1c
     *
     * Hash: 0x3F428D08BE5AAE31 | Since: 323
     */
    function getBoneIndex(ped: number | Ped, boneId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x2057EF813397A772 | Since: 323
     */
    function getRagdollBoneIndex(ped: number | Ped, bone: number): number;
    /**
     * Values look to be between 0.0 and 1.0
     * From decompiled scripts: 0.0, 0.6, 0.65, 0.8, 1.0
     *
     * You are correct, just looked in IDA it breaks from the function if it's less than 0.0f or greater than 1.0f.
     *
     * Hash: 0xBF29516833893561 | Since: 323
     */
    function setEnveffScale(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9C14D30395A51A3C | Since: 323
     */
    function getEnveffScale(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xD2C5AA0C0E8D0F1E | Since: 323
     */
    function setEnableEnveffScale(ped: number | Ped, toggle: boolean): void;
    /**
     * In agency_heist3b.c4, its like this 90% of the time:
     *
     * `PED::SET_PED_ENVEFF_CPV_ADD(ped, 0.099);`
     * `PED::SET_PED_ENVEFF_SCALE(ped, 1.0);`
     * `PED::SET_PED_ENVEFF_CPV_ADD(ped, 87, 81, 68);`
     * `PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);`
     *
     * and its like this 10% of the time:
     *
     * `PED::SET_PED_ENVEFF_CPV_ADD(ped, 0.2);`
     * `PED::SET_PED_ENVEFF_SCALE(ped, 0.65);`
     * `PED::SET_PED_ENVEFF_COLOR_MODULATOR(ped, 74, 69, 60);`
     * `PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);`
     *
     * Hash: 0x110F526AB784111F | Since: 323
     */
    function setEnveffCpvAdd(ped: number | Ped): void;
    /**
     * Something related to the environmental effects natives.
     * In the "agency_heist3b" script, p1 - p3 are always under 100 - usually they are {87, 81, 68}. If SET_PED_ENVEFF_SCALE is set to 0.65 (instead of the usual 1.0), they use {74, 69, 60}
     *
     * Hash: 0xD69411AA0CEBF9E9 | Since: 323
     */
    function setEnveffColorModulator(ped: number | Ped): void;
    /**
     * intensity: 0.0f - 1.0f
     *
     * This native sets the emissive intensity for the given ped. It is used for different 'glow' levels on illuminated clothing.
     *
     * Hash: 0x4E90D746056E273D | Since: 944
     */
    function setEmissiveScale(ped: number | Ped, intensity: number): void;
    /**
     * Use 0x4E90D746056E273D to set the illuminated clothing glow intensity for a specific ped.
     * Returns a float between 0.0 and 1.0 representing the current illuminated clothing glow intensity.
     *
     * Hash: 0x1461B28A06717D68 | Since: 944
     */
    function getEmissiveScale(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x81AA517FBBA05D39 | Since: 944
     */
    function isShaderReady(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE906EC930F5FE7C8 | Since: 791
     */
    function setEnableCrewEmblem(ped: number | Ped, toggle: boolean): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0x1216E0BFA72CC703 | Since: 323
     */
    function requestRagdollBoundsUpdate(): void;
    /**
     * Enable/disable ped shadow (ambient occlusion). https://gfycat.com/thankfulesteemedgecko
     *
     * Hash: 0x2B5AA717A181FB4C | Since: 323
     */
    function setAoBlobRendering(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB8B52E498014F5B0 | Since: 323
     */
    function isSheltered(ped: number | Ped): boolean;
    /**
     * p6 always 2 (but it doesnt seem to matter...)
     *
     * roll and pitch 0
     * yaw to Ped.rotation
     *
     * Hash: 0x8C18E0F9080ADD73 | Since: 323
     */
    function createSynchronizedScene(pos: Vector3, roll: number, pitch: number, yaw: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x62EC273D00187DCA | Since: 323
     */
    function createSynchronizedSceneAtMapObject(pos: Vector3, radius: number, _object: number | string): number;
    /**
     * Returns true if a synchronized scene is running
     *
     * Hash: 0x25D39B935A038A26 | Since: 323
     */
    function isSynchronizedSceneRunning(sceneId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6ACF6B7225801CD7 | Since: 323
     */
    function setSynchronizedSceneOrigin(sceneID: number, pos: Vector3, roll: number, pitch: number, yaw: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x734292F4F0ABF6D0 | Since: 323
     */
    function setSynchronizedScenePhase(sceneID: number, phase: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE4A310B1D7FA73CC | Since: 323
     */
    function getSynchronizedScenePhase(sceneID: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xB6C49F8A5E295A5D | Since: 323
     */
    function setSynchronizedSceneRate(sceneID: number, rate: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD80932D577274D40 | Since: 323
     */
    function getSynchronizedSceneRate(sceneID: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xD9A897A4C6C2974F | Since: 323
     */
    function setSynchronizedSceneLoo(sceneID: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x62522002E0C391BA | Since: 323
     */
    function isSynchronizedSceneLoo(sceneID: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x394B9CD12435C981 | Since: 323
     */
    function setSynchronizedSceneHoldLastFrame(sceneID: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7F2F4F13AC5257EF | Since: 323
     */
    function isSynchronizedSceneHoldLastFrame(sceneID: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x272E4723B56A3B96 | Since: 323
     */
    function attachSynchronizedSceneToEntity(sceneID: number, entity: number | Entity, boneIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6D38F1F04CBB37EA | Since: 323
     */
    function detachSynchronizedScene(sceneID: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCD9CC7E200A52A6F | Since: 323
     */
    function takeOwnershipOfSynchronizedScene(scene: number): void;
    /**
     * Regarding p2, p3 and p4: Most common is 0, 0, 0); followed by 0, 1, 0); and 1, 1, 0); in R* scripts. p4 is very rarely something other than 0.
     *
     * enum eMotionState // 0x92A659FE
     * {
     * MotionState_None = 0xEE717723,
     * MotionState_Idle = 0x9072A713,
     * MotionState_Walk = 0xD827C3DB,
     * MotionState_Run = 0xFFF7E7A4,
     * MotionState_Sprint = 0xBD8817DB,
     * MotionState_Crouch_Idle = 0x43FB099E,
     * MotionState_Crouch_Walk = 0x08C31A98,
     * MotionState_Crouch_Run = 0x3593CF09,
     * MotionState_DoNothing = 0x0EC17E58,
     * MotionState_AnimatedVelocity = 0x551AAC43,
     * MotionState_InVehicle = 0x94D9D58D,
     * MotionState_Aiming = 0x3F67C6AF,
     * MotionState_Diving_Idle = 0x4848CDED,
     * MotionState_Diving_Swim = 0x916E828C,
     * MotionState_Swimming_TreadWater = 0xD1BF11C7,
     * MotionState_Dead = 0x0DBB071C,
     * MotionState_Stealth_Idle = 0x422D7A25,
     * MotionState_Stealth_Walk = 0x042AB6A2,
     * MotionState_Stealth_Run = 0xFB0B79E1,
     * MotionState_Parachuting = 0xBAC0F10B,
     * MotionState_ActionMode_Idle = 0xDA40A0DC,
     * MotionState_ActionMode_Walk = 0xD2905EA7,
     * MotionState_ActionMode_Run = 0x31BADE14,
     * MotionState_Jetpack = 0x535E6A5E
     * };
     *
     * Hash: 0xF28965D04F570DCA | Since: 323
     */
    function forceMotionState(ped: number | Ped, motionStateHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF60165E1D2C5370B | Since: 323
     */
    function getCurrentMoveBlendRatio(ped: number | Ped): [boolean, number, number];
    /**
     * No comment provided
     *
     * Hash: 0x433083750C5E064A | Since: 323
     */
    function setMaxMoveBlendRatio(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x01A898D26E2333DD | Since: 323
     */
    function setMinMoveBlendRatio(ped: number | Ped, value: number): void;
    /**
     * Min: 0.00
     * Max: 10.00
     *
     * Can be used in combo with fast run cheat.
     *
     * When value is set to 10.00:
     * Sprinting without fast run cheat: 66 m/s
     * Sprinting with fast run cheat: 77 m/s
     *
     * Needs to be looped!
     *
     * Note: According to IDA for the Xbox360 xex, when they check bgt they seem to have the min to 0.0f, but the max set to 1.15f not 10.0f.
     *
     * Hash: 0x085BF80FA50A39D1 | Since: 323
     */
    function setMoveRateOverride(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0B3E35AC043707D9 | Since: 573
     */
    function setMoveRateInWaterOverride(ped: number | Ped): void;
    /**
     * Checks if the specified sexiness flag is set
     *
     * enum eSexinessFlags
     * {
     * SF_JEER_AT_HOT_PED = 0,
     * SF_HURRIEDFEMALES_SEXY = 1,
     * SF_HOT_PERSON = 2,
     * };
     *
     * Hash: 0x46B05BCAE43856B0 | Since: 323
     */
    function hasSexinessFlagSet(ped: number | Ped, sexinessFlag: number): boolean;
    /**
     * Returns size of array, passed into the second variable.
     *
     * See below for usage information.
     *
     * This function actually requires a struct, where the first value is the maximum number of elements to return.  Here is a sample of how I was able to get it to work correctly, without yet knowing the struct format.
     *
     * //Setup the array
     * const int numElements = 10;
     * const int arrSize = numElements * 2 + 2;
     * Any veh[arrSize];
     * //0 index is the size of the array
     * veh[0] = numElements;
     *
     * `int count = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), veh);`
     *
     * if (veh != NULL)
     * {
     * //Simple loop to go through results
     * for (int i = 0; i < count; i++)
     * {
     * int offsettedID = i * 2 + 2;
     * //Make sure it exists
     * `if (veh[offsettedID] != NULL && ENTITY::DOES_ENTITY_EXIST(veh[offsettedID]))`
     * {
     * //Do something
     * }
     * }
     * }
     *
     * Hash: 0xCFF869CBFA210D82 | Since: 323
     */
    function getNearbyVehicles(ped: number | Ped): [number, any];
    /**
     * sizeAndPeds - is a pointer to an array. The array is filled with peds found nearby the ped supplied to the first argument.
     * ignore - ped type to ignore
     *
     * Return value is the number of peds found and added to the array passed.
     *
     * -----------------------------------
     *
     * To make this work in most menu bases at least in C++ do it like so,
     *
     * Formatted Example: https://pastebin.com/D8an9wwp
     *
     * -----------------------------------
     *
     * Example: gtaforums.com/topic/789788-function-args-to-pedget-ped-nearby-peds/?p=1067386687
     *
     * Hash: 0x23F8F5FC7E8C4A6B | Since: 323
     */
    function getNearbyPeds(ped: number | Ped, ignore: number): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0x7350823473013C02 | Since: 323
     */
    function haveAllStreamingRequestsCompleted(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x00E73468D085F745 | Since: 323
     */
    function isUsingActionMode(ped: number | Ped): boolean;
    /**
     * p2 is usually -1 in the scripts. action is either 0 or "DEFAULT_ACTION".
     *
     * Hash: 0xD75ACCF5E0FB5367 | Since: 323
     */
    function setUsingActionMode(ped: number | Ped, action: string): void;
    /**
     * name: "MP_FEMALE_ACTION" found multiple times in the b617d scripts.
     *
     * Hash: 0x781DE8FA214E87D2 | Since: 323
     */
    function setMovementModeOverride(ped: number | Ped, name: string): void;
    /**
     * Overrides the ped's collision capsule radius for the current tick.
     * Must be called every tick to be effective.
     *
     * Setting this to 0.001 will allow warping through some objects.
     *
     * Hash: 0x364DF566EC833DE2 | Since: 323
     */
    function setCapsule(ped: number | Ped, value: number): void;
    /**
     * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
     *
     * Hash: 0x4462658788425076 | Since: 323
     */
    function registerheadshot(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0xBA8805A1108A2515 | Since: 877
     */
    function registerheadshotHires(ped: number | Ped): number;
    /**
     * Similar to REGISTER_PEDHEADSHOT but creates a transparent background instead of black. Example: https://i.imgur.com/iHz8ztn.png
     *
     * Hash: 0x953563CE563143AF | Since: 323
     */
    function registerheadshotTransparent(ped: number | Ped): number;
    /**
     * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
     *
     * Hash: 0x96B1361D9B24C2FF | Since: 323
     */
    function unregisterheadshot(id: number): void;
    /**
     * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
     *
     * Hash: 0xA0A9668F158129A2 | Since: 323
     */
    function isheadshotValid(id: number): boolean;
    /**
     * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
     *
     * Hash: 0x7085228842B13A67 | Since: 323
     */
    function isheadshotReady(id: number): boolean;
    /**
     * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
     *
     * Hash: 0xDB4EACD4AD0A5D6B | Since: 323
     */
    function getheadshotTxdString(id: number): string;
    /**
     * No comment provided
     *
     * Hash: 0xF0DAEF2F545BEE25 | Since: 323
     */
    function requestheadshotImgUpload(id: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5D517B27CF6ECD04 | Since: 323
     */
    function releaseheadshotImgUpload(id: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEBB376779A760AA8 | Since: 323
     */
    function isheadshotImgUploadAvailable(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x876928DDDFCCC9CD | Since: 323
     */
    function hasheadshotImgUploadFailed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE8A169E666CBC541 | Since: 323
     */
    function hasheadshotImgUploadSucceeded(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC1F6EBF9A3D55538 | Since: 323
     */
    function setHeatscaleOverride(ped: number | Ped, heatScale: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x600048C60D5C2C51 | Since: 323
     */
    function disableHeatscaleOverride(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x2DF9038C90AD5264 | Since: 323
     */
    function spawnpointsStartSearch(interiorFlags: number, scale: number, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB2AFF10216DEFA2F | Since: 323
     */
    function spawnpointsStartSearchInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, interiorFlags: number, scale: number, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFEE4A5459472A9F8 | Since: 323
     */
    function spawnpointsCancelSearch(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3C67506996001F5E | Since: 323
     */
    function spawnpointsIsSearchActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA586FBEB32A53DBB | Since: 323
     */
    function spawnpointsIsSearchComplete(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF445DE8DA80A1792 | Since: 323
     */
    function spawnpointsIsSearchFailed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA635C11B8C44AFC2 | Since: 323
     */
    function spawnpointsGetNumSearchResults(): number;
    /**
     * No comment provided
     *
     * Hash: 0x280C7E3AC7F56E90 | Since: 323
     */
    function spawnpointsGetSearchResult(randomInt: number): [number, number, number];
    /**
     * No comment provided
     *
     * Hash: 0xB782F8238512BAD5 | Since: 323
     */
    function spawnpointsGetSearchResultFlags(): number;
    /**
     * No comment provided
     *
     * Hash: 0xC32779C16FCEECD9 | Since: 323
     */
    function setIkTarget(ped: number | Ped, ikIndex: number, entityLookAt: number | Entity, boneLookAt: number, offsetX: number, offsetY: number, offsetZ: number, blendInDuration: number, blendOutDuration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xED3C76ADFA6D07C4 | Since: 323
     */
    function forceInstantLegIkSetup(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x290E2780BB7AA598 | Since: 323
     */
    function requestActionModeAsset(asset: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xE4B5F4BF2CB24E65 | Since: 323
     */
    function hasActionModeAssetLoaded(asset: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x13E940F88470FA51 | Since: 323
     */
    function removeActionModeAsset(asset: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x2A0A62FCDEE16D4F | Since: 323
     */
    function requestStealthModeAsset(asset: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xE977FC5B08AF3441 | Since: 323
     */
    function hasStealthModeAssetLoaded(asset: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9219857D21F0E842 | Since: 323
     */
    function removeStealthModeAsset(asset: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC2C5C242AAC342B | Since: 323
     */
    function setLodMultiplier(ped: number | Ped, multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE861D0B05C7662B8 | Since: 323
     */
    function setCanLosePropsOnDamage(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x129466ED55140F8D | Since: 323
     */
    function setForceFootstepUpdate(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCB968B53FC7F916D | Since: 323
     */
    function setForceStepType(ped: number | Ped, _type: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x68772DB2B2526F9F | Since: 323
     */
    function isAnyHostileNearPoint(ped: number | Ped, pos: Vector3, radius: number): boolean;
    /**
     * Toggles config flag CPED_CONFIG_FLAG_CanPlayInCarIdles.
     *
     * Hash: 0x820E9892A77E97CD | Since: 877
     */
    function setCanPlayInCarIdles(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x06087579E7AA85A9 | Since: 323
     */
    function isTargetInPerceptionArea(ped: number | Ped, targetPed: number | Ped): boolean;
    /**
     * Min and max are usually 100.0 and 200.0
     *
     * Hash: 0xD8C3BE3EE94CAF2D | Since: 323
     */
    function setPopControlSphereThisFrame(pos: Vector3, min: number, max: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD33DAA36272177C4 | Since: 323
     */
    function forceZeroMassInCollisions(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x711794453CFD692B | Since: 463
     */
    function setDisableHighFallDeath(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x83A169EABCDB10A2 | Since: 323
     */
    function setPhonePaletteIdx(): void;
    /**
     * No comment provided
     *
     * Hash: 0x288DF530C92DAD6F | Since: 323
     */
    function setSteerBias(ped: number | Ped, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3795688A307E1EB6 | Since: 505
     */
    function isSwitchingWeapon(Ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0F62619393661D6E | Since: 877
     */
    function setTreatedAsFriendly(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDFE68C4B787E1BFB | Since: 1180
     */
    function setDisableMapCollision(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xEE2476B9EE4A094F | Since: 1493
     */
    function enableMpLight(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x88274C11CF0D866D | Since: 1493
     */
    function getMpLightEnabled(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x637822DC2AFEEBF8 | Since: 1493
     */
    function clearCoverPointFor(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xFAB944D4D481ACCB | Since: 1734
     */
    function setAllowStuntJumpCamera(ped: number | Ped, toggle: boolean): void;
}
export declare namespace physics {
    /**
     * Creates a rope at the specific position, that extends in the specified direction when not attached to any entities.
     * __
     *
     * Add_Rope(pos.x,pos.y,pos.z,0.0,0.0,0.0,20.0,4,20.0,1.0,0.0,false,false,false,5.0,false,NULL)
     *
     * When attached, Position<vector> does not matter
     * When attached, Angle<vector> does not matter
     *
     * Rope Type:
     * 4 and bellow is a thick rope
     * 5 and up are small metal wires
     * 0 crashes the game
     *
     * Max_length - Rope is forced to this length, generally best to keep this the same as your rope length.
     *
     * windingSpeed - Speed the Rope is being winded, using native START_ROPE_WINDING. Set positive for winding and negative for unwinding.
     *
     * Rigid - If max length is zero, and this is set to false the rope will become rigid (it will force a specific distance, what ever length is, between the objects).
     *
     * breakable - Whether or not shooting the rope will break it.
     *
     * unkPtr - unknown ptr, always 0 in orig scripts
     * __
     *
     * Lengths can be calculated like so:
     *
     * float distance = abs(x1 - x2) + abs(y1 - y2) + abs(z1 - z2); // Rope length
     *
     *
     * NOTES:
     *
     * Rope does NOT interact with anything you attach it to, in some cases it make interact with the world AFTER it breaks (seems to occur if you set the type to -1).
     *
     * Rope will sometimes contract and fall to the ground like you'd expect it to, but since it doesn't interact with the world the effect is just jaring.
     *
     * Hash: 0xE832D760399EB220 | Since: 323
     */
    function addRope(pos: Vector3, rot: Vector3, length: number, ropeType: number, maxLength: number, minLength: number, windingSpeed: number, rigid: boolean, breakWhenShot: boolean): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0x52B4829281364649 | Since: 323
     */
    function deleteRope(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAA5D6B1888E4DB20 | Since: 323
     */
    function deleteChildRope(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFD5448BE3111ED96 | Since: 323
     */
    function doesRopeExist(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xA1AE736541B0FCA3 | Since: 1868
     */
    function ropeDrawEnabled(): number;
    /**
     * No comment provided
     *
     * Hash: 0xF159A63806BB5BA8 | Since: 323
     */
    function ropeDrawShadowEnabled(toggle: boolean): number;
    /**
     * Rope presets can be found in the gamefiles. One example is "ropeFamily3", it is NOT a hash but rather a string.
     *
     * Hash: 0xCBB203C04D1ABD27 | Since: 323
     */
    function loadRopeData(ropeId: number, rope_preset: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x2B320CF14146B69A | Since: 323
     */
    function pinRopeVertex(ropeId: number, vertex: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x4B5AE2EEE4A8F180 | Since: 323
     */
    function unpinRopeVertex(ropeId: number, vertex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3655F544CD30F0B5 | Since: 323
     */
    function getRopeVertexCount(ropeId: number): number;
    /**
     * Attaches entity 1 to entity 2.
     *
     * Hash: 0x3D95EC8B6D940AC3 | Since: 323
     */
    function attachEntitiesToRope(ropeId: number, ent1: number | Entity, ent2: number | Entity, ent1_x: number, ent1_y: number, ent1_z: number, ent2_x: number, ent2_y: number, ent2_z: number, length: number): [any, any];
    /**
     * The position supplied can be anywhere, and the entity should anchor relative to that point from it's origin.
     *
     * Hash: 0x4B490A6832559A65 | Since: 323
     */
    function attachRopeToEntity(ropeId: number, entity: number | Entity, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xBCF3026912A8647D | Since: 323
     */
    function detachRopeFromEntity(ropeId: number, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xC8D667EE52114ABA | Since: 323
     */
    function ropeSetUpdatePinverts(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC57A637A20006ED | Since: 323
     */
    function ropeSetUpdateOrder(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x36CCB9BE67B970FD | Since: 323
     */
    function ropeSetSmoothReelin(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x84DE3B5FB3E666F0 | Since: 323
     */
    function isRopeAttachedAtBothEnds(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x21BB0FBD3E217C2D | Since: 323
     */
    function getRopeLastVertexCoord(ropeId: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xEA61CA8E80F09E4D | Since: 323
     */
    function getRopeVertexCoord(ropeId: number, vertex: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x1461C72C889E343E | Since: 323
     */
    function startRopeWinding(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCB2D4AB84A19AA7C | Since: 323
     */
    function stopRopeWinding(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x538D1179EC1AA9A9 | Since: 323
     */
    function startRopeUnwindingFront(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFFF3A50779EFBBB3 | Since: 323
     */
    function stopRopeUnwindingFront(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5389D48EFA2F079A | Since: 323
     */
    function ropeConvertToSimple(ropeId: number): void;
    /**
     * Loads rope textures for all ropes in the current scene.
     *
     * Hash: 0x9B9039DBF2D258C1 | Since: 323
     */
    function ropeLoadTextures(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF2D0E6A75CC05597 | Since: 323
     */
    function ropeAreTexturesLoaded(): boolean;
    /**
     * Unloads rope textures for all ropes in the current scene.
     *
     * Hash: 0x6CE36C35C1AC8163 | Since: 323
     */
    function ropeUnloadTextures(): void;
    /**
     * No comment provided
     *
     * Hash: 0x271C9D3ACA5D6409 | Since: 323
     */
    function doesScriptOwnRope(ropeId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBC0CE682D4D05650 | Since: 323
     */
    function ropeAttachVirtualBoundGeom(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB1B6216CA2E7B55E | Since: 323
     */
    function ropeChangeScriptOwner(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB743F735C03D7810 | Since: 323
     */
    function ropeSetRefframevelocityColliderorder(ropeId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x73040398DFF9A4A6 | Since: 323
     */
    function ropeGetDistanceBetweenEnds(ropeId: number): number;
    /**
     * Forces a rope to a certain length.
     *
     * Hash: 0xD009F759A723DB1B | Since: 323
     */
    function ropeForceLength(ropeId: number, length: number): void;
    /**
     * Reset a rope to a certain length.
     *
     * Hash: 0xC16DE94D9BEA14A0 | Since: 323
     */
    function ropeResetLength(ropeId: number, length: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE37F721824571784 | Since: 323
     */
    function applyImpulseToCloth(pos: Vector3, vecX: number, vecY: number, vecZ: number, impulse: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEEA3B200A6FEB65B | Since: 323
     */
    function setDamping(entity: number | Entity, vertex: number, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8C520A929415BCD2 | Since: 3407
     */
    function getDamping(entity: number | Entity, _type: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x710311ADF0E20730 | Since: 323
     */
    function activate(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0xD8FA3908D7B86904 | Since: 323
     */
    function setCgoffset(entity: number | Entity, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x8214A4B5A7A33612 | Since: 323
     */
    function getCgoffset(entity: number | Entity): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xBE520D9761FF811F | Since: 323
     */
    function setCgAtBoundcenter(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x2E648D16F6E308F3 | Since: 323
     */
    function breakEntityGlass(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x0C112765300C7E1E | Since: 505
     */
    function getIsEntityAFrag(_object: number | Object): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5CEC1A84620E7D5B | Since: 323
     */
    function setDisableBreaking(_object: number | Object, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCC6E963682533882 | Since: 323
     */
    function resetDisableBreaking(_object: number | Object): void;
    /**
     * No comment provided
     *
     * Hash: 0x01BA3AED21C16CFB | Since: 323
     */
    function setDisableFragDamage(_object: number | Object, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x15F944730C832252 | Since: 463
     */
    function setUseKinematic(entity: number | Entity, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9EBD751E5787BAF2 | Since: 791
     */
    function setInStuntMode(): void;
    /**
     * Related to the lower-end of a vehicles fTractionCurve, e.g., from standing starts and acceleration from low/zero speeds.
     *
     * Hash: 0xAA6A6098851C396F | Since: 1604
     */
    function setInArenaMode(toggle: boolean): void;
}
export declare namespace player {
    /**
     * Gets the ped for a specified player index.
     *
     * Hash: 0x43A66C31C68491C0 | Since: 323
     */
    function getPed(player: number | string | Player): number;
    /**
     * `Does the same like PLAYER::GET_PLAYER_PED`
     *
     * Hash: 0x50FAC3A3E030A6E1 | Since: 323
     */
    function getPedScriptIndex(player: number | string | Player): number;
    /**
     * Set the model for a specific Player. Be aware that this will destroy the current Ped for the Player and create a new one, any reference to the old ped should be reset
     * Make sure to request the model first and wait until it has loaded.
     *
     * Hash: 0x00A1CADD00108836 | Since: 323
     */
    function setModel(player: number | string | Player, model: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x048189FAC643DEEE | Since: 323
     */
    function changePed(player: number | string | Player, ped: number | Ped, resetDamage: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE902EF951DCE178F | Since: 323
     */
    function getRgbColour(player: number | string | Player): [number, number, number];
    /**
     * Gets the number of players in the current session.
     * If not multiplayer, always returns 1.
     *
     * Hash: 0x407C7F91DDB46C16 | Since: 323
     */
    function getNumberOfs(): number;
    /**
     * Gets the player's team.
     * Does nothing in singleplayer.
     *
     * Hash: 0x37039302F4E0A008 | Since: 323
     */
    function getTeam(player: number | string | Player): number;
    /**
     * Set player team on deathmatch and last team standing..
     *
     * Hash: 0x0299FA38396A4940 | Since: 323
     */
    function setTeam(player: number | string | Player, team: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1FC200409F10E6F1 | Since: 1180
     */
    function getNumberOfsInTeam(team: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x6D0DE6A7B5DA71F8 | Since: 323
     */
    function getName(player: number | string | Player): string;
    /**
     * Remnant from GTA IV. Does nothing in GTA V.
     *
     * Hash: 0x085DEB493BE80812 | Since: 323
     */
    function getWantedLevelRadius(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x0C92BA89F1AF26F8 | Since: 323
     */
    function getWantedCentrePosition(player: number | string | Player): Vector3;
    /**
     * # Predominant call signatures
     * `PLAYER::SET_PLAYER_WANTED_CENTRE_POSITION(PLAYER::PLAYER_ID(), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1));`
     *
     * # Parameter value ranges
     * `P0: PLAYER::PLAYER_ID()`
     * `P1: ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)`
     * P2: Not set by any call
     *
     * Hash: 0x520E541A97A13354 | Since: 323
     */
    function setWantedCentrePosition(player: number | string | Player): Vector3;
    /**
     * Drft
     *
     * Hash: 0xFDD179EAF45B556C | Since: 323
     */
    function getWantedLevelThreshold(wantedLevel: number): number;
    /**
     * Call SET_PLAYER_WANTED_LEVEL_NOW for immediate effect
     *
     * wantedLevel is an integer value representing 0 to 5 stars even though the game supports the 6th wanted level but no police will appear since no definitions are present for it in the game files
     *
     * disableNoMission-  Disables When Off Mission- appears to always be false
     *
     *
     * Hash: 0x39FF19C64EF7DA5B | Since: 323
     */
    function setWantedLevel(player: number | string | Player, wantedLevel: number, disableNoMission: boolean): void;
    /**
     * p2 is always false in R* scripts
     *
     * Hash: 0x340E61DE7F471565 | Since: 323
     */
    function setWantedLevelNoDrop(player: number | string | Player, wantedLevel: number): void;
    /**
     * Forces any pending wanted level to be applied to the specified player immediately.
     *
     * Call SET_PLAYER_WANTED_LEVEL with the desired wanted level, followed by SET_PLAYER_WANTED_LEVEL_NOW.
     *
     * Second parameter is unknown (always false).
     *
     * Hash: 0xE0A7D1E497FFCD6F | Since: 323
     */
    function setWantedLevelNow(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xAFAF86043E5874E9 | Since: 323
     */
    function areFlashingStarsAboutToDrop(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0A6EB355EE14A2DB | Since: 323
     */
    function areStarsGreyedOut(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7E07C78925D5FD96 | Since: 372
     */
    function isWantedAndHasBeenSeenByCops(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDB172424876553F4 | Since: 323
     */
    function setDispatchCopsFor(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x238DB2A2C23EE9EF | Since: 323
     */
    function isWantedLevelGreater(player: number | string | Player, wantedLevel: number): boolean;
    /**
     * `This executes at the same as speed as PLAYER::SET_PLAYER_WANTED_LEVEL(player, 0, false);`
     *
     * `PLAYER::GET_PLAYER_WANTED_LEVEL(player); executes in less than half the time. Which means that it's worth first checking if the wanted level needs to be cleared before clearing. However, this is mostly about good code practice and can important in other situations. The difference in time in this example is negligible.`
     *
     * Hash: 0xB302540597885499 | Since: 323
     */
    function clearWantedLevel(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x424D4687FA1E5652 | Since: 323
     */
    function isDead(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFA1E2BF8B10598F9 | Since: 323
     */
    function isPressingHorn(player: number | string | Player): boolean;
    /**
     * Flags:
     * SPC_AMBIENT_SCRIPT = (1 << 1),
     * SPC_CLEAR_TASKS = (1 << 2),
     * SPC_REMOVE_FIRES = (1 << 3),
     * SPC_REMOVE_EXPLOSIONS = (1 << 4),
     * SPC_REMOVE_PROJECTILES = (1 << 5),
     * SPC_DEACTIVATE_GADGETS = (1 << 6),
     * SPC_REENABLE_CONTROL_ON_DEATH = (1 << 7),
     * SPC_LEAVE_CAMERA_CONTROL_ON = (1 << 8),
     * SPC_ALLOW_PLAYER_DAMAGE = (1 << 9),
     * SPC_DONT_STOP_OTHER_CARS_AROUND_PLAYER = (1 << 10),
     * SPC_PREVENT_EVERYBODY_BACKOFF = (1 << 11),
     * SPC_ALLOW_PAD_SHAKE = (1 << 12)
     *
     * See: https://alloc8or.re/gta5/doc/enums/eSetPlayerControlFlag.txt
     *
     * Hash: 0x8D32347D6D4C40A2 | Since: 323
     */
    function setControl(player: number | string | Player, bHasControl: boolean, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE28E54788CE8F12D | Since: 323
     */
    function getWantedLevel(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xAA5F02DB48D704B9 | Since: 323
     */
    function setMaxWantedLevel(maxWantedLevel: number): void;
    /**
     * If toggle is set to false:
     * The police won't be shown on the (mini)map
     *
     * If toggle is set to true:
     * The police will be shown on the (mini)map
     *
     * Hash: 0x43286D561B72B8BF | Since: 323
     */
    function setPoliceRadarBlips(toggle: boolean): void;
    /**
     * The player will be ignored by the police if toggle is set to true
     *
     * Hash: 0x32C62AA929C2DA6A | Since: 323
     */
    function setPoliceIgnore(player: number | string | Player, toggle: boolean): void;
    /**
     * Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.
     *
     * Hash: 0x5E9564D8246B909A | Since: 323
     */
    function isPlaying(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8EEDA153AD141BA4 | Since: 323
     */
    function setEveryoneIgnore(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x056E0FE8534C2949 | Since: 323
     */
    function setAllRandomPedsFlee(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x471D2FF42A94B4F2 | Since: 323
     */
    function setAllRandomPedsFleeThisFrame(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xDE45D1A1EF45EE61 | Since: 323
     */
    function setAllNeutralRandomPedsFlee(player: number | string | Player, toggle: boolean): void;
    /**
     * - This is called after SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME
     *
     *
     * Hash: 0xC3376F42B1FACCC6 | Since: 323
     */
    function setAllNeutralRandomPedsFleeThisFrame(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xFAC75988A7D078D3 | Since: 463
     */
    function setLawPedsCanAttackNonWantedThisFrame(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x596976B02B6B5700 | Since: 323
     */
    function setIgnoreLowPriorityShockingEvents(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x020E5F00CDA207BA | Since: 323
     */
    function setWantedLevelMultiplier(multiplier: number): void;
    /**
     * Max value is 1.0
     *
     * Hash: 0x9B0BB33B04405E7A | Since: 323
     */
    function setWantedLevelDifficulty(player: number | string | Player, difficulty: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB9D0DD990DC141DD | Since: 323
     */
    function resetWantedLevelDifficulty(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xA72200F51875FEA4 | Since: 2372
     */
    function getWantedLevelTimeToEscape(): number;
    /**
     * No comment provided
     *
     * Hash: 0x49B856B1360C47C7 | Since: 2060
     */
    function setWantedLevelHiddenEscapeTime(player: number | string | Player, wantedLevel: number, lossTime: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x823EC8E82BA45986 | Since: 2060
     */
    function resetWantedLevelHiddenEscapeTime(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF9BD71691857E48 | Since: 323
     */
    function startFiringAmnesty(duration: number): void;
    /**
     * `PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(), 37, PLAYER::GET_WANTED_LEVEL_THRESHOLD(1));`
     *
     * From am_armybase.ysc.c4:
     *
     * `PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(4), 36, PLAYER::GET_WANTED_LEVEL_THRESHOLD(4));`
     *
     * -----
     *
     * This was taken from the GTAV.exe v1.334. The function is called sub_140592CE8. For a full decompilation of the function, see here: https://pastebin.com/09qSMsN7
     *
     * -----
     * crimeType:
     * 1: Firearms possession
     * 2: Person running a red light ("5-0-5")
     * 3: Reckless driver
     * 4: Speeding vehicle (a "5-10")
     * 5: Traffic violation (a "5-0-5")
     * 6: Motorcycle rider without a helmet
     * 7: Vehicle theft (a "5-0-3")
     * 8: Grand Theft Auto
     * 9: ???
     * 10: ???
     * 11: Assault on a civilian (a "2-40")
     * 12: Assault on an officer
     * 13: Assault with a deadly weapon (a "2-45")
     * 14: Officer shot (a "2-45")
     * 15: Pedestrian struck by a vehicle
     * 16: Officer struck by a vehicle
     * 17: Helicopter down (an "AC"?)
     * 18: Civilian on fire (a "2-40")
     * 19: Officer set on fire (a "10-99")
     * 20: Car on fire
     * 21: Air unit down (an "AC"?)
     * 22: An explosion (a "9-96")
     * 23: A stabbing (a "2-45") (also something else I couldn't understand)
     * 24: Officer stabbed (also something else I couldn't understand)
     * 25: Attack on a vehicle ("MDV"?)
     * 26: Damage to property
     * 27: Suspect threatening officer with a firearm
     * 28: Shots fired
     * 29: ???
     * 30: ???
     * 31: ???
     * 32: ???
     * 33: ???
     * 34: A "2-45"
     * 35: ???
     * 36: A "9-25"
     * 37: ???
     * 38: ???
     * 39: ???
     * 40: ???
     * 41: ???
     * 42: ???
     * 43: Possible disturbance
     * 44: Civilian in need of assistance
     * 45: ???
     * 46: ???
     *
     * Hash: 0xE9B09589827545E7 | Since: 323
     */
    function reportCrime(player: number | string | Player, crimeType: number, wantedLvlThresh: number): void;
    /**
     * crimeType: see REPORT_CRIME
     *
     * Hash: 0x9A987297ED8BD838 | Since: 323
     */
    function suppressCrimeThisFrame(player: number | string | Player, crimeType: number): void;
    /**
     * This native is used in both singleplayer and multiplayer scripts.
     *
     * Always used like this in scripts
     * `PLAYER::UPDATE_WANTED_POSITION_THIS_FRAME(PLAYER::PLAYER_ID());`
     *
     * Hash: 0xBC9490CA15AEA8FB | Since: 323
     */
    function updateWantedPositionThisFrame(player: number | string | Player): void;
    /**
     * This has been found in use in the decompiled files.
     *
     * Hash: 0x4669B3ED80F24B4E | Since: 323
     */
    function suppressLosingWantedLevelIfHiddenThisFrame(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F41A3BAE005E5FA | Since: 372
     */
    function allowEvasionHudIfDisablingHiddenEvasionThisFrame(player: number | string | Player): void;
    /**
     * This has been found in use in the decompiled files.
     *
     * Hash: 0xAD73CE5A09E42D12 | Since: 323
     */
    function forceStartHiddenEvasion(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x36F1B38855F2A8DF | Since: 323
     */
    function suppressWitnessesCallingPoliceThisFrame(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC64D2C53493ED12 | Since: 323
     */
    function reportPoliceSpotted(player: number | string | Player): void;
    /**
     * `PLAYER::SET_LAW_RESPONSE_DELAY_OVERRIDE(rPtr((&l_122) + 71)); // Found in decompilation`
     *
     * <strong></strong>
     *
     * In "am_hold_up.ysc" used once:
     *
     * `l_8d._f47 = MISC::GET_RANDOM_FLOAT_IN_RANGE(18.0, 28.0);`
     * `PLAYER::SET_LAW_RESPONSE_DELAY_OVERRIDE((l_8d._f47));`
     *
     * Hash: 0xB45EFF719D8427A6 | Since: 323
     */
    function setLawResponseDelayOverride(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0032A6DBA562C518 | Since: 323
     */
    function resetLawResponseDelayOverride(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDE7465A27D403C06 | Since: 323
     */
    function canStartMission(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x908CBECC2CAA3690 | Since: 323
     */
    function isReadyForCutscene(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7912F7FC4F6264B6 | Since: 323
     */
    function isTargettingEntity(player: number | string | Player, entity: number | Entity): boolean;
    /**
     * Assigns the handle of locked-on melee target to *entity that you pass it.
     * Returns false if no entity found.
     *
     * Hash: 0x13EDE1A5DBF797C9 | Since: 323
     */
    function getTargetEntity(player: number | string | Player): [boolean, number];
    /**
     * Gets a value indicating whether the specified player is currently aiming freely.
     *
     * Hash: 0x2E397FD2ECD37C87 | Since: 323
     */
    function isFreeAiming(player: number | string | Player): boolean;
    /**
     * Gets a value indicating whether the specified player is currently aiming freely at the specified entity.
     *
     * Hash: 0x3C06B5C839B38F7B | Since: 323
     */
    function isFreeAimingAtEntity(player: number | string | Player, entity: number | Entity): boolean;
    /**
     * Returns TRUE if it found an entity in your crosshair within range of your weapon. Assigns the handle of the target to the *entity that you pass it.
     * Returns false if no entity found.
     *
     * Hash: 0x2975C866E6713290 | Since: 323
     */
    function getEntityIsFreeAimingAt(player: number | string | Player): [boolean, number];
    /**
     * Affects the range of auto aim target.
     *
     * Hash: 0x29961D490E5814FD | Since: 323
     */
    function setLockonRangeOverride(player: number | string | Player, range: number): void;
    /**
     * Set whether this player should be able to do drive-bys.
     *
     * "A drive-by is when a ped is aiming/shooting from vehicle. This includes middle finger taunts. By setting this value to false I confirm the player is unable to do all that. Tested on tick."
     *
     *
     * Hash: 0x6E8834B52EC20C77 | Since: 323
     */
    function setCanDoDriveBy(player: number | string | Player, toggle: boolean): void;
    /**
     * Sets whether this player can be hassled by gangs.
     *
     * Hash: 0xD5E460AD7020A246 | Since: 323
     */
    function setCanBeHassledByGangs(player: number | string | Player, toggle: boolean): void;
    /**
     * Sets whether this player can take cover.
     *
     * Hash: 0xD465A8599DFF6814 | Since: 323
     */
    function setCanUseCover(player: number | string | Player, toggle: boolean): void;
    /**
     * Gets the maximum wanted level the player can get.
     * Ranges from 0 to 5.
     *
     * Hash: 0x462E0DB9B137DC5F | Since: 323
     */
    function getMaxWantedLevel(): number;
    /**
     * No comment provided
     *
     * Hash: 0x78CFE51896B6B8A4 | Since: 323
     */
    function isTargettingAnything(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA01B8075D8B92DF4 | Since: 323
     */
    function setSprint(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA6F312FCCE9C1DFE | Since: 323
     */
    function resetStamina(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xA352C1B864CAFD33 | Since: 323
     */
    function restoreStamina(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x3F9F16F8E65A7ED7 | Since: 323
     */
    function getSprintStaminaRemaining(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x1885BC9B108B4C99 | Since: 323
     */
    function getSprintTimeRemaining(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xA1FCF8E6AF40B731 | Since: 323
     */
    function getUnderwaterTimeRemaining(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xA0D3E4F7AAFB7E78 | Since: 757
     */
    function setUnderwaterBreathPercentRemaining(player: number | string | Player, time: number): number;
    /**
     * Returns the group ID the player is member of.
     *
     * Hash: 0x0D127585F77030AF | Since: 323
     */
    function getGroup(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x92659B4CE1863CB3 | Since: 323
     */
    function getMaxArmour(player: number | string | Player): number;
    /**
     * Can the player control himself, used to disable controls for player for things like a cutscene.
     *
     * ---
     *
     * You can't disable controls with this, use SET_PLAYER_CONTROL(...) for this.
     *
     * Hash: 0x49C32D60007AFA47 | Since: 323
     */
    function isControlOn(player: number | string | Player): boolean;
    /**
     * Returns true when the player is not able to control the cam i.e. when running a benchmark test, switching the player or viewing a cutscene.
     *
     * Note: I am not 100% sure if the native actually checks if the cam control is disabled but it seems promising.
     *
     * Hash: 0x7C814D2FB49F40C0 | Since: 323
     */
    function getAreCameraControlsDisabled(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8A876A65283DD7D7 | Since: 323
     */
    function isScriptControlOn(player: number | string | Player): boolean;
    /**
     * Returns TRUE if the player ('s ped) is climbing at the moment.
     *
     * Hash: 0x95E8F73DC65EFB9C | Since: 323
     */
    function isClimbing(player: number | string | Player): boolean;
    /**
     * Return true while player is being arrested / busted.
     *
     * If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)
     *
     * If atArresting is set to 0, this function will return 1 only when the busted screen is shown.
     *
     * Hash: 0x388A47C51ABDAC8E | Since: 323
     */
    function isBeingArrested(player: number | string | Player, atArresting: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2D03E13C460760D6 | Since: 323
     */
    function resetArrestState(player: number | string | Player): void;
    /**
     * Alternative: GET_VEHICLE_PED_IS_IN(PLAYER_PED_ID(), 1);
     *
     * Hash: 0xB6997A7EB3F5C8C0 | Since: 323
     */
    function getsLastVehicle(): number;
    /**
     * Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT
     *
     * Hash: 0xA5EDC40EF369B48D | Since: 323
     */
    function getIndex(): number | string;
    /**
     * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
     *
     * Hash: 0x41BD2A6B006AF756 | Since: 323
     */
    function intToindex(value: number): number | string;
    /**
     * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
     * --------------------------------------------------------
     * `if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(i)))`
     *
     *
     * Hash: 0x9EC6603812C24710 | Since: 323
     */
    function intToParticipantindex(value: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x5D35ECF3A81A0EE0 | Since: 323
     */
    function getTimeSinceHitVehicle(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xE36A25322DC35F42 | Since: 323
     */
    function getTimeSinceHitPed(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xD559D2BE9E37853B | Since: 323
     */
    function getTimeSinceDroveOnPavement(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xDB89591E290D9182 | Since: 323
     */
    function getTimeSinceDroveAgainstTraffic(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xDCCFD3F106C36AB4 | Since: 323
     */
    function isFreeForAmbientTask(player: number | string | Player): boolean;
    /**
     * This returns YOUR 'identity' as a Player type.
     *
     * Always returns 0 in story mode.
     *
     * Hash: 0x4F8644AF03D0E0D6 | Since: 323
     */
    function id(): number | string;
    /**
     * Returns current player ped
     *
     * Hash: 0xD80958FC74E988A6 | Since: 323
     */
    function pedId(): number;
    /**
     * Does exactly the same thing as PLAYER_ID()
     *
     * Hash: 0xEE68096F9F37341E | Since: 323
     */
    function networkIdToInt(): number;
    /**
     * No comment provided
     *
     * Hash: 0xC968670BFACE42D9 | Since: 323
     */
    function hasForceCleanupOccurred(cleanupFlags: number): boolean;
    /**
     * used with 1,2,8,64,128 in the scripts
     *
     * Hash: 0xBC8983F38F78ED51 | Since: 323
     */
    function forceCleanup(cleanupFlags: number): void;
    /**
     * `PLAYER::FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME("pb_prostitute", 1); // Found in decompilation`
     *
     * Hash: 0x4C68DDDDF0097317 | Since: 323
     */
    function forceCleanupForAllThreadsWithThisName(name: string, cleanupFlags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF745B37630DF176B | Since: 323
     */
    function forceCleanupForThreadWithThisId(id: number, cleanupFlags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9A41CF4674A12272 | Since: 323
     */
    function getCauseOfMostRecentForceCleanup(): number;
    /**
     * No comment provided
     *
     * Hash: 0x8026FF78F208978A | Since: 323
     */
    function setMayOnlyEnterThisVehicle(player: number | string | Player, vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x1DE37BBF9E9CC14A | Since: 323
     */
    function setMayNotEnterAnyVehicle(player: number | string | Player): void;
    /**
     * 1 - Welcome to Los Santos
     * 2 - A Friendship Resurrected
     * 3 - A Fair Day's Pay
     * 4 - The Moment of Truth
     * 5 - To Live or Die in Los Santos
     * 6 - Diamond Hard
     * 7 - Subversive
     * 8 - Blitzed
     * 9 - Small Town, Big Job
     * 10 - The Government Gimps
     * 11 - The Big One!
     * 12 - Solid Gold, Baby!
     * 13 - Career Criminal
     * 14 - San Andreas Sightseer
     * 15 - All's Fare in Love and War
     * 16 - TP Industries Arms Race
     * 17 - Multi-Disciplined
     * 18 - From Beyond the Stars
     * 19 - A Mystery, Solved
     * 20 - Waste Management
     * 21 - Red Mist
     * 22 - Show Off
     * 23 - Kifflom!
     * 24 - Three Man Army
     * 25 - Out of Your Depth
     * 26 - Altruist Acolyte
     * 27 - A Lot of Cheddar
     * 28 - Trading Pure Alpha
     * 29 - Pimp My Sidearm
     * 30 - Wanted: Alive Or Alive
     * 31 - Los Santos Customs
     * 32 - Close Shave
     * 33 - Off the Plane
     * 34 - Three-Bit Gangster
     * 35 - Making Moves
     * 36 - Above the Law
     * 37 - Numero Uno
     * 38 - The Midnight Club
     * 39 - Unnatural Selection
     * 40 - Backseat Driver
     * 41 - Run Like The Wind
     * 42 - Clean Sweep
     * 43 - Decorated
     * 44 - Stick Up Kid
     * 45 - Enjoy Your Stay
     * 46 - Crew Cut
     * 47 - Full Refund
     * 48 - Dialling Digits
     * 49 - American Dream
     * 50 - A New Perspective
     * 51 - Be Prepared
     * 52 - In the Name of Science
     * 53 - Dead Presidents
     * 54 - Parole Day
     * 55 - Shot Caller
     * 56 - Four Way
     * 57 - Live a Little
     * 58 - Can't Touch This
     * 59 - Mastermind
     * 60 - Vinewood Visionary
     * 61 - Majestic
     * 62 - Humans of Los Santos
     * 63 - First Time Director
     * 64 - Animal Lover
     * 65 - Ensemble Piece
     * 66 - Cult Movie
     * 67 - Location Scout
     * 68 - Method Actor
     * 69 - Cryptozoologist
     * 70 - Getting Started
     * 71 - The Data Breaches
     * 72 - The Bogdan Problem
     * 73 - The Doomsday Scenario
     * 74 - A World Worth Saving
     * 75 - Orbital Obliteration
     * 76 - Elitist
     * 77 - Masterminds
     *
     * Hash: 0xBEC7076D64130195 | Since: 323
     */
    function giveAchievementTo(achievementId: number): boolean;
    /**
     * For Steam.
     * Does nothing and always returns false in the retail version of the game.
     *
     * Hash: 0xC2AFFFDABBDC2C5C | Since: 323
     */
    function setAchievementProgress(achievementId: number, progress: number): boolean;
    /**
     * For Steam.
     * Always returns 0 in retail version of the game.
     *
     * Hash: 0x1C186837D0619335 | Since: 323
     */
    function getAchievementProgress(achievementId: number): number;
    /**
     * See GIVE_ACHIEVEMENT_TO_PLAYER
     *
     * Hash: 0x867365E111A3B6EB | Since: 323
     */
    function hasAchievementBeenPassed(achievementId: number): boolean;
    /**
     * Returns TRUE if the game is in online mode and FALSE if in offline mode.
     *
     * This is an alias for NETWORK_IS_SIGNED_ONLINE.
     *
     * Hash: 0xF25D331DC2627BBC | Since: 323
     */
    function isOnline(): boolean;
    /**
     * this function is hard-coded to always return 0.
     *
     * Hash: 0x74556E1420867ECA | Since: 323
     */
    function isLoggingInNp(): boolean;
    /**
     * Purpose of the BOOL currently unknown.
     * Both, true and false, work
     *
     * Hash: 0x94DD7888C10A979E | Since: 323
     */
    function displaySystemSigninUi(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5D511E3867C87139 | Since: 323
     */
    function isSystemUiBeingDisplayed(): boolean;
    /**
     * Simply sets you as invincible (Health will not deplete).
     *
     * Use 0x733A643B5B0C53C1 instead if you want Ragdoll enabled, which is equal to:
     * *(DWORD *)(playerPedAddress + 0x188) |= (1 << 9);
     *
     * Hash: 0x239528EACDC3E7DE | Since: 323
     */
    function setInvincible(player: number | string | Player, toggle: boolean): void;
    /**
     * Returns the Player's Invincible status.
     *
     * This function will always return false if 0x733A643B5B0C53C1 is used to set the invincibility status. To always get the correct result, use this:
     *
     * bool IsPlayerInvincible(Player player)
     * {
     * auto addr = getScriptHandleBaseAddress(GET_PLAYER_PED(player));
     *
     * if (addr)
     * {
     * DWORD flag = *(DWORD *)(addr + 0x188);
     * return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);
     * }
     *
     * return false;
     * }
     *
     *
     *
     * Hash: 0xB721981B2B939E07 | Since: 323
     */
    function getInvincible(player: number | string | Player): boolean;
    /**
     * Always returns false.
     *
     * Hash: 0xDCC07526B8EC45AF | Since: 1868
     */
    function getDebugInvincible(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6BC97F4F4BB3C04B | Since: 463
     */
    function setInvincibleButHasReactions(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCAC57395B151135F | Since: 323
     */
    function setCanCollectDroppedMoney(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xF3AC26D3CC576528 | Since: 323
     */
    function removeHelmet(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x3C49C870E66F0A28 | Since: 323
     */
    function giveRagdollControl(player: number | string | Player, toggle: boolean): void;
    /**
     * Example from fm_mission_controler.ysc.c4:
     *
     * `PLAYER::SET_PLAYER_LOCKON(PLAYER::PLAYER_ID(), 1);`
     *
     * All other decompiled scripts using this seem to be using the player id as the first parameter, so I feel the need to confirm it as so.
     *
     * No need to confirm it says PLAYER_ID() so it uses PLAYER_ID() lol.
     *
     * Hash: 0x5C8B2F450EE4328E | Since: 323
     */
    function setLockon(player: number | string | Player, toggle: boolean): void;
    /**
     * Sets your targeting mode.
     * 0 = Assisted Aim - Full
     * 1 = Assisted Aim - Partial
     * 2 = Free Aim - Assisted
     * 3 = Free Aim
     *
     * Hash: 0xB1906895227793F3 | Since: 323
     */
    function setTargetingMode(targetMode: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x875BDD898B99C8CE | Since: 3570
     */
    function getTargetingMode(): number;
    /**
     * No comment provided
     *
     * Hash: 0x5702B917B99DB1CD | Since: 323
     */
    function setTargetLevel(targetLevel: number): void;
    /**
     * Returns profile setting 237.
     *
     * Hash: 0xB9CF1F793A9F1BF1 | Since: 323
     */
    function getIsUsingFpsThirdPersonCover(): boolean;
    /**
     * Returns profile setting 243.
     *
     * Hash: 0xCB645E85E97EA48B | Since: 372
     */
    function getIsUsingHoodCamera(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF0B67A4DE6AB5F98 | Since: 323
     */
    function clearHasDamagedAtLeastOnePed(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x20CE80B0C2BF4ACC | Since: 323
     */
    function hasDamagedAtLeastOnePed(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4AACB96203D11A31 | Since: 323
     */
    function clearHasDamagedAtLeastOneNonAnimalPed(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xE4B90F367BD81752 | Since: 323
     */
    function hasDamagedAtLeastOneNonAnimalPed(player: number | string | Player): boolean;
    /**
     * This can be between 1.0f - 14.9f
     *
     * You can change the max in IDA from 15.0. I say 15.0 as the function blrs if what you input is greater than or equal to 15.0 hence why it's 14.9 max default.
     *
     *
     *
     * Hash: 0xCA7DC8329F0A1E9E | Since: 323
     */
    function setAirDragMultiplierForsVehicle(player: number | string | Player, multiplier: number): void;
    /**
     * Swim speed multiplier.
     * Multiplier goes up to 1.49
     *
     * Just call it one time, it is not required to be called once every tick. - Note copied from below native.
     *
     * Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and RUN_SPRINT below. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.
     *
     * Hash: 0xA91C6F0FF7D16A13 | Since: 323
     */
    function setSwimMultiplierFor(player: number | string | Player, multiplier: number): void;
    /**
     * Multiplier goes up to 1.49 any value above will be completely overruled by the game and the multiplier will not take effect, this can be edited in memory however.
     *
     * Just call it one time, it is not required to be called once every tick.
     *
     * Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and SWIM above. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.
     *
     * Hash: 0x6DB47AA77FD94E09 | Since: 323
     */
    function setRunSprintMultiplierFor(player: number | string | Player, multiplier: number): void;
    /**
     * Returns the time since the character was arrested in (ms) milliseconds.
     *
     * example
     *
     * var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_ARREST();
     *
     * UI.DrawSubtitle(time.ToString());
     *
     * if player has not been arrested, the int returned will be -1.
     *
     * Hash: 0x5063F92F07C2A316 | Since: 323
     */
    function getTimeSinceLastArrest(): number;
    /**
     * Returns the time since the character died in (ms) milliseconds.
     *
     * example
     *
     * var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_DEATH();
     *
     * UI.DrawSubtitle(time.ToString());
     *
     * if player has not died, the int returned will be -1.
     *
     * Hash: 0xC7034807558DDFCA | Since: 323
     */
    function getTimeSinceLastDeath(): number;
    /**
     * No comment provided
     *
     * Hash: 0xAEBF081FFC0A0E5E | Since: 323
     */
    function assistedMovementCloseRoute(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8621390F0CDCFE1F | Since: 323
     */
    function assistedMovementFlushRoute(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0FEE4F80AC44A726 | Since: 323
     */
    function setForcedAim(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x75E7D505F2B15902 | Since: 323
     */
    function setForcedZoom(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7651BC64AE59E128 | Since: 323
     */
    function setForceSkipAimIntro(player: number | string | Player, toggle: boolean): void;
    /**
     * Inhibits the player from using any method of combat including melee and firearms.
     *
     * NOTE: Only disables the firing for one frame
     *
     * Hash: 0x5E6CC07646BBEAB8 | Since: 323
     */
    function disableFiring(player: number | string | Player, toggle: boolean): void;
    /**
     * Used only once in R* scripts (freemode.ysc).
     *
     * Hash: 0xB885852C39CC265D | Since: 323
     */
    function disableThrowGrenadeWhileUsingGun(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2E8AABFA40A84F8C | Since: 323
     */
    function setDisableAmbientMeleeMove(player: number | string | Player, toggle: boolean): void;
    /**
     * `Default is 100. Use player id and not ped id. For instance: PLAYER::SET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID(), 100); // main_persistent.ct4`
     *
     * Hash: 0x77DFCCF5948B8C71 | Since: 323
     */
    function setMaxArmour(player: number | string | Player, value: number): void;
    /**
     * p1 is always 0 in the scripts
     *
     * Hash: 0x821FDC827D6F4090 | Since: 678
     */
    function specialAbilityActivate(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xB214D570EAD7F81A | Since: 678
     */
    function setSpecialAbilityMp(player: number | string | Player): void;
    /**
     * p1 is always 0 in the scripts
     *
     * Hash: 0x17F7471EACA78290 | Since: 678
     */
    function specialAbilityDeactivateMp(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xD6A953C6D1492057 | Since: 323
     */
    function specialAbilityDeactivate(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x9CB5CE07A3968D5A | Since: 323
     */
    function specialAbilityDeactivateFast(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x375F0E738F861A94 | Since: 323
     */
    function specialAbilityReset(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xC9A763D8FE87436A | Since: 323
     */
    function specialAbilityChargeOnMissionFailed(player: number | string | Player): void;
    /**
     * Every occurrence of p1 & p2 were both true.
     *
     * Hash: 0x2E7B9B683481687D | Since: 323
     */
    function specialAbilityChargeSmall(player: number | string | Player): void;
    /**
     * Only 1 match. Both p1 & p2 were true.
     *
     * Hash: 0xF113E3AA9BC54613 | Since: 323
     */
    function specialAbilityChargeMedium(player: number | string | Player): void;
    /**
     * 2 matches. p1 was always true.
     *
     * Hash: 0xF733F45FA4497D93 | Since: 323
     */
    function specialAbilityChargeLarge(player: number | string | Player): void;
    /**
     * p1 appears to always be 1 (only comes up twice)
     *
     * Hash: 0xED481732DFF7E997 | Since: 323
     */
    function specialAbilityChargeContinuous(player: number | string | Player, p1: number | Ped): void;
    /**
     * p1 appears as 5, 10, 15, 25, or 30. p2 is always true.
     *
     * Hash: 0xB7B0870EB531D08D | Since: 323
     */
    function specialAbilityChargeAbsolute(player: number | string | Player): void;
    /**
     *
     * normalizedValue is from 0.0 - 1.0
     * p2 is always 1
     *
     * Hash: 0xA0696A65F009EE18 | Since: 323
     */
    function specialAbilityChargeNormalized(player: number | string | Player, normalizedValue: number): void;
    /**
     * Also known as _RECHARGE_SPECIAL_ABILITY
     *
     * Hash: 0x3DACA8DDC6FD4980 | Since: 323
     */
    function specialAbilityFillMeter(player: number | string | Player): void;
    /**
     * p1 was always true.
     *
     * Hash: 0x1D506DBBBC51E64B | Since: 323
     */
    function specialAbilityDepleteMeter(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x6A09D0D590A47D13 | Since: 323
     */
    function specialAbilityLock(playerModel: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF145F3BE2EFA9A3B | Since: 323
     */
    function specialAbilityUnlock(playerModel: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC6017F6A6CDFA694 | Since: 323
     */
    function isSpecialAbilityUnlocked(playerModel: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3E5F7FC85D854E15 | Since: 323
     */
    function isSpecialAbilityActive(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x05A1FE504B7F2587 | Since: 323
     */
    function isSpecialAbilityMeterFull(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x181EC197DAEFE121 | Since: 323
     */
    function enableSpecialAbility(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB1D200FE26AEF3CB | Since: 323
     */
    function isSpecialAbilityEnabled(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA49C426ED0CA4AB7 | Since: 323
     */
    function setSpecialAbilityMultiplier(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFFEE8FA29AB9A18E | Since: 323
     */
    function updateSpecialAbilityFromStat(player: number | string | Player): void;
    /**
     * Appears once in "re_dealgonewrong"
     *
     * Hash: 0x5FC472C501CCADB3 | Since: 323
     */
    function getIsDrivingOnHighway(player: number | string | Player): boolean;
    /**
     * Only 1 occurrence. p1 was 2.
     *
     * Hash: 0xF10B44FD479D69F3 | Since: 323
     */
    function getIsDrivingWreckless(player: number | string | Player): boolean;
    /**
     * 2 occurrences in agency_heist3a. p1 was 0.7f then 0.4f.
     *
     * Hash: 0xDD2620B7B9D16FF1 | Since: 323
     */
    function getIsMoppingAreaFreeInFrontOf(player: number | string | Player): boolean;
    /**
     * `findCollisionLand`: This teleports the player to land when set to true and will not consider the Z coordinate parameter provided by you. It will automatically put the Z coordinate so that you don't fall from sky.
     *
     * Hash: 0xAD15F075A4DA0FDE | Since: 323
     */
    function startTeleport(player: number | string | Player, pos: Vector3, heading: number, findCollisionLand: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE23D5873C2394C61 | Since: 323
     */
    function updateTeleport(player: number | string | Player): boolean;
    /**
     * Disables the player's teleportation
     *
     * Hash: 0xC449EDED9D73009C | Since: 323
     */
    function stopTeleport(): void;
    /**
     * No comment provided
     *
     * Hash: 0x02B15662D7F8886F | Since: 323
     */
    function isTeleportActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2F395D61F3A1F877 | Since: 323
     */
    function getCurrentStealthNoise(player: number | string | Player): number;
    /**
     * `regenRate`: The recharge multiplier, a value between 0.0 and 1.0.
     * Use 1.0 to reset it back to normal
     *
     * Hash: 0x5DB660B38DD98A31 | Since: 323
     */
    function setHealthRechargeMultiplier(player: number | string | Player, regenRate: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8BC515BAE4AAF8FF | Since: 617
     */
    function getHealthRechargeMaxPercent(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0xC388A0F065F5BC34 | Since: 573
     */
    function setHealthRechargeMaxPercent(player: number | string | Player, limit: number): void;
    /**
     * Needs to be called every frame.
     *
     * Hash: 0xBCB06442F7E52666 | Since: 2802
     */
    function disableHealthRecharge(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xEFD79FA81DFBA9CB | Since: 573
     */
    function setFallDistanceToTriggerRagdollOverride(player: number | string | Player): void;
    /**
     * This modifies the damage value of your weapon. Whether it is a multiplier or base damage is unknown.
     *
     * Based on tests, it is unlikely to be a multiplier.
     *
     * modifier's min value is 0.1
     *
     * Hash: 0xCE07B9F7817AADA3 | Since: 323
     */
    function setWeaponDamageModifier(player: number | string | Player, modifier: number): void;
    /**
     * modifier's min value is 0.1
     *
     * Hash: 0x2D83BC011CA14A3C | Since: 323
     */
    function setWeaponDefenseModifier(player: number | string | Player, modifier: number): void;
    /**
     * modifier's min value is 0.1
     *
     * Hash: 0xBCFDE9EDE4CF27DC | Since: 944
     */
    function setWeaponMinigunDefenseModifier(player: number | string | Player, modifier: number): void;
    /**
     * modifier's min value is 0.1
     *
     * Hash: 0x4A3DC7ECCC321032 | Since: 323
     */
    function setMeleeWeaponDamageModifier(player: number | string | Player, modifier: number): void;
    /**
     * modifier's min value is 0.1
     *
     * Hash: 0xAE540335B4ABC4E2 | Since: 323
     */
    function setMeleeWeaponDefenseModifier(player: number | string | Player, modifier: number): void;
    /**
     * modifier's min value is 0.1
     *
     * Hash: 0xA50E117CDDF82F0C | Since: 323
     */
    function setVehicleDamageModifier(player: number | string | Player, modifier: number): void;
    /**
     * modifier's min value is 0.1
     *
     * Hash: 0x4C60E6EFDAFF2462 | Since: 323
     */
    function setVehicleDefenseModifier(player: number | string | Player, modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8D768602ADEF2245 | Since: 463
     */
    function setMaxExplosiveDamage(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xD821056B9ACF8052 | Since: 1011
     */
    function setExplosiveDamageModifier(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x31E90B8873A4CD3B | Since: 617
     */
    function setWeaponTakedownDefenseModifier(player: number | string | Player): void;
    /**
     * Tints:
     * None = -1,
     * Rainbow = 0,
     * Red = 1,
     * SeasideStripes = 2,
     * WidowMaker = 3,
     * Patriot = 4,
     * Blue = 5,
     * Black = 6,
     * Hornet = 7,
     * AirFocce = 8,
     * Desert = 9,
     * Shadow = 10,
     * HighAltitude = 11,
     * Airbone = 12,
     * Sunrise = 13,
     *
     *
     * Hash: 0xA3D0E54541D9A5E5 | Since: 323
     */
    function setParachuteTintIndex(player: number | string | Player, tintIndex: number): void;
    /**
     * Tints:
     * None = -1,
     * Rainbow = 0,
     * Red = 1,
     * SeasideStripes = 2,
     * WidowMaker = 3,
     * Patriot = 4,
     * Blue = 5,
     * Black = 6,
     * Hornet = 7,
     * AirFocce = 8,
     * Desert = 9,
     * Shadow = 10,
     * HighAltitude = 11,
     * Airbone = 12,
     * Sunrise = 13,
     *
     * Hash: 0x75D3F7A1B0D9B145 | Since: 323
     */
    function getParachuteTintIndex(player: number | string | Player): number;
    /**
     * Tints:
     * None = -1,
     * Rainbow = 0,
     * Red = 1,
     * SeasideStripes = 2,
     * WidowMaker = 3,
     * Patriot = 4,
     * Blue = 5,
     * Black = 6,
     * Hornet = 7,
     * AirFocce = 8,
     * Desert = 9,
     * Shadow = 10,
     * HighAltitude = 11,
     * Airbone = 12,
     * Sunrise = 13,
     *
     * Hash: 0xAF04C87F5DC1DF38 | Since: 323
     */
    function setReserveParachuteTintIndex(player: number | string | Player, index: number): void;
    /**
     * Tints:
     * None = -1,
     * Rainbow = 0,
     * Red = 1,
     * SeasideStripes = 2,
     * WidowMaker = 3,
     * Patriot = 4,
     * Blue = 5,
     * Black = 6,
     * Hornet = 7,
     * AirFocce = 8,
     * Desert = 9,
     * Shadow = 10,
     * HighAltitude = 11,
     * Airbone = 12,
     * Sunrise = 13,
     *
     * Hash: 0xD5A016BC3C09CF40 | Since: 323
     */
    function getReserveParachuteTintIndex(player: number | string | Player): number;
    /**
     * tints 0- 13
     * 0 - unkown
     * 1 - unkown
     * 2 - unkown
     * 3 - unkown
     * 4 - unkown
     *
     * Hash: 0x93B0FB27C9A04060 | Since: 323
     */
    function setParachutePackTintIndex(player: number | string | Player, tintIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6E9C742F340CE5A2 | Since: 323
     */
    function getParachutePackTintIndex(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x7DDAB28D31FAC363 | Since: 323
     */
    function setHasReserveParachute(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x5DDFE2FF727F3CA3 | Since: 323
     */
    function getHasReserveParachute(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF401B182DBA8AF53 | Since: 323
     */
    function setCanLeaveParachuteSmokeTrail(player: number | string | Player, enabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8217FD371A4625CF | Since: 323
     */
    function setParachuteSmokeTrailColor(player: number | string | Player, r: number, g: number, b: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF56DBABD3CD4887 | Since: 323
     */
    function getParachuteSmokeTrailColor(player: number | string | Player): [number, number, number];
    /**
     * No comment provided
     *
     * Hash: 0x11D5F725F0E780E0 | Since: 323
     */
    function setPhonePaletteIdx(player: number | string | Player, idx: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDB89EF50FF25FCE9 | Since: 323
     */
    function setNoiseMultiplier(player: number | string | Player, multiplier: number): void;
    /**
     * Values around 1.0f to 2.0f used in game scripts.
     *
     * Hash: 0xB2C1A29588A9F47C | Since: 323
     */
    function setSneakingNoiseMultiplier(player: number | string | Player, multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF297383AA91DCA29 | Since: 323
     */
    function canPedHear(player: number | string | Player, ped: number | Ped): boolean;
    /**
     * This is to make the player walk without accepting input from INPUT.
     *
     * gaitType is in increments of 100s. 2000, 500, 300, 200, etc.
     *
     * p4 is always 1 and p5 is always 0.
     *
     * C# Example :
     *
     * Function.Call(Hash.SIMULATE_PLAYER_INPUT_GAIT, Game.Player, 1.0f, 100, 1.0f, 1, 0); //Player will go forward for 100ms
     *
     * Hash: 0x477D5D63E63ECA5D | Since: 323
     */
    function simulateInputGait(player: number | string | Player, amount: number, gaitType: number, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x19531C47A2ABD691 | Since: 323
     */
    function resetInputGait(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x9F343285A00B4BB6 | Since: 323
     */
    function setAutoGiveParachuteWhenEnterPlane(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD2B315B6689D537D | Since: 323
     */
    function setAutoGiveScubaGearWhenExitVehicle(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x4E9021C1FCDD507A | Since: 323
     */
    function setStealthPerceptionModifier(player: number | string | Player, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x690A61A6D13583F6 | Since: 323
     */
    function isRemoteInNonClonedVehicle(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9EDD76E87D5D51BA | Since: 323
     */
    function increaseJumpSuppressionRange(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xC54C95DA968EC5B5 | Since: 323
     */
    function setSimulateAiming(player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x749FADDF97DFE930 | Since: 323
     */
    function setClothPinFrames(player: number | string | Player): void;
    /**
     * Every occurrence was either 0 or 2.
     *
     * Hash: 0x9F7BBA2EA6372500 | Since: 323
     */
    function setClothPackageIndex(index: number): void;
    /**
     * 6 matches across 4 scripts. 5 occurrences were 240. The other was 255.
     *
     * Hash: 0x14D913B777DFF5DA | Since: 323
     */
    function setClothLockCounter(value: number): void;
    /**
     * Only 1 match. ob_sofa_michael.
     *
     * `PLAYER::PLAYER_ATTACH_VIRTUAL_BOUND(-804.5928f, 173.1801f, 71.68436f, 0f, 0f, 0.590625f, 1f, 0.7f);1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;`
     *
     * Hash: 0xED51733DC73AED51 | Since: 323
     */
    function attachVirtualBound(): void;
    /**
     * 1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
     *
     * Hash: 0x1DD5897E2FA6E7C9 | Since: 323
     */
    function detachVirtualBound(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD705740BB0A1CF4C | Since: 323
     */
    function hasBeenSpottedInStolenVehicle(player: number | string | Player): boolean;
    /**
     * Returns true if an unk value is greater than 0.0f
     *
     * Hash: 0x38D28DA81E4E9BF9 | Since: 323
     */
    function isBattleAware(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBC0753C9CA14B506 | Since: 323
     */
    function getReceivedBattleEventRecently(player: number | string | Player): boolean;
    /**
     * Appears only 3 times in the scripts, more specifically in michael1.ysc
     *
     * -
     * This can be used to prevent dying if you are "out of the world"
     *
     * Hash: 0x5006D96C995A5827 | Since: 323
     */
    function extendWorldBoundaryFor(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xDA1DF03D5A315F4E | Since: 323
     */
    function resetWorldBoundaryFor(): void;
    /**
     * Returns true if the player is riding a train.
     *
     * Hash: 0x4EC12697209F2196 | Since: 323
     */
    function isRidingTrain(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD55DDFB47991A294 | Since: 323
     */
    function hasLeftTheWorld(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFF300C7649724A0B | Since: 323
     */
    function setLeavePedBehind(player: number | string | Player, toggle: boolean): void;
    /**
     * p1 was always 5.
     * p4 was always false.
     *
     * Hash: 0xD9284A8C0D48352C | Since: 323
     */
    function setParachuteVariationOverride(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x0F4CC924CF8C7B21 | Since: 323
     */
    function clearParachuteVariationOverride(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x977DB4641F6FC3DB | Since: 323
     */
    function setParachuteModelOverride(player: number | string | Player, model: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0764486AEDE748DB | Since: 2372
     */
    function setReserveParachuteModelOverride(player: number | string | Player, model: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC219887CA3E65C41 | Since: 2372
     */
    function getParachuteModelOverride(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x37FAAA68DCA9D08D | Since: 2372
     */
    function getReserveParachuteModelOverride(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x8753997EB5F6EE3F | Since: 323
     */
    function clearParachuteModelOverride(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x290D248E25815AE8 | Since: 2372
     */
    function clearReserveParachuteModelOverride(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC80A4C2F18A2B64 | Since: 323
     */
    function setParachutePackModelOverride(player: number | string | Player, model: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x10C54E4389C12B42 | Since: 323
     */
    function clearParachutePackModelOverride(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0xC142BE3BB9CE125F | Since: 323
     */
    function disableVehicleRewards(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F7CEB6520288061 | Since: 323
     */
    function setSpectatedVehicleRadioOverride(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5DC40A8869C22141 | Since: 323
     */
    function setBluetoothState(player: number | string | Player, state: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x65FAEE425DE637B0 | Since: 323
     */
    function isBluetoothEnable(player: number | string | Player): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5501B7A5CDB79D37 | Since: 323
     */
    function disableCameraViewModeCycle(player: number | string | Player): void;
    /**
     * No comment provided
     *
     * Hash: 0x56105E599CAB0EFA | Since: 323
     */
    function getFakeWantedLevel(player: number | string | Player): number;
    /**
     * No comment provided
     *
     * Hash: 0x55FCC0C390620314 | Since: 573
     */
    function setCanDamagePlayer(player1: number | string | Player, player2: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2382AB11450AE7BA | Since: 877
     */
    function setApplyWaypointOf(player: number | string | Player, hudColor: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6E4361FF3E8CD7CA | Since: 1011
     */
    function isVehicleWeaponToggledToNonHoming(): boolean;
    /**
     * Unsets playerPed+330 if the current weapon has certain flags.
     *
     * Hash: 0x237440E46D918649 | Since: 1290
     */
    function setVehicleWeaponToNonHoming(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEE4EBDD2593BA844 | Since: 1180
     */
    function setHomingDisabledForAllVehicleWeapons(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9097EB6D4BB9A12A | Since: 1868
     */
    function addTargetableEntity(player: number | string | Player, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x9F260BFB59ADBCA3 | Since: 1868
     */
    function removeTargetableEntity(player: number | string | Player, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x7BAE68775557AE0B | Since: 1290
     */
    function setPreviousVariationData(player: number | string | Player): void;
    /**
     * Resets values set by SET_SCRIPT_FIRE_POSITION
     *
     * Hash: 0x7148E0F43D11F0D9 | Since: 1604
     */
    function removeScriptFirePosition(): void;
    /**
     * No comment provided
     *
     * Hash: 0x70A382ADEC069DD3 | Since: 1604
     */
    function setScriptFirePosition(coordX: number, coordY: number, coordZ: number): void;
}
export declare namespace recording {
    /**
     * No comment provided
     *
     * Hash: 0x48621C9FCA3EBD28 | Since: 323
     */
    function replayStartEvent(): void;
    /**
     * No comment provided
     *
     * Hash: 0x81CBAE94390F9F89 | Since: 323
     */
    function replayStopEvent(): void;
    /**
     * No comment provided
     *
     * Hash: 0x13B350B8AD0EEE10 | Since: 323
     */
    function replayCancelEvent(): void;
    /**
     * No comment provided
     *
     * Hash: 0x293220DA1B46CEBC | Since: 323
     */
    function replayRecordBackForTime(): void;
    /**
     * -This function appears to be deprecated/ unused. Tracing the call internally leads to a _nullsub -
     *
     * first one seems to be a string of a mission name, second one seems to be a bool/toggle
     *
     * p1 was always 0.
     *
     *
     * Hash: 0x208784099002BC30 | Since: 323
     */
    function replayCheckForEventThisFrame(missionNameLabel: string): void;
    /**
     * This disable the recording feature and has to be called every frame.
     *
     * Hash: 0xEB2D525B57F42B40 | Since: 323
     */
    function replayPreventThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF854439EFBB3B583 | Since: 323
     */
    function replayResetEventInfo(): void;
    /**
     * This will disable the ability to make camera changes in R* Editor.
     *
     * Hash: 0xAF66DCEE6609B148 | Since: 323
     */
    function replayDisableCameraMovementThisFrame(): void;
    /**
     * Does nothing (it's a nullsub).
     *
     * Hash: 0x66972397E0757E7A | Since: 323
     */
    function recordGreatestMoment(): void;
    /**
     * Starts recording a replay.
     * If mode is 0, turns on action replay.
     * If mode is 1, starts recording.
     * If already recording a replay, does nothing.
     *
     * Hash: 0xC3AC2FFF9612AC81 | Since: 323
     */
    function startReplay(mode: number): void;
    /**
     * Stops recording and saves the recorded clip.
     *
     * Hash: 0x071A5197D6AFC8B3 | Since: 323
     */
    function stopReplay(): void;
    /**
     * Stops recording and discards the recorded clip.
     *
     * Hash: 0x88BB3507ED41A240 | Since: 323
     */
    function cancelReplay(): void;
    /**
     * No comment provided
     *
     * Hash: 0x644546EC5287471B | Since: 323
     */
    function saveReplay(): boolean;
    /**
     * Checks if you're recording, returns TRUE when you start recording (F1) or turn on action replay (F2)
     *
     * mov al, cs:g_bIsRecordingGameplay // byte_141DD0CD0 in b944
     * retn
     *
     * Hash: 0x1897CA71995A90B4 | Since: 323
     */
    function isReplay(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDF4B952F7D381B95 | Since: 323
     */
    function isReplayInitialized(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4282E08174868BE3 | Since: 323
     */
    function isReplayAvailable(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x33D47E85B476ABCD | Since: 323
     */
    function isReplayRecordSpaceAvailable(): boolean;
}
export declare namespace replay {
    /**
     * Does nothing (it's a nullsub).
     *
     * Hash: 0x7E2BD3EF6C205F09 | Since: 323
     */
    function registerEffectForEditor(): void;
    /**
     * Returns a bool if interior rendering is disabled, if yes, all "normal" rendered interiors are invisible
     *
     * Hash: 0x95AB8B5C992C7B58 | Since: 323
     */
    function systemHasRequestedAScriptCleanup(): boolean;
    /**
     * Disables some other rendering (internal)
     *
     * Hash: 0x5AD3932DAEB1E5D3 | Since: 323
     */
    function setScriptsHaveCleanedUpForSystem(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE058175F8EAFE79A | Since: 323
     */
    function setSystemPausedForSave(): void;
    /**
     * Sets (almost, not sure) all Rockstar Editor values (bIsRecording etc) to 0.
     *
     * Hash: 0x3353D13F09307691 | Since: 323
     */
    function controlShutdown(): void;
    /**
     * Please note that you will need to call DO_SCREEN_FADE_IN after exiting the Rockstar Editor when you call this.
     *
     * Hash: 0x49DA8145672B2725 | Since: 323
     */
    function activateRockstarEditor(): void;
}
export declare namespace savemigration {
    /**
     * No comment provided
     *
     * Hash: 0x84B418E93894AC1C | Since: 2372
     */
    function isMpEnabled(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x85F41F9225D08C72 | Since: 2612
     */
    function mpRequestAccounts(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC8CB5999919EA2CA | Since: 2612
     */
    function mpGetAccountsStatus(): number;
    /**
     * No comment provided
     *
     * Hash: 0x77A16200E18E0C55 | Since: 2612
     */
    function mpNumAccounts(): number;
    /**
     * No comment provided
     *
     * Hash: 0xFCE2747EEF1D05FC | Since: 2612
     */
    function mpGetAccount(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xE5E9746A66359F9D | Since: 2372
     */
    function mpRequestStatus(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x690B76BD2763E068 | Since: 2372
     */
    function mpGetStatus(): number;
}
export declare namespace script {
    /**
     * No comment provided
     *
     * Hash: 0x6EB5F71AA68F2E8E | Since: 323
     */
    function request(scriptName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC90D2DCACD56184C | Since: 323
     */
    function setAsNoLongerNeeded(scriptName: string): void;
    /**
     * Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
     *
     * Hash: 0xE6CC9F3BA0FB9EF1 | Since: 323
     */
    function hasLoaded(scriptName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFC04745FBE67C19A | Since: 323
     */
    function doesExist(scriptName: string): boolean;
    /**
     * formerly _REQUEST_STREAMED_SCRIPT
     *
     * Hash: 0xD62A67D26D9653E6 | Since: 323
     */
    function requestWithNameHash(scriptHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC5BC038960E9DB27 | Since: 323
     */
    function setWithNameHashAsNoLongerNeeded(scriptHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5F0F0C783EB16C04 | Since: 323
     */
    function hasWithNameHashLoaded(scriptHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF86AA3C56BA31381 | Since: 323
     */
    function doesWithNameHashExist(scriptHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC8B189ED9138BCD4 | Since: 323
     */
    function terminateThread(threadId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x46E9AE36D8FA6417 | Since: 323
     */
    function isThreadActive(threadId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x05A42BA9FC8DA96B | Since: 323
     */
    function getNameOfWithThisId(threadId: number): string;
    /**
     * Starts a new iteration of the current threads.
     * Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
     *
     * Hash: 0xDADFADA5A20143A8 | Since: 323
     */
    function threadIteratorReset(): void;
    /**
     * If the function returns 0, the end of the iteration has been reached.
     *
     * Hash: 0x30B4FA1C82DD4B9F | Since: 323
     */
    function threadIteratorGetNextThreadId(): number;
    /**
     * No comment provided
     *
     * Hash: 0xC30338E8088E2E21 | Since: 323
     */
    function getIdOfThisThread(): number;
    /**
     * No comment provided
     *
     * Hash: 0x1090044AD1DA76FA | Since: 323
     */
    function terminateThisThread(): void;
    /**
     * Gets the number of instances of the specified script is currently running.
     *
     * Actually returns numRefs - 1.
     * if (program)
     * `v3 = rage::scrProgram::GetNumRefs(program) - 1;`
     * return v3;
     *
     * Hash: 0x2C83A9DA6BFFC4F9 | Since: 323
     */
    function getNumberOfThreadsRunningTheWithThisHash(scriptHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x442E0A7EDE4A738A | Since: 323
     */
    function getThisName(): string;
    /**
     * No comment provided
     *
     * Hash: 0x8A1C8B1738FFE87E | Since: 323
     */
    function getHashOfThisName(): number;
    /**
     * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
     *
     * Hash: 0x5F92A689A06620AA | Since: 323
     */
    function getNumberOfEvents(eventGroup: number): number;
    /**
     * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
     *
     * Hash: 0x936E6168A9BCEDB5 | Since: 323
     */
    function getEventExists(eventGroup: number, eventIndex: number): boolean;
    /**
     * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
     *
     * Hash: 0xD8F66A3A60C62153 | Since: 323
     */
    function getEventAtIndex(eventGroup: number, eventIndex: number): number;
    /**
     * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
     *
     * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
     *
     * Hash: 0x2902843FCD2B2D79 | Since: 323
     */
    function getEventData(eventGroup: number, eventIndex: number, eventDataSize: number): [boolean, any];
    /**
     * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
     *
     * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
     *
     * playerBits (also known as playersToBroadcastTo) is a bitset that indicates which players this event should be sent to. In order to send the event to specific players only, use (1 << playerIndex). Set all bits if it should be broadcast to all players.
     *
     * Hash: 0x5AE99C571D5BBE5D | Since: 323
     */
    function triggerEvent(eventGroup: number, eventDataSize: number, playerBits: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x078EBE9809CCD637 | Since: 323
     */
    function shutdownLoadingScreen(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5262CC1995D07E09 | Since: 323
     */
    function setNoLoadingScreen(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x18C1270EA7F199BC | Since: 323
     */
    function getNoLoadingScreen(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB1577667C3708F9B | Since: 323
     */
    function commitToLoadingscreenSelction(): void;
    /**
     * Returns true if bit 0 in GtaThread+0x154 is set.
     *
     * Hash: 0x836B62713E0534CA | Since: 323
     */
    function bgIsExitflagSet(): boolean;
    /**
     * Sets bit 1 in GtaThread+0x154
     *
     * Hash: 0x760910B49D2B98EA | Since: 323
     */
    function bgSetExitflagResponse(): void;
    /**
     * Hashed version of BG_START_CONTEXT.
     *
     * Hash: 0x75B18E49607874C7 | Since: 323
     */
    function bgStartContextHash(contextHash: number | string): void;
    /**
     * Hashed version of BG_END_CONTEXT.
     *
     * Hash: 0x107E5CC7CA942BC1 | Since: 323
     */
    function bgEndContextHash(contextHash: number | string): void;
    /**
     * Inserts the given context into the background scripts context map.
     *
     * Hash: 0x9D5A25BADB742ACD | Since: 323
     */
    function bgStartContext(contextName: string): void;
    /**
     * Deletes the given context from the background scripts context map.
     *
     * Hash: 0xDC2BACD920D0A0DD | Since: 323
     */
    function bgEndContext(contextName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0F6F1EBBC4E1D5E6 | Since: 323
     */
    function bgDoesLaunchParamExist(scriptIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x22E21FBCFC88C149 | Since: 323
     */
    function bgGetLaunchParamValue(scriptIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x829CD22E043A2577 | Since: 323
     */
    function bgGetIdFromNameHash(p0: number | string): number;
    /**
     * New variant of SEND_TU_SCRIPT_EVENT that automatically initializes the event data header.
     * See TRIGGER_SCRIPT_EVENT for more info.
     *
     * Hash: 0x71A6F836422FDD2B | Since: 3095
     */
    function sendTuEventNew(eventGroup: number, eventDataSize: number, playerBits: number, eventType: number | string): any;
}
export declare namespace security {
    /**
     * Registers a protected variable that will be checked for modifications by the anticheat
     *
     * Hash: 0x40EB1EFD921822BC | Since: 2545
     */
    function registerScriptVariable(): any;
    /**
     * No comment provided
     *
     * Hash: 0x340A36A700E99699 | Since: 2545
     */
    function unregisterScriptVariable(): any;
    /**
     * No comment provided
     *
     * Hash: 0x8E580AB902917360 | Since: 2545
     */
    function forceCheckScriptVariables(): void;
}
export declare namespace shapetest {
    /**
     * Asynchronously starts a line-of-sight (raycast) world probe shape test.
     *
     * Use the handle with 0x3D87450E15D98694 or 0x65287525D951F6BE until it returns 0 or 2.
     *
     * p8 is a bit mask with bits 1, 2 and/or 4, relating to collider types; 4 should usually be used.
     *
     * Hash: 0x7EE9F5D83DD4F90E | Since: 323
     */
    function startLosProbe(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, entity: number | Entity): number;
    /**
     * Does the same as 0x7EE9F5D83DD4F90E, except blocking until the shape test completes.
     *
     * Hash: 0x377906D8A31E5586 | Since: 323
     */
    function startExpensiveSynchronousLosProbe(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x052837721A854EC7 | Since: 323
     */
    function startBoundingBox(entity: number | Entity, flags1: number, flags2: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xFE466162C4401D18 | Since: 323
     */
    function startBox(pos: Vector3, dimX: number, dimY: number, dimZ: number, rot: Vector3, flags: number, entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x37181417CE7C8900 | Since: 323
     */
    function startBound(entity: number | Entity, flags1: number, flags2: number): number;
    /**
     * Raycast from point to point, where the ray has a radius.
     *
     * flags:
     * vehicles=10
     * peds =12
     *
     * Iterating through flags yields many ped / vehicle/ object combinations
     *
     * p9 = 7, but no idea what it does
     *
     * Entity is an entity to ignore
     *
     * Hash: 0x28579D1B8F8AAC80 | Since: 323
     */
    function startCapsule(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0xE6AC6C45FBE83004 | Since: 323
     */
    function startSweptSphere(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entity: number | Entity): number;
    /**
     * Returns a ShapeTest handle that can be used with GET_SHAPE_TEST_RESULT.
     *
     * In its only usage in game scripts its called with flag set to 511, entity to player_ped_id and flag2 set to 7
     *
     * Hash: 0xFF6BE494C7987F34 | Since: 323
     */
    function startMouseCursorLosProbe(flag: number, entity: number | Entity, flag2: number): [number, Vector3, Vector3];
    /**
     * Returns the result of a shape test: 0 if the handle is invalid, 1 if the shape test is still pending, or 2 if the shape test has completed, and the handle should be invalidated.
     *
     * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
     *
     * Hash: 0x3D87450E15D98694 | Since: 323
     */
    function getResult(shapeTestHandle: number): [number, boolean, Vector3, Vector3, number];
    /**
     * Returns the result of a shape test, also returning the material of any touched surface.
     *
     * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
     *
     * Unless the return value is 2, the other return values are undefined.
     *
     * Hash: 0x65287525D951F6BE | Since: 323
     */
    function getResultIncludingMaterial(shapeTestHandle: number): [number, boolean, Vector3, Vector3, number, number];
    /**
     * Invalidates the entity handle passed by removing the fwScriptGuid from the entity. This should be used when receiving an ambient entity from shape testing natives, but can also be used for other natives returning an 'irrelevant' entity handle.
     *
     * Hash: 0x2B3334BCA57CD799 | Since: 323
     */
    function releaseScriptGuidFromEntity(entityHit: number | Entity): void;
}
export declare namespace socialclub {
    /**
     * No comment provided
     *
     * Hash: 0x03A93FF1A2CA0864 | Since: 323
     */
    function scInboxGetTotalNumMessages(): number;
    /**
     * No comment provided
     *
     * Hash: 0xBB8EA16ECBC976C4 | Since: 323
     */
    function scInboxGetMessageTypeAtIndex(msgIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x93028F1DB42BFD08 | Since: 323
     */
    function scInboxGetMessageIsReadAtIndex(msgIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2C015348CF19CA1D | Since: 323
     */
    function scInboxSetMessageAsReadAtIndex(msgIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA00EFE4082C4056E | Since: 323
     */
    function scInboxMessageGetDataInt(context: string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xFFE5C16F402D851D | Since: 323
     */
    function scInboxMessageGetDataBool(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7572EF42FC6A9B6D | Since: 323
     */
    function scInboxMessageGetDataString(context: string): [boolean, string];
    /**
     * No comment provided
     *
     * Hash: 0x9A2C8064B6C1E41A | Since: 323
     */
    function scInboxMessageDoApply(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF3E31D16CBDCB304 | Since: 323
     */
    function scInboxMessageGetRawTypeAtIndex(): string;
    /**
     * No comment provided
     *
     * Hash: 0xDA024BDBD600F44A | Since: 323
     */
    function scInboxMessagePushGamerT0RecipList(): any;
    /**
     * No comment provided
     *
     * Hash: 0xA68D3D229F4F3B06 | Since: 323
     */
    function scInboxSendUgcstatupdateToRecipList(): any;
    /**
     * No comment provided
     *
     * Hash: 0x69D82604A1A5A254 | Since: 323
     */
    function scInboxMessageGetUgcdata(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x87E0052F08BD64E6 | Since: 323
     */
    function scInboxGetBountyDataAtIndex(index: number): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x040ADDCBAFA1018A | Since: 323
     */
    function scEmailRetrieveEmails(offset: number, limit: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x16DA8172459434AA | Since: 323
     */
    function scEmailGetRetrievalStatus(): number;
    /**
     * No comment provided
     *
     * Hash: 0x7DB18CA8CAD5B098 | Since: 505
     */
    function scEmailGetNumRetrievedEmails(): number;
    /**
     * No comment provided
     *
     * Hash: 0x4737980E8A283806 | Since: 323
     */
    function scEmailGetEmailAtIndex(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x69AA35F3F391CDBA | Since: 3258
     */
    function scEmailMarketingEmailOpened(index: number, _type: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x44ACA259D67651DB | Since: 323
     */
    function scEmailDeleteEmails(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2330C12A7A605D16 | Since: 323
     */
    function scEmailMessagePushGamerToRecipList(): any;
    /**
     * No comment provided
     *
     * Hash: 0x55DF6DB45179236E | Since: 323
     */
    function scEmailMessageClearRecipList(): void;
    /**
     * No comment provided
     *
     * Hash: 0x116FB94DC4B79F17 | Since: 323
     */
    function scEmailSendEmail(): void;
    /**
     * No comment provided
     *
     * Hash: 0x07DBD622D9533857 | Since: 505
     */
    function scEmailSetCurrentEmailTag(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBFA0A56A817C6C7D | Since: 323
     */
    function scCacheNewRockstarMsgs(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC1CC91205EC8D6E | Since: 323
     */
    function scHasNewRockstarMsg(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDF649C4E9AFDD788 | Since: 323
     */
    function scGetNewRockstarMsg(): string;
    /**
     * No comment provided
     *
     * Hash: 0x1F1E9682483697C7 | Since: 323
     */
    function scPresenceAttrSetInt(attrHash: number | string, value: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC4C4575F62534A24 | Since: 323
     */
    function scPresenceAttrSetFloat(attrHash: number | string, value: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x287F1F75D2803595 | Since: 323
     */
    function scPresenceAttrSetString(attrHash: number | string, value: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x487912FD248EFDDF | Since: 323
     */
    function scPresenceSetActivityRating(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC85A7127E7AD02AA | Since: 323
     */
    function scGamerdataGetInt(name: string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xA770C8EEC6FB2AC5 | Since: 323
     */
    function scGamerdataGetFloat(name: string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x8416FE4E4629D7D7 | Since: 323
     */
    function scGamerdataGetBool(name: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7FFCBFEE44ECFABF | Since: 323
     */
    function scGamerdataGetString(name: string): [boolean, string];
    /**
     * No comment provided
     *
     * Hash: 0x2D874D4AE612A65F | Since: 323
     */
    function scGamerdataGetActiveXpBonus(): [boolean, number];
    /**
     * Starts a task to check an entered string for profanity on the ROS/Social Club services.
     *
     * See also: 1753344C770358AE, 82E4A58BABC15AE7.
     *
     * Hash: 0x75632C5ECD7ED843 | Since: 323
     */
    function scProfanityCheckString(_string: string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xEB2BF817463DFA28 | Since: 678
     */
    function scProfanityCheckStringUgc(_string: string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x1753344C770358AE | Since: 323
     */
    function scProfanityGetCheckIsValid(token: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x82E4A58BABC15AE7 | Since: 323
     */
    function scProfanityGetCheckIsPending(token: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x85535ACF97FC0969 | Since: 323
     */
    function scProfanityGetStringPassed(token: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x930DE22F07B1CCE3 | Since: 323
     */
    function scProfanityGetStringStatus(token: number): number;
    /**
     * Retrieves the profane part of the string with max size of 128.
     * Returns true if profane term was retrieved.
     *
     * Hash: 0x75CC8931A11128C9 | Since: 3258
     */
    function scProfanityGetProfaneWord(token: number): [boolean, string];
    /**
     * No comment provided
     *
     * Hash: 0xF6BAAAF762E1BF40 | Since: 323
     */
    function scLicenseplateCheckString(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xF22CA0FD74B80E7A | Since: 323
     */
    function scLicenseplateGetCheckIsValid(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9237E334F6E43156 | Since: 323
     */
    function scLicenseplateGetCheckIsPending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x700569DBA175A77C | Since: 323
     */
    function scLicenseplateGetCount(token: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x1D4446A62D35B0D0 | Since: 323
     */
    function scLicenseplateGetPlate(token: number, plateIndex: number): string;
    /**
     * No comment provided
     *
     * Hash: 0x2E89990DDFF670C3 | Since: 323
     */
    function scLicenseplateGetPlateData(token: number, plateIndex: number): string;
    /**
     * No comment provided
     *
     * Hash: 0xD0EE05FE193646EA | Since: 323
     */
    function scLicenseplateSetPlateData(oldPlateText: string, newPlateText: string): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x1989C6E6F67E76A8 | Since: 323
     */
    function scLicenseplateAdd(plateText: string): [boolean, any, number];
    /**
     * No comment provided
     *
     * Hash: 0x07C61676E5BB52CD | Since: 323
     */
    function scLicenseplateGetAddIsPending(token: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8147FFF6A718E1AD | Since: 323
     */
    function scLicenseplateGetAddStatus(token: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x0F73393BAC7E6730 | Since: 323
     */
    function scLicenseplateIsvalid(plateText: string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xD302E99EDF0449CF | Since: 323
     */
    function scLicenseplateGetIsvalidIsPending(token: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5C4EBFFA98BDB41C | Since: 323
     */
    function scLicenseplateGetIsvalidStatus(token: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xFF8F3A92B75ED67A | Since: 323
     */
    function scCommunityEventIsActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4ED9C8D6DA297639 | Since: 323
     */
    function scCommunityEventGetEventId(): number;
    /**
     * No comment provided
     *
     * Hash: 0x710BCDA8071EDED1 | Since: 323
     */
    function scCommunityEventGetExtraDataInt(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x50A8A36201DBF83E | Since: 323
     */
    function scCommunityEventGetExtraDataFloat(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x9DE5D2F723575ED0 | Since: 323
     */
    function scCommunityEventGetExtraDataString(): [boolean, string];
    /**
     * No comment provided
     *
     * Hash: 0xC2C97EA97711D1AE | Since: 323
     */
    function scCommunityEventGetDisplayName(): [boolean, string];
    /**
     * No comment provided
     *
     * Hash: 0x450819D8CF90C416 | Since: 323
     */
    function scCommunityEventIsActiveForType(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4A7D6E727F941747 | Since: 323
     */
    function scCommunityEventGetEventIdForType(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE75A4A2E5E316D86 | Since: 323
     */
    function scCommunityEventGetExtraDataIntForType(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x2570E26BE63964E3 | Since: 323
     */
    function scCommunityEventGetExtraDataFloatForType(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x1D12A56FC95BE92E | Since: 323
     */
    function scCommunityEventGetExtraDataStringForType(): [boolean, string];
    /**
     * No comment provided
     *
     * Hash: 0x33DF47CC0642061B | Since: 323
     */
    function scCommunityEventGetDisplayNameForType(): [boolean, string];
    /**
     * No comment provided
     *
     * Hash: 0xA468E0BE12B12C70 | Since: 323
     */
    function scCommunityEventIsActiveById(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8CC469AB4D349B7C | Since: 323
     */
    function scCommunityEventGetExtraDataIntById(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xC5A35C73B68F3C49 | Since: 323
     */
    function scCommunityEventGetExtraDataFloatById(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x699E4A5C8C893A18 | Since: 323
     */
    function scCommunityEventGetExtraDataStringById(): [boolean, string];
    /**
     * No comment provided
     *
     * Hash: 0x19853B5B17D77BCA | Since: 323
     */
    function scCommunityEventGetDisplayNameById(): [boolean, string];
    /**
     * No comment provided
     *
     * Hash: 0x6BFB12CE158E3DD4 | Since: 323
     */
    function scTransitionNewsShow(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xFE4C1D0D3B9CC17E | Since: 323
     */
    function scTransitionNewsShowTimed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD8122C407663B995 | Since: 323
     */
    function scTransitionNewsShowNextItem(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3001BEF2FECA3680 | Since: 323
     */
    function scTransitionNewsHasExtraDataTu(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x92DA6E70EF249BD1 | Since: 323
     */
    function scTransitionNewsGetExtraDataIntTu(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x675721C9F644D161 | Since: 323
     */
    function scTransitionNewsEnd(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE4F6E8D07A2F0F51 | Since: 1290
     */
    function scPauseNewsInitStarterPack(): boolean;
    /**
     * Fills some 0x30 sized struct
     *
     * Hash: 0x8A4416C0DB05FA66 | Since: 1290
     */
    function scPauseNewsGetPendingStory(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEA95C0853A27888E | Since: 1290
     */
    function scPauseNewsShutdown(): void;
    /**
     * Returns the nickname of the logged-in Rockstar Social Club account.
     *
     * Hash: 0x198D161F458ECC7F | Since: 323
     */
    function scAccountInfoGetNickname(): string;
    /**
     * No comment provided
     *
     * Hash: 0x225798743970412B | Since: 323
     */
    function scAchievementInfoStatus(): [boolean, number];
    /**
     * Same as HAS_ACHIEVEMENT_BEEN_PASSED
     *
     * Hash: 0x418DC16FAE452C1C | Since: 323
     */
    function scHasAchievementBeenPassed(achievementId: number): boolean;
}
export declare namespace stats {
    /**
     * Example:
     *
     * for (v_2 = 0; v_2 <= 4; v_2 += 1) {
     * `STATS::STAT_CLEAR_SLOT_FOR_RELOAD(v_2);`
     * }
     *
     * Hash: 0xEB0A72181D4AA4AD | Since: 323
     */
    function statClearSlotForReload(statSlot: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA651443F437B1CE6 | Since: 323
     */
    function statLoad(statSlot: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE07BCA305B82D2FD | Since: 323
     */
    function ave(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5688585E6D563CD8 | Since: 323
     */
    function etOpenSavetypeInJob(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA1750FFAFA181661 | Since: 323
     */
    function statLoadPending(statSlot: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7D3A583856F2C5AC | Since: 323
     */
    function avePending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBBB6AD006F1BBEA3 | Since: 323
     */
    function avePendingOrRequested(): boolean;
    /**
     * p0 is characterSlot? seems range from 0 to 2
     *
     * Hash: 0x49A49BED12794D70 | Since: 323
     */
    function statDeleteSlot(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0D0A9F0E7BD91E3C | Since: 323
     */
    function lotIsLoaded(statSlot: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7F2C4CDF2E82DF4C | Since: 323
     */
    function statCloudSlotLoadFailed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE496A53BA5F50A56 | Since: 323
     */
    function statCloudSlotLoadFailedCode(): number;
    /**
     * No comment provided
     *
     * Hash: 0xF434A10BA01C37D0 | Since: 323
     */
    function etBlockSaves(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6A7F19756F1A9016 | Since: 2060
     */
    function statGetBlockSaves(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7E6946F68A38B74F | Since: 323
     */
    function statCloudSlotSaveFailed(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA8733668D1047B51 | Since: 323
     */
    function statClearPendingSaves(): void;
    /**
     * No comment provided
     *
     * Hash: 0xECB41AC6AB754401 | Since: 323
     */
    function statLoadDirtyReadDetected(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9B4BD21D69B1E609 | Since: 323
     */
    function statClearDirtyReadDetected(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC0E0D686DDFC6EAE | Since: 323
     */
    function statGetLoadSafeToProgressToMpFromSp(): boolean;
    /**
     * Returns stat hash based on dataType, statIndex/statId and characterSlot. Related to CStatsMpCharacterMappingData
     *
     * Hash: 0xD69CE161FE614531 | Since: 2944
     */
    function getStatHashForCharacterStat(dataType: number, statIndex: number, charSlot: number): number;
    /**
     * Example:
     * `STATS::STAT_SET_INT(MISC::GET_HASH_KEY("MPPLY_KILLS_PLAYERS"), 1337, true);`
     *
     * Hash: 0xB3271D7AB655B441 | Since: 323
     */
    function etInt(statName: number | string, value: number, save: boolean): boolean;
    /**
     * Example:
     * `STATS::STAT_SET_FLOAT(MISC::GET_HASH_KEY("MP0_WEAPON_ACCURACY"), 66.6f, true);`
     *
     * Hash: 0x4851997F37FE9B3C | Since: 323
     */
    function etFloat(statName: number | string, value: number, save: boolean): boolean;
    /**
     * Example:
     * `STATS::STAT_SET_BOOL(MISC::GET_HASH_KEY("MPPLY_MELEECHLENGECOMPLETED"), trur, true);`
     *
     * Hash: 0x4B33C4243DE0C432 | Since: 323
     */
    function etBool(statName: number | string, value: boolean, save: boolean): boolean;
    /**
     * The following values have been found in the decompiled scripts:
     * "RC_ABI1"
     * "RC_ABI2"
     * "RC_BA1"
     * "RC_BA2"
     * "RC_BA3"
     * "RC_BA3A"
     * "RC_BA3C"
     * "RC_BA4"
     * "RC_DRE1"
     * "RC_EPS1"
     * "RC_EPS2"
     * "RC_EPS3"
     * "RC_EPS4"
     * "RC_EPS5"
     * "RC_EPS6"
     * "RC_EPS7"
     * "RC_EPS8"
     * "RC_EXT1"
     * "RC_EXT2"
     * "RC_EXT3"
     * "RC_EXT4"
     * "RC_FAN1"
     * "RC_FAN2"
     * "RC_FAN3"
     * "RC_HAO1"
     * "RC_HUN1"
     * "RC_HUN2"
     * "RC_JOS1"
     * "RC_JOS2"
     * "RC_JOS3"
     * "RC_JOS4"
     * "RC_MAU1"
     * "RC_MIN1"
     * "RC_MIN2"
     * "RC_MIN3"
     * "RC_MRS1"
     * "RC_MRS2"
     * "RC_NI1"
     * "RC_NI1A"
     * "RC_NI1B"
     * "RC_NI1C"
     * "RC_NI1D"
     * "RC_NI2"
     * "RC_NI3"
     * "RC_OME1"
     * "RC_OME2"
     * "RC_PA1"
     * "RC_PA2"
     * "RC_PA3"
     * "RC_PA3A"
     * "RC_PA3B"
     * "RC_PA4"
     * "RC_RAM1"
     * "RC_RAM2"
     * "RC_RAM3"
     * "RC_RAM4"
     * "RC_RAM5"
     * "RC_SAS1"
     * "RC_TON1"
     * "RC_TON2"
     * "RC_TON3"
     * "RC_TON4"
     * "RC_TON5"
     *
     * Hash: 0x17695002FD8B2AE0 | Since: 323
     */
    function etGxtLabel(statName: number | string, value: string, save: boolean): boolean;
    /**
     * 'value' is a structure to a structure, 'numFields' is how many fields there are in said structure (usually 7).
     *
     * The structure looks like this:
     *
     * int year
     * int month
     * int day
     * int hour
     * int minute
     * int second
     * int millisecond
     *
     * `The decompiled scripts use TIME::GET_POSIX_TIME to fill this structure.`
     *
     * Hash: 0x2C29BFB64F4FCBE4 | Since: 323
     */
    function etDate(statName: number | string, numFields: number, save: boolean): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xA87B2335D12531D7 | Since: 323
     */
    function etString(statName: number | string, value: string, save: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDB283FDE680FE72E | Since: 323
     */
    function etPos(statName: number | string, pos: Vector3, save: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x7BBB1B54583ED410 | Since: 323
     */
    function etMaskedInt(statName: number | string, save: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8CDDF1E452BABE11 | Since: 323
     */
    function etUserId(statName: number | string, value: string, save: boolean): boolean;
    /**
     * p1 always true.
     *
     * Hash: 0xC2F84B7F9C4D0C61 | Since: 323
     */
    function etCurrentPosixTime(statName: number | string): boolean;
    /**
     * p2 appears to always be -1
     *
     *
     * Hash: 0x767FBC2AC802EF3D | Since: 323
     */
    function statGetInt(statHash: number | string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xD7AE6C9C9C6AC54C | Since: 323
     */
    function statGetFloat(statHash: number | string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x11B5E6D2AE73F48E | Since: 323
     */
    function statGetBool(statHash: number | string): [boolean, boolean];
    /**
     * p3 is probably characterSlot or BOOL save, always -1
     *
     * Hash: 0x8B0FACEFC36C824B | Since: 323
     */
    function statGetDate(statHash: number | string, numFields: number): [boolean, any];
    /**
     * p1 is always -1 in the script files
     *
     * Hash: 0xE50384ACC2C3DB74 | Since: 323
     */
    function statGetString(statHash: number | string): string;
    /**
     * p3 is probably characterSlot or BOOL save, always -1
     *
     * Hash: 0x350F82CCB186AA1B | Since: 323
     */
    function statGetPos(statName: number | string): [boolean, number, number, number];
    /**
     * p4 is probably characterSlot or BOOL save
     *
     * Hash: 0x655185A06D9EEAAB | Since: 323
     */
    function statGetMaskedInt(statHash: number | string): [boolean, number];
    /**
     * Returns the rockstar ID (user id) value of a given stat. Returns "STAT_UNKNOWN" if the statHash is invalid or the stat has no userId
     *
     * Hash: 0x2365C388E393BBE2 | Since: 323
     */
    function statGetUserId(statHash: number | string): string;
    /**
     * No comment provided
     *
     * Hash: 0x5473D4195058B2E4 | Since: 323
     */
    function statGetLicensePlate(statName: number | string): string;
    /**
     * No comment provided
     *
     * Hash: 0x69FF13266D7296DA | Since: 323
     */
    function etLicensePlate(statName: number | string, str: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9B5A68C6489E9909 | Since: 323
     */
    function statIncrement(statName: number | string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A556B229A169402 | Since: 323
     */
    function statCommunityStartSynch(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB1D2BB1E1631F5B1 | Since: 323
     */
    function statCommunitySynchIsPending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBED9F5693F34ED17 | Since: 323
     */
    function statCommunityGetHistory(statName: number | string): [boolean, number];
    /**
     * p0 seems to range from 0 to 7
     *
     * Hash: 0x26D7399B9587FE89 | Since: 323
     */
    function statResetAllOnlineCharacter(): void;
    /**
     * p0 seems to range from 0 to 7
     *
     * Hash: 0xA78B8FA58200DA56 | Since: 323
     */
    function statLocalResetAllOnlineCharacter(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE0E854F5280FB769 | Since: 323
     */
    function statGetNumberOfDays(statName: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xF2D4B2FE415AAFC3 | Since: 323
     */
    function statGetNumberOfHours(statName: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x7583B4BE4C5A41B5 | Since: 323
     */
    function statGetNumberOfMinutes(statName: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x2CE056FF3723F00B | Since: 323
     */
    function statGetNumberOfSeconds(statName: number | string): number;
    /**
     * Does not take effect immediately, unfortunately.
     *
     * profileSetting seems to only be 936, 937 and 938 in scripts
     *
     * Hash: 0x68F01422BE1D838F | Since: 323
     */
    function etProfileSettingValue(profileSetting: number, value: number): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0xC01D2470F22CDE5A | Since: 2372
     */
    function completedCharacterCreation(): void;
    /**
     * Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_MASKED_INT"?
     *
     * Hash: 0x94F12ABF9C79E339 | Since: 323
     */
    function packedStatGetIntStatIndex(): number;
    /**
     * No comment provided
     *
     * Hash: 0x61E111E323419E07 | Since: 323
     */
    function getPackedIntStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xD16C2AD6B8E32854 | Since: 323
     */
    function getPackedTuIntStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
    /**
     * Needs more research. Gets the stat name of a masked int?
     *
     * section - values used in the decompiled scripts:
     * "_NGPSTAT_INT"
     * "_MP_NGPSTAT_INT"
     * "_MP_LRPSTAT_INT"
     * "_MP_APAPSTAT_INT"
     * "_MP_LR2PSTAT_INT"
     * "_MP_BIKEPSTAT_INT"
     * "_MP_IMPEXPPSTAT_INT"
     * "_MP_GUNRPSTAT_INT"
     * "_NGDLCPSTAT_INT"
     * "_MP_NGDLCPSTAT_INT"
     * "_DLCSMUGCHARPSTAT_INT"
     * "_GANGOPSPSTAT_INT"
     * "_BUSINESSBATPSTAT_INT"
     * "_ARENAWARSPSTAT_INT"
     * "_CASINOPSTAT_INT"
     * "_CASINOHSTPSTAT_INT"
     *
     * Hash: 0x2B4CDCA6F07FF3DA | Since: 323
     */
    function getPackedNgIntStatKey(index: number, spStat: boolean, charStat: boolean, character: number, section: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xDA7EBFC49AE3F1B0 | Since: 2545
     */
    function getPackedStatBoolCode(index: number, characterSlot: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0BC900A6FE73770C | Since: 2545
     */
    function getPackedStatIntCode(index: number, characterSlot: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xDB8A58AEAA67CD07 | Since: 2545
     */
    function setPackedStatBoolCode(index: number, value: boolean, characterSlot: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1581503AE529CD2E | Since: 2545
     */
    function setPackedStatIntCode(index: number, value: number, characterSlot: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5009DFD741329729 | Since: 323
     */
    function playBackgroundScriptAction(action: string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE6A27CDA42887F93 | Since: 2944
     */
    function playFlowLow(pos: Vector3, action: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC4493521BAA12CCE | Since: 3095
     */
    function playFlowMedium(pos: Vector3, action: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xCFB0E9C3456319EA | Since: 3258
     */
    function playFlowHigh(pos: Vector3, action: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x93054C88E6AA7C44 | Since: 323
     */
    function playNpcInvite(): void;
    /**
     * No comment provided
     *
     * Hash: 0x46F917F6B4128FE4 | Since: 323
     */
    function playAwardXp(amount: number, _type: number | string, category: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xC7F2DE41D102BFB4 | Since: 323
     */
    function playRankUp(rank: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x098760C7461724CD | Since: 323
     */
    function playStartedSessionInOfflinemode(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA071E0ED98F91286 | Since: 323
     */
    function playActivityDone(activityId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC5BE134EC7BA96A0 | Since: 323
     */
    function playLeaveJobChain(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC19A2925C34D2231 | Since: 323
     */
    function playMissionStarted(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7C4BB33A8CED7324 | Since: 323
     */
    function playMissionOver(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC900596A63978C1D | Since: 323
     */
    function playMissionCheckpoint(): void;
    /**
     * No comment provided
     *
     * Hash: 0x71862B1D855F32E1 | Since: 323
     */
    function playRandomMissionDone(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x121FB4DDDC2D5291 | Since: 323
     */
    function playRosBet(amount: number, act: number, player: number | string | Player, cm: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9C375C315099DDE4 | Since: 323
     */
    function playRaceCheckpoint(p0: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x6DEE77AFF8C21BD1 | Since: 323
     */
    function playCreateMatchHistoryId2(): [boolean, number, number];
    /**
     * No comment provided
     *
     * Hash: 0xBC80E22DED931E3D | Since: 323
     */
    function playMatchStarted(): void;
    /**
     * No comment provided
     *
     * Hash: 0x176852ACAAC173D1 | Since: 323
     */
    function playShopItem(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1CAE5D2E3F9A07F0 | Since: 323
     */
    function playCrateDropMissionDone(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAFC7E5E075A96F46 | Since: 323
     */
    function playCrateCreated(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCB00196B31C39EB1 | Since: 323
     */
    function playHoldUpMissionDone(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2B69F5074C894811 | Since: 323
     */
    function playImportExportMissionDone(): void;
    /**
     * No comment provided
     *
     * Hash: 0xADDD1C754E2E2914 | Since: 323
     */
    function playRaceToPointMissionDone(): void;
    /**
     * No comment provided
     *
     * Hash: 0x79AB33F0FBFAC40C | Since: 323
     */
    function playAcquiredHiddenPackage(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDDF24D535060F811 | Since: 323
     */
    function playWebsiteVisited(scaleformHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x0F71DE29AB2258F1 | Since: 323
     */
    function playFriendActivity(): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0x69DEA3E9DB727B4C | Since: 323
     */
    function playOddjobDone(totalTimeMs: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBA739D6D5A05D6E7 | Since: 323
     */
    function playPropChange(p0: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x34B973047A2268B9 | Since: 323
     */
    function playClothChange(p0: number | Ped): void;
    /**
     * This is a typo made by R*. It's supposed to be called PLAYSTATS_WEAPON_MOD_CHANGE.
     *
     * Hash: 0xE95C8A1875A02CA4 | Since: 323
     */
    function playWeaponModeChange(weaponHash: number | string, componentHashTo: number | string, componentHashFrom: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x6058665D72302D3F | Since: 323
     */
    function playCheatApplied(cheat: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF8C54A461C3E11DC | Since: 323
     */
    function playJobActivityEnd(): [any, any, any, any];
    /**
     * No comment provided
     *
     * Hash: 0xF5BB8DAC426A52C0 | Since: 323
     */
    function playJobBend(): [any, any, any, any];
    /**
     * No comment provided
     *
     * Hash: 0xA736CF7FB7C5BFF4 | Since: 323
     */
    function playJobLtsEnd(): [any, any, any, any];
    /**
     * No comment provided
     *
     * Hash: 0x14E0B2D1AD1044E0 | Since: 323
     */
    function playJobLtsRoundEnd(): [any, any, any, any];
    /**
     * No comment provided
     *
     * Hash: 0x90D0622866E80445 | Since: 323
     */
    function playQuickfixTool(element: number, item: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5DA3A8DE8CB6226F | Since: 323
     */
    function playIdleKick(msStoodIdle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1032E482629049E | Since: 323
     */
    function playSetJoinType(joinType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF4FF020A08BC8863 | Since: 323
     */
    function playHeistSaveCheat(hash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x46326E13DA4E0546 | Since: 323
     */
    function playAppendDirectorMetric(): any;
    /**
     * No comment provided
     *
     * Hash: 0x47B32F5611E6E483 | Since: 463
     */
    function playAwardBadSport(id: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9572BD4DD6B72122 | Since: 1180
     */
    function playPegasusAsPersonalAircraft(modelHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF96E9EA876D9DC92 | Since: 2802
     */
    function playShopmenuNav(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6A60E43998228229 | Since: 463
     */
    function playFmEventChallenges(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBFAFDB5FAAA5C5AB | Since: 463
     */
    function playFmEventVehicletarget(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8C9D11605E59D955 | Since: 463
     */
    function playFmEventUrbanwarfare(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3DE3AA516FB126A4 | Since: 463
     */
    function playFmEventCheckpointcollection(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBAA2F0490E146BE8 | Since: 463
     */
    function playFmEventAtob(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1A7CE7CD3E653485 | Since: 463
     */
    function playFmEventPennedin(): void;
    /**
     * No comment provided
     *
     * Hash: 0x419615486BBF1956 | Since: 463
     */
    function playFmEventPasstheparcel(): void;
    /**
     * No comment provided
     *
     * Hash: 0x84DFC579C2FC214C | Since: 463
     */
    function playFmEventHotproperty(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A9C7F36E5D7B683 | Since: 463
     */
    function playFmEventDeaddrop(): void;
    /**
     * No comment provided
     *
     * Hash: 0x164C5FF663790845 | Since: 463
     */
    function playFmEventKingofthecastle(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEDBF6C9B0D2C65C8 | Since: 463
     */
    function playFmEventCriminaldamage(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6551B1F7F6CD46EA | Since: 463
     */
    function playFmEventCompetitiveurbanwarfare(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2CD90358F67D0AA8 | Since: 463
     */
    function playFmEventHuntbeast(): void;
    /**
     * No comment provided
     *
     * Hash: 0x203B381133817079 | Since: 393
     */
    function playPimenuHideOptions(): any;
    /**
     * Known text types: NAME_YACHT, NAME_ORG_OFFICE
     *
     * Hash: 0xAA434D7D0A89A95C | Since: 3258
     */
    function playNamedUserContent(isBoss: boolean, bossType: number, bossId1: number, bossId2: number, textType: number, textString: string, textSource: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x117B45156D7EFF2E | Since: 323
     */
    function leaderboardsGetNumberOfColumns(): number;
    /**
     * No comment provided
     *
     * Hash: 0xC4B5467A1886EA7E | Since: 323
     */
    function leaderboardsGetColumnId(): number;
    /**
     * No comment provided
     *
     * Hash: 0xBF4FEF46DB7894D3 | Since: 323
     */
    function leaderboardsGetColumnType(): number;
    /**
     * No comment provided
     *
     * Hash: 0xA34CB6E6F0DF4A0B | Since: 323
     */
    function leaderboardsReadClearAll(): number;
    /**
     * No comment provided
     *
     * Hash: 0x7CCE5C737A665701 | Since: 323
     */
    function leaderboardsReadClear(): number;
    /**
     * No comment provided
     *
     * Hash: 0xAC392C8483342AC2 | Since: 323
     */
    function leaderboardsReadPending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA31FD15197B192BD | Since: 323
     */
    function leaderboardsReadAnyPending(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2FB19228983E832C | Since: 323
     */
    function leaderboardsReadSuccessful(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x918B101666F9CB83 | Since: 323
     */
    function leaderboards2ReadFriendsByRow(): [boolean, any, any];
    /**
     * No comment provided
     *
     * Hash: 0xC30713A383BFBF0E | Since: 323
     */
    function leaderboards2ReadByHandle(): [boolean, any, any];
    /**
     * No comment provided
     *
     * Hash: 0xBA2C7DB0C129449A | Since: 323
     */
    function leaderboards2ReadByRank(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x5CE587FB5A42C8C4 | Since: 323
     */
    function leaderboards2ReadByRadius(): [boolean, any, any];
    /**
     * No comment provided
     *
     * Hash: 0x7EEC7E4F6984A16A | Since: 323
     */
    function leaderboards2ReadByScoreInt(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xE662C8B759D08F3C | Since: 323
     */
    function leaderboards2ReadByScoreFloat(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xC38DC1E90D22547C | Since: 323
     */
    function leaderboards2ReadRankPrediction(): [boolean, any, any, any];
    /**
     * No comment provided
     *
     * Hash: 0xF1AE5DCDBFCA2721 | Since: 323
     */
    function leaderboards2ReadByPlaform(gamerHandleCsv: string, platformName: string): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xA0F93D5465B3094D | Since: 323
     */
    function leaderboards2ReadGetRowDataStart(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x71B008056E5692D6 | Since: 323
     */
    function leaderboards2ReadGetRowDataEnd(): void;
    /**
     * No comment provided
     *
     * Hash: 0x34770B9CE0E03B91 | Since: 323
     */
    function leaderboards2ReadGetRowDataInfo(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x88578F6EC36B4A3A | Since: 323
     */
    function leaderboards2ReadGetRowDataInt(): number;
    /**
     * No comment provided
     *
     * Hash: 0x38491439B6BA7F7D | Since: 323
     */
    function leaderboards2ReadGetRowDataFloat(): number;
    /**
     * No comment provided
     *
     * Hash: 0xAE2206545888AE49 | Since: 323
     */
    function leaderboards2WriteData(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x0BCA1D2C47B0D269 | Since: 323
     */
    function leaderboardsWriteAddColumn(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2E65248609523599 | Since: 323
     */
    function leaderboardsWriteAddColumnLong(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB9BB18E2C40142ED | Since: 323
     */
    function leaderboardsCacheDataRow(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xD4B02A6B476E1FDC | Since: 323
     */
    function leaderboardsClearCacheData(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8EC74CEB042E7CFF | Since: 323
     */
    function leaderboardsClearCacheDataId(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9C51349BE6CDFE2C | Since: 323
     */
    function leaderboardsGetCacheExists(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF04C1C27DA35F6C8 | Since: 323
     */
    function leaderboardsGetCacheTime(): number;
    /**
     * No comment provided
     *
     * Hash: 0x58A651CD201D89AD | Since: 323
     */
    function leaderboardsGetCacheNumberOfRows(): number;
    /**
     * No comment provided
     *
     * Hash: 0x9120E8DBA3D69273 | Since: 323
     */
    function leaderboardsGetCacheDataRow(): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0x11FF1C80276097ED | Since: 323
     */
    function presenceEventUpdatestatInt(statHash: number | string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x30A6614C1F7799B8 | Since: 323
     */
    function presenceEventUpdatestatFloat(statHash: number | string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6483C25849031C4F | Since: 323
     */
    function presenceEventUpdatestatIntWithString(statHash: number | string, value: number, _string: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5EAD2BF6484852E4 | Since: 323
     */
    function getPlayerHasDrivenAllVehicles(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC141B8917E0017EC | Since: 323
     */
    function setHasPostedAllVehiclesDriven(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB475F27C6A994D65 | Since: 323
     */
    function setProfileSettingPrologueComplete(): void;
    /**
     * Sets profile setting 939
     *
     * Hash: 0xC67E2DA1CBE759E2 | Since: 1734
     */
    function setProfileSettingSpChopMissionComplete(): void;
    /**
     * Sets profile setting 933
     *
     * Hash: 0xF1A1803D3476F215 | Since: 323
     */
    function setProfileSettingCreatorRacesDone(value: number): void;
    /**
     * Sets profile setting 934
     *
     * Hash: 0x38BAAA5DD4C9D19F | Since: 323
     */
    function setProfileSettingCreatorDmDone(value: number): void;
    /**
     * Sets profile setting 935
     *
     * Hash: 0x55384438FC55AD8E | Since: 323
     */
    function setProfileSettingCreatorCtfDone(value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x723C1CE13FBFDB67 | Since: 323
     */
    function setJobActivityIdStarted(characterSlot: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0D01D20616FC73FB | Since: 323
     */
    function setFreemodePrologueDone(characterSlot: number): void;
    /**
     * Sets profile setting 940 and 941
     *
     * Hash: 0x79D310A861697CC9 | Since: 2699
     */
    function setFreemodeStrandProgressionStatus(profileSetting: number, settingValue: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x428EAF89E24F6C36 | Since: 323
     */
    function statNetworkIncrementOnSuicide(): void;
    /**
     * No comment provided
     *
     * Hash: 0x047CBED6F6F8B63C | Since: 323
     */
    function etCheatIsActive(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC980E62E33DF1D5C | Since: 323
     */
    function leaderboards2WriteDataForEventType(): [boolean, any, any];
    /**
     * No comment provided
     *
     * Hash: 0x6F361B8889A792A3 | Since: 323
     */
    function forceCloudMpDownloadAndOverwriteLocalSave(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC847B43F369AC0B5 | Since: 323
     */
    function statMigrateClearForRestart(): void;
    /**
     * platformName must be one of the following: ps3, xbox360, ps4, xboxone
     *
     * Hash: 0xA5C80D8E768A9E66 | Since: 323
     */
    function statMigrateSavegameStart(platformName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9A62EC95AE10E011 | Since: 323
     */
    function statMigrateSavegameGetStatus(): number;
    /**
     * No comment provided
     *
     * Hash: 0x4C89FE2BDEB3F169 | Since: 323
     */
    function statMigrateCheckAlreadyDone(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC6E0E2616A7576BB | Since: 323
     */
    function statMigrateCheckStart(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5BD5F255321C4AAF | Since: 323
     */
    function statMigrateCheckGetIsPlatformAvailable(): number;
    /**
     * No comment provided
     *
     * Hash: 0xDEAAF77EB3687E97 | Since: 323
     */
    function statMigrateCheckGetPlatformStatus(): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0x886913BBEACA68C1 | Since: 323
     */
    function statGetSaveMigrationStatus(): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0x4FEF53183C3C6414 | Since: 323
     */
    function aveMigrationCancelPendingOperation(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x567384DFA67029E6 | Since: 323
     */
    function statGetCancelSaveMigrationStatus(): number;
    /**
     * No comment provided
     *
     * Hash: 0x3270F67EED31FBC1 | Since: 323
     */
    function aveMigrationConsumeContent(contentId: number | string, srcPlatform: string, srcGamerHandle: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCE5AA445ABA8DEE0 | Since: 323
     */
    function statGetSaveMigrationConsumeContentStatus(): [number, number];
    /**
     * No comment provided
     *
     * Hash: 0x98E2BC1CA26287C3 | Since: 323
     */
    function statEnableTracking(): void;
    /**
     * Prevents updates to CStatsMgr (e.g., STAT_SET_* natives)
     *
     * Hash: 0x629526ABA383BCAA | Since: 323
     */
    function statDisableTracking(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBE3DB208333D9844 | Since: 463
     */
    function statIsTrackingEnabled(): boolean;
    /**
     * enum StatTrackingType
     * {
     * LongestWheelie = 1,
     * LongestStoppie = 2,
     * NoCrashes = 3,
     * HighestSpeed = 4,
     * _MostFlips = 5,
     * _LongestSpin = 6,
     * _HighestJumpReached = 7,
     * LongestJump = 8,
     * _NearMissesNoCrash = 9,
     * LongestFallSurvived = 10,
     * LowestParachute = 11,
     * ReverseDriving = 12,
     * LongestFreefall = 13,
     * VehiclesStolen = 14,
     * _SomeCFireEventCount = 15,
     * _Unk16 = 16,
     * _LowFlyingTime = 17,
     * LowFlying = 18,
     * _InvertedFlyingTime = 19,
     * InvertedFlying = 20,
     * _PlaneSpinCount = 21,
     * MeleeKills = 22, // Players
     * _LongestSniperKill = 23,
     * SniperSkills = 24, // Players
     * DrivebyKills = 25, // Players
     * HeadshotKills = 26, // Players
     * LongestBail = 27,
     * _TotalRammedByCar = 28,
     * NearMissesPrecise = 29,
     * _FreefallTime = 30,
     * Unk31 = 31,
     * }
     *
     * enum StatTrackingValueType
     * {
     * Total,
     * Max,
     * Min
     * }
     *
     * Hash: 0x33D72899E24C3365 | Since: 463
     */
    function tartRecordStat(statType: number, valueType: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA761D4AC6115623D | Since: 463
     */
    function topRecordStat(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF11F01D98113536A | Since: 463
     */
    function statGetRecordedValue(): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x8B9CDBD6C566C38C | Since: 944
     */
    function statIsRecordingStat(): boolean;
    /**
     * Perform the most near misses with other vehicles in a land vehicle without crashing
     *
     * Hash: 0xE8853FBCE7D8D0D6 | Since: 463
     */
    function statGetCurrentNearMissNocrashPrecise(): number;
    /**
     * Perform the longest wheelie on a motorcycle
     *
     * Hash: 0xA943FD1722E11EFD | Since: 463
     */
    function statGetCurrentRearWheelDistance(): number;
    /**
     * Perform the longest stoppie on a motorcycle
     *
     * Hash: 0x84A810B375E69C0E | Since: 463
     */
    function statGetCurrentFrontWheelDistance(): number;
    /**
     * Perform the longest jump in a land vehicle
     *
     * Hash: 0x9EC8858184CD253A | Since: 463
     */
    function statGetCurrentJumpDistance(): number;
    /**
     * Drive the furthest distance in a land vehicle without crashing
     *
     * Hash: 0xBA9749CC94C1FD85 | Since: 463
     */
    function statGetCurrentDriveNocrashDistance(): number;
    /**
     * Achieve the highest speed in a land vehicle
     *
     * Hash: 0x55A8BECAF28A4EB7 | Since: 463
     */
    function statGetCurrentSpeed(): number;
    /**
     * Reverse the longest distance without crashing
     *
     * Hash: 0x32CAC93C9DE73D32 | Since: 463
     */
    function statGetCurrentDrivingReverseDistance(): number;
    /**
     * Fall the longest distance with a parachute before opening it
     *
     * Hash: 0xAFF47709F1D5DCCE | Since: 463
     */
    function statGetCurrentSkydivingDistance(): number;
    /**
     * Fly low to the ground for the longest distance
     *
     * Hash: 0x6E0A5253375C4584 | Since: 463
     */
    function statGetChallengeFlyingDist(): number;
    /**
     * No comment provided
     *
     * Hash: 0x1A8EA222F9C67DBB | Since: 463
     */
    function statGetFlyingAltitude(): [boolean, number];
    /**
     * Or non-flyable area
     *
     * Hash: 0xF9F2922717B819EC | Since: 505
     */
    function statIsPlayerVehicleAboveOcean(): boolean;
    /**
     * Travel the furthest distance when bailing from a vehicle
     *
     * Hash: 0x0B8B7F74BF061C6D | Since: 463
     */
    function statGetVehicleBailDistance(): number;
    /**
     * This function is hard-coded to always return 1.
     *
     * Hash: 0xB3DA2606774A8E2D | Since: 323
     */
    function statRollbackSaveMigration(): boolean;
    /**
     * Sets profile setting 866
     *
     * Hash: 0xDAC073C7901F9E15 | Since: 323
     */
    function setHasSpecialeditionContent(value: number): void;
    /**
     * Sets profile setting 501
     *
     * Hash: 0xF6792800AC95350D | Since: 323
     */
    function setSaveMigrationTransactionIdWarning(transactionId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6BC0ACD0673ACEBE | Since: 573
     */
    function getBossGoonUuid(characterSlot: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8D8ADB562F09A245 | Since: 573
     */
    function playBwBossonbossdeathmatch(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1A1EE3B4FA8E760 | Since: 573
     */
    function playBwYatchattack(): void;
    /**
     * No comment provided
     *
     * Hash: 0x88087EE1F28024AE | Since: 573
     */
    function playBwHuntTheBoss(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFCC228E07217FCAC | Since: 573
     */
    function playBwSightseer(): void;
    /**
     * No comment provided
     *
     * Hash: 0x678F86D8FC040BDB | Since: 573
     */
    function playBwAssault(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA6F54BB2FFCA35EA | Since: 573
     */
    function playBwBellyOfTheBeast(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5FF2C33B13A02A11 | Since: 757
     */
    function playBwHeadHunter(): void;
    /**
     * No comment provided
     *
     * Hash: 0x282B6739644F4347 | Since: 757
     */
    function playBwFragileGoods(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF06A6F41CB445443 | Since: 757
     */
    function playBwAirFreight(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7B18DA61F6BAE9D5 | Since: 573
     */
    function playBcCarJacking(): void;
    /**
     * No comment provided
     *
     * Hash: 0x06EAF70AE066441E | Since: 573
     */
    function playBcSmashAndGrab(): void;
    /**
     * No comment provided
     *
     * Hash: 0x14EDA9EE27BD1626 | Since: 573
     */
    function playBcProtectionRacket(): void;
    /**
     * No comment provided
     *
     * Hash: 0x930F504203F561C9 | Since: 573
     */
    function playBcMostWanted(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE3261D791EB44ACB | Since: 573
     */
    function playBcFindersKeepers(): void;
    /**
     * No comment provided
     *
     * Hash: 0x73001E34F85137F8 | Since: 573
     */
    function playBcPointToPoint(): void;
    /**
     * No comment provided
     *
     * Hash: 0x53CAE13E9B426993 | Since: 757
     */
    function playBcCashing(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7D36291161859389 | Since: 757
     */
    function playBcSalvage(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBE509B0A3693DE8B | Since: 757
     */
    function playSpentPiCustomLoadout(amount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD6781E42755531F7 | Since: 757
     */
    function playBuyContrabandMission(): any;
    /**
     * No comment provided
     *
     * Hash: 0xC729991A9065376E | Since: 757
     */
    function playSellContrabandMission(): any;
    /**
     * No comment provided
     *
     * Hash: 0x2605663BD4F23B5D | Since: 757
     */
    function playDefendContrabandMission(): any;
    /**
     * No comment provided
     *
     * Hash: 0x04D90BA8207ADA2D | Since: 757
     */
    function playRecoverContrabandMission(): any;
    /**
     * No comment provided
     *
     * Hash: 0x60EEDC12AF66E846 | Since: 757
     */
    function playHitContrabandDestroyLimit(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3EBEAC6C3F81F6BD | Since: 573
     */
    function startBeingBoss(): void;
    /**
     * No comment provided
     *
     * Hash: 0x96E6D5150DBF1C09 | Since: 573
     */
    function startBeingGoon(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA3C53804BDB68ED2 | Since: 573
     */
    function endBeingBoss(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6BCCF9948492FD85 | Since: 573
     */
    function endBeingGoon(): void;
    /**
     * No comment provided
     *
     * Hash: 0x792271AB35C356A4 | Since: 573
     */
    function hiredLimo(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCEA553E35C2246E1 | Since: 573
     */
    function orderBossVehicle(vehicleHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xD1C9B92BDD3F151D | Since: 573
     */
    function changeUniform(): void;
    /**
     * No comment provided
     *
     * Hash: 0x44919CC079BB60BF | Since: 573
     */
    function changeGoonLookingForWork(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7033EEFD9B28088E | Since: 678
     */
    function sendMetricGhostingToPlayer(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAA525DFF66BB82F5 | Since: 757
     */
    function sendMetricVipPoach(): void;
    /**
     * No comment provided
     *
     * Hash: 0x015B03EE1C43E6EC | Since: 757
     */
    function sendMetricPunishBodyguard(): void;
    /**
     * Allows CEventNetworkStuntPerformed to be triggered.
     *
     * Hash: 0x928DBFB892638EF3 | Since: 791
     */
    function playStartTrackingStunts(): void;
    /**
     * Disallows CEventNetworkStuntPerformed to be triggered.
     *
     * Hash: 0x8A800DACCC0DA55D | Since: 791
     */
    function playStopTrackingStunts(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF371CD2B64212FD | Since: 877
     */
    function playMissionEnded(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7D8BA05688AD64C7 | Since: 944
     */
    function playImpexpMissionEnded(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0B565B0AAE56A0E8 | Since: 877
     */
    function playChangeMcRole(role: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x28ECB8AC2F607DB2 | Since: 877
     */
    function playChangeMcOutfit(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A50D2604E05CB94 | Since: 877
     */
    function playSwitchMcEmblem(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCC25A4553DFBF9EA | Since: 877
     */
    function playMcRequestBike(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF534D94DFA2EAD26 | Since: 877
     */
    function playMcKilledRivalMcMember(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD558BEC0BBA7E8D2 | Since: 877
     */
    function playAbandonedMc(): void;
    /**
     * No comment provided
     *
     * Hash: 0x501478855A6074CE | Since: 877
     */
    function playEarnedMcPoints(): void;
    /**
     * No comment provided
     *
     * Hash: 0x03C2EEBB04B3FB72 | Since: 877
     */
    function playMcFormationEnds(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8989CBD7B4E82534 | Since: 877
     */
    function playMcClubhouseActivity(): void;
    /**
     * No comment provided
     *
     * Hash: 0x27AA1C973CACFE63 | Since: 944
     */
    function playRivalBehavior(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB7257BA2550EA10A | Since: 877
     */
    function playCopyRankIntoNewSlot(): void;
    /**
     * No comment provided
     *
     * Hash: 0x848B66100EE33B05 | Since: 1011
     */
    function playDupeDetected(): any;
    /**
     * No comment provided
     *
     * Hash: 0x516FC96EB88EEFE5 | Since: 1011
     */
    function playBanAlert(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0EACDF8487D5155A | Since: 1103
     */
    function playGunrunningMissionEnded(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDAF80797FC534BEC | Since: 1103
     */
    function playGunrunningRnd(): void;
    /**
     * No comment provided
     *
     * Hash: 0x316DB59CD14C1774 | Since: 1493
     */
    function playBusinessBattleEnded(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2D7A9B577E72385E | Since: 1493
     */
    function playWarehouseMissionEnded(): void;
    /**
     * No comment provided
     *
     * Hash: 0x830C3A44EB3F2CF9 | Since: 1493
     */
    function playNightclubMissionEnded(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB26F670685631727 | Since: 1493
     */
    function playDjUsage(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC14BD9F5337219B2 | Since: 1493
     */
    function playMinigameUsage(): void;
    /**
     * No comment provided
     *
     * Hash: 0x35E39E5570358630 | Since: 1493
     */
    function playStoneHatchetEnded(): any;
    /**
     * No comment provided
     *
     * Hash: 0x320C35147D5B5DDD | Since: 1180
     */
    function playSmugglerMissionEnded(): any;
    /**
     * No comment provided
     *
     * Hash: 0xD8AFB345A9C5CCBB | Since: 1290
     */
    function playFmHeistPrepEnded(): any;
    /**
     * No comment provided
     *
     * Hash: 0x1E1497D0D2108115 | Since: 1290
     */
    function playInstancedHeistEnded(): any;
    /**
     * No comment provided
     *
     * Hash: 0x0BC254FF3A911501 | Since: 1290
     */
    function playDarCheckpoint(): any;
    /**
     * No comment provided
     *
     * Hash: 0x878FF156D36E9956 | Since: 1290
     */
    function playEnterSessionPack(): any;
    /**
     * No comment provided
     *
     * Hash: 0x66C7BB2416ED3FCE | Since: 1493
     */
    function playDroneUsage(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6731DE84A38BFAD0 | Since: 1604
     */
    function playSpinWheel(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6F4F599753F8200A | Since: 1604
     */
    function playArenaWarsSpectator(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB479D9F0D48A1BC5 | Since: 1604
     */
    function playArenaWarsEnded(): any;
    /**
     * No comment provided
     *
     * Hash: 0x35EEC6C2BC821A71 | Since: 1734
     */
    function playSwitchPassiveMode(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCD0A8A9338681CF2 | Since: 1734
     */
    function playCollectiblePickedUp(objectHash: number | string, moneyAmount: number, rpAmount: number, chipsAmount: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFCCCAC2BD3C1F180 | Since: 1734
     */
    function playCasinoStoryMissionEnded(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0999F3F090EC5012 | Since: 1734
     */
    function playCasinoChip(): void;
    /**
     * No comment provided
     *
     * Hash: 0x95101C443A84E7F1 | Since: 1734
     */
    function playCasinoRoulette(): void;
    /**
     * No comment provided
     *
     * Hash: 0x3EAE97309727E7AD | Since: 1734
     */
    function playCasinoBlackjack(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF740FB339D471C35 | Since: 1734
     */
    function playCasinoThreeCardPoker(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF5EC67D392B830A | Since: 1734
     */
    function playCasinoSlotMachine(): void;
    /**
     * No comment provided
     *
     * Hash: 0x049F059625058A86 | Since: 1734
     */
    function playCasinoInsideTrack(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0C432C1435F5E4FA | Since: 1734
     */
    function playCasinoLuckySeven(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6572ABA3DE1197FC | Since: 1734
     */
    function playCasinoRouletteLight(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD5451C7BF151EB6F | Since: 1734
     */
    function playCasinoBlackjackLight(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC9001364B4388F22 | Since: 1734
     */
    function playCasinoThreeCardPokerLight(): void;
    /**
     * No comment provided
     *
     * Hash: 0xE60054A0FAE8227F | Since: 1734
     */
    function playCasinoSlotMachineLight(): void;
    /**
     * No comment provided
     *
     * Hash: 0x23A3CBCD50D54E47 | Since: 1734
     */
    function playCasinoInsideTrackLight(): void;
    /**
     * No comment provided
     *
     * Hash: 0x533A7D1EA58DF958 | Since: 1734
     */
    function playArcadeGame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4FCDBD3F0A813C25 | Since: 1868
     */
    function playArcadeLoveMatch(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1A0D4A6C336B7BC5 | Since: 1734
     */
    function playFreemodeCasinoMissionEnded(): any;
    /**
     * No comment provided
     *
     * Hash: 0xDFBD93BF2943E29B | Since: 1868
     */
    function playHeist3Drone(): void;
    /**
     * No comment provided
     *
     * Hash: 0x92FC0EEDFAC04A14 | Since: 1868
     */
    function playHeist3Hack(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0077F15613D36993 | Since: 1868
     */
    function playNpcPhone(): any;
    /**
     * No comment provided
     *
     * Hash: 0xF9096193DF1F99D4 | Since: 1868
     */
    function playArcadeCabinet(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2E0259BABC27A327 | Since: 1868
     */
    function playHeist3Finale(): void;
    /**
     * No comment provided
     *
     * Hash: 0x53C31853EC9531FF | Since: 1868
     */
    function playHeist3Prep(): void;
    /**
     * No comment provided
     *
     * Hash: 0x810B5FCC52EC7FF0 | Since: 1868
     */
    function playMasterControl(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5BF29846C6527C54 | Since: 1868
     */
    function playQuitMode(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC03FAB2C2F92289B | Since: 1868
     */
    function playMissionVote(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5CDAED54B34B0ED0 | Since: 1868
     */
    function playNjvsVote(): void;
    /**
     * No comment provided
     *
     * Hash: 0x01D8B04D02F1217F | Since: 3570
     */
    function playDeathInfo(victimPed: number | Ped, killerPed: number | Ped, mentalState: number, revengeKill: boolean, victimKvK: number, killerKvK: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x46A70777BE6CEAB9 | Since: 2545
     */
    function playFmMissionEnd(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDFCDB14317A9B361 | Since: 2189
     */
    function playHeist4Prep(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC1E963C58664B556 | Since: 2189
     */
    function playHeist4Finale(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2FA3173480008493 | Since: 2189
     */
    function playHeist4Hack(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD4367D310F079DB0 | Since: 2189
     */
    function playSubWeap(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4DC416F246A41FC8 | Since: 2189
     */
    function playFastTrvl(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2818FF6638CB09DE | Since: 2189
     */
    function playHubEntry(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD6CA58B3B53A0F22 | Since: 2189
     */
    function playDjMissionEnded(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1A67DFBF1F5C3835 | Since: 2372
     */
    function playRobberyPrep(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBBA55BE9AAAABF44 | Since: 2372
     */
    function playRobberyFinale(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA5B74BAB8A7EF99 | Since: 2372
     */
    function playExtraEvent(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFF14D6FEEC507BBE | Since: 2372
     */
    function playCarclubPoints(): void;
    /**
     * No comment provided
     *
     * Hash: 0x1187CB58D7F3BED7 | Since: 2372
     */
    function playCarclubChallenge(): void;
    /**
     * No comment provided
     *
     * Hash: 0x69C922B677621428 | Since: 2372
     */
    function playCarclubPrize(vehicleModel: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x70F52471E758EBAE | Since: 2545
     */
    function playAwardNav(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7E5EED10B11CEDBA | Since: 3407
     */
    function playInitMultiplayer(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFEA3F7E83C0610FA | Since: 2545
     */
    function playInstMissionEnd(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A46ACE5C4661132 | Since: 2545
     */
    function playHubExit(): void;
    /**
     * No comment provided
     *
     * Hash: 0x10A691F5756416D0 | Since: 2944
     */
    function playVehDel(bossId1: number, bossId2: number, bossType: number, vehicleID: number, reason: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x887DAD63CF5B7908 | Since: 2699
     */
    function playInventory(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8A23D1324F6B2BAC | Since: 2802
     */
    function playAcidMissionEnd(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCEACCF0550FDC5BA | Since: 2802
     */
    function playAcidRnd(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEC9553A178E8F1D1 | Since: 2802
     */
    function playIdle(): void;
    /**
     * No comment provided
     *
     * Hash: 0x48FAC5DC7AC6EA99 | Since: 2802
     */
    function playPlayerStyle(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7EA06F970F999394 | Since: 2944
     */
    function playRandomEvent(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5649CA22AF74E019 | Since: 3095
     */
    function playAlert(): any;
    /**
     * No comment provided
     *
     * Hash: 0xBD642335A732F1A8 | Since: 2944
     */
    function playAttritionStageEnd(): void;
    /**
     * No comment provided
     *
     * Hash: 0x961D4157B9B428DB | Since: 2944
     */
    function playShowroomNav(entity: number | string): void;
    /**
     * Data struct contains various tunables related to test drives at Simeons Showroom or Luxury Showcase.
     *
     * Hash: 0x151D6C04C9E2742F | Since: 2944
     */
    function playShowroomOverview(): any;
    /**
     * No comment provided
     *
     * Hash: 0xE6D323A5E9EFFB76 | Since: 3258
     */
    function playPimenuNav(): any;
    /**
     * No comment provided
     *
     * Hash: 0xBEB0D930B3CCE4D5 | Since: 3258
     */
    function playRecoverVehicle(): any;
    /**
     * No comment provided
     *
     * Hash: 0x574A7808450E141C | Since: 3570
     */
    function playScriptEventFpom(): any;
}
export declare namespace streaming {
    /**
     * No comment provided
     *
     * Hash: 0xBD6E84632DD4CB3F | Since: 323
     */
    function loadAllObjectsNow(): void;
    /**
     * No comment provided
     *
     * Hash: 0x4448EB75B4904BDB | Since: 323
     */
    function loadScene(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xC4582015556D1C46 | Since: 323
     */
    function networkUpdateLoadScene(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x41CA5A33160EA4AB | Since: 323
     */
    function isNetworkLoadingScene(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE37B76C387BE28ED | Since: 323
     */
    function setInteriorActive(interiorID: number, toggle: boolean): void;
    /**
     * Request a model to be loaded into memory.
     *
     *
     * Hash: 0x963D27A58DF860AC | Since: 323
     */
    function requestModel(model: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xA0261AEF7ACFC51E | Since: 323
     */
    function requestMenuPedModel(model: number | string): void;
    /**
     * Checks if the specified model has loaded into memory.
     *
     * Hash: 0x98A4EB5D89A0C952 | Since: 323
     */
    function hasModelLoaded(model: number | string): boolean;
    /**
     * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "V_FIB01_cur_elev");`
     * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");`
     * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "V_Office_gnd_lifts");`
     * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "limbo");`
     * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "v_fib01_jan_elev");`
     * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");`
     *
     * Hash: 0x8A7A40100EDFEC58 | Since: 323
     */
    function requestModelsInRoom(interior: number, roomName: string): void;
    /**
     * Unloads model from memory
     *
     * Hash: 0xE532F5D78798DAAB | Since: 323
     */
    function setModelAsNoLongerNeeded(model: number | string): void;
    /**
     * Check if model is in cdimage(rpf)
     *
     * Hash: 0x35B9E0803292B641 | Since: 323
     */
    function isModelInCdimage(model: number | string): boolean;
    /**
     * Returns whether the specified model exists in the game.
     *
     * Hash: 0xC0296A2EDF545E92 | Since: 323
     */
    function isModelValid(model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x75816577FEA6DAD5 | Since: 1103
     */
    function isModelAPed(model: number | string): boolean;
    /**
     * Returns whether the specified model represents a vehicle.
     *
     * Hash: 0x19AAC8F07BFEC53E | Since: 323
     */
    function isModelAVehicle(model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x07503F7948F491A7 | Since: 323
     */
    function requestCollisionAtCoord(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x923CB32A3B874FCB | Since: 323
     */
    function requestCollisionForModel(model: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x22CCA434E368F03A | Since: 323
     */
    function hasCollisionForModelLoaded(model: number | string): boolean;
    /**
     * Alias of REQUEST_COLLISION_AT_COORD.
     *
     * Hash: 0xC9156DC11411A9EA | Since: 323
     */
    function requestAdditionalCollisionAtCoord(pos: Vector3): void;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x2DA49C3B79856961 | Since: 323
     */
    function doesAnimDictExist(animDict: string): boolean;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0xD3BD40951412FEF6 | Since: 323
     */
    function requestAnimDict(animDict: string): void;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0xD031A9162D01088C | Since: 323
     */
    function hasAnimDictLoaded(animDict: string): boolean;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0xF66A602F829E2A06 | Since: 323
     */
    function removeAnimDict(animDict: string): void;
    /**
     * Starts loading the specified animation set. An animation set provides movement animations for a ped. See SET_PED_MOVEMENT_CLIPSET.
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
     *
     * Hash: 0x6EA47DAE7FAD0EED | Since: 323
     */
    function requestAnimSet(animSet: string): void;
    /**
     * Gets whether the specified animation set has finished loading. An animation set provides movement animations for a ped. See SET_PED_MOVEMENT_CLIPSET.
     *
     * Animation set and clip set are synonymous.
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
     *
     * Hash: 0xC4EA073D86FB29B0 | Since: 323
     */
    function hasAnimSetLoaded(animSet: string): boolean;
    /**
     * Unloads the specified animation set. An animation set provides movement animations for a ped. See SET_PED_MOVEMENT_CLIPSET.
     *
     * Animation set and clip set are synonymous.
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
     *
     * Hash: 0x16350528F93024B3 | Since: 323
     */
    function removeAnimSet(animSet: string): void;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
     *
     * Hash: 0xD2A71E1A77418A49 | Since: 323
     */
    function requestClipSet(clipSet: string): void;
    /**
     * Alias for HAS_ANIM_SET_LOADED.
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
     *
     * Hash: 0x318234F4F3738AF3 | Since: 323
     */
    function hasClipSetLoaded(clipSet: string): boolean;
    /**
     * Alias for REMOVE_ANIM_SET.
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
     *
     * Hash: 0x01F73A131C18CD94 | Since: 323
     */
    function removeClipSet(clipSet: string): void;
    /**
     * Exemple: REQUEST_IPL("TrevorsTrailerTrash");
     *
     * Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
     *
     * Hash: 0x41B4893843BBDB74 | Since: 323
     */
    function requestIpl(iplName: string): void;
    /**
     * Removes an IPL from the map.
     *
     * Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
     *
     * Example:
     * C#:
     * Function.Call(Hash.REMOVE_IPL, "trevorstrailertidy");
     *
     * C++:
     * `STREAMING::REMOVE_IPL("trevorstrailertidy");`
     *
     * iplName = Name of IPL you want to remove.
     *
     * Hash: 0xEE6C5AD3ECE0A82D | Since: 323
     */
    function removeIpl(iplName: string): void;
    /**
     * Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
     *
     * Hash: 0x88A741E44A2B3495 | Since: 323
     */
    function isIplActive(iplName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6E0C692677008888 | Since: 323
     */
    function setStreaming(toggle: boolean): void;
    /**
     * 0 - default
     * 1 - HeistIsland
     *
     * Hash: 0x7E3F55ED251B76D3 | Since: 2189
     */
    function loadGlobalWaterFile(waterType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF741BD853611592D | Since: 2189
     */
    function getGlobalWaterFile(): number;
    /**
     * No comment provided
     *
     * Hash: 0x717CD6E6FAEBBEDC | Since: 323
     */
    function setGamePausesFor(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x77B5F9A36BF96710 | Since: 323
     */
    function setReducePedModelBudget(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x80C527893080CCF3 | Since: 323
     */
    function setReduceVehicleModelBudget(toggle: boolean): void;
    /**
     * This is a NOP function. It does nothing at all.
     *
     * Hash: 0x42CBE54462D92634 | Since: 323
     */
    function setDitchPoliceModels(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x4060057271CEBC89 | Since: 323
     */
    function getNumberOfRequests(): number;
    /**
     * maps script name (thread + 0xD0) by lookup via scriptfx.dat - does nothing when script name is empty
     *
     * Hash: 0x944955FB2A3935C8 | Since: 323
     */
    function requestPtfxAsset(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCA7D9B86ECA7481B | Since: 323
     */
    function hasPtfxAssetLoaded(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x88C6814073DD4A73 | Since: 323
     */
    function removePtfxAsset(): void;
    /**
     * From the b678d decompiled scripts:
     *
     * `STREAMING::REQUEST_NAMED_PTFX_ASSET("core_snow");`
     * `STREAMING::REQUEST_NAMED_PTFX_ASSET("fm_mission_controler");`
     * `STREAMING::REQUEST_NAMED_PTFX_ASSET("proj_xmas_firework");`
     * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_apartment_mp");`
     * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_biolab_heist");`
     * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_fireworks");`
     * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_parachute");`
     * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_wheelsmoke");`
     * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_cig_plane");`
     * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_creator");`
     * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_tankbattle");`
     * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_ornate_heist");`
     * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_prison_break_heist_station");`
     *
     * Hash: 0xB80D8756B4668AB6 | Since: 323
     */
    function requestNamedPtfxAsset(fxName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x8702416E512EC454 | Since: 323
     */
    function hasNamedPtfxAssetLoaded(fxName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5F61EBBE1A00F96D | Since: 323
     */
    function removeNamedPtfxAsset(fxName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xCB9E1EB3BE2AF4E9 | Since: 323
     */
    function setVehiclePopulationBudget(): void;
    /**
     * Control how many new (ambient?) peds will spawn in the game world.
     * Range for p0 seems to be 0-3, where 0 is none and 3 is the normal level.
     *
     * Hash: 0x8C95333CFC3340F3 | Since: 323
     */
    function setPedPopulationBudget(): void;
    /**
     * No comment provided
     *
     * Hash: 0x31B73D1EA9F01DA2 | Since: 323
     */
    function clearFocus(): void;
    /**
     * Override the area where the camera will render the terrain.
     * p3, p4 and p5 are usually set to 0.0
     *
     *
     * Hash: 0xBB7454BAFF08FE25 | Since: 323
     */
    function setFocusPosAndVel(pos: Vector3, offsetX: number, offsetY: number, offsetZ: number): void;
    /**
     * It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.
     *
     * Hash: 0x198F77705FA0931D | Since: 323
     */
    function setFocusEntity(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x2DDFF3FB9075D747 | Since: 323
     */
    function isEntityFocus(entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0811381EF5062FEC | Since: 323
     */
    function setRestoreFocusEntity(p0: number | Entity): void;
    /**
     * Possible p0 values:
     *
     * "prologue"
     * "Prologue_Main"
     *
     * Hash: 0xAF12610C644A35C9 | Since: 323
     */
    function setMapdatacullboxEnabled(name: string, toggle: boolean): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * Hash: 0x4E52E752C76E7E7A | Since: 323
     */
    function setAllMapdataCulled(): void;
    /**
     * Always returns zero.
     *
     * Hash: 0x219C7B8D53E429FD | Since: 323
     */
    function streamvolCreateSphere(pos: Vector3, rad: number): number;
    /**
     * Always returns zero.
     *
     * Hash: 0x1F3F018BC3AFA77C | Since: 323
     */
    function streamvolCreateFrustum(): number;
    /**
     * Always returns zero.
     *
     * Hash: 0x0AD9710CEE2F590F | Since: 323
     */
    function streamvolCreateLine(): number;
    /**
     * No comment provided
     *
     * Hash: 0x1EE7D8DF4425F053 | Since: 323
     */
    function streamvolDelete(unused: any): void;
    /**
     * No comment provided
     *
     * Hash: 0x7D41E9D2D17C5B2D | Since: 323
     */
    function streamvolHasLoaded(unused: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x07C313F94746702C | Since: 323
     */
    function streamvolIsValid(unused: any): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBC9823AB80A3DCAC | Since: 323
     */
    function isStreamvolActive(): boolean;
    /**
     * `radius` value is usually between `3f` and `7000f` in original 1868 scripts.
     * `p7` is 0, 1, 2, 3 or 4 used in decompiled scripts, 0 is by far the most common.
     * Returns True if success, used only 7 times in decompiled scripts of 1868
     *
     * Hash: 0x212A8D0D2BABFAC2 | Since: 323
     */
    function newLoadSceneStart(pos: Vector3, offsetX: number, offsetY: number, offsetZ: number, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xACCFB4ACF53551B0 | Since: 323
     */
    function newLoadSceneStartSphere(pos: Vector3, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC197616D221FF4A4 | Since: 323
     */
    function newLoadSceneStop(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA41A05B6CB741B85 | Since: 323
     */
    function isNewLoadSceneActive(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x01B8247A7A8B9AD1 | Since: 323
     */
    function isNewLoadSceneLoaded(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x71E7B2E657449AAD | Since: 323
     */
    function isSafeToStartPlayerSwitch(): boolean;
    /**
     * // this enum comes directly from R* so don't edit this
     * enum ePlayerSwitchTypes
     * {
     * SWITCH_TYPE_AUTO,
     * SWITCH_TYPE_LONG,
     * SWITCH_TYPE_MEDIUM,
     * SWITCH_TYPE_SHORT
     * };
     *
     * Use GET_IDEAL_PLAYER_SWITCH_TYPE for the best switch type.
     *
     * ----------------------------------------------------
     *
     * Examples from the decompiled scripts:
     *
     * `STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 0, 3);`
     * `STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 2050, 3);`
     * `STREAMING::START_PLAYER_SWITCH(PLAYER::PLAYER_PED_ID(), l_832._f3, 1024, 3);`
     * `STREAMING::START_PLAYER_SWITCH(g_141F27, PLAYER::PLAYER_PED_ID(), 513, v_14);`
     *
     * Note: DO NOT, use SWITCH_TYPE_LONG with flag 513. It leaves you stuck in the clouds. You'll have to call STOP_PLAYER_SWITCH() to return to your ped.
     *
     * Flag 8 w/ SWITCH_TYPE_LONG will zoom out 3 steps, then zoom in 2/3 steps and stop on the 3rd and just hang there.
     * Flag 8 w/ SWITCH_TYPE_MEDIUM will zoom out 1 step, and just hang there.
     *
     * Hash: 0xFAA23F2CBA159D67 | Since: 323
     */
    function startPlayerSwitch(_from: number | Ped, to: number | Ped, flags: number, switchType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x95C0A5BBDC189AA1 | Since: 323
     */
    function stopPlayerSwitch(): void;
    /**
     * Returns true if the player is currently switching, false otherwise.
     * (When the camera is in the sky moving from Trevor to Franklin for example)
     *
     * Hash: 0xD9D2CFFF49FAB35F | Since: 323
     */
    function isPlayerSwitchInProgress(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB3C94A90D9FC9E62 | Since: 323
     */
    function getPlayerSwitchType(): number;
    /**
     * x1, y1, z1 -- Coords of your ped model
     * x2, y2, z2 -- Coords of the ped you want to switch to
     *
     * Hash: 0xB5D7B26B45720E05 | Since: 323
     */
    function getIdealPlayerSwitchType(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x470555300D10B2A5 | Since: 323
     */
    function getPlayerSwitchState(): number;
    /**
     * No comment provided
     *
     * Hash: 0x20F898A5D9782800 | Since: 323
     */
    function getPlayerShortSwitchState(): number;
    /**
     * No comment provided
     *
     * Hash: 0x5F2013F8BC24EE69 | Since: 323
     */
    function setPlayerShortSwitchStyle(): void;
    /**
     * No comment provided
     *
     * Hash: 0x78C0D93253149435 | Since: 323
     */
    function getPlayerSwitchJumpCutIndex(): number;
    /**
     * No comment provided
     *
     * Hash: 0xC208B673CE446B61 | Since: 323
     */
    function setPlayerSwitchOutro(cameraCoordX: number, cameraCoordY: number, cameraCoordZ: number, camRotationX: number, camRotationY: number, camRotationZ: number, camFov: number, camFarClip: number, rotationOrder: number): void;
    /**
     * All names can be found in playerswitchestablishingshots.meta
     *
     * Hash: 0x0FDE9DBFC0A6BC65 | Since: 323
     */
    function setPlayerSwitchEstablishingShot(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x43D1680C6D19A8E9 | Since: 323
     */
    function allowPlayerSwitchPan(): void;
    /**
     * No comment provided
     *
     * Hash: 0x74DE2E8739086740 | Since: 323
     */
    function allowPlayerSwitchOutro(): void;
    /**
     * No comment provided
     *
     * Hash: 0x8E2A065ABDAE6994 | Since: 323
     */
    function allowPlayerSwitchAscent(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAD5FDF34B81BFE79 | Since: 323
     */
    function allowPlayerSwitchDescent(): void;
    /**
     * No comment provided
     *
     * Hash: 0xDFA80CB25D0A19B3 | Since: 323
     */
    function isSwitchReadyForDescent(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD4793DFF3AF2ABCD | Since: 323
     */
    function enableSwitchPauseBeforeDescent(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBD605B8E0E18B3BB | Since: 323
     */
    function disableSwitchOutroFx(): void;
    /**
     * doesn't act normally when used on mount chilliad
     * Flags is a bitflag:
     * 2^n - Enabled Functionality:
     * 0 - Skip camera rotate up
     * 3 - Wait for SET_PLAYER_SWITCH_ESTABLISHING_SHOT / hang at last step. You will still need to run 0x74DE2E8739086740 to exit "properly" and then STOP_PLAYER_SWITCH
     * 6 - Invert Switch Direction (false = out, true = in)
     * 8 - Hang above ped
     *
     * switchType: 0 - 3
     * 0: 1 step towards ped
     * 1: 3 steps out from ped
     * 2: 1 step out from ped
     * 3: 1 step towards ped
     *
     * Hash: 0xAAB3200ED59016BC | Since: 323
     */
    function switchToMultiFirstpart(ped: number | Ped, flags: number, switchType: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD8295AF639FD9CB8 | Since: 323
     */
    function switchToMultiSecondpart(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x933BBEEB8C61B5F4 | Since: 323
     */
    function isSwitchToMultiFirstpartFinished(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x08C2D6C52A3104BB | Since: 323
     */
    function getPlayerSwitchInterpOutDuration(): number;
    /**
     * No comment provided
     *
     * Hash: 0x5B48A06DD0E792A5 | Since: 323
     */
    function getPlayerSwitchInterpOutCurrentTime(): number;
    /**
     * No comment provided
     *
     * Hash: 0x5B74EA8CFD5E3E7E | Since: 323
     */
    function isSwitchSkippingDescent(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1E9057A74FD73E23 | Since: 323
     */
    function setSceneTracksCamPosThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0C15B0E443B2349D | Since: 323
     */
    function getLodscale(): number;
    /**
     * This allows you to override "extended distance scaling" setting. Needs to be called each frame.
     * Max scaling seems to be 200.0, normal is 1.0
     * See https://gfycat.com/DetailedHauntingIncatern
     *
     * Hash: 0xA76359FC80B2438E | Since: 323
     */
    function overrideLodscaleThisFrame(scaling: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBED8CA5FF5E04113 | Since: 323
     */
    function remapLodscaleRangeThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x472397322E92A856 | Since: 323
     */
    function suppressHdMapThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x40AEFD1A244741F2 | Since: 323
     */
    function setRenderHdOnly(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x03F1A106BDA7DD3E | Since: 323
     */
    function forceAllowTimeBasedFadingThisFrame(): void;
    /**
     * No comment provided
     *
     * Hash: 0x95A7DABDDBB78AE7 | Since: 323
     */
    function iplGroupSwapStart(iplName1: string, iplName2: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x63EB2B972A218CAC | Since: 323
     */
    function iplGroupSwapCancel(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFB199266061F820A | Since: 323
     */
    function iplGroupSwapIsReady(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF4A0DADB70F57FA6 | Since: 323
     */
    function iplGroupSwapFinish(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5068F488DDB54DD8 | Since: 323
     */
    function iplGroupSwapIsActive(): boolean;
    /**
     * This native is used to attribute the SRL that BEGIN_SRL is going to load. This is usually used for 'in-game' cinematics (not cutscenes but camera stuff) instead of SET_FOCUS_POS_AND_VEL because it loads a specific area of the map which is pretty useful when the camera moves from distant areas.
     * For instance, GTA:O opening cutscene.
     * https://pastebin.com/2EeKVeLA : a list of SRL found in srllist.meta
     * https://pastebin.com/zd9XYUWY here is the content of a SRL file opened with codewalker.
     *
     * Hash: 0x3D245789CE12982C | Since: 323
     */
    function prefetchSrl(srl: string): void;
    /**
     * Returns true when the srl from BEGIN_SRL is loaded.
     *
     * Hash: 0xD0263801A4C5B0BB | Since: 323
     */
    function isSrlLoaded(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9BADDC94EF83B823 | Since: 323
     */
    function beginSrl(): void;
    /**
     * Clear the current srl and stop rendering the area selected by PREFETCH_SRL and started with BEGIN_SRL.
     *
     * Hash: 0x0A41540E63C9EE17 | Since: 323
     */
    function endSrl(): void;
    /**
     * No comment provided
     *
     * Hash: 0xA74A541C6884E7B8 | Since: 323
     */
    function setSrlTime(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEF39EE20C537E98C | Since: 323
     */
    function setSrlPostCutsceneCamera(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBEB2D9A1D9A8F55A | Since: 323
     */
    function setSrlReadaheadTimes(): void;
    /**
     * No comment provided
     *
     * Hash: 0x20C6C7E4EB082A7F | Since: 323
     */
    function setSrlLongJumpMode(): void;
    /**
     * No comment provided
     *
     * Hash: 0xF8155A7F03DDFC8E | Since: 323
     */
    function setSrlForcePrestream(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB85F26619073E775 | Since: 323
     */
    function setHdArea(pos: Vector3, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCE58B1CFB9290813 | Since: 323
     */
    function clearHdArea(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB5A4DB34FE89B88A | Since: 323
     */
    function initCreatorBudget(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCCE26000E9A6FAD7 | Since: 323
     */
    function shutdownCreatorBudget(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0BC3144DEB678666 | Since: 323
     */
    function addModelToCreatorBudget(modelHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF086AD9354FAC3A3 | Since: 323
     */
    function removeModelFromCreatorBudget(modelHash: number | string): void;
    /**
     * 0.0 = no memory used
     * 1.0 = all memory used
     *
     * Maximum model memory (as defined in common\data\missioncreatordata.meta) is 100 MiB
     *
     * Hash: 0x3D3D8B3BE5A83D35 | Since: 323
     */
    function getUsedCreatorBudget(): number;
    /**
     * Enables the specified island. For more information, see islandhopper.meta
     *
     * Hash: 0x9A9D1BA639675CF1 | Since: 2189
     */
    function setIslandEnabled(name: string, toggle: boolean): void;
}
export declare namespace task {
    /**
     * Stand still (?)
     *
     * Hash: 0xE73A266DB0CA9042 | Since: 323
     */
    function pause(ped: number | Ped, ms: number): void;
    /**
     * Makes the specified ped stand still for (time) milliseconds.
     *
     * Hash: 0x919BE13EED931959 | Since: 323
     */
    function standStill(ped: number | Ped, time: number): void;
    /**
     * Definition is wrong. This has 4 parameters (Not sure when they were added. v350 has 2, v678 has 4).
     *
     * v350: Ped ped, bool unused
     * v678: Ped ped, bool unused, bool flag1, bool flag2
     *
     * flag1 = super jump, flag2 = do nothing if flag1 is false and doubles super jump height if flag1 is true.
     *
     * Hash: 0x0AE4086104E067B1 | Since: 323
     */
    function jump(ped: number | Ped, usePlayerLaunchForce: boolean, doSuperJump: boolean, useFullSuperJumpForce: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3EB1FE9E8E908E15 | Since: 323
     */
    function cower(ped: number | Ped, duration: number): void;
    /**
     * In the scripts, p3 was always -1.
     *
     * p3 seems to be duration or timeout of turn animation.
     * Also facingPed can be 0 or -1 so ped will just raise hands up.
     *
     * Hash: 0xF2EAB31979A7F910 | Since: 323
     */
    function handsUp(ped: number | Ped, duration: number, facingPed: number | Ped, timeToFacePed: number, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA98FCAFD7893C834 | Since: 323
     */
    function updateHandsUpDuration(ped: number | Ped, duration: number): void;
    /**
     * The given ped will try to open the nearest door to 'seat'.
     * Example: telling the ped to open the door for the driver seat does not necessarily mean it will open the driver door, it may choose to open the passenger door instead if that one is closer.
     *
     * Hash: 0x965791A9A488A062 | Since: 323
     */
    function openVehicleDoor(ped: number | Ped, vehicle: number | Vehicle, timeOut: number, seat: number, speed: number): void;
    /**
     * speed 1.0 = walk, 2.0 = run
     * p5 1 = normal, 3 = teleport to vehicle, 16 = teleport directly into vehicle
     * p6 is always 0
     *
     * Usage of seat
     * -1 = driver
     * 0 = passenger
     * 1 = left back seat
     * 2 = right back seat
     * 3 = outside left
     * 4 = outside right
     *
     * Hash: 0xC20E50AA46D09CA8 | Since: 323
     */
    function enterVehicle(ped: number | Ped, vehicle: number | Vehicle, timeout: number, seat: number, speed: number, flag: number, overrideEntryClipsetName: string): void;
    /**
     * Flags from decompiled scripts:
     * 0 = normal exit and closes door.
     * 1 = normal exit and closes door.
     * 16 = teleports outside, door kept closed.
     * 64 = normal exit and closes door, maybe a bit slower animation than 0.
     * 256 = normal exit but does not close the door.
     * 4160 = ped is throwing himself out, even when the vehicle is still.
     * 262144 = ped moves to passenger seat first, then exits normally
     *
     * Others to be tried out: 320, 512, 131072.
     *
     * Hash: 0xD3DBCE61A490BE02 | Since: 323
     */
    function leaveVehicle(ped: number | Ped, vehicle: number | Vehicle, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9C00E77AF14B2DFF | Since: 323
     */
    function getOffBoat(ped: number | Ped, boat: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x601736CFE536B0A0 | Since: 323
     */
    function skyDive(ped: number | Ped, instant: boolean): void;
    /**
     * Second parameter is unused.
     *
     * second parameter was for jetpack in the early stages of gta and the hard coded code is now removed
     *
     * Hash: 0xD2F1C53C97EE81AB | Since: 323
     */
    function parachute(ped: number | Ped, giveParachuteItem: boolean, instant: boolean): void;
    /**
     * `makes ped parachute to coords x y z. Works well with PATHFIND::GET_SAFE_COORD_FOR_PED`
     *
     * Hash: 0xB33E291AFA6BD03A | Since: 323
     */
    function parachuteToTarget(ped: number | Ped, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xC313379AF0FCEDA7 | Since: 323
     */
    function setParachuteTarget(ped: number | Ped, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x0729BAC1B8C64317 | Since: 323
     */
    function setParachuteThrust(ped: number | Ped, thrust: number): void;
    /**
     * minHeightAboveGround: the minimum height above ground the heli must be at before the ped can start rappelling
     *
     * Only appears twice in the scripts.
     *
     * `TASK::TASK_RAPPEL_FROM_HELI(PLAYER::PLAYER_PED_ID(), 10.0f);`
     * `TASK::TASK_RAPPEL_FROM_HELI(a_0, 10.0f);`
     *
     * Hash: 0x09693B0312F91649 | Since: 323
     */
    function rappelFromHeli(ped: number | Ped, minHeightAboveGround: number): void;
    /**
     * info about driving modes: https://gtaforums.com/topic/822314-guide-driving-styles/
     *
     * Hash: 0xE2A2AA2F659D77A7 | Since: 323
     */
    function vehicleDriveToCoord(ped: number | Ped, vehicle: number | Vehicle, pos: Vector3, speed: number, vehicleModel: number | string, drivingMode: number, stopRange: number, straightLineDistance: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x158BB33F920D360C | Since: 323
     */
    function vehicleDriveToCoordLongrange(ped: number | Ped, vehicle: number | Vehicle, pos: Vector3, speed: number, driveMode: number, stopRange: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x480142959D337D00 | Since: 323
     */
    function vehicleDriveWander(ped: number | Ped, vehicle: number | Vehicle, speed: number, drivingStyle: number): void;
    /**
     * p6 always -1
     * p7 always 10.0
     * p8 always 1
     *
     * Hash: 0x304AE42E357B8C7E | Since: 323
     */
    function followToOffsetOfEntity(ped: number | Ped, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, movementSpeed: number, timeout: number, stoppingRange: number, persistFollowing: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD76B57B44F1E6F8B | Since: 323
     */
    function goStraightToCoord(ped: number | Ped, pos: Vector3, speed: number, timeout: number, targetHeading: number, distanceToSlide: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x61E360B7E040D12E | Since: 323
     */
    function goStraightToCoordRelativeToEntity(ped: number | Ped, entity: number | Entity, pos: Vector3, moveBlendRatio: number, time: number): void;
    /**
     * Makes the specified ped achieve the specified heading.
     *
     * pedHandle: The handle of the ped to assign the task to.
     * heading: The desired heading.
     * timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is cancelled, and the ped will stay at the heading it managed to reach in the time.
     *
     * Hash: 0x93B93A37987F1F3D | Since: 323
     */
    function achieveHeading(ped: number | Ped, heading: number, timeout: number): void;
    /**
     * MulleKD19: Clears the current point route. Call this before TASK_EXTEND_ROUTE and TASK_FOLLOW_POINT_ROUTE.
     *
     * Hash: 0x841142A1376E9006 | Since: 323
     */
    function flushRoute(): void;
    /**
     * MulleKD19: Adds a new point to the current point route. Call TASK_FLUSH_ROUTE before the first call to this. Call TASK_FOLLOW_POINT_ROUTE to make the Ped go the route.
     *
     * A maximum of 8 points can be added.
     *
     * Hash: 0x1E7889778264843A | Since: 323
     */
    function extendRoute(pos: Vector3): void;
    /**
     * MulleKD19: Makes the ped go on the created point route.
     *
     * ped: The ped to give the task to.
     * speed: The speed to move at in m/s.
     * int: Unknown. Can be 0, 1, 2 or 3.
     *
     * Example:
     * TASK_FLUSH_ROUTE();
     * TASK_EXTEND_ROUTE(0f, 0f, 70f);
     * TASK_EXTEND_ROUTE(10f, 0f, 70f);
     * TASK_EXTEND_ROUTE(10f, 10f, 70f);
     * TASK_FOLLOW_POINT_ROUTE(GET_PLAYER_PED(), 1f, 0);
     *
     * Hash: 0x595583281858626E | Since: 323
     */
    function followPointRoute(ped: number | Ped, speed: number, mode: number): void;
    /**
     * The entity will move towards the target until time is over (duration) or get in target's range (distance). p5 and p6 are unknown, but you could leave p5 = 1073741824 or 100 or even 0 (didn't see any difference but on the decompiled scripts, they use 1073741824 mostly) and p6 = 0
     *
     * Note: I've only tested it on entity -> ped and target -> vehicle. It could work differently on other entities, didn't try it yet.
     *
     * `Example: TASK::TASK_GO_TO_ENTITY(pedHandle, vehicleHandle, 5000, 4.0, 100, 1073741824, 0)`
     *
     * Ped will run towards the vehicle for 5 seconds and stop when time is over or when he gets 4 meters(?) around the vehicle (with duration = -1, the task duration will be ignored).
     *
     * enum EGOTO_ENTITY_SCRIPT_FLAGS
     * {
     * EGOTO_ENTITY_NEVER_SLOW_FOR_PATH_LENGTH = 0x01,
     * };
     *
     * Hash: 0x6A071245EB0D1882 | Since: 323
     */
    function goToEntity(entity: number | Entity, target: number | Entity, duration: number, distance: number, moveBlendRatio: number, slowDownDistance: number, flags: number): void;
    /**
     * Makes the specified ped flee the specified distance from the specified position.
     *
     * Hash: 0x94587F17E9C365D5 | Since: 323
     */
    function smartFleeCoord(ped: number | Ped, pos: Vector3, distance: number, time: number, preferPavements: boolean, quitIfOutOfRange: boolean): void;
    /**
     * Makes a ped run away from another ped (fleeTarget).
     *
     * distance = ped will flee this distance.
     * fleeTime = ped will flee for this amount of time, set to "-1" to flee forever
     *
     * Hash: 0x22B0D0E37CCB840D | Since: 323
     */
    function smartFleePed(ped: number | Ped, fleeTarget: number | Ped, safeDistance: number, fleeTime: number, preferPavements: boolean, updateToNearestHatedPed: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x72C896464915D1B1 | Since: 323
     */
    function reactAndFleePed(ped: number | Ped, fleeTarget: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x452419CBD838065B | Since: 323
     */
    function shockingEventReact(ped: number | Ped, eventHandle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE054346CA3A0F315 | Since: 323
     */
    function wanderInArea(ped: number | Ped, pos: Vector3, radius: number, minimalLength: number, timeBetweenWalks: number): void;
    /**
     * Makes ped walk around the area.
     *
     * set p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration.
     *
     * Hash: 0xBB9CE077274F6A1B | Since: 323
     */
    function wanderStandard(ped: number | Ped, heading: number, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6919A2F136426098 | Since: 1868
     */
    function wanderSpecific(ped: number | Ped, conditionalAnimGroupStr: string, conditionalAnimStr: string, heading: number): void;
    /**
     * Modes:
     * 0 - ignore heading
     * 1 - park forward
     * 2 - park backwards
     *
     * Depending on the angle of approach, the vehicle can park at the specified heading or at its exact opposite (-180) angle.
     *
     * Radius seems to define how close the vehicle has to be -after parking- to the position for this task considered completed. If the value is too small, the vehicle will try to park again until it's exactly where it should be. 20.0 Works well but lower values don't, like the radius is measured in centimeters or something.
     *
     * Hash: 0x0F3E34E968EA374E | Since: 323
     */
    function vehiclePark(ped: number | Ped, vehicle: number | Vehicle, pos: Vector3, heading: number, mode: number, radius: number, keepEngineOn: boolean): void;
    /**
     * known "killTypes" are: "AR_stealth_kill_knife" and "AR_stealth_kill_a".
     *
     * Hash: 0xAA5DC05579D60BD9 | Since: 323
     */
    function stealthKill(killer: number | Ped, target: number | Ped, stealthKillActionResultHash: number | string, desiredMoveBlendRatio: number, stealthFlags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x965FEC691D55E9BF | Since: 323
     */
    function plantBomb(ped: number | Ped, pos: Vector3, heading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x60A19CF85FF4CEFA | Since: 3407
     */
    function sharkCircleCoord(ped: number | Ped, pos: Vector3, moveBlendRatio: number, radius: number): void;
    /**
     * If no timeout, set timeout to -1.
     *
     * Hash: 0x15D3A79D4E44B913 | Since: 323
     */
    function followNavMeshToCoord(ped: number | Ped, pos: Vector3, moveBlendRatio: number, time: number, targetRadius: number, flags: number, targetHeading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x17F58B88D085DBAC | Since: 323
     */
    function followNavMeshToCoordAdvanced(ped: number | Ped, pos: Vector3, moveBlendRatio: number, time: number, targetRadius: number, flags: number, slideToCoordHeading: number, maxSlopeNavigable: number, clampMaxSearchDistance: number, targetHeading: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8E06A6FE76C9EFF4 | Since: 323
     */
    function setPedPathCanUseClimbovers(ped: number | Ped, Toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x77A5B103C87F476E | Since: 323
     */
    function setPedPathCanUseLadders(ped: number | Ped, Toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE361C5C71C431A4F | Since: 323
     */
    function setPedPathCanDropFromHeight(ped: number | Ped, Toggle: boolean): void;
    /**
     * Default modifier is 1.0, minimum is 0.0 and maximum is 10.0.
     *
     * Hash: 0x88E32DB8C1A4AA4B | Since: 323
     */
    function setPedPathClimbCostModifier(ped: number | Ped, modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF35425A4204367EC | Since: 323
     */
    function setPedPathMayEnterWater(ped: number | Ped, mayEnterWater: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x38FE1EC73743793C | Since: 323
     */
    function setPedPathPreferToAvoidWater(ped: number | Ped, avoidWater: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x4455517B28441E60 | Since: 323
     */
    function setPedPathAvoidFire(ped: number | Ped, avoidFire: boolean): void;
    /**
     * Needs to be looped! And yes, it does work and is not a hash collision.
     * Birds will try to reach the given height.
     *
     * Hash: 0x6C6B148586F934F7 | Since: 323
     */
    function setGlobalMinBirdFlightHeight(height: number): void;
    /**
     * Looks like the last parameter returns true if the path has been calculated, while the first returns the remaining distance to the end of the path.
     * Return value of native is the same as GET_NAVMESH_ROUTE_RESULT
     * Looks like the native returns an int for the path's state:
     * 1 - ???
     * 2 - ???
     * 3 - Finished Generating
     *
     * Hash: 0xC6F5C0BCDC74D62D | Since: 323
     */
    function getNavmeshRouteDistanceRemaining(ped: number | Ped): [number, number, boolean];
    /**
     * See GET_NAVMESH_ROUTE_DISTANCE_REMAINING for more details.
     *
     * Hash: 0x632E831F382A0FA8 | Since: 323
     */
    function getNavmeshRouteResult(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x3E38E28A1D80DDF6 | Since: 323
     */
    function isControlledVehicleUnableToGetToRoad(ped: number | Ped): boolean;
    /**
     * example from fm_mission_controller
     *
     * `TASK::TASK_GO_TO_COORD_ANY_MEANS(l_649, sub_f7e86(-1, 0), 1.0, 0, 0, 786603, 0xbf800000);`
     *
     *
     * Hash: 0x5BC448CB78FA3E88 | Since: 323
     */
    function goToCoordAnyMeans(ped: number | Ped, pos: Vector3, moveBlendRatio: number, vehicle: number | Vehicle, useLongRangeVehiclePathing: boolean, drivingFlags: number, maxRangeToShootTargets: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1DD45F9ECFDB1BC9 | Since: 323
     */
    function goToCoordAnyMeansExtraParams(ped: number | Ped, pos: Vector3, moveBlendRatio: number, vehicle: number | Vehicle, useLongRangeVehiclePathing: boolean, drivingFlags: number, maxRangeToShootTargets: number, extraVehToTargetDistToPreferVehicle: number, driveStraightLineDistance: number, extraFlags: number, warpTimerMS: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB8ECD61F531A7B02 | Since: 323
     */
    function goToCoordAnyMeansExtraParamsWithCruiseSpeed(ped: number | Ped, pos: Vector3, moveBlendRatio: number, vehicle: number | Vehicle, useLongRangeVehiclePathing: boolean, drivingFlags: number, maxRangeToShootTargets: number, extraVehToTargetDistToPreferVehicle: number, driveStraightLineDistance: number, extraFlags: number, cruiseSpeed: number, targetArriveDist: number): void;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * float speed > normal speed is 8.0f
     * ----------------------
     *
     * float speedMultiplier > multiply the playback speed
     * ----------------------
     *
     * int duration: time in millisecond
     * ----------------------
     * -1 _ _ _ _ _ _ _> Default (see flag)
     * 0 _ _ _ _ _ _ _ > Not play at all
     * Small value _ _ > Slow down animation speed
     * Other _ _ _ _ _ > freeze player control until specific time (ms) has
     * _ _ _ _ _ _ _ _ _ passed. (No effect if flag is set to be
     * _ _ _ _ _ _ _ _ _ controllable.)
     *
     * int flag:
     * ----------------------
     * enum eAnimationFlags
     * {
     * ANIM_FLAG_NORMAL = 0,
     * ANIM_FLAG_REPEAT = 1,
     * ANIM_FLAG_STOP_LAST_FRAME = 2,
     * ANIM_FLAG_UPPERBODY = 16,
     * ANIM_FLAG_ENABLE_PLAYER_CONTROL = 32,
     * ANIM_FLAG_CANCELABLE = 120,
     * };
     * Odd number : loop infinitely
     * Even number : Freeze at last frame
     * Multiple of 4: Freeze at last frame but controllable
     *
     * 01 to 15 > Full body
     * 10 to 31 > Upper body
     * 32 to 47 > Full body > Controllable
     * 48 to 63 > Upper body > Controllable
     * ...
     * 001 to 255 > Normal
     * 256 to 511 > Garbled
     * ...
     *
     * playbackRate:
     *
     * values are between 0.0 and 1.0
     *
     *
     * lockX:
     *
     * 0 in most cases 1 for rcmepsilonism8 and rcmpaparazzo_3
     * > 1 for mini@sprunk
     *
     *
     * lockY:
     *
     * 0 in most cases
     * 1 for missfam5_yoga, missfra1mcs_2_crew_react
     *
     *
     * lockZ:
     *
     * 0 for single player
     * Can be 1 but only for MP
     *
     * Hash: 0xEA47FE3719165B94 | Since: 323
     */
    function playAnim(ped: number | Ped, animDictionary: string, animationName: string, blendInSpeed: number, blendOutSpeed: number, duration: number, flag: number, playbackRate: number, lockX: boolean, lockY: boolean, lockZ: boolean): void;
    /**
     * It's similar to TASK_PLAY_ANIM, except the first 6 floats let you specify the initial position and rotation of the task. (Ped gets teleported to the position).
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x83CDB10EA29B370B | Since: 323
     */
    function playAnimAdvanced(ped: number | Ped, animDict: string, animName: string, pos: Vector3, rot: Vector3, animEnterSpeed: number, animExitSpeed: number, duration: number, flag: any, animTime: number, rotOrder: number, ikFlags: number): void;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x97FF36A1D40EA00A | Since: 323
     */
    function stopAnim(entity: number | Entity, animDictionary: string, animationName: string, blendDelta: number): void;
    /**
     * From fm_mission_controller.c:
     * reserve_network_mission_objects(get_num_reserved_mission_objects(0) + 1);
     * vVar28 = {0.094f, 0.02f, -0.005f};
     * vVar29 = {-92.24f, 63.64f, 150.24f};
     * func_253(&uVar30, joaat("prop_ld_case_01"), Global_1592429.imm_34757[iParam1 <268>], 1, 1, 0, 1);
     * set_entity_lod_dist(net_to_ent(uVar30), 500);
     * attach_entity_to_entity(net_to_ent(uVar30), iParam0, get_ped_bone_index(iParam0, 28422), vVar28, vVar29, 1, 0, 0, 0, 2, 1);
     * Var31.imm_4 = 1065353216;
     * Var31.imm_5 = 1065353216;
     * Var31.imm_9 = 1065353216;
     * Var31.imm_10 = 1065353216;
     * Var31.imm_14 = 1065353216;
     * Var31.imm_15 = 1065353216;
     * Var31.imm_17 = 1040187392;
     * Var31.imm_18 = 1040187392;
     * Var31.imm_19 = -1;
     * Var32.imm_4 = 1065353216;
     * Var32.imm_5 = 1065353216;
     * Var32.imm_9 = 1065353216;
     * Var32.imm_10 = 1065353216;
     * Var32.imm_14 = 1065353216;
     * Var32.imm_15 = 1065353216;
     * Var32.imm_17 = 1040187392;
     * Var32.imm_18 = 1040187392;
     * Var32.imm_19 = -1;
     * Var31 = 1;
     * Var31.imm_1 = "weapons@misc@jerrycan@mp_male";
     * Var31.imm_2 = "idle";
     * Var31.imm_20 = 1048633;
     * Var31.imm_4 = 0.5f;
     * Var31.imm_16 = get_hash_key("BONEMASK_ARMONLY_R");
     * task_scripted_animation(iParam0, &Var31, &Var32, &Var32, 0f, 0.25f);
     * set_model_as_no_longer_needed(joaat("prop_ld_case_01"));
     * remove_anim_dict("anim@heists@biolab@");
     *
     * Hash: 0x126EF75F1E17ABE5 | Since: 323
     */
    function scriptedAnimation(ped: number | Ped, blendInDelta: number, blendOutDelta: number): [number, number, number];
    /**
     * No comment provided
     *
     * Hash: 0x77A1EEC547E7FCF1 | Since: 323
     */
    function playEntityScriptedAnim(entity: number | Entity, blendInDelta: number, blendOutDelta: number): [number, number, number];
    /**
     * Looks like p1 may be a flag, still need to do some research, though.
     *
     * Hash: 0xEE08C992D238C5D1 | Since: 323
     */
    function stopAnimPlayback(entity: number | Entity, priority: number, secondary: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x207F1A47C0342F48 | Since: 323
     */
    function setAnimWeight(entity: number | Entity, weight: number, priority: number, index: number, secondary: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDDF3CB5A0A4C0B49 | Since: 2372
     */
    function setAnimPhase(entity: number | Entity, phase: number, priority: number, secondary: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x032D49C5E359C847 | Since: 323
     */
    function setAnimRate(entity: number | Entity, rate: number, priority: number, secondary: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x70033C3CC29A1FF4 | Since: 323
     */
    function setAnimLooped(entity: number | Entity, looped: boolean, priority: number, secondary: boolean): void;
    /**
     * Example from the scripts:
     * `TASK::TASK_PLAY_PHONE_GESTURE_ANIMATION(PLAYER::PLAYER_PED_ID(), v_3, v_2, v_4, 0.25, 0.25, 0, 0);`
     *
     * =========================================================
     * ^^ No offense, but Idk how that would really help anyone.
     *
     * As for the animDict & animation, they're both store in a global in all 5 scripts. So if anyone would be so kind as to read that global and comment what strings they use. Thanks.
     *
     * Known boneMaskTypes'
     * "BONEMASK_HEADONLY"
     * "BONEMASK_HEAD_NECK_AND_ARMS"
     * "BONEMASK_HEAD_NECK_AND_L_ARM"
     * "BONEMASK_HEAD_NECK_AND_R_ARM"
     *
     * p4 known args - 0.0f, 0.5f, 0.25f
     * p5 known args - 0.0f, 0.25f
     * p6 known args - 1 if a global if check is passed.
     * p7 known args - 1 if a global if check is passed.
     *
     * The values found above, I found within the 5 scripts this is ever called in. (fmmc_launcher, fm_deathmatch_controller, fm_impromptu_dm_controller, fm_mission_controller, and freemode).
     * =========================================================
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x8FBB6758B3B3E9EC | Since: 323
     */
    function playPhoneGestureAnimation(ped: number | Ped, animDict: string, animation: string, boneMaskType: string, blendInDuration: number, blendOutDuration: number, isLooping: boolean, holdLastFrame: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3FA00D4F4641BFAE | Since: 323
     */
    function stopPhoneGestureAnimation(ped: number | Ped, blendOutOverride: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB8EBB1E9D3588C10 | Since: 323
     */
    function isPlayingPhoneGestureAnim(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x47619ABE8B268C60 | Since: 323
     */
    function getPhoneGestureAnimCurrentTime(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x1EE0F68A7C25DEC6 | Since: 323
     */
    function getPhoneGestureAnimTotalTime(ped: number | Ped): number;
    /**
     * Most probably plays a specific animation on vehicle. For example getting chop out of van etc...
     *
     * Here's how its used -
     *
     * `TASK::TASK_VEHICLE_PLAY_ANIM(l_325, "rcmnigel1b", "idle_speedo");`
     *
     * `TASK::TASK_VEHICLE_PLAY_ANIM(l_556[0\/\*1\*\/], "missfra0_chop_drhome", "InCar_GetOutofBack_Speedo");`
     *
     * FYI : Speedo is the name of van in which chop was put in the mission.
     *
     * Hash: 0x69F5C3BD0F3EBD89 | Since: 323
     */
    function vehiclePlayAnim(vehicle: number | Vehicle, animationSet: string, animationName: string): void;
    /**
     * enum eScriptLookatFlags
     * {
     * SLF_SLOW_TURN_RATE            = 1,    // turn the head toward the target slowly
     * SLF_FAST_TURN_RATE            = 2,    // turn the head toward the target quickly
     * SLF_EXTEND_YAW_LIMIT        = 4,    // wide yaw head limits
     * SLF_EXTEND_PITCH_LIMIT        = 8,    // wide pitch head limit
     * SLF_WIDEST_YAW_LIMIT        = 16,   // widest yaw head limit
     * SLF_WIDEST_PITCH_LIMIT        = 32,   // widest pitch head limit
     * SLF_NARROW_YAW_LIMIT        = 64,   // narrow yaw head limits
     * SLF_NARROW_PITCH_LIMIT        = 128,  // narrow pitch head limit
     * SLF_NARROWEST_YAW_LIMIT        = 256,  // narrowest yaw head limit
     * SLF_NARROWEST_PITCH_LIMIT    = 512,  // narrowest pitch head limit
     * SLF_USE_TORSO                = 1024, // use the torso aswell as the neck and head (currently disabled)
     * SLF_WHILE_NOT_IN_FOV        = 2048, // keep tracking the target even if they are not in the hard coded FOV
     * SLF_USE_CAMERA_FOCUS        = 4096, // use the camera as the target
     * SLF_USE_EYES_ONLY            = 8192, // only track the target with the eyes
     * SLF_USE_LOOK_DIR            = 16384, // use information in look dir DOF
     * SLF_FROM_SCRIPT                = 32768, // internal use only
     * SLF_USE_REF_DIR_ABSOLUTE    = 65536  // use absolute reference direction mode for solver
     * };
     *
     * Hash: 0x6FA46612594F7973 | Since: 323
     */
    function lookAtCoord(entity: number | Entity, pos: Vector3, duration: number, flags: number, priority: number): void;
    /**
     * For flags, please refer to TASK_LOOK_AT_COORD.
     *
     * Hash: 0x69F4BE8C8CC4796C | Since: 323
     */
    function lookAtEntity(ped: number | Ped, lookAt: number | Entity, duration: number, flags: number, priority: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0F804F1DB19B9689 | Since: 323
     */
    function clearLookAt(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xE8854A4326B9E12B | Since: 323
     */
    function openSequence(): number;
    /**
     * No comment provided
     *
     * Hash: 0x39E72BC99E6360CB | Since: 323
     */
    function closeSequence(taskSequenceId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5ABA3986D90D8A3B | Since: 323
     */
    function performSequence(ped: number | Ped, taskSequenceId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8C33220C8D78CA0D | Since: 944
     */
    function performSequenceLocally(ped: number | Ped, taskSequenceId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3841422E9C488D8C | Since: 323
     */
    function clearSequence(): number;
    /**
     * No comment provided
     *
     * Hash: 0x58C70CF3A41E4AE7 | Since: 323
     */
    function setSequenceToRepeat(taskSequenceId: number, repeat: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF5D1F489147CB683 | Since: 3570
     */
    function setSequencePreventMigration(taskSequenceId: number): void;
    /**
     * returned values:
     * 0 to 7 = task that's currently in progress, 0 meaning the first one.
     * -1 no task sequence in progress.
     *
     * Hash: 0x00A9010CFE1E3533 | Since: 323
     */
    function getSequenceProgress(ped: number | Ped): number;
    /**
     * Task index enum: https://alloc8or.re/gta5/doc/enums/eTaskTypeIndex.txt
     *
     * Hash: 0xB0760331C7AA4155 | Since: 323
     */
    function getIsActive(ped: number | Ped, taskIndex: number): boolean;
    /**
     * Gets the status of a script-assigned task.
     * taskHash: https://alloc8or.re/gta5/doc/enums/eScriptTaskHash.txt
     *
     * Hash: 0x77F1BEB8863288D5 | Since: 323
     */
    function getScriptStatus(ped: number | Ped, taskHash: number | string): number;
    /**
     * https://alloc8or.re/gta5/doc/enums/eVehicleMissionType.txt
     *
     * Hash: 0x534AEBA6E5ED4CAB | Since: 323
     */
    function getActiveVehicleMissionType(vehicle: number | Vehicle): number;
    /**
     * Flags are the same flags used in TASK_LEAVE_VEHICLE
     *
     * Hash: 0x504D54DF3F6F2247 | Since: 323
     */
    function leaveAnyVehicle(ped: number | Ped, delayTime: number, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7A192BE16D373D00 | Since: 323
     */
    function aimGunScripted(ped: number | Ped, scriptTask: number | string, disableBlockingClip: boolean, instantBlendToAim: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8605AF0DE8B3A5AC | Since: 323
     */
    function aimGunScriptedWithTarget(ped: number | Ped, target: number | Ped, pos: Vector3, gunTaskType: number, disableBlockingClip: boolean, forceAim: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9724FB59A3E72AD0 | Since: 323
     */
    function updateAimGunScriptedTarget(ped: number | Ped, target: number | Ped, pos: Vector3, disableBlockingClip: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3A8CADC7D37AACC5 | Since: 323
     */
    function getClipSetForScriptedGun(gunTaskType: number): string;
    /**
     * duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
     *
     * Hash: 0x9B53BB6E8943AF53 | Since: 323
     */
    function aimGunAtEntity(ped: number | Ped, entity: number | Entity, duration: number, instantBlendToAim: boolean): void;
    /**
     * duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
     *
     * Hash: 0x5AD23D40115353AC | Since: 323
     */
    function turnPedToFaceEntity(ped: number | Ped, entity: number | Entity, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6671F3EEC681BDA1 | Since: 323
     */
    function aimGunAtCoord(ped: number | Ped, pos: Vector3, time: number, instantBlendToAim: boolean, playAnimIntro: boolean): void;
    /**
     * Firing Pattern Hash Information: https://pastebin.com/Px036isB
     *
     * Hash: 0x46A6CC01E0826106 | Since: 323
     */
    function shootAtCoord(ped: number | Ped, pos: Vector3, duration: number, firingPattern: number | string): void;
    /**
     * Makes the specified ped shuffle to the next vehicle seat.
     * The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.
     *
     * Hash: 0x7AA80209BDA643EB | Since: 323
     */
    function shuffleToNextVehicleSeat(ped: number | Ped, vehicle: number | Vehicle, useAlternateShuffle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE1EF3C1216AFF2CD | Since: 323
     */
    function clearPeds(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6DC48E56BE1243A | Since: 3407
     */
    function clearPedScriptIfRunningThreatResponseNonTempTask(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x176CECF6F920D707 | Since: 323
     */
    function clearPedSecondary(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x7F93691AB4B92272 | Since: 323
     */
    function everyoneLeaveVehicle(vehicle: number | Vehicle): void;
    /**
     * enum ESEEK_ENTITY_OFFSET_FLAGS
     * {
     * ESEEK_OFFSET_ORIENTATES_WITH_ENTITY = 0x01,
     * ESEEK_KEEP_TO_PAVEMENTS = 0x02
     * };
     *
     * Hash: 0xE39B4FF4FDEBDE27 | Since: 323
     */
    function gotoEntityOffset(ped: number | Ped, entity: number | Entity, time: number, seekRadius: number, seekAngleDeg: number, moveBlendRatio: number, gotoEntityOffsetFlags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x338E7EF52B6095A9 | Since: 323
     */
    function gotoEntityOffsetXy(ped: number | Ped, entity: number | Entity, duration: number, targetRadius: number, offsetX: number, offsetY: number, moveBlendRatio: number, gotoEntityOffsetFlags: number): void;
    /**
     * duration in milliseconds
     *
     * Hash: 0x1DDA930A0AC38571 | Since: 323
     */
    function turnPedToFaceCoord(ped: number | Ped, pos: Vector3, duration: number): void;
    /**
     * '1 - brake
     * '3 - brake + reverse
     * '4 - turn left 90 + braking
     * '5 - turn right 90 + braking
     * '6 - brake strong (handbrake?) until time ends
     * '7 - turn left + accelerate
     * '8 - turn right + accelerate
     * '9 - weak acceleration
     * '10 - turn left + restore wheel pos to center in the end
     * '11 - turn right + restore wheel pos to center in the end
     * '13 - turn left + go reverse
     * '14 - turn left + go reverse
     * '16 - crash the game after like 2 seconds :)
     * '17 - keep actual state, game crashed after few tries
     * '18 - game crash
     * '19 - strong brake + turn left/right
     * '20 - weak brake + turn left then turn right
     * '21 - weak brake + turn right then turn left
     * '22 - brake + reverse
     * '23 - accelerate fast
     * '24 - brake
     * '25 - brake turning left then when almost stopping it turns left more
     * '26 - brake turning right then when almost stopping it turns right more
     * '27 - brake until car stop or until time ends
     * '28 - brake + strong reverse acceleration
     * '30 - performs a burnout (brake until stop + brake and accelerate)
     * '31 - accelerate + handbrake
     * '32 - accelerate very strong
     *
     * Seems to be this:
     * Works on NPCs, but overrides their current task. If inside a task sequence (and not being the last task), "time" will work, otherwise the task will be performed forever until tasked with something else
     *
     * Hash: 0xC429DCEEB339E129 | Since: 323
     */
    function vehicleTempAction(driver: number | Ped, vehicle: number | Vehicle, action: number, time: number): void;
    /**
     * missionType: https://alloc8or.re/gta5/doc/enums/eVehicleMissionType.txt
     *
     * Hash: 0x659427E0EF36BCDE | Since: 323
     */
    function vehicleMission(driver: number | Ped, vehicle: number | Vehicle, vehicleTarget: number | Vehicle, missionType: number, cruiseSpeed: number, drivingStyle: number, targetReached: number, straightLineDistance: number, DriveAgainstTraffic: boolean): void;
    /**
     * See TASK_VEHICLE_MISSION
     *
     * Hash: 0x9454528DF15D657A | Since: 323
     */
    function vehicleMissionPedTarget(ped: number | Ped, vehicle: number | Vehicle, pedTarget: number | Ped, missionType: number, maxSpeed: number, drivingStyle: number, minDistance: number, straightLineDistance: number, DriveAgainstTraffic: boolean): void;
    /**
     * See TASK_VEHICLE_MISSION
     *
     * Hash: 0xF0AF20AA7731F8C3 | Since: 323
     */
    function vehicleMissionCoorsTarget(ped: number | Ped, vehicle: number | Vehicle, pos: Vector3, mission: number, cruiseSpeed: number, drivingStyle: number, targetReached: number, straightLineDistance: number, DriveAgainstTraffic: boolean): void;
    /**
     * Makes a ped follow the targetVehicle with <minDistance> in between.
     *
     * note: minDistance is ignored if drivingstyle is avoiding traffic, but Rushed is fine.
     *
     * Mode: The mode defines the relative position to the targetVehicle. The ped will try to position its vehicle there.
     * -1 = behind
     * 0 = ahead
     * 1 = left
     * 2 = right
     * 3 = back left
     * 4 = back right
     *
     * if the target is closer than noRoadsDistance, the driver will ignore pathing/roads and follow you directly.
     *
     * Driving Styles guide: gtaforums.com/topic/822314-guide-driving-styles/
     *
     * Hash: 0x0FA6E4B75F302400 | Since: 323
     */
    function vehicleEscort(ped: number | Ped, vehicle: number | Vehicle, targetVehicle: number | Vehicle, mode: number, speed: number, drivingStyle: number, minDistance: number, minHeightAboveTerrain: number, noRoadsDistance: number): void;
    /**
     * Makes a ped in a vehicle follow an entity (ped, vehicle, etc.)
     *
     * drivingStyle: http://gtaforums.com/topic/822314-guide-driving-styles/
     *
     * Hash: 0xFC545A9F0626E3B6 | Since: 323
     */
    function vehicleFollow(driver: number | Ped, vehicle: number | Vehicle, targetEntity: number | Entity, speed: number, drivingStyle: number, minDistance: number): void;
    /**
     * chases targetEnt fast and aggressively
     * --
     * Makes ped (needs to be in vehicle) chase targetEnt.
     *
     * Hash: 0x3C08A8E30363B353 | Since: 323
     */
    function vehicleChase(driver: number | Ped, targetEnt: number | Entity): void;
    /**
     * pilot, vehicle and altitude are rather self-explanatory.
     *
     * p4: is unused variable in the function.
     *
     * entityToFollow: you can provide a Vehicle entity or a Ped entity, the heli will protect them.
     *
     * 'targetSpeed':  The pilot will dip the nose AS MUCH AS POSSIBLE so as to reach this value AS FAST AS POSSIBLE.  As such, you'll want to modulate it as opposed to calling it via a hard-wired, constant #.
     *
     * 'radius' isn't just "stop within radius of X of target" like with ground vehicles.  In this case, the pilot will fly an entire circle around 'radius' and continue to do so.
     *
     * NOT CONFIRMED:  p7 appears to be a FlyingStyle enum.  Still investigating it as of this writing, but playing around with values here appears to result in different -behavior- as opposed to offsetting coordinates, altitude, target speed, etc.
     *
     * NOTE: If the pilot finds enemies, it will engage them until it kills them, but will return to protect the ped/vehicle given shortly thereafter.
     *
     * Hash: 0x1E09C32048FEFD1C | Since: 323
     */
    function vehicleHeliProtect(pilot: number | Ped, vehicle: number | Vehicle, entityToFollow: number | Entity, targetSpeed: number, drivingFlags: number, radius: number, altitude: number, heliFlags: number): void;
    /**
     * Flag 8: Medium-aggressive boxing tactic with a bit of PIT
     * Flag 1: Aggressive ramming of suspect
     * Flag 2: Ram attempts
     * Flag 32: Stay back from suspect, no tactical contact. Convoy-like.
     * Flag 16: Ramming, seems to be slightly less aggressive than 1-2.
     *
     * Hash: 0xCC665AAC360D31E7 | Since: 323
     */
    function setVehicleChaseBehaviorFlag(ped: number | Ped, flag: number, _set: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x639B642FACBE4EDD | Since: 323
     */
    function setVehicleChaseIdealPursuitDistance(ped: number | Ped, distance: number): void;
    /**
     * Ped pilot should be in a heli.
     * EntityToFollow can be a vehicle or Ped.
     *
     * x,y,z appear to be how close to the EntityToFollow the heli should be. Scripts use 0.0, 0.0, 80.0. Then the heli tries to position itself 80 units above the EntityToFollow. If you reduce it to -5.0, it tries to go below (if the EntityToFollow is a heli or plane)
     *
     *
     * NOTE: If the pilot finds enemies, it will engage them, then remain there idle, not continuing to chase the Entity given.
     *
     * Hash: 0xAC83B1DB38D0ADA0 | Since: 323
     */
    function heliChase(pilot: number | Ped, entityToFollow: number | Entity, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x2D2386F273FF7A25 | Since: 323
     */
    function planeChase(pilot: number | Ped, entityToFollow: number | Entity, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xBF19721FA34D32C0 | Since: 323
     */
    function planeLand(pilot: number | Ped, plane: number | Vehicle, runwayStartX: number, runwayStartY: number, runwayStartZ: number, runwayEndX: number, runwayEndY: number, runwayEndZ: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6100B3CEFD43452E | Since: 2189
     */
    function clearDefaultPrimary(ped: number | Ped): void;
    /**
     * This native is very useful when switching the player to a ped inside a vehicle that has a task assigned prior to the player switch.
     * It is necessary to clear the ped's tasks AND call this native with the vehicle the player is switching into in order to allow the player to control the vehicle after the player switches.
     *
     * Hash: 0xDBBC7A2432524127 | Since: 1290
     */
    function clearPrimaryVehicle(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x53DDC75BC3AC0A90 | Since: 1290
     */
    function clearVehicleCrash(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xF7F9DCCA89E7505B | Since: 1290
     */
    function planeGotoPreciseVtol(ped: number | Ped, vehicle: number | Vehicle, pos: Vector3, flightHeight: number, minHeightAboveTerrain: number, useDesiredOrientation: boolean, desiredOrientation: number, autopilot: boolean): void;
    /**
     * Used in am_vehicle_spawn.ysc and am_mp_submarine.ysc.
     *
     * p0 is always 0, p5 is always 1
     *
     * p1 is the vehicle handle of the submarine. Submarine must have a driver, but the ped handle is not passed to the native.
     *
     * Speed can be set by calling SET_DRIVE_TASK_CRUISE_SPEED after
     *
     * Hash: 0xC22B40579A498CA4 | Since: 2189
     */
    function submarineGotoAndStop(ped: number | Ped, submarine: number | Vehicle, pos: Vector3, autopilot: boolean): void;
    /**
     * Must have targetVehicle, targetPed, OR destination X/Y/Z set
     * Will follow targeted vehicle/ped, or fly to destination
     * Set whichever is not being used to 0
     *
     *
     * Mission mode type:
     * - 4, 7: Forces heli to snap to the heading if set, flies to destination or tracks specified entity (mode 4 only works for coordinates, 7 works for coordinates OR ped/vehicle)
     * - 6: Attacks the target ped/vehicle with mounted weapons. If radius is set, will maintain that distance from target.
     * - 8: Makes the heli flee from the ped/vehicle/coordinate
     * - 9: Circles around target ped/vehicle, snaps to angle if set. Behavior flag (last parameter) of 2048 switches from counter-clockwise to clockwise circling. Does not work with coordinate destination.
     * - 10, 11: Follows ped/vehicle target and imitates target heading. Only works with ped/vehicle target, not coord target
     * - 19: Heli lands at specified coordinate, ignores heading (lands facing whatever direction it is facing when the task is started)
     * - 20: Makes the heli land when near target ped. It won't resume chasing.
     * - 21: Emulates a helicopter crash
     * - 23: makes the heli circle erratically around ped
     *
     *
     * Heli will fly at maxSpeed (up to actual maximum speed defined by the model's handling config)
     * You can use SET_DRIVE_TASK_CRUISE_SPEED to modulate the speed based on distance to the target without having to re-invoke the task native. Setting to 8.0 when close to the destination results in a much smoother approach.
     *
     * If minHeight and maxHeight are set, heli will fly between those specified elevations, relative to ground level and any obstructions/buildings below. You can specify -1 for either if you only want to specify one. Usually it is easiest to leave maxHeight at -1, and specify a reasonable minHeight to ensure clearance over any obstacles. Note this MUST be passed as an INT, not a FLOAT.
     *
     * Radius affects how closely the heli will follow tracked ped/vehicle, and when circling (mission type 9) sets the radius (in meters) that it will circle the target from
     *
     * Heading is -1.0 for default behavior, which will point the nose of the helicopter towards the destination. Set a heading and the heli will lock to that direction when near its destination/target, but may still turn towards the destination when flying at higher speed from a further distance.
     *
     * Behavior Flags is a bitwise value that modifies the AI behavior. Not clear what all flags do, but here are some guesses/notes:
     * 1: Forces heading to face E
     * 2: Unknown
     * 4: Tight circles around coordinate destination
     * 8: Unknown
     * 16: Circles around coordinate destination facing towards destination
     * 32: Flys to normally, then lands at coordinate destination and stays on the ground (using mission type 4)
     * 64: Ignores obstacles when flying, will follow at specified minHeight above ground level but will not avoid buildings, vehicles, etc.
     * 128: Unknown
     * 256: Unknown
     * 512: Unknown
     * 1024: Unknown
     * 2048: Reverses direction of circling (mission type 9) to clockwise
     * 4096: Hugs closer to the ground, maintains minHeight from ground generally, but barely clears buildings and dips down more between buildings instead of taking a more efficient/safe route
     * 8192: Unknown
     *
     * Unk3 is a float value, you may see -1082130432 for this value in decompiled native scripts, this is the equivalent to -1.0f. Seems to affect acceleration/aggressiveness, but not sure exactly how it works. Higher value seems to result in lower acceleration/less aggressive flying. Almost always -1.0 in native scripts, occasionally 20.0 or 50.0. Setting to 400.0 seems to work well for making the pilot not overshoot the destination when using coordinate destination.
     *
     * Notes updated by PNWParksFan, May 2021
     *
     *
     * Hash: 0xDAD029E187A2BEB4 | Since: 323
     */
    function heliMission(pilot: number | Ped, aircraft: number | Vehicle, targetVehicle: number | Vehicle, targetPed: number | Ped, destinationX: number, destinationY: number, destinationZ: number, missionFlag: number, maxSpeed: number, radius: number, targetHeading: number, maxHeight: number, minHeight: number, slowDownDistance: number, behaviorFlags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB385523325077210 | Since: 1290
     */
    function heliEscortHeli(pilot: number | Ped, heli1: number | Vehicle, heli2: number | Vehicle, offsetX: number, offsetY: number, offsetZ: number): void;
    /**
     * EXAMPLE USAGE:
     *
     * Fly around target (Precautiously, keeps high altitude):
     * Function.Call(Hash.TASK_PLANE_MISSION, pilot, selectedAirplane, 0, 0, Target.X, Target.Y, Target.Z, 4, 100f, 0f, 90f, 0, 200f);
     *
     * Fly around target (Dangerously, keeps VERY low altitude):
     * Function.Call(Hash.TASK_PLANE_MISSION, pilot, selectedAirplane, 0, 0, Target.X, Target.Y, Target.Z, 4, 100f, 0f, 90f, 0, -500f);
     *
     * Fly directly into target:
     * Function.Call(Hash.TASK_PLANE_MISSION, pilot, selectedAirplane, 0, 0, Target.X, Target.Y, Target.Z, 4, 100f, 0f, 90f, 0, -5000f);
     *
     * EXPANDED INFORMATION FOR ADVANCED USAGE (custom pilot)
     *
     * 'physicsSpeed': (THIS IS NOT YOUR ORDINARY SPEED PARAMETER: READ!!)
     * Think of this -first- as a radius value, not a true speed value.  The ACTUAL effective speed of the plane will be that of the maximum speed permissible to successfully fly in a -circle- with a radius of 'physicsSpeed'.  This also means that the plane must complete a circle before it can begin its "bombing run", its straight line pass towards the target.  p9 appears to influence the angle at which a "bombing run" begins, although I can't confirm yet.
     *
     * VERY IMPORTANT: A "bombing run" will only occur if a plane can successfully determine a possible navigable route (the slower the value of 'physicsSpeed', the more precise the pilot can be due to less influence of physics on flightpath).  Otherwise, the pilot will continue to patrol around Destination (be it a dynamic Entity position vector or a fixed world coordinate vector.)
     *
     * 0 = Plane's physics are almost entirely frozen, plane appears to "orbit" around precise destination point
     * 1-299 = Blend of "frozen, small radius" vs. normal vs. "accelerated, hyperfast, large radius"
     * 300+ =  Vehicle behaves entirely like a normal gameplay plane.
     *
     * 'patrolBlend' (The lower the value, the more the Destination is treated as a "fly AT" rather than a "fly AROUND point".)
     *
     * Scenario: Destination is an Entity on ground level, wide open field
     * -5000 = Pilot kamikazes directly into Entity
     * -1000 = Pilot flies extremely low -around- Entity, very prone to crashing
     * -200 = Pilot flies lower than average around Entity.
     * 0 = Pilot flies around Entity, normal altitude
     * 200 = Pilot flies an extra eighty units or so higher than 0 while flying around Destination (this doesn't seem to correlate directly into distance units.)
     *
     * -- Valid mission types found in the exe: --
     *
     * 0 = None
     * 1 = Unk
     * 2 = CTaskVehicleRam
     * 3 = CTaskVehicleBlock
     * 4 = CTaskVehicleGoToPlane
     * 5 = CTaskVehicleStop
     * 6 = CTaskVehicleAttack
     * 7 = CTaskVehicleFollow
     * 8 = CTaskVehicleFleeAirborne
     * 9= CTaskVehicleCircle
     * 10 = CTaskVehicleEscort
     * 15 = CTaskVehicleFollowRecording
     * 16 = CTaskVehiclePoliceBehaviour
     * 17 = CTaskVehicleCrash
     *
     * Hash: 0x23703CD154E83B88 | Since: 323
     */
    function planeMission(pilot: number | Ped, aircraft: number | Vehicle, targetVehicle: number | Vehicle, targetPed: number | Ped, destinationX: number, destinationY: number, destinationZ: number, missionFlag: number, angularDrag: number, targetReached: number, targetHeading: number, maxZ: number, minZ: number, precise: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x92C360B5F15D2302 | Since: 1103
     */
    function planeTaxi(pilot: number | Ped, aircraft: number | Vehicle, pos: Vector3, cruiseSpeed: number, targetReached: number): void;
    /**
     * `You need to call PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS after TASK_BOAT_MISSION in order for the task to execute.`
     *
     * Working example
     * `float vehicleMaxSpeed = VEHICLE::GET_VEHICLE_ESTIMATED_MAX_SPEED(ENTITY::GET_ENTITY_MODEL(pedVehicle));`
     * `TASK::TASK_BOAT_MISSION(pedDriver, pedVehicle, 0, 0, waypointCoord.x, waypointCoord.y, waypointCoord.z, 4, vehicleMaxSpeed, 786469, -1.0, 7);`
     * `PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(pedDriver, 1);`
     *
     * P8 appears to be driving style flag - see gtaforums.com/topic/822314-guide-driving-styles/ for documentation
     *
     * Hash: 0x15C86013127CE63F | Since: 323
     */
    function boatMission(pedDriver: number | Ped, vehicle: number | Vehicle, targetVehicle: number | Vehicle, targetPed: number | Ped, pos: Vector3, mission: number, maxSpeed: number, drivingStyle: number, targetReached: number, boatFlags: any): void;
    /**
     * Example:
     *
     * `TASK::TASK_DRIVE_BY(l_467[1\/\*22\*\/], PLAYER::PLAYER_PED_ID(), 0, 0.0, 0.0, 2.0, 300.0, 100, 0, ${firing_pattern_burst_fire_driveby});`
     *
     *
     *
     *
     * Needs working example. Doesn't seem to do anything.
     *
     * I marked p2 as targetVehicle as all these shooting related tasks seem to have that in common.
     * I marked p6 as distanceToShoot as if you think of GTA's Logic with the native SET_VEHICLE_SHOOT natives, it won't shoot till it gets within a certain distance of the target.
     * I marked p7 as pedAccuracy as it seems it's mostly 100 (Completely Accurate), 75, 90, etc. Although this could be the ammo count within the gun, but I highly doubt it. I will change this comment once I find out if it's ammo count or not.
     *
     * Hash: 0x2F8AF0E82773A171 | Since: 323
     */
    function driveBy(driverPed: number | Ped, targetPed: number | Ped, targetVehicle: number | Vehicle, targetX: number, targetY: number, targetZ: number, distanceToShoot: number, pedAccuracy: number, pushUnderneathDrivingTaskIfDriving: boolean, firingPattern: number | string): void;
    /**
     * For p1 & p2 (Ped, Vehicle). I could be wrong, as the only time this native is called in scripts is once and both are 0, but I assume this native will work like SET_MOUNTED_WEAPON_TARGET in which has the same exact amount of parameters and the 1st and last 3 parameters are right and the same for both natives.
     *
     * Hash: 0xE5B302114D8162EE | Since: 323
     */
    function setDrivebyTarget(shootingPed: number | Ped, targetPed: number | Ped, targetVehicle: number | Vehicle, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xC35B5CDB2824CF69 | Since: 323
     */
    function clearDrivebyUnderneathDrivingTask(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8785E6E40C7A8818 | Since: 323
     */
    function isDrivebyUnderneathDrivingTask(ped: number | Ped): boolean;
    /**
     * Forces the ped to use the mounted weapon.
     * Returns false if task is not possible.
     *
     * Hash: 0xDCFE42068FE0135A | Since: 323
     */
    function controlMountedWeapon(ped: number | Ped): boolean;
    /**
     * Note: Look in decompiled scripts and the times that p1 and p2 aren't 0. They are filled with vars. If you look through out that script what other natives those vars are used in, you can tell p1 is a ped and p2 is a vehicle. Which most likely means if you want the mounted weapon to target a ped set targetVehicle to 0 or vice-versa.
     *
     * Hash: 0xCCD892192C6D2BB9 | Since: 323
     */
    function setMountedWeaponTarget(shootingPed: number | Ped, targetPed: number | Ped, targetVehicle: number | Vehicle, pos: Vector3, taskMode: number, ignoreTargetVehDeadCheck: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA320EF046186FA3B | Since: 323
     */
    function isMountedWeaponUnderneathDrivingTask(ped: number | Ped): boolean;
    /**
     * Actually has 3 params, not 2.
     *
     * p0: Ped
     * p1: int (or bool?)
     * p2: int
     *
     * Hash: 0xBD2A8EC3AF4DE7DB | Since: 323
     */
    function useMobilePhone(ped: number | Ped, usePhone: boolean, desiredPhoneMode: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5EE02954A14C69DB | Since: 323
     */
    function useMobilePhoneTimed(ped: number | Ped, duration: number): void;
    /**
     * p2 tend to be 16, 17 or 1
     * p3 to p7 tend to be 0.0
     *
     * Hash: 0x8C338E0263E4FD19 | Since: 323
     */
    function chatToPed(ped: number | Ped, target: number | Ped, flags: number, goToLocationX: number, goToLocationY: number, goToLocationZ: number, headingDegs: number, idleTime: number): void;
    /**
     * Seat Numbers
     * -------------------------------
     * Driver = -1
     * Any = -2
     * Left-Rear = 1
     * Right-Front = 0
     * Right-Rear = 2
     * Extra seats = 3-14(This may differ from vehicle type e.g. Firetruck Rear Stand, Ambulance Rear)
     *
     * Hash: 0x9A7D091411C5F684 | Since: 323
     */
    function warpPedIntoVehicle(ped: number | Ped, vehicle: number | Vehicle, seat: number): void;
    /**
     * //this part of the code is to determine at which entity the player is aiming, for example if you want to create a mod where you give orders to peds
     * Entity aimedentity;
     * `Player player = PLAYER::PLAYER_ID();`
     * `PLAYER::_GET_AIMED_ENTITY(player, &aimedentity);`
     *
     * //bg is an array of peds
     * `TASK::TASK_SHOOT_AT_ENTITY(bg[i], aimedentity, 5000, MISC::GET_HASH_KEY("FIRING_PATTERN_FULL_AUTO"));`
     *
     * in practical usage, getting the entity the player is aiming at and then task the peds to shoot at the entity, at a button press event would be better.
     *
     * Firing Pattern Hash Information: https://pastebin.com/Px036isB
     *
     * Hash: 0x08DA95E8298AE772 | Since: 323
     */
    function shootAtEntity(entity: number | Entity, target: number | Entity, duration: number, firingPattern: number | string): void;
    /**
     * Climbs or vaults the nearest thing.
     * usePlayerLaunchForce is unused.
     *
     * Hash: 0x89D9FCC2435112F1 | Since: 323
     */
    function climb(ped: number | Ped, usePlayerLaunchForce: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB6C987F9285A3814 | Since: 323
     */
    function climbLadder(ped: number | Ped, fast: boolean): void;
    /**
     * Attaches a ped to a rope and allows player control to rappel down a wall. Disables all collisions while on the rope.
     * p10: Usually 1 in the scripts, clipSet: Clipset to use for the task, minZ: Minimum Z that the player can descend to, ropeHandle: Rope to attach this task to created with ADD_ROPE
     *
     * Hash: 0xEAF66ACDDC794793 | Since: 1868
     */
    function rappelDownWallUsingClipsetOverride(ped: number | Ped, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, minZ: number, ropeHandle: number, clipSet: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D252648778160DF | Since: 1868
     */
    function getRappelDownWallState(ped: number | Ped): number;
    /**
     * Immediately stops the pedestrian from whatever it's doing. They stop fighting, animations, etc. they forget what they were doing.
     *
     * Hash: 0xAAA34F8A7CB32098 | Since: 323
     */
    function clearPedsImmediately(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x89221B16730234F0 | Since: 323
     */
    function performSequenceFromProgress(ped: number | Ped, taskIndex: number, progress1: number, progress2: number): void;
    /**
     * This native does absolutely nothing, just a nullsub
     *
     * R* Comment:
     * SET_NEXT_DESIRED_MOVE_STATE - Function is deprecated - do not use anymore
     *
     * Hash: 0xF1B9F16E89E2C93A | Since: 323
     */
    function setNextDesiredMoveState(nextMoveState: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1E982AC8716912C5 | Since: 323
     */
    function setPedDesiredMoveBlendRatio(ped: number | Ped, newMoveBlendRatio: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8517D4A6CA8513ED | Since: 323
     */
    function getPedDesiredMoveBlendRatio(ped: number | Ped): number;
    /**
     * eg
     *
     * `TASK::TASK_GOTO_ENTITY_AIMING(v_2, PLAYER::PLAYER_PED_ID(), 5.0, 25.0);`
     *
     * ped = Ped you want to perform this task.
     * target = the Entity they should aim at.
     * distanceToStopAt = distance from the target, where the ped should stop to aim.
     * StartAimingDist = distance where the ped should start to aim.
     *
     * Hash: 0xA9DA48FAB8A76C12 | Since: 323
     */
    function gotoEntityAiming(ped: number | Ped, target: number | Entity, distanceToStopAt: number, StartAimingDist: number): void;
    /**
     * p1 is always GET_HASH_KEY("empty") in scripts, for the rare times this is used
     *
     * Hash: 0xEB8517DDA73720DA | Since: 323
     */
    function setDecisionMaker(ped: number | Ped, decisionMakerId: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x933C06518B52A9A4 | Since: 323
     */
    function setSphereDefensiveArea(ped: number | Ped, pos: Vector3, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x95A6C46A31D1917D | Since: 323
     */
    function clearDefensiveArea(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xD04FE6765D990A06 | Since: 323
     */
    function pedSlideToCoord(ped: number | Ped, pos: Vector3, heading: number, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A4A6A6D3DC64F52 | Since: 323
     */
    function pedSlideToCoordHdgRate(ped: number | Ped, pos: Vector3, heading: number, speed: number, headingChangeRate: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD5C12A75C7B9497F | Since: 323
     */
    function addCoverPoint(pos: Vector3, direction: number, usage: number, height: number, arc: number, isPriority: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0xAE287C923D891715 | Since: 323
     */
    function removeCoverPoint(coverpoint: number): void;
    /**
     * Checks if there is a cover point at position
     *
     * Hash: 0xA98B8E3C088E5A31 | Since: 323
     */
    function doesScriptedCoverPointExistAtCoords(pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x594A1028FC2A3E85 | Since: 323
     */
    function getScriptedCoverPointCoords(coverpoint: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x28B7B9BFDAF274AA | Since: 2545
     */
    function addScriptedCoverArea(pos: Vector3, radius: number): void;
    /**
     * Makes the specified ped attack the target ped.
     * p2 should be 0
     * p3 should be 16
     *
     * Hash: 0xF166E48407BAC484 | Since: 323
     */
    function combatPed(ped: number | Ped, targetPed: number | Ped, combatFlags: number, threatResponseFlags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x944F30DCB7096BDE | Since: 323
     */
    function combatPedTimed(ped: number | Ped, target: number | Ped, time: number, flags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x75AC2B60386D89F2 | Since: 323
     */
    function seekCoverFromPos(ped: number | Ped, pos: Vector3, duration: number, allowPeekingAndFiring: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x84D32B3BEC531324 | Since: 323
     */
    function seekCoverFromPed(ped: number | Ped, target: number | Ped, duration: number, allowPeekingAndFiring: boolean): void;
    /**
     * p5 is always -1
     *
     * Hash: 0xD43D95C7A869447F | Since: 323
     */
    function seekCoverToCoverPoint(ped: number | Ped, coverpoint: number, pos: Vector3, time: number, allowPeekingAndFiring: boolean): void;
    /**
     * p8 causes the ped to take the shortest route to the cover position. It may have something to do with navmesh or pathfinding mechanics.
     *
     * from michael2:
     * `TASK::TASK_SEEK_COVER_TO_COORDS(ped, 967.5164794921875, -2121.603515625, 30.479299545288086, 978.94677734375, -2125.84130859375, 29.4752, -1, 1);`
     *
     *
     * appears to be shorter variation
     * from michael3:
     * `TASK::TASK_SEEK_COVER_TO_COORDS(ped, -2231.011474609375, 263.6326599121094, 173.60195922851562, -1, 0);`
     *
     * Hash: 0x39246A6958EF072C | Since: 323
     */
    function seekCoverToCoords(ped: number | Ped, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, timeout: number, shortRoute: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x4172393E6BE1FECE | Since: 323
     */
    function putPedDirectlyIntoCover(ped: number | Ped, pos: Vector3, time: number, allowPeekingAndFiring: boolean, blendInDuration: number, forceInitialFacingDirection: boolean, forceFaceLeft: boolean, identifier: number, doEntry: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6E01E9E8D89F8276 | Since: 2545
     */
    function warpPedDirectlyIntoCover(ped: number | Ped, time: number, allowPeekingAndFiring: boolean, forceInitialFacingDirection: boolean, forceFaceLeft: boolean, identifier: number): void;
    /**
     * p1 is 1, 2, or 3 in scripts
     *
     * Hash: 0x79B258E397854D29 | Since: 323
     */
    function exitCover(ped: number | Ped, exitType: number, pos: Vector3): void;
    /**
     * from armenian3.c4
     *
     * `TASK::TASK_PUT_PED_DIRECTLY_INTO_MELEE(PlayerPed, armenianPed, 0.0, -1.0, 0.0, 0);`
     *
     *
     * Hash: 0x1C6CD14A876FFE39 | Since: 323
     */
    function putPedDirectlyIntoMelee(ped: number | Ped, meleeTarget: number | Ped, blendInDuration: number, timeInMelee: number, strafePhaseSync: number, aiCombatFlags: number): void;
    /**
     * used in sequence task
     *
     * both parameters seems to be always 0
     *
     * Hash: 0xAC96609B9995EDF8 | Since: 323
     */
    function toggleDuck(ped: number | Ped, toggleType: number): void;
    /**
     * From re_prisonvanbreak:
     *
     * `TASK::TASK_GUARD_CURRENT_POSITION(l_DD, 35.0, 35.0, 1);`
     *
     * Hash: 0x4A58A47A72E3FCB4 | Since: 323
     */
    function guardCurrentPosition(ped: number | Ped, maxPatrolProximity: number, defensiveAreaRadius: number, setDefensiveArea: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD2A207EEBDF9889B | Since: 323
     */
    function guardAssignedDefensiveArea(ped: number | Ped, pos: Vector3, heading: number, maxPatrolProximity: number, timer: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC946FE14BE0EB5E2 | Since: 323
     */
    function guardSphereDefensiveArea(ped: number | Ped, defendPositionX: number, defendPositionY: number, defendPositionZ: number, heading: number, maxPatrolProximity: number, time: number, pos: Vector3, defensiveAreaRadius: number): void;
    /**
     * scenarioName example: "WORLD_HUMAN_GUARD_STAND"
     *
     * Hash: 0xAE032F8BBA959E90 | Since: 323
     */
    function standGuard(ped: number | Ped, pos: Vector3, heading: number, scenarioName: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x5C9B84BD7D31D908 | Since: 323
     */
    function setDriveCruiseSpeed(driver: number | Ped, cruiseSpeed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x404A5AA9B9F0B746 | Since: 323
     */
    function setDriveMaxCruiseSpeed(ped: number | Ped, speed: number, updateBaseTask: boolean): void;
    /**
     * This native is used to set the driving style for specific ped.
     *
     * Driving styles id seems to be:
     * 786468
     * 262144
     * 786469
     *
     * http://gtaforums.com/topic/822314-guide-driving-styles/
     *
     * Hash: 0xDACE1BE37D88AF67 | Since: 323
     */
    function setDriveDrivingStyle(ped: number | Ped, drivingStyle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x45C597097DD7CB81 | Since: 323
     */
    function addCoverBlockingArea(startX: number, startY: number, startZ: number, endX: number, endY: number, endZ: number, blockObjects: boolean, blockVehicles: boolean, blockMap: boolean, blockPlayer: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDB6708C0B46F56D8 | Since: 323
     */
    function removeAllCoverBlockingAreas(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFA83CA6776038F64 | Since: 1493
     */
    function removeCoverBlockingAreasAtPosition(pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F351CF1C6475734 | Since: 505
     */
    function removeSpecificCoverBlockingAreas(startX: number, startY: number, startZ: number, endX: number, endY: number, endZ: number, blockObjects: boolean, blockVehicles: boolean, blockMap: boolean, blockPlayer: boolean): void;
    /**
     * Plays a scenario on a Ped at their current location.
     *
     * unkDelay - Usually 0 or -1, doesn't seem to have any effect. Might be a delay between sequences.
     * playEnterAnim - Plays the "Enter" anim if true, otherwise plays the "Exit" anim. Scenarios that don't have any "Enter" anims won't play if this is set to true.
     *
     * ----
     *
     * From "am_hold_up.ysc.c4" at line 339:
     *
     * `TASK::TASK_START_SCENARIO_IN_PLACE(NETWORK::NET_TO_PED(l_8D._f4), sub_adf(), 0, 1);`
     *
     * I'm unsure of what the last two parameters are, however sub_adf() randomly returns 1 of 3 scenarios, those being:
     * WORLD_HUMAN_SMOKING
     * WORLD_HUMAN_HANG_OUT_STREET
     * WORLD_HUMAN_STAND_MOBILE
     *
     * This makes sense, as these are what I commonly see when going by a liquor store.
     * -------------------------
     * List of scenarioNames: https://pastebin.com/6mrYTdQv
     * (^ Thank you so fucking much for this)
     *
     * Also these:
     * WORLD_FISH_FLEE
     * DRIVE
     * WORLD_HUMAN_HIKER
     * WORLD_VEHICLE_ATTRACTOR
     * WORLD_VEHICLE_BICYCLE_MOUNTAIN
     * WORLD_VEHICLE_BIKE_OFF_ROAD_RACE
     * WORLD_VEHICLE_BIKER
     * WORLD_VEHICLE_CONSTRUCTION_PASSENGERS
     * WORLD_VEHICLE_CONSTRUCTION_SOLO
     * WORLD_VEHICLE_DRIVE_PASSENGERS
     * WORLD_VEHICLE_DRIVE_SOLO
     * WORLD_VEHICLE_EMPTY
     * WORLD_VEHICLE_PARK_PARALLEL
     * WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN
     * WORLD_VEHICLE_POLICE_BIKE
     * WORLD_VEHICLE_POLICE_CAR
     * WORLD_VEHICLE_POLICE_NEXT_TO_CAR
     * WORLD_VEHICLE_SALTON_DIRT_BIKE
     * WORLD_VEHICLE_TRUCK_LOGS
     *
     * Full list of ped scenarios by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenariosCompact.json
     *
     * Hash: 0x142A02425FF02BD9 | Since: 323
     */
    function startScenarioInPlace(ped: number | Ped, scenarioName: string, unkDelay: number, playEnterAnim: boolean): void;
    /**
     * Full list of ped scenarios by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenariosCompact.json
     *
     * `Also a few more listed at TASK::TASK_START_SCENARIO_IN_PLACE just above.`
     * ---------------
     * The first parameter in every scenario has always been a Ped of some sort. The second like TASK_START_SCENARIO_IN_PLACE is the name of the scenario.
     *
     * The next 4 parameters were harder to decipher. After viewing "hairdo_shop_mp.ysc.c4", and being confused from seeing the case in other scripts, they passed the first three of the arguments as one array from a function, and it looked like it was obviously x, y, and z.
     *
     * I haven't seen the sixth parameter go to or over 360, making me believe that it is rotation, but I really can't confirm anything.
     *
     * I have no idea what the last 3 parameters are, but I'll try to find out.
     *
     * -going on the last 3 parameters, they appear to always be "0, 0, 1"
     *
     * p6 -1 also used in scrips
     *
     * p7 used for sitting scenarios
     *
     * p8 teleports ped to position
     *
     * Hash: 0xFA4EFC79F69D4F07 | Since: 323
     */
    function startScenarioAtPosition(ped: number | Ped, scenarioName: string, pos: Vector3, heading: number, duration: number, sittingScenario: boolean, teleport: boolean): void;
    /**
     * Updated variables
     *
     * `An alternative to TASK::TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP. Makes the ped walk to the scenario instead.`
     *
     * Hash: 0x277F471BA9DB000B | Since: 323
     */
    function useNearestScenarioToCoord(ped: number | Ped, pos: Vector3, distance: number, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x58E2E0F23F6B76C3 | Since: 323
     */
    function useNearestScenarioToCoordWarp(ped: number | Ped, pos: Vector3, radius: number, timeToLeave: number): void;
    /**
     * p5 is always 0 in scripts
     *
     * Hash: 0x9FDA1B3D7E7028B3 | Since: 323
     */
    function useNearestScenarioChainToCoord(ped: number | Ped, pos: Vector3, maxRange: number, timeToLeave: number): void;
    /**
     * p5 is always -1 or 0 in scripts
     *
     * Hash: 0x97A28E63F0BA5631 | Since: 323
     */
    function useNearestScenarioChainToCoordWarp(ped: number | Ped, pos: Vector3, radius: number, timeToLeave: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A59271FFADD33C1 | Since: 323
     */
    function doesScenarioExistInArea(pos: Vector3, radius: number, mustBeFree: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0A9D0C2A3BBC86C1 | Since: 323
     */
    function doesScenarioOfTypeExistInArea(pos: Vector3, scenarioName: string, radius: number, mustBeFree: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x788756D73AC2E07C | Since: 323
     */
    function isScenarioOccupied(pos: Vector3, maxRange: number, onlyUsersActuallyAtScenario: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x295E3CCEC879CCD7 | Since: 323
     */
    function pedHasUseScenario(ped: number | Ped): boolean;
    /**
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0x748040460F8DF5DC | Since: 323
     */
    function playAnimOnRunningScenario(ped: number | Ped, animDict: string, animName: string): void;
    /**
     * Full list of scenario groups used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenarioGroupNames.json
     * Occurrences in the b617d scripts:
     *
     * "ARMY_GUARD",
     * "ARMY_HELI",
     * "Cinema_Downtown",
     * "Cinema_Morningwood",
     * "Cinema_Textile",
     * "City_Banks",
     * "Countryside_Banks",
     * "DEALERSHIP",
     * "GRAPESEED_PLANES",
     * "KORTZ_SECURITY",
     * "LOST_BIKERS",
     * "LSA_Planes",
     * "LSA_Planes",
     * "MP_POLICE",
     * "Observatory_Bikers",
     * "POLICE_POUND1",
     * "POLICE_POUND2",
     * "POLICE_POUND3",
     * "POLICE_POUND4",
     * "POLICE_POUND5"
     * "QUARRY",
     * "SANDY_PLANES",
     * "SCRAP_SECURITY",
     * "SEW_MACHINE",
     * "SOLOMON_GATE",
     * "Triathlon_1_Start",
     * "Triathlon_2_Start",
     * "Triathlon_3_Start"
     *
     * Sometimes used with IS_SCENARIO_GROUP_ENABLED:
     * `if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") && (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {`
     * `else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {`
     *
     *
     * Hash: 0xF9034C136C9E00D3 | Since: 323
     */
    function doesScenarioGroupExist(scenarioGroup: string): boolean;
    /**
     * Full list of scenario groups used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenarioGroupNames.json
     * Occurrences in the b617d scripts:
     *
     * "ARMY_GUARD",
     * "ARMY_HELI",
     * "BLIMP",
     * "Cinema_Downtown",
     * "Cinema_Morningwood",
     * "Cinema_Textile",
     * "City_Banks",
     * "Countryside_Banks",
     * "DEALERSHIP",
     * "KORTZ_SECURITY",
     * "LSA_Planes",
     * "MP_POLICE",
     * "Observatory_Bikers",
     * "POLICE_POUND1",
     * "POLICE_POUND2",
     * "POLICE_POUND3",
     * "POLICE_POUND4",
     * "POLICE_POUND5",
     * "Rampage1",
     * "SANDY_PLANES",
     * "SCRAP_SECURITY",
     * "SEW_MACHINE",
     * "SOLOMON_GATE"
     *
     * Sometimes used with DOES_SCENARIO_GROUP_EXIST:
     * `if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") &&   (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {`
     * `else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {`
     *
     * Hash: 0x367A09DED4E05B99 | Since: 323
     */
    function isScenarioGroupEnabled(scenarioGroup: string): boolean;
    /**
     * Full list of scenario groups used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenarioGroupNames.json
     * Occurrences in the b617d scripts: https://pastebin.com/Tvg2PRHU
     *
     * Hash: 0x02C8E5B49848664E | Since: 323
     */
    function setScenarioGroupEnabled(scenarioGroup: string, enabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDD902D0349AFAD3A | Since: 323
     */
    function resetScenarioGroupsEnabled(): void;
    /**
     * Full list of scenario groups used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenarioGroupNames.json
     * Groups found in the scripts used with this native:
     *
     * "AMMUNATION",
     * "QUARRY",
     * "Triathlon_1",
     * "Triathlon_2",
     * "Triathlon_3"
     *
     * Hash: 0x535E97E1F7FC0C6A | Since: 323
     */
    function setExclusiveScenarioGroup(scenarioGroup: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x4202BBCB8684563D | Since: 323
     */
    function resetExclusiveScenarioGroup(): void;
    /**
     * Full list of scenario types used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenariosCompact.json
     * Occurrences in the b617d scripts:
     * "PROP_HUMAN_SEAT_CHAIR",
     * "WORLD_HUMAN_DRINKING",
     * "WORLD_HUMAN_HANG_OUT_STREET",
     * "WORLD_HUMAN_SMOKING",
     * "WORLD_MOUNTAIN_LION_WANDER",
     * "WORLD_HUMAN_DRINKING"
     *
     * `Sometimes used together with MISC::IS_STRING_NULL_OR_EMPTY in the scripts.`
     *
     * `scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.`
     *
     *
     * Hash: 0x3A815DB3EA088722 | Since: 323
     */
    function isScenarioTypeEnabled(scenarioType: string): boolean;
    /**
     * Full list of scenario types used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenariosCompact.json
     * seems to enable/disable specific scenario-types from happening in the game world.
     *
     * Here are some scenario types from the scripts:
     * "WORLD_MOUNTAIN_LION_REST"
     * "WORLD_MOUNTAIN_LION_WANDER"
     * "DRIVE"
     * "WORLD_VEHICLE_POLICE_BIKE"
     * "WORLD_VEHICLE_POLICE_CAR"
     * "WORLD_VEHICLE_POLICE_NEXT_TO_CAR"
     * "WORLD_VEHICLE_DRIVE_SOLO"
     * "WORLD_VEHICLE_BIKER"
     * "WORLD_VEHICLE_DRIVE_PASSENGERS"
     * "WORLD_VEHICLE_SALTON_DIRT_BIKE"
     * "WORLD_VEHICLE_BICYCLE_MOUNTAIN"
     * "PROP_HUMAN_SEAT_CHAIR"
     * "WORLD_VEHICLE_ATTRACTOR"
     * "WORLD_HUMAN_LEANING"
     * "WORLD_HUMAN_HANG_OUT_STREET"
     * "WORLD_HUMAN_DRINKING"
     * "WORLD_HUMAN_SMOKING"
     * "WORLD_HUMAN_GUARD_STAND"
     * "WORLD_HUMAN_CLIPBOARD"
     * "WORLD_HUMAN_HIKER"
     * "WORLD_VEHICLE_EMPTY"
     * "WORLD_VEHICLE_BIKE_OFF_ROAD_RACE"
     * "WORLD_HUMAN_PAPARAZZI"
     * "WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN"
     * "WORLD_VEHICLE_PARK_PARALLEL"
     * "WORLD_VEHICLE_CONSTRUCTION_SOLO"
     * "WORLD_VEHICLE_CONSTRUCTION_PASSENGERS"
     * "WORLD_VEHICLE_TRUCK_LOGS"
     *
     * `scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.`
     *
     * Hash: 0xEB47EC4E34FB7EE1 | Since: 323
     */
    function setScenarioTypeEnabled(scenarioType: string, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0D40EE2A7F2B2D6D | Since: 323
     */
    function resetScenarioTypesEnabled(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAA135F9482C82CC3 | Since: 323
     */
    function isPedActiveInScenario(ped: number | Ped): boolean;
    /**
     * Used only once (am_mp_property_int)
     *
     * ped was PLAYER_PED_ID()
     *
     * Related to CTaskAmbientClips.
     *
     * Hash: 0x621C6E4729388E41 | Since: 323
     */
    function isPedPlayingBaseClipInScenario(ped: number | Ped): boolean;
    /**
     * Appears only in fm_mission_controller and used only 3 times.
     *
     * ped was always PLAYER_PED_ID()
     * p1 was always true
     * p2 was always true
     *
     * Hash: 0x8FD89A6240813FD0 | Since: 323
     */
    function setPedCanPlayAmbientIdles(ped: number | Ped, blockIdleClips: boolean, removeIdleClipIfPlaying: boolean): void;
    /**
     * Despite its name, it only attacks ONE hated target. The one closest to the specified position.
     *
     * Hash: 0x4CF5F55DAC3280A0 | Since: 323
     */
    function combatHatedTargetsInArea(ped: number | Ped, pos: Vector3, radius: number, combatFlags: number): void;
    /**
     * Despite its name, it only attacks ONE hated target. The one closest hated target.
     *
     * p2 seems to be always 0
     *
     * Hash: 0x7BF835BB9E2698C8 | Since: 323
     */
    function combatHatedTargetsAroundPed(ped: number | Ped, radius: number, combatFlags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2BBA30B854534A0C | Since: 323
     */
    function combatHatedTargetsAroundPedTimed(ped: number | Ped, radius: number, time: number, combatFlags: number): void;
    /**
     * In every case of this native, I've only seen the first parameter passed as 0, although I believe it's a Ped after seeing tasks around it using 0. That's because it's used in a Sequence Task.
     *
     * The last 3 parameters are definitely coordinates after seeing them passed in other scripts, and even being used straight from the player's coordinates.
     * ---
     * It seems that - in the decompiled scripts - this native was used on a ped who was in a vehicle to throw a projectile out the window at the player. This is something any ped will naturally do if they have a throwable and they are doing driveby-combat (although not very accurately).
     * It is possible, however, that this is how SWAT throws smoke grenades at the player when in cover.
     * ----------------------------------------------------
     * The first comment is right it definately is the ped as if you look in script finale_heist2b.c line 59628 in Xbox Scripts atleast you will see task_throw_projectile and the first param is Local_559[2 <14>] if you look above it a little bit line 59622 give_weapon_to_ped uses the same exact param Local_559[2 <14>] and we all know the first param of that native is ped. So it guaranteed has to be ped. 0 just may mean to use your ped by default for some reason.
     *
     * Hash: 0x7285951DBF6B5A51 | Since: 323
     */
    function throwProjectile(ped: number | Ped, pos: Vector3, ignoreCollisionEntityIndex: number, createInvincibleProjectile: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA21C51255B205245 | Since: 323
     */
    function swapWeapon(ped: number | Ped, drawWeapon: boolean): void;
    /**
     * The 2nd param (drawWeapon) is not implemented.
     *
     * -----------------------------------------------------------------------
     *
     * The only occurrence I found in a R* script ("assassin_construction.ysc.c4"):
     *
     * `if (((v_3 < v_4) && (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), 0x6a67a5cc) != 1)) && (v_5 > v_3)) {`
     * `TASK::TASK_RELOAD_WEAPON(PLAYER::PLAYER_PED_ID(), 1);`
     * }
     *
     * Hash: 0x62D2916F56B9CD2D | Since: 323
     */
    function reloadWeapon(ped: number | Ped, drawWeapon: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2A74E1D5F2F00EEC | Since: 323
     */
    function isPedGettingUp(ped: number | Ped): boolean;
    /**
     * EX: Function.Call(Ped1, Ped2, Time, 0);
     *
     * The last parameter is always 0 for some reason I do not know. The first parameter is the pedestrian who will writhe to the pedestrian in the other parameter. The third paremeter is how long until the Writhe task ends. When the task ends, the ped will die. If set to -1, he will not die automatically, and the task will continue until something causes it to end. This can be being touched by an entity, being shot, explosion, going into ragdoll, having task cleared. Anything that ends the current task will kill the ped at this point.
     *
     *
     *
     * Third parameter does not appear to be time. The last parameter is not implemented (It's not used, regardless of value).
     *
     * Hash: 0xCDDC2B77CE54AC6E | Since: 323
     */
    function writhe(ped: number | Ped, target: number | Ped, minFireLoops: number, startState: number, forceShootOnGround: boolean, shootFromGroundTimer: number): void;
    /**
     * This native checks if a ped is on the ground, in pain from a (gunshot) wound.
     * Returns `true` if the ped is in writhe, `false` otherwise.
     *
     * Hash: 0xDEB6D52126E7D640 | Since: 323
     */
    function isPedInWrithe(ped: number | Ped): boolean;
    /**
     * patrolRoutes found in the b617d scripts:
     * "miss_Ass0",
     * "miss_Ass1",
     * "miss_Ass2",
     * "miss_Ass3",
     * "miss_Ass4",
     * "miss_Ass5",
     * "miss_Ass6",
     * "MISS_PATROL_6",
     * "MISS_PATROL_7",
     * "MISS_PATROL_8",
     * "MISS_PATROL_9",
     * "miss_Tower_01",
     * "miss_Tower_02",
     * "miss_Tower_03",
     * "miss_Tower_04",
     * "miss_Tower_05",
     * "miss_Tower_06",
     * "miss_Tower_07",
     * "miss_Tower_08",
     * "miss_Tower_10"
     *
     * Hash: 0xA36BFB5EE89F3D82 | Since: 323
     */
    function openPatrolRoute(patrolRoute: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xB043ECA801B8CBC1 | Since: 323
     */
    function closePatrolRoute(): void;
    /**
     * Example:
     * `TASK::ADD_PATROL_ROUTE_NODE(2, "WORLD_HUMAN_GUARD_STAND", -193.4915, -2378.864990234375, 10.9719, -193.4915, -2378.864990234375, 10.9719, 3000);`
     *
     * p0 is between 0 and 4 in the scripts.
     *
     * p1 is "WORLD_HUMAN_GUARD_STAND" or "StandGuard".
     *
     * p2, p3 and p4 is only one parameter sometimes in the scripts. Most likely a Vector3 hence p2, p3 and p4 are coordinates.
     * Examples:
     * `TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_739[7\/\*3\*\/], 0.0, 0.0, 0.0, 0);`
     *
     * `TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_B0[17\/\*44\*\/]._f3, l_B0[17\/\*44\*\/]._f3, 2000);`
     *
     * p5, p6 and p7 are for example set to: 1599.0406494140625, 2713.392578125, 44.4309.
     *
     * `p8 is an int, often random set to for example: MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000).`
     *
     * Hash: 0x8EDF950167586B7C | Since: 323
     */
    function addPatrolRouteNode(nodeId: number, nodeType: string, pos: Vector3, headingX: number, headingY: number, headingZ: number, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x23083260DEC3A551 | Since: 323
     */
    function addPatrolRouteLink(nodeId1: number, nodeId2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAF8A443CCC8018DC | Since: 323
     */
    function createPatrolRoute(): void;
    /**
     * From the b617d scripts:
     *
     * `TASK::DELETE_PATROL_ROUTE("miss_merc0");`
     * `TASK::DELETE_PATROL_ROUTE("miss_merc1");`
     * `TASK::DELETE_PATROL_ROUTE("miss_merc2");`
     * `TASK::DELETE_PATROL_ROUTE("miss_dock");`
     *
     * Hash: 0x7767DD9D65E91319 | Since: 323
     */
    function deletePatrolRoute(patrolRoute: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x52F734CEBE20DFBA | Since: 2545
     */
    function getPatrolInfo(ped: number | Ped): [boolean, number, number];
    /**
     * After looking at some scripts the second parameter seems to be an id of some kind. Here are some I found from some R* scripts:
     *
     * "miss_Tower_01" (this went from 01 - 10)
     * "miss_Ass0" (0, 4, 6, 3)
     * "MISS_PATROL_8"
     *
     * I think they're patrol routes, but I'm not sure. And I believe the 3rd parameter is a BOOL, but I can't confirm other than only seeing 0 and 1 being passed.
     *
     *
     * As far as I can see the patrol routes names such as "miss_Ass0" have been defined earlier in the scripts. This leads me to believe we can defined our own new patrol routes by following the same approach.
     * From the scripts
     *
     * `TASK::OPEN_PATROL_ROUTE("miss_Ass0");`
     * `TASK::ADD_PATROL_ROUTE_NODE(0, "WORLD_HUMAN_GUARD_STAND", l_738[0\/\*3\*\/], -139.4076690673828, -993.4732055664062, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));`
     * `TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_738[1\/\*3\*\/], -116.1391830444336, -987.4984130859375, 26.38541030883789, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));`
     * `TASK::ADD_PATROL_ROUTE_NODE(2, "WORLD_HUMAN_GUARD_STAND", l_738[2\/\*3\*\/], -128.46847534179688, -979.0340576171875, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));`
     * `TASK::ADD_PATROL_ROUTE_LINK(0, 1);`
     * `TASK::ADD_PATROL_ROUTE_LINK(1, 2);`
     * `TASK::ADD_PATROL_ROUTE_LINK(2, 0);`
     * `TASK::CLOSE_PATROL_ROUTE();`
     * `TASK::CREATE_PATROL_ROUTE();`
     *
     *
     *
     * Hash: 0xBDA5DF49D080FE4E | Since: 323
     */
    function patrol(ped: number | Ped, patrolRouteName: string, alertState: number, canChatToPeds: boolean, useHeadLookAt: boolean): void;
    /**
     * Makes the ped run to take cover
     *
     * Hash: 0xE5DA8615A6180789 | Since: 323
     */
    function stayInCover(ped: number | Ped): void;
    /**
     * x, y, z: offset in world coords from some entity.
     *
     * Hash: 0x5CF0D8F9BBA0DD75 | Since: 323
     */
    function addVehicleSubAttackCoord(ped: number | Ped, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x85F462BADC7DA47F | Since: 323
     */
    function addVehicleSubAttackPed(ped: number | Ped, target: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x10AB107B887214D8 | Since: 323
     */
    function vehicleShootAtPed(ped: number | Ped, target: number | Ped, fireTolerance: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE41885592B08B097 | Since: 323
     */
    function vehicleAimAtPed(ped: number | Ped, target: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x5190796ED39C9B6D | Since: 323
     */
    function vehicleShootAtCoord(ped: number | Ped, pos: Vector3, fireTolerance: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x447C1E9EF844BC0F | Since: 323
     */
    function vehicleAimAtCoord(ped: number | Ped, pos: Vector3): void;
    /**
     * Differs from TASK_VEHICLE_DRIVE_TO_COORDS in that it will pick the shortest possible road route without taking one-way streets and other "road laws" into consideration.
     *
     * WARNING:
     * A behaviorFlag value of 0 will result in a clunky, stupid driver!
     *
     * Recommended settings:
     * speed = 30.0f,
     * behaviorFlag = 156,
     * stoppingRange = 5.0f;
     *
     * If you simply want to have your driver move to a fixed location, call it only once, or, when necessary in the event of interruption.
     *
     * If using this to continually follow a Ped who is on foot:  You will need to run this in a tick loop.  Call it in with the Ped's updated coordinates every 20 ticks or so and you will have one hell of a smart, fast-reacting NPC driver -- provided he doesn't get stuck.  If your update frequency is too fast, the Ped may not have enough time to figure his way out of being stuck, and thus, remain stuck.  One way around this would be to implement an "anti-stuck" mechanism, which allows the driver to realize he's stuck, temporarily pause the tick, unstuck, then resume the tick.
     *
     * EDIT:  This is being discussed in more detail at http://gtaforums.com/topic/818504-any-idea-on-how-to-make-peds-clever-and-insanely-fast-c/
     *
     * Hash: 0x195AEEB13CEFE2EE | Since: 323
     */
    function vehicleGotoNavmesh(ped: number | Ped, vehicle: number | Vehicle, pos: Vector3, speed: number, behaviorFlag: number, stoppingRange: number): void;
    /**
     * movement_speed: mostly 2f, but also 1/1.2f, etc.
     * p8: always false
     * p9: 2f
     * p10: 0.5f
     * p11: true
     * p12: 0 / 512 / 513, etc.
     * p13: 0
     * firing_pattern: ${firing_pattern_full_auto}, 0xC6EE6B4C
     *
     * Hash: 0x11315AB3385B8AC0 | Since: 323
     */
    function goToCoordWhileAimingAtCoord(ped: number | Ped, pos: Vector3, aimAtX: number, aimAtY: number, aimAtZ: number, moveBlendRatio: number, shoot: boolean, targetRadius: number, slowDistance: number, useNavMesh: boolean, navFlags: number, instantBlendToAim: boolean, firingPattern: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0xB2A16444EAD9AE47 | Since: 323
     */
    function goToCoordWhileAimingAtEntity(ped: number | Ped, pos: Vector3, aimAtID: number | Entity, moveBlendRatio: number, shoot: boolean, targetRadius: number, slowDistance: number, useNavMesh: boolean, navFlags: number, instantBlendToAim: boolean, firingPattern: number | string, time: number): void;
    /**
     * The ped will walk or run towards goToLocation, aiming towards goToLocation or focusLocation (depending on the aimingFlag) and shooting if shootAtEnemies = true to any enemy in his path.
     *
     * If the ped is closer than noRoadsDistance, the ped will ignore pathing/navmesh and go towards goToLocation directly. This could cause the ped to get stuck behind tall walls if the goToLocation is on the other side. To avoid this, use 0.0f and the ped will always use pathing/navmesh to reach his destination.
     *
     * If the speed is set to 0.0f, the ped will just stand there while aiming, if set to 1.0f he will walk while aiming, 2.0f will run while aiming.
     *
     * The ped will stop aiming when he is closer than distanceToStopAt to goToLocation.
     *
     * I still can't figure out what unkTrue is used for. I don't notice any difference if I set it to false but in the decompiled scripts is always true.
     *
     * I think that unkFlag, like the driving styles, could be a flag that "work as a list of 32 bits converted to a decimal integer. Each bit acts as a flag, and enables or disables a function". What leads me to this conclusion is the fact that in the decompiled scripts, unkFlag takes values like: 0, 1, 5 (101 in binary) and 4097 (4096 + 1 or 1000000000001 in binary). For now, I don't know what behavior enable or disable this possible flag so I leave it at 0.
     *
     * Note: After some testing, using unkFlag = 16 (0x10) enables the use of sidewalks while moving towards goToLocation.
     *
     * The aimingFlag takes 2 values: 0 to aim at the focusLocation, 1 to aim at where the ped is heading (goToLocation).
     *
     * Example:
     *
     * enum AimFlag
     * {
     * AimAtFocusLocation,
     * AimAtGoToLocation
     * };
     *
     * Vector3 goToLocation1 = { 996.2867f, 0, -2143.044f, 0, 28.4763f, 0 }; // remember the padding.
     *
     * Vector3 goToLocation2 = { 990.2867f, 0, -2140.044f, 0, 28.4763f, 0 }; // remember the padding.
     *
     * Vector3 focusLocation = { 994.3478f, 0, -2136.118f, 0, 29.2463f, 0 }; // the coord z should be a little higher, around +1.0f to avoid aiming at the ground
     *
     * // 1st example
     * `TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation1.x, goToLocation1.y, goToLocation1.z, focusLocation.x, focusLocation.y, focusLocation.z, 2.0f \/\*run\*\/, true \/\*shoot\*\/, 3.0f \/\*stop at\*\/, 0.0f \/\*noRoadsDistance\*\/, true \/\*always true\*\/, 0 \/\*possible flag\*\/, AimFlag::AimAtGoToLocation, -957453492 \/\*FullAuto pattern\*\/);`
     *
     * // 2nd example
     * `TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation2.x, goToLocation2.y, goToLocation2.z, focusLocation.x, focusLocation.y, focusLocation.z, 1.0f \/\*walk\*\/, false \/\*don't shoot\*\/, 3.0f \/\*stop at\*\/, 0.0f \/\*noRoadsDistance\*\/, true \/\*always true\*\/, 0 \/\*possible flag\*\/, AimFlag::AimAtFocusLocation, -957453492 \/\*FullAuto pattern\*\/);`
     *
     *
     * 1st example: The ped (pedhandle) will run towards goToLocation1. While running and aiming towards goToLocation1, the ped will shoot on sight to any enemy in his path, using "FullAuto" firing pattern. The ped will stop once he is closer than distanceToStopAt to goToLocation1.
     *
     * 2nd example: The ped will walk towards goToLocation2. This time, while walking towards goToLocation2 and aiming at focusLocation, the ped will point his weapon on sight to any enemy in his path without shooting. The ped will stop once he is closer than distanceToStopAt to goToLocation2.
     *
     * Hash: 0xA55547801EB331FC | Since: 323
     */
    function goToCoordAndAimAtHatedEntitiesNearCoord(pedHandle: number | Ped, goToLocationX: number, goToLocationY: number, goToLocationZ: number, focusLocationX: number, focusLocationY: number, focusLocationZ: number, speed: number, shootAtEnemies: boolean, distanceToStopAt: number, noRoadsDistance: number, useNavMesh: boolean, navFlags: number, taskFlags: number, firingPattern: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x04701832B739DCE5 | Since: 323
     */
    function goToEntityWhileAimingAtCoord(ped: number | Ped, entity: number | Entity, aimX: number, aimY: number, aimZ: number, moveBlendRatio: number, shoot: boolean, targetRadius: number, slowDistance: number, useNavMesh: boolean, instantBlendToAim: boolean, firingPattern: number | string): void;
    /**
     * shootatEntity:
     * If true, peds will shoot at Entity till it is dead.
     * If false, peds will just walk till they reach the entity and will cease shooting.
     *
     * Hash: 0x97465886D35210E9 | Since: 323
     */
    function goToEntityWhileAimingAtEntity(ped: number | Ped, entityToWalkTo: number | Entity, entityToAimAt: number | Entity, speed: number, shootatEntity: boolean, targetRadius: number, slowDistance: number, useNavMesh: boolean, instantBlendToAim: boolean, firingPattern: number | string): void;
    /**
     * Makes the ped ragdoll like when falling from a great height
     *
     * Hash: 0x8C825BDC7741D37C | Since: 323
     */
    function setHighFall(ped: number | Ped, minTime: number, maxTime: number, entryType: number): void;
    /**
     * Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
     * For a full list of the points, see here: goo.gl/wIH0vn
     *
     * Max number of loaded recordings is 32.
     *
     * Hash: 0x9EEFB62EB27B5792 | Since: 323
     */
    function requestWaypointRecording(name: string): void;
    /**
     * Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
     *
     * Hash: 0xCB4E8BE8A0063C5D | Since: 323
     */
    function getIsWaypointRecordingLoaded(name: string): boolean;
    /**
     * Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
     *
     * Hash: 0xFF1B8B4AA1C25DC8 | Since: 323
     */
    function removeWaypointRecording(name: string): void;
    /**
     * Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
     * For a full list of the points, see here: goo.gl/wIH0vn
     *
     * Hash: 0x5343532C01A07234 | Since: 323
     */
    function waypointRecordingGetNumPoints(name: string): [boolean, number];
    /**
     * Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
     * For a full list of the points, see here: goo.gl/wIH0vn
     *
     * Hash: 0x2FB897405C90B361 | Since: 323
     */
    function waypointRecordingGetCoord(name: string, point: number): [boolean, Vector3];
    /**
     * Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
     *
     * Hash: 0x005622AEBC33ACA9 | Since: 323
     */
    function waypointRecordingGetSpeedAtPoint(name: string, point: number): number;
    /**
     * Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
     * For a full list of the points, see here: goo.gl/wIH0vn
     *
     * Hash: 0xB629A298081F876F | Since: 323
     */
    function waypointRecordingGetClosestWaypoint(name: string, pos: Vector3): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x0759591819534F7B | Since: 323
     */
    function followWaypointRecording(ped: number | Ped, name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xE03B3F2D3DC59B64 | Since: 323
     */
    function isWaypointPlaybackGoingOnForPed(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2720AAA75001E094 | Since: 323
     */
    function getPedWaypointProgress(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x686ECCD99D4E61BB | Since: 3570
     */
    function setPedWaypointProgress(ped: number | Ped, progress: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE6A877C64CAF1BC5 | Since: 323
     */
    function getPedWaypointDistance(): number;
    /**
     * No comment provided
     *
     * Hash: 0xED98E10B0AFCE4B4 | Since: 323
     */
    function setPedWaypointRouteOffset(ped: number | Ped, pos: Vector3): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA5B769058763E497 | Since: 323
     */
    function getWaypointDistanceAlongRoute(name: string, point: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x701375A7D43F01CB | Since: 323
     */
    function waypointPlaybackGetIsPaused(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0F342546AA06FED5 | Since: 323
     */
    function waypointPlaybackPause(): void;
    /**
     * No comment provided
     *
     * Hash: 0x244F70C84C547D2D | Since: 323
     */
    function waypointPlaybackResume(): void;
    /**
     * No comment provided
     *
     * Hash: 0x7D7D2B47FA788E85 | Since: 323
     */
    function waypointPlaybackOverrideSpeed(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6599D834B12D0800 | Since: 323
     */
    function waypointPlaybackUseDefaultSpeed(): void;
    /**
     * No comment provided
     *
     * Hash: 0x5A353B8E6B1095B5 | Since: 323
     */
    function useWaypointRecordingAsAssistedMovementRoute(name: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x20E330937C399D29 | Since: 323
     */
    function waypointPlaybackStartAimingAtPed(ped: number | Ped, target: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x8968400D900ED8B3 | Since: 323
     */
    function waypointPlaybackStartAimingAtCoord(ped: number | Ped, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xE70BA7B90F8390DC | Since: 323
     */
    function waypointPlaybackStartShootingAtPed(ped: number | Ped, ped2: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x057A25CFCC9DB671 | Since: 323
     */
    function waypointPlaybackStartShootingAtCoord(ped: number | Ped, pos: Vector3, firingPattern: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x47EFA040EBB8E2EA | Since: 323
     */
    function waypointPlaybackStopAimingOrShooting(ped: number | Ped): void;
    /**
     * Routes: "1_FIBStairs", "2_FIBStairs", "3_FIBStairs", "4_FIBStairs", "5_FIBStairs", "5_TowardsFire", "6a_FIBStairs", "7_FIBStairs", "8_FIBStairs", "Aprtmnt_1", "AssAfterLift", "ATM_1", "coroner2", "coroner_stairs", "f5_jimmy1", "fame1", "family5b", "family5c", "Family5d", "family5d", "FIB_Glass1", "FIB_Glass2", "FIB_Glass3", "finaBroute1A", "finalb1st", "finalB1sta", "finalbround", "finalbroute2", "Hairdresser1", "jan_foyet_ft_door", "Jo_3", "Lemar1", "Lemar2", "mansion_1", "Mansion_1", "pols_1", "pols_2", "pols_3", "pols_4", "pols_5", "pols_6", "pols_7", "pols_8", "Pro_S1", "Pro_S1a", "Pro_S2", "Towards_case", "trev_steps", "tunrs1", "tunrs2", "tunrs3", "Wave01457s"
     *
     * Hash: 0x817268968605947A | Since: 323
     */
    function assistedMovementRequestRoute(route: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x3548536485DD792B | Since: 323
     */
    function assistedMovementRemoveRoute(route: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x60F9A4393A21F741 | Since: 323
     */
    function assistedMovementIsRouteLoaded(route: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD5002D78B7162E1B | Since: 323
     */
    function assistedMovementSetRouteProperties(route: string, props: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x13945951E16EF912 | Since: 323
     */
    function assistedMovementOverrideLoadDistanceThisFrame(dist: number): void;
    /**
     *
     *
     * p2 = Waypoint recording string (found in update\update.rpf\x64\levels\gta5\waypointrec.rpf
     * p3 = 786468
     * p4 = 0
     * p5 = 16
     * p6 = -1 (angle?)
     * p7/8/9 = usually v3.zero
     * p10 = bool (repeat?)
     * p11 = 1073741824
     *
     * Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
     *
     * Hash: 0x3123FAA6DB1CF7ED | Since: 323
     */
    function vehicleFollowWaypointRecording(ped: number | Ped, vehicle: number | Vehicle, WPRecording: string): void;
    /**
     * No comment provided
     *
     * Hash: 0xF5134943EA29868C | Since: 323
     */
    function isWaypointPlaybackGoingOnForVehicle(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x9824CFF8FC66E159 | Since: 323
     */
    function getVehicleWaypointProgress(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x416B62AC8B9E5BBD | Since: 323
     */
    function getVehicleWaypointTargetPoint(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x8A4E6AC373666BC5 | Since: 323
     */
    function vehicleWaypointPlaybackPause(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xE435D3539EFDCD1B | Since: 3570
     */
    function vehicleWaypointPlaybackGetIsPaused(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDC04FCAA7839D492 | Since: 323
     */
    function vehicleWaypointPlaybackResume(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x5CEB25A7D2848963 | Since: 323
     */
    function vehicleWaypointPlaybackUseDefaultSpeed(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x121F0593E0A431D7 | Since: 323
     */
    function vehicleWaypointPlaybackOverrideSpeed(vehicle: number | Vehicle, speed: number): void;
    /**
     * I cant believe I have to define this, this is one of the best natives.
     *
     * It makes the ped ignore basically all shocking events around it. Occasionally the ped may comment or gesture, but other than that they just continue their daily activities. This includes shooting and wounding the ped. And - most importantly - they do not flee.
     *
     * Since it is a task, every time the native is called the ped will stop for a moment.
     *
     * Hash: 0x90D2156198831D69 | Since: 323
     */
    function setBlockingOfNonTemporaryEvents(ped: number | Ped, toggle: boolean): void;
    /**
     * p2 always false
     *
     * [30/03/2017] ins1de :
     *
     * See FORCE_PED_MOTION_STATE
     *
     * Hash: 0x4F056E1AFFEF17AB | Since: 323
     */
    function forceMotionState(ped: number | Ped, state: number | string, forceRestart: boolean): void;
    /**
     * Example:
     * `TASK::TASK_MOVE_NETWORK_BY_NAME(PLAYER::PLAYER_PED_ID(), "arm_wrestling_sweep_paired_a_rev3", 0.0f, true, "mini@arm_wrestling", 0);`
     *
     * Hash: 0x2D537BA194896636 | Since: 323
     */
    function moveNetworkByName(ped: number | Ped, task: string, multiplier: number, allowOverrideCloneUpdate: boolean, animDict: string, flags: number): void;
    /**
     * Example:
     * `TASK::TASK_MOVE_NETWORK_ADVANCED_BY_NAME(PLAYER::PLAYER_PED_ID(), "minigame_tattoo_michael_parts", 324.13f, 181.29f, 102.6f, 0.0f, 0.0f, 22.32f, 2, 0, false, 0, 0);`
     *
     * Hash: 0xD5B35BEA41919ACB | Since: 323
     */
    function moveNetworkAdvancedByName(ped: number | Ped, network: string, pos: Vector3, rot: Vector3, rotOrder: number, blendDuration: number, allowOverrideCloneUpdate: boolean, animDict: string, flags: number): void;
    /**
     * Used only once in the scripts (am_mp_nightclub)
     *
     * Hash: 0x3D45B0B355C5E0C9 | Since: 1493
     */
    function moveNetworkByNameWithInitParams(ped: number | Ped, network: string, blendDuration: number, allowOverrideCloneUpdate: boolean, animDict: string, flags: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x29682E2CCF21E9B5 | Since: 1868
     */
    function moveNetworkAdvancedByNameWithInitParams(ped: number | Ped, network: string, pos: Vector3, rot: Vector3, rotOrder: number, blendDuration: number, allowOverrideCloneUpdate: boolean, dictionary: string, flags: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x921CE12C489C4C41 | Since: 323
     */
    function isMoveNetworkActive(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x30ED88D5E0C56A37 | Since: 323
     */
    function isMoveNetworkReadyForTransition(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD01015C7316AE176 | Since: 323
     */
    function requestMoveNetworkStateTransition(ped: number | Ped, name: string): boolean;
    /**
     * Used only once in the scripts (fm_mission_controller) like so:
     *
     * `TASK::SET_EXPECTED_CLONE_NEXT_TASK_MOVE_NETWORK_STATE(iLocal_3160, "Cutting");`
     *
     * Hash: 0xAB13A5565480B6D9 | Since: 323
     */
    function setExpectedCloneNextMoveNetworkState(ped: number | Ped, state: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x717E4D1F2048376D | Since: 323
     */
    function getMoveNetworkState(ped: number | Ped): string;
    /**
     * No comment provided
     *
     * Hash: 0x8423541E8B3A1589 | Since: 1493
     */
    function setMoveNetworkAnimSet(ped: number | Ped, clipSet: number | string, variableClipSet: number | string): void;
    /**
     * signalName - "Phase", "Wobble", "x_axis","y_axis","introphase","speed".
     * p2 - From what i can see it goes up to 1f (maybe).
     *
     * `Example: TASK::SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT(PLAYER::PLAYER_PED_ID(), "Phase", 0.5);`
     *
     * Hash: 0xD5BB4025AE449A4E | Since: 323
     */
    function setMoveNetworkSignalFloat(ped: number | Ped, signalName: string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x373EF409B82697A3 | Since: 1493
     */
    function setMoveNetworkSignalLocalFloat(ped: number | Ped, signalName: string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8634CEF2522D987B | Since: 1493
     */
    function setMoveNetworkSignalFloatLerpRate(ped: number | Ped, signalName: string, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB0A6CFD2C69C1088 | Since: 323
     */
    function setMoveNetworkSignalBool(ped: number | Ped, signalName: string, value: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x44AB0B3AFECCE242 | Since: 1493
     */
    function getMoveNetworkSignalFloat(ped: number | Ped, signalName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0xA7FFBA498E4AAF67 | Since: 323
     */
    function getMoveNetworkSignalBool(ped: number | Ped, signalName: string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB4F47213DF45A64C | Since: 323
     */
    function getMoveNetworkEvent(ped: number | Ped, eventName: string): boolean;
    /**
     * Doesn't actually return anything.
     *
     * Hash: 0x0FFB3C758E8C07B9 | Since: 2060
     */
    function setMoveNetworkEnableCollisionOnNetworkCloneWhenFixed(ped: number | Ped, enable: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x32F6EEF031F943DC | Since: 3095
     */
    function setScriptEnableCollisionOnNetworkCloneWhenFixed(ped: number | Ped, enable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0EFE4834A2F40563 | Since: 3570
     */
    function setAmbientPedEnableCollisionOnNetworkCloneWhenFixed(ped: number | Ped, enable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x349CE7B56DAFD95C | Since: 323
     */
    function isMoveBlendRatioStill(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF133BBBE91E1691F | Since: 323
     */
    function isMoveBlendRatioWalking(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD4D8636C0199A939 | Since: 323
     */
    function isMoveBlendRatioRunning(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x24A2AD74FA9814E2 | Since: 323
     */
    function isMoveBlendRatioSprinting(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAC29253EEF8F0180 | Since: 323
     */
    function isPedStill(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDE4C184B2B9B071A | Since: 323
     */
    function isPedWalking(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC5286FFC176F28A2 | Since: 323
     */
    function isPedRunning(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x57E457CD2C0FC168 | Since: 323
     */
    function isPedSprinting(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE45B7F222DE47E09 | Since: 323
     */
    function isPedStrafing(ped: number | Ped): boolean;
    /**
     * `TASK::TASK_SYNCHRONIZED_SCENE(ped, scene, "creatures@rottweiler@in_vehicle@std_car", "get_in", 1000.0, -8.0, 4, 0, 0x447a0000, 0);`
     *
     * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
     *
     * Hash: 0xEEA929141F699854 | Since: 323
     */
    function synchronizedScene(ped: number | Ped, scene: number, animDictionary: string, animationName: string, blendIn: number, blendOut: number, flags: number, ragdollBlockingFlags: number, moverBlendDelta: number, ikFlags: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x19D1B791CB3670FE | Since: 877
     */
    function agitatedActionConfrontResponse(ped: number | Ped, ped2: number | Ped): void;
    /**
     * This function is called on peds in vehicles.
     *
     * anim: animation name
     * p2, p3, p4: "sweep_low", "sweep_med" or "sweep_high"
     * p5: no idea what it does but is usually -1
     *
     * Hash: 0x2047C02158D6405A | Since: 323
     */
    function sweepAimEntity(ped: number | Ped, animDict: string, lowAnimName: string, medAnimName: string, hiAnimName: string, runtime: number, targetEntity: number | Entity, turnRate: number, blendInDuration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE4973DBDBE6E44B3 | Since: 323
     */
    function updateSweepAimEntity(ped: number | Ped, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x7AFE8FDC10BC07D2 | Since: 323
     */
    function sweepAimPosition(ped: number | Ped, animDict: string, lowAnimName: string, medAnimName: string, hiAnimName: string, runtime: number, pos: Vector3, turnRate: number, blendInDuration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBB106883F5201FC4 | Since: 323
     */
    function updateSweepAimPosition(ped: number | Ped, pos: Vector3): void;
    /**
     * Example from "me_amanda1.ysc.c4":
     * `TASK::TASK_ARREST_PED(l_19F \/\* This is a Ped \*\/ , PLAYER::PLAYER_PED_ID());`
     *
     * Example from "armenian1.ysc.c4":
     * `if (!PED::IS_PED_INJURED(l_B18[0\/\*1\*\/])) {`
     * `TASK::TASK_ARREST_PED(l_B18[0\/\*1\*\/], PLAYER::PLAYER_PED_ID());`
     * }
     *
     * I would love to have time to experiment to see if a player Ped can arrest another Ped. Might make for a good cop mod.
     *
     *
     * Looks like only the player can be arrested this way. Peds react and try to arrest you if you task them, but the player charater doesn't do anything if tasked to arrest another ped.
     *
     * Hash: 0xF3B9A78A178572B1 | Since: 323
     */
    function arrestPed(ped: number | Ped, target: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x3DC52677769B4AE0 | Since: 323
     */
    function isPedRunningArrest(ped: number | Ped): boolean;
    /**
     * This function is hard-coded to always return 0.
     *
     * Hash: 0x90A09F3A45FED688 | Since: 323
     */
    function isPedBeingArrested(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x67406F2C8F87FC4F | Since: 323
     */
    function uncuffPed(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0x74E559B3BC910685 | Since: 323
     */
    function isPedCuffed(ped: number | Ped): boolean;
}
export declare namespace vehicle {
    /**
     * p7 when set to true allows you to spawn vehicles under -100 z.
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0xAF35D0D2583051B0 | Since: 323
     */
    function create(modelHash: number | string, pos: Vector3, heading: number, isNetwork: boolean, bScriptHostVeh: boolean): number;
    /**
     * Deletes a vehicle.
     * The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
     *
     * eg how to use:
     * SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
     * DELETE_VEHICLE(&vehicle);
     *
     * Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.
     *
     * Hash: 0xEA386986E786A54F | Since: 323
     */
    function deleteVehicle(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x7D6F9A3EF26136A0 | Since: 323
     */
    function setAllowHomingMissleLockon(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1DDA078D12879EEE | Since: 463
     */
    function setAllowHomingMissleLockonSynced(vehicle: number | Vehicle, canBeLockedOn: boolean): void;
    /**
     * Makes the vehicle accept no passengers.
     *
     * Hash: 0x5D14D4154BFE7B2C | Since: 323
     */
    function setAllowNoPassengersLockon(veh: number | Vehicle, toggle: boolean): void;
    /**
     * Returns a value depending on the lock-on state of vehicle weapons.
     * 0: not locked on
     * 1: locking on
     * 2: locked on
     *
     * Hash: 0xE6B0E8CFC3633BF0 | Since: 323
     */
    function getHomingLockonState(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x6EAAEFC76ACC311F | Since: 757
     */
    function getHomingLockedontoState(): number;
    /**
     * No comment provided
     *
     * Hash: 0x407DC5E97DB1A4D3 | Since: 1493
     */
    function setHomingLockedontoState(): void;
    /**
     * No comment provided
     *
     * Hash: 0x423E8DE37D934D89 | Since: 323
     */
    function isModel(vehicle: number | Vehicle, model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF6086BC836400876 | Since: 323
     */
    function doesScriptGeneratorExist(vehicleGenerator: number): boolean;
    /**
     * Creates a script vehicle generator at the given coordinates. Most parameters after the model hash are unknown.
     *
     * Parameters:
     * x/y/z - Generator position
     * heading - Generator heading
     * p4 - Unknown (always 5.0)
     * p5 - Unknown (always 3.0)
     * modelHash - Vehicle model hash
     * p7/8/9/10 - Unknown (always -1)
     * p11 - Unknown (usually TRUE, only one instance of FALSE)
     * p12/13 - Unknown (always FALSE)
     * p14 - Unknown (usally FALSE, only two instances of TRUE)
     * p15 - Unknown (always TRUE)
     * p16 - Unknown (always -1)
     *
     * Vector3 coords = GET_ENTITY_COORDS(PLAYER_PED_ID(), 0);    CREATE_SCRIPT_VEHICLE_GENERATOR(coords.x, coords.y, coords.z, 1.0f, 5.0f, 3.0f, GET_HASH_KEY("adder"), -1. -1, -1, -1, -1, true, false, false, false, true, -1);
     *
     * Hash: 0x9DEF883114668116 | Since: 323
     */
    function createScriptGenerator(pos: Vector3, heading: number, modelHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x22102C9ABFCF125D | Since: 323
     */
    function deleteScriptGenerator(vehicleGenerator: number): void;
    /**
     * Only called once in the decompiled scripts. Presumably activates the specified generator.
     *
     * Hash: 0xD9D620E0AC6DC4B0 | Since: 323
     */
    function setScriptGenerator(vehicleGenerator: number, enabled: boolean): void;
    /**
     * When p6 is true, vehicle generators are active.
     * p7 seems to always be true in story mode scripts, but it's sometimes false in online scripts.
     *
     * Hash: 0xC12321827687FE4D | Since: 323
     */
    function setAllGeneratorsActiveInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x34AD89078831A4BC | Since: 323
     */
    function setAllGeneratorsActive(): void;
    /**
     * No comment provided
     *
     * Hash: 0x608207E7A8FB787C | Since: 323
     */
    function setAllLowPriorityGeneratorsActive(active: boolean): void;
    /**
     * Related to car generators & CPlayerSwitchMgrLong
     *
     * Hash: 0x9A75585FB2E54FAD | Since: 323
     */
    function setGeneratorAreaOfInterest(pos: Vector3, radius: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A436B8643716D14 | Since: 323
     */
    function clearGeneratorAreaOfInterest(): void;
    /**
     * Sets a vehicle on the ground on all wheels.  Returns whether or not the operation was successful.
     *
     * sfink: This has an additional param(Vehicle vehicle, float p1) which is always set to 5.0f in the b944 scripts.
     *
     * Hash: 0x49733E92263139D1 | Since: 323
     */
    function setOnGroundProperly(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE023E8AC4EF7C117 | Since: 323
     */
    function setUseCutsceneWheelCompression(p0: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB497F06B288DCFDF | Since: 323
     */
    function isStuckOnRoof(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB72E26D81006005B | Since: 323
     */
    function addUpsidedownCheck(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xC53EB42A499A7E90 | Since: 323
     */
    function removeUpsidedownCheck(vehicle: number | Vehicle): void;
    /**
     * Returns true if the vehicle's current speed is less than, or equal to 0.0025f.
     *
     * For some vehicles it returns true if the current speed is <= 0.00039999999.
     *
     * Hash: 0x5721B434AD84D57A | Since: 323
     */
    function isStopped(vehicle: number | Vehicle): boolean;
    /**
     * Gets the number of passengers.
     *
     * This native was modified in b2545 to take two additional parameters, allowing you to include the driver or exclude dead passengers.
     *
     * To keep it working like before b2545, set includeDriver to false and includeDeadOccupants to true.
     *
     * Hash: 0x24CB2137731FFE89 | Since: 323
     */
    function getNumberOfPassengers(vehicle: number | Vehicle, includeDriver: boolean, includeDeadOccupants: boolean): number;
    /**
     * No comment provided
     *
     * Hash: 0xA7C4F2C6E744A550 | Since: 323
     */
    function getMaxNumberOfPassengers(vehicle: number | Vehicle): number;
    /**
     * Returns max number of passengers (including the driver) for the specified vehicle model.
     *
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0x2AD93716F184EDA4 | Since: 323
     */
    function getModelNumberOfSeats(modelHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xF7F203E31F96F6A1 | Since: 323
     */
    function isSeatWarpOnly(vehicle: number | Vehicle, seatIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE33FFA906CE74880 | Since: 323
     */
    function isTurretSeat(vehicle: number | Vehicle, seatIndex: number): boolean;
    /**
     * Returns true if the vehicle has the FLAG_ALLOWS_RAPPEL flag set.
     *
     * Hash: 0x4E417C547182C84D | Since: 757
     */
    function doesAllowRappel(vehicle: number | Vehicle): boolean;
    /**
     * Use this native inside a looped function.
     * Values:
     * - `0.0` = no vehicles on streets
     * - `1.0` = normal vehicles on streets
     *
     * Hash: 0x245A6883D966D537 | Since: 323
     */
    function setDensityMultiplierThisFrame(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB3B3359379FE77D3 | Since: 323
     */
    function setRandomDensityMultiplierThisFrame(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xEAE6DCC7EEE3DB1D | Since: 323
     */
    function setParkedDensityMultiplierThisFrame(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD4B8E3D1917BC86B | Since: 323
     */
    function setDisableRandomTrainsThisFrame(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x90B6DA738A9A25DA | Since: 323
     */
    function setAmbientRangeMultiplierThisFrame(value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x26324F33423F3CC3 | Since: 323
     */
    function setFarDraws(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xCAA15F13EBD417FF | Since: 323
     */
    function setNumberOfParkeds(value: number): void;
    /**
     * enum eVehicleLockState
     * {
     * VEHICLELOCK_NONE,
     * VEHICLELOCK_UNLOCKED,
     * VEHICLELOCK_LOCKED,
     * VEHICLELOCK_LOCKOUT_PLAYER_ONLY,
     * VEHICLELOCK_LOCKED_PLAYER_INSIDE,
     * VEHICLELOCK_LOCKED_INITIALLY,
     * VEHICLELOCK_FORCE_SHUT_DOORS,
     * VEHICLELOCK_LOCKED_BUT_CAN_BE_DAMAGED,
     * VEHICLELOCK_LOCKED_BUT_BOOT_UNLOCKED,
     * VEHICLELOCK_LOCKED_NO_PASSENGERS,
     * VEHICLELOCK_CANNOT_ENTER
     * };
     *
     * Hash: 0xB664292EAECF7FA6 | Since: 323
     */
    function setDoorsLocked(vehicle: number | Vehicle, doorLockStatus: number): void;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0xBE70724027F85BCD | Since: 323
     */
    function setIndividualDoorsLocked(vehicle: number | Vehicle, doorId: number, doorLockStatus: number): void;
    /**
     * If set to true, prevents vehicle sirens from having sound, leaving only the lights.
     *
     * Hash: 0xD8050E0EB60CF274 | Since: 323
     */
    function setHasMutedSirens(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x517AAF684BB50CD1 | Since: 323
     */
    function setDoorsLockedForPlayer(vehicle: number | Vehicle, player: number | string | Player, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF6AF6CB341349015 | Since: 323
     */
    function getDoorsLockedForPlayer(vehicle: number | Vehicle, player: number | string | Player): boolean;
    /**
     * After some analysis, I've decided that these are what the parameters are.
     *
     * We can see this being used in R* scripts such as "am_mp_property_int.ysc.c4":
     * `l_11A1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 1);`
     * ...
     * `VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(l_11A1, 1);`
     *
     * Hash: 0xA2F80B8D040727CC | Since: 323
     */
    function setDoorsLockedForAllPlayers(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9737A37136F07E75 | Since: 323
     */
    function setDoorsLockedForNonScriptPlayers(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB81F6D4A8F5EEBA8 | Since: 323
     */
    function setDoorsLockedForTeam(vehicle: number | Vehicle, team: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x203B527D1B77904C | Since: 1365
     */
    function setDoorsLockedForAllTeams(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x76D26A22750E849E | Since: 1103
     */
    function setDontTerminateTaskWhenAchieved(vehicle: number | Vehicle): void;
    /**
     * 0.0f = engine rev minimum
     * 1.0f = engine rev limit
     *
     * Hash: 0x5AE614ECA5FDD423 | Since: 3095
     */
    function setMaxLaunchEngineRevs(vehicle: number | Vehicle, modifier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x92D96892FC06AF22 | Since: 3095
     */
    function getThrottle(vehicle: number | Vehicle): number;
    /**
     * Explodes a selected vehicle.
     *
     * Vehicle vehicle = Vehicle you want to explode.
     * BOOL isAudible = If explosion makes a sound.
     * BOOL isInvisible = If the explosion is invisible or not.
     *
     * First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.
     *
     * Hash: 0xBA71116ADF5B514C | Since: 323
     */
    function explode(vehicle: number | Vehicle, isAudible: boolean, isInvisible: boolean): void;
    /**
     * Tested on the player's current vehicle. Unless you kill the driver, the vehicle doesn't loose control, however, if enabled, explodeOnImpact is still active. The moment you crash, boom.
     *
     * Hash: 0xF19D095E42D430CC | Since: 323
     */
    function setOutOfControl(vehicle: number | Vehicle, killDriver: boolean, explodeOnImpact: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2E0A74E1002380B1 | Since: 323
     */
    function setTimedExplosion(vehicle: number | Vehicle, ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x99AD4CCCB128CBC9 | Since: 323
     */
    function addPhoneExplosiveDevice(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xAA3F739ABDDCF21F | Since: 463
     */
    function clearPhoneExplosiveDevice(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6ADAABD3068C5235 | Since: 323
     */
    function hasPhoneExplosiveDevice(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEF49CF0270307CBE | Since: 323
     */
    function detonatePhoneExplosiveDevice(): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B407F2525E93644 | Since: 2944
     */
    function haveRearDoorsBeenBlownOpenByStickybomb(vehicle: number | Vehicle): boolean;
    /**
     * This is not tested - it's just an assumption.
     * - Nac
     *
     * Doesn't seem to work.  I'll try with an int instead. --JT
     *
     * Read the scripts, im dumpass.
     *
     * `if (!VEHICLE::IS_TAXI_LIGHT_ON(l_115)) {`
     * `VEHICLE::SET_TAXI_LIGHTS(l_115, 1);`
     * }
     *
     * Hash: 0x598803E85E8448D9 | Since: 323
     */
    function setTaxiLights(vehicle: number | Vehicle, state: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x7504C0F113AB50FC | Since: 323
     */
    function isTaxiLightOn(vehicle: number | Vehicle): boolean;
    /**
     * garageName example "Michael - Beverly Hills"
     *
     * Full list of garages by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/garages.json
     *
     * Hash: 0xCEE4490CD57BB3C2 | Since: 323
     */
    function isInGarageArea(garageName: string, vehicle: number | Vehicle): boolean;
    /**
     * colorPrimary & colorSecondary are the paint index for the vehicle.
     * For a list of valid paint indexes, view: https://pastebin.com/pwHci0xK
     * -------------------------------------------------------------------------
     * Note: minimum color index is 0, maximum color index is (numColorIndices - 1)
     *
     * Full list of vehicle colors by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleColors.json
     *
     * Hash: 0x4F1D4BE3A7F24601 | Since: 323
     */
    function setColours(vehicle: number | Vehicle, colorPrimary: number, colorSecondary: number): void;
    /**
     * It switch to highbeam when p1 is set to true.
     *
     * Hash: 0x8B7FD87F0DDB421E | Since: 323
     */
    function setFullbeam(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * p1 (toggle) was always 1 (true) except in one case in the b678 scripts.
     *
     * Hash: 0x07116E24E9D1929D | Since: 323
     */
    function setIsRacing(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
     *
     * Hash: 0x7141766F91D15BEA | Since: 323
     */
    function setCustomPrimaryColour(vehicle: number | Vehicle, r: number, g: number, b: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB64CF2CCA9D95F52 | Since: 323
     */
    function getCustomPrimaryColour(vehicle: number | Vehicle): [number, number, number];
    /**
     * No comment provided
     *
     * Hash: 0x55E1D2758F34E437 | Since: 323
     */
    function clearCustomPrimaryColour(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xF095C0405307B21B | Since: 323
     */
    function getIsPrimaryColourCustom(vehicle: number | Vehicle): boolean;
    /**
     * p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
     *
     * Hash: 0x36CED73BFED89754 | Since: 323
     */
    function setCustomSecondaryColour(vehicle: number | Vehicle, r: number, g: number, b: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8389CD56CA8072DC | Since: 323
     */
    function getCustomSecondaryColour(vehicle: number | Vehicle): [number, number, number];
    /**
     * No comment provided
     *
     * Hash: 0x5FFBDEEC3E8E2009 | Since: 323
     */
    function clearCustomSecondaryColour(vehicle: number | Vehicle): void;
    /**
     * Check if Vehicle Secondary is avaliable for customize
     *
     * Hash: 0x910A32E7AAD2656C | Since: 323
     */
    function getIsSecondaryColourCustom(vehicle: number | Vehicle): boolean;
    /**
     * The parameter fade is a value from 0-1, where 0 is fresh paint.
     *
     * Hash: 0x3AFDC536C3D01674 | Since: 323
     */
    function setEnveffScale(vehicle: number | Vehicle, fade: number): void;
    /**
     * The result is a value from 0-1, where 0 is fresh paint.
     *
     * Hash: 0xA82819CAC9C4C403 | Since: 323
     */
    function getEnveffScale(vehicle: number | Vehicle): number;
    /**
     * Hardcoded to not work in multiplayer.
     *
     * Hash: 0x52BBA29D5EC69356 | Since: 323
     */
    function setCanRespray(vehicle: number | Vehicle, state: boolean): void;
    /**
     * Used for GTAO CEO/Associate spawned vehicles.
     *
     * Hash: 0xAB31EF4DE6800CE9 | Since: 573
     */
    function setGoonBoss(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1B212B26DD3C04DF | Since: 757
     */
    function setOpenRearDoorsOnExplosion(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x33506883545AC0DF | Since: 323
     */
    function forceSubmarineSurfaceMode(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC67DB108A9ADE3BE | Since: 2189
     */
    function forceSubmarineNeurtalBuoyancy(): void;
    /**
     * No comment provided
     *
     * Hash: 0xC59872A5134879C7 | Since: 323
     */
    function setSubmarineCrushDepths(vehicle: number | Vehicle, depth1: number, depth2: number, depth3: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3E71D0B300B7AA79 | Since: 2189
     */
    function getSubmarineIsUnderDesignDepth(submarine: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x093D6DDCA5B8FBAE | Since: 2189
     */
    function getSubmarineNumberOfAirLeaks(submarine: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xED5EDE9E676643C9 | Since: 944
     */
    function setBoatIgnoreLandProbes(): void;
    /**
     * Use the vehicle bounds (instead of viewport) when deciding if a vehicle is sufficiently above the water (waterheight.dat), bypassing wave simulation checks
     *
     * Hash: 0x85FC953F6C6CBDE1 | Since: 2802
     */
    function setBoundsAffectWaterProbes(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x75DBEC174AEEAD10 | Since: 323
     */
    function setBoatAnchor(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x26C10ECBDA5D043B | Since: 323
     */
    function canAnchorBoatHere(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x24F4121D07579880 | Since: 678
     */
    function canAnchorBoatHereIgnorePlayers(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE3EBAAE484798530 | Since: 323
     */
    function setBoatRemainsAnchoredWhilePlayerIsDriver(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No observed effect.
     *
     * Hash: 0xB28B1FE5BFADD7F5 | Since: 323
     */
    function setForceLowLodAnchorMode(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xE842A9398079BD82 | Since: 323
     */
    function setBoatLowLodAnchorDistance(vehicle: number | Vehicle, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB0AD1238A709B1A2 | Since: 573
     */
    function isBoatAnchored(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8F719973E1445BA2 | Since: 323
     */
    function setBoatSinksWhenWrecked(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBD32E46AA95C1DD2 | Since: 757
     */
    function setBoatWrecked(vehicle: number | Vehicle): void;
    /**
     * Activate siren on vehicle (Only works if the vehicle has a siren).
     *
     * Hash: 0xF4924635A19EB37D | Since: 323
     */
    function setSiren(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x4C9BF537BE2634B2 | Since: 323
     */
    function isSirenOn(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB5CC40FBCB586380 | Since: 323
     */
    function isSirenAudioOn(vehicle: number | Vehicle): boolean;
    /**
     * If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives
     *
     * Hash: 0x3E8C8727991A8A0B | Since: 323
     */
    function setStrong(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8386BFB614D06749 | Since: 323
     */
    function removeStuckCheck(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xA19435F193E081AC | Since: 323
     */
    function getColours(vehicle: number | Vehicle): [number, number];
    /**
     * Check if a vehicle seat is free.
     *
     * seatIndex  = -1 being the driver seat.
     * Use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 for last seat index.
     * isTaskRunning = on true the function returns already false while a task on the target seat is running (TASK_ENTER_VEHICLE/TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT) - on false only when a ped is finally sitting in the seat.
     *
     * Hash: 0x22AC59A870E6A669 | Since: 323
     */
    function isSeatFree(vehicle: number | Vehicle, seatIndex: number, isTaskRunning: boolean): boolean;
    /**
     * If there is no ped in the seat, and the game considers the vehicle as ambient population, this will create a random occupant ped in the seat, which may be cleaned up by the game fairly soon if not marked as script-owned mission entity.
     *
     * Seat indexes:
     * -1 = Driver
     * 0 = Front Right Passenger
     * 1 = Back Left Passenger
     * 2 = Back Right Passenger
     * 3 = Further Back Left Passenger (vehicles > 4 seats)
     * 4 = Further Back Right Passenger (vehicles > 4 seats)
     * etc.
     *
     * If p2 is true it uses a different GetOccupant function.
     *
     * Hash: 0xBB40DD2270B65366 | Since: 323
     */
    function getPedInSeat(vehicle: number | Vehicle, seatIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x83F969AA1EE2A664 | Since: 323
     */
    function getLastPedInSeat(vehicle: number | Vehicle, seatIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xB91B4C20085BD12F | Since: 323
     */
    function getLightsState(vehicle: number | Vehicle): [boolean, boolean, boolean];
    /**
     * wheelID used for 4 wheelers seem to be (0, 1, 4, 5)
     * completely - is to check if tire completely gone from rim.
     *
     * '0 = wheel_lf / bike, plane or jet front
     * '1 = wheel_rf
     * '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
     * '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
     * '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
     * '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
     * '45 = 6 wheels trailer mid wheel left
     * '47 = 6 wheels trailer mid wheel right
     *
     * Hash: 0xBA291848A0815CA9 | Since: 323
     */
    function isTyreBurst(vehicle: number | Vehicle, wheelID: number, completely: boolean): boolean;
    /**
     * SCALE: Setting the speed to 30 would result in a speed of roughly 60mph, according to speedometer.
     *
     * Speed is in meters per second
     * You can convert meters/s to mph here:
     * http://www.calculateme.com/Speed/MetersperSecond/ToMilesperHour.htm
     *
     * Hash: 0xAB54A438726D25D5 | Since: 323
     */
    function setForwardSpeed(vehicle: number | Vehicle, speed: number): void;
    /**
     * Seems to be identical to SET_VEHICLE_FORWARD_SPEED
     *
     * Hash: 0x6501129C9E0FFA05 | Since: 877
     */
    function setForwardSpeedXy(vehicle: number | Vehicle, speed: number): void;
    /**
     * This native makes the vehicle stop immediately, as happens when we enter a MP garage.
     *
     * . distance defines how far it will travel until stopping. Garage doors use 3.0.
     *
     * . If killEngine is set to 1, you cannot resume driving the vehicle once it stops. This looks like is a bitmapped integer.
     *
     * Hash: 0x260BE8F09E326A20 | Since: 323
     */
    function bringToHalt(vehicle: number | Vehicle, distance: number, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDCE97BDF8A0EABC8 | Since: 1103
     */
    function setSteerForBuildings(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x9849DE24FCF23CCC | Since: 1604
     */
    function setCausesSwerving(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8664170EF165C4A6 | Since: 2189
     */
    function setIgnorePlanesSmallPitchChange(): void;
    /**
     * Stops CTaskBringVehicleToHalt
     *
     * Hash: 0x7C06330BFDDA182E | Since: 1103
     */
    function stopBringingToHalt(vehicle: number | Vehicle): void;
    /**
     * Returns true if vehicle is halted by BRING_VEHICLE_TO_HALT
     *
     * Hash: 0xC69BB1D832A710EF | Since: 1493
     */
    function isBeingBroughtToHalt(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x923A293361DF44E5 | Since: 2802
     */
    function lowerForkliftForks(forklift: number | Vehicle): void;
    /**
     * 0.0 = Lowest 1.0 = Highest. This is best to be used if you wanna pick-up a car since un-realistically on GTA V forklifts can't pick up much of anything due to vehicle mass. If you put this under a car then set it above 0.0 to a 'lifted-value' it will raise the car with no issue lol
     *
     * Hash: 0x37EBBF3117BD6A25 | Since: 323
     */
    function setForkliftForkHeight(vehicle: number | Vehicle, height: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x57715966069157AD | Since: 323
     */
    function isEntityAttachedToHandlerFrame(vehicle: number | Vehicle, entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x62CA17B74C435651 | Since: 323
     */
    function isAnyEntityAttachedToHandlerFrame(vehicle: number | Vehicle): boolean;
    /**
     * Finds the vehicle that is carrying this entity with a handler frame.
     * The model of the entity must be prop_contr_03b_ld or the function will return 0.
     *
     * Hash: 0x375E7FC44F21C8AB | Since: 323
     */
    function findHandlerContainerIsAttachedTo(entity: number | Entity): number;
    /**
     * No comment provided
     *
     * Hash: 0x89D630CF5EA96D23 | Since: 323
     */
    function isHandlerFrameLinedUpWithContainer(vehicle: number | Vehicle, entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x6A98C2ECF57FA5D4 | Since: 323
     */
    function attachContainerToHandlerFrameWhenLinedUp(vehicle: number | Vehicle, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x7C0043FDFF6436BC | Since: 323
     */
    function detachContainerFromHandlerFrame(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x8AA9180DE2FEDD45 | Since: 323
     */
    function setDisableHeightMapAvoidance(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xBAFB99B304BC52A7 | Since: 3407
     */
    function setPlaneAvoidsOthers(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0A6A279F3AA4FD70 | Since: 323
     */
    function setBoatDisableAvoidance(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x634148744F385576 | Since: 323
     */
    function isHeliLandingAreaBlocked(vehicle: number | Vehicle): boolean;
    /**
     * Used on helicopters and blimps during the CTaskVehicleLand task. Sets a value on the task to 10f
     *
     * Hash: 0x107A473D7A6647A9 | Since: 1290
     */
    function setShortSlowdownForLanding(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xE6F13851780394DA | Since: 323
     */
    function setHeliTurbulenceScalar(vehicle: number | Vehicle): void;
    /**
     * Initially used in Max Payne 3, that's why we know the name.
     *
     * Hash: 0xFC40CBF7B90CA77C | Since: 877
     */
    function setCarBootOpen(vehicle: number | Vehicle): void;
    /**
     * `"To burst tyres VEHICLE::SET_VEHICLE_TYRE_BURST(vehicle, 0, true, 1000.0)`
     * to burst all tyres type it 8 times where p1 = 0 to 7.
     *
     * p3 seems to be how much damage it has taken. 0 doesn't deflate them, 1000 completely deflates them.
     *
     * '0 = wheel_lf / bike, plane or jet front
     * '1 = wheel_rf
     * '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
     * '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
     * '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
     * '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
     * '45 = 6 wheels trailer mid wheel left
     * '47 = 6 wheels trailer mid wheel right
     *
     * Hash: 0xEC6A202EE4960385 | Since: 323
     */
    function setTyreBurst(vehicle: number | Vehicle, index: number, onRim: boolean): void;
    /**
     * Closes all doors of a vehicle:
     *
     * Hash: 0x781B3D62BB013EF5 | Since: 323
     */
    function setDoorsShut(vehicle: number | Vehicle, closeInstantly: boolean): void;
    /**
     * Allows you to toggle bulletproof tires.
     *
     * Hash: 0xEB9DC3C7D8596C46 | Since: 323
     */
    function setTyresCanBurst(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x678B9BB8C3F58FEB | Since: 323
     */
    function getTyresCanBurst(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x29B18B4FD460CA8F | Since: 323
     */
    function setWheelsCanBreak(vehicle: number | Vehicle, enabled: boolean): void;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0x7C65DAC73C35C862 | Since: 323
     */
    function setDoorOpen(vehicle: number | Vehicle, doorId: number, loose: boolean, openInstantly: boolean): void;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Usually used alongside other vehicle door natives.
     *
     * Hash: 0x3B458DDB57038F08 | Since: 877
     */
    function setDoorAutoLock(vehicle: number | Vehicle, doorId: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA247F9EF01D8082E | Since: 1103
     */
    function setFleeingsUseSwitchedOffNodes(): void;
    /**
     * windowIndex:
     * 0 = Front Right Window
     * 1 = Front Left Window
     * 2 = Back Right Window
     * 3 = Back Left Window
     * 4 = Unknown
     * 5 = Unknown
     * 6 = Windscreen
     * 7 = Rear Windscreen
     *
     * Hash: 0xA711568EEDB43069 | Since: 323
     */
    function removeWindow(vehicle: number | Vehicle, windowIndex: number): void;
    /**
     * Roll down all the windows of the vehicle passed through the first parameter.
     *
     * Hash: 0x85796B0549DDE156 | Since: 323
     */
    function rollDownWindows(vehicle: number | Vehicle): void;
    /**
     * windowIndex:
     * 0 = Front Left Window
     * 1 = Front Right Window
     * 2 = Rear Left Window
     * 3 = Rear Right Window
     * 4 = Front Windscreen
     * 5 = Rear Windscreen
     * 6 = Mid Left
     * 7 = Mid Right
     * 8 = Invalid
     *
     * Hash: 0x7AD9E6CE657D69E3 | Since: 323
     */
    function rollDownWindow(vehicle: number | Vehicle, windowIndex: number): void;
    /**
     * windowIndex:
     * 0 = Front Left Window
     * 1 = Front Right Window
     * 2 = Rear Left Window
     * 3 = Rear Right Window
     * 4 = Front Windscreen
     * 5 = Rear Windscreen
     * 6 = Mid Left
     * 7 = Mid Right
     * 8 = Invalid
     *
     * Hash: 0x602E548F46E24D59 | Since: 323
     */
    function rollUpWindow(vehicle: number | Vehicle, windowIndex: number): void;
    /**
     * windowIndex:
     * 0 = Front Left Window
     * 1 = Front Right Window
     * 2 = Rear Left Window
     * 3 = Rear Right Window
     * 4 = Front Windscreen
     * 5 = Rear Windscreen
     * 6 = Mid Left
     * 7 = Mid Right
     * 8 = Invalid
     *
     * Hash: 0x9E5B5E4D2CCD2259 | Since: 323
     */
    function smashWindow(vehicle: number | Vehicle, windowIndex: number): void;
    /**
     * windowIndex:
     * 0 = Front Left Window
     * 1 = Front Right Window
     * 2 = Rear Left Window
     * 3 = Rear Right Window
     * 4 = Front Windscreen
     * 5 = Rear Windscreen
     * 6 = Mid Left
     * 7 = Mid Right
     * 8 = Invalid
     *
     * Additional information: FIX_VEHICLE_WINDOW (0x140D0BB88) references an array of bone vehicle indices (0x141D4B3E0) { 2Ah, 2Bh, 2Ch, 2Dh, 2Eh, 2Fh, 28h, 29h } that correspond to: window_lf, window_rf, window_lr, window_rr, window_lm, window_rm, windscreen, windscreen_r. This array is used by most vehwindow natives.
     *
     * Also, this function is coded to not work on vehicles of type: CBike, Bmx, CBoat, CTrain, and CSubmarine.
     *
     * Hash: 0x772282EBEB95E682 | Since: 323
     */
    function fixWindow(vehicle: number | Vehicle, windowIndex: number): void;
    /**
     * Detaches the vehicle's windscreen.
     * For further information, see : gtaforums.com/topic/859570-glass/#entry1068894566
     *
     * Hash: 0x6D645D59FB5F5AD3 | Since: 323
     */
    function popOutWindscreen(vehicle: number | Vehicle): void;
    /**
     * Pops off the "roof" bone in the direction of the specified offset from the vehicle.
     *
     * Hash: 0xE38CB9D7D39FDBCC | Since: 323
     */
    function popOffRoofWithImpulse(vehicle: number | Vehicle, pos: Vector3): void;
    /**
     * set's if the vehicle has lights or not.
     * not an on off toggle.
     * p1 = 0 ;vehicle normal lights, off then lowbeams, then highbeams
     * p1 = 1 ;vehicle doesn't have lights, always off
     * p1 = 2 ;vehicle has always on lights
     * p1 = 3 ;or even larger like 4,5,... normal lights like =1
     * note1: when using =2 on day it's lowbeam,highbeam
     * but at night it's lowbeam,lowbeam,highbeam
     * note2: when using =0 it's affected by day or night for highbeams don't exist in daytime.
     *
     * Hash: 0x34E710FF01247C5A | Since: 323
     */
    function setLights(vehicle: number | Vehicle, state: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC45C27EF50F36ADC | Since: 323
     */
    function setUsePlayerLightSettings(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * p1 can be either 0, 1 or 2.
     *
     * Determines how vehicle lights behave when toggled.
     *
     * 0 = Default (Lights can be toggled between off, normal and high beams)
     * 1 = Lights Disabled (Lights are fully disabled, cannot be toggled)
     * 2 = Always On (Lights can be toggled between normal and high beams)
     *
     * Hash: 0x1FD09E7390A74D54 | Since: 323
     */
    function setHeadlightShadows(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xCDE5E70C1DDB954C | Since: 323
     */
    function setAlarm(vehicle: number | Vehicle, state: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB8FF7AB45305C345 | Since: 323
     */
    function startAlarm(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x4319E335B71FFF34 | Since: 323
     */
    function isAlarmActivated(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBC2042F090AF6AD3 | Since: 323
     */
    function setInteriorlight(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Sets some bit of vehicle
     *
     * Hash: 0x8821196D91FA2DE5 | Since: 1290
     */
    function setForceInteriorlight(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * multiplier = brightness of head lights.
     * this value isn't capped afaik.
     *
     * multiplier = 0.0 no lights
     * multiplier = 1.0 default game value
     *
     *
     * Hash: 0xB385454F8791F57C | Since: 323
     */
    function setLightMultiplier(vehicle: number | Vehicle, multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3C7D42D58F770B54 | Since: 323
     */
    function attachToTrailer(vehicle: number | Vehicle, trailer: number | Vehicle, radius: number): void;
    /**
     * This is the proper way of attaching vehicles to the car carrier, it's what Rockstar uses. Video Demo: https://www.youtube.com/watch?v=2lVEIzf7bgo
     *
     * Hash: 0x16B5E274BDE402F8 | Since: 323
     */
    function attachOnToTrailer(vehicle: number | Vehicle, trailer: number | Vehicle, offsetX: number, offsetY: number, offsetZ: number, coordsX: number, coordsY: number, coordsZ: number, rotationX: number, rotationY: number, rotationZ: number, disableCollisions: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x374706271354CB18 | Since: 323
     */
    function stabiliseEntityAttachedToHeli(vehicle: number | Vehicle, entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x90532EDF0D2BDD86 | Since: 323
     */
    function detachFromTrailer(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xE7CF3C4F9F489F0C | Since: 323
     */
    function isAttachedToTrailer(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2A8F319B392E7B3F | Since: 323
     */
    function setTrailerInverseMassScale(vehicle: number | Vehicle): void;
    /**
     * in the decompiled scripts, seems to be always called on the vehicle right after being attached to a trailer.
     *
     * Hash: 0x95CF53B3D687F9FA | Since: 323
     */
    function setTrailerLegsRaised(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x878C75C09FBDB942 | Since: 1103
     */
    function setTrailerLegsLowered(vehicle: number | Vehicle): void;
    /**
     * tyreIndex = 0 to 4 on normal vehicles
     *
     * '0 = wheel_lf / bike, plane or jet front
     * '1 = wheel_rf
     * '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
     * '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
     * '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
     * '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
     * '45 = 6 wheels trailer mid wheel left
     * '47 = 6 wheels trailer mid wheel right
     *
     * Hash: 0x6E13FC662B882D1D | Since: 323
     */
    function setTyreFixed(vehicle: number | Vehicle, tyreIndex: number): void;
    /**
     * Sets a vehicle's license plate text.  8 chars maximum.
     *
     * Example:
     * `Ped playerPed = PLAYER::PLAYER_PED_ID();`
     * `Vehicle veh = PED::GET_VEHICLE_PED_IS_USING(playerPed);`
     * char *plateText = "KING";
     * `VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(veh, plateText);`
     *
     * Hash: 0x95A88F0B409CDA47 | Since: 323
     */
    function setNumberPlateText(vehicle: number | Vehicle, plateText: string): void;
    /**
     * Returns the license plate text from a vehicle. 8 chars maximum.
     *
     * Hash: 0x7CE1CCB9B293020E | Since: 323
     */
    function getNumberPlateText(vehicle: number | Vehicle): string;
    /**
     * Returns the number of *types* of licence plates, enumerated below in SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX.
     *
     * Hash: 0x4C4D6B2644F458CB | Since: 323
     */
    function getNumberOfNumberPlates(): number;
    /**
     * Plates:
     * Blue/White - 0
     * Yellow/black - 1
     * Yellow/Blue - 2
     * Blue/White2 - 3
     * Blue/White3 - 4
     * Yankton - 5
     *
     * Hash: 0x9088EB5A43FFB0A1 | Since: 323
     */
    function setNumberPlateTextIndex(vehicle: number | Vehicle, plateIndex: number): void;
    /**
     * Returns the PlateType of a vehicle
     * Blue_on_White_1 = 3,
     * Blue_on_White_2 = 0,
     * Blue_on_White_3 = 4,
     * Yellow_on_Blue = 2,
     * Yellow_on_Black = 1,
     * North_Yankton = 5,
     *
     * Hash: 0xF11BC2DD9A3E7195 | Since: 323
     */
    function getNumberPlateTextIndex(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x80D9F74197EA47D9 | Since: 323
     */
    function setRandomTrains(toggle: boolean): void;
    /**
     * Train models HAVE TO be loaded (requested) before you use this.
     * For variation 15 - request:
     *
     * freight
     * freightcar
     * freightgrain
     * freightcont1
     * freightcont2
     * freighttrailer
     *
     *
     *
     * Hash: 0x63C6CCA8E68AE8C8 | Since: 323
     */
    function createMissionTrain(variation: number, pos: Vector3, direction: boolean): number;
    /**
     * Toggles whether ambient trains can spawn on the specified track or not
     *
     * `trackId` is the internal id of the train track to switch.
     * `state` is whether ambient trains can spawn or not
     *
     * trackIds
     * 0 (`trains1.dat`) Main track around SA
     * 1 (`trains2.dat`) Davis Quartz Quarry branch
     * 2 (`trains3.dat`) Second track alongside live track along Roy Lewenstein Blv.
     * 3 (`trains4.dat`) Metro track circuit
     * 4 (`trains5.dat`) Branch in Mirror Park Railyard
     * 5 (`trains6.dat`) Branch in Mirror Park Railyard
     * 6 (`trains7.dat`) LS branch to Mirror Park Railyard
     * 7 (`trains8.dat`) Overground part of metro track along Forum Dr.
     * 8 (`trains9.dat`) Branch to Mirror Park Railyard
     * 9 (`trains10.dat`) Yankton train
     * 10 (`trains11.dat`) Part of metro track near mission row
     * 11 (`trains12.dat`) Yankton prologue mission train
     * Full list of all train tracks + track nodes by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/traintracks.json
     *
     * Hash: 0xFD813BB7DB977F20 | Since: 323
     */
    function switchTrainTrack(trackId: number, state: boolean): void;
    /**
     * Only called once inside main_persitant with the parameters p0 = 0, p1 = 120000
     *
     * trackIndex: 0 - 26
     * Full list of all train tracks + track nodes by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/traintracks.json
     *
     * Hash: 0x21973BBF8D17EDFA | Since: 323
     */
    function setTrainTrackSpawnFrequency(trackIndex: number, frequency: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x2310A8F9421EBF43 | Since: 2372
     */
    function allowTrainToBeRemovedByPopulation(): void;
    /**
     * No comment provided
     *
     * Hash: 0x736A718577F39C7D | Since: 323
     */
    function deleteAllTrains(): void;
    /**
     * No comment provided
     *
     * Hash: 0xAA0BC91BE0B796E3 | Since: 323
     */
    function setTrainSpeed(train: number | Vehicle, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x16469284DB8C62B5 | Since: 323
     */
    function setTrainCruiseSpeed(train: number | Vehicle, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x84436EC293B1415F | Since: 323
     */
    function setRandomBoats(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDA5E12F728DB30CA | Since: 2372
     */
    function setRandomBoatsMp(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2AFD795EEAC8D30D | Since: 323
     */
    function setGarbageTrucks(toggle: boolean): void;
    /**
     * Maximum amount of vehicles with vehicle stuck check appears to be 16.
     *
     * Hash: 0x57E4C39DE5EE8470 | Since: 323
     */
    function doesHaveStuckVehicleCheck(vehicle: number | Vehicle): boolean;
    /**
     * See REQUEST_VEHICLE_RECORDING
     *
     * Hash: 0x21543C612379DB3C | Since: 323
     */
    function getRecordingId(recording: number, script: string): number;
    /**
     * Request the vehicle recording defined by the lowercase format string "%s%03d.yvr". For example, REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER") corresponds to fbis1uber001.yvr.
     * For all vehicle recording/playback natives, "script" is a common prefix that usually corresponds to the script/mission the recording is used in, "recording" is its int suffix, and "id" (e.g., in native GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID) corresponds to a unique identifier within the recording streaming module.
     * Note that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins.
     *
     * Hash: 0xAF514CABE74CBF15 | Since: 323
     */
    function requestRecording(recording: number, script: string): void;
    /**
     * See REQUEST_VEHICLE_RECORDING
     *
     * Hash: 0x300D614A4C785FC4 | Since: 323
     */
    function hasRecordingBeenLoaded(recording: number, script: string): boolean;
    /**
     * See REQUEST_VEHICLE_RECORDING
     *
     * Hash: 0xF1160ACCF98A3FC8 | Since: 323
     */
    function removeRecording(recording: number, script: string): void;
    /**
     * No comment provided
     *
     * Hash: 0x92523B76657A517D | Since: 323
     */
    function getPositionOfRecordingIdAtTime(id: number, time: number): Vector3;
    /**
     * This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.
     *
     * See REQUEST_VEHICLE_RECORDING
     *
     * Hash: 0xD242728AA6F0FBA2 | Since: 323
     */
    function getPositionOfRecordingAtTime(recording: number, time: number, script: string): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0xF0F2103EFAF8CBA7 | Since: 323
     */
    function getRotationOfRecordingIdAtTime(id: number, time: number): Vector3;
    /**
     * This native does no interpolation between pathpoints. The same rotation will be returned for all times up to the next pathpoint in the recording.
     *
     * See REQUEST_VEHICLE_RECORDING
     *
     * Hash: 0x2058206FBE79A8AD | Since: 323
     */
    function getRotationOfRecordingAtTime(recording: number, time: number, script: string): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x102D125411A7B6E6 | Since: 323
     */
    function getTotalDurationOfRecordingId(id: number): number;
    /**
     * See REQUEST_VEHICLE_RECORDING
     *
     * Hash: 0x0E48D1C262390950 | Since: 323
     */
    function getTotalDurationOfRecording(recording: number, script: string): number;
    /**
     * Distance traveled in the vehicles current recording.
     *
     * Hash: 0x2DACD605FC681475 | Since: 323
     */
    function getPositionInRecording(vehicle: number | Vehicle): number;
    /**
     * Can be used with GET_TOTAL_DURATION_OF_VEHICLE_RECORDING{_ID} to compute a percentage.
     *
     * Hash: 0x5746F3A7AB7FE544 | Since: 323
     */
    function getTimePositionInRecording(vehicle: number | Vehicle): number;
    /**
     * `p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).`
     *
     * See REQUEST_VEHICLE_RECORDING
     *
     * Hash: 0x3F878F92B3A7A071 | Since: 323
     */
    function startPlaybackRecorded(vehicle: number | Vehicle, recording: number, script: string): void;
    /**
     * flags requires further research, e.g., 0x4/0x8 are related to the AI driving task and 0x20 is internally set and interacts with dynamic entity components.
     *
     * time, often zero and capped at 500, is related to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER
     *
     * Hash: 0x7D80FD645D4DA346 | Since: 323
     */
    function startPlaybackRecordedWithFlags(vehicle: number | Vehicle, recording: number, script: string, flags: number, time: number, drivingStyle: number): void;
    /**
     * Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
     *
     * Hash: 0x1F2E4E06DEA8992B | Since: 323
     */
    function forcePlaybackRecordedUpdate(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x54833611C17ABDEA | Since: 323
     */
    function stopPlaybackRecorded(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x632A689BF42301B1 | Since: 323
     */
    function pausePlaybackRecorded(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x8879EE09268305D5 | Since: 323
     */
    function unpausePlaybackRecorded(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x1C8A4C2C19E68EEC | Since: 323
     */
    function isPlaybackGoingOnFor(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAEA8FD591FAD4106 | Since: 323
     */
    function isPlaybackUsingAiGoingOnFor(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x42BC05C27A946054 | Since: 323
     */
    function getCurrentPlaybackFor(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xAB8E2EDA0C0A5883 | Since: 323
     */
    function skipToEndAndStopPlaybackRecorded(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x6683AB880E427778 | Since: 323
     */
    function setPlaybackSpeed(vehicle: number | Vehicle, speed: number): void;
    /**
     * AI abides by the provided driving style (e.g., stopping at red lights or waiting behind traffic) while executing the specificed vehicle recording.
     *
     * FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE is a related native that deals with the AI physics for such recordings.
     *
     * Hash: 0x29DE5FA52D00428C | Since: 323
     */
    function startPlaybackRecordedUsingAi(vehicle: number | Vehicle, recording: number, script: string, speed: number, drivingStyle: number): void;
    /**
     * SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)
     *
     * Hash: 0x9438F7AD68771A20 | Since: 323
     */
    function skipTimeInPlaybackRecorded(vehicle: number | Vehicle, time: number): void;
    /**
     * Identical to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER with 0 as arguments for p1 and p3.
     *
     * Hash: 0xA549C3B37EA28131 | Since: 323
     */
    function setPlaybackToUseAi(vehicle: number | Vehicle, drivingStyle: number): void;
    /**
     * Time is number of milliseconds before reverting, zero for indefinitely.
     *
     * Hash: 0x6E63860BBB190730 | Since: 323
     */
    function setPlaybackToUseAiTryToRevertBackLater(vehicle: number | Vehicle, time: number, drivingStyle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5845066D8A1EA7F7 | Since: 323
     */
    function setAdditionalRotationForRecordedPlayback(vehicle: number | Vehicle, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x796A877E459B99EA | Since: 323
     */
    function setPositionOffsetForRecordedPlayback(vehicle: number | Vehicle, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xFAF2A78061FD9EF4 | Since: 323
     */
    function setGlobalPositionOffsetForRecordedPlayback(vehicle: number | Vehicle, pos: Vector3): void;
    /**
     * A vehicle recording playback flag only used in jewelry_heist
     *
     * Hash: 0x063AE2B2CC273588 | Since: 323
     */
    function setShouldLerpFromAiToFullRecording(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x786A4EB67B01BF0B | Since: 323
     */
    function explodeInCutscene(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x2FA9923062DD396C | Since: 323
     */
    function addStuckCheckWithWarp(): void;
    /**
     * Makes the vehicle stop spawning naturally in traffic. Here's an essential example:
     *
     * `VEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(MISC::GET_HASH_KEY("taco"), true);`
     *
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0x0FC2D89AC25A5814 | Since: 323
     */
    function setModelIsSuppressed(model: number | string, suppressed: boolean): void;
    /**
     * Gets a random vehicle in a sphere at the specified position, of the specified radius.
     *
     * x: The X-component of the position of the sphere.
     * y: The Y-component of the position of the sphere.
     * z: The Z-component of the position of the sphere.
     * radius: The radius of the sphere. Max is 9999.9004.
     * modelHash: The vehicle model to limit the selection to. Pass 0 for any model.
     * flags: The bitwise flags that modifies the behaviour of this function.
     *
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0x386F6CE5BAF6091C | Since: 323
     */
    function getRandomInSphere(pos: Vector3, radius: number, modelHash: number | string, flags: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xC5574E0AEB86BA68 | Since: 323
     */
    function getRandomFrontBumperInSphere(): number;
    /**
     * No comment provided
     *
     * Hash: 0xB50807EABE20A8DC | Since: 323
     */
    function getRandomBackBumperInSphere(): number;
    /**
     * Example usage
     * `VEHICLE::GET_CLOSEST_VEHICLE(x, y, z, radius, hash, unknown leave at 70)`
     *
     * x, y, z: Position to get closest vehicle to.
     * radius: Max radius to get a vehicle.
     * modelHash: Limit to vehicles with this model. 0 for any.
     * flags: The bitwise flags altering the function's behaviour.
     *
     * Does not return police cars or helicopters.
     *
     * It seems to return police cars for me, does not seem to return helicopters, planes or boats for some reason
     *
     * Only returns non police cars and motorbikes with the flag set to 70 and modelHash to 0. ModelHash seems to always be 0 when not a modelHash in the scripts, as stated above.
     *
     * These flags were found in the b617d scripts: 0,2,4,6,7,23,127,260,2146,2175,12294,16384,16386,20503,32768,67590,67711,98309,100359.
     * Converted to binary, each bit probably represents a flag as explained regarding another native here: gtaforums.com/topic/822314-guide-driving-styles
     *
     * Conversion of found flags to binary: https://pastebin.com/kghNFkRi
     *
     * At exactly 16384 which is 0100000000000000 in binary and 4000 in hexadecimal only planes are returned.
     *
     * `It's probably more convenient to use worldGetAllVehicles(int *arr, int arrSize) and check the shortest distance yourself and sort if you want by checking the vehicle type with for example VEHICLE::IS_THIS_MODEL_A_BOAT`
     *
     * -------------------------------------------------------------------------
     *
     * Conclusion: This native is not worth trying to use. Use something like this instead: https://pastebin.com/xiFdXa7h
     *
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0xF73EB622C4F1689B | Since: 323
     */
    function getClosest(pos: Vector3, radius: number, modelHash: number | string, flags: number): number;
    /**
     * Corrected p1. it's basically the 'carriage/trailer number'. So if the train has 3 trailers you'd call the native once with a var or 3 times with 1, 2, 3.
     *
     * Hash: 0x08AAFD0814722BC3 | Since: 323
     */
    function getTrainCarriage(train: number | Vehicle, trailerNumber: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xAD464F2E18836BFC | Since: 2372
     */
    function isMissionTrain(train: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5B76B14AE875C795 | Since: 323
     */
    function deleteMissionTrain(train: number | Vehicle): void;
    /**
     * p1 is always 0
     *
     * Hash: 0xBBE7648349B49BE8 | Since: 323
     */
    function setMissionTrainAsNoLongerNeeded(train: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x591CA673AA6AB736 | Since: 323
     */
    function setMissionTrainCoords(train: number | Vehicle, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x45A9187928F4B9E3 | Since: 323
     */
    function isThisModelABoat(model: number | string): boolean;
    /**
     * Checks if model is a boat, then checks for FLAG_IS_JETSKI.
     *
     * Hash: 0x9537097412CF75FE | Since: 323
     */
    function isThisModelAJetski(model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA0948AB42D7BA0DE | Since: 323
     */
    function isThisModelAPlane(model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xDCE4334788AF94EA | Since: 323
     */
    function isThisModelAHeli(model: number | string): boolean;
    /**
     * To check if the model is an amphibious car, use IS_THIS_MODEL_AN_AMPHIBIOUS_CAR.
     *
     * Hash: 0x7F6DB52EEFC96DF8 | Since: 323
     */
    function isThisModelACar(model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAB935175B22E822B | Since: 323
     */
    function isThisModelATrain(model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB50C0B0CEDC6CE84 | Since: 323
     */
    function isThisModelABike(model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBF94DD42F63BDED2 | Since: 323
     */
    function isThisModelABicycle(model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x39DAC362EE65FA28 | Since: 323
     */
    function isThisModelAQuadbike(model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x633F6F44A537EBB6 | Since: 944
     */
    function isThisModelAnAmphibiousCar(model: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA1A9FC1C76A6730D | Since: 1103
     */
    function isThisModelAnAmphibiousQuadbike(model: number | string): boolean;
    /**
     * Equivalent of SET_HELI_BLADES_SPEED(vehicleHandle, 1.0f);
     *
     * Hash: 0xA178472EBB8AE60D | Since: 323
     */
    function setHeliBladesFullSpeed(vehicle: number | Vehicle): void;
    /**
     * Sets the speed of the helicopter blades in percentage of the full speed.
     *
     * vehicleHandle: The helicopter.
     * speed: The speed in percentage, 0.0f being 0% and 1.0f being 100%.
     *
     * Hash: 0xFD280B4D7F3ABC4D | Since: 323
     */
    function setHeliBladesSpeed(vehicle: number | Vehicle, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x99CAD8E7AFDB60FA | Since: 323
     */
    function forceSubThrottleForTime(vehicle: number | Vehicle): void;
    /**
     * This has not yet been tested - it's just an assumption of what the types could be.
     *
     * Hash: 0x3750146A28097A82 | Since: 323
     */
    function setCanBeTargetted(vehicle: number | Vehicle, state: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDBC631F109350B8C | Since: 323
     */
    function setDontAllowPlayerToEnterIfLockedForPlayer(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x4C7028F78FFD3681 | Since: 323
     */
    function setCanBeVisiblyDamaged(vehicle: number | Vehicle, state: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1AA8A837D2169D94 | Since: 323
     */
    function setHasUnbreakableLights(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2311DD7159F00582 | Since: 323
     */
    function setRespectsLocksWhenHasDriver(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x065D03A9D6B2C6B5 | Since: 463
     */
    function setCanEjectPassengersIfLocked(): void;
    /**
     * Dirt level does not become greater than 15.0
     *
     * Hash: 0x8F17BC8BA08DA62B | Since: 323
     */
    function getDirtLevel(vehicle: number | Vehicle): number;
    /**
     * You can't use values greater than 15.0
     * Also, R* does (float)(rand() % 15) to get a random dirt level when generating a vehicle.
     *
     * Hash: 0x79D3B596FE44EE8B | Since: 323
     */
    function setDirtLevel(vehicle: number | Vehicle, dirtLevel: number): void;
    /**
     * Appears to return true if the vehicle has any damage, including cosmetically.
     *
     * Hash: 0xBCDC5017D3CE1E9E | Since: 323
     */
    function getDoesHaveDamageDecals(vehicle: number | Vehicle): boolean;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0x3E933CFF7B111C22 | Since: 323
     */
    function isDoorFullyOpen(vehicle: number | Vehicle, doorId: number): boolean;
    /**
     * Starts or stops the engine on the specified vehicle.
     *
     * vehicle: The vehicle to start or stop the engine on.
     * value: true to turn the vehicle on; false to turn it off.
     * instantly: if true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.
     * disableAutoStart: If true, the system will prevent the engine from starting when the player got into it.
     *
     * Hash: 0x2497C4717C8B881E | Since: 323
     */
    function setEngineOn(vehicle: number | Vehicle, value: boolean, instantly: boolean, disableAutoStart: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8ABA6AF54B942B95 | Since: 323
     */
    function setUndriveable(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x5AFEEDD9BB2899D7 | Since: 323
     */
    function setProvidesCover(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0xF2BFA0430F0A0FCB | Since: 323
     */
    function setDoorControl(vehicle: number | Vehicle, doorId: number, speed: number, angle: number): void;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0xA5A9653A8D2CAF48 | Since: 323
     */
    function setDoorLatched(vehicle: number | Vehicle, doorId: number): void;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0xFE3F9C29F7B32BD5 | Since: 323
     */
    function getDoorAngleRatio(vehicle: number | Vehicle, doorId: number): number;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0x218297BF0CFD853B | Since: 323
     */
    function getPedUsingDoor(vehicle: number | Vehicle, doord: number): number;
    /**
     * enum eDoorId
     * {
     * VEH_EXT_DOOR_INVALID_ID = -1,
     * VEH_EXT_DOOR_DSIDE_F,
     * VEH_EXT_DOOR_DSIDE_R,
     * VEH_EXT_DOOR_PSIDE_F,
     * VEH_EXT_DOOR_PSIDE_R,
     * VEH_EXT_BONNET,
     * VEH_EXT_BOOT
     * };
     *
     * Hash: 0x93D9BD300D7789E5 | Since: 323
     */
    function setDoorShut(vehicle: number | Vehicle, doorId: number, closeInstantly: boolean): void;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0xD4D4F6A4AB575A33 | Since: 323
     */
    function setDoorBroken(vehicle: number | Vehicle, doorId: number, deleteDoor: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x59BF8C3D52C92F66 | Since: 323
     */
    function setCanBreak(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8AC862B0B32C5B80 | Since: 323
     */
    function doesHaveRoof(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC4B3347BD68BD609 | Since: 573
     */
    function setRemoveAggressiveCarjackMission(): void;
    /**
     * No comment provided
     *
     * Hash: 0xD3301660A57C9272 | Since: 757
     */
    function setAvoidPlayerVehicleRiotVanMission(): void;
    /**
     * No comment provided
     *
     * Hash: 0xB9562064627FF9DB | Since: 573
     */
    function setCarjackMissionRemovalParameters(): void;
    /**
     * Returns true if MF_IS_BIG (strModelFlags 0x8) handling model flag is set.
     *
     * Hash: 0x9F243D3919F442FE | Since: 323
     */
    function isBig(vehicle: number | Vehicle): boolean;
    /**
     * Returns the total amount of color combinations found in the vehicle's carvariations.meta entry.
     *
     * Hash: 0x3B963160CD65D41E | Since: 323
     */
    function getNumberOfColours(vehicle: number | Vehicle): number;
    /**
     * Sets the selected vehicle's colors to the specified index of the color combination found in the vehicle's carvariations.meta entry.
     *
     * Hash: 0x33E8CD3322E2FE31 | Since: 323
     */
    function setColourCombination(vehicle: number | Vehicle, colorCombination: number): void;
    /**
     * Returns the index of the color combination found in the vehicle's carvariations.meta entry.
     *
     * Hash: 0x6A842D197F845D56 | Since: 323
     */
    function getColourCombination(vehicle: number | Vehicle): number;
    /**
     * `color`: is the paint index for the vehicle.
     * Paint index goes from 0 to 12.
     * Be aware that it only works on xenon lights. Example: https://i.imgur.com/yV3cpG9.png
     * Full list of all vehicle xenon lights by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleColors.json
     *
     * Hash: 0xE41033B25D003A07 | Since: 1604
     */
    function setXenonLightColorIndex(vehicle: number | Vehicle, colorIndex: number): void;
    /**
     * Returns the headlight color index from the vehicle. Value between 0, 12.
     * Use SET_VEHICLE_XENON_LIGHT_COLOR_INDEX to set the headlights color for the vehicle.
     * Must enable xenon headlights before it'll take affect.
     *
     * Returns an int, value between 0-12 or 255 if no color is set.
     *
     * Hash: 0x3DFF319A831E0CDB | Since: 1604
     */
    function getXenonLightColorIndex(vehicle: number | Vehicle): number;
    /**
     * Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.
     *
     * Hash: 0x31B927BBC44156CD | Since: 323
     */
    function setIsConsideredByPlayer(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBE5C1255A1830FF5 | Since: 323
     */
    function setWillForceOtherVehiclesToStop(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9BECD4B9FEF3F8A6 | Since: 323
     */
    function setActAsIfHasSirenOn(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x88BC673CA9E0AE99 | Since: 323
     */
    function setUseMoreRestrictiveSpawnChecks(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xE851E480B814D4BA | Since: 323
     */
    function setMayBeUsedByGotoPointAnyMeans(vehicle: number | Vehicle): void;
    /**
     * Not present in the retail version! It's just a nullsub.
     *
     * p0 always true (except in one case)
     * successIndicator: 0 if success, -1 if failed
     *
     * Hash: 0x055BF0AC0C34F4FD | Since: 323
     */
    function getRandomModelInMemory(): [number, number];
    /**
     * enum VehicleLockStatus = {
     * None = 0,
     * Unlocked = 1,
     * Locked = 2,
     * LockedForPlayer = 3,
     * StickPlayerInside = 4, -- Doesn't allow players to exit the vehicle with the exit vehicle key.
     * CanBeBrokenInto = 7, -- Can be broken into the car. If the glass is broken, the value will be set to 1
     * CanBeBrokenIntoPersist = 8, -- Can be broken into persist
     * CannotBeTriedToEnter = 10, -- Cannot be tried to enter (Nothing happens when you press the vehicle enter key).
     * }
     *
     * Hash: 0x25BC98A59C2EA962 | Since: 323
     */
    function getDoorLockStatus(vehicle: number | Vehicle): number;
    /**
     * Returns vehicle door lock state previously set with SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED
     *
     * Hash: 0xCA4AC3EAAE46EC7B | Since: 1103
     */
    function getIndividualDoorLockStatus(vehicle: number | Vehicle, doorId: number): number;
    /**
     * doorID starts at 0, not seeming to skip any numbers. Four door vehicles intuitively range from 0 to 3.
     *
     * Hash: 0xB8E181E559464527 | Since: 323
     */
    function isDoorDamaged(veh: number | Vehicle, doorID: number): boolean;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0x2FA133A4A9D37ED8 | Since: 323
     */
    function setDoorAllowedToBeBrokenOff(vehicle: number | Vehicle, doorId: number, isBreakable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x27B926779DEB502D | Since: 323
     */
    function isBumperBouncing(vehicle: number | Vehicle, frontBumper: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x468056A6BB6F3846 | Since: 323
     */
    function isBumperBrokenOff(vehicle: number | Vehicle, frontBumper: boolean): boolean;
    /**
     * Usage:
     *
     * public bool isCopInRange(Vector3 Location, float Range)
     * {
     * return Function.Call<bool>(Hash.IS_COP_PED_IN_AREA_3D, Location.X - Range, Location.Y - Range, Location.Z - Range, Location.X + Range, Location.Y + Range, Location.Z + Range);
     * }
     *
     * Hash: 0x7EEF65D5F153E26A | Since: 323
     */
    function isCopInArea3d(x1: number, x2: number, y1: number, y2: number, z1: number, z2: number): boolean;
    /**
     * Public Function isVehicleOnAllWheels(vh As Vehicle) As Boolean
     * Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_ON_ALL_WHEELS, vh)
     * End Function
     *
     *
     * Hash: 0xB104CD1BABF302E2 | Since: 323
     */
    function isOnAllWheels(vehicle: number | Vehicle): boolean;
    /**
     * Returns `nMonetaryValue` from handling.meta for specific model.
     *
     * Hash: 0x5873C14A52D74236 | Since: 463
     */
    function getModelValue(vehicleModel: number | string): number;
    /**
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0x28D37D4F71AC5C58 | Since: 323
     */
    function getLayoutHash(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xA01BC64DD4BFBBAC | Since: 323
     */
    function getInClipsetHashForSeat(vehicle: number | Vehicle): number;
    /**
     * Makes the train all jumbled up and derailed as it moves on the tracks (though that wont stop it from its normal operations)
     *
     * Hash: 0x317B11A312DF5534 | Since: 323
     */
    function setRenderTrainAsDerailed(train: number | Vehicle, toggle: boolean): void;
    /**
     * They use the same color indexs as SET_VEHICLE_COLOURS.
     *
     * Hash: 0x2036F561ADD12E33 | Since: 323
     */
    function setExtraColours(vehicle: number | Vehicle, pearlescentColor: number, wheelColor: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3BC4245933A166F7 | Since: 323
     */
    function getExtraColours(vehicle: number | Vehicle): [number, number];
    /**
     * No comment provided
     *
     * Hash: 0xF40DD601A65F7F19 | Since: 505
     */
    function setExtraColour5(vehicle: number | Vehicle, color: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x7D1464D472D32136 | Since: 505
     */
    function getExtraColour5(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x6089CDF6A57F326C | Since: 505
     */
    function setExtraColour6(vehicle: number | Vehicle, color: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB7635E80A5C31BFF | Since: 505
     */
    function getExtraColour6(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x0F87E938BDF29D66 | Since: 323
     */
    function stopAllGarageActivity(): void;
    /**
     * This fixes a vehicle.
     * If the vehicle's engine's broken then you cannot fix it with this native.
     *
     * Hash: 0x115722B1B9C14C1C | Since: 323
     */
    function setFixed(vehicle: number | Vehicle): void;
    /**
     * This fixes the deformation of a vehicle but the vehicle health doesn't improve
     *
     * Hash: 0x953DA1E1B12C0491 | Since: 323
     */
    function setDeformationFixed(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x206BC5DC9D1AC70A | Since: 323
     */
    function setCanEngineMissfire(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x51BB2D88D31A914B | Since: 323
     */
    function setCanLeakOil(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x192547247864DFDD | Since: 323
     */
    function setCanLeakPetrol(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x465BF26AB9684352 | Since: 323
     */
    function setDisablePetrolTankFires(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x37C8252A7C92D017 | Since: 323
     */
    function setDisablePetrolTankDamage(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x91A0BD635321F145 | Since: 323
     */
    function setDisableEngineFires(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC50CE861B55EAB8B | Since: 323
     */
    function setLimitSpeedWhenPlayerInactive(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * sfink: sets bit in vehicle's structure, used by maintransition, fm_mission_controller, mission_race and a couple of other scripts. see dissassembly:
     * CVehicle *__fastcall sub_140CDAA10(signed int a1, char a2)
     * {
     * CVehicle *result; // rax@1
     *
     * result = EntityAsCVehicle(a1);
     * if ( result )
     * {
     * result->field_886 &= 0xEFu;
     * result->field_886 |= 16 * (a2 & 1);
     * }
     * return result;
     * }
     *
     * Hash: 0x6EBFB22D646FFC18 | Since: 323
     */
    function setStopInstantlyWhenPlayerInactive(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x25367DE49D64CF16 | Since: 323
     */
    function setDisablePretendOccupants(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x46A1E1A299EC4BBA | Since: 323
     */
    function removesFromGeneratorsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
    /**
     * Locks the vehicle's steering to the desired angle, explained below.
     *
     * Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.
     *
     * Steer bias:
     * -1.0 = full right
     * 0.0 = centered steering
     * 1.0 = full left
     *
     * Hash: 0x42A8EC77D5150CBE | Since: 323
     */
    function setSteerBias(vehicle: number | Vehicle, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xD2E6822DBFD6C8BD | Since: 323
     */
    function isExtraTurnedOn(vehicle: number | Vehicle, extraId: number): boolean;
    /**
     * Available extraIds are 1-14, however none of the vehicles have extras above 12.
     *
     * Hash: 0x7EE3A3C5E4A40CC9 | Since: 323
     */
    function setExtra(vehicle: number | Vehicle, extraId: number, disable: boolean): void;
    /**
     * Checks via CVehicleModelInfo
     *
     * Hash: 0x1262D55792428154 | Since: 323
     */
    function doesExtraExist(vehicle: number | Vehicle, extraId: number): boolean;
    /**
     * Returns true if specified extra part is broken off. It only works for extras that can break off during collisions, non-breakable extras always return false. Also returns true if the breakable extra is toggled off through script.
     *
     * Hash: 0x534E36D4DB9ECC5D | Since: 1493
     */
    function isExtraBrokenOff(vehicle: number | Vehicle, extraId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF39C4F538B5124C2 | Since: 323
     */
    function setConvertibleRoof(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xDED51F703D0FA83D | Since: 323
     */
    function lowerConvertibleRoof(vehicle: number | Vehicle, instantlyLower: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8F5FB35D7E88FC70 | Since: 323
     */
    function raiseConvertibleRoof(vehicle: number | Vehicle, instantlyRaise: boolean): void;
    /**
     * 0 -> up
     * 1 -> lowering down
     * 2 -> down
     * 3 -> raising up
     *
     * Hash: 0xF8C397922FC03F41 | Since: 323
     */
    function getConvertibleRoofState(vehicle: number | Vehicle): number;
    /**
     * Returns true if the vehicle has a convertible roof.
     *
     * p1 is false almost always. However, in launcher_carwash/carwash1/carwash2 scripts, p1 is true and is accompanied by DOES_VEHICLE_HAVE_ROOF. If p1 is true, it seems that every single vehicle will return true irrespective of being a convertible.
     *
     * Hash: 0x52F357A30698BCCE | Since: 323
     */
    function isAConvertible(vehicle: number | Vehicle): boolean;
    /**
     * Transforms the `stormberg`/`toreador` to its "submarine" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
     *
     * Hash: 0xBE4C854FFDB6EEBE | Since: 1365
     */
    function transformToSubmarine(vehicle: number | Vehicle, noAnimation: boolean): boolean;
    /**
     * Transforms the `stormberg`/`toreador` to its "road vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
     *
     * Hash: 0x2A69FFD1B42BFF9E | Since: 1290
     */
    function transformToCar(vehicle: number | Vehicle, noAnimation: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA77DC70BD689A1E5 | Since: 1290
     */
    function isInSubmarineMode(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2959F696AE390A99 | Since: 323
     */
    function isStoppedAtTrafficLights(vehicle: number | Vehicle): boolean;
    /**
     * Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
     *
     * Radius of effect damage applied in a sphere at impact location
     * When `focusOnModel` set to `true`, the damage sphere will travel towards the vehicle from the given point, thus guaranteeing an impact
     *
     * Hash: 0xA1DD317EA8FD4F29 | Since: 323
     */
    function setDamage(vehicle: number | Vehicle, xOffset: number, yOffset: number, zOffset: number, damage: number, radius: number, focusOnModel: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x35BB21DE06784373 | Since: 463
     */
    function setOccupantsTakeExplosiveDamage(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.
     *
     * Minimum: -4000
     * Maximum: 1000
     *
     * -4000: Engine is destroyed
     * 0 and below: Engine catches fire and health rapidly declines
     * 300: Engine is smoking and losing functionality
     * 1000: Engine is perfect
     *
     * Hash: 0xC45D23BAF168AAB8 | Since: 323
     */
    function getEngineHealth(vehicle: number | Vehicle): number;
    /**
     * 1000 is max health
     * Begins leaking gas at around 650 health
     * Minimum: -4000
     * Maximum: 1000
     *
     * -4000: Engine is destroyed
     * 0 and below: Engine catches fire and health rapidly declines
     * 300: Engine is smoking and losing functionality
     * 1000: Engine is perfect
     *
     * Hash: 0x45F6D8EEF34ABEF1 | Since: 323
     */
    function setEngineHealth(vehicle: number | Vehicle, health: number): void;
    /**
     * Works just like SET_VEHICLE_ENGINE_HEALTH, but only for planes.
     *
     * Hash: 0x2A86A0475B6A1434 | Since: 1103
     */
    function setPlaneEngineHealth(vehicle: number | Vehicle, health: number): void;
    /**
     * 1000 is max health
     * Begins leaking gas at around 650 health
     * -999.90002441406 appears to be minimum health, although nothing special occurs
     *
     * Hash: 0x7D5DABE888D2D074 | Since: 323
     */
    function getPetrolTankHealth(vehicle: number | Vehicle): number;
    /**
     * 1000 is max health
     * Begins leaking gas at around 650 health
     * -999.90002441406 appears to be minimum health, although nothing special occurs
     *
     * Hash: 0x70DB57649FA8D0D8 | Since: 323
     */
    function setPetrolTankHealth(vehicle: number | Vehicle, health: number): void;
    /**
     * p1 can be anywhere from 0 to 3 in the scripts.
     * p2 being how long in milliseconds the vehicle has been stuck
     *
     * Hash: 0x679BE1DAF71DA874 | Since: 323
     */
    function isStuckTimerUp(vehicle: number | Vehicle, ms: number): boolean;
    /**
     * The inner function has a switch on the second parameter. It's the stuck timer index.
     *
     * Here's some pseudo code I wrote for the inner function:
     * void __fastcall NATIVE_RESET_VEHICLE_STUCK_TIMER_INNER(CUnknown* unknownClassInVehicle, int timerIndex)
     * {
     * switch (timerIndex)
     * {
     * case 0:
     * unknownClassInVehicle->FirstStuckTimer = (WORD)0u;
     * case 1:
     * unknownClassInVehicle->SecondStuckTimer = (WORD)0u;
     * case 2:
     * unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;
     * case 3:
     * unknownClassInVehicle->FourthStuckTimer = (WORD)0u;
     * case 4:
     * unknownClassInVehicle->FirstStuckTimer = (WORD)0u;
     * unknownClassInVehicle->SecondStuckTimer = (WORD)0u;
     * unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;
     * unknownClassInVehicle->FourthStuckTimer = (WORD)0u;
     * break;
     * };
     * }
     *
     * Hash: 0xD7591B0065AFAA7A | Since: 323
     */
    function resetStuckTimer(vehicle: number | Vehicle, nullAttributes: number): void;
    /**
     * p1 is always 0 in the scripts.
     *
     * p1 = check if vehicle is on fire
     *
     * Hash: 0x4C241E39B23DF959 | Since: 323
     */
    function isDriveable(vehicle: number | Vehicle, isOnFireCheck: boolean): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2B5F9D2AF1F1722D | Since: 323
     */
    function setHasBeenOwnedByPlayer(vehicle: number | Vehicle, owned: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xFBA550EA44404EE6 | Since: 323
     */
    function setNeedsToBeHotwired(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9F3F689B814F2599 | Since: 323
     */
    function setBlipThrottleRandomly(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x4E74E62E0A97E901 | Since: 323
     */
    function setPoliceFocusWillTrack(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Sounds the horn for the specified vehicle.
     *
     * vehicle: The vehicle to activate the horn for.
     * mode: The hash of "NORMAL" or "HELDDOWN". Can be 0.
     * duration: The duration to sound the horn, in milliseconds.
     *
     * Note: If a player is in the vehicle, it will only sound briefly.
     *
     * Hash: 0x9C8C6504B5B63D2C | Since: 323
     */
    function startHorn(vehicle: number | Vehicle, duration: number, mode: number | string, forever: boolean): void;
    /**
     * If set to TRUE, it seems to suppress door noises and doesn't allow the horn to be continuous.
     *
     * Hash: 0x9D44FCCE98450843 | Since: 323
     */
    function setInCarModShop(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * if true, axles won't bend.
     *
     * Hash: 0x92F0CF722BC4202F | Since: 323
     */
    function setHasStrongAxles(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Returns model name of vehicle in all caps. Needs to be displayed through localizing text natives to get proper display name.
     * -----------------------------------------------------------------------------------------------------------------------------------------
     * While often the case, this does not simply return the model name of the vehicle (which could be hashed to return the model hash). Variations of the same vehicle may also use the same display name.
     * -----------------------------------------------------------------------------------------------------------------------------------------
     *
     * Returns "CARNOTFOUND" if the hash doesn't match a vehicle hash.
     *
     * `Using HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION, you can get the localized name.`
     *
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0xB215AAC32D25D019 | Since: 323
     */
    function getDisplayNameFromModel(modelHash: number | string): string;
    /**
     * Will return a vehicle's manufacturer display label.
     * Returns "CARNOTFOUND" if the hash doesn't match a vehicle hash.
     *
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0xF7AF4F159FF99F97 | Since: 1868
     */
    function getMakeNameFromModel(modelHash: number | string): string;
    /**
     * The only example I can find of this function in the scripts, is this:
     *
     * `struct _s = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(rPtr((A_0) + 4), 1.21f, 6.15f, 0.3f);`
     *
     * -----------------------------------------------------------------------------------------------------------------------------------------
     * PC scripts:
     *
     * `v_5\/\*{3}\*\/ = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(a_0._f1, 1.21, 6.15, 0.3);`
     *
     * Hash: 0x4EC6CFBC7B2E9536 | Since: 323
     */
    function getDeformationAtPos(vehicle: number | Vehicle, offsetX: number, offsetY: number, offsetZ: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x60BF608F1B8CD1B6 | Since: 323
     */
    function setLivery(vehicle: number | Vehicle, livery: number): void;
    /**
     * -1 = no livery
     *
     * Hash: 0x2BB9230590DA5E8A | Since: 323
     */
    function getLivery(vehicle: number | Vehicle): number;
    /**
     * Returns -1 if the vehicle has no livery
     *
     * Hash: 0x87B63E25A529D526 | Since: 323
     */
    function getLiveryCount(vehicle: number | Vehicle): number;
    /**
     * Used to set the secondary livery (the roof on Tornado Custom being one such example.)
     *
     * Livery value is dependent on the amount of liveries present in the vehicle's texture dictionary, for Tornado Custom this would be 0-6.
     *
     * Hash: 0xA6D3A8750DC73270 | Since: 505
     */
    function setLivery2(vehicle: number | Vehicle, livery: number): void;
    /**
     * Returns index of the current vehicle's secondary livery. A getter for SET_VEHICLE_LIVERY2.
     *
     * Hash: 0x60190048C0764A26 | Since: 505
     */
    function getLivery2(vehicle: number | Vehicle): number;
    /**
     * Returns a number of available secondary liveries, or -1 if vehicle has no secondary liveries available.
     *
     * Hash: 0x5ECB40269053C0D4 | Since: 505
     */
    function getLivery2Count(vehicle: number | Vehicle): number;
    /**
     * This will return false if the window is broken, or rolled down.
     * Window indexes:
     * 0 = Front Right Window
     * 1 = Front Left Window
     * 2 = Back Right Window
     * 3 = Back Left Window
     *
     *
     * Those numbers go on for vehicles that have more than 4 doors with windows.
     *
     * Hash: 0x46E571A0E20D01F1 | Since: 323
     */
    function isWindowIntact(vehicle: number | Vehicle, windowIndex: number): boolean;
    /**
     * Appears to return false if any window is broken.
     *
     * Hash: 0x11D862A3E977A9EF | Since: 323
     */
    function areAllWindowsIntact(vehicle: number | Vehicle): boolean;
    /**
     * Returns false if every seat is occupied.
     *
     * Hash: 0x2D34FC3BC4ADB780 | Since: 323
     */
    function areAnySeatsFree(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x21D2E5662C1F6FED | Since: 323
     */
    function resetWheels(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC74B4BE25EB6C8A | Since: 323
     */
    function isHeliPartBroken(vehicle: number | Vehicle): boolean;
    /**
     * Max 1000.
     * At 0 the main rotor will stall.
     *
     * Hash: 0xE4CB7541F413D2C5 | Since: 323
     */
    function getHeliMainRotorHealth(vehicle: number | Vehicle): number;
    /**
     * Max 1000.
     * At 0 the tail rotor will stall.
     *
     * Hash: 0xAE8CE82A4219AC8C | Since: 323
     */
    function getHeliTailRotorHealth(vehicle: number | Vehicle): number;
    /**
     * Max 1000.
     * At -100 both helicopter rotors will stall.
     *
     * Hash: 0xAC51915D27E4A5F7 | Since: 323
     */
    function getHeliTailBoomHealth(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x4056EA1105F5ABD7 | Since: 463
     */
    function setHeliMainRotorHealth(vehicle: number | Vehicle, health: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFE205F38AAA58E5B | Since: 463
     */
    function setHeliTailRotorHealth(vehicle: number | Vehicle, health: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x3EC8BF18AA453FE9 | Since: 323
     */
    function setHeliTailBoomCanBreakOff(vehicle: number | Vehicle, toggle: boolean): boolean;
    /**
     * NOTE: Debugging functions are not present in the retail version of the game.
     *
     * Hash: 0xBFDF984E2C22B94F | Since: 323
     */
    function setNameDebug(vehicle: number | Vehicle, name: string): void;
    /**
     * Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.
     *
     * Hash: 0x71B0892EC081D60A | Since: 323
     */
    function setExplodesOnHighExplosionDamage(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xD565F438137F0E10 | Since: 1103
     */
    function setExplodesOnExplosionDamageAtZeroBodyHealth(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3441CAD2F2231923 | Since: 323
     */
    function setAllowExplodesOnContact(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2B6747FAA9DB9D6B | Since: 323
     */
    function setDisableTowing(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE43701C36CAFF1A4 | Since: 1180
     */
    function getHasLandingGear(vehicle: number | Vehicle): boolean;
    /**
     * Works for vehicles with a retractable landing gear
     *
     * Landing gear states:
     *
     * 0: Deployed
     * 1: Closing
     * 2: Opening
     * 3: Retracted
     *
     * Hash: 0xCFC8BE9A5E1FE575 | Since: 323
     */
    function controlLandingGear(vehicle: number | Vehicle, state: number): void;
    /**
     * Landing gear states:
     *
     * 0: Deployed
     * 1: Closing (Retracting)
     * 2: (Landing gear state 2 is never used.)
     * 3: Opening (Deploying)
     * 4: Retracted
     *
     * Returns the current state of the vehicles landing gear.
     *
     * Hash: 0x9B0F3DCA3DB0F4CD | Since: 323
     */
    function getLandingGearState(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x61E1DD6125A3EEE6 | Since: 323
     */
    function isAnyNearPoint(pos: Vector3, radius: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA6E9FDCB2C76785E | Since: 323
     */
    function requestHighDetailModel(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x61F02E4E9A7A61EA | Since: 3095
     */
    function getModelNumDriveGears(vehicleModel: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x24910C3D66BA770D | Since: 3095
     */
    function getMaxDriveGearCount(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x1FCB07FE230B6639 | Since: 3258
     */
    function getIsElectric(vehicleModel: number | string): boolean;
    /**
     * Returns the vehicle's drivetrain type.
     *
     * enum eVehicleDrivetrainType
     * {
     * VehicleDrivetrainType_INVALID,
     * VehicleDrivetrainType_FWD,
     * VehicleDrivetrainType_RWD,
     * VehicleDrivetrainType_AWD
     * };
     *
     * _GET_VEHICLE_DE* - _GET_VEHICLE_DI*
     *
     * Hash: 0x1423725069EE1D14 | Since: 3258
     */
    function getDrivetrainType(vehicleModel: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x56185A25D45A0DCD | Since: 3095
     */
    function getCurrentDriveGear(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xF9DDA40BC293A61E | Since: 3095
     */
    function getCurrentRevRatio(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x00689CDE5F7C6787 | Since: 323
     */
    function removeHighDetailModel(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F25887F3C104278 | Since: 323
     */
    function isHighDetail(vehicle: number | Vehicle): boolean;
    /**
     * REQUEST_VEHICLE_ASSET(GET_HASH_KEY(cargobob3), 3);
     *
     * vehicle found that have asset's:
     * cargobob3
     * submersible
     * blazer
     *
     * Hash: 0x81A15811460FAB3A | Since: 323
     */
    function requestAsset(vehicleHash: number | string, vehicleAsset: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1BBE0523B8DB9A21 | Since: 323
     */
    function hasAssetLoaded(vehicleAsset: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xACE699C71AB9DEB5 | Since: 323
     */
    function removeAsset(vehicleAsset: number): void;
    /**
     * Sets how much the crane on the tow truck is raised, where 0.0 is fully lowered and 1.0 is fully raised.
     *
     * Hash: 0xFE54B92A344583CA | Since: 323
     */
    function setTowTruckArmPosition(vehicle: number | Vehicle, position: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x48BD57D0DD17786A | Since: 3095
     */
    function setAttachedToTowTruckArm(towTruck: number | Vehicle, vehicle: number | Vehicle): void;
    /**
     * HookOffset defines where the hook is attached. leave at 0 for default attachment.
     *
     * Hash: 0x29A16F8D621C4508 | Since: 323
     */
    function attachToTowTruck(towTruck: number | Vehicle, vehicle: number | Vehicle, rear: boolean, hookOffsetX: number, hookOffsetY: number, hookOffsetZ: number): void;
    /**
     * First two parameters swapped. Scripts verify that towTruck is the first parameter, not the second.
     *
     * Hash: 0xC2DB6B6708350ED8 | Since: 323
     */
    function detachFromTowTruck(towTruck: number | Vehicle, vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xD0E9CE05A1E68CD8 | Since: 323
     */
    function detachFromAnyTowTruck(vehicle: number | Vehicle): boolean;
    /**
     * Scripts verify that towTruck is the first parameter, not the second.
     *
     * Hash: 0x146DF9EC4C4B9FD4 | Since: 323
     */
    function isAttachedToTowTruck(towTruck: number | Vehicle, vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEFEA18DCF10F8F75 | Since: 323
     */
    function getEntityAttachedToTowTruck(towTruck: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x8BA6F76BC53A1493 | Since: 323
     */
    function setAutomaticallyAttaches(vehicle: number | Vehicle): number;
    /**
     * Sets the arm position of a bulldozer. Position must be a value between 0.0 and 1.0. Ignored when `p2` is set to false, instead incrementing arm position by 0.1 (or 10%).
     *
     * Hash: 0xF8EBCCC96ADB9FB7 | Since: 323
     */
    function setBulldozerArmPosition(vehicle: number | Vehicle, position: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x56B94C6D7127DFBA | Since: 323
     */
    function setTankTurretPosition(vehicle: number | Vehicle, position: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0581730AB9380412 | Since: 1103
     */
    function setTurretTarget(vehicle: number | Vehicle, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0x737E398138550FFF | Since: 944
     */
    function setTankStationary(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x1093408B4B9D1146 | Since: 323
     */
    function setTurretSpeedThisFrame(vehicle: number | Vehicle, speed: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x32CAEDF24A583345 | Since: 463
     */
    function disableTurretMovementThisFrame(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x30D779DE7C4F6DD3 | Since: 323
     */
    function setFlightNozzlePosition(vehicle: number | Vehicle, angleRatio: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9AA47FFF660CB932 | Since: 323
     */
    function setFlightNozzlePositionImmediate(vehicle: number | Vehicle, angle: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDA62027C8BDB326E | Since: 1180
     */
    function getFlightNozzlePosition(plane: number | Vehicle): number;
    /**
     * True stops vtols from switching modes. Doesn't stop the sound though.
     *
     * Hash: 0xCE2B43770B655F8F | Since: 1290
     */
    function setDisableVerticalFlightModeTransition(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA4822F1CF23F4810 | Since: 323
     */
    function generateCreationPosFromPaths(): [boolean, Vector3, Vector3];
    /**
     * On accelerating, spins the driven wheels with the others braked, so you don't go anywhere.
     *
     * Hash: 0xFB8794444A7D60FB | Since: 323
     */
    function setBurnout(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Returns whether the specified vehicle is currently in a burnout.
     *
     *
     * vb.net
     * Public Function isVehicleInBurnout(vh As Vehicle) As Boolean
     * Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_IN_BURNOUT, vh)
     * End Function
     *
     * Hash: 0x1297A88E081430EB | Since: 323
     */
    function isInBurnout(vehicle: number | Vehicle): boolean;
    /**
     * Reduces grip significantly so it's hard to go anywhere.
     *
     * Hash: 0x222FF6A823D122E2 | Since: 323
     */
    function setReduceGrip(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * val is 0-3
     * Often used in conjunction with: SET_VEHICLE_REDUCE_GRIP
     *
     * Hash: 0x6DEE944E1EE90CFB | Since: 1604
     */
    function setReduceGripLevel(vehicle: number | Vehicle, val: number): void;
    /**
     * Sets the turn signal enabled for a vehicle.
     * Set turnSignal to 1 for left light, 0 for right light.
     *
     * Hash: 0xB5D45264751B7DF0 | Since: 323
     */
    function setIndicatorLights(vehicle: number | Vehicle, turnSignal: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x92B35082E0B42F66 | Since: 323
     */
    function setBrakeLights(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x5815BD2763178DF4 | Since: 2802
     */
    function setTailLights(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x684785568EF26A22 | Since: 323
     */
    function setHandbrake(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE4E2FD323574965C | Since: 757
     */
    function setBrake(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x48ADC8A773564670 | Since: 323
     */
    function instantlyFillPopulation(): void;
    /**
     * No comment provided
     *
     * Hash: 0x91D6DD290888CBAB | Since: 323
     */
    function hasInstantFillPopulationFinished(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x51DB102F4A3BA5E0 | Since: 323
     */
    function networkEnableEmptyCrowdingsRemoval(toggle: boolean): void;
    /**
     * Default:1000||This sets a value which is used when NETWORK_ENABLE_EMPTY_CROWDING_VEHICLES_REMOVAL(true) is called each frame.
     *
     * Hash: 0xA4A9A4C40E615885 | Since: 1604
     */
    function networkCapEmptyCrowdingsRemoval(): void;
    /**
     * Gets the trailer of a vehicle and puts it into the trailer parameter.
     *
     * Hash: 0x1CDD6BADC297830D | Since: 323
     */
    function getTrailerVehicle(vehicle: number | Vehicle): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x80D9D32636369C92 | Since: 2802
     */
    function getTrailerParentVehicle(trailer: number | Vehicle): number;
    /**
     * vehicle must be a plane
     *
     * Hash: 0xCAC66558B944DA67 | Since: 323
     */
    function setUsesLargeRearRamp(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x09606148B6C71DEF | Since: 323
     */
    function setRudderBroken(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1A78AD3D8240536F | Since: 323
     */
    function setConvertibleRoofLatchState(vehicle: number | Vehicle, state: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x53AF99BAA671CA47 | Since: 323
     */
    function getEstimatedMaxSpeed(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xAD7E85FC227197C4 | Since: 323
     */
    function getMaxBraking(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xA132FB5370554DB0 | Since: 323
     */
    function getMaxTraction(vehicle: number | Vehicle): number;
    /**
     * static - max acceleration
     *
     * Hash: 0x5DD35C8D074E57AE | Since: 323
     */
    function getAcceleration(vehicle: number | Vehicle): number;
    /**
     * Returns max speed (without mods) of the specified vehicle model in m/s.
     *
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0xF417C2502FFFED43 | Since: 323
     */
    function getModelEstimatedMaxSpeed(modelHash: number | string): number;
    /**
     * Returns max braking of the specified vehicle model.
     *
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0xDC53FD41B4ED944C | Since: 323
     */
    function getModelMaxBraking(modelHash: number | string): number;
    /**
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0xBFBA3BA79CFF7EBF | Since: 323
     */
    function getModelMaxBrakingMaxMods(modelHash: number | string): number;
    /**
     * Returns max traction of the specified vehicle model.
     *
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0x539DE94D44FDFD0D | Since: 323
     */
    function getModelMaxTraction(modelHash: number | string): number;
    /**
     * Returns the acceleration of the specified model.
     *
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0x8C044C5C84505B6A | Since: 323
     */
    function getModelAcceleration(modelHash: number | string): number;
    /**
     * 9.8 * thrust if air vehicle, else 0.38 + drive force?
     *
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0x53409B5163D5B846 | Since: 323
     */
    function getModelAccelerationMaxMods(modelHash: number | string): number;
    /**
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0xC6AD107DDC9054CC | Since: 323
     */
    function getFlyingModelAgility(modelHash: number | string): number;
    /**
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0x5AA3F878A178C4FC | Since: 323
     */
    function getBoatModelAgility(modelHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x00C09F246ABEDD82 | Since: 323
     */
    function getClassEstimatedMaxSpeed(vehicleClass: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xDBC86D85C5059461 | Since: 323
     */
    function getClassMaxTraction(vehicleClass: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x4F930AD022D6DE3B | Since: 323
     */
    function getClassMaxAgility(vehicleClass: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x2F83E7E45D9EA7AE | Since: 323
     */
    function getClassMaxAcceleration(vehicleClass: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x4BF54C16EC8FEC03 | Since: 323
     */
    function getClassMaxBraking(vehicleClass: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x2CE544C68FB812A0 | Since: 323
     */
    function addRoadNodeSpeedZone(pos: Vector3, radius: number, speed: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x1033371FC8E842A7 | Since: 323
     */
    function removeRoadNodeSpeedZone(speedzone: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x87E7F24270732CB1 | Since: 323
     */
    function openBombBayDoors(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x3556041742A0DC74 | Since: 323
     */
    function closeBombBayDoors(vehicle: number | Vehicle): void;
    /**
     * Returns true when the bomb bay doors of this plane are open. False if they're closed.
     *
     * Hash: 0xD0917A423314BBA8 | Since: 1180
     */
    function getAreBombBayDoorsOpen(aircraft: number | Vehicle): boolean;
    /**
     * Possibly: Returns whether the searchlight (found on police vehicles) is toggled on.
     *
     * @Author Nac
     *
     * Hash: 0xC0F97FCE55094987 | Since: 323
     */
    function isSearchlightOn(vehicle: number | Vehicle): boolean;
    /**
     * Only works during nighttime.
     *
     * Hash: 0x14E85C5EE7A4D542 | Since: 323
     */
    function setSearchlight(heli: number | Vehicle, toggle: boolean, canBeUsedByAI: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x99015ED7DBEA5113 | Since: 2189
     */
    function doesHaveSearchlight(vehicle: number | Vehicle): boolean;
    /**
     * Check if a vehicle seat is accessible. If you park your vehicle near a wall and the ped cannot enter/exit this side, the return value toggles from true (not blocked) to false (blocked).
     *
     * seatIndex  = -1 being the driver seat.
     * Use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 for last seat index.
     * side = only relevant for bikes/motorcycles to check if the left (false)/right (true) side is blocked.
     * onEnter = check if you can enter (true) or exit (false) a vehicle.
     *
     * Hash: 0x639431E895B9AA57 | Since: 323
     */
    function isEntryPointForSeatClear(ped: number | Ped, vehicle: number | Vehicle, seatIndex: number, side: boolean, onEnter: boolean): boolean;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0xC0572928C0ABFDA3 | Since: 944
     */
    function getEntryPointPosition(vehicle: number | Vehicle, doorId: number): Vector3;
    /**
     * No comment provided
     *
     * Hash: 0x30785D90C956BF35 | Since: 323
     */
    function canShuffleSeat(vehicle: number | Vehicle, seatIndex: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x33F2E3FE70EAAE1D | Since: 323
     */
    function getNumModKits(vehicle: number | Vehicle): number;
    /**
     * Set modKit to 0 if you plan to call SET_VEHICLE_MOD. That's what the game does. Most body modifications through SET_VEHICLE_MOD will not take effect until this is set to 0.
     *
     * Full list of vehicle mod kits and mods by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleModKits.json
     *
     * Hash: 0x1F2AA07F00B3217A | Since: 323
     */
    function setModKit(vehicle: number | Vehicle, modKit: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x6325D1A044AE510D | Since: 323
     */
    function getModKit(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0xFC058F5121E54C32 | Since: 323
     */
    function getModKitType(vehicle: number | Vehicle): number;
    /**
     * Returns an int
     *
     * Wheel Types:
     * 0: Sport
     * 1: Muscle
     * 2: Lowrider
     * 3: SUV
     * 4: Offroad
     * 5: Tuner
     * 6: Bike Wheels
     * 7: High End
     * 8: Benny's Originals
     * 9: Benny's Bespoke
     * 10: Racing
     * 11: Street
     * 12: Track
     *
     * Tested in Los Santos Customs
     *
     * Hash: 0xB3ED1BFB4BE636DC | Since: 323
     */
    function getWheelType(vehicle: number | Vehicle): number;
    /**
     * 0: Sport
     * 1: Muscle
     * 2: Lowrider
     * 3: SUV
     * 4: Offroad
     * 5: Tuner
     * 6: Bike Wheels
     * 7: High End
     * 8: Benny's Originals
     * 9: Benny's Bespoke
     * 10: Racing
     * 11: Street
     * 12: Track
     *
     * Hash: 0x487EB21CC7295BA1 | Since: 323
     */
    function setWheelType(vehicle: number | Vehicle, WheelType: number): void;
    /**
     * paintType:
     * 0: Normal
     * 1: Metallic
     * 2: Pearl
     * 3: Matte
     * 4: Metal
     * 5: Chrome
     * 6: Chameleon
     *
     * Hash: 0xA551BE18C11A476D | Since: 323
     */
    function getNumModColors(paintType: number): number;
    /**
     * paintType:
     * 0: Normal
     * 1: Metallic
     * 2: Pearl
     * 3: Matte
     * 4: Metal
     * 5: Chrome
     * 6: Chameleon
     *
     * color: number of the color.
     *
     * p3 seems to always be 0.
     *
     * Full list of vehicle colors and vehicle plates by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleColors.json
     *
     * Hash: 0x43FEB945EE7F85B8 | Since: 323
     */
    function setModColor1(vehicle: number | Vehicle, paintType: number, color: number, pearlescentColor: number): void;
    /**
     * Changes the secondary paint type and color
     * paintType:
     * 0: Normal
     * 1: Metallic
     * 2: Pearl
     * 3: Matte
     * 4: Metal
     * 5: Chrome
     * 6: Chameleon
     *
     * color: number of the color
     *
     * Full list of vehicle colors and vehicle plates by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleColors.json
     *
     * Hash: 0x816562BADFDEC83E | Since: 323
     */
    function setModColor2(vehicle: number | Vehicle, paintType: number, color: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xE8D65CA700C9A693 | Since: 323
     */
    function getModColor1(vehicle: number | Vehicle): [number, number, number];
    /**
     * No comment provided
     *
     * Hash: 0x81592BE4E3878728 | Since: 323
     */
    function getModColor2(vehicle: number | Vehicle): [number, number];
    /**
     * Returns a string which is the codename of the vehicle's currently selected primary color
     *
     * p1 is always 0
     *
     * Hash: 0xB45085B721EFD38C | Since: 323
     */
    function getModColor1Name(vehicle: number | Vehicle): string;
    /**
     * Returns a string which is the codename of the vehicle's currently selected secondary color
     *
     * Hash: 0x4967A516ED23A5A1 | Since: 323
     */
    function getModColor2Name(vehicle: number | Vehicle): string;
    /**
     * No comment provided
     *
     * Hash: 0x9A83F5F9963775EF | Since: 323
     */
    function haveModsStreamedIn(vehicle: number | Vehicle): boolean;
    /**
     * Returns true for any mod part listed in GEN9_EXCLUSIVE_ASSETS_VEHICLES_FILE.
     *
     * Hash: 0x00834EAC4A96E010 | Since: 2699
     */
    function isModGen9Exclusive(vehicle: number | Vehicle, modType: number, modIndex: number): boolean;
    /**
     * In b944, there are 50 (0 - 49) mod types.
     *
     * Sets the vehicle mod.
     * The vehicle must have a mod kit first.
     *
     * Any out of range ModIndex is stock.
     *
     * #Mod Type
     * Spoilers - 0
     * Front Bumper - 1
     * Rear Bumper - 2
     * Side Skirt - 3
     * Exhaust - 4
     * Frame - 5
     * Grille - 6
     * Hood - 7
     * Fender - 8
     * Right Fender - 9
     * Roof - 10
     * Engine - 11
     * Brakes - 12
     * Transmission - 13
     * Horns - 14 (modIndex from 0 to 51)
     * Suspension - 15
     * Armor - 16
     * Front Wheels - 23
     * Back Wheels - 24 //only for motocycles
     * Plate holders - 25
     * Trim Design - 27
     * Ornaments - 28
     * Dial Design - 30
     * Steering Wheel - 33
     * Shifter Leavers - 34
     * Plaques - 35
     * Hydraulics - 38
     * Livery - 48
     *
     * ENUMS: https://pastebin.com/QzEAn02v
     *
     * Hash: 0x6AF0636DDEDCB6DD | Since: 323
     */
    function setMod(vehicle: number | Vehicle, modType: number, modIndex: number, customTires: boolean): void;
    /**
     * In b944, there are 50 (0 - 49) mod types. See SET_VEHICLE_MOD for the list.
     *
     * Returns -1 if the vehicle mod is stock
     *
     * Hash: 0x772960298DA26FDB | Since: 323
     */
    function getMod(vehicle: number | Vehicle, modType: number): number;
    /**
     * Only used for wheels(ModType = 23/24) Returns true if the wheels are custom wheels
     *
     * Hash: 0xB3924ECD70E095DC | Since: 323
     */
    function getModVariation(vehicle: number | Vehicle, modType: number): number;
    /**
     * Returns how many possible mods a vehicle has for a given mod type
     *
     * Hash: 0xE38E9162A2500646 | Since: 323
     */
    function getNumMods(vehicle: number | Vehicle, modType: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x92D619E420858204 | Since: 323
     */
    function removeMod(vehicle: number | Vehicle, modType: number): void;
    /**
     * Toggles:
     * UNK17 - 17
     * Turbo - 18
     * UNK19 - 19
     * Tire Smoke - 20
     * UNK21 - 21
     * Xenon Headlights - 22
     *
     * Hash: 0x2A1F4F37F95BAD08 | Since: 323
     */
    function toggleMod(vehicle: number | Vehicle, modType: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x84B233A8C8FC8AE7 | Since: 323
     */
    function isToggleModOn(vehicle: number | Vehicle, modType: number): boolean;
    /**
     * Returns the text label of a mod type for a given vehicle
     *
     * Use GET_FILENAME_FOR_AUDIO_CONVERSATION to get the part name in the game's language
     *
     * Hash: 0x8935624F8C5592CC | Since: 323
     */
    function getModTextLabel(vehicle: number | Vehicle, modType: number, modValue: number): string;
    /**
     * Returns the name for the type of vehicle mod(Armour, engine etc)
     *
     *
     * Hash: 0x51F0FEB9F6AE98C0 | Since: 323
     */
    function getModSlotName(vehicle: number | Vehicle, modType: number): string;
    /**
     * Returns the text label of the vehicle's liveryIndex, as specified by the liveryNames section of the vehicle's modkit data in the carcols file.
     *
     * example
     *
     * `int count = VEHICLE::GET_VEHICLE_LIVERY_COUNT(veh);`
     * for (int i = 0; i < count; i++)
     * {
     * `const char* LiveryName = VEHICLE::GET_LIVERY_NAME(veh, i);`
     * }
     *
     *
     * this example will work fine to fetch all names
     * for example for Sanchez we get
     *
     * SANC_LV1
     * SANC_LV2
     * SANC_LV3
     * SANC_LV4
     * SANC_LV5
     *
     *
     * Use GET_FILENAME_FOR_AUDIO_CONVERSATION, to get the localized livery name.
     *
     * Full list of vehicle mod kits and mods by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleModKits.json
     *
     * Hash: 0xB4C7A93837C91A1F | Since: 323
     */
    function getLiveryName(vehicle: number | Vehicle, liveryIndex: number): string;
    /**
     * No comment provided
     *
     * Hash: 0x90A38E9838E0A8C1 | Since: 323
     */
    function getModModifierValue(vehicle: number | Vehicle, modType: number, modIndex: number): number;
    /**
     * Can be used for IS_DLC_VEHICLE_MOD and GET_DLC_VEHICLE_MOD_LOCK_HASH
     *
     * Hash: 0x4593CF82AA179706 | Since: 323
     */
    function getModIdentifierHash(vehicle: number | Vehicle, modType: number, modIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x758F49C24925568A | Since: 323
     */
    function preloadMod(vehicle: number | Vehicle, modType: number, modIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x06F43E5175EB6D96 | Since: 323
     */
    function hasPreloadModsFinished(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x445D79F995508307 | Since: 323
     */
    function releasePreloadMods(vehicle: number | Vehicle): void;
    /**
     * Sets the tire smoke's color of this vehicle.
     *
     * vehicle: The vehicle that is the target of this method.
     * r: The red level in the RGB color code.
     * g: The green level in the RGB color code.
     * b: The blue level in the RGB color code.
     *
     * Note: setting r,g,b to 0 will give the car the "Patriot" tire smoke.
     *
     * Hash: 0xB5BA80F839791C0F | Since: 323
     */
    function setTyreSmokeColor(vehicle: number | Vehicle, r: number, g: number, b: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB635392A4938B3C3 | Since: 323
     */
    function getTyreSmokeColor(vehicle: number | Vehicle): [number, number, number];
    /**
     * enum WindowTints
     * {
     * WINDOWTINT_NONE,
     * WINDOWTINT_PURE_BLACK,
     * WINDOWTINT_DARKSMOKE,
     * WINDOWTINT_LIGHTSMOKE,
     * WINDOWTINT_STOCK,
     * WINDOWTINT_LIMO,
     * WINDOWTINT_GREEN
     * };
     * Full list of all vehicle window tints by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleColors.json
     *
     * Hash: 0x57C51E6BAD752696 | Since: 323
     */
    function setWindowTint(vehicle: number | Vehicle, tint: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0EE21293DAD47C95 | Since: 323
     */
    function getWindowTint(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x9D1224004B3A6707 | Since: 323
     */
    function getNumWindowTints(): number;
    /**
     * What's this for? Primary and Secondary RGB have their own natives and this one doesn't seem specific.
     *
     * Hash: 0xF3CC740D36221548 | Since: 323
     */
    function getColor(vehicle: number | Vehicle): [number, number, number];
    /**
     * Some kind of flags.
     *
     * Hash: 0xEEBFC7A7EFDC35B4 | Since: 323
     */
    function getColoursWhichCanBeSet(vehicle: number | Vehicle): number;
    /**
     * iVar3 = get_vehicle_cause_of_destruction(uLocal_248[iVar2]);
     * if (iVar3 == joaat("weapon_stickybomb"))
     * {
     * func_171(726);
     * iLocal_260 = 1;
     * }
     *
     * Hash: 0xE495D1EF4C91FD20 | Since: 323
     */
    function getCauseOfDestruction(vehicle: number | Vehicle): number;
    /**
     * Used for helis.
     *
     * Hash: 0x5EE5632F47AE9695 | Since: 463
     */
    function overridePlaneDamageThrehsold(vehicle: number | Vehicle, health: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x337EF33DA3DDB990 | Since: 3095
     */
    function setTransmissionReducedGearRatio(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xFD8CE53356B5D745 | Since: 3095
     */
    function getDesiredDriveGear(vehicle: number | Vehicle): number;
    /**
     * From the driver's perspective, is the left headlight broken.
     *
     * Hash: 0x5EF77C9ADD3B11A3 | Since: 323
     */
    function getIsLeftHeadlightDamaged(vehicle: number | Vehicle): boolean;
    /**
     * From the driver's perspective, is the right headlight broken.
     *
     * Hash: 0xA7ECB73355EB2F20 | Since: 323
     */
    function getIsRightHeadlightDamaged(vehicle: number | Vehicle): boolean;
    /**
     * Returns true when both headlights are broken. This does not include extralights.
     *
     * Hash: 0xEC69ADF931AAE0C3 | Since: 505
     */
    function getBothHeadlightsDamaged(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x93A3996368C94158 | Since: 323
     */
    function modifyTopSpeed(vehicle: number | Vehicle, value: number): void;
    /**
     * To reset the max speed, set the `speed` value to `0.0` or lower.
     *
     * Hash: 0xBAA045B4E42F3C06 | Since: 1103
     */
    function setMaxSpeed(vehicle: number | Vehicle, speed: number): void;
    /**
     * Has something to do with trains. Always precedes SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED.
     * May be true that it can be used with trains not sure, but not specifically for trains. Go find Xbox360 decompiled scripts and search for 'func_1333' in freemode.c it isn't used just for trains. Thanks for the info tho.
     *
     * Hash: 0x1CF38D529D7441D9 | Since: 323
     */
    function setStaysFrozenWhenCleanedUp(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F9FB66F3A3842D2 | Since: 323
     */
    function setActAsIfHighSpeedForFragSmashing(vehicle: number | Vehicle): void;
    /**
     * Sets some bit and float of vehicle. float is >= 0
     *
     * Hash: 0x59C3757B3B7408E8 | Since: 1493
     */
    function setPedsCanFallOffThisFromLargeFallDamage(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x54B0F614960F4A5F | Since: 323
     */
    function addCombatAngledAvoidanceArea(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE30524E1871F481D | Since: 323
     */
    function removeCombatAvoidanceArea(): void;
    /**
     * No comment provided
     *
     * Hash: 0x291E373D483E7EE7 | Since: 323
     */
    function isAnyPedRappellingFromHeli(vehicle: number | Vehicle): boolean;
    /**
     * <1.0 - Decreased torque
     * =1.0 - Default torque
     * >1.0 - Increased torque
     *
     * Negative values will cause the vehicle to go backwards instead of forwards while accelerating.
     *
     * value - is between 0.2 and 1.8 in the decompiled scripts.
     *
     * This needs to be called every frame to take effect.
     *
     * Hash: 0xB59E4BD37AE292DB | Since: 323
     */
    function setCheatPowerIncrease(vehicle: number | Vehicle, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0AD9E8F87FF7C16F | Since: 323
     */
    function setInfluencesWantedLevel(): void;
    /**
     * Sets the wanted state of this vehicle.
     *
     * Hash: 0xF7EC25A3EBEEC726 | Since: 323
     */
    function setIsWanted(vehicle: number | Vehicle, state: boolean): void;
    /**
     * Sets the boat boom position for the `TR3` trailer.
     * Ratio value is between `0.0` and `1.0`, where `0.0` is 90 degrees to the left of the boat, and `1.0` is just slightly to the right/back of the boat.
     * To get the current boom position ratio, use GET_BOAT_BOOM_POSITION_RATIO
     *
     * Hash: 0xF488C566413B4232 | Since: 323
     */
    function swingBoatBoomToRatio(vehicle: number | Vehicle, ratio: number): void;
    /**
     * Same call as ALLOW_BOAT_BOOM_TO_ANIMATE
     *
     * Hash: 0xC1F981A6F74F0C23 | Since: 323
     */
    function swingBoatBoomFreely(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0F3B4D4E43177236 | Since: 323
     */
    function allowBoatBoomToAnimate(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6636C535F6CC2725 | Since: 323
     */
    function getBoatBoomPositionRatio(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x23428FC53C60919C | Since: 323
     */
    function disablePlaneAileron(vehicle: number | Vehicle): void;
    /**
     * Returns true when in a vehicle, false whilst entering/exiting.
     *
     * Hash: 0xAE31E7DF9B5B132E | Since: 323
     */
    function getIsEngineRunning(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1D97D1E3A70A649F | Since: 323
     */
    function setUseAlternateHandling(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Only works on bikes, both X and Y work in the -1 - 1 range.
     *
     * X forces the bike to turn left or right (-1, 1)
     * Y forces the bike to lean to the left or to the right (-1, 1)
     *
     * Example with X -1/Y 1
     * http://i.imgur.com/TgIuAPJ.jpg
     *
     * Hash: 0x9CFA4896C3A53CBB | Since: 323
     */
    function setBikeOnStand(vehicle: number | Vehicle, x: number, y: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xAB04325045427AAE | Since: 323
     */
    function setNotStealableAmbiently(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xCFD778E7904C255E | Since: 323
     */
    function lockDoorsWhenNoLongerNeeded(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xACFB2463CC22BED2 | Since: 323
     */
    function setLastDriven(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xB2D06FAEDE65B577 | Since: 323
     */
    function getLastDriven(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE01903C47C7AC89E | Since: 323
     */
    function clearLastDriven(): void;
    /**
     * No comment provided
     *
     * Hash: 0x02398B627547189C | Since: 323
     */
    function setHasBeenDrivenFlag(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB893215D8D4C015B | Since: 323
     */
    function setTaskGotoPlaneMinHeightAboveTerrain(plane: number | Vehicle, height: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x93AE6A61BE015BF1 | Since: 323
     */
    function setLodMultiplier(vehicle: number | Vehicle, multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x428BACCDF5E26EAD | Since: 323
     */
    function setCanSaveInGarage(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Also includes some "turnOffBones" when vehicle mods are installed.
     *
     * Hash: 0x42A4BEB35D372407 | Since: 323
     */
    function getNumOfBrokenOffParts(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x2C8CBFE1EA5FC631 | Since: 323
     */
    function getNumOfBrokenLoosenParts(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x4D9D109F63FEE1D4 | Since: 323
     */
    function setForceEngineDamageByBullet(): void;
    /**
     * Allows creation of CEventShockingPlaneFlyby, CEventShockingHelicopterOverhead, and other(?) Shocking events
     *
     * Hash: 0x279D50DE5652D935 | Since: 323
     */
    function setGeneratesEngineShockingEvents(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
     *
     * Hash: 0xE44A982368A4AF23 | Since: 323
     */
    function copyDamages(sourceVehicle: number | Vehicle, targetVehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xF25E02CB9C5818F8 | Since: 323
     */
    function disableExplosionBreakOffParts(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBC3CCA5844452B06 | Since: 323
     */
    function setLightsCutoffDistanceTweak(distance: number): void;
    /**
     * Commands the driver of an armed vehicle (p0) to shoot its weapon at a target (p1). p3, p4 and p5 are the coordinates of the target. Example:
     *
     * `WEAPON::SET_CURRENT_PED_VEHICLE_WEAPON(pilot,MISC::GET_HASH_KEY("VEHICLE_WEAPON_PLANE_ROCKET"));                        VEHICLE::SET_VEHICLE_SHOOT_AT_TARGET(pilot, target, targPos.x, targPos.y, targPos.z);`
     *
     * Hash: 0x74CD9A9327A282EA | Since: 323
     */
    function setShootAtTarget(driver: number | Ped, entity: number | Entity, xTarget: number, yTarget: number, zTarget: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8F5EBAB1F260CFCE | Since: 323
     */
    function getLockOnTarget(vehicle: number | Vehicle): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x97CE68CB032583F0 | Since: 323
     */
    function setForceHd(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x182F266C2D9E2BEB | Since: 323
     */
    function setCustomPathNodeStreamingRadius(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x9CCC9525BF2408E0 | Since: 323
     */
    function getPlateType(vehicle: number | Vehicle): number;
    /**
     * in script hook .net
     *
     * Vehicle v = ...;
     * Function.Call(Hash.TRACK_VEHICLE_VISIBILITY, v.Handle);
     *
     * Hash: 0x64473AEFDCF47DCA | Since: 323
     */
    function trackVisibility(vehicle: number | Vehicle): void;
    /**
     * must be called after TRACK_VEHICLE_VISIBILITY
     *
     * it's not instant so probabilly must pass an 'update' to see correct result.
     *
     * Hash: 0xAA0A52D24FB98293 | Since: 323
     */
    function isVisible(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x89F149B6131E57DA | Since: 323
     */
    function setGravity(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Enable/Disables global slipstream physics
     *
     * Hash: 0xE6C0C80B8C867537 | Since: 323
     */
    function setEnableSlipstreaming(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF051D9BFB6BA39C0 | Since: 877
     */
    function setSlipstreamingShouldTimeOut(toggle: boolean): void;
    /**
     * Returns a float value between 0.0 and 3.0 related to its slipstream draft (boost/speedup).
     *
     * Hash: 0x36492C2F0D134C56 | Since: 323
     */
    function getCurrentTimeInSlipStream(vehicle: number | Vehicle): number;
    /**
     * Returns true if the vehicle is being slipstreamed by another vehicle
     *
     * Hash: 0x48C633E94A8142A7 | Since: 877
     */
    function isProducingSlipStream(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x06582AFF74894C75 | Since: 323
     */
    function setInactiveDuringPlayback(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDFFCEF48E511DB48 | Since: 323
     */
    function setActiveDuringPlayback(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Returns false if the vehicle has the FLAG_NO_RESPRAY flag set.
     *
     * Hash: 0x8D474C8FAEFF6CDE | Since: 323
     */
    function isSprayable(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x983765856F2564F9 | Since: 323
     */
    function setEngineCanDegrade(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Adds some kind of shadow to the vehicle.
     *
     * p1 and p2 use values from 0-255 and both make the shadow darker the lower the value is. -1 disables the effect.
     *
     * Hash: 0xF0E4BA16D1DB546C | Since: 323
     */
    function disableVehcileDynamicAmbientScales(vehicle: number | Vehicle): void;
    /**
     * Remove the weird shadow applied by DISABLE_VEHCILE_DYNAMIC_AMBIENT_SCALES.
     *
     * Hash: 0xF87D9F2301F7D206 | Since: 323
     */
    function enableDynamicAmbientScales(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x4198AB0022B15F87 | Since: 323
     */
    function isPlaneLandingGearIntact(plane: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x755D6D5267CBBD7E | Since: 323
     */
    function arePlanePropellersIntact(plane: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4C815EB175086F84 | Since: 1103
     */
    function setPlanePropellerHealth(plane: number | Vehicle, health: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0CDDA42F9E360CA6 | Since: 323
     */
    function setCanDeformWheels(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Only returns true if the vehicle was marked as stolen with SET_VEHICLE_IS_STOLEN.
     *
     * Hash: 0x4AF9BD80EEBEB453 | Since: 323
     */
    function isStolen(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x67B2C79AA7FF5738 | Since: 323
     */
    function setIsStolen(vehicle: number | Vehicle, isStolen: boolean): void;
    /**
     * This native sets the turbulence multiplier. It only works for planes.
     * 0.0 = no turbulence at all.
     * 1.0 = heavy turbulence.
     * Works by just calling it once, does not need to be called every tick.
     *
     * Hash: 0xAD2D28A1AFDFF131 | Since: 323
     */
    function setPlaneTurbulenceMultiplier(vehicle: number | Vehicle, multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5991A01434CE9677 | Since: 323
     */
    function areWingsOfPlaneIntact(plane: number | Vehicle): boolean;
    /**
     * This native doesn't seem to do anything, might be a debug-only native.
     *
     * Confirmed, it is a debug native.
     *
     * Hash: 0xB264C4D2F2B0A78B | Since: 323
     */
    function allowAmbientsToAvoidAdverseConditions(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x0E21D3DF1051399D | Since: 323
     */
    function detachFromCargobob(vehicle: number | Vehicle, cargobob: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xADF7BE450512C12F | Since: 323
     */
    function detachFromAnyCargobob(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAF03011701811146 | Since: 678
     */
    function detachEntityFromCargobob(cargobob: number | Vehicle, entity: number | Entity): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD40148F22E81A1D9 | Since: 323
     */
    function isAttachedToCargobob(cargobob: number | Vehicle, vehicleAttached: number | Vehicle): boolean;
    /**
     * Returns attached vehicle (Vehicle in parameter must be cargobob)
     *
     * Hash: 0x873B82D42AC2B9E5 | Since: 323
     */
    function getAttachedToCargobob(cargobob: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x99093F60746708CA | Since: 1103
     */
    function getEntityAttachedToCargobob(): number;
    /**
     * No comment provided
     *
     * Hash: 0x4127F1D84E347769 | Since: 323
     */
    function attachToCargobob(cargobob: number | Vehicle, vehicle: number | Vehicle, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xA1DD82F3CCF9A01E | Since: 944
     */
    function attachEntityToCargobob(): void;
    /**
     * Stops cargobob from being able to detach the attached vehicle.
     *
     * Hash: 0x571FEB383F629926 | Since: 323
     */
    function setCargobobForceDontDetach(cargobob: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1F34B0626C594380 | Since: 757
     */
    function setCargobobExcludeFromPickupEntity(): void;
    /**
     * No comment provided
     *
     * Hash: 0x2C1D8B3B19E517CC | Since: 757
     */
    function canCargobobPickUpEntity(): boolean;
    /**
     * Gets the position of the cargobob hook, in world coords.
     *
     * Hash: 0xCBDB9B923CACC92D | Since: 323
     */
    function getAttachedPickUpHookPosition(cargobob: number | Vehicle): Vector3;
    /**
     * Returns true only when the hook is active, will return false if the magnet is active
     *
     * Hash: 0x1821D91AD4B56108 | Since: 323
     */
    function doesCargobobHavePickUpRope(cargobob: number | Vehicle): boolean;
    /**
     * Drops the Hook/Magnet on a cargobob
     *
     * state
     * enum eCargobobHook
     * {
     * CARGOBOB_HOOK = 0,
     * CARGOBOB_MAGNET = 1,
     * };
     *
     * Hash: 0x7BEB0C7A235F6F3B | Since: 323
     */
    function createPickUpRopeForCargobob(cargobob: number | Vehicle, state: number): void;
    /**
     * Retracts the hook on the cargobob.
     *
     * Note: after you retract it the natives for dropping the hook no longer work
     *
     * Hash: 0x9768CF648F54C804 | Since: 323
     */
    function removePickUpRopeForCargobob(cargobob: number | Vehicle): void;
    /**
     * min: 1.9f, max: 100.0f
     *
     * Hash: 0x877C1EAEAC531023 | Since: 323
     */
    function setPickupRopeLengthForCargobob(cargobob: number | Vehicle, length1: number, length2: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xC0ED6438E6D39BA8 | Since: 944
     */
    function setPickupRopeLengthWithoutCreatingRopeForCargobob(): void;
    /**
     * No comment provided
     *
     * Hash: 0xCF1182F682F65307 | Since: 323
     */
    function setCargobobPickupRopeDampingMultiplier(): void;
    /**
     * No comment provided
     *
     * Hash: 0x0D5F65A8F4EBDAB5 | Since: 1103
     */
    function setCargobobPickupRopeType(): void;
    /**
     * Returns true only when the magnet is active, will return false if the hook is active
     *
     * Hash: 0x6E08BF5B3722BAC9 | Since: 323
     */
    function doesCargobobHavePickupMagnet(cargobob: number | Vehicle): boolean;
    /**
     * Won't attract or magnetize to any helicopters or planes of course, but that's common sense.
     *
     * Hash: 0x9A665550F8DA349B | Since: 323
     */
    function setCargobobPickupMagnetActive(cargobob: number | Vehicle, isActive: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xBCBFCD9D1DAC19E2 | Since: 323
     */
    function setCargobobPickupMagnetStrength(cargobob: number | Vehicle, strength: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA17BAD153B51547E | Since: 323
     */
    function setCargobobPickupMagnetFalloff(cargobob: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x66979ACF5102FD2F | Since: 323
     */
    function setCargobobPickupMagnetReducedStrength(cargobob: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x6D8EAC07506291FB | Since: 323
     */
    function setCargobobPickupMagnetReducedFalloff(cargobob: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xED8286F71A819BAA | Since: 323
     */
    function setCargobobPickupMagnetPullStrength(cargobob: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x685D5561680D088B | Since: 323
     */
    function setCargobobPickupMagnetPullRopeLength(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xE301BD63E9E13CF0 | Since: 323
     */
    function setCargobobPickupMagnetSetTargetedMode(vehicle: number | Vehicle, cargobob: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x9BDDC73CC6A115D4 | Since: 323
     */
    function setCargobobPickupMagnetSetAmbientMode(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x56EB5E94318D3FB6 | Since: 323
     */
    function setCargobobPickupMagnetEnsurePickupEntityUpright(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x25ECB9F8017D98E0 | Since: 323
     */
    function doesHaveWeapons(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x2C4A1590ABF43E8B | Since: 323
     */
    function setWillTellOthersToHurry(vehicle: number | Vehicle): void;
    /**
     * Full list of weapons by DurtyFree (Search for VEHICLE_*): https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0xF4FC6A6F67D8D856 | Since: 323
     */
    function disableWeapon(disabled: boolean, weaponHash: number | string, vehicle: number | Vehicle, owner: number | Ped): void;
    /**
     * Full list of weapons by DurtyFree (Search for VEHICLE_*): https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x563B65A643ED072E | Since: 1011
     */
    function isWeaponDisabled(weaponHash: number | string, vehicle: number | Vehicle, owner: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE05DD0E9707003A3 | Since: 323
     */
    function setUsedForPilotSchool(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x21115BCD6E44656A | Since: 323
     */
    function setActiveForPedNavigation(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Returns an int
     *
     * Vehicle Classes:
     * 0: Compacts
     * 1: Sedans
     * 2: SUVs
     * 3: Coupes
     * 4: Muscle
     * 5: Sports Classics
     * 6: Sports
     * 7: Super
     * 8: Motorcycles
     * 9: Off-road
     * 10: Industrial
     * 11: Utility
     * 12: Vans
     * 13: Cycles
     * 14: Boats
     * 15: Helicopters
     * 16: Planes
     * 17: Service
     * 18: Emergency
     * 19: Military
     * 20: Commercial
     * 21: Trains
     *
     * char buffer[128];
     * `std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS(vehicle));`
     *
     * `const char* className = HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION(buffer);`
     *
     * Hash: 0x29439776AAA00A62 | Since: 323
     */
    function getClass(vehicle: number | Vehicle): number;
    /**
     * char buffer[128];
     * `std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS_FROM_NAME (hash));`
     *
     * `const char* className = HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION(buffer);`
     *
     * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
     *
     * Hash: 0xDEDF1C8BD47C2200 | Since: 323
     */
    function getClassFromName(modelHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xBCDF8BAF56C87B6A | Since: 323
     */
    function setPlayersLast(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x300504B23BD3B711 | Since: 323
     */
    function setCanBeUsedByFleeingPeds(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xE5810AC70602F2F5 | Since: 323
     */
    function setAircraftPilotSkillNoiseScalar(vehicle: number | Vehicle): void;
    /**
     * Money pickups are created around cars when they explode. Only works when the vehicle model is a car. A single pickup is between 1 and 18 dollars in size. All car models seem to give the same amount of money.
     *
     * youtu.be/3arlUxzHl5Y
     * i.imgur.com/WrNpYFs.jpg
     *
     * Hash: 0x068F64F2470F9656 | Since: 323
     */
    function setDropsMoneyWhenBlownUp(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB8FBC8B1330CA9B4 | Since: 323
     */
    function setKeepEngineOnWhenAbandoned(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Seems to copy some values in vehicle
     *
     * Hash: 0x6A973569BA094650 | Since: 1604
     */
    function setImpatienceTimer(vehicle: number | Vehicle): void;
    /**
     * Use the "AIHandling" string found in handling.meta
     *
     * Hash: 0x10655FAB9915623D | Since: 323
     */
    function setHandlingOverride(vehicle: number | Vehicle, hash: number | string): void;
    /**
     * Max value is 32767
     *
     * Hash: 0x79DF7E806202CE01 | Since: 323
     */
    function setExtendedRemovalRange(vehicle: number | Vehicle, range: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x9007A2F21DC108D4 | Since: 323
     */
    function setSteeringBiasScalar(): void;
    /**
     * value between 0.0 and 1.0
     *
     * Hash: 0x6E0859B530A365CC | Since: 323
     */
    function setHeliControlLaggingRateScalar(helicopter: number | Vehicle, multiplier: number): void;
    /**
     * Seems to be related to the metal parts, not tyres (like i was expecting lol)
     *
     * Hash: 0x1837AF7C627009BA | Since: 323
     */
    function setFrictionOverride(vehicle: number | Vehicle, friction: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xA37B9A517B133349 | Since: 323
     */
    function setWheelsCanBreakOffWhenBlowUp(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xF78F94D60248C737 | Since: 323
     */
    function arePlaneControlPanelsIntact(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA46413066687A328 | Since: 323
     */
    function setCeilingHeight(vehicle: number | Vehicle, height: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5E569EC46EC21CAE | Since: 323
     */
    function setNoExplosionDamageFromDriver(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6D6AF961B72728AE | Since: 323
     */
    function clearRouteHistory(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x956B409B984D9BF7 | Since: 323
     */
    function doesExistWithDecorator(decorator: string): number;
    /**
     * Used to be incorrectly named SET_VEHICLE_EXCLUSIVE_DRIVER
     * Toggles a flag related to SET_VEHICLE_EXCLUSIVE_DRIVER, however, doesn't enable that feature (or trigger script events related to it).
     *
     * Hash: 0x41062318F23ED854 | Since: 323
     */
    function setAiCanUseExclusiveSeats(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * index: 0 - 1
     *
     * Used to be incorrectly named _SET_VEHICLE_EXCLUSIVE_DRIVER_2
     *
     * Hash: 0xB5C51B5502E85E83 | Since: 323
     */
    function setExclusiveDriver(vehicle: number | Vehicle, ped: number | Ped, index: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB09D25E77C33EB3F | Since: 463
     */
    function isPedExclusiveDriverOf(ped: number | Ped, vehicle: number | Vehicle): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x500873A45724C863 | Since: 323
     */
    function disableIndividualPlanePropeller(vehicle: number | Vehicle, propeller: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xDC05D2777F855F44 | Since: 3407
     */
    function enableIndividualPlanePropeller(vehicle: number | Vehicle, propeller: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xB055A34527CB8FD7 | Since: 323
     */
    function setForceAfterburner(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * R* used it to "remove" vehicle windows when "nightshark" had some mod, which adding some kind of armored windows. When enabled, you can't break vehicles glass. All your bullets wiil shoot through glass. You also will not able to break the glass with any other way (hitting and etc)
     *
     * Hash: 0x1087BC8EC540DAEB | Since: 1103
     */
    function setDontProcessGlass(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x4AD280EB48B2D8E6 | Since: 1868
     */
    function setDisableWantedConesResponse(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB68CFAF83A02768D | Since: 1290
     */
    function setUseDesiredZCruiseSpeedForLanding(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0205F5365292D2EB | Since: 1290
     */
    function setArriveDistanceOverrideForPersuitAttack(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xCF9159024555488C | Since: 944
     */
    function setReadyForCleanup(): void;
    /**
     * Toggles to render distant vehicles. They may not be vehicles but images to look like vehicles.
     *
     * Hash: 0xF796359A959DF65D | Since: 323
     */
    function setDistantCarsEnabled(toggle: boolean): void;
    /**
     * Sets the color of the neon lights of the specified vehicle.
     *
     * Hash: 0x8E0A582209A62695 | Since: 323
     */
    function setNeonColour(vehicle: number | Vehicle, r: number, g: number, b: number): void;
    /**
     * Index references CVehicleModelColor
     *
     * Hash: 0xB93B2867F7B479D1 | Since: 1493
     */
    function setNeonIndexColour(vehicle: number | Vehicle, index: number): void;
    /**
     * Gets the color of the neon lights of the specified vehicle.
     *
     * See SET_VEHICLE_NEON_COLOUR (0x8E0A582209A62695) for more information
     *
     * Hash: 0x7619EEE8C886757F | Since: 323
     */
    function getNeonColour(vehicle: number | Vehicle): [number, number, number];
    /**
     * Sets the neon lights of the specified vehicle on/off.
     *
     * Indices:
     * 0 = Left
     * 1 = Right
     * 2 = Front
     * 3 = Back
     *
     * Hash: 0x2AA720E4287BF269 | Since: 323
     */
    function setNeonEnabled(vehicle: number | Vehicle, index: number, toggle: boolean): void;
    /**
     * indices:
     * 0 = Left
     * 1 = Right
     * 2 = Front
     * 3 = Back
     *
     * Hash: 0x8C4B92553E4766A5 | Since: 323
     */
    function getNeonEnabled(vehicle: number | Vehicle, index: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x35E0654F4BAD7971 | Since: 323
     */
    function setAmbientNeonEnabled(): void;
    /**
     * No comment provided
     *
     * Hash: 0x83F813570FF519DE | Since: 573
     */
    function suppressNeonsOn(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB088E9A47AE6EDD5 | Since: 323
     */
    function setDisableSuperdummy(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xDBA3C090E3D74690 | Since: 323
     */
    function requestDial(vehicle: number | Vehicle): void;
    /**
     * Seems related to vehicle health, like the one in IV.
     * Max 1000, min 0.
     * Vehicle does not necessarily explode or become undrivable at 0.
     *
     * Hash: 0xF271147EB7B40F12 | Since: 323
     */
    function getBodyHealth(vehicle: number | Vehicle): number;
    /**
     * p2 often set to 1000.0 in the decompiled scripts.
     *
     * Hash: 0xB77D05AC8C78AADB | Since: 323
     */
    function setBodyHealth(vehicle: number | Vehicle, value: number): void;
    /**
     * Outputs 2 Vector3's.
     * Scripts check if out2.x - out1.x > someshit.x
     * Could be suspension related, as in max suspension height and min suspension height, considering the natives location.
     *
     * Hash: 0xDF7E3EEB29642C38 | Since: 323
     */
    function getSize(vehicle: number | Vehicle): [Vector3, Vector3];
    /**
     * Gets the height of the vehicle's suspension.
     * The higher the value the lower the suspension. Each 0.002 corresponds with one more level lowered.
     * 0.000 is the stock suspension.
     * 0.008 is Ultra Suspension.
     *
     * Hash: 0x53952FD2BAA19F17 | Since: 323
     */
    function getFakeSuspensionLoweringAmount(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x84FD40F56075E816 | Since: 323
     */
    function setCarHighSpeedBumpSeverityMultiplier(multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x92922A607497B14D | Since: 463
     */
    function getNumberOfDoors(vehicle: number | Vehicle): number;
    /**
     * If false, lowers hydraulics (if raised) and disables hydraulics controls. If true, raises hydraulics and enables hydraulics controls.
     *
     * Only used once in each carmod script, on a car that does not have hydraulics to begin with.
     *
     * Hash: 0x28B18377EB6E25F6 | Since: 505
     */
    function setHydraulicsControl(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xA7DCDF4DED40A8F4 | Since: 323
     */
    function setCanAdjustGroundClearance(vehicle: number | Vehicle): void;
    /**
     * 0 min 100 max
     * starts at 100
     * Seams to have health zones
     * Front of vehicle when damaged goes from 100-50 and stops at 50.
     * Rear can be damaged from 100-0
     * Only tested with two cars.
     *
     * any idea how this differs from the first one?
     *
     * --
     * May return the vehicle health on a scale of 0.0 - 100.0 (needs to be confirmed)
     *
     * example:
     *
     * `v_F = ENTITY::GET_ENTITY_MODEL(v_3);`
     * if (((v_F == ${tanker}) || (v_F == ${armytanker})) || (v_F == ${tanker2})) {
     * `if (VEHICLE::GET_VEHICLE_HEALTH_PERCENTAGE(v_3) <= 1.0) {`
     * `NETWORK::NETWORK_EXPLODE_VEHICLE(v_3, 1, 1, -1);`
     * }
     * }
     *
     * Hash: 0xB8EF61207C2393A9 | Since: 323
     */
    function getHealthPercentage(vehicle: number | Vehicle, maxEngineHealth: number, maxPetrolTankHealth: number, maxBodyHealth: number, maxMainRotorHealth: number, maxTailRotorHealth: number, maxUnkHealth: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xD4C4642CB7F50B5D | Since: 323
     */
    function getIsMercenary(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC361AA040D6637A8 | Since: 323
     */
    function setBrokenPartsDontAffectAiHandling(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x99C82F8A139F3E4E | Since: 323
     */
    function setKersAllowed(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Returns true if the vehicle has a HF_HAS_KERS (strHandlingFlags 0x4) handing flag set, for instance the lectro/vindicator bikes or the open wheelers.
     *
     * Hash: 0x50634E348C8D44EF | Since: 372
     */
    function getHasKers(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE16142B94664DEFD | Since: 323
     */
    function setPlaneResistToExplosion(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x8074CC1886802912 | Since: 2545
     */
    function setHeliResistToExplosion(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x26D99D5A82FD18E8 | Since: 463
     */
    function setDisableBmxExtraTrickForces(): void;
    /**
     * Works only on vehicles that support hydraulics.
     *
     * Hash: 0x84EA99C62CB3EF0C | Since: 505
     */
    function setHydraulicSuspensionRaiseFactor(vehicle: number | Vehicle, wheelId: number, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0BB5CBDDD0F25AE3 | Since: 2372
     */
    function getHydraulicSuspensionRaiseFactor(vehicle: number | Vehicle, wheelId: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x1201E8A3290A3B98 | Since: 505
     */
    function setCanUseHydraulics(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * States:
     * 4 = raise
     * 5 = lower
     * 6 = jump
     *
     * Hash: 0x8EA86DF356801C7D | Since: 505
     */
    function setHydraulicState(vehicle: number | Vehicle, state: number): void;
    /**
     * Sets vehicle wheel hydraulic states transition. Known states:
     * 0 - reset
     * 1 - raise wheel (uses value arg, works just like _SET_VEHICLE_HYDRAULIC_WHEEL_VALUE)
     * 2 - jump using wheel
     *
     * Hash: 0xC24075310A8B9CD1 | Since: 505
     */
    function setHydraulicWheelState(vehicle: number | Vehicle, wheelId: number, state: number, value: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x5BA68A0840D546AC | Since: 463
     */
    function hasPetroltankSetOnFireByEntity(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4419966C9936071A | Since: 463
     */
    function clearPetroltankFireCulprit(vehicle: number | Vehicle): void;
    /**
     * Controls how fast bobbleheads and tsurikawas move on each axis.
     *
     * p2 is probably z, but changing that value didn't seem to have a noticeable effect.
     *
     * Hash: 0x870B8B7A766615C8 | Since: 505
     */
    function setBobbleheadVelocity(x: number, y: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8533CAFDE1F0F336 | Since: 505
     */
    function getIsDummy(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4E20D2A627011E8E | Since: 757
     */
    function setDamageScale(vehicle: number | Vehicle): boolean;
    /**
     * Does not actually return anything.
     *
     * Hash: 0x84D7FFD223CAAFFD | Since: 3407
     */
    function setExplosiveDamageScale(vehicle: number | Vehicle, scale: number): any;
    /**
     * No comment provided
     *
     * Hash: 0x45A561A9421AB6AD | Since: 944
     */
    function setWeaponDamageScale(vehicle: number | Vehicle, multiplier: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD4196117AF7BB974 | Since: 757
     */
    function setDisableDamageWithPickedUpEntity(): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xBB2333BB87DDD87F | Since: 757
     */
    function setUsesMpPlayerDamageMultiplier(): void;
    /**
     * When enabled, the player won't fall off the bike when landing from large heights.
     *
     * Hash: 0x73561D4425A021A2 | Since: 791
     */
    function setBikeEasyToLand(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Inverts vehicle's controls. So INPUT_VEH_ACCELERATE will be INPUT_VEH_BRAKE and vise versa (same for A/D controls)
     * Doesn't work for planes/helis.
     *
     * Hash: 0x5B91B229243351A8 | Since: 791
     */
    function setInvertControls(vehicle: number | Vehicle, state: boolean): void;
    /**
     * Disables the screen effects and sound effects when driving over a speed boost pad.
     *
     * Hash: 0x7BBE7FF626A591FE | Since: 877
     */
    function setSpeedBoostEffectDisabled(disabled: boolean): void;
    /**
     * Disables the screen effects and sound effects when driving over a slowdown pad.
     *
     * Hash: 0x65B080555EA48149 | Since: 1011
     */
    function setSlowDownEffectDisabled(disabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x428AD3E26C8D9EB0 | Since: 877
     */
    function setFormationLeader(vehicle: number | Vehicle, pos: Vector3): void;
    /**
     * Resets the effect of SET_FORMATION_LEADER
     *
     * Hash: 0xE2F53F172B45EDE1 | Since: 877
     */
    function resetFormationLeader(): void;
    /**
     * No comment provided
     *
     * Hash: 0xBA91D045575699AD | Since: 877
     */
    function getIsBoatCapsized(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x80E3357FDEF45C21 | Since: 944
     */
    function setAllowRammingSoopOrRamp(): void;
    /**
     * No comment provided
     *
     * Hash: 0xEFC13B1CE30D755D | Since: 944
     */
    function setScriptRampImpulseScale(vehicle: number | Vehicle, impulseScale: number): void;
    /**
     * doorId: see SET_VEHICLE_DOOR_SHUT
     *
     * Hash: 0x645F4B6E8499F632 | Since: 944
     */
    function getIsDoorValid(vehicle: number | Vehicle, doorId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE00F2AB100B76E89 | Since: 944
     */
    function setScriptRocketBoostRechargeTime(vehicle: number | Vehicle, seconds: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x36D782F68B309BDA | Since: 944
     */
    function getHasRocketBoost(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3D34E80EED4AE3BE | Since: 944
     */
    function isRocketBoostActive(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x81E1552E35DC3839 | Since: 944
     */
    function setRocketBoostActive(vehicle: number | Vehicle, active: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDCA174A42133F08C | Since: 944
     */
    function getHasRetractableWheels(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1DA0DA9CB3F0C8BF | Since: 944
     */
    function getIsWheelsRetracted(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xF660602546D27BA8 | Since: 944
     */
    function setWheelsExtendedInstantly(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x5335BE58C083E74E | Since: 1011
     */
    function setWheelsRetractedInstantly(vehicle: number | Vehicle): void;
    /**
     * Returns true if the vehicle has the FLAG_JUMPING_CAR flag set.
     *
     * Hash: 0x9078C0C5EF8C19E9 | Since: 944
     */
    function getCarHasJump(vehicle: number | Vehicle): boolean;
    /**
     * Allows vehicles with the FLAG_JUMPING_CAR flag to jump higher (i.e. Ruiner 2000).
     *
     * Hash: 0xF06A16CA55D138D8 | Since: 944
     */
    function setUseHigherCarJump(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xB2E0C0D6922D31F2 | Since: 944
     */
    function setClearFreezeWaitingOnCollisionOncePlayerEnters(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Set vehicle's primary mounted weapon 2 ammo. For example, use it on APC.
     * For example, you can "remove" any vehicle weapon from any vehicle.
     * ammoAmount -1 = infinite ammo (default value for any spawned vehicle tho)
     *
     * Hash: 0x44CD1F493DB2A0A6 | Since: 944
     */
    function setWeaponRestrictedAmmo(vehicle: number | Vehicle, weaponIndex: number, capacity: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x8181CE2F25CB9BB7 | Since: 1011
     */
    function getWeaponRestrictedAmmo(vehicle: number | Vehicle, weaponIndex: number): number;
    /**
     * No comment provided
     *
     * Hash: 0xBC9CFF381338CB4F | Since: 944
     */
    function getHasParachute(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA916396DF4154EE3 | Since: 944
     */
    function getCanDeployParachute(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0BFFB028B3DD0A97 | Since: 944
     */
    function startParachuting(vehicle: number | Vehicle, active: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x3DE51E9C80B116CF | Since: 1011
     */
    function isParachuteDeployed(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x28D034A93FE31BF5 | Since: 944
     */
    function setRampAndRammingCarsTakeDamage(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1BBAC99C0BC53656 | Since: 944
     */
    function setEnableRampCarSideImpulse(): void;
    /**
     * No comment provided
     *
     * Hash: 0x756AE6E962168A04 | Since: 944
     */
    function setEnableNormaliseRampCarVerticalVeloctiy(): void;
    /**
     * No comment provided
     *
     * Hash: 0x9D30687C57BAA0BB | Since: 1011
     */
    function setJetWashForceEnabled(): void;
    /**
     * No comment provided
     *
     * Hash: 0x86B4B6212CB8B627 | Since: 1011
     */
    function setWeaponCanTargetObjects(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Used for blazer5. Changes the quadbike-jetski transformation input from raise/lower convertible roof (hold H by default) to horn (press E by default.)
     *
     * Hash: 0x41290B40FA63E6DA | Since: 1011
     */
    function setUseBoostButtonForWheelRetract(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x1980F68872CC2C3D | Since: 3095
     */
    function setUseHornButtonForNitrous(toggle: boolean): void;
    /**
     * Parachute models:
     * - sr_prop_specraces_para_s_01
     * - imp_prop_impexp_para_s (SecuroServ; Default)
     * Plus, many more props can be used as vehicle parachutes, like umbrellas (prop_beach_parasol_03), and unlike SET_PLAYER_PARACHUTE_MODEL_OVERRIDE, you won't get stuck mid-air when using an umbrella.
     *
     * Hash: 0x4D610C6B56031351 | Since: 1011
     */
    function setParachuteModelOverride(vehicle: number | Vehicle, modelHash: number | string): void;
    /**
     * Variations available for the generic parachute (sr_prop_specraces_para_s_01):
     * - 0: Rainbow
     * - 1: Red
     * - 2: White, blue, yellow
     * - 3: Black, red, white
     * - 4: Red, white, blue
     * - 5: Blue
     * - 6: Black
     * - 7: Black, yellow
     *
     * Hash: 0xA74AD2439468C883 | Since: 1011
     */
    function setParachuteModelTintIndex(vehicle: number | Vehicle, textureVariation: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x0419B167EE128F33 | Since: 1103
     */
    function setOverrideExtenableSideRatio(): number;
    /**
     * No comment provided
     *
     * Hash: 0xF3B0E0AED097A3F5 | Since: 1103
     */
    function setExtenableSideTargetRatio(): number;
    /**
     * No comment provided
     *
     * Hash: 0xD3E51C0AB8C26EEE | Since: 1103
     */
    function setOverrideSideRatio(): number;
    /**
     * No comment provided
     *
     * Hash: 0x9B8E1BF04B51F2E8 | Since: 1103
     */
    function getAlls(): [number, any];
    /**
     * No comment provided
     *
     * Hash: 0x72BECCF4B829522E | Since: 1103
     */
    function setCargobobExtaPickupRange(): void;
    /**
     * No comment provided
     *
     * Hash: 0x66E3AAFACE2D1EB8 | Since: 1103
     */
    function setOverrideDoorTorque(): void;
    /**
     * Enables/disables the ability to wheelie on motorcycles.
     *
     * Hash: 0x1312DDD8385AEE4E | Since: 1103
     */
    function setWheelieEnabled(vehicle: number | Vehicle, enabled: boolean): void;
    /**
     * Prevents the vehicle from exploding when taking body damage. Only works for helis and planes.
     *
     * Hash: 0xEDBC8405B3895CC9 | Since: 1103
     */
    function setDisableHeliExplodeFromBodyDamage(vehicle: number | Vehicle, disable: boolean): void;
    /**
     * Prevents the vehicle from exploding when taking body damage if it was caused by a collision. Only works for planes.
     *
     * Hash: 0x26E13D440E7F6064 | Since: 1290
     */
    function setDisableExplodeFromBodyDamageOnCollision(vehicle: number | Vehicle, disable: boolean): void;
    /**
     * Prevents the vehicle from exploding when taking body damage if the inflictor is an AI-controlled vehicle. Only works for planes.
     *
     * Hash: 0xB0B7DF5CB876FF5E | Since: 3407
     */
    function setDisableExplodeFromBodyDamageReceivedByAi(vehicle: number | Vehicle, disable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2FA2494B47FDD009 | Since: 1103
     */
    function setTrailerAttachmentEnabled(): void;
    /**
     * No comment provided
     *
     * Hash: 0xFEB2DDED3509562E | Since: 1103
     */
    function setRocketBoostFill(vehicle: number | Vehicle, percentage: number): void;
    /**
     * Set state to true to extend the wings, false to retract them.
     *
     * Hash: 0x544996C0081ABDEB | Since: 1103
     */
    function setGliderActive(vehicle: number | Vehicle, state: boolean): void;
    /**
     * Resets the vehicle's turret to its default position in scripted cameras. Doesn't seem to affect turrets that are occupied by a ped.
     *
     * Hash: 0x78CEEE41F49F421F | Since: 1103
     */
    function setShouldResetTurretInScriptedCameras(vehicle: number | Vehicle, shouldReset: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xAF60E6A2936F982A | Since: 1103
     */
    function setDisableCollisionUponCreation(vehicle: number | Vehicle, disable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x430A7631A84C9BE7 | Since: 1180
     */
    function setGroundEffectReducesDrag(toggle: boolean): void;
    /**
     * Disables collision for this vehicle (maybe it also supports other entities, not sure).
     * Only world/building/fixed world objects will have their collisions disabled, props, peds, or any other entity still collides with the vehicle.
     * Example: https://streamable.com/6n45d5
     * Not sure if there is a native (and if so, which one) that resets the collisions.
     *
     * Hash: 0x75627043C6AA90AD | Since: 1180
     */
    function setDisableMapCollision(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x8235F1BEAD557629 | Since: 1180
     */
    function setDisablePedStandOnTop(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x9640E30A7F395E4B | Since: 1290
     */
    function setDamageScales(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x0BBB9A7A8FFE931B | Since: 1290
     */
    function setPlaneSectionDamageScale(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0xDD8A2D3337F04196 | Since: 3407
     */
    function setPlaneControlSectionsShouldBreakOffFromExplosions(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Stops the cargobob from being able to attach any vehicle
     *
     * Hash: 0x94A68DA412C4007D | Since: 1180
     */
    function setHeliCanPickupEntityThatHasPickUpDisabled(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Sets the amount of bombs that this vehicle has. As far as I know, this does _not_ impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
     *
     * Hash: 0xF4B2ED59DEB5D774 | Since: 1180
     */
    function setBombAmmo(vehicle: number | Vehicle, bombCount: number): void;
    /**
     * Gets the amount of bombs that this vehicle has. As far as I know, this does _not_ impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
     *
     * Hash: 0xEA12BD130D7569A1 | Since: 1180
     */
    function getBombAmmo(vehicle: number | Vehicle): number;
    /**
     * Similar to SET_VEHICLE_BOMB_AMMO, this sets the amount of countermeasures that are present on this vehicle.
     * Use GET_VEHICLE_BOMB_AMMO to get the current amount.
     *
     * Hash: 0x9BDA23BF666F0855 | Since: 1180
     */
    function setCountermeasureAmmo(vehicle: number | Vehicle, counterMeasureCount: number): void;
    /**
     * Similar to `GET_VEHICLE_BOMB_AMMO`, this gets the amount of countermeasures that are present on this vehicle.
     * Use SET_VEHICLE_COUNTERMEASURE_AMMO to set the current amount.
     *
     * Hash: 0xF846AA63DF56B804 | Since: 1180
     */
    function getCountermeasureAmmo(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x0A3F820A9A9A9AC5 | Since: 1180
     */
    function setHeliCombatOffset(vehicle: number | Vehicle, pos: Vector3): void;
    /**
     * Used in decompiled scripts in combination with GET_VEHICLE_SIZE
     * p7 is usually 2
     * p8 is usually 1
     *
     * Hash: 0x51F30DB60626A20E | Since: 1180
     */
    function getCanBePlacedHere(vehicle: number | Vehicle, pos: Vector3, rot: Vector3): boolean;
    /**
     * Sets a flag on heli and another vehicle type.
     *
     * Hash: 0x97841634EF7DF1D6 | Since: 1180
     */
    function setDisableAutomaticCrashTask(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Used in conjunction with SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO, in Rockstar's scripts. Using this will instantly transform the vehicle into hover mode starting from the given ratio (ranging from 0.0 to 1.0, values greater than 1.0 will put the vehicle into a glitched state.) If this is not used alongside SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO, the vehicle will automatically transform back into car mode.
     *
     * Usable only with the deluxo and other vehicles with deluxo-like hover mode toggle, modded or otherwise. Does nothing when used on oppressor2.
     *
     * Example:
     * `Ped playerPed = PLAYER::PLAYER_PED_ID();`
     * `Vehicle veh = PED::GET_VEHICLE_PED_IS_USING(playerPed);`
     * `VEHICLE::SET_SPECIAL_FLIGHT_MODE_RATIO(veh, 0.7f);`
     * `VEHICLE::SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO(veh, 1.0f);`
     *
     * Hash: 0xD138FA15C9776837 | Since: 1290
     */
    function setSpecialFlightModeRatio(vehicle: number | Vehicle, ratio: number): void;
    /**
     * Used in conjunction with SET_SPECIAL_FLIGHT_MODE_RATIO, in Rockstar's scripts. The vehicle will transform into the given targetRatio, starting from the vehicle's current hover mode transform ratio (which can also be manually set by SET_SPECIAL_FLIGHT_MODE_RATIO,) i.e. setting targetRatio to 0.0 while the vehicle is in hover mode will transform the vehicle into car mode, likewise setting targetRatio to 1.0 while the vehicle is in car mode will transform the vehicle into hover mode, and if the current transform ratio is set to 0.7 while targetRatio is 1.0 the vehicle will transform into hover mode starting from being already partially transformed.
     *
     * targetRatio is recommended to always be 0.0 or 1.0, otherwise the vehicle will transform into a glitched state.
     *
     * Usable only with the deluxo and other vehicles with deluxo-like hover mode toggle, modded or otherwise. Does nothing when used on oppressor2.
     *
     * Example:
     * `Ped playerPed = PLAYER::PLAYER_PED_ID();`
     * `Vehicle veh = PED::GET_VEHICLE_PED_IS_USING(playerPed);`
     * `VEHICLE::SET_SPECIAL_FLIGHT_MODE_RATIO(veh, 0.7f);`
     * `VEHICLE::SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO(veh, 1.0f);`
     *
     * Hash: 0x438B3D7CA026FE91 | Since: 1290
     */
    function setSpecialFlightModeTargetRatio(vehicle: number | Vehicle, targetRatio: number): void;
    /**
     * It will override the ability to transform deluxo. For oppressor it will work just like SET_DISABLE_HOVER_MODE_FLIGHT
     *
     * Hash: 0xF1211889DF15A763 | Since: 1290
     */
    function setSpecialFlightModeAllowed(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Disables "wings" for some flying vehicles. Works only for oppressor _2_ and deluxo.
     * For deluxo it just immediately removes vehicle's "wings" and you will be not able to fly up.
     * For oppressor 2 it will remove wings right after you land. And you will not able to fly up anymore too.
     * But for opressor 2 you still can fly if you somehow get back in the air.
     *
     * Hash: 0x2D55FE374D5FDB91 | Since: 1290
     */
    function setDisableHoverModeFlight(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Checks if Chernobog's stabilizers are deployed or not.
     * These are the metal supports that allow it to fire.
     * This native only applies to the Chernobog.
     *
     * Hash: 0x3A9128352EAC9E85 | Since: 1290
     */
    function getOutriggersDeployed(vehicle: number | Vehicle): boolean;
    /**
     * Native is significantly more complicated than simply generating a random vector & length.
     * `The 'point' is either 400.0 or 250.0 units away from the Ped's current coordinates; and paths into functions like rage::grcViewport___IsSphereVisible`
     *
     * Hash: 0x8DC9675797123522 | Since: 1290
     */
    function findSpawnCoordinatesForHeli(ped: number | Ped): Vector3;
    /**
     * Only used with the "akula" and "annihilator2" in the decompiled native scripts.
     *
     * Hash: 0xB251E0B33E58B424 | Since: 1290
     */
    function setDeployFoldingWings(vehicle: number | Vehicle, deploy: boolean): void;
    /**
     * Only used with the "akula" and "annihilator2" in the decompiled native scripts.
     *
     * Hash: 0xAEF12960FA943792 | Since: 1290
     */
    function areFoldingWingsDeployed(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x0C02468829E4AA65 | Since: 2944
     */
    function setDeployMissileBays(vehicle: number | Vehicle, deploy: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xEA4743874D515F13 | Since: 2944
     */
    function areMissileBaysDeployed(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAA653AE61924B0A0 | Since: 1290
     */
    function setDipStraightDownWhenCrashingPlane(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Toggles specific flag on turret
     *
     * Hash: 0xC60060EB0D8AC7B1 | Since: 1290
     */
    function setTurretHidden(vehicle: number | Vehicle, index: number, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x70A252F60A3E036B | Since: 1365
     */
    function setHoverModeWingRatio(vehicle: number | Vehicle, ratio: number): void;
    /**
     * Disables turret movement when called in a loop. You can still fire and aim. You cannot shoot backwards though.
     *
     * Hash: 0xE615BB7A7752C76A | Since: 1365
     */
    function setDisableTurretMovement(vehicle: number | Vehicle, turretId: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x887FA38787DE8C72 | Since: 1365
     */
    function setForceFixLinkMatrices(vehicle: number | Vehicle): void;
    /**
     * Affects the playback speed of the submarine car conversion animations. Does not affect hardcoded animations such as the wheels being retracted.
     *
     * Hash: 0x498218259FB7C72D | Since: 1365
     */
    function setTransformRateForAnimation(vehicle: number | Vehicle, transformRate: number): void;
    /**
     * When set to true, the key to transform a car to submarine mode changes from raise/lower convertible roof (hold H by default) to special vehicle transform (press X by default.)
     *
     * Hash: 0x41B9FB92EDED32A6 | Since: 1365
     */
    function setTransformToSubmarineUsesAlternateInput(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Does nothing. It's a nullsub.
     *
     * Hash: 0x36DE109527A2C0C4 | Since: 1604
     */
    function setCombatMode(toggle: boolean): void;
    /**
     * Does nothing. It's a nullsub.
     *
     * Hash: 0x82E0AC411E41A5B4 | Since: 1604
     */
    function setDetonationMode(toggle: boolean): void;
    /**
     * Does nothing. It's a nullsub.
     *
     * Hash: 0x99A05839C46CE316 | Since: 1604
     */
    function setShuntOnStick(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x71C6302CBCA6CA35 | Since: 3407
     */
    function isOnBoostPad(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xA2459F72C14E2E8D | Since: 1604
     */
    function getIsShunting(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xE8718FAF591FD224 | Since: 1604
     */
    function getHasBeenHitByShunt(vehicle: number | Vehicle): boolean;
    /**
     * Returns last vehicle that was rammed by the given vehicle using the shunt boost.
     *
     * Hash: 0x04F2FA6E234162F7 | Since: 1604
     */
    function getLastShunt(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x143921E45EC44D62 | Since: 1604
     */
    function setDisableExplosionsDamage(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xC8E9B6B71B8E660D | Since: 1604
     */
    function setOverrideNitrousLevel(vehicle: number | Vehicle, toggle: boolean, level: number, power: number, rechargeTime: number, disableSound: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x465EEA70AF251045 | Since: 3095
     */
    function setNitrousIsVisible(vehicle: number | Vehicle, enabled: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xAFD262ACCA64479A | Since: 3095
     */
    function setOverrideTractionLossMultiplier(vehicle: number | Vehicle, modifier: number): void;
    /**
     * First two floats relate to rumble, the last is a threshold
     *
     * Hash: 0xDAF4C98C18AC6F06 | Since: 3095
     */
    function setDriftSlipAngleLimits(vehicle: number | Vehicle, durationScalar: number, amplitudeScalar: number, slipAngleLimit: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x16CFBC5E7EB32861 | Since: 3095
     */
    function setMinimumTimeBetweenGearShifts(vehicle: number | Vehicle, time: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x1A2BCC8C636F9226 | Since: 3095
     */
    function fullyChargeNitrous(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x1AD0F63A94E10EFF | Since: 3407
     */
    function setRemainingNitrousDuration(vehicle: number | Vehicle, duration: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xBEC4B8653462450E | Since: 3095
     */
    function getRemainingNitrousDuration(vehicle: number | Vehicle): number;
    /**
     * No comment provided
     *
     * Hash: 0x491E822B2C464FE4 | Since: 3095
     */
    function isNitrousActive(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xC889AE921400E1ED | Since: 3095
     */
    function clearNitrous(vehicle: number | Vehicle): void;
    /**
     * No comment provided
     *
     * Hash: 0x9E566EA551F4F1A6 | Since: 3407
     */
    function setNitrousIsActive(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2970EAA18FD5E42F | Since: 1604
     */
    function setIncreaseWheelCrushDamage(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Sets some global vehicle related bool
     *
     * Hash: 0x211E95CE9903940C | Since: 1604
     */
    function setDisableWeaponBladeForces(toggle: boolean): void;
    /**
     * Changes the car jump control to require a double-tap to activate.
     *
     * Hash: 0x5BBCF35BF6E456F7 | Since: 1604
     */
    function setUseDoubleClickForCarJump(toggle: boolean): void;
    /**
     * Returns true only if the "tombstone" bone is attached to the vehicle, irrespective of "FLAG_HAS_TOMBSTONE" being present or not. Detaching the tombstone will return false.
     *
     * Hash: 0x71AFB258CCED3A27 | Since: 1604
     */
    function getDoesHaveTombstone(vehicle: number | Vehicle): boolean;
    /**
     * Disables detachable bumber from domnator4, dominator5, dominator6, see https://gfycat.com/SecondUnluckyGosling
     *
     * Hash: 0xAE71FB656C600587 | Since: 1604
     */
    function hideTombstone(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x249249D74F813EB2 | Since: 3095
     */
    function applyEmpEffect(vehicle: number | Vehicle): void;
    /**
     * Returns whether this vehicle is currently disabled by an EMP mine.
     *
     * Hash: 0x0506ED94363AD905 | Since: 1604
     */
    function getIsDisabledByEmp(vehicle: number | Vehicle): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8F0D5BA1C2CC91D7 | Since: 1604
     */
    function setDisableRetractingWeaponBlades(toggle: boolean): void;
    /**
     * Usable wheels:
     * 0: wheel_lf
     * 1: wheel_rf
     * 2: wheel_lm1
     * 3: wheel_rm1
     * 4: wheel_lr
     * 5: wheel_rr
     *
     * Hash: 0x55EAB010FAEE9380 | Since: 1868
     */
    function getTyreHealth(vehicle: number | Vehicle, wheelIndex: number): number;
    /**
     * SET_TYRE_WEAR_RATE must be active, otherwise values set to <1000.0f will default to 350.0f
     *
     * Usable wheels:
     * 0: wheel_lf
     * 1: wheel_rf
     * 2: wheel_lm1
     * 3: wheel_rm1
     * 4: wheel_lr
     * 5: wheel_rr
     *
     * Hash: 0x74C68EF97645E79D | Since: 1868
     */
    function setTyreHealth(vehicle: number | Vehicle, wheelIndex: number, health: number): void;
    /**
     * Returns the multiplier value from SET_TYRE_WEAR_RATE
     *
     * Usable wheels:
     * 0: wheel_lf
     * 1: wheel_rf
     * 2: wheel_lm1
     * 3: wheel_rm1
     * 4: wheel_lr
     * 5: wheel_rr
     *
     * Hash: 0x6E387895952F4F71 | Since: 2060
     */
    function getTyreWearRate(vehicle: number | Vehicle, wheelIndex: number): number;
    /**
     * Needs to be run for tire wear to work. Multiplier affects the downforce and how fast the tires will wear out, higher values essentially make the vehicle slower on straights and its tires will wear down quicker when cornering. Value must be >0f.
     * Default value in Rockstar's Open Wheel Race JSON's ("owrtws", "owrtwm", "owrtwh") is 1.0
     *
     * Usable wheels:
     * 0: wheel_lf
     * 1: wheel_rf
     * 2: wheel_lm1
     * 3: wheel_rm1
     * 4: wheel_lr
     * 5: wheel_rr
     *
     * Hash: 0x01894E2EDE923CA2 | Since: 1868
     */
    function setTyreWearRate(vehicle: number | Vehicle, wheelIndex: number, multiplier: number): void;
    /**
     * Controls how fast the tires wear out.
     *
     * Default values from Rockstar's Open Wheel Race JSON's:
     * "owrtss" (Soft): 2.2
     * "owrtsm" (Medium): 1.7
     * "owrtsh" (Hard): 1.2
     *
     * Usable wheels:
     * 0: wheel_lf
     * 1: wheel_rf
     * 2: wheel_lm1
     * 3: wheel_rm1
     * 4: wheel_lr
     * 5: wheel_rr
     *
     * Hash: 0x392183BB9EA57697 | Since: 2060
     */
    function setTyreWearRateScale(vehicle: number | Vehicle, wheelIndex: number, multiplier: number): void;
    /**
     * Controls how much traction the wheel loses.
     *
     * Default values from Rockstar's Open Wheel Race JSON's:
     * "owrtds" (Soft): 0.05
     * "owrtdm" (Medium): 0.45
     * "owrtdh" (Hard): 0.8
     *
     * Usable wheels:
     * 0: wheel_lf
     * 1: wheel_rf
     * 2: wheel_lm1
     * 3: wheel_rm1
     * 4: wheel_lr
     * 5: wheel_rr
     *
     * Hash: 0xC970D0E0FC31D768 | Since: 2060
     */
    function setTyreMaximumGripDifferenceDueToWearRate(vehicle: number | Vehicle, wheelIndex: number, multiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xF8B49F5BA7F850E7 | Since: 2060
     */
    function setAircraftIgnoreHightmapOptimisation(vehicle: number | Vehicle): void;
    /**
     * Lowers the vehicle's stance. Only works for vehicles that have strAdvancedFlags 0x8000 and 0x4000000 set.
     *
     * Hash: 0x3A375167F5782A65 | Since: 2372
     */
    function setReducedSuspensionForce(vehicle: number | Vehicle, enable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x5AC79C98C5C17F05 | Since: 2372
     */
    function setDriftTyres(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x2F5A72430E78C8D3 | Since: 2372
     */
    function getDriftTyresSet(vehicle: number | Vehicle): boolean;
    /**
     * Implemented only for trains.
     *
     * Hash: 0xEC0C1D4922AF9754 | Since: 2372
     */
    function networkUseHighPrecisionTrainBlending(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * Only used in R* Script fm_content_cargo
     *
     * Hash: 0xEF9D388F8D377F44 | Since: 2699
     */
    function setCheckForEnoughRoomForPed(vehicle: number | Vehicle): void;
    /**
     * _SET_ALLOW_R* - _SET_ALLOW_V*
     *
     * Hash: 0x27D27223E8EF22ED | Since: 3095
     */
    function setAllowCollisionWhenIn(vehicle: number | Vehicle, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x6638C0F19DE692FE | Since: 3095
     */
    function isGen9ExclusiveModel(vehicleModel: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x3EE18B00CD86C54F | Since: 3095
     */
    function getMaxExhaustBoneCount(): number;
    /**
     * No comment provided
     *
     * Hash: 0xE728F090D538CB18 | Since: 3095
     */
    function getExhaustBone(vehicle: number | Vehicle, index: number): [boolean, number, boolean];
}
export declare namespace water {
    /**
     * This function set height to the value of z-axis of the water surface.
     *
     * This function works with sea and lake. However it does not work with shallow rivers (e.g. raton canyon will return -100000.0f)
     *
     * note: seems to return true when you are in water
     *
     * Hash: 0xF6829842C06AE524 | Since: 323
     */
    function getHeight(pos: Vector3): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x8EE6B53CE13A9794 | Since: 323
     */
    function getHeightNoWaves(pos: Vector3): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0xFFA5D878809819DB | Since: 323
     */
    function testProbeAgainst(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): [boolean, Vector3];
    /**
     * enum eScriptWaterTestResult
     * {
     * SCRIPT_WATER_TEST_RESULT_NONE,
     * SCRIPT_WATER_TEST_RESULT_WATER,
     * SCRIPT_WATER_TEST_RESULT_BLOCKED,
     * };
     *
     * Hash: 0x8974647ED222EA5F | Since: 323
     */
    function testProbeAgainstAll(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number): [number, number];
    /**
     * See TEST_PROBE_AGAINST_ALL_WATER.
     *
     * Hash: 0x2B3451FA1E3142E2 | Since: 323
     */
    function testVerticalProbeAgainstAll(pos: Vector3, flags: number): [number, number];
    /**
     * Sets the water height for a given position and radius.
     *
     *
     * Hash: 0xC443FD757C3BA637 | Since: 323
     */
    function modify(x: number, y: number, radius: number, height: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xFDBF4CDBC07E1706 | Since: 323
     */
    function addExtraCalmingQuad(xLow: number, yLow: number, xHigh: number, yHigh: number, height: number): number;
    /**
     * p0 is the handle returned from ADD_EXTRA_CALMING_QUAD
     *
     * Hash: 0xB1252E3E59A82AAF | Since: 323
     */
    function removeExtraCalmingQuad(calmingQuad: number): void;
    /**
     * Sets a value that determines how aggressive the ocean waves will be. Values of 2.0 or more make for very aggressive waves like you see during a thunderstorm.
     *
     * Works only ~200 meters around the player.
     *
     * Hash: 0xB96B00E976BE977F | Since: 323
     */
    function setDeepOceanScaler(intensity: number): void;
    /**
     * Gets the aggressiveness factor of the ocean waves.
     *
     * Hash: 0x2B2A2CC86778B619 | Since: 323
     */
    function getDeepOceanScaler(): number;
    /**
     * No comment provided
     *
     * Hash: 0x547237AA71AB44DE | Since: 573
     */
    function setCalmedWaveHeightScaler(height: number): void;
    /**
     * Sets the waves intensity back to original (1.0 in most cases).
     *
     * Hash: 0x5E5E99285AE812DB | Since: 323
     */
    function resetDeepOceanScaler(): void;
}
export declare namespace weapon {
    /**
     * Enables laser sight on any weapon.
     *
     * It doesn't work. Neither on tick nor OnKeyDown
     *
     * Hash: 0xC8B46D7727D864AA | Since: 323
     */
    function enableLaserSightRendering(toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x0DB57B41EC1DB083 | Since: 323
     */
    function getComponentTypeModel(componentHash: number | string): number;
    /**
     * Returns the model of any weapon.
     *
     * Can also take an ammo hash?
     * `sub_6663a(&l_115B, WEAPON::GET_WEAPONTYPE_MODEL(${ammo_rpg}));`
     *
     * Hash: 0xF46CDC33180FDA94 | Since: 323
     */
    function gettypeModel(weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x4215460B9B8B7FA0 | Since: 323
     */
    function gettypeSlot(weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xC3287EE3050FB74C | Since: 323
     */
    function gettypeGroup(weaponHash: number | string): number;
    /**
     * Returns the amount of extra components the specified component has.
     * Returns -1 if the component isn't of type CWeaponComponentVariantModel.
     *
     * Hash: 0x6558AC7C17BFEF58 | Since: 372
     */
    function getComponentVariantExtraCount(componentHash: number | string): number;
    /**
     * Returns the model hash of the extra component at specified index.
     *
     * Hash: 0x4D1CB8DC40208A17 | Since: 372
     */
    function getComponentVariantExtraModel(componentHash: number | string, extraComponentIndex: number): number;
    /**
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0xADF692B254977C0C | Since: 323
     */
    function setCurrentPed(ped: number | Ped, weaponHash: number | string, bForceInHand: boolean): void;
    /**
     * The return value seems to indicate returns true if the hash of the weapon object weapon equals the weapon hash.
     * p2 seems to be 1 most of the time.
     *
     *
     *
     *
     *
     * p2 is not implemented
     *
     * disassembly said that?
     *
     *
     * Hash: 0x3A87E44BB9A01D54 | Since: 323
     */
    function getCurrentPed(ped: number | Ped): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x3B390A939AF0B5FC | Since: 323
     */
    function getCurrentPedEntityIndex(ped: number | Ped): number;
    /**
     * p1 is always 0 in the scripts.
     *
     * Hash: 0x8483E98E8B888AE2 | Since: 323
     */
    function getBestPed(ped: number | Ped): number;
    /**
     * Full list of weapons by DurtyFree (Search for VEHICLE_*): https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x75C55983C2C39DAA | Since: 323
     */
    function setCurrentPedVehicle(ped: number | Ped, weaponHash: number | string): boolean;
    /**
     * Example in VB
     *
     * Public Shared Function GetVehicleCurrentWeapon(Ped As Ped) As Integer
     * Dim arg As New OutputArgument()
     * Native.Function.Call(Hash.GET_CURRENT_PED_VEHICLE_WEAPON, Ped, arg)
     * Return arg.GetResult(Of Integer)()
     * End Function
     *
     * Usage:
     * If GetVehicleCurrentWeapon(Game.Player.Character) = -821520672 Then ...Do something
     * Note: -821520672 = VEHICLE_WEAPON_PLANE_ROCKET
     *
     * Hash: 0x1017582BCD3832DC | Since: 323
     */
    function getCurrentPedVehicle(ped: number | Ped): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x50276EF8172F5F12 | Since: 1734
     */
    function setPedCycleVehiclesOnly(ped: number | Ped): void;
    /**
     * Checks if the ped is currently equipped with a weapon matching a bit specified using a bitwise-or in typeFlags.
     *
     * Type flag bit values:
     * 1 = Melee weapons
     * 2 = Explosive weapons
     * 4 = Any other weapons
     *
     * Not specifying any bit will lead to the native *always* returning 'false', and for example specifying '4 | 2' will check for any weapon except fists and melee weapons.
     * 7 returns true if you are equipped with any weapon except your fists.
     * 6 returns true if you are equipped with any weapon except melee weapons.
     * 5 returns true if you are equipped with any weapon except the Explosives weapon group.
     * 4 returns true if you are equipped with any weapon except Explosives weapon group AND melee weapons.
     * 3 returns true if you are equipped with either Explosives or Melee weapons (the exact opposite of 4).
     * 2 returns true only if you are equipped with any weapon from the Explosives weapon group.
     * 1 returns true only if you are equipped with any Melee weapon.
     * 0 never returns true.
     *
     * Note: When I say "Explosives weapon group", it does not include the Jerry can and Fire Extinguisher.
     *
     * Hash: 0x475768A975D5AD17 | Since: 323
     */
    function isPedArmed(ped: number | Ped, typeFlags: number): boolean;
    /**
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x937C71165CF334B3 | Since: 323
     */
    function isValid(weaponHash: number | string): boolean;
    /**
     * p2 should be FALSE, otherwise it seems to always return FALSE
     *
     * Bool does not check if the weapon is current equipped, unfortunately.
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x8DECB02F88F428BC | Since: 323
     */
    function hasPedGot(ped: number | Ped, weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB80CA294F2F26749 | Since: 323
     */
    function isPedReadyToShoot(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xEFFED78E9011134D | Since: 323
     */
    function getPedtypeInSlot(ped: number | Ped, weaponSlot: number | string): number;
    /**
     * `WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0)`
     *
     * From decompiled scripts
     * Returns total ammo in weapon
     *
     * GTALua Example :
     * natives.WEAPON.GET_AMMO_IN_PED_WEAPON(plyPed, WeaponHash)
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x015A522136D7F951 | Since: 323
     */
    function getAmmoInPed(ped: number | Ped, weaponhash: number | string): number;
    /**
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x78F0424C34306220 | Since: 323
     */
    function addAmmoToPed(ped: number | Ped, weaponHash: number | string, ammo: number): void;
    /**
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x14E56BC5B5DB6A19 | Since: 323
     */
    function setPedAmmo(ped: number | Ped, weaponHash: number | string, ammo: number): void;
    /**
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x3EDCB0505123623B | Since: 323
     */
    function setPedInfiniteAmmo(ped: number | Ped, toggle: boolean, weaponHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x183DADC6AA953186 | Since: 323
     */
    function setPedInfiniteAmmoClip(ped: number | Ped, toggle: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x24C024BA8379A70A | Since: 1868
     */
    function setPedStunGunFiniteAmmo(): void;
    /**
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0xBF0FD6E56C964FCB | Since: 323
     */
    function giveToPed(ped: number | Ped, weaponHash: number | string, ammoCount: number, isHidden: boolean, bForceInHand: boolean): void;
    /**
     * Gives a weapon to PED with a delay, example:
     *
     * `WEAPON::GIVE_DELAYED_WEAPON_TO_PED(PED::PLAYER_PED_ID(), MISC::GET_HASH_KEY("WEAPON_PISTOL"), 1000, false)`
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0xB282DC6EBD803C75 | Since: 323
     */
    function giveDelayedToPed(ped: number | Ped, weaponHash: number | string, ammoCount: number, bForceInHand: boolean): void;
    /**
     * setting the last params to false it does that same so I would suggest its not a toggle
     *
     * Hash: 0xF25DF915FA38C5F3 | Since: 323
     */
    function removeAllPeds(ped: number | Ped): void;
    /**
     * This native removes a specified weapon from your selected ped.
     *
     * Example:
     * C#:
     * Function.Call(Hash.REMOVE_WEAPON_FROM_PED, Game.Player.Character, 0x99B507EA);
     *
     * C++:
     * `WEAPON::REMOVE_WEAPON_FROM_PED(PLAYER::PLAYER_PED_ID(), 0x99B507EA);`
     *
     * The code above removes the knife from the player.
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x4899CB088EDF59B8 | Since: 323
     */
    function removeFromPed(ped: number | Ped, weaponHash: number | string): void;
    /**
     * Hides the players weapon during a cutscene.
     *
     * Hash: 0x6F6981D2253C208F | Since: 323
     */
    function hidePedForScriptedCutscene(ped: number | Ped, toggle: boolean): void;
    /**
     * Has 5 parameters since latest patches.
     *
     * Hash: 0x0725A4CCFDED9A70 | Since: 323
     */
    function setPedCurrentVisible(ped: number | Ped, visible: boolean, deselectWeapon: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x476AE72C1D19D1A8 | Since: 323
     */
    function setPedDropssWhenDead(ped: number | Ped, toggle: boolean): void;
    /**
     * It determines what weapons caused damage:
     *
     * If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
     * If you want to define any melee weapon, second parameter=0, third parameter=1.
     * If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x2D343D2219CD027A | Since: 323
     */
    function hasPedBeenDamagedBy(ped: number | Ped, weaponHash: number | string, weaponType: number): boolean;
    /**
     * Does NOT seem to work with HAS_PED_BEEN_DAMAGED_BY_WEAPON. Use CLEAR_ENTITY_LAST_WEAPON_DAMAGE and HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON instead.
     *
     * Hash: 0x0E98F88A24C5F4B8 | Since: 323
     */
    function clearPedLastDamage(ped: number | Ped): void;
    /**
     * It determines what weapons caused damage:
     *
     * If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
     * If you want to define any melee weapon, second parameter=0, third parameter=1.
     * If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x131D401334815E94 | Since: 323
     */
    function hasEntityBeenDamagedBy(entity: number | Entity, weaponHash: number | string, weaponType: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAC678E40BE7C74D2 | Since: 323
     */
    function clearEntityLastDamage(entity: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x6B7513D9966FBEC0 | Since: 323
     */
    function setPedDrops(ped: number | Ped): void;
    /**
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x208A1888007FC0E6 | Since: 323
     */
    function setPedDropsInventory(ped: number | Ped, weaponHash: number | string, xOffset: number, yOffset: number, zOffset: number, ammoCount: number): void;
    /**
     * p2 is mostly 1 in the scripts.
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0xA38DCFFCEA8962FA | Since: 323
     */
    function getMaxAmmoInClip(ped: number | Ped, weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xC8C6F4B1CDEB40EF | Since: 3407
     */
    function getTimeBeforeVehicleReloadFinishes(vehicle: number | Vehicle, seat: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x8062F07153F4446F | Since: 3407
     */
    function hasReloadingInVehicle(vehicle: number | Vehicle, seat: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xD0AD348FFD7A6868 | Since: 3407
     */
    function getVehicleReloadTime(vehicle: number | Vehicle, seat: number): number;
    /**
     * No comment provided
     *
     * Hash: 0x2857938C5D407AFA | Since: 3407
     */
    function getAmmoInVehicleClip(vehicle: number | Vehicle, seat: number): [boolean, number];
    /**
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x2E1202248937775C | Since: 323
     */
    function getAmmoInClip(ped: number | Ped, weaponHash: number | string): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x873906720EE842C3 | Since: 3407
     */
    function setAmmoInVehicleClip(vehicle: number | Vehicle, seat: number, ammo: number): boolean;
    /**
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0xDCD2A934D65CB497 | Since: 323
     */
    function setAmmoInClip(ped: number | Ped, weaponHash: number | string, ammo: number): boolean;
    /**
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0xDC16122C7A20C933 | Since: 323
     */
    function getMaxAmmo(ped: number | Ped, weaponHash: number | string): [boolean, number];
    /**
     * Returns the max ammo for an ammo type. Ammo types: https://gist.github.com/root-cause/faf41f59f7a6d818b7db0b839bd147c1
     *
     * Hash: 0x585847C5E4E11709 | Since: 1103
     */
    function getMaxAmmoByType(ped: number | Ped, ammoTypeHash: number | string): [boolean, number];
    /**
     * Ammo types: https://gist.github.com/root-cause/faf41f59f7a6d818b7db0b839bd147c1
     *
     * Hash: 0x2472622CE1F2D45F | Since: 1103
     */
    function addPedAmmoByType(ped: number | Ped, ammoTypeHash: number | string, ammo: number): void;
    /**
     * Ammo types: https://gist.github.com/root-cause/faf41f59f7a6d818b7db0b839bd147c1
     *
     * Hash: 0x5FD1E1F011E76D7E | Since: 323
     */
    function setPedAmmoByType(ped: number | Ped, ammoTypeHash: number | string, ammo: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x39D22031557946C1 | Since: 323
     */
    function getPedAmmoByType(ped: number | Ped, ammoTypeHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xA4EFEF9440A5B0EF | Since: 323
     */
    function setPedAmmoToDrop(ped: number | Ped): void;
    /**
     * No comment provided
     *
     * Hash: 0xE620FD3512A04F18 | Since: 323
     */
    function setPickupAmmoAmountScaler(): void;
    /**
     * Returns the current ammo type of the specified ped's specified weapon.
     * MkII magazines will change the return value, like Pistol MkII returning AMMO_PISTOL without any components and returning AMMO_PISTOL_TRACER after Tracer Rounds component is attached.
     * Use 0xF489B44DD5AF4BD9 if you always want AMMO_PISTOL.
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x7FEAD38B326B9F74 | Since: 323
     */
    function getPedAmmoTypeFrom(ped: number | Ped, weaponHash: number | string): number;
    /**
     * Returns the base/default ammo type of the specified ped's specified weapon.
     * Use GET_PED_AMMO_TYPE_FROM_WEAPON if you want current ammo type (like AMMO_MG_INCENDIARY/AMMO_MG_TRACER while using MkII magazines) and use this if you want base ammo type. (AMMO_MG)
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0xF489B44DD5AF4BD9 | Since: 1103
     */
    function getPedOriginalAmmoTypeFrom(ped: number | Ped, weaponHash: number | string): number;
    /**
     * Pass ped. Pass address of Vector3.
     * The coord will be put into the Vector3.
     * The return will determine whether there was a coord found or not.
     *
     * Hash: 0x6C4D0409BA1A2BC2 | Since: 323
     */
    function getPedLastImpactCoord(ped: number | Ped): [boolean, Vector3];
    /**
     * p1/gadgetHash was always 0xFBAB5776 ("GADGET_PARACHUTE").
     * p2 is always true.
     *
     * Hash: 0xD0D7B1E680ED4A1A | Since: 323
     */
    function setPedGadget(ped: number | Ped, gadgetHash: number | string): void;
    /**
     * gadgetHash - was always 0xFBAB5776 ("GADGET_PARACHUTE").
     *
     * Hash: 0xF731332072F5156C | Since: 323
     */
    function getIsPedGadgetEquipped(ped: number | Ped, gadgetHash: number | string): boolean;
    /**
     * Returns the hash of the weapon.
     *
     * `var num7 = WEAPON::GET_SELECTED_PED_WEAPON(num4);`
     * sub_27D3(num7);
     * switch (num7)
     * {
     * case 0x24B17070:
     *
     * `Also see WEAPON::GET_CURRENT_PED_WEAPON. Difference?`
     *
     * -------------------------------------------------------------------------
     *
     * The difference is that GET_SELECTED_PED_WEAPON simply returns the ped's current weapon hash but GET_CURRENT_PED_WEAPON also checks the weapon object and returns true if the hash of the weapon object equals the weapon hash
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x0A6DB4965674D243 | Since: 323
     */
    function getSelectedPed(ped: number | Ped): number;
    /**
     * `WEAPON::EXPLODE_PROJECTILES(PLAYER::PLAYER_PED_ID(), func_221(0x00000003), 0x00000001);`
     *
     * Hash: 0xFC4BD125DE7611E4 | Since: 323
     */
    function explodeProjectiles(ped: number | Ped, weaponHash: number | string): void;
    /**
     * If `explode` true, then removal is done through exploding the projectile. Basically the same as EXPLODE_PROJECTILES but without defining the owner ped.
     *
     * Hash: 0xFC52E0F37E446528 | Since: 323
     */
    function removeAllProjectilesOfType(weaponHash: number | string, explode: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0x840F03E9041E2C9C | Since: 323
     */
    function getLockonDistanceOfCurrentPed(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x814C9D19DFD69679 | Since: 323
     */
    function getMaxRangeOfCurrentPed(ped: number | Ped): number;
    /**
     * Fourth Parameter = unsure, almost always -1
     *
     * Hash: 0x717C8481234E3B88 | Since: 323
     */
    function hasVehicleGotProjectileAttached(driver: number | Ped, vehicle: number | Vehicle, weaponHash: number | string): boolean;
    /**
     * Full list of weapons & components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0xD966D51AA5B28BB9 | Since: 323
     */
    function giveComponentToPed(ped: number | Ped, weaponHash: number | string, componentHash: number | string): void;
    /**
     * Full list of weapons & components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x1E8BE90C74FB4C09 | Since: 323
     */
    function removeComponentFromPed(ped: number | Ped, weaponHash: number | string, componentHash: number | string): void;
    /**
     * Full list of weapons & components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0xC593212475FAE340 | Since: 323
     */
    function hasPedGotComponent(ped: number | Ped, weaponHash: number | string, componentHash: number | string): boolean;
    /**
     * Full list of weapons & components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x0D78DE0572D3969E | Since: 323
     */
    function isPedComponentActive(ped: number | Ped, weaponHash: number | string, componentHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x8C0D57EA686FAD87 | Since: 323
     */
    function refillAmmoInstantly(ped: number | Ped): boolean;
    /**
     * Forces a ped to reload only if they are able to; if they have a full magazine, they will not reload.
     *
     * Hash: 0x20AE33F3AC9C0033 | Since: 323
     */
    function makePedReload(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x5B1513F27F279A44 | Since: 3407
     */
    function triggerVehicleReload(vehicle: number | Vehicle, seat: number, ped: number | Ped): boolean;
    /**
     * Nearly every instance of p1 I found was 31. Nearly every instance of p2 I found was 0.
     *
     * REQUEST_WEAPON_ASSET(iLocal_1888, 31, 26);
     *
     * Hash: 0x5443438F033E29C3 | Since: 323
     */
    function requestAsset(weaponHash: number | string): void;
    /**
     * No comment provided
     *
     * Hash: 0x36E353271F0E90EE | Since: 323
     */
    function hasAssetLoaded(weaponHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xAA08EF13F341C8FC | Since: 323
     */
    function removeAsset(weaponHash: number | string): void;
    /**
     * Now has 8 params.
     *
     * Hash: 0x9541D3CF0D398F36 | Since: 323
     */
    function createObject(weaponHash: number | string, ammoCount: number, pos: Vector3, showWorldModel: boolean, scale: number): number;
    /**
     * componentHash:
     * `(use WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL() to get hash value)`
     * ${component_at_ar_flsh}, ${component_at_ar_supp}, ${component_at_pi_flsh}, ${component_at_scope_large}, ${component_at_ar_supp_02}
     *
     * Hash: 0x33E179436C0B31DB | Since: 323
     */
    function giveComponentToWeaponObject(weaponObject: number | Object, componentHash: number | string): void;
    /**
     * see DOES_WEAPON_TAKE_WEAPON_COMPONENT for full list of weapons & components
     *
     * Hash: 0xF7D82B0D66777611 | Since: 323
     */
    function removeComponentFromWeaponObject(_object: number | Object, componentHash: number | string): void;
    /**
     * see DOES_WEAPON_TAKE_WEAPON_COMPONENT for full list of weapons & components
     *
     * Hash: 0x76A18844E743BF91 | Since: 323
     */
    function hasGotWeaponComponent(weapon: number | Object, componentHash: number | string): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xB1FA61371AF7C4B7 | Since: 323
     */
    function giveObjectToPed(weaponObject: number | Object, ped: number | Ped): void;
    /**
     * Full list of weapons & components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x5CEE3DF569CECAB0 | Since: 323
     */
    function doesTakeWeaponComponent(weaponHash: number | string, componentHash: number | string): boolean;
    /**
     * Drops the current weapon and returns the object
     *
     * Unknown behavior when unarmed.
     *
     * Hash: 0xCAE1DC9A0E22A16D | Since: 323
     */
    function getObjectFromPed(ped: number | Ped): number;
    /**
     * Gives the specified loadout to the specified ped.
     * Loadouts are defined in common.rpf\data\ai\loadouts.meta
     *
     * Hash: 0x68F8BE6AF5CDF8A6 | Since: 505
     */
    function giveLoadoutToPed(ped: number | Ped, loadoutHash: number | string): void;
    /**
     * tintIndex can be the following:
     *
     * 0 - Normal
     * 1 - Green
     * 2 - Gold
     * 3 - Pink
     * 4 - Army
     * 5 - LSPD
     * 6 - Orange
     * 7 - Platinum
     * Full list of weapons, components & tint indexes by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x50969B9B89ED5738 | Since: 323
     */
    function setPedTintIndex(ped: number | Ped, weaponHash: number | string, tintIndex: number): void;
    /**
     * Full list of weapons, components & tint indexes by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x2B9EEDC07BD06B9F | Since: 323
     */
    function getPedTintIndex(ped: number | Ped, weaponHash: number | string): number;
    /**
     * Full list of weapons, components & tint indexes by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0xF827589017D4E4A9 | Since: 323
     */
    function setObjectTintIndex(weapon: number | Object, tintIndex: number): void;
    /**
     * No comment provided
     *
     * Hash: 0xCD183314F7CD2E57 | Since: 323
     */
    function getObjectTintIndex(weapon: number | Object): number;
    /**
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x5DCF6C5CAB2E9BF7 | Since: 323
     */
    function getTintCount(weaponHash: number | string): number;
    /**
     * Colors:
     * 0 = Gray
     * 1 = Dark Gray
     * 2 = Black
     * 3 = White
     * 4 = Blue
     * 5 = Cyan
     * 6 = Aqua
     * 7 = Cool Blue
     * 8 = Dark Blue
     * 9 = Royal Blue
     * 10 = Plum
     * 11 = Dark Purple
     * 12 = Purple
     * 13 = Red
     * 14 = Wine Red
     * 15 = Magenta
     * 16 = Pink
     * 17 = Salmon
     * 18 = Hot Pink
     * 19 = Rust Orange
     * 20 = Brown
     * 21 = Earth
     * 22 = Orange
     * 23 = Light Orange
     * 24 = Dark Yellow
     * 25 = Yellow
     * 26 = Light Brown
     * 27 = Lime Green
     * 28 = Olive
     * 29 = Moss
     * 30 = Turquoise
     * 31 = Dark Green
     * Full list of weapons, components, tint indexes & weapon liveries by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x9FE5633880ECD8ED | Since: 1103
     */
    function setPedComponentTintIndex(ped: number | Ped, weaponHash: number | string, camoComponentHash: number | string, colorIndex: number): void;
    /**
     * Returns -1 if camoComponentHash is invalid/not attached to the weapon.
     * Full list of weapons, components, tint indexes & weapon liveries by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0xF0A60040BE558F2D | Since: 1103
     */
    function getPedComponentTintIndex(ped: number | Ped, weaponHash: number | string, camoComponentHash: number | string): number;
    /**
     * Colors:
     * 0 = Gray
     * 1 = Dark Gray
     * 2 = Black
     * 3 = White
     * 4 = Blue
     * 5 = Cyan
     * 6 = Aqua
     * 7 = Cool Blue
     * 8 = Dark Blue
     * 9 = Royal Blue
     * 10 = Plum
     * 11 = Dark Purple
     * 12 = Purple
     * 13 = Red
     * 14 = Wine Red
     * 15 = Magenta
     * 16 = Pink
     * 17 = Salmon
     * 18 = Hot Pink
     * 19 = Rust Orange
     * 20 = Brown
     * 21 = Earth
     * 22 = Orange
     * 23 = Light Orange
     * 24 = Dark Yellow
     * 25 = Yellow
     * 26 = Light Brown
     * 27 = Lime Green
     * 28 = Olive
     * 29 = Moss
     * 30 = Turquoise
     * 31 = Dark Green
     * Full list of weapons, components, tint indexes & weapon liveries by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x5DA825A85D0EA6E6 | Since: 1103
     */
    function setObjectComponentTintIndex(weaponObject: number | Object, camoComponentHash: number | string, colorIndex: number): void;
    /**
     * Returns -1 if camoComponentHash is invalid/not attached to the weapon object.
     * Full list of weapons, components, tint indexes & weapon liveries by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0xB3EA4FEABF41464B | Since: 1103
     */
    function getObjectComponentTintIndex(weaponObject: number | Object, camoComponentHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xA2C9AC24B4061285 | Since: 1103
     */
    function getPedCamoIndex(ped: number | Ped, weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x977CA98939E82E4B | Since: 1103
     */
    function setObjectCamoIndex(weaponObject: number | Object): void;
    /**
     * struct WeaponHudStatsData
     * {
     * BYTE hudDamage; // 0x0000
     * char _0x0001[0x7]; // 0x0001
     * BYTE hudSpeed; // 0x0008
     * char _0x0009[0x7]; // 0x0009
     * BYTE hudCapacity; // 0x0010
     * char _0x0011[0x7]; // 0x0011
     * BYTE hudAccuracy; // 0x0018
     * char _0x0019[0x7]; // 0x0019
     * BYTE hudRange; // 0x0020
     * };
     *
     * Usage:
     *
     * WeaponHudStatsData data;
     * if (GET_WEAPON_HUD_STATS(weaponHash, (int *)&data))
     * {
     * // BYTE damagePercentage = data.hudDamage and so on
     * }
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0xD92C739EE34C9EBA | Since: 323
     */
    function getHudStats(weaponHash: number | string): [boolean, any];
    /**
     * No comment provided
     *
     * Hash: 0xB3CAF387AE12E9F8 | Since: 323
     */
    function getComponentHudStats(componentHash: number | string): [boolean, any];
    /**
     * This native does not return damages of weapons from the melee and explosive group.
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x3133B907D8B32053 | Since: 323
     */
    function getDamage(weaponHash: number | string, componentHash: number | string): number;
    /**
     * // Returns the size of the default weapon component clip.
     *
     * Use it like this:
     *
     * char cClipSize[32];
     * Hash cur;
     * `if (WEAPON::GET_CURRENT_PED_WEAPON(playerPed, &cur, 1))`
     * {
     * `if (WEAPON::IS_WEAPON_VALID(cur))`
     * {
     * `int iClipSize = WEAPON::GET_WEAPON_CLIP_SIZE(cur);`
     * sprintf_s(cClipSize, "ClipSize: %.d", iClipSize);
     * vDrawString(cClipSize, 0.5f, 0.5f);
     * }
     * }
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x583BE370B1EC6EB4 | Since: 323
     */
    function getClipSize(weaponHash: number | string): number;
    /**
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x065D2AACAD8CF7A4 | Since: 1290
     */
    function getTimeBetweenShots(weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x8378627201D5497D | Since: 323
     */
    function setPedChanceOfFiringBlanks(ped: number | Ped, xBias: number, yBias: number): void;
    /**
     * Returns handle of the projectile.
     *
     * Hash: 0xB4C8D77C80C0421E | Since: 323
     */
    function setPedShootOrdnance(ped: number | Ped): number;
    /**
     * No comment provided
     *
     * Hash: 0x48164DBB970AC3F0 | Since: 323
     */
    function requestHighDetailModel(weaponObject: number | Entity): void;
    /**
     * No comment provided
     *
     * Hash: 0x1091922715B68DF0 | Since: 3095
     */
    function setPedDamageModifier(weapon: number | string, damageModifier: number): void;
    /**
     * Changes the weapon damage output by the given multiplier value. Must be run every frame.
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x4757F00BC6323CFE | Since: 505
     */
    function setDamageModifier(weaponHash: number | string, damageMultiplier: number): void;
    /**
     * No comment provided
     *
     * Hash: 0x4AE5AC8B852D642C | Since: 2372
     */
    function setAoeModifier(weaponHash: number | string, multiplier: number): void;
    /**
     * `ex, WEAPON::SET_WEAPON_EFFECT_DURATION_MODIFIER(joaat("vehicle_weapon_mine_slick"), 1.0);`
     *
     * Hash: 0xE6D2CEDD370FF98E | Since: 2372
     */
    function setEffectDurationModifier(p0: number | string): void;
    /**
     * This native returns a true or false value.
     *
     * Ped ped = The ped whose weapon you want to check.
     *
     * Hash: 0x65F0C5AE05943EC7 | Since: 323
     */
    function isPedCurrentSilenced(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x4B7620C47217126C | Since: 323
     */
    function isFlashLightOn(ped: number | Ped): boolean;
    /**
     * No comment provided
     *
     * Hash: 0xCEA66DAD478CD39B | Since: 323
     */
    function setFlashLightFadeDistance(distance: number): boolean;
    /**
     * Enables/disables flashlight on ped's weapon.
     *
     * Hash: 0x988DB6FE9B3AC000 | Since: 2060
     */
    function setFlashLightActiveHistory(ped: number | Ped, toggle: boolean): void;
    /**
     * Changes the selected ped aiming animation style.
     * Note : You must use GET_HASH_KEY!
     *
     * Strings to use with GET_HASH_KEY :
     *
     * "Ballistic",
     * "Default",
     * "Fat",
     * "Female",
     * "FirstPerson",
     * "FirstPersonAiming",
     * "FirstPersonFranklin",
     * "FirstPersonFranklinAiming",
     * "FirstPersonFranklinRNG",
     * "FirstPersonFranklinScope",
     * "FirstPersonMPFemale",
     * "FirstPersonMichael",
     * "FirstPersonMichaelAiming",
     * "FirstPersonMichaelRNG",
     * "FirstPersonMichaelScope",
     * "FirstPersonRNG",
     * "FirstPersonScope",
     * "FirstPersonTrevor",
     * "FirstPersonTrevorAiming",
     * "FirstPersonTrevorRNG",
     * "FirstPersonTrevorScope",
     * "Franklin",
     * "Gang",
     * "Gang1H",
     * "GangFemale",
     * "Hillbilly",
     * "MP_F_Freemode",
     * "Michael",
     * "SuperFat",
     * "Trevor"
     *
     * Hash: 0x1055AC3A667F09D9 | Since: 323
     */
    function setAnimationOverride(ped: number | Ped, animStyle: number | string): void;
    /**
     * enum class eDamageType
     * {
     * UNKNOWN = 0,
     * NONE = 1,
     * MELEE = 2,
     * BULLET = 3,
     * BULLET_RUBBER = 4,
     * EXPLOSIVE = 5,
     * FIRE = 6,
     * COLLISION = 7,
     * FALL = 8,
     * DROWN = 9,
     * ELECTRIC = 10,
     * BARBED_WIRE = 11,
     * FIRE_EXTINGUISHER = 12,
     * SMOKE = 13,
     * WATER_CANNON = 14,
     * TRANQUILIZER = 15,
     * };
     *
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x3BE0BB12D25FB305 | Since: 323
     */
    function getDamageType(weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0xE4DCEC7FD5B739A5 | Since: 323
     */
    function setEqippedStartSpinningAtFullSpeed(ped: number | Ped): void;
    /**
     * this returns if you can use the weapon while using a parachute
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0xBC7BE5ABC0879F74 | Since: 323
     */
    function canUseOnParachute(weaponHash: number | string): boolean;
    /**
     * Both coordinates are from objects in the decompiled scripts. Native related to 0xECDC202B25E5CF48 p1 value. The only weapon hash used in the decompiled scripts is weapon_air_defence_gun. These two natives are used by the yacht script, decompiled scripts suggest it and the weapon hash used (valkyrie's rockets) are also used by yachts.
     *
     * Hash: 0x91EF34584710BE99 | Since: 573
     */
    function createAirDefenceSphere(pos: Vector3, radius: number, weaponHash: number | string): number;
    /**
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0x9DA58CDBF6BDBC08 | Since: 1011
     */
    function createAirDefenceAngledArea(radius: number, weaponHash: number | string): number;
    /**
     * No comment provided
     *
     * Hash: 0x0ABF535877897560 | Since: 573
     */
    function removeAirDefenceSphere(zoneId: number): boolean;
    /**
     * No comment provided
     *
     * Hash: 0x1E45B34ADEBEE48E | Since: 573
     */
    function removeAllAirDefenceSpheres(): void;
    /**
     * No comment provided
     *
     * Hash: 0xECDC202B25E5CF48 | Since: 573
     */
    function setPlayerTargettableForAirDefenceSphere(player: number | string | Player, zoneId: number, enable: boolean): void;
    /**
     * No comment provided
     *
     * Hash: 0xDAB963831DBFD3F4 | Since: 1103
     */
    function isAirDefenceSphereInArea(pos: Vector3, radius: number): [boolean, number];
    /**
     * No comment provided
     *
     * Hash: 0x44F1012B69313374 | Since: 573
     */
    function fireAirDefenceSphereAtPosition(zoneId: number, pos: Vector3): void;
    /**
     * No comment provided
     *
     * Hash: 0xCD79A550999D7D4F | Since: 678
     */
    function doesAirDefenceSphereExist(zoneId: number): boolean;
    /**
     * Disables selecting the given weapon. Ped isn't forced to put the gun away. However you can't reselect the weapon if you holster then unholster. Weapon is also grayed out on the weapon wheel.
     * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
     *
     * Hash: 0xB4771B9AAF4E68E4 | Since: 1103
     */
    function setCanPedSelectInventory(ped: number | Ped, weaponHash: number | string, toggle: boolean): void;
    /**
     * Disable all weapons. Does the same as 0xB4771B9AAF4E68E4 except for all weapons.
     *
     * Hash: 0xEFF296097FF1E509 | Since: 1103
     */
    function setCanPedSelectAlls(ped: number | Ped, toggle: boolean): void;
}
export declare namespace zone {
    /**
     * No comment provided
     *
     * Hash: 0x27040C25DE6CB2F4 | Since: 323
     */
    function getAtCoords(pos: Vector3): number;
    /**
     * 'zoneName' corresponds to an entry in 'popzone.ipl'.
     *
     * AIRP = Los Santos International Airport
     * ALAMO = Alamo Sea
     * ALTA = Alta
     * ARMYB = Fort Zancudo
     * BANHAMC = Banham Canyon Dr
     * BANNING = Banning
     * BEACH = Vespucci Beach
     * BHAMCA = Banham Canyon
     * BRADP = Braddock Pass
     * BRADT = Braddock Tunnel
     * BURTON = Burton
     * CALAFB = Calafia Bridge
     * CANNY = Raton Canyon
     * CCREAK = Cassidy Creek
     * CHAMH = Chamberlain Hills
     * CHIL = Vinewood Hills
     * CHU = Chumash
     * CMSW = Chiliad Mountain State Wilderness
     * CYPRE = Cypress Flats
     * DAVIS = Davis
     * DELBE = Del Perro Beach
     * DELPE = Del Perro
     * DELSOL = La Puerta
     * DESRT = Grand Senora Desert
     * DOWNT = Downtown
     * DTVINE = Downtown Vinewood
     * EAST_V = East Vinewood
     * EBURO = El Burro Heights
     * ELGORL = El Gordo Lighthouse
     * ELYSIAN = Elysian Island
     * GALFISH = Galilee
     * GOLF = GWC and Golfing Society
     * GRAPES = Grapeseed
     * GREATC = Great Chaparral
     * HARMO = Harmony
     * HAWICK = Hawick
     * HORS = Vinewood Racetrack
     * HUMLAB = Humane Labs and Research
     * JAIL = Bolingbroke Penitentiary
     * KOREAT = Little Seoul
     * LACT = Land Act Reservoir
     * LAGO = Lago Zancudo
     * LDAM = Land Act Dam
     * LEGSQU = Legion Square
     * LMESA = La Mesa
     * LOSPUER = La Puerta
     * MIRR = Mirror Park
     * MORN = Morningwood
     * MOVIE = Richards Majestic
     * MTCHIL = Mount Chiliad
     * MTGORDO = Mount Gordo
     * MTJOSE = Mount Josiah
     * MURRI = Murrieta Heights
     * NCHU = North Chumash
     * NOOSE = N.O.O.S.E
     * OCEANA = Pacific Ocean
     * PALCOV = Paleto Cove
     * PALETO = Paleto Bay
     * PALFOR = Paleto Forest
     * PALHIGH = Palomino Highlands
     * PALMPOW = Palmer-Taylor Power Station
     * PBLUFF = Pacific Bluffs
     * PBOX = Pillbox Hill
     * PROCOB = Procopio Beach
     * RANCHO = Rancho
     * RGLEN = Richman Glen
     * RICHM = Richman
     * ROCKF = Rockford Hills
     * RTRAK = Redwood Lights Track
     * SANAND = San Andreas
     * SANCHIA = San Chianski Mountain Range
     * SANDY = Sandy Shores
     * SKID = Mission Row
     * SLAB = Stab City
     * STAD = Maze Bank Arena
     * STRAW = Strawberry
     * TATAMO = Tataviam Mountains
     * TERMINA = Terminal
     * TEXTI = Textile City
     * TONGVAH = Tongva Hills
     * TONGVAV = Tongva Valley
     * VCANA = Vespucci Canals
     * VESP = Vespucci
     * VINE = Vinewood
     * WINDF = Ron Alternates Wind Farm
     * WVINE = West Vinewood
     * ZANCUDO = Zancudo River
     * ZP_ORT = Port of South Los Santos
     * ZQ_UAR = Davis Quartz
     *
     * Full list of zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/zones.json
     *
     * Hash: 0x98CD1D2934B76CC1 | Since: 323
     */
    function getFromNameId(zoneName: string): number;
    /**
     * No comment provided
     *
     * Hash: 0x4334BC40AA0CB4BB | Since: 323
     */
    function getPopschedule(zoneId: number): number;
    /**
     * AIRP = Los Santos International Airport
     * ALAMO = Alamo Sea
     * ALTA = Alta
     * ARMYB = Fort Zancudo
     * BANHAMC = Banham Canyon Dr
     * BANNING = Banning
     * BEACH = Vespucci Beach
     * BHAMCA = Banham Canyon
     * BRADP = Braddock Pass
     * BRADT = Braddock Tunnel
     * BURTON = Burton
     * CALAFB = Calafia Bridge
     * CANNY = Raton Canyon
     * CCREAK = Cassidy Creek
     * CHAMH = Chamberlain Hills
     * CHIL = Vinewood Hills
     * CHU = Chumash
     * CMSW = Chiliad Mountain State Wilderness
     * CYPRE = Cypress Flats
     * DAVIS = Davis
     * DELBE = Del Perro Beach
     * DELPE = Del Perro
     * DELSOL = La Puerta
     * DESRT = Grand Senora Desert
     * DOWNT = Downtown
     * DTVINE = Downtown Vinewood
     * EAST_V = East Vinewood
     * EBURO = El Burro Heights
     * ELGORL = El Gordo Lighthouse
     * ELYSIAN = Elysian Island
     * GALFISH = Galilee
     * GOLF = GWC and Golfing Society
     * GRAPES = Grapeseed
     * GREATC = Great Chaparral
     * HARMO = Harmony
     * HAWICK = Hawick
     * HORS = Vinewood Racetrack
     * HUMLAB = Humane Labs and Research
     * JAIL = Bolingbroke Penitentiary
     * KOREAT = Little Seoul
     * LACT = Land Act Reservoir
     * LAGO = Lago Zancudo
     * LDAM = Land Act Dam
     * LEGSQU = Legion Square
     * LMESA = La Mesa
     * LOSPUER = La Puerta
     * MIRR = Mirror Park
     * MORN = Morningwood
     * MOVIE = Richards Majestic
     * MTCHIL = Mount Chiliad
     * MTGORDO = Mount Gordo
     * MTJOSE = Mount Josiah
     * MURRI = Murrieta Heights
     * NCHU = North Chumash
     * NOOSE = N.O.O.S.E
     * OCEANA = Pacific Ocean
     * PALCOV = Paleto Cove
     * PALETO = Paleto Bay
     * PALFOR = Paleto Forest
     * PALHIGH = Palomino Highlands
     * PALMPOW = Palmer-Taylor Power Station
     * PBLUFF = Pacific Bluffs
     * PBOX = Pillbox Hill
     * PROCOB = Procopio Beach
     * RANCHO = Rancho
     * RGLEN = Richman Glen
     * RICHM = Richman
     * ROCKF = Rockford Hills
     * RTRAK = Redwood Lights Track
     * SANAND = San Andreas
     * SANCHIA = San Chianski Mountain Range
     * SANDY = Sandy Shores
     * SKID = Mission Row
     * SLAB = Stab City
     * STAD = Maze Bank Arena
     * STRAW = Strawberry
     * TATAMO = Tataviam Mountains
     * TERMINA = Terminal
     * TEXTI = Textile City
     * TONGVAH = Tongva Hills
     * TONGVAV = Tongva Valley
     * VCANA = Vespucci Canals
     * VESP = Vespucci
     * VINE = Vinewood
     * WINDF = Ron Alternates Wind Farm
     * WVINE = West Vinewood
     * ZANCUDO = Zancudo River
     * ZP_ORT = Port of South Los Santos
     * ZQ_UAR = Davis Quartz
     *
     * Full list of zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/zones.json
     *
     * Hash: 0xCD90657D4C30E1CA | Since: 323
     */
    function getNameOf(pos: Vector3): string;
    /**
     * No comment provided
     *
     * Hash: 0xBA5ECEEA120E5611 | Since: 323
     */
    function setEnabled(zoneId: number, toggle: boolean): void;
    /**
     * cellphone range 1- 5 used for signal bar in iFruit phone
     *
     * Hash: 0x5F7B268D15BA0739 | Since: 323
     */
    function getScumminess(zoneId: number): number;
    /**
     * Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.
     *
     * Modified example from "am_imp_exp.c4", line 6406:
     * `\/\* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));`
     * etc.
     * \*\/
     * `ZONE::OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(popSchedules[index], vehicleHash);`
     * `STREAMING::REQUEST_MODEL(vehicleHash);`
     *
     * Hash: 0x5F7D596BAC2E7777 | Since: 323
     */
    function overridePopscheduleVehicleModel(scheduleId: number, vehicleHash: number | string): void;
    /**
     * Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.
     *
     * Modified example from "am_imp_exp.c4", line 6418:
     * `\/\* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));`
     * etc.
     * \*\/
     * `STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(vehicleHash);`
     * `ZONE::CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(popSchedules[index]);`
     *
     * Hash: 0x5C0DE367AA0D911C | Since: 323
     */
    function clearPopscheduleOverrideVehicleModel(scheduleId: number): void;
    /**
     * Returns a hash representing which part of the map the given coords are located.
     *
     * Possible return values:
     * (Hash of) city -> -289320599
     * (Hash of) countryside -> 2072609373
     *
     * C# Example :
     *
     * Ped player = Game.Player.Character;
     * Hash h = Function.Call<Hash>(Hash.GET_HASH_OF_MAP_AREA_AT_COORDS, player.Position.X, player.Position.Y, player.Position.Z);
     *
     * Hash: 0x7EE64D51E8498728 | Since: 323
     */
    function getHashOfMapAreaAtCoords(pos: Vector3): number;
}
/**
 * Pauses execution of the current script, please note this behavior is only seen when called from one of the game script files(ysc). In order to wait an asi script use "static void WAIT(DWORD time);" found in main.h
 *
 * Hash: 0x4EDE34FBADD967A6 | Since: 323
 * @deprecated Use builtin.wait(ms) instead
 */
export declare function wait(ms: number): void;
/**
 * Examples:
 * `g_384A = SYSTEM::START_NEW_SCRIPT("cellphone_flashhand", 1424);`
 * `l_10D = SYSTEM::START_NEW_SCRIPT("taxiService", 1828);`
 * `SYSTEM::START_NEW_SCRIPT("AM_MP_YACHT", 5000);`
 * `SYSTEM::START_NEW_SCRIPT("emergencycall", 512);`
 * `SYSTEM::START_NEW_SCRIPT("emergencycall", 512);`
 * `SYSTEM::START_NEW_SCRIPT("FM_maintain_cloud_header_data", 1424);`
 * `SYSTEM::START_NEW_SCRIPT("FM_Mission_Controller", 31000);`
 * `SYSTEM::START_NEW_SCRIPT("tennis_family", 3650);`
 * `SYSTEM::START_NEW_SCRIPT("Celebrations", 3650);`
 *
 * Decompiled examples of usage when starting a script:
 *
 * `SCRIPT::REQUEST_SCRIPT(a_0);`
 * `if (SCRIPT::HAS_SCRIPT_LOADED(a_0)) {`
 * `SYSTEM::START_NEW_SCRIPT(a_0, v_3);`
 * `SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(a_0);`
 * return 1;
 * }
 *
 * or:
 *
 * v_2 = "MrsPhilips2";
 * `SCRIPT::REQUEST_SCRIPT(v_2);`
 * `while (!SCRIPT::HAS_SCRIPT_LOADED(v_2)) {`
 * `SCRIPT::REQUEST_SCRIPT(v_2);`
 * `SYSTEM::WAIT(0);`
 * }
 * sub_8792(36);
 * `SYSTEM::START_NEW_SCRIPT(v_2, 17000);`
 * `SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(v_2);`
 *
 * Hash: 0xE81651AD79516E48 | Since: 323
 * @deprecated Use builtin.startNewScript(scriptName, stackSize) instead
 */
export declare function startNewScript(scriptName: string, stackSize: number): number;
/**
 * return : script thread id, 0 if failed
 * Pass pointer to struct of args in p1, size of struct goes into p2
 *
 * Hash: 0xB8BA7F44DF1575E1 | Since: 323
 * @deprecated Use builtin.startNewScriptWithArgs(scriptName, argCount, stackSize) instead
 */
export declare function startNewScriptWithArgs(scriptName: string, argCount: number, stackSize: number): [number, any];
/**
 * No comment provided
 *
 * Hash: 0xEB1C67C3A5333A92 | Since: 323
 * @deprecated Use builtin.startNewScriptWithNameHash(scriptHash, stackSize) instead
 */
export declare function startNewScriptWithNameHash(scriptHash: number | string, stackSize: number): number;
/**
 * No comment provided
 *
 * Hash: 0xC4BB298BD441BE78 | Since: 323
 * @deprecated Use builtin.startNewScriptWithNameHashAndArgs(scriptHash, argCount, stackSize) instead
 */
export declare function startNewScriptWithNameHashAndArgs(scriptHash: number | string, argCount: number, stackSize: number): [number, any];
/**
 * Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).
 *
 * Hash: 0x83666F9FB8FEBD4B | Since: 323
 * @deprecated Use builtin.timera() instead
 */
export declare function timera(): number;
/**
 * No comment provided
 *
 * Hash: 0xC9D9444186B5A374 | Since: 323
 * @deprecated Use builtin.timerb() instead
 */
export declare function timerb(): number;
/**
 * No comment provided
 *
 * Hash: 0xC1B1E9A034A63A62 | Since: 323
 * @deprecated Use builtin.settimera(value) instead
 */
export declare function settimera(value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5AE11BC36633DE4E | Since: 323
 * @deprecated Use builtin.settimerb(value) instead
 */
export declare function settimerb(value: number): void;
/**
 * Gets the current frame time.
 *
 * Hash: 0x0000000050597EE2 | Since: 323
 * @deprecated Use builtin.timestep() instead
 */
export declare function timestep(): number;
/**
 * No comment provided
 *
 * Hash: 0x0BADBFA3B172435F | Since: 323
 * @deprecated Use builtin.sin(value) instead
 */
export declare function sin(value: number): number;
/**
 * No comment provided
 *
 * Hash: 0xD0FFB162F40A139C | Since: 323
 * @deprecated Use builtin.cos(value) instead
 */
export declare function cos(value: number): number;
/**
 * No comment provided
 *
 * Hash: 0x71D93B57D07F9804 | Since: 323
 * @deprecated Use builtin.sqrt(value) instead
 */
export declare function sqrt(value: number): number;
/**
 * No comment provided
 *
 * Hash: 0xE3621CC40F31FE2E | Since: 323
 * @deprecated Use builtin.pow(base, exponent) instead
 */
export declare function pow(base: number, exponent: number): number;
/**
 * No comment provided
 *
 * Hash: 0xE816E655DE37FE20 | Since: 1493
 * @deprecated Use builtin.log10(value) instead
 */
export declare function log10(value: number): number;
/**
 * Calculates the magnitude of a vector.
 *
 * Hash: 0x652D2EEEF1D3E62C | Since: 323
 * @deprecated Use builtin.vmag(pos) instead
 */
export declare function vmag(pos: Vector3): number;
/**
 * Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)
 *
 * Hash: 0xA8CEACB4F35AE058 | Since: 323
 * @deprecated Use builtin.vmag2(pos) instead
 */
export declare function vmag2(pos: Vector3): number;
/**
 * Calculates distance between vectors.
 *
 * Hash: 0x2A488C176D52CCA5 | Since: 323
 * @deprecated Use builtin.vdist(x1, y1, z1, x2, y2, z2) instead
 */
export declare function vdist(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
/**
 * Calculates distance between vectors but does not perform Sqrt operations. (Its way faster)
 *
 * Hash: 0xB7A628320EFF8E47 | Since: 323
 * @deprecated Use builtin.vdist2(x1, y1, z1, x2, y2, z2) instead
 */
export declare function vdist2(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
/**
 * No comment provided
 *
 * Hash: 0xEDD95A39E5544DE8 | Since: 323
 * @deprecated Use builtin.shiftLeft(value, bitShift) instead
 */
export declare function shiftLeft(value: number, bitShift: number): number;
/**
 * No comment provided
 *
 * Hash: 0x97EF1E5BCE9DC075 | Since: 323
 * @deprecated Use builtin.shiftRight(value, bitShift) instead
 */
export declare function shiftRight(value: number, bitShift: number): number;
/**
 * No comment provided
 *
 * Hash: 0xF34EE736CF047844 | Since: 323
 * @deprecated Use builtin.floor(value) instead
 */
export declare function floor(value: number): number;
/**
 * I'm guessing this rounds a float value up to the next whole number, and FLOOR rounds it down
 *
 * Hash: 0x11E019C8F43ACC8A | Since: 323
 * @deprecated Use builtin.ceil(value) instead
 */
export declare function ceil(value: number): number;
/**
 * No comment provided
 *
 * Hash: 0xF2DB717A73826179 | Since: 323
 * @deprecated Use builtin.round(value) instead
 */
export declare function round(value: number): number;
/**
 * No comment provided
 *
 * Hash: 0xBBDA792448DB5A89 | Since: 323
 * @deprecated Use builtin.toFloat(value) instead
 */
export declare function toFloat(value: number): number;
/**
 * THREAD_PRIO_HIGHEST = 0
 * THREAD_PRIO_NORMAL = 1
 * THREAD_PRIO_LOWEST = 2
 * THREAD_PRIO_MANUAL_UPDATE = 100
 *
 * Hash: 0x42B65DEEF2EDF2A1 | Since: 877
 * @deprecated Use builtin.setThisThreadPriority(priority) instead
 */
export declare function setThisThreadPriority(priority: number): void;
/**
 * No comment provided
 *
 * Hash: 0x846AA8E7D55EE5B6 | Since: 323
 * @deprecated Use app.dataValid() instead
 */
export declare function appDataValid(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD3A58A12C77D9D4B | Since: 323
 * @deprecated Use app.getInt(property) instead
 */
export declare function appGetInt(property: string): number;
/**
 * No comment provided
 *
 * Hash: 0x1514FB24C02C2322 | Since: 323
 * @deprecated Use app.getFloat(property) instead
 */
export declare function appGetFloat(property: string): number;
/**
 * No comment provided
 *
 * Hash: 0x749B023950D2311C | Since: 323
 * @deprecated Use app.getString(property) instead
 */
export declare function appGetString(property: string): string;
/**
 * No comment provided
 *
 * Hash: 0x607E8E3D3E4F9611 | Since: 323
 * @deprecated Use app.setInt(property, value) instead
 */
export declare function appSetInt(property: string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x25D7687C68E0DAA4 | Since: 323
 * @deprecated Use app.setFloat(property, value) instead
 */
export declare function appSetFloat(property: string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3FF2FCEC4B7721B4 | Since: 323
 * @deprecated Use app.setString(property, value) instead
 */
export declare function appSetString(property: string, value: string): void;
/**
 * Called in the gamescripts like:
 * `APP::APP_SET_APP("car");`
 * `APP::APP_SET_APP("dog");`
 *
 * Hash: 0xCFD0406ADAF90D2B | Since: 323
 * @deprecated Use app.setApp(appName) instead
 */
export declare function appSetApp(appName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x262AB456A3D21F93 | Since: 323
 * @deprecated Use app.setBlock(blockName) instead
 */
export declare function appSetBlock(blockName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x5FE1DF3342DB7DBA | Since: 323
 * @deprecated Use app.clearBlock() instead
 */
export declare function appClearBlock(): void;
/**
 * No comment provided
 *
 * Hash: 0xE41C65E07A5F05FC | Since: 323
 * @deprecated Use app.closeApp() instead
 */
export declare function appCloseApp(): void;
/**
 * No comment provided
 *
 * Hash: 0xE8E3FCF72EAC0EF8 | Since: 323
 * @deprecated Use app.closeBlock() instead
 */
export declare function appCloseBlock(): void;
/**
 * No comment provided
 *
 * Hash: 0x71EEE69745088DA0 | Since: 323
 * @deprecated Use app.hasLinkedSocialClubAccount() instead
 */
export declare function appHasLinkedSocialClubAccount(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCA52279A7271517F | Since: 323
 * @deprecated Use app.hasSyncedData(appName) instead
 */
export declare function appHasSyncedData(appName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x95C5D356CDA6E85F | Since: 323
 * @deprecated Use app.saveData() instead
 */
export declare function appSaveData(): void;
/**
 * No comment provided
 *
 * Hash: 0xC9853A2BE3DED1A6 | Since: 323
 * @deprecated Use app.getDeletedFileStatus() instead
 */
export declare function appGetDeletedFileStatus(): number;
/**
 * No comment provided
 *
 * Hash: 0x44151AEA95C8A003 | Since: 323
 * @deprecated Use app.deleteAppData(appName) instead
 */
export declare function appDeleteAppData(appName: string): boolean;
/**
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/RFb4GTny
 *
 * `AUDIO::PLAY_PED_RINGTONE("Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);`
 * `AUDIO::PLAY_PED_RINGTONE("Dial_and_Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);`
 *
 *
 * Hash: 0xF9E56683CA8E11A5 | Since: 323
 * @deprecated Use audio.playPedRingtone(ringtoneName, ped) instead
 */
export declare function playPedRingtone(ringtoneName: string, ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x1E8E5E20937E3137 | Since: 323
 * @deprecated Use audio.isPedRingtonePlaying(ped) instead
 */
export declare function isPedRingtonePlaying(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6C5AE23EFA885092 | Since: 323
 * @deprecated Use audio.stopPedRingtone(ped) instead
 */
export declare function stopPedRingtone(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x7497D2CE2C30D24C | Since: 323
 * @deprecated Use audio.isMobilePhoneCallOngoing() instead
 */
export declare function isMobilePhoneCallOngoing(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC8B1B2425604CDD0 | Since: 323
 * @deprecated Use audio.isMobileInterferenceActive() instead
 */
export declare function isMobileInterferenceActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDD3AA743AB7D4D75 | Since: 3095
 * @deprecated Use audio.getCurrentTvShowPlayTime() instead
 */
export declare function getCurrentTvShowPlayTime(): number;
/**
 * No comment provided
 *
 * Hash: 0xD2C91A0B572AAE56 | Since: 323
 * @deprecated Use audio.createNewScriptedConversation() instead
 */
export declare function createNewScriptedConversation(): void;
/**
 * NOTE: ones that are -1, 0 - 35 are determined by a function where it gets a TextLabel from a global then runs,
 * GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME and depending on what the result is it goes in check order of 0 - 9 then A - Z then z (lowercase). So it will then return 0 - 35 or -1 if it's 'z'. The func to handle that ^^ is func_67 in dialog_handler.c atleast in TU27 Xbox360 scripts.
 *
 * p0 is -1, 0 - 35
 * p1 is a char or string (whatever you wanna call it)
 * p2 is Global 10597 + i * 6. 'i' is a while(i < 70) loop
 * p3 is again -1, 0 - 35
 * p4 is again -1, 0 - 35
 * p5 is either 0 or 1 (bool ?)
 * p6 is either 0 or 1 (The func to determine this is bool)
 * p7 is either 0 or 1 (The func to determine this is bool)
 * p8 is either 0 or 1 (The func to determine this is bool)
 * p9 is 0 - 3 (Determined by func_60 in dialogue_handler.c)
 * p10 is either 0 or 1 (The func to determine this is bool)
 * p11 is either 0 or 1 (The func to determine this is bool)
 * p12 is unknown as in TU27 X360 scripts it only goes to p11.
 *
 * Hash: 0xC5EF963405593646 | Since: 323
 * @deprecated Use audio.addLineToConversation(index) instead
 */
export declare function addLineToConversation(index: number): void;
/**
 * 4 calls in the b617d scripts. The only one with p0 and p2 in clear text:
 *
 * `AUDIO::ADD_PED_TO_CONVERSATION(5, l_AF, "DINAPOLI");`
 *
 * =================================================
 * One of the 2 calls in dialogue_handler.c p0 is in a while-loop, and so is determined to also possibly be 0 - 15.
 *
 * Hash: 0x95D9F4BC443956E7 | Since: 323
 * @deprecated Use audio.addPedToConversation(index, ped) instead
 */
export declare function addPedToConversation(index: number, ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x33E3C6C6F2F0B506 | Since: 323
 * @deprecated Use audio.setPositionForNullConvPed() instead
 */
export declare function setPositionForNullConvPed(): void;
/**
 * No comment provided
 *
 * Hash: 0x892B6AB8F33606F5 | Since: 323
 * @deprecated Use audio.setEntityForNullConvPed(entity) instead
 */
export declare function setEntityForNullConvPed(entity: number | Entity): void;
/**
 * This native controls where the game plays audio from. By default the microphone is positioned on the player.
 * When p0 is true the game will play audio from the 3 positions inputted.
 * It is recommended to set all 3 positions to the same value as mixing different positions doesn't seem to work well.
 * The scripts mostly use it with only one position such as in fbi3.c:
 * `AUDIO::SET_MICROPHONE_POSITION(true, ENTITY::GET_ENTITY_COORDS(iLocal_3091, true), ENTITY::GET_ENTITY_COORDS(iLocal_3091, true), ENTITY::GET_ENTITY_COORDS(iLocal_3091, true));`
 *
 * Hash: 0xB6AE90EDDE95C762 | Since: 323
 * @deprecated Use audio.setMicrophonePosition(toggle, x1, y1, z1, x2, y2, z2, x3, y3, z3) instead
 */
export declare function setMicrophonePosition(toggle: boolean, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0B568201DD99F0EB | Since: 323
 * @deprecated Use audio.setConversationControlledByAnim() instead
 */
export declare function setConversationAudioControlledByAnim(): void;
/**
 * No comment provided
 *
 * Hash: 0x61631F5DF50D1C34 | Since: 323
 * @deprecated Use audio.setConversationPlaceholder() instead
 */
export declare function setConversationAudioPlaceholder(): void;
/**
 * No comment provided
 *
 * Hash: 0x252E5F915EABB675 | Since: 323
 * @deprecated Use audio.startScriptPhoneConversation() instead
 */
export declare function startScriptPhoneConversation(): void;
/**
 * No comment provided
 *
 * Hash: 0x6004BCB0E226AAEA | Since: 323
 * @deprecated Use audio.preloadScriptPhoneConversation() instead
 */
export declare function preloadScriptPhoneConversation(): void;
/**
 * No comment provided
 *
 * Hash: 0x6B17C62C9635D2DC | Since: 323
 * @deprecated Use audio.startScriptConversation() instead
 */
export declare function startScriptConversation(): void;
/**
 * No comment provided
 *
 * Hash: 0x3B3CAD6166916D87 | Since: 323
 * @deprecated Use audio.preloadScriptConversation() instead
 */
export declare function preloadScriptConversation(): void;
/**
 * No comment provided
 *
 * Hash: 0x23641AFE870AF385 | Since: 323
 * @deprecated Use audio.startPreloadedConversation() instead
 */
export declare function startPreloadedConversation(): void;
/**
 * No comment provided
 *
 * Hash: 0xE73364DB90778FFA | Since: 323
 * @deprecated Use audio.getIsPreloadedConversationReady() instead
 */
export declare function getIsPreloadedConversationReady(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x16754C556D2EDE3D | Since: 323
 * @deprecated Use audio.isScriptedConversationOngoing() instead
 */
export declare function isScriptedConversationOngoing(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDF0D54BE7A776737 | Since: 323
 * @deprecated Use audio.isScriptedConversationLoaded() instead
 */
export declare function isScriptedConversationLoaded(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x480357EE890C295A | Since: 323
 * @deprecated Use audio.getCurrentScriptedConversationLine() instead
 */
export declare function getCurrentScriptedConversationLine(): number;
/**
 * No comment provided
 *
 * Hash: 0x8530AD776CD72B12 | Since: 323
 * @deprecated Use audio.pauseScriptedConversation() instead
 */
export declare function pauseScriptedConversation(): void;
/**
 * No comment provided
 *
 * Hash: 0x9AEB285D1818C9AC | Since: 323
 * @deprecated Use audio.restartScriptedConversation() instead
 */
export declare function restartScriptedConversation(): void;
/**
 * No comment provided
 *
 * Hash: 0xD79DEEFB53455EBA | Since: 323
 * @deprecated Use audio.stopScriptedConversation() instead
 */
export declare function stopScriptedConversation(): number;
/**
 * No comment provided
 *
 * Hash: 0x9663FE6B7A61EB00 | Since: 323
 * @deprecated Use audio.skipToNextScriptedConversationLine() instead
 */
export declare function skipToNextScriptedConversationLine(): void;
/**
 * `Example from carsteal3.c: AUDIO::INTERRUPT_CONVERSATION(PLAYER::PLAYER_PED_ID(), "CST4_CFAA", "FRANKLIN");`
 * Voicelines can be found in GTAV\x64\audio\sfx in files starting with "SS_" which seems to mean scripted speech.
 *
 * Hash: 0xA018A12E5C5C2FA6 | Since: 323
 * @deprecated Use audio.interruptConversation(ped, voiceline, speaker) instead
 */
export declare function interruptConversation(ped: number | Ped, voiceline: string, speaker: string): void;
/**
 * One call found in the b617d scripts:
 *
 * `AUDIO::INTERRUPT_CONVERSATION_AND_PAUSE(NETWORK::NET_TO_PED(l_3989._f26F[0\/\*1\*\/]), "CONV_INTERRUPT_QUIT_IT", "LESTER");`
 *
 * Hash: 0x8A694D7A68F8DC38 | Since: 323
 * @deprecated Use audio.interruptConversationAndPause(ped, speaker) instead
 */
export declare function interruptConversationAndPause(ped: number | Ped, speaker: string): void;
/**
 * No comment provided
 *
 * Hash: 0xAA19F5572C38B564 | Since: 323
 * @deprecated Use audio.getVariationChosenForScriptedLine() instead
 */
export declare function getVariationChosenForScriptedLine(): [number, any];
/**
 * No comment provided
 *
 * Hash: 0xB542DE8C3D1CB210 | Since: 323
 * @deprecated Use audio.setNoDuckingForConversation() instead
 */
export declare function setNoDuckingForConversation(): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0xC6ED9D5092438D91 | Since: 323
 * @deprecated Use audio.registerScriptWith() instead
 */
export declare function registerScriptWithAudio(): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0xA8638BE228D4751A | Since: 323
 * @deprecated Use audio.unregisterScriptWith() instead
 */
export declare function unregisterScriptWithAudio(): void;
/**
 * All occurrences and usages found in b617d: https://pastebin.com/NzZZ2Tmm
 * Full list of mission audio bank names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/missionAudioBankNames.json
 * p2 is always -1
 *
 * Hash: 0x7345BDD95E62E0F2 | Since: 323
 * @deprecated Use audio.requestMissionBank(audioBank) instead
 */
export declare function requestMissionAudioBank(audioBank: string): boolean;
/**
 * All occurrences and usages found in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/XZ1tmGEz
 * Full list of ambient audio bank names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientAudioBankNames.json
 * p2 is always -1
 *
 * Hash: 0xFE02FFBED8CA9D99 | Since: 323
 * @deprecated Use audio.requestAmbientBank(audioBank) instead
 */
export declare function requestAmbientAudioBank(audioBank: string): boolean;
/**
 * All occurrences and usages found in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/AkmDAVn6
 * Full list of script audio bank names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scriptAudioBankNames.json
 * p2 is always -1
 *
 * Hash: 0x2F844A8B08D76685 | Since: 323
 * @deprecated Use audio.requestScriptBank(audioBank) instead
 */
export declare function requestScriptAudioBank(audioBank: string): boolean;
/**
 * p2 is always -1
 *
 * Hash: 0x40763EA7B9B783E7 | Since: 573
 * @deprecated Use audio.hintMissionBank(audioBank) instead
 */
export declare function hintMissionAudioBank(audioBank: string): boolean;
/**
 * p2 is always -1
 *
 * Hash: 0x8F8C0E370AE62F5C | Since: 323
 * @deprecated Use audio.hintAmbientBank(audioBank) instead
 */
export declare function hintAmbientAudioBank(audioBank: string): boolean;
/**
 * p2 is always -1
 *
 * Hash: 0xFB380A29641EC31A | Since: 323
 * @deprecated Use audio.hintScriptBank(audioBank) instead
 */
export declare function hintScriptAudioBank(audioBank: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0EC92A1BF0857187 | Since: 323
 * @deprecated Use audio.releaseMissionBank() instead
 */
export declare function releaseMissionAudioBank(): void;
/**
 * No comment provided
 *
 * Hash: 0x65475A218FFAA93D | Since: 323
 * @deprecated Use audio.releaseAmbientBank() instead
 */
export declare function releaseAmbientAudioBank(): void;
/**
 * Full list of script audio bank names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scriptAudioBankNames.json
 *
 * Hash: 0x77ED170667F50170 | Since: 323
 * @deprecated Use audio.releaseNamedScriptBank(audioBank) instead
 */
export declare function releaseNamedScriptAudioBank(audioBank: string): void;
/**
 * No comment provided
 *
 * Hash: 0x7A2D8AD0A9EB9C3F | Since: 323
 * @deprecated Use audio.releaseScriptBank() instead
 */
export declare function releaseScriptAudioBank(): void;
/**
 * No comment provided
 *
 * Hash: 0x19AF7ED9B9D23058 | Since: 323
 * @deprecated Use audio.unhintAmbientBank() instead
 */
export declare function unhintAmbientAudioBank(): void;
/**
 * No comment provided
 *
 * Hash: 0x9AC92EED5E4793AB | Since: 323
 * @deprecated Use audio.unhintScriptBank() instead
 */
export declare function unhintScriptAudioBank(): void;
/**
 * No comment provided
 *
 * Hash: 0x11579D940949C49E | Since: 678
 * @deprecated Use audio.unhintNamedScriptBank(audioBank) instead
 */
export declare function unhintNamedScriptAudioBank(audioBank: string): void;
/**
 * No comment provided
 *
 * Hash: 0x430386FE9BF80B45 | Since: 323
 * @deprecated Use audio.getSoundId() instead
 */
export declare function getSoundId(): number;
/**
 * No comment provided
 *
 * Hash: 0x353FC880830B88FA | Since: 323
 * @deprecated Use audio.releaseSoundId(soundId) instead
 */
export declare function releaseSoundId(soundId: number): void;
/**
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/A8Ny8AHZ
 *
 * Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
 *
 * Hash: 0x7FF4944CC209192D | Since: 323
 * @deprecated Use audio.playSound(soundId, audioName, audioRef) instead
 */
export declare function playSound(soundId: number, audioName: string, audioRef: string): void;
/**
 * List: https://pastebin.com/DCeRiaLJ
 *
 * All occurrences as of Cayo Perico Heist DLC (b2189), sorted alphabetically and identical lines removed: https://git.io/JtLxM
 *
 * Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
 *
 * Hash: 0x67C540AA08E4A6F5 | Since: 323
 * @deprecated Use audio.playSoundFrontend(soundId, audioName, audioRef) instead
 */
export declare function playSoundFrontend(soundId: number, audioName: string, audioRef: string): void;
/**
 * Only call found in the b617d scripts:
 *
 * `AUDIO::PLAY_DEFERRED_SOUND_FRONTEND("BACK", "HUD_FREEMODE_SOUNDSET");`
 *
 * Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
 *
 * Hash: 0xCADA5A0D0702381E | Since: 323
 * @deprecated Use audio.playDeferredSoundFrontend(soundName, soundsetName) instead
 */
export declare function playDeferredSoundFrontend(soundName: string, soundsetName: string): void;
/**
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/f2A7vTj0
 * No changes made in b678d.
 *
 * gtaforums.com/topic/795622-audio-for-mods
 *
 * Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
 *
 * Hash: 0xE65F427EB70AB1ED | Since: 323
 * @deprecated Use audio.playSoundFromEntity(soundId, audioName, entity, audioRef, isNetwork) instead
 */
export declare function playSoundFromEntity(soundId: number, audioName: string, entity: number | Entity, audioRef: string, isNetwork: boolean): void;
/**
 * Only used with "formation_flying_blips_soundset" and "biker_formation_blips_soundset".
 * p1 is always the model of p2
 *
 * Hash: 0x5B9853296731E88D | Since: 877
 * @deprecated Use audio.playSoundFromEntityHash(soundId, model, entity, soundSetHash) instead
 */
export declare function playSoundFromEntityHash(soundId: number, model: number | string, entity: number | Entity, soundSetHash: number | string): void;
/**
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/eeFc5DiW
 *
 * gtaforums.com/topic/795622-audio-for-mods
 *
 * Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
 *
 * Hash: 0x8D8686B622B88120 | Since: 323
 * @deprecated Use audio.playSoundFromCoord(soundId, audioName, pos, audioRef, isNetwork, range) instead
 */
export declare function playSoundFromCoord(soundId: number, audioName: string, pos: Vector3, audioRef: string, isNetwork: boolean, range: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7EC3C679D0E7E46B | Since: 678
 * @deprecated Use audio.updateSoundCoord(soundId, pos) instead
 */
export declare function updateSoundCoord(soundId: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xA3B0C41BA5CC0BB5 | Since: 323
 * @deprecated Use audio.stopSound(soundId) instead
 */
export declare function stopSound(soundId: number): void;
/**
 * Could this be used alongside either,
 * SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES or _SET_NETWORK_ID_SYNC_TO_PLAYER to make it so other players can hear the sound while online? It'd be a bit troll-fun to be able to play the Zancudo UFO creepy sounds globally.
 *
 * Hash: 0x2DE3F0A134FFBC0D | Since: 323
 * @deprecated Use audio.getNetworkIdFromSoundId(soundId) instead
 */
export declare function getNetworkIdFromSoundId(soundId: number): number;
/**
 * No comment provided
 *
 * Hash: 0x75262FD12D0A1C84 | Since: 323
 * @deprecated Use audio.getSoundIdFromNetworkId(netId) instead
 */
export declare function getSoundIdFromNetworkId(netId: number): number;
/**
 * No comment provided
 *
 * Hash: 0xAD6B3148A78AE9B6 | Since: 323
 * @deprecated Use audio.setVariableOnSound(soundId, variable) instead
 */
export declare function setVariableOnSound(soundId: number, variable: string): void;
/**
 * From the scripts, p0:
 *
 * "ArmWrestlingIntensity",
 * "INOUT",
 * "Monkey_Stream",
 * "ZoomLevel"
 *
 * Hash: 0x2F9D3834AEB9EF79 | Since: 323
 * @deprecated Use audio.setVariableOnStream(variable) instead
 */
export declare function setVariableOnStream(variable: string): void;
/**
 * No comment provided
 *
 * Hash: 0xF2A9CDABCEA04BD6 | Since: 323
 * @deprecated Use audio.overrideUnderwaterStream() instead
 */
export declare function overrideUnderwaterStream(): void;
/**
 * `AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 1.0);`
 * `AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 0.0);`
 *
 * Hash: 0x733ADF241531E5C2 | Since: 323
 * @deprecated Use audio.setVariableOnUnderWaterStream(variableName, value) instead
 */
export declare function setVariableOnUnderWaterStream(variableName: string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFCBDCE714A7C88E5 | Since: 323
 * @deprecated Use audio.hasSoundFinished(soundId) instead
 */
export declare function hasSoundFinished(soundId: number): boolean;
/**
 * Plays ambient speech. See also _0x444180DB.
 *
 * ped: The ped to play the ambient speech.
 * speechName: Name of the speech to play, eg. "GENERIC_HI".
 * speechParam: Can be one of the following:
 * SPEECH_PARAMS_STANDARD
 * SPEECH_PARAMS_ALLOW_REPEAT
 * SPEECH_PARAMS_BEAT
 * SPEECH_PARAMS_FORCE
 * SPEECH_PARAMS_FORCE_FRONTEND
 * SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND
 * SPEECH_PARAMS_FORCE_NORMAL
 * SPEECH_PARAMS_FORCE_NORMAL_CLEAR
 * SPEECH_PARAMS_FORCE_NORMAL_CRITICAL
 * SPEECH_PARAMS_FORCE_SHOUTED
 * SPEECH_PARAMS_FORCE_SHOUTED_CLEAR
 * SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY
 * SPEECH_PARAMS_MEGAPHONE
 * SPEECH_PARAMS_HELI
 * SPEECH_PARAMS_FORCE_MEGAPHONE
 * SPEECH_PARAMS_FORCE_HELI
 * SPEECH_PARAMS_INTERRUPT
 * SPEECH_PARAMS_INTERRUPT_SHOUTED
 * SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR
 * SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL
 * SPEECH_PARAMS_INTERRUPT_NO_FORCE
 * SPEECH_PARAMS_INTERRUPT_FRONTEND
 * SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND
 * SPEECH_PARAMS_ADD_BLIP
 * SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT
 * SPEECH_PARAMS_ADD_BLIP_FORCE
 * SPEECH_PARAMS_ADD_BLIP_SHOUTED
 * SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE
 * SPEECH_PARAMS_ADD_BLIP_INTERRUPT
 * SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL
 * SPEECH_PARAMS_SHOUTED
 * SPEECH_PARAMS_SHOUTED_CLEAR
 * SPEECH_PARAMS_SHOUTED_CRITICAL
 *
 * Note: A list of Name and Parameters can be found here https://pastebin.com/1GZS5dCL
 *
 * Full list of speeches and voices names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/speeches.json
 *
 * Hash: 0x8E04FEDD28D42462 | Since: 323
 * @deprecated Use audio.playPedAmbientSpeechNative(ped, speechName, speechParam) instead
 */
export declare function playPedAmbientSpeechNative(ped: number | Ped, speechName: string, speechParam: string): void;
/**
 * Plays ambient speech. See also _0x5C57B85D.
 *
 * See PLAY_PED_AMBIENT_SPEECH_NATIVE for parameter specifications.
 *
 * Full list of speeches and voices names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/speeches.json
 *
 * Hash: 0xC6941B4A3A8FBBB9 | Since: 323
 * @deprecated Use audio.playPedAmbientSpeechAndCloneNative(ped, speechName, speechParam) instead
 */
export declare function playPedAmbientSpeechAndCloneNative(ped: number | Ped, speechName: string, speechParam: string): void;
/**
 * This is the same as PLAY_PED_AMBIENT_SPEECH_NATIVE and PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE but it will allow you to play a speech file from a specific voice file. It works on players and all peds, even animals.
 *
 * EX (C#):
 * GTA.Native.Function.Call(Hash.PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE, Game.Player.Character, "GENERIC_INSULT_HIGH", "s_m_y_sheriff_01_white_full_01", "SPEECH_PARAMS_FORCE_SHOUTED", 0);
 *
 * The first param is the ped you want to play it on, the second is the speech name, the third is the voice name, the fourth is the speech param, and the last param is usually always 0.
 *
 * Full list of speeches and voices names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/speeches.json
 *
 * Hash: 0x3523634255FC3318 | Since: 323
 * @deprecated Use audio.playPedAmbientSpeechWithVoiceNative(ped, speechName, voiceName, speechParam) instead
 */
export declare function playPedAmbientSpeechWithVoiceNative(ped: number | Ped, speechName: string, voiceName: string, speechParam: string): void;
/**
 * Full list of speeches and voices names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/speeches.json
 *
 * Hash: 0xED640017ED337E45 | Since: 323
 * @deprecated Use audio.playAmbientSpeechFromPositionNative(speechName, voiceName, pos, speechParam) instead
 */
export declare function playAmbientSpeechFromPositionNative(speechName: string, voiceName: string, pos: Vector3, speechParam: string): void;
/**
 * This native enables the audio flag "TrevorRageIsOverridden" and sets the voice effect to `voiceEffect`
 *
 * Hash: 0x13AD665062541A7E | Since: 323
 * @deprecated Use audio.overrideTrevorRage(voiceEffect) instead
 */
export declare function overrideTrevorRage(voiceEffect: string): void;
/**
 * No comment provided
 *
 * Hash: 0xE78503B10C4314E0 | Since: 323
 * @deprecated Use audio.resetTrevorRage() instead
 */
export declare function resetTrevorRage(): void;
/**
 * No comment provided
 *
 * Hash: 0xEA241BB04110F091 | Since: 323
 * @deprecated Use audio.setPlayerAngry(ped, toggle) instead
 */
export declare function setPlayerAngry(ped: number | Ped, toggle: boolean): void;
/**
 * `Needs another parameter [int p2]. The signature is PED::PLAY_PAIN(Ped ped, int painID, int p1, int p2);`
 *
 * Last 2 parameters always seem to be 0.
 *
 * EX: Function.Call(Hash.PLAY_PAIN, TestPed, 6, 0, 0);
 *
 * Known Pain IDs
 * ________________________
 *
 * 1 - Doesn't seem to do anything. Does NOT crash the game like previously said. (Latest patch)
 * 6 - Scream (Short)
 * 7 - Scared Scream (Kinda Long)
 * 8 - On Fire
 *
 *
 * Hash: 0xBC9AE166038A5CEC | Since: 323
 * @deprecated Use audio.playPain(ped, painID) instead
 */
export declare function playPain(ped: number | Ped, painID: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCE4AC0439F607045 | Since: 323
 * @deprecated Use audio.releaseWeapon() instead
 */
export declare function releaseWeaponAudio(): void;
/**
 * mode can be any of these:
 * SLOWMO_T1_TRAILER_SMASH
 * SLOWMO_T1_RAYFIRE_EXPLOSION
 * SLOWMO_PROLOGUE_VAULT
 * NIGEL_02_SLOWMO_SETTING
 * JSH_EXIT_TUNNEL_SLOWMO
 * SLOWMO_BIG_SCORE_JUMP
 * SLOWMO_FIB4_TRUCK_SMASH
 * SLOWMO_EXTREME_04
 * SLOW_MO_METH_HOUSE_RAYFIRE
 * BARRY_02_SLOWMO
 * BARRY_01_SLOWMO
 *
 * Hash: 0xD01005D2BA2EB778 | Since: 323
 * @deprecated Use audio.activateSlowmoMode(mode) instead
 */
export declare function activateAudioSlowmoMode(mode: string): void;
/**
 * see ACTIVATE_AUDIO_SLOWMO_MODE for modes
 *
 * Hash: 0xDDC635D5B3262C56 | Since: 323
 * @deprecated Use audio.deactivateSlowmoMode(mode) instead
 */
export declare function deactivateAudioSlowmoMode(mode: string): void;
/**
 * Audio List
 * gtaforums.com/topic/795622-audio-for-mods/
 *
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/FTeAj4yZ
 *
 * Hash: 0x6C8065A3B780185B | Since: 323
 * @deprecated Use audio.setAmbientVoiceName(ped, name) instead
 */
export declare function setAmbientVoiceName(ped: number | Ped, name: string): void;
/**
 * No comment provided
 *
 * Hash: 0x9A53DED9921DE990 | Since: 463
 * @deprecated Use audio.setAmbientVoiceNameHash(ped, hash) instead
 */
export declare function setAmbientVoiceNameHash(ped: number | Ped, hash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x5E203DA2BA15D436 | Since: 463
 * @deprecated Use audio.getAmbientVoiceNameHash(ped) instead
 */
export declare function getAmbientVoiceNameHash(ped: number | Ped): number;
/**
 * Assigns some ambient voice to the ped.
 *
 * Hash: 0x40CF0D12D142A9E8 | Since: 323
 * @deprecated Use audio.setPedVoiceFull(ped) instead
 */
export declare function setPedVoiceFull(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x1B7ABE26CBCBF8C7 | Since: 372
 * @deprecated Use audio.setPedRaceAndVoiceGroup(ped, voiceGroup) instead
 */
export declare function setPedRaceAndVoiceGroup(ped: number | Ped, voiceGroup: number | string): void;
/**
 * From the scripts:
 *
 * `AUDIO::SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("PAIGE_PVG"));`
 * `AUDIO::SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("TALINA_PVG"));`
 * `AUDIO::SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_BLACK_PVG"));`
 * `AUDIO::SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_WHITE_PVG"));`
 *
 * Hash: 0x7CDC8C3B89F661B3 | Since: 323
 * @deprecated Use audio.setPedVoiceGroup(ped, voiceGroupHash) instead
 */
export declare function setPedVoiceGroup(ped: number | Ped, voiceGroupHash: number | string): void;
/**
 * Dat151RelType == 29
 *
 * Hash: 0x0BABC1345ABBFB16 | Since: 2699
 * @deprecated Use audio.setPedVoiceGroupFromRaceToPvg(ped, voiceGroupHash) instead
 */
export declare function setPedVoiceGroupFromRaceToPvg(ped: number | Ped, voiceGroupHash: number | string): void;
/**
 * BOOL p1: 0 = Female; 1 = Male
 *
 * Hash: 0xA5342D390CDA41D6 | Since: 323
 * @deprecated Use audio.setPedGender(ped) instead
 */
export declare function setPedGender(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x7A73D05A607734C7 | Since: 323
 * @deprecated Use audio.stopCurrentPlayingSpeech(ped) instead
 */
export declare function stopCurrentPlayingSpeech(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xB8BEC0CA6F0EDB0F | Since: 323
 * @deprecated Use audio.stopCurrentPlayingAmbientSpeech(ped) instead
 */
export declare function stopCurrentPlayingAmbientSpeech(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x9072C8B49907BFAD | Since: 323
 * @deprecated Use audio.isAmbientSpeechPlaying(ped) instead
 */
export declare function isAmbientSpeechPlaying(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCC9AA18DCC7084F4 | Since: 323
 * @deprecated Use audio.isScriptedSpeechPlaying(p0) instead
 */
export declare function isScriptedSpeechPlaying(p0: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x729072355FA39EC9 | Since: 323
 * @deprecated Use audio.isAnySpeechPlaying(ped) instead
 */
export declare function isAnySpeechPlaying(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x30CA2EF91D15ADF8 | Since: 2189
 * @deprecated Use audio.isAnyPositionalSpeechPlaying() instead
 */
export declare function isAnyPositionalSpeechPlaying(): boolean;
/**
 * Checks if the ped can play the speech or has the speech file, p2 is usually false.
 *
 * Hash: 0x49B99BF3FDA89A7A | Since: 323
 * @deprecated Use audio.doesContextExistForThisPed(ped, speechName) instead
 */
export declare function doesContextExistForThisPed(ped: number | Ped, speechName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x049E937F18F4020C | Since: 323
 * @deprecated Use audio.isPedInCurrentConversation(ped) instead
 */
export declare function isPedInCurrentConversation(ped: number | Ped): boolean;
/**
 * Sets the ped drunk sounds.  Only works with PLAYER_PED_ID
 *
 * ====================================================
 *
 * As mentioned above, this only sets the drunk sound to ped/player.
 *
 * To give the Ped a drunk effect with drunk walking animation try using SET_PED_MOVEMENT_CLIPSET
 *
 * Below is an example
 *
 * if (!Function.Call<bool>(Hash.HAS_ANIM_SET_LOADED, "move_m@drunk@verydrunk"))
 * {
 * Function.Call(Hash.REQUEST_ANIM_SET, "move_m@drunk@verydrunk");
 * }
 * Function.Call(Hash.SET_PED_MOVEMENT_CLIPSET, Ped.Handle, "move_m@drunk@verydrunk", 0x3E800000);
 *
 *
 *
 * And to stop the effect use
 * RESET_PED_MOVEMENT_CLIPSET
 *
 * Hash: 0x95D2D383D5396B8A | Since: 323
 * @deprecated Use audio.setPedIsDrunk(ped, toggle) instead
 */
export declare function setPedIsDrunk(ped: number | Ped, toggle: boolean): void;
/**
 * Plays sounds from a ped with chop model. For example it used to play bark or sniff sounds. p1 is always 3 or 4294967295 in decompiled scripts. By a quick disassembling I can assume that this arg is unused.
 * This native is works only when you call it on the ped with right model (ac_chop only ?)
 * Speech Name can be: CHOP_SNIFF_SEQ CHOP_WHINE CHOP_LICKS_MOUTH CHOP_PANT bark GROWL SNARL BARK_SEQ
 *
 * Hash: 0xEE066C7006C49C0A | Since: 323
 * @deprecated Use audio.playAnimalVocalization(pedHandle, speechName) instead
 */
export declare function playAnimalVocalization(pedHandle: number | Ped, speechName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xC265DF9FB44A9FBD | Since: 323
 * @deprecated Use audio.isAnimalVocalizationPlaying(pedHandle) instead
 */
export declare function isAnimalVocalizationPlaying(pedHandle: number | Ped): boolean;
/**
 * mood can be 0 or 1 (it's not a boolean value!). Effects audio of the animal.
 *
 * Hash: 0xCC97B29285B1DC3B | Since: 323
 * @deprecated Use audio.setAnimalMood(animal, mood) instead
 */
export declare function setAnimalMood(animal: number | Ped, mood: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB35CE999E8EF317E | Since: 323
 * @deprecated Use audio.isMobilePhoneRadioActive() instead
 */
export declare function isMobilePhoneRadioActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBF286C554784F3DF | Since: 323
 * @deprecated Use audio.setMobilePhoneRadioState(state) instead
 */
export declare function setMobilePhoneRadioState(state: boolean): void;
/**
 * Returns 255 (radio off index) if the function fails.
 *
 * Hash: 0xE8AF77C4C06ADC93 | Since: 323
 * @deprecated Use audio.getPlayerRadioStationIndex() instead
 */
export declare function getPlayerRadioStationIndex(): number;
/**
 * Returns active radio station name
 *
 * Hash: 0xF6D733C32076AD03 | Since: 323
 * @deprecated Use audio.getPlayerRadioStationName() instead
 */
export declare function getPlayerRadioStationName(): string;
/**
 * `Converts radio station index to string. Use HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION to get the user-readable text.`
 *
 * Hash: 0xB28ECA15046CA8B9 | Since: 323
 * @deprecated Use audio.getRadioStationName(radioStation) instead
 */
export declare function getRadioStationName(radioStation: number): string;
/**
 * No comment provided
 *
 * Hash: 0xA571991A7FE6CCEB | Since: 323
 * @deprecated Use audio.getPlayerRadioStationGenre() instead
 */
export declare function getPlayerRadioStationGenre(): number;
/**
 * No comment provided
 *
 * Hash: 0xA151A7394A214E65 | Since: 323
 * @deprecated Use audio.isRadioRetuning() instead
 */
export declare function isRadioRetuning(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0626A247D2405330 | Since: 323
 * @deprecated Use audio.isRadioFadedOut() instead
 */
export declare function isRadioFadedOut(): boolean;
/**
 * Tune Forward...
 *
 * Hash: 0xFF266D1D0EB1195D | Since: 323
 * @deprecated Use audio.setRadioRetuneUp() instead
 */
export declare function setRadioRetuneUp(): void;
/**
 * Tune Backwards...
 *
 * Hash: 0xDD6BCF9E94425DF9 | Since: 323
 * @deprecated Use audio.setRadioRetuneDown() instead
 */
export declare function setRadioRetuneDown(): void;
/**
 * List of radio stations that are in the wheel, in clockwise order, as of LS Tuners DLC: https://git.io/J8a3k
 * An older list including hidden radio stations: https://pastebin.com/Kj9t38KF
 *
 * Hash: 0xC69EDA28699D5107 | Since: 323
 * @deprecated Use audio.setRadioToStationName(stationName) instead
 */
export declare function setRadioToStationName(stationName: string): void;
/**
 * List of radio stations that are in the wheel, in clockwise order, as of LS Tuners DLC: https://git.io/J8a3k
 * An older list including hidden radio stations: https://pastebin.com/Kj9t38KF
 *
 * Hash: 0x1B9C0099CB942AC6 | Since: 323
 * @deprecated Use audio.setVehRadioStation(vehicle, radioStation) instead
 */
export declare function setVehRadioStation(vehicle: number | Vehicle, radioStation: string): void;
/**
 * No comment provided
 *
 * Hash: 0x3E45765F3FBB582F | Since: 2372
 * @deprecated Use audio.setVehHasNormalRadio(vehicle) instead
 */
export declare function setVehHasNormalRadio(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x0BE4BE946463F917 | Since: 505
 * @deprecated Use audio.isVehicleRadioOn(vehicle) instead
 */
export declare function isVehicleRadioOn(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC1805D05E6D4FE10 | Since: 323
 * @deprecated Use audio.setVehForcedRadioThisFrame(vehicle) instead
 */
export declare function setVehForcedRadioThisFrame(vehicle: number | Vehicle): void;
/**
 * Full list of static emitters by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/staticEmitters.json
 *
 * Hash: 0xACF57305B12AF907 | Since: 323
 * @deprecated Use audio.setEmitterRadioStation(emitterName, radioStation) instead
 */
export declare function setEmitterRadioStation(emitterName: string, radioStation: string): void;
/**
 * Example:
 * `AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_01_STAGE", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_02_MAIN_ROOM", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_03_BACK_ROOM", false);`
 *
 * This turns off surrounding sounds not connected directly to peds.
 *
 * Full list of static emitters by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/staticEmitters.json
 *
 * Hash: 0x399D2D3B33F1B8EB | Since: 323
 * @deprecated Use audio.setStaticEmitterEnabled(emitterName, toggle) instead
 */
export declare function setStaticEmitterEnabled(emitterName: string, toggle: boolean): void;
/**
 * Full list of static emitters by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/staticEmitters.json
 *
 * Hash: 0x651D3228960D08AF | Since: 505
 * @deprecated Use audio.linkStaticEmitterToEntity(emitterName, entity) instead
 */
export declare function linkStaticEmitterToEntity(emitterName: string, entity: number | Entity): void;
/**
 * Sets radio station by index.
 *
 * Hash: 0xA619B168B8A8570F | Since: 323
 * @deprecated Use audio.setRadioToStationIndex(radioStation) instead
 */
export declare function setRadioToStationIndex(radioStation: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF7F26C6E9CC9EBB8 | Since: 323
 * @deprecated Use audio.setFrontendRadioActive(active) instead
 */
export declare function setFrontendRadioActive(active: boolean): void;
/**
 * "news" that play on the radio after you've done something in story mode(?)
 *
 * Hash: 0xB165AB7C248B2DC1 | Since: 323
 * @deprecated Use audio.unlockMissionNewsStory(newsStory) instead
 */
export declare function unlockMissionNewsStory(newsStory: number): void;
/**
 * No comment provided
 *
 * Hash: 0x66E49BF55B4B1874 | Since: 323
 * @deprecated Use audio.isMissionNewsStoryUnlocked(newsStory) instead
 */
export declare function isMissionNewsStoryUnlocked(newsStory: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x50B196FC9ED6545B | Since: 323
 * @deprecated Use audio.getAudibleMusicTrackTextId() instead
 */
export declare function getAudibleMusicTrackTextId(): number;
/**
 * No comment provided
 *
 * Hash: 0xCD536C4D33DCC900 | Since: 323
 * @deprecated Use audio.playEndCreditsMusic(play) instead
 */
export declare function playEndCreditsMusic(play: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6DDBBDD98E2E9C25 | Since: 323
 * @deprecated Use audio.skipRadioForward() instead
 */
export declare function skipRadioForward(): void;
/**
 * No comment provided
 *
 * Hash: 0x344F393B027E38C3 | Since: 323
 * @deprecated Use audio.freezeRadioStation(radioStation) instead
 */
export declare function freezeRadioStation(radioStation: string): void;
/**
 * No comment provided
 *
 * Hash: 0xFC00454CF60B91DD | Since: 323
 * @deprecated Use audio.unfreezeRadioStation(radioStation) instead
 */
export declare function unfreezeRadioStation(radioStation: string): void;
/**
 * No comment provided
 *
 * Hash: 0xC1AA9F53CE982990 | Since: 323
 * @deprecated Use audio.setRadioAutoUnfreeze(toggle) instead
 */
export declare function setRadioAutoUnfreeze(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x88795F13FACDA88D | Since: 323
 * @deprecated Use audio.setInitialPlayerStation(radioStation) instead
 */
export declare function setInitialPlayerStation(radioStation: string): void;
/**
 * No comment provided
 *
 * Hash: 0x19F21E63AE6EAE4E | Since: 323
 * @deprecated Use audio.setUserRadioControlEnabled(toggle) instead
 */
export declare function setUserRadioControlEnabled(toggle: boolean): void;
/**
 * Only found this one in the decompiled scripts:
 *
 * `AUDIO::SET_RADIO_TRACK("RADIO_03_HIPHOP_NEW", "ARM1_RADIO_STARTS");`
 *
 *
 * Hash: 0xB39786F201FEE30B | Since: 323
 * @deprecated Use audio.setRadioTrack(radioStation, radioTrack) instead
 */
export declare function setRadioTrack(radioStation: string, radioTrack: string): void;
/**
 * No comment provided
 *
 * Hash: 0x2CB0075110BE1E56 | Since: 1493
 * @deprecated Use audio.setRadioTrackWithStartOffset(radioStationName, mixName) instead
 */
export declare function setRadioTrackWithStartOffset(radioStationName: string, mixName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x55ECF4D13D9903B0 | Since: 1868
 * @deprecated Use audio.setNextRadioTrack(radioName, radioTrack) instead
 */
export declare function setNextRadioTrack(radioName: string, radioTrack: string): void;
/**
 * No comment provided
 *
 * Hash: 0xBB6F1CAEC68B0BCE | Since: 323
 * @deprecated Use audio.setVehicleRadioLoud(vehicle, toggle) instead
 */
export declare function setVehicleRadioLoud(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x032A116663A4D5AC | Since: 323
 * @deprecated Use audio.canVehicleReceiveCbRadio(vehicle) instead
 */
export declare function canVehicleReceiveCbRadio(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1098355A16064BB3 | Since: 323
 * @deprecated Use audio.setMobileRadioEnabledDuringGameplay(toggle) instead
 */
export declare function setMobileRadioEnabledDuringGameplay(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x109697E2FFBAC8A1 | Since: 323
 * @deprecated Use audio.doesPlayerVehHaveRadio() instead
 */
export declare function doesPlayerVehHaveRadio(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5F43D83FD6738741 | Since: 323
 * @deprecated Use audio.isPlayerVehRadioEnable() instead
 */
export declare function isPlayerVehRadioEnable(): boolean;
/**
 * can't seem to enable radio on cop cars etc
 *
 * Hash: 0x3B988190C0AA6C0B | Since: 323
 * @deprecated Use audio.setVehicleRadioEnabled(vehicle, toggle) instead
 */
export declare function setVehicleRadioEnabled(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDA07819E452FFE8F | Since: 505
 * @deprecated Use audio.setPositionedPlayerVehicleRadioEmitterEnabled() instead
 */
export declare function setPositionedPlayerVehicleRadioEmitterEnabled(): void;
/**
 * Examples:
 *
 * `AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_MICHAEL", 1);`
 * `AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_MICHAEL", 1);`
 * `AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_KILL_TREVOR", 1);`
 * `AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "END_CREDITS_SAVE_MICHAEL_TREVOR", 1);`
 * `AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "OFF_ROAD_RADIO_ROCK_LIST", 1);`
 * `AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_06_COUNTRY", "MAGDEMO2_RADIO_DINGHY", 1);`
 * `AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_16_SILVERLAKE", "SEA_RACE_RADIO_PLAYLIST", 1);`
 * `AUDIO::SET_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK", "OFF_ROAD_RADIO_ROCK_LIST", 1);`
 *
 * Hash: 0x4E404A9361F75BB2 | Since: 323
 * @deprecated Use audio.setCustomRadioTrackList(radioStation, trackListName) instead
 */
export declare function setCustomRadioTrackList(radioStation: string, trackListName: string): void;
/**
 * 3 calls in the b617d scripts, removed duplicate.
 *
 * `AUDIO::CLEAR_CUSTOM_RADIO_TRACK_LIST("RADIO_16_SILVERLAKE");`
 * `AUDIO::CLEAR_CUSTOM_RADIO_TRACK_LIST("RADIO_01_CLASS_ROCK");`
 *
 * Hash: 0x1654F24A88A8E3FE | Since: 323
 * @deprecated Use audio.clearCustomRadioTrackList(radioStation) instead
 */
export declare function clearCustomRadioTrackList(radioStation: string): void;
/**
 * No comment provided
 *
 * Hash: 0xF1620ECB50E01DE7 | Since: 323
 * @deprecated Use audio.getNumUnlockedRadioStations() instead
 */
export declare function getNumUnlockedRadioStations(): number;
/**
 * No comment provided
 *
 * Hash: 0x8D67489793FF428B | Since: 323
 * @deprecated Use audio.findRadioStationIndex(stationNameHash) instead
 */
export declare function findRadioStationIndex(stationNameHash: number | string): number;
/**
 * 6 calls in the b617d scripts, removed identical lines:
 *
 * `AUDIO::SET_RADIO_STATION_MUSIC_ONLY("RADIO_01_CLASS_ROCK", 1);`
 * `AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 0);`
 * `AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 1);`
 *
 * Hash: 0x774BD811F656A122 | Since: 323
 * @deprecated Use audio.setRadioStationMusicOnly(radioStation, toggle) instead
 */
export declare function setRadioStationMusicOnly(radioStation: string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2C96CDB04FCA358E | Since: 323
 * @deprecated Use audio.setRadioFrontendFadeTime(fadeTime) instead
 */
export declare function setRadioFrontendFadeTime(fadeTime: number): void;
/**
 * `AUDIO::UNLOCK_RADIO_STATION_TRACK_LIST("RADIO_16_SILVERLAKE", "MIRRORPARK_LOCKED");`
 *
 * Hash: 0x031ACB6ABA18C729 | Since: 323
 * @deprecated Use audio.unlockRadioStationTrackList(radioStation, trackListName) instead
 */
export declare function unlockRadioStationTrackList(radioStation: string, trackListName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xFF5E5EA2DCEEACF3 | Since: 2372
 * @deprecated Use audio.lockRadioStationTrackList(radioStation, trackListName) instead
 */
export declare function lockRadioStationTrackList(radioStation: string, trackListName: string): void;
/**
 * Just a nullsub (i.e. does absolutely nothing) since build 1604.
 *
 * Hash: 0x47AED84213A47510 | Since: 1493
 * @deprecated Use audio.updateUnlockableDjRadioTracks(enableMixes) instead
 */
export declare function updateUnlockableDjRadioTracks(enableMixes: boolean): void;
/**
 * Disables the radio station (hides it from the radio wheel).
 *
 * Hash: 0x477D9DB48F889591 | Since: 1493
 * @deprecated Use audio.lockRadioStation(radioStationName, toggle) instead
 */
export declare function lockRadioStation(radioStationName: string, toggle: boolean): void;
/**
 * Doesn't have an effect in Story Mode.
 *
 * Hash: 0x4CAFEBFA21EC188D | Since: 2372
 * @deprecated Use audio.setRadioStationAsFavourite(radioStation, toggle) instead
 */
export declare function setRadioStationAsFavourite(radioStation: string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2B1784DB08AFEA79 | Since: 2699
 * @deprecated Use audio.isRadioStationFavourited(radioStation) instead
 */
export declare function isRadioStationFavourited(radioStation: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC64A06D939F826F5 | Since: 1493
 * @deprecated Use audio.getNextAudibleBeat() instead
 */
export declare function getNextAudibleBeat(): [boolean, number, number, number];
/**
 * Changes start time of a tracklist (milliseconds)
 * `R* uses a random int: MISC::GET_RANDOM_INT_IN_RANGE(0, 13) * 60000)`
 *
 * Hash: 0x4E0AF9114608257C | Since: 2372
 * @deprecated Use audio.forceMusicTrackList(radioStation, trackListName, milliseconds) instead
 */
export declare function forceMusicTrackList(radioStation: string, trackListName: string, milliseconds: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3E65CDE5215832C1 | Since: 1493
 * @deprecated Use audio.getCurrentTrackPlayTime(radioStationName) instead
 */
export declare function getCurrentTrackPlayTime(radioStationName: string): number;
/**
 * No comment provided
 *
 * Hash: 0x34D66BC058019CE0 | Since: 1493
 * @deprecated Use audio.getCurrentTrackSoundName(radioStationName) instead
 */
export declare function getCurrentTrackSoundName(radioStationName: string): number;
/**
 * No comment provided
 *
 * Hash: 0xF3365489E0DD50F9 | Since: 323
 * @deprecated Use audio.setVehicleMissileWarningEnabled(vehicle, toggle) instead
 */
export declare function setVehicleMissileWarningEnabled(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Full list of ambient zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientZones.json
 *
 * Hash: 0xBDA07E5950085E46 | Since: 323
 * @deprecated Use audio.setAmbientZoneState(zoneName) instead
 */
export declare function setAmbientZoneState(zoneName: string): void;
/**
 * `This function also has a p2, unknown. Signature AUDIO::CLEAR_AMBIENT_ZONE_STATE(const char* zoneName, bool p1, Any p2);`
 *
 * Still needs more research.
 *
 * Full list of ambient zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientZones.json
 *
 * Hash: 0x218DD44AAAC964FF | Since: 323
 * @deprecated Use audio.clearAmbientZoneState(zoneName) instead
 */
export declare function clearAmbientZoneState(zoneName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x9748FA4DE50CCE3E | Since: 323
 * @deprecated Use audio.setAmbientZoneListState(ambientZone) instead
 */
export declare function setAmbientZoneListState(ambientZone: string): void;
/**
 * No comment provided
 *
 * Hash: 0x120C48C614909FA4 | Since: 323
 * @deprecated Use audio.clearAmbientZoneListState(ambientZone) instead
 */
export declare function clearAmbientZoneListState(ambientZone: string): void;
/**
 * Full list of ambient zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientZones.json
 *
 * Hash: 0x1D6650420CEC9D3B | Since: 323
 * @deprecated Use audio.setAmbientZoneStatePersistent(ambientZone) instead
 */
export declare function setAmbientZoneStatePersistent(ambientZone: string): void;
/**
 * Full list of ambient zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientZones.json
 *
 * Hash: 0xF3638DAE8C4045E1 | Since: 323
 * @deprecated Use audio.setAmbientZoneListStatePersistent(ambientZone) instead
 */
export declare function setAmbientZoneListStatePersistent(ambientZone: string): void;
/**
 * Full list of ambient zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ambientZones.json
 *
 * Hash: 0x01E2817A479A7F9B | Since: 323
 * @deprecated Use audio.isAmbientZoneEnabled(ambientZone) instead
 */
export declare function isAmbientZoneEnabled(ambientZone: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5D2BFAAB8D956E0E | Since: 573
 * @deprecated Use audio.refreshClosestOceanShoreline() instead
 */
export declare function refreshClosestOceanShoreline(): void;
/**
 * All occurrences found in b617d, sorted alphabetically and identical lines removed:
 *
 * `AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_AK");`
 * `AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_CUSTOM");`
 * `AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_TOOTHLESS");`
 * Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
 *
 * Hash: 0x3B4BF5F0859204D9 | Since: 323
 * @deprecated Use audio.setCutsceneOverride(name) instead
 */
export declare function setCutsceneAudioOverride(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0xBCC29F935ED07688 | Since: 323
 * @deprecated Use audio.setVariableOnSynchScene(variableName, value) instead
 */
export declare function setVariableOnSynchSceneAudio(variableName: string, value: number): void;
/**
 * Plays the given police radio message.
 *
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: https://pastebin.com/GBnsQ5hr
 * Full list of police report names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/policeReportNames.json
 *
 * Hash: 0xDFEBD56D9BD1EB16 | Since: 323
 * @deprecated Use audio.playPoliceReport(name) instead
 */
export declare function playPoliceReport(name: string): number;
/**
 * No comment provided
 *
 * Hash: 0xB4F90FAF7670B16F | Since: 323
 * @deprecated Use audio.cancelAllPoliceReports() instead
 */
export declare function cancelAllPoliceReports(): void;
/**
 * Plays the siren sound of a vehicle which is otherwise activated when fastly double-pressing the horn key.
 * Only works on vehicles with a police siren.
 *
 * Hash: 0x1B9025BDA76822B6 | Since: 323
 * @deprecated Use audio.blipSiren(vehicle) instead
 */
export declare function blipSiren(vehicle: number | Vehicle): void;
/**
 * Overrides the vehicle's horn hash.
 * When changing this hash on a vehicle, it will not return the 'overwritten' hash. It will still always return the default horn hash (same as GET_VEHICLE_DEFAULT_HORN)
 *
 * vehicle - the vehicle whose horn should be overwritten
 *
 * Hash: 0x3CDC1E622CCE0356 | Since: 323
 * @deprecated Use audio.overrideVehHorn(vehicle, override, hornHash) instead
 */
export declare function overrideVehHorn(vehicle: number | Vehicle, override: boolean, hornHash: number): void;
/**
 * Checks whether the horn of a vehicle is currently played.
 *
 * Hash: 0x9D6BFC12B05C6121 | Since: 323
 * @deprecated Use audio.isHornActive(vehicle) instead
 */
export declare function isHornActive(vehicle: number | Vehicle): boolean;
/**
 * Makes pedestrians sound their horn longer, faster and more agressive when they use their horn.
 *
 * Hash: 0x395BF71085D1B1D9 | Since: 323
 * @deprecated Use audio.setAggressiveHorns(toggle) instead
 */
export declare function setAggressiveHorns(toggle: boolean): void;
/**
 * Does nothing (it's a nullsub).
 *
 * Hash: 0x02E93C796ABD3A97 | Since: 323
 * @deprecated Use audio.setRadioPositionMute() instead
 */
export declare function setRadioPositionAudioMute(): void;
/**
 * No comment provided
 *
 * Hash: 0x58BB377BEC7CD5F4 | Since: 323
 * @deprecated Use audio.setVehicleConversationsPersist() instead
 */
export declare function setVehicleConversationsPersist(): void;
/**
 * No comment provided
 *
 * Hash: 0x9BD7BD55E4533183 | Since: 1290
 * @deprecated Use audio.setVehicleConversationsPersistNew() instead
 */
export declare function setVehicleConversationsPersistNew(): void;
/**
 * No comment provided
 *
 * Hash: 0xD11FA52EB849D978 | Since: 323
 * @deprecated Use audio.isStreamPlaying() instead
 */
export declare function isStreamPlaying(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4E72BBDBCA58A3DB | Since: 323
 * @deprecated Use audio.getStreamPlayTime() instead
 */
export declare function getStreamPlayTime(): number;
/**
 * Example:
 * `AUDIO::LOAD_STREAM("CAR_STEAL_1_PASSBY", "CAR_STEAL_1_SOUNDSET");`
 *
 * All found occurrences in the b678d decompiled scripts: https://pastebin.com/3rma6w5w
 *
 * Stream names often ends with "_MASTER", "_SMALL" or "_STREAM". Also "_IN", "_OUT" and numbers.
 *
 * soundSet is often set to 0 in the scripts. These are common to end the soundSets: "_SOUNDS", "_SOUNDSET" and numbers.
 *
 * Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
 *
 * Hash: 0x1F1F957154EC51DF | Since: 323
 * @deprecated Use audio.loadStream(streamName, soundSet) instead
 */
export declare function loadStream(streamName: string, soundSet: string): boolean;
/**
 * Example:
 * `AUDIO::LOAD_STREAM_WITH_START_OFFSET("STASH_TOXIN_STREAM", 2400, "FBI_05_SOUNDS");`
 *
 * Only called a few times in the scripts.
 *
 * Full list of audio / sound names by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/soundNames.json
 *
 * Hash: 0x59C16B79F53B3712 | Since: 323
 * @deprecated Use audio.loadStreamWithStartOffset(streamName, startOffset, soundSet) instead
 */
export declare function loadStreamWithStartOffset(streamName: string, startOffset: number, soundSet: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x89049DD63C08B5D1 | Since: 323
 * @deprecated Use audio.playStreamFromPed(ped) instead
 */
export declare function playStreamFromPed(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xB70374A758007DFA | Since: 323
 * @deprecated Use audio.playStreamFromVehicle(vehicle) instead
 */
export declare function playStreamFromVehicle(vehicle: number | Vehicle): void;
/**
 * `Used with AUDIO::LOAD_STREAM`
 *
 * Example from finale_heist2b.c4:
 * `TASK::TASK_SYNCHRONIZED_SCENE(l_4C8[2\/\*14\*\/], l_4C8[2\/\*14\*\/]._f7, l_30A, "push_out_vault_l", 4.0, -1.5, 5, 713, 4.0, 0);`
 * `PED::SET_SYNCHRONIZED_SCENE_PHASE(l_4C8[2\/\*14\*\/]._f7, 0.0);`
 * `PED::FORCE_PED_AI_AND_ANIMATION_UPDATE(l_4C8[2\/\*14\*\/], 0, 0);`
 * `PED::SET_PED_COMBAT_ATTRIBUTES(l_4C8[2\/\*14\*\/], 38, 1);`
 * `PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(l_4C8[2\/\*14\*\/], 1);`
 * `if (AUDIO::LOAD_STREAM("Gold_Cart_Push_Anim_01", "BIG_SCORE_3B_SOUNDS")) {`
 * `AUDIO::PLAY_STREAM_FROM_OBJECT(l_36F[0\/\*1\*\/]);`
 * }
 *
 * Hash: 0xEBAA9B64D76356FD | Since: 323
 * @deprecated Use audio.playStreamFromObject(_object) instead
 */
export declare function playStreamFromObject(_object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x58FCE43488F9F5F4 | Since: 323
 * @deprecated Use audio.playStreamFrontend() instead
 */
export declare function playStreamFrontend(): void;
/**
 * No comment provided
 *
 * Hash: 0x21442F412E8DE56B | Since: 323
 * @deprecated Use audio.playStreamFromPosition(pos) instead
 */
export declare function playStreamFromPosition(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xA4718A1419D18151 | Since: 323
 * @deprecated Use audio.stopStream() instead
 */
export declare function stopStream(): void;
/**
 * No comment provided
 *
 * Hash: 0x9D64D7405520E3D3 | Since: 323
 * @deprecated Use audio.stopPedSpeaking(ped, shaking) instead
 */
export declare function stopPedSpeaking(ped: number | Ped, shaking: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF8AD2EED7C47E8FE | Since: 1734
 * @deprecated Use audio.blockAllSpeechFromPed(ped) instead
 */
export declare function blockAllSpeechFromPed(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xAB6781A5F3101470 | Since: 1868
 * @deprecated Use audio.stopPedSpeakingSynced(ped) instead
 */
export declare function stopPedSpeakingSynced(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xA9A41C1E940FB0E8 | Since: 323
 * @deprecated Use audio.disablePedPain(ped, toggle) instead
 */
export declare function disablePedPainAudio(ped: number | Ped, toggle: boolean): void;
/**
 * Common in the scripts:
 * `AUDIO::IS_AMBIENT_SPEECH_DISABLED(PLAYER::PLAYER_PED_ID());`
 *
 * Hash: 0x932C2D096A2C3FFF | Since: 323
 * @deprecated Use audio.isAmbientSpeechDisabled(ped) instead
 */
export declare function isAmbientSpeechDisabled(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA8A7D434AFB4B97B | Since: 1493
 * @deprecated Use audio.blockSpeechContextGroup() instead
 */
export declare function blockSpeechContextGroup(): void;
/**
 * No comment provided
 *
 * Hash: 0x2ACABED337622DF2 | Since: 1493
 * @deprecated Use audio.unblockSpeechContextGroup() instead
 */
export declare function unblockSpeechContextGroup(): void;
/**
 * No comment provided
 *
 * Hash: 0x1FEF0683B96EBCF2 | Since: 323
 * @deprecated Use audio.setSirenWithNoDriver(vehicle, toggle) instead
 */
export declare function setSirenWithNoDriver(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF584CF8529B51434 | Since: 2372
 * @deprecated Use audio.setSirenBypassMpDriverCheck(vehicle, toggle) instead
 */
export declare function setSirenBypassMpDriverCheck(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x66C3FB05206041BA | Since: 1290
 * @deprecated Use audio.triggerSiren(vehicle) instead
 */
export declare function triggerSirenAudio(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x9C11908013EA4715 | Since: 323
 * @deprecated Use audio.setHornPermanentlyOn(vehicle) instead
 */
export declare function setHornPermanentlyOn(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x76D683C108594D0E | Since: 323
 * @deprecated Use audio.setHornEnabled(vehicle, toggle) instead
 */
export declare function setHornEnabled(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE5564483E407F914 | Since: 323
 * @deprecated Use audio.setVehiclePriority(vehicle) instead
 */
export declare function setAudioVehiclePriority(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x9D3AF56E94C9AE98 | Since: 323
 * @deprecated Use audio.setHornPermanentlyOnTime(vehicle, time) instead
 */
export declare function setHornPermanentlyOnTime(vehicle: number | Vehicle, time: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFA932DE350266EF8 | Since: 323
 * @deprecated Use audio.useSirenAsHorn(vehicle, toggle) instead
 */
export declare function useSirenAsHorn(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * This native sets the audio of the specified vehicle to the audioName (p1).
 *
 * Use the audioNameHash found in vehicles.meta
 *
 * Example:
 * _SET_VEHICLE_AUDIO(veh, "ADDER");
 * The selected vehicle will now have the audio of the Adder.
 *
 * Hash: 0x4F0C413926060B38 | Since: 323
 * @deprecated Use audio.forceUseGameObject(vehicle, audioName) instead
 */
export declare function forceUseAudioGameObject(vehicle: number | Vehicle, audioName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xCA4CEA6AE0000A7E | Since: 1180
 * @deprecated Use audio.preloadVehicleBank(vehicleModel) instead
 */
export declare function preloadVehicleAudioBank(vehicleModel: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xF1F8157B8C3F171C | Since: 323
 * @deprecated Use audio.setVehicleStartupRevSound(vehicle) instead
 */
export declare function setVehicleStartupRevSound(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xD2DCCD8E16E20997 | Since: 323
 * @deprecated Use audio.resetVehicleStartupRevSound(vehicle) instead
 */
export declare function resetVehicleStartupRevSound(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x97FFB4ADEED08066 | Since: 2372
 * @deprecated Use audio.setVehicleForceReverseWarning() instead
 */
export declare function setVehicleForceReverseWarning(): void;
/**
 * No comment provided
 *
 * Hash: 0x5DB8010EE71FDEF2 | Since: 323
 * @deprecated Use audio.isVehicleAudiblyDamaged(vehicle) instead
 */
export declare function isVehicleAudiblyDamaged(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x59E7B488451F4D3A | Since: 323
 * @deprecated Use audio.setVehicleEngineDamageFactor(vehicle, damageFactor) instead
 */
export declare function setVehicleAudioEngineDamageFactor(vehicle: number | Vehicle, damageFactor: number): void;
/**
 * intensity: 0.0f - 1.0f, only used once with 1.0f in R* Scripts (nigel2)
 * Makes an engine rattling noise when you decelerate, you need to be going faster to hear lower values
 *
 * Hash: 0x01BB4D577D38BD9E | Since: 323
 * @deprecated Use audio.setVehicleBodyDamageFactor(vehicle, intensity) instead
 */
export declare function setVehicleAudioBodyDamageFactor(vehicle: number | Vehicle, intensity: number): void;
/**
 * Called together with SET_VEHICLE_TYRES_CAN_BURST
 *
 * Hash: 0xEB7D0E1FCC8FE17A | Since: 3258
 * @deprecated Use audio.forceVehicleEngineSynth(vehicle, force) instead
 */
export declare function forceVehicleEngineSynth(vehicle: number | Vehicle, force: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1C073274E065C6D2 | Since: 323
 * @deprecated Use audio.enableVehicleFanbeltDamage(vehicle, toggle) instead
 */
export declare function enableVehicleFanbeltDamage(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2BE4BC731D039D5A | Since: 323
 * @deprecated Use audio.enableVehicleExhaustPops(vehicle, toggle) instead
 */
export declare function enableVehicleExhaustPops(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * SET_VEHICLE_BOOST_ACTIVE(vehicle, 1, 0);
 * SET_VEHICLE_BOOST_ACTIVE(vehicle, 0, 0);
 *
 * Will give a boost-soundeffect.
 *
 * Hash: 0x4A04DE7CAB2739A1 | Since: 323
 * @deprecated Use audio.setVehicleBoostActive(vehicle, toggle) instead
 */
export declare function setVehicleBoostActive(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6FDDAD856E36988A | Since: 323
 * @deprecated Use audio.setPlayerVehicleAlarmActive(vehicle, toggle) instead
 */
export declare function setPlayerVehicleAlarmAudioActive(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x06C0023BED16DD6B | Since: 323
 * @deprecated Use audio.setScriptUpdateDoor(doorHash, toggle) instead
 */
export declare function setScriptUpdateDoorAudio(doorHash: number | string, toggle: boolean): void;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0x3A539D52857EA82D | Since: 323
 * @deprecated Use audio.playVehicleDoorOpenSound(vehicle, doorId) instead
 */
export declare function playVehicleDoorOpenSound(vehicle: number | Vehicle, doorId: number): void;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0x62A456AA4769EF34 | Since: 323
 * @deprecated Use audio.playVehicleDoorCloseSound(vehicle, doorId) instead
 */
export declare function playVehicleDoorCloseSound(vehicle: number | Vehicle, doorId: number): void;
/**
 * Works for planes only.
 *
 * Hash: 0xC15907D667F7CFB2 | Since: 323
 * @deprecated Use audio.enableStallWarningSounds(vehicle, toggle) instead
 */
export declare function enableStallWarningSounds(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBEFB80290414FD4F | Since: 3095
 * @deprecated Use audio.enableDragRaceStationaryWarningSounds(vehicle, enable) instead
 */
export declare function enableDragRaceStationaryWarningSounds(vehicle: number | Vehicle, enable: boolean): void;
/**
 * Hardcoded to return 1
 *
 * Hash: 0x6D28DC1671E334FD | Since: 323
 * @deprecated Use audio.isGameInControlOfMusic() instead
 */
export declare function isGameInControlOfMusic(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3BD3F52BA9B1E4E8 | Since: 323
 * @deprecated Use audio.setGpsActive(active) instead
 */
export declare function setGpsActive(active: boolean): void;
/**
 * Called 38 times in the scripts. There are 5 different audioNames used.
 * One unknown removed below.
 *
 * `AUDIO::PLAY_MISSION_COMPLETE_AUDIO("DEAD");`
 * `AUDIO::PLAY_MISSION_COMPLETE_AUDIO("FRANKLIN_BIG_01");`
 * `AUDIO::PLAY_MISSION_COMPLETE_AUDIO("GENERIC_FAILED");`
 * `AUDIO::PLAY_MISSION_COMPLETE_AUDIO("TREVOR_SMALL_01");`
 *
 * Hash: 0xB138AAB8A70D3C69 | Since: 323
 * @deprecated Use audio.playMissionComplete(audioName) instead
 */
export declare function playMissionCompleteAudio(audioName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x19A30C23F5827F8A | Since: 323
 * @deprecated Use audio.isMissionCompletePlaying() instead
 */
export declare function isMissionCompletePlaying(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6F259F82D873B8B8 | Since: 323
 * @deprecated Use audio.isMissionCompleteReadyForUi() instead
 */
export declare function isMissionCompleteReadyForUi(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF154B8D1775B2DEC | Since: 323
 * @deprecated Use audio.blockDeathJingle(toggle) instead
 */
export declare function blockDeathJingle(toggle: boolean): void;
/**
 * Used to prepare a scene where the surrounding sound is muted or a bit changed. This does not play any sound.
 *
 * List of all usable scene names found in b617d. Sorted alphabetically and identical names removed: https://pastebin.com/MtM9N9CC
 * Full list of audio scene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/audioSceneNames.json
 *
 * Hash: 0x013A80FC08F6E4F2 | Since: 323
 * @deprecated Use audio.startScene(scene) instead
 */
export declare function startAudioScene(scene: string): boolean;
/**
 * Full list of audio scene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/audioSceneNames.json
 *
 * Hash: 0xDFE8422B3B94E688 | Since: 323
 * @deprecated Use audio.stopScene(scene) instead
 */
export declare function stopAudioScene(scene: string): void;
/**
 * No comment provided
 *
 * Hash: 0xBAC7FC81A75EC1A1 | Since: 323
 * @deprecated Use audio.stopScenes() instead
 */
export declare function stopAudioScenes(): void;
/**
 * Full list of audio scene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/audioSceneNames.json
 *
 * Hash: 0xB65B60556E2A9225 | Since: 323
 * @deprecated Use audio.isSceneActive(scene) instead
 */
export declare function isAudioSceneActive(scene: string): boolean;
/**
 * Full list of audio scene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/audioSceneNames.json
 *
 * Hash: 0xEF21A9EF089A2668 | Since: 323
 * @deprecated Use audio.setSceneVariable(scene, variable, value) instead
 */
export declare function setAudioSceneVariable(scene: string, variable: string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA5F377B175A699C5 | Since: 323
 * @deprecated Use audio.setScriptCleanupTime(time) instead
 */
export declare function setAudioScriptCleanupTime(time: number): void;
/**
 * All found occurrences in b678d:
 * https://pastebin.com/ceu67jz8
 *
 * Hash: 0x153973AB99FE8980 | Since: 323
 * @deprecated Use audio.addEntityToMixGroup(entity, groupName) instead
 */
export declare function addEntityToAudioMixGroup(entity: number | Entity, groupName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x18EB48CFC41F2EA0 | Since: 323
 * @deprecated Use audio.removeEntityFromMixGroup(entity) instead
 */
export declare function removeEntityFromAudioMixGroup(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x845FFC3A4FEEFA3E | Since: 323
 * @deprecated Use audio.isMusicPlaying() instead
 */
export declare function audioIsMusicPlaying(): boolean;
/**
 * This is an alias of AUDIO_IS_MUSIC_PLAYING.
 *
 * Hash: 0x2DD39BF3E2F9C47F | Since: 463
 * @deprecated Use audio.isScriptedMusicPlaying() instead
 */
export declare function audioIsScriptedMusicPlaying(): boolean;
/**
 * All music event names found in the b617d scripts: https://pastebin.com/GnYt0R3P
 * Full list of music event names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/musicEventNames.json
 *
 * Hash: 0x1E5185B72EF5158A | Since: 323
 * @deprecated Use audio.prepareMusicEvent(eventName) instead
 */
export declare function prepareMusicEvent(eventName: string): boolean;
/**
 * All music event names found in the b617d scripts: https://pastebin.com/GnYt0R3P
 * Full list of music event names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/musicEventNames.json
 *
 * Hash: 0x5B17A90291133DA5 | Since: 323
 * @deprecated Use audio.cancelMusicEvent(eventName) instead
 */
export declare function cancelMusicEvent(eventName: string): boolean;
/**
 * List of all usable event names found in b617d used with this native. Sorted alphabetically and identical names removed: https://pastebin.com/RzDFmB1W
 *
 * All music event names found in the b617d scripts: https://pastebin.com/GnYt0R3P
 * Full list of music event names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/musicEventNames.json
 *
 * Hash: 0x706D57B0F50DA710 | Since: 323
 * @deprecated Use audio.triggerMusicEvent(eventName) instead
 */
export declare function triggerMusicEvent(eventName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA097AB275061FB21 | Since: 323
 * @deprecated Use audio.isMusicOneshotPlaying() instead
 */
export declare function isMusicOneshotPlaying(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE7A0D23DC414507B | Since: 323
 * @deprecated Use audio.getMusicPlaytime() instead
 */
export declare function getMusicPlaytime(): number;
/**
 * No comment provided
 *
 * Hash: 0x159B7318403A1CD8 | Since: 1103
 * @deprecated Use audio.setGlobalRadioSignalLevel() instead
 */
export declare function setGlobalRadioSignalLevel(): void;
/**
 * No comment provided
 *
 * Hash: 0xFBE20329593DEC9D | Since: 323
 * @deprecated Use audio.recordBrokenGlass(pos, radius) instead
 */
export declare function recordBrokenGlass(pos: Vector3, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB32209EFFDC04913 | Since: 323
 * @deprecated Use audio.clearAllBrokenGlass() instead
 */
export declare function clearAllBrokenGlass(): void;
/**
 * No comment provided
 *
 * Hash: 0x70B8EC8FC108A634 | Since: 323
 * @deprecated Use audio.scriptOverridesWindElevation() instead
 */
export declare function scriptOverridesWindElevation(): void;
/**
 * No comment provided
 *
 * Hash: 0x149AEE66F0CB3A99 | Since: 323
 * @deprecated Use audio.setPedWallaDensity() instead
 */
export declare function setPedWallaDensity(): void;
/**
 * No comment provided
 *
 * Hash: 0x8BF907833BE275DE | Since: 323
 * @deprecated Use audio.setPedInteriorWallaDensity() instead
 */
export declare function setPedInteriorWallaDensity(): void;
/**
 * No comment provided
 *
 * Hash: 0x062D5EAD4DA2FA6A | Since: 323
 * @deprecated Use audio.forcePedPanicWalla() instead
 */
export declare function forcePedPanicWalla(): void;
/**
 * Example:
 *
 * `bool prepareAlarm = AUDIO::PREPARE_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS");`
 * Full list of alarm names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/alarmSounds.json
 *
 * Hash: 0x9D74AE343DB65533 | Since: 323
 * @deprecated Use audio.prepareAlarm(alarmName) instead
 */
export declare function prepareAlarm(alarmName: string): boolean;
/**
 * Example:
 *
 * This will start the alarm at Fort Zancudo.
 *
 * `AUDIO::START_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);`
 *
 * First parameter (char) is the name of the alarm.
 * Second parameter (bool) is unknown, it does not seem to make a difference if this one is 0 or 1.
 *
 * ----------
 *
 * It DOES make a difference but it has to do with the duration or something I dunno yet
 *
 * ----------
 *
 * Found in the b617d scripts:
 *
 * `AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS", 0);`
 * `AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS_UPPER", 1);`
 * `AUDIO::START_ALARM("AGENCY_HEIST_FIB_TOWER_ALARMS_UPPER_B", 0);`
 * `AUDIO::START_ALARM("BIG_SCORE_HEIST_VAULT_ALARMS", a_0);`
 * `AUDIO::START_ALARM("FBI_01_MORGUE_ALARMS", 1);`
 * `AUDIO::START_ALARM("FIB_05_BIOTECH_LAB_ALARMS", 0);`
 * `AUDIO::START_ALARM("JEWEL_STORE_HEIST_ALARMS", 0);`
 * `AUDIO::START_ALARM("PALETO_BAY_SCORE_ALARM", 1);`
 * `AUDIO::START_ALARM("PALETO_BAY_SCORE_CHICKEN_FACTORY_ALARM", 0);`
 * `AUDIO::START_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);`
 * `AUDIO::START_ALARM("PORT_OF_LS_HEIST_SHIP_ALARMS", 0);`
 * `AUDIO::START_ALARM("PRISON_ALARMS", 0);`
 * `AUDIO::START_ALARM("PROLOGUE_VAULT_ALARMS", 0);`
 * Full list of alarm names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/alarmSounds.json
 *
 * Hash: 0x0355EF116C4C97B2 | Since: 323
 * @deprecated Use audio.startAlarm(alarmName) instead
 */
export declare function startAlarm(alarmName: string): void;
/**
 * Example:
 *
 * This will stop the alarm at Fort Zancudo.
 *
 * `AUDIO::STOP_ALARM("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS", 1);`
 *
 * First parameter (char) is the name of the alarm.
 * Second parameter (bool) has to be true (1) to have any effect.
 * Full list of alarm names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/alarmSounds.json
 *
 * Hash: 0xA1CADDCD98415A41 | Since: 323
 * @deprecated Use audio.stopAlarm(alarmName, toggle) instead
 */
export declare function stopAlarm(alarmName: string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2F794A877ADD4C92 | Since: 323
 * @deprecated Use audio.stopAllAlarms(stop) instead
 */
export declare function stopAllAlarms(stop: boolean): void;
/**
 * Example:
 *
 * `bool playing = AUDIO::IS_ALARM_PLAYING("PORT_OF_LS_HEIST_FORT_ZANCUDO_ALARMS");`
 * Full list of alarm names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/alarmSounds.json
 *
 * Hash: 0x226435CB96CCFC8C | Since: 323
 * @deprecated Use audio.isAlarmPlaying(alarmName) instead
 */
export declare function isAlarmPlaying(alarmName: string): boolean;
/**
 * Returns hash of default vehicle horn
 *
 * Hash is stored in audVehicleAudioEntity
 *
 * Hash: 0x02165D55000219AC | Since: 323
 * @deprecated Use audio.getVehicleDefaultHorn(vehicle) instead
 */
export declare function getVehicleDefaultHorn(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xACB5DCCA1EC76840 | Since: 323
 * @deprecated Use audio.getVehicleDefaultHornIgnoreMods(vehicle) instead
 */
export declare function getVehicleDefaultHornIgnoreMods(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xF54BB7B61036F335 | Since: 323
 * @deprecated Use audio.resetPedFlags(ped) instead
 */
export declare function resetPedAudioFlags(ped: number | Ped): void;
/**
 * Enables/disables ped's "loud" footstep sound.
 *
 * Hash: 0x0653B735BFBDFE87 | Since: 1493
 * @deprecated Use audio.setPedFootstepsEventsEnabled(ped, toggle) instead
 */
export declare function setPedFootstepsEventsEnabled(ped: number | Ped, toggle: boolean): void;
/**
 * Enables/disables ped's "quiet" footstep sound.
 *
 * Hash: 0x29DA3CA8D8B2692D | Since: 1493
 * @deprecated Use audio.setPedClothEventsEnabled(ped, toggle) instead
 */
export declare function setPedClothEventsEnabled(ped: number | Ped, toggle: boolean): void;
/**
 * Sets audio flag "OverridePlayerGroundMaterial"
 *
 * Hash: 0xD2CC78CD3D0B50F9 | Since: 323
 * @deprecated Use audio.overridePlayerGroundMaterial(hash, toggle) instead
 */
export declare function overridePlayerGroundMaterial(hash: number | string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBF4DC1784BE94DFA | Since: 323
 * @deprecated Use audio.useFootstepScriptSweeteners(ped, hash) instead
 */
export declare function useFootstepScriptSweeteners(ped: number | Ped, hash: number | string): void;
/**
 * Sets audio flag "OverrideMicrophoneSettings"
 *
 * Hash: 0x75773E11BA459E90 | Since: 323
 * @deprecated Use audio.overrideMicrophoneSettings(hash, toggle) instead
 */
export declare function overrideMicrophoneSettings(hash: number | string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD57AAAE0E2214D11 | Since: 323
 * @deprecated Use audio.freezeMicrophone() instead
 */
export declare function freezeMicrophone(): void;
/**
 * If value is set to true, and ambient siren sound will be played.
 * Appears to enable/disable an audio flag.
 *
 * Hash: 0x552369F549563AD5 | Since: 323
 * @deprecated Use audio.distantCopCarSirens(value) instead
 */
export declare function distantCopCarSirens(value: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x43FA0DFC5DF87815 | Since: 323
 * @deprecated Use audio.setSirenCanBeControlledBy(vehicle) instead
 */
export declare function setSirenCanBeControlledByAudio(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xB81CF134AEB56FFB | Since: 791
 * @deprecated Use audio.enableStuntJump() instead
 */
export declare function enableStuntJumpAudio(): void;
/**
 * Possible flag names:
 * "ActivateSwitchWheelAudio"
 * "AllowAmbientSpeechInSlowMo"
 * "AllowCutsceneOverScreenFade"
 * "AllowForceRadioAfterRetune"
 * "AllowPainAndAmbientSpeechToPlayDuringCutscene"
 * "AllowPlayerAIOnMission"
 * "AllowPoliceScannerWhenPlayerHasNoControl"
 * "AllowRadioDuringSwitch"
 * "AllowRadioOverScreenFade"
 * "AllowScoreAndRadio"
 * "AllowScriptedSpeechInSlowMo"
 * "AvoidMissionCompleteDelay"
 * "DisableAbortConversationForDeathAndInjury"
 * "DisableAbortConversationForRagdoll"
 * "DisableBarks"
 * "DisableFlightMusic"
 * "DisableReplayScriptStreamRecording"
 * "EnableHeadsetBeep"
 * "ForceConversationInterrupt"
 * "ForceSeamlessRadioSwitch"
 * "ForceSniperAudio"
 * "FrontendRadioDisabled"
 * "HoldMissionCompleteWhenPrepared"
 * "IsDirectorModeActive"
 * "IsPlayerOnMissionForSpeech"
 * "ListenerReverbDisabled"
 * "LoadMPData"
 * "MobileRadioInGame"
 * "OnlyAllowScriptTriggerPoliceScanner"
 * "PlayMenuMusic"
 * "PoliceScannerDisabled"
 * "ScriptedConvListenerMaySpeak"
 * "SpeechDucksScore"
 * "SuppressPlayerScubaBreathing"
 * "WantedMusicDisabled"
 * "WantedMusicOnMission"
 *
 * -------------------------------
 * No added flag names between b393d and b573d, including b573d.
 *
 * #######################################################################
 *
 * "IsDirectorModeActive" is an audio flag which will allow you to play speech infinitely without any pauses like in Director Mode.
 *
 * -----------------------------------------------------------------------
 *
 * All flag IDs and hashes:
 *
 * ID: 00 | Hash: 0x0FED7A7F
 * ID: 01 | Hash: 0x20A7858F
 * ID: 02 | Hash: 0xA11C2259
 * ID: 03 | Hash: 0x08DE4700
 * ID: 04 | Hash: 0x989F652F
 * ID: 05 | Hash: 0x3C9E76BA
 * ID: 06 | Hash: 0xA805FEB0
 * ID: 07 | Hash: 0x4B94EA26
 * ID: 08 | Hash: 0x803ACD34
 * ID: 09 | Hash: 0x7C741226
 * ID: 10 | Hash: 0x31DB9EBD
 * ID: 11 | Hash: 0xDF386F18
 * ID: 12 | Hash: 0x669CED42
 * ID: 13 | Hash: 0x51F22743
 * ID: 14 | Hash: 0x2052B35C
 * ID: 15 | Hash: 0x071472DC
 * ID: 16 | Hash: 0xF9928BCC
 * ID: 17 | Hash: 0x7ADBDD48
 * ID: 18 | Hash: 0xA959BA1A
 * ID: 19 | Hash: 0xBBE89B60
 * ID: 20 | Hash: 0x87A08871
 * ID: 21 | Hash: 0xED1057CE
 * ID: 22 | Hash: 0x1584AD7A
 * ID: 23 | Hash: 0x8582CFCB
 * ID: 24 | Hash: 0x7E5E2FB0
 * ID: 25 | Hash: 0xAE4F72DB
 * ID: 26 | Hash: 0x5D16D1FA
 * ID: 27 | Hash: 0x06B2F4B8
 * ID: 28 | Hash: 0x5D4CDC96
 * ID: 29 | Hash: 0x8B5A48BA
 * ID: 30 | Hash: 0x98FBD539
 * ID: 31 | Hash: 0xD8CB0473
 * ID: 32 | Hash: 0x5CBB4874
 * ID: 33 | Hash: 0x2E9F93A9
 * ID: 34 | Hash: 0xD93BEA86
 * ID: 35 | Hash: 0x92109B7D
 * ID: 36 | Hash: 0xB7EC9E4D
 * ID: 37 | Hash: 0xCABDBB1D
 * ID: 38 | Hash: 0xB3FD4A52
 * ID: 39 | Hash: 0x370D94E5
 * ID: 40 | Hash: 0xA0F7938F
 * ID: 41 | Hash: 0xCBE1CE81
 * ID: 42 | Hash: 0xC27F1271
 * ID: 43 | Hash: 0x9E3258EB
 * ID: 44 | Hash: 0x551CDA5B
 * ID: 45 | Hash: 0xCB6D663C
 * ID: 46 | Hash: 0x7DACE87F
 * ID: 47 | Hash: 0xF9DE416F
 * ID: 48 | Hash: 0x882E6E9E
 * ID: 49 | Hash: 0x16B447E7
 * ID: 50 | Hash: 0xBD867739
 * ID: 51 | Hash: 0xA3A58604
 * ID: 52 | Hash: 0x7E046BBC
 * ID: 53 | Hash: 0xD95FDB98
 * ID: 54 | Hash: 0x5842C0ED
 * ID: 55 | Hash: 0x285FECC6
 * ID: 56 | Hash: 0x9351AC43
 * ID: 57 | Hash: 0x50032E75
 * ID: 58 | Hash: 0xAE6D0D59
 * ID: 59 | Hash: 0xD6351785
 * ID: 60 | Hash: 0xD25D71BC
 * ID: 61 | Hash: 0x1F7F6423
 * ID: 62 | Hash: 0xE24C3AA6
 * ID: 63 | Hash: 0xBFFDD2B7
 *
 * Hash: 0xB9EFD5C25018725A | Since: 323
 * @deprecated Use audio.setFlag(flagName, toggle) instead
 */
export declare function setAudioFlag(flagName: string, toggle: boolean): void;
/**
 * p1 is always 0 in the scripts
 *
 * Hash: 0xC7ABCACA4985A766 | Since: 323
 * @deprecated Use audio.prepareSynchronizedEvent(audioEvent) instead
 */
export declare function prepareSynchronizedAudioEvent(audioEvent: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x029FE7CD1B7E2E75 | Since: 323
 * @deprecated Use audio.prepareSynchronizedEventForScene(sceneID, audioEvent) instead
 */
export declare function prepareSynchronizedAudioEventForScene(sceneID: number, audioEvent: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8B2FD4560E55DD2D | Since: 323
 * @deprecated Use audio.playSynchronizedEvent(sceneID) instead
 */
export declare function playSynchronizedAudioEvent(sceneID: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x92D6A88E64A94430 | Since: 323
 * @deprecated Use audio.stopSynchronizedEvent(sceneID) instead
 */
export declare function stopSynchronizedAudioEvent(sceneID: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC8EDE9BDBCCBA6D4 | Since: 323
 * @deprecated Use audio.initSynchSceneWithPosition(audioEvent, pos) instead
 */
export declare function initSynchSceneAudioWithPosition(audioEvent: string, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x950A154B8DAB6185 | Since: 323
 * @deprecated Use audio.initSynchSceneWithEntity(audioEvent, entity) instead
 */
export declare function initSynchSceneAudioWithEntity(audioEvent: string, entity: number | Entity): void;
/**
 * Needs to be called every frame.
 * Audio mode to apply this frame: https://alloc8or.re/gta5/doc/enums/audSpecialEffectMode.txt
 *
 * Hash: 0x12561FCBB62D5B9C | Since: 323
 * @deprecated Use audio.setSpecialEffectMode(mode) instead
 */
export declare function setAudioSpecialEffectMode(mode: number): void;
/**
 * Found in the b617d scripts, duplicates removed:
 *
 * `AUDIO::SET_PORTAL_SETTINGS_OVERRIDE("V_CARSHOWROOM_PS_WINDOW_UNBROKEN", "V_CARSHOWROOM_PS_WINDOW_BROKEN");`
 *
 * `AUDIO::SET_PORTAL_SETTINGS_OVERRIDE("V_CIA_PS_WINDOW_UNBROKEN", "V_CIA_PS_WINDOW_BROKEN");`
 *
 * `AUDIO::SET_PORTAL_SETTINGS_OVERRIDE("V_DLC_HEIST_APARTMENT_DOOR_CLOSED", "V_DLC_HEIST_APARTMENT_DOOR_OPEN");`
 *
 * `AUDIO::SET_PORTAL_SETTINGS_OVERRIDE("V_FINALEBANK_PS_VAULT_INTACT", "V_FINALEBANK_PS_VAULT_BLOWN");`
 *
 * `AUDIO::SET_PORTAL_SETTINGS_OVERRIDE("V_MICHAEL_PS_BATHROOM_WITH_WINDOW", "V_MICHAEL_PS_BATHROOM_WITHOUT_WINDOW");`
 *
 * Hash: 0x044DBAD7A7FA2BE5 | Since: 323
 * @deprecated Use audio.setPortalSettingsOverride() instead
 */
export declare function setPortalSettingsOverride(): void;
/**
 * No comment provided
 *
 * Hash: 0xC9D623C5A3D8FD5D | Since: 3570
 * @deprecated Use audio.setIndividualPortalSettingsOverride(interiorNameHash, roomIndex, doorIndex, newPortalSettingsName) instead
 */
export declare function setIndividualPortalSettingsOverride(interiorNameHash: number | string, roomIndex: number, doorIndex: number, newPortalSettingsName: string): void;
/**
 * Found in the b617d scripts, duplicates removed:
 *
 * `AUDIO::REMOVE_PORTAL_SETTINGS_OVERRIDE("V_CARSHOWROOM_PS_WINDOW_UNBROKEN");`
 * `AUDIO::REMOVE_PORTAL_SETTINGS_OVERRIDE("V_CIA_PS_WINDOW_UNBROKEN");`
 * `AUDIO::REMOVE_PORTAL_SETTINGS_OVERRIDE("V_DLC_HEIST_APARTMENT_DOOR_CLOSED");`
 * `AUDIO::REMOVE_PORTAL_SETTINGS_OVERRIDE("V_FINALEBANK_PS_VAULT_INTACT");`
 * `AUDIO::REMOVE_PORTAL_SETTINGS_OVERRIDE("V_MICHAEL_PS_BATHROOM_WITH_WINDOW");`
 *
 * Hash: 0xB4BBFD9CD8B3922B | Since: 323
 * @deprecated Use audio.removePortalSettingsOverride() instead
 */
export declare function removePortalSettingsOverride(): void;
/**
 * No comment provided
 *
 * Hash: 0x8EF105736194F80C | Since: 3570
 * @deprecated Use audio.removeIndividualPortalSettingsOverride(interiorNameHash, roomIndex, doorIndex) instead
 */
export declare function removeIndividualPortalSettingsOverride(interiorNameHash: number | string, roomIndex: number, doorIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE4E6DD5566D28C82 | Since: 323
 * @deprecated Use audio.stopSmokeGrenadeExplosionSounds() instead
 */
export declare function stopSmokeGrenadeExplosionSounds(): void;
/**
 * No comment provided
 *
 * Hash: 0x3A48AB4445D499BE | Since: 323
 * @deprecated Use audio.getMusicVolSlider() instead
 */
export declare function getMusicVolSlider(): number;
/**
 * No comment provided
 *
 * Hash: 0x4ADA3F19BE4A6047 | Since: 323
 * @deprecated Use audio.requestTennisBanks(ped) instead
 */
export declare function requestTennisBanks(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x0150B6FF25A9E2E5 | Since: 323
 * @deprecated Use audio.unrequestTennisBanks() instead
 */
export declare function unrequestTennisBanks(): void;
/**
 * No comment provided
 *
 * Hash: 0xBEF34B1D9624D5DD | Since: 323
 * @deprecated Use audio.setSkipMinigunSpinUp() instead
 */
export declare function setSkipMinigunSpinUpAudio(): void;
/**
 * No comment provided
 *
 * Hash: 0x806058BBDC136E06 | Since: 323
 * @deprecated Use audio.stopCutscene() instead
 */
export declare function stopCutsceneAudio(): void;
/**
 * No comment provided
 *
 * Hash: 0x544810ED9DB6BBE6 | Since: 323
 * @deprecated Use audio.hasLoadedMpDataSet() instead
 */
export declare function hasLoadedMpDataSet(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5B50ABB1FE3746F4 | Since: 323
 * @deprecated Use audio.hasLoadedSpDataSet() instead
 */
export declare function hasLoadedSpDataSet(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD53F3A29BCE2580E | Since: 1365
 * @deprecated Use audio.getVehicleHornSoundIndex(vehicle) instead
 */
export declare function getVehicleHornSoundIndex(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x0350E7E17BA767D0 | Since: 1365
 * @deprecated Use audio.setVehicleHornSoundIndex(vehicle, value) instead
 */
export declare function setVehicleHornSoundIndex(vehicle: number | Vehicle, value: number): void;
/**
 * `BRAIN::ADD_SCRIPT_TO_RANDOM_PED("pb_prostitute", ${s_f_y_hooker_01}, 100, 0);`
 *
 * - Nacorpio
 *
 * -----
 *
 * Hardcoded to not work in Multiplayer.
 *
 * Hash: 0x4EE5367468A65CCC | Since: 323
 * @deprecated Use brain.addScriptToRandomPed(name, model) instead
 */
export declare function addScriptToRandomPed(name: string, model: number | string): void;
/**
 * Registers a script for any object with a specific model hash.
 *
 * `BRAIN::REGISTER_OBJECT_SCRIPT_BRAIN("ob_telescope", ${prop_telescope_01}, 100, 4.0, -1, 9);`
 *
 * - Nacorpio
 *
 * Hash: 0x0BE84C318BA6EC22 | Since: 323
 * @deprecated Use brain.registerObjectScript(scriptName, modelHash, activationRange) instead
 */
export declare function registerObjectScriptBrain(scriptName: string, modelHash: number | string, activationRange: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCCBA154209823057 | Since: 323
 * @deprecated Use brain.isObjectWithinActivationRange(_object) instead
 */
export declare function isObjectWithinBrainActivationRange(_object: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3CDC7136613284BD | Since: 323
 * @deprecated Use brain.registerWorldPointScript(scriptName, activationRange) instead
 */
export declare function registerWorldPointScriptBrain(scriptName: string, activationRange: number): void;
/**
 * Gets whether the world point the calling script is registered to is within desired range of the player.
 *
 * Hash: 0xC5042CC6F5E3D450 | Since: 323
 * @deprecated Use brain.isWorldPointWithinActivationRange() instead
 */
export declare function isWorldPointWithinBrainActivationRange(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x67AA4D73F0CFA86B | Since: 323
 * @deprecated Use brain.enableScriptSet(brainSet) instead
 */
export declare function enableScriptBrainSet(brainSet: number): void;
/**
 * No comment provided
 *
 * Hash: 0x14D8518E9760F08F | Since: 323
 * @deprecated Use brain.disableScriptSet(brainSet) instead
 */
export declare function disableScriptBrainSet(brainSet: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0B40ED49D7D6FF84 | Since: 323
 * @deprecated Use brain.reactivateAllWorldsThatAreWaitingTillOutOfRange() instead
 */
export declare function reactivateAllWorldBrainsThatAreWaitingTillOutOfRange(): void;
/**
 * No comment provided
 *
 * Hash: 0x4D953DF78EBF8158 | Since: 323
 * @deprecated Use brain.reactivateAllObjectsThatAreWaitingTillOutOfRange() instead
 */
export declare function reactivateAllObjectBrainsThatAreWaitingTillOutOfRange(): void;
/**
 * Possible values:
 *
 * act_cinema
 * am_mp_carwash_launch
 * am_mp_carwash_control
 * am_mp_property_ext
 * chop
 * fairgroundHub
 * launcher_BasejumpHeli
 * launcher_BasejumpPack
 * launcher_CarWash
 * launcher_golf
 * launcher_Hunting_Ambient
 * launcher_MrsPhilips
 * launcher_OffroadRacing
 * launcher_pilotschool
 * launcher_Racing
 * launcher_rampage
 * launcher_rampage
 * launcher_range
 * launcher_stunts
 * launcher_stunts
 * launcher_tennis
 * launcher_Tonya
 * launcher_Triathlon
 * launcher_Yoga
 * ob_mp_bed_low
 * ob_mp_bed_med
 *
 * Hash: 0x6D6840CEE8845831 | Since: 323
 * @deprecated Use brain.reactivateNamedWorldsWaitingTillOutOfRange(scriptName) instead
 */
export declare function reactivateNamedWorldBrainsWaitingTillOutOfRange(scriptName: string): void;
/**
 * Looks like a cousin of above function _6D6840CEE8845831 as it was found among them. Must be similar
 *
 * Here are possible values of argument -
 *
 * "ob_tv"
 * "launcher_Darts"
 *
 * Hash: 0x6E91B04E08773030 | Since: 323
 * @deprecated Use brain.reactivateNamedObjectsWaitingTillOutOfRange(scriptName) instead
 */
export declare function reactivateNamedObjectBrainsWaitingTillOutOfRange(scriptName: string): void;
/**
 * ease - smooth transition between the camera's positions
 * easeTime - Time in milliseconds for the transition to happen
 *
 * If you have created a script (rendering) camera, and want to go back to the
 * character (gameplay) camera, call this native with render set to 0.
 * Setting ease to 1 will smooth the transition.
 *
 * Hash: 0x07E5B515DB0636FC | Since: 323
 * @deprecated Use cam.renderScripts(render, ease, easeTime) instead
 */
export declare function renderScriptCams(render: boolean, ease: boolean, easeTime: number): void;
/**
 * This native makes the gameplay camera zoom into first person/third person with a special effect.
 *
 * Hash: 0xC819F3CBB62BF692 | Since: 323
 * @deprecated Use cam.stopRenderingScriptsUsingCatchUp(render) instead
 */
export declare function stopRenderingScriptCamsUsingCatchUp(render: boolean): void;
/**
 * "DEFAULT_SCRIPTED_CAMERA"
 * "DEFAULT_ANIMATED_CAMERA"
 * "DEFAULT_SPLINE_CAMERA"
 * "DEFAULT_SCRIPTED_FLY_CAMERA"
 * "TIMED_SPLINE_CAMERA"
 *
 * Hash: 0xC3981DCE61D9E13F | Since: 323
 * @deprecated Use cam.create(camName) instead
 */
export declare function createCam(camName: string): number;
/**
 * camName is always set to "DEFAULT_SCRIPTED_CAMERA" in Rockstar's scripts.
 * ------------
 * Camera names found in the b617d scripts:
 * "DEFAULT_ANIMATED_CAMERA"
 * "DEFAULT_SCRIPTED_CAMERA"
 * "DEFAULT_SCRIPTED_FLY_CAMERA"
 * "DEFAULT_SPLINE_CAMERA"
 * ------------
 * Side Note: It seems p8 is basically to represent what would be the bool p1 within CREATE_CAM native. As well as the p9 since it's always 2 in scripts seems to represent what would be the last param within SET_CAM_ROT native which normally would be 2.
 *
 * Hash: 0xB51194800B257161 | Since: 323
 * @deprecated Use cam.createWithParams(camName, pos, rot, fov) instead
 */
export declare function createCamWithParams(camName: string, pos: Vector3, rot: Vector3, fov: number): number;
/**
 * No comment provided
 *
 * Hash: 0x5E3CF89C6BCCA67D | Since: 323
 * @deprecated Use cam.createera(camHash) instead
 */
export declare function createCamera(camHash: number | string): number;
/**
 * p9 uses 2 by default
 *
 * Hash: 0x6ABFA3E16460F22D | Since: 323
 * @deprecated Use cam.createeraWithParams(camHash, pos, rot, fov) instead
 */
export declare function createCameraWithParams(camHash: number | string, pos: Vector3, rot: Vector3, fov: number): number;
/**
 * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
 *
 * Hash: 0x865908C81A2C22E9 | Since: 323
 * @deprecated Use cam.destroy(cam1, bScriptHostCam) instead
 */
export declare function destroyCam(cam1: number | Camera, bScriptHostCam: boolean): void;
/**
 * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
 *
 * Hash: 0x8E5FB15663F79120 | Since: 323
 * @deprecated Use cam.destroyAlls(bScriptHostCam) instead
 */
export declare function destroyAllCams(bScriptHostCam: boolean): void;
/**
 * Returns whether or not the passed camera handle exists.
 *
 * Hash: 0xA7A932170592B50E | Since: 323
 * @deprecated Use cam.doesExist(cam1) instead
 */
export declare function doesCamExist(cam1: number | Camera): boolean;
/**
 * Set camera as active/inactive.
 *
 * Hash: 0x026FB97D0A425F84 | Since: 323
 * @deprecated Use cam.setActive(cam1, active) instead
 */
export declare function setCamActive(cam1: number | Camera, active: boolean): void;
/**
 * Returns whether or not the passed camera handle is active.
 *
 * Hash: 0xDFB2B516207D3534 | Since: 323
 * @deprecated Use cam.isActive(cam1) instead
 */
export declare function isCamActive(cam1: number | Camera): boolean;
/**
 * No comment provided
 *
 * Hash: 0x02EC0AF5C5A49B7A | Since: 323
 * @deprecated Use cam.isRendering(cam1) instead
 */
export declare function isCamRendering(cam1: number | Camera): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5234F9F10919EABA | Since: 323
 * @deprecated Use cam.getRendering() instead
 */
export declare function getRenderingCam(): number;
/**
 * No comment provided
 *
 * Hash: 0xBAC038F7459AE5AE | Since: 323
 * @deprecated Use cam.getCoord(cam1) instead
 */
export declare function getCamCoord(cam1: number | Camera): Vector3;
/**
 * The last parameter, as in other "ROT" methods, is usually 2.
 *
 * Hash: 0x7D304C1C955E3E12 | Since: 323
 * @deprecated Use cam.getRot(cam1, rotationOrder) instead
 */
export declare function getCamRot(cam1: number | Camera, rotationOrder: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xC3330A45CCCDB26A | Since: 323
 * @deprecated Use cam.getFov(cam1) instead
 */
export declare function getCamFov(cam1: number | Camera): number;
/**
 * No comment provided
 *
 * Hash: 0xC520A34DAFBF24B1 | Since: 323
 * @deprecated Use cam.getNearClip(cam1) instead
 */
export declare function getCamNearClip(cam1: number | Camera): number;
/**
 * No comment provided
 *
 * Hash: 0xB60A9CFEB21CA6AA | Since: 323
 * @deprecated Use cam.getFarClip(cam1) instead
 */
export declare function getCamFarClip(cam1: number | Camera): number;
/**
 * No comment provided
 *
 * Hash: 0xC2612D223D915A1C | Since: 2699
 * @deprecated Use cam.getNearDof(cam1) instead
 */
export declare function getCamNearDof(cam1: number | Camera): number;
/**
 * No comment provided
 *
 * Hash: 0x255F8DAFD540D397 | Since: 323
 * @deprecated Use cam.getFarDof(cam1) instead
 */
export declare function getCamFarDof(cam1: number | Camera): number;
/**
 * No comment provided
 *
 * Hash: 0x06D153C0B99B6128 | Since: 2699
 * @deprecated Use cam.getDofStrength(cam1) instead
 */
export declare function getCamDofStrength(cam1: number | Camera): number;
/**
 * No comment provided
 *
 * Hash: 0xBFD8727AEA3CCEBA | Since: 323
 * @deprecated Use cam.setParams(cam1, pos, rot, fieldOfView) instead
 */
export declare function setCamParams(cam1: number | Camera, pos: Vector3, rot: Vector3, fieldOfView: number): void;
/**
 * Sets the position of the cam.
 *
 * Hash: 0x4D41783FB745E42E | Since: 323
 * @deprecated Use cam.setCoord(cam1, pos) instead
 */
export declare function setCamCoord(cam1: number | Camera, pos: Vector3): void;
/**
 * Sets the rotation of the cam.
 * Last parameter unknown.
 *
 * Last parameter seems to always be set to 2.
 *
 * Hash: 0x85973643155D0B07 | Since: 323
 * @deprecated Use cam.setRot(cam1, rot, rotationOrder) instead
 */
export declare function setCamRot(cam1: number | Camera, rot: Vector3, rotationOrder: number): void;
/**
 * Sets the field of view of the cam.
 * ---------------------------------------------
 * Min: 1.0f
 * Max: 130.0f
 *
 * Hash: 0xB13C14F66A00D047 | Since: 323
 * @deprecated Use cam.setFov(cam1, fieldOfView) instead
 */
export declare function setCamFov(cam1: number | Camera, fieldOfView: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC7848EFCCC545182 | Since: 323
 * @deprecated Use cam.setNearClip(cam1, nearClip) instead
 */
export declare function setCamNearClip(cam1: number | Camera, nearClip: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAE306F2A904BF86E | Since: 323
 * @deprecated Use cam.setFarClip(cam1, farClip) instead
 */
export declare function setCamFarClip(cam1: number | Camera, farClip: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAABD62873FFB1A33 | Since: 2189
 * @deprecated Use cam.forceFarClip(cam1) instead
 */
export declare function forceCamFarClip(cam1: number | Camera): void;
/**
 * No comment provided
 *
 * Hash: 0x6F0F77FBA9A8F2E6 | Since: 323
 * @deprecated Use cam.setMotionBlurStrength(cam1, strength) instead
 */
export declare function setCamMotionBlurStrength(cam1: number | Camera, strength: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3FA4BF0A7AB7DE2C | Since: 323
 * @deprecated Use cam.setNearDof(cam1, nearDOF) instead
 */
export declare function setCamNearDof(cam1: number | Camera, nearDOF: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEDD91296CD01AEE0 | Since: 323
 * @deprecated Use cam.setFarDof(cam1, farDOF) instead
 */
export declare function setCamFarDof(cam1: number | Camera, farDOF: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5EE29B4D7D5DF897 | Since: 323
 * @deprecated Use cam.setDofStrength(cam1, dofStrength) instead
 */
export declare function setCamDofStrength(cam1: number | Camera, dofStrength: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3CF48F6F96E749DC | Since: 323
 * @deprecated Use cam.setDofPlanes(cam1) instead
 */
export declare function setCamDofPlanes(cam1: number | Camera): void;
/**
 * No comment provided
 *
 * Hash: 0x16A96863A17552BB | Since: 323
 * @deprecated Use cam.setUseShallowDofMode(cam1, toggle) instead
 */
export declare function setCamUseShallowDofMode(cam1: number | Camera, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA13B0222F3D94A94 | Since: 323
 * @deprecated Use cam.setUseHiDof() instead
 */
export declare function setUseHiDof(): void;
/**
 * Only used in R* Script fm_mission_controller_2020
 *
 * Hash: 0x731A880555DA3647 | Since: 2699
 * @deprecated Use cam.setUseHiDofOnSyncedSceneThisUpdate() instead
 */
export declare function setUseHiDofOnSyncedSceneThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0xF55E4046F6F831DC | Since: 323
 * @deprecated Use cam.setDofOverriddenFocusDistance(camera) instead
 */
export declare function setCamDofOverriddenFocusDistance(camera: number | Camera): void;
/**
 * No comment provided
 *
 * Hash: 0xE111A7C0D200CBC5 | Since: 323
 * @deprecated Use cam.setDofOverriddenFocusDistanceBlendLevel() instead
 */
export declare function setCamDofOverriddenFocusDistanceBlendLevel(): void;
/**
 * This native has its name defined inside its codE
 *
 *
 * Hash: 0x7DD234D6F3914C5B | Since: 323
 * @deprecated Use cam.setDofFnumberOfLens(camera) instead
 */
export declare function setCamDofFnumberOfLens(camera: number | Camera): void;
/**
 * Native name labeled within its code
 *
 * Hash: 0x47B595D60664CFFA | Since: 1011
 * @deprecated Use cam.setDofFocalLengthMultiplier(camera, multiplier) instead
 */
export declare function setCamDofFocalLengthMultiplier(camera: number | Camera, multiplier: number): void;
/**
 * This native has a name defined inside its code
 *
 * Hash: 0xC669EEA5D031B7DE | Since: 323
 * @deprecated Use cam.setDofFocusDistanceBias(camera) instead
 */
export declare function setCamDofFocusDistanceBias(camera: number | Camera): void;
/**
 * This native has a name defined inside its code
 *
 * Hash: 0xC3654A441402562D | Since: 323
 * @deprecated Use cam.setDofMaxNearInFocusDistance(camera) instead
 */
export declare function setCamDofMaxNearInFocusDistance(camera: number | Camera): void;
/**
 * This native has a name defined inside its code
 *
 * Hash: 0x2C654B4943BDDF7C | Since: 323
 * @deprecated Use cam.setDofMaxNearInFocusDistanceBlendLevel(camera) instead
 */
export declare function setCamDofMaxNearInFocusDistanceBlendLevel(camera: number | Camera): void;
/**
 * This native has a name defined inside its code
 *
 * Hash: 0x7CF3AF51DCFE4108 | Since: 2944
 * @deprecated Use cam.setDofShouldKeepLookAtTargetInFocus(camera, state) instead
 */
export declare function setCamDofShouldKeepLookAtTargetInFocus(camera: number | Camera, state: boolean): void;
/**
 * Last param determines if its relative to the Entity
 *
 * Hash: 0xFEDB7D269E8C60E3 | Since: 323
 * @deprecated Use cam.attachToEntity(cam1, entity, xOffset, yOffset, zOffset, isRelative) instead
 */
export declare function attachCamToEntity(cam1: number | Camera, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, isRelative: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x61A3DBA14AB7F411 | Since: 323
 * @deprecated Use cam.attachToPedBone(cam1, ped, boneIndex, pos, heading) instead
 */
export declare function attachCamToPedBone(cam1: number | Camera, ped: number | Ped, boneIndex: number, pos: Vector3, heading: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x149916F50C34A40D | Since: 1180
 * @deprecated Use cam.hardAttachToPedBone(cam1, ped, boneIndex) instead
 */
export declare function hardAttachCamToPedBone(cam1: number | Camera, ped: number | Ped, boneIndex: number): void;
/**
 * Example from am_mp_drone script:
 *
 * `CAM::HARD_ATTACH_CAM_TO_ENTITY(Local_190.f_169, NETWORK::NET_TO_OBJ(Local_190.f_159), 0f, 0f, 180f, Var0, 1);`
 *
 * Hash: 0x202A5ED9CE01D6E7 | Since: 2189
 * @deprecated Use cam.hardAttachToEntity(cam1, entity, rot, xOffset, yOffset, zOffset, isRelative) instead
 */
export declare function hardAttachCamToEntity(cam1: number | Camera, entity: number | Entity, rot: Vector3, xOffset: number, yOffset: number, zOffset: number, isRelative: boolean): void;
/**
 * This native works with vehicles only. Bone indexes are usually given by this native GET_ENTITY_BONE_INDEX_BY_NAME.
 *
 * Hash: 0x8DB3F12A02CAEF72 | Since: 1290
 * @deprecated Use cam.attachToVehicleBone(cam1, vehicle, boneIndex, relativeRotation, rot, offsetX, offsetY, offsetZ, fixedDirection) instead
 */
export declare function attachCamToVehicleBone(cam1: number | Camera, vehicle: number | Vehicle, boneIndex: number, relativeRotation: boolean, rot: Vector3, offsetX: number, offsetY: number, offsetZ: number, fixedDirection: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA2FABBE87F4BAD82 | Since: 323
 * @deprecated Use cam.detach(cam1) instead
 */
export declare function detachCam(cam1: number | Camera): void;
/**
 * The native seems to only be called once.
 *
 * The native is used as so,
 * `CAM::SET_CAM_INHERIT_ROLL_VEHICLE(l_544, getElem(2, &l_525, 4));`
 * In the exile1 script.
 *
 * Hash: 0x45F1DE9C34B93AE6 | Since: 323
 * @deprecated Use cam.setInheritRollVehicle(cam1) instead
 */
export declare function setCamInheritRollVehicle(cam1: number | Camera): void;
/**
 * No comment provided
 *
 * Hash: 0xF75497BB865F0803 | Since: 323
 * @deprecated Use cam.pointAtCoord(cam1, pos) instead
 */
export declare function pointCamAtCoord(cam1: number | Camera, pos: Vector3): void;
/**
 * p5 always seems to be 1 i.e TRUE
 *
 * Hash: 0x5640BFF86B16E8DC | Since: 323
 * @deprecated Use cam.pointAtEntity(cam1, entity) instead
 */
export declare function pointCamAtEntity(cam1: number | Camera, entity: number | Entity): void;
/**
 * Parameters p0-p5 seems correct. The bool p6 is unknown, but through every X360 script it's always 1. Please correct p0-p5 if any prove to be wrong.
 *
 * Hash: 0x68B2B5F33BA63C41 | Since: 323
 * @deprecated Use cam.pointAtPedBone(cam1, ped, boneIndex, pos) instead
 */
export declare function pointCamAtPedBone(cam1: number | Camera, ped: number | Ped, boneIndex: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xF33AB75780BA57DE | Since: 323
 * @deprecated Use cam.stopPointing(cam1) instead
 */
export declare function stopCamPointing(cam1: number | Camera): void;
/**
 * Allows you to aim and shoot at the direction the camera is facing.
 *
 * Hash: 0x8C1DC7770C51DC8D | Since: 323
 * @deprecated Use cam.setAffectsAiming(cam1, toggle) instead
 */
export declare function setCamAffectsAiming(cam1: number | Camera, toggle: boolean): void;
/**
 * Rotates the radar to match the camera's Z rotation
 *
 * Hash: 0x661B5C8654ADD825 | Since: 323
 * @deprecated Use cam.setControlsMiniMapHeading(cam1, toggle) instead
 */
export declare function setCamControlsMiniMapHeading(cam1: number | Camera, toggle: boolean): void;
/**
 * When set to true shadows appear more smooth but less detailed.
 * Set to false by default.
 *
 * Hash: 0xA2767257A320FC82 | Since: 323
 * @deprecated Use cam.setIsInsideVehicle(cam1, toggle) instead
 */
export declare function setCamIsInsideVehicle(cam1: number | Camera, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x271017B9BA825366 | Since: 323
 * @deprecated Use cam.allowMotionBlurDecay() instead
 */
export declare function allowMotionBlurDecay(): void;
/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 *
 * Hash: 0x1B93E0107865DD40 | Since: 323
 * @deprecated Use cam.setDebugName(camera, name) instead
 */
export declare function setCamDebugName(camera: number | Camera, name: string): void;
/**
 * No comment provided
 *
 * Hash: 0x77C3CEC46BE286F6 | Since: 2372
 * @deprecated Use cam.getDebug() instead
 */
export declare function getDebugCam(): number;
/**
 * I filled p1-p6 (the floats) as they are as other natives with 6 floats in a row are similar and I see no other method. So if a test from anyone proves them wrong please correct.
 *
 * p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one
 *
 * p8 big values ~100 will slow down the camera movement before reaching this node
 *
 * p9 != 0 seems to override the rotation/pitch (bool?)
 *
 * Hash: 0x8609C75EC438FB3B | Since: 323
 * @deprecated Use cam.addSplineNode(camera, pos, rot, length, smoothingStyle, rotationOrder) instead
 */
export declare function addCamSplineNode(camera: number | Camera, pos: Vector3, rot: Vector3, length: number, smoothingStyle: number, rotationOrder: number): void;
/**
 * p0 is the spline camera to which the node is being added.
 * p1 is the camera used to create the node.
 * p3 is always 3 in scripts. It might be smoothing style or rotation order.
 *
 * Hash: 0x0A9F2A468B328E74 | Since: 323
 * @deprecated Use cam.addSplineNodeUsingCameraFrame(cam1, cam2, length) instead
 */
export declare function addCamSplineNodeUsingCameraFrame(cam1: number | Camera, cam2: number | Camera, length: number): void;
/**
 * p0 is the spline camera to which the node is being added.
 * p1 is the camera used to create the node.
 * p3 is always 3 in scripts. It might be smoothing style or rotation order.
 *
 * Hash: 0x0FB82563989CF4FB | Since: 323
 * @deprecated Use cam.addSplineNodeUsingCamera(cam1, cam2, length) instead
 */
export declare function addCamSplineNodeUsingCamera(cam1: number | Camera, cam2: number | Camera, length: number): void;
/**
 * p2 is always 2 in scripts. It might be smoothing style or rotation order.
 *
 * Hash: 0x609278246A29CA34 | Since: 323
 * @deprecated Use cam.addSplineNodeUsingGameplayFrame(cam1, length) instead
 */
export declare function addCamSplineNodeUsingGameplayFrame(cam1: number | Camera, length: number): void;
/**
 * No comment provided
 *
 * Hash: 0x242B5874F0A4E052 | Since: 323
 * @deprecated Use cam.setSplinePhase(cam1) instead
 */
export declare function setCamSplinePhase(cam1: number | Camera): void;
/**
 * Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.
 *
 * (returns 1.0f when no nodes has been added, reached end of non existing spline)
 *
 * Hash: 0xB5349E36C546509A | Since: 323
 * @deprecated Use cam.getSplinePhase(cam1) instead
 */
export declare function getCamSplinePhase(cam1: number | Camera): number;
/**
 * I'm pretty sure the parameter is the camera as usual, but I am not certain so I'm going to leave it as is.
 *
 * Hash: 0xD9D0E694C8282C96 | Since: 323
 * @deprecated Use cam.getSplineNodePhase(cam1) instead
 */
export declare function getCamSplineNodePhase(cam1: number | Camera): number;
/**
 * I named p1 as timeDuration as it is obvious. I'm assuming tho it is ran in ms(Milliseconds) as usual.
 *
 * Hash: 0x1381539FEE034CDA | Since: 323
 * @deprecated Use cam.setSplineDuration(cam1, timeDuration) instead
 */
export declare function setCamSplineDuration(cam1: number | Camera, timeDuration: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD1B0F412F109EA5D | Since: 323
 * @deprecated Use cam.setSplineSmoothingStyle(cam1, smoothingStyle) instead
 */
export declare function setCamSplineSmoothingStyle(cam1: number | Camera, smoothingStyle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB22B17DF858716A6 | Since: 323
 * @deprecated Use cam.getSplineNodeIndex(cam1) instead
 */
export declare function getCamSplineNodeIndex(cam1: number | Camera): number;
/**
 * No comment provided
 *
 * Hash: 0x83B8201ED82A9A2D | Since: 323
 * @deprecated Use cam.setSplineNodeEase(cam1, easingFunction) instead
 */
export declare function setCamSplineNodeEase(cam1: number | Camera, easingFunction: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA6385DEB180F319F | Since: 323
 * @deprecated Use cam.setSplineNodeVelocityScale(cam1, scale) instead
 */
export declare function setCamSplineNodeVelocityScale(cam1: number | Camera, scale: number): void;
/**
 * No comment provided
 *
 * Hash: 0x40B62FA033EB0346 | Since: 323
 * @deprecated Use cam.overrideSplineVelocity(cam1) instead
 */
export declare function overrideCamSplineVelocity(cam1: number | Camera): void;
/**
 * Max value for p1 is 15.
 *
 * Hash: 0x7DCF7C708D292D55 | Since: 323
 * @deprecated Use cam.overrideSplineMotionBlur(cam1) instead
 */
export declare function overrideCamSplineMotionBlur(cam1: number | Camera): void;
/**
 * No comment provided
 *
 * Hash: 0x7BF1A54AE67AC070 | Since: 323
 * @deprecated Use cam.setSplineNodeExtraFlags(cam1, flags) instead
 */
export declare function setCamSplineNodeExtraFlags(cam1: number | Camera, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0290F35C0AD97864 | Since: 323
 * @deprecated Use cam.isSplinePaused(cam1) instead
 */
export declare function isCamSplinePaused(cam1: number | Camera): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDDA77EE33C005AAF | Since: 3258
 * @deprecated Use cam.interpolateWithParams(camera, camPosX, camPosY, camPosZ, camRotX, camRotY, camRotZ, fov, duration, posCurveType, rotCurveType, rotOrder, fovCurveType) instead
 */
export declare function interpolateCamWithParams(camera: number | Camera, camPosX: number, camPosY: number, camPosZ: number, camRotX: number, camRotY: number, camRotZ: number, fov: number, duration: number, posCurveType: number, rotCurveType: number, rotOrder: number, fovCurveType: number): void;
/**
 * No comment provided
 *
 * Hash: 0x34CFC4C2A38E83E3 | Since: 3258
 * @deprecated Use cam.activateWithInterpAndFovCurve(camTo, camFrom, duration, easeLocation, easeRotation, easeFov) instead
 */
export declare function activateCamWithInterpAndFovCurve(camTo: number | Camera, camFrom: number | Camera, duration: number, easeLocation: number, easeRotation: number, easeFov: number): void;
/**
 * Previous declaration void SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, BOOL easeLocation, BOOL easeRotation) is completely wrong. The last two params are integers not BOOLs...
 *
 *
 * Hash: 0x9FBDA379383A52A4 | Since: 323
 * @deprecated Use cam.setActiveWithInterp(camTo, camFrom, duration, easeLocation, easeRotation) instead
 */
export declare function setCamActiveWithInterp(camTo: number | Camera, camFrom: number | Camera, duration: number, easeLocation: number, easeRotation: number): void;
/**
 * No comment provided
 *
 * Hash: 0x036F97C908C2B52C | Since: 323
 * @deprecated Use cam.isInterpolating(cam1) instead
 */
export declare function isCamInterpolating(cam1: number | Camera): boolean;
/**
 * Possible shake types (updated b617d):
 *
 * DEATH_FAIL_IN_EFFECT_SHAKE
 * DRUNK_SHAKE
 * FAMILY5_DRUG_TRIP_SHAKE
 * HAND_SHAKE
 * JOLT_SHAKE
 * LARGE_EXPLOSION_SHAKE
 * MEDIUM_EXPLOSION_SHAKE
 * SMALL_EXPLOSION_SHAKE
 * ROAD_VIBRATION_SHAKE
 * SKY_DIVING_SHAKE
 * VIBRATE_SHAKE
 *
 * Full list of cam shake types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/camShakeTypesCompact.json
 *
 * Hash: 0x6A25241C340D3822 | Since: 323
 * @deprecated Use cam.shake(cam1, _type, amplitude) instead
 */
export declare function shakeCam(cam1: number | Camera, _type: string, amplitude: number): void;
/**
 * Example from michael2 script.
 *
 * `CAM::ANIMATED_SHAKE_CAM(l_5069, "shake_cam_all@", "light", "", 1f);`
 *
 * Hash: 0xA2746EEAE3E577CD | Since: 323
 * @deprecated Use cam.animatedShake(cam1, amplitude) instead
 */
export declare function animatedShakeCam(cam1: number | Camera, amplitude: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6B24BFE83A2BE47B | Since: 323
 * @deprecated Use cam.isShaking(cam1) instead
 */
export declare function isCamShaking(cam1: number | Camera): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD93DB43B82BC0D00 | Since: 323
 * @deprecated Use cam.setShakeAmplitude(cam1, amplitude) instead
 */
export declare function setCamShakeAmplitude(cam1: number | Camera, amplitude: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBDECF64367884AC3 | Since: 323
 * @deprecated Use cam.stopShaking(cam1) instead
 */
export declare function stopCamShaking(cam1: number | Camera): void;
/**
 * `CAM::SHAKE_SCRIPT_GLOBAL("HAND_SHAKE", 0.2);`
 *
 * Full list of cam shake types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/camShakeTypesCompact.json
 *
 * Hash: 0xF4C8CF9E353AFECA | Since: 323
 * @deprecated Use cam.shakeScriptGlobal() instead
 */
export declare function shakeScriptGlobal(): void;
/**
 * `CAM::ANIMATED_SHAKE_SCRIPT_GLOBAL("SHAKE_CAM_medium", "medium", "", 0.5f);`
 *
 * Full list of cam shake types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/camShakeTypesCompact.json
 *
 * Hash: 0xC2EAE3FB8CDBED31 | Since: 323
 * @deprecated Use cam.animatedShakeScriptGlobal() instead
 */
export declare function animatedShakeScriptGlobal(): void;
/**
 * In drunk_controller.c4, sub_309
 * `if (CAM::IS_SCRIPT_GLOBAL_SHAKING()) {`
 * `CAM::STOP_SCRIPT_GLOBAL_SHAKING(0);`
 * }
 *
 * Hash: 0xC912AF078AF19212 | Since: 323
 * @deprecated Use cam.isScriptGlobalShaking() instead
 */
export declare function isScriptGlobalShaking(): boolean;
/**
 * In drunk_controller.c4, sub_309
 * `if (CAM::IS_SCRIPT_GLOBAL_SHAKING()) {`
 * `CAM::STOP_SCRIPT_GLOBAL_SHAKING(0);`
 * }
 *
 * Hash: 0x1C9D7949FA533490 | Since: 323
 * @deprecated Use cam.stopScriptGlobalShaking() instead
 */
export declare function stopScriptGlobalShaking(): void;
/**
 * p1: 0..16
 *
 * Hash: 0x5D96CFB59DA076A0 | Since: 2060
 * @deprecated Use cam.triggerVehiclePartBrokeneraShake(vehicle) instead
 */
export declare function triggerVehiclePartBrokenCameraShake(vehicle: number | Vehicle): void;
/**
 * Atleast one time in a script for the zRot Rockstar uses GET_ENTITY_HEADING to help fill the parameter.
 *
 * p9 is unknown at this time.
 * p10 throughout all the X360 Scripts is always 2.
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x9A2D0FB2E7852392 | Since: 323
 * @deprecated Use cam.playAnim(cam1, animName, animDictionary, pos, rot) instead
 */
export declare function playCamAnim(cam1: number | Camera, animName: string, animDictionary: string, pos: Vector3, rot: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC90621D8A0CEECF2 | Since: 323
 * @deprecated Use cam.isPlayingAnim(cam1, animName, animDictionary) instead
 */
export declare function isCamPlayingAnim(cam1: number | Camera, animName: string, animDictionary: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4145A4C44FF3B5A6 | Since: 323
 * @deprecated Use cam.setAnimCurrentPhase(cam1, phase) instead
 */
export declare function setCamAnimCurrentPhase(cam1: number | Camera, phase: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA10B2DB49E92A6B0 | Since: 323
 * @deprecated Use cam.getAnimCurrentPhase(cam1) instead
 */
export declare function getCamAnimCurrentPhase(cam1: number | Camera): number;
/**
 * Examples:
 *
 * `CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_2734, NETWORK::NETWORK_GET_LOCAL_SCENE_FROM_NETWORK_ID(l_2739), "PLAYER_EXIT_L_CAM", "mp_doorbell");`
 *
 * `CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_F0D[7\/\*1\*\/], l_F4D[15\/\*1\*\/], "ah3b_attackheli_cam2", "missheistfbi3b_helicrash");`
 *
 * Hash: 0xE32EFE9AB4A9AA0C | Since: 323
 * @deprecated Use cam.playSynchronizedAnim(animName, animDictionary) instead
 */
export declare function playSynchronizedCamAnim(animName: string, animDictionary: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x503F5920162365B2 | Since: 323
 * @deprecated Use cam.setFlyHorizontalResponse(cam1) instead
 */
export declare function setFlyCamHorizontalResponse(cam1: number | Camera): void;
/**
 * No comment provided
 *
 * Hash: 0xE827B9382CFB41BA | Since: 791
 * @deprecated Use cam.setFlyVerticalResponse(cam1) instead
 */
export declare function setFlyCamVerticalResponse(cam1: number | Camera): void;
/**
 * No comment provided
 *
 * Hash: 0xF9D02130ECDD1D77 | Since: 323
 * @deprecated Use cam.setFlyMaxHeight(cam1, height) instead
 */
export declare function setFlyCamMaxHeight(cam1: number | Camera, height: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC91C6C55199308CA | Since: 323
 * @deprecated Use cam.setFlyCoordAndConstrain(cam1, pos) instead
 */
export declare function setFlyCamCoordAndConstrain(cam1: number | Camera, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xC8B5C4A79CC18B94 | Since: 323
 * @deprecated Use cam.setFlyVerticalControlsThisUpdate(cam1) instead
 */
export declare function setFlyCamVerticalControlsThisUpdate(cam1: number | Camera): void;
/**
 * No comment provided
 *
 * Hash: 0x5C48A1D6E3B33179 | Since: 323
 * @deprecated Use cam.wasFlyConstrainedOnPreviousUdpate(cam1) instead
 */
export declare function wasFlyCamConstrainedOnPreviousUdpate(cam1: number | Camera): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB16FCE9DDC7BA182 | Since: 323
 * @deprecated Use cam.isScreenFadedOut() instead
 */
export declare function isScreenFadedOut(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5A859503B0C08678 | Since: 323
 * @deprecated Use cam.isScreenFadedIn() instead
 */
export declare function isScreenFadedIn(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x797AC7CB535BA28F | Since: 323
 * @deprecated Use cam.isScreenFadingOut() instead
 */
export declare function isScreenFadingOut(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5C544BC6C57AC575 | Since: 323
 * @deprecated Use cam.isScreenFadingIn() instead
 */
export declare function isScreenFadingIn(): boolean;
/**
 * Fades the screen in.
 *
 * duration: The time the fade should take, in milliseconds.
 *
 * Hash: 0xD4E8E24955024033 | Since: 323
 * @deprecated Use cam.doScreenFadeIn(duration) instead
 */
export declare function doScreenFadeIn(duration: number): void;
/**
 * Fades the screen out.
 *
 * duration: The time the fade should take, in milliseconds.
 *
 * Hash: 0x891B5B39AC6302AF | Since: 323
 * @deprecated Use cam.doScreenFadeOut(duration) instead
 */
export declare function doScreenFadeOut(duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDCD4EA924F42D01A | Since: 323
 * @deprecated Use cam.setWidescreenBorders() instead
 */
export declare function setWidescreenBorders(): void;
/**
 * No comment provided
 *
 * Hash: 0x4879E4FE39074CDF | Since: 372
 * @deprecated Use cam.areWidescreenBordersActive() instead
 */
export declare function areWidescreenBordersActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x14D6F5678D8F1B37 | Since: 323
 * @deprecated Use cam.getGameplayCoord() instead
 */
export declare function getGameplayCamCoord(): Vector3;
/**
 * p0 dosen't seem to change much, I tried it with 0, 1, 2:
 * 0-Pitch(X): -70.000092
 * 0-Roll(Y): -0.000001
 * 0-Yaw(Z): -43.886459
 * 1-Pitch(X): -70.000092
 * 1-Roll(Y): -0.000001
 * 1-Yaw(Z): -43.886463
 * 2-Pitch(X): -70.000092
 * 2-Roll(Y): -0.000002
 * 2-Yaw(Z): -43.886467
 *
 * Hash: 0x837765A25378F0BB | Since: 323
 * @deprecated Use cam.getGameplayRot(rotationOrder) instead
 */
export declare function getGameplayCamRot(rotationOrder: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x65019750A0324133 | Since: 323
 * @deprecated Use cam.getGameplayFov() instead
 */
export declare function getGameplayCamFov(): number;
/**
 * some camera effect that is used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled.
 *
 * Hash: 0x487A82C650EB7799 | Since: 323
 * @deprecated Use cam.setGameplayMotionBlurScalingThisUpdate() instead
 */
export declare function setGameplayCamMotionBlurScalingThisUpdate(): void;
/**
 * some camera effect that is (also) used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled.
 *
 * Hash: 0x0225778816FDC28C | Since: 323
 * @deprecated Use cam.setGameplayMaxMotionBlurStrengthThisUpdate() instead
 */
export declare function setGameplayCamMaxMotionBlurStrengthThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x743607648ADD4587 | Since: 323
 * @deprecated Use cam.getGameplayRelativeHeading() instead
 */
export declare function getGameplayCamRelativeHeading(): number;
/**
 * Sets the camera position relative to heading in float from -360 to +360.
 *
 * Heading is alwyas 0 in aiming camera.
 *
 * Hash: 0xB4EC2312F4E5B1F1 | Since: 323
 * @deprecated Use cam.setGameplayRelativeHeading(heading) instead
 */
export declare function setGameplayCamRelativeHeading(heading: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3A6867B4845BEDA2 | Since: 323
 * @deprecated Use cam.getGameplayRelativePitch() instead
 */
export declare function getGameplayCamRelativePitch(): number;
/**
 * This native sets the camera's pitch (rotation on the x-axis).
 *
 * Hash: 0x6D0858B8EDFD2B7D | Since: 323
 * @deprecated Use cam.setGameplayRelativePitch(angle, scalingFactor) instead
 */
export declare function setGameplayCamRelativePitch(angle: number, scalingFactor: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7295C203DD659DFE | Since: 2699
 * @deprecated Use cam.resetGameplayFullAttachParentTransformTimer() instead
 */
export declare function resetGameplayCamFullAttachParentTransformTimer(): void;
/**
 * No comment provided
 *
 * Hash: 0x48608C3464F58AB4 | Since: 505
 * @deprecated Use cam.forceeraRelativeHeadingAndPitch(roll, pitch, yaw) instead
 */
export declare function forceCameraRelativeHeadingAndPitch(roll: number, pitch: number, yaw: number): void;
/**
 * No comment provided
 *
 * Hash: 0x28B022A17B068A3A | Since: 1734
 * @deprecated Use cam.forceBonneteraRelativeHeadingAndPitch() instead
 */
export declare function forceBonnetCameraRelativeHeadingAndPitch(): void;
/**
 * Does nothing
 *
 * Hash: 0x103991D4A307D472 | Since: 323
 * @deprecated Use cam.setFirstPersonShootereraHeading(yaw) instead
 */
export declare function setFirstPersonShooterCameraHeading(yaw: number): void;
/**
 * No comment provided
 *
 * Hash: 0x759E13EBC1C15C5A | Since: 323
 * @deprecated Use cam.setFirstPersonShootereraPitch(pitch) instead
 */
export declare function setFirstPersonShooterCameraPitch(pitch: number): void;
/**
 * No comment provided
 *
 * Hash: 0x469F2ECDEC046337 | Since: 323
 * @deprecated Use cam.setScriptederaIsFirstPersonThisFrame() instead
 */
export declare function setScriptedCameraIsFirstPersonThisFrame(): void;
/**
 * Possible shake types (updated b617d):
 *
 * DEATH_FAIL_IN_EFFECT_SHAKE
 * DRUNK_SHAKE
 * FAMILY5_DRUG_TRIP_SHAKE
 * HAND_SHAKE
 * JOLT_SHAKE
 * LARGE_EXPLOSION_SHAKE
 * MEDIUM_EXPLOSION_SHAKE
 * SMALL_EXPLOSION_SHAKE
 * ROAD_VIBRATION_SHAKE
 * SKY_DIVING_SHAKE
 * VIBRATE_SHAKE
 *
 * Full list of cam shake types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/camShakeTypesCompact.json
 *
 * Hash: 0xFD55E49555E017CF | Since: 323
 * @deprecated Use cam.shakeGameplay(shakeName, intensity) instead
 */
export declare function shakeGameplayCam(shakeName: string, intensity: number): void;
/**
 * No comment provided
 *
 * Hash: 0x016C090630DF1F89 | Since: 323
 * @deprecated Use cam.isGameplayShaking() instead
 */
export declare function isGameplayCamShaking(): boolean;
/**
 * Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake. Used in script "drunk_controller.ysc.c4" to simulate making the player drunk.
 *
 * Hash: 0xA87E00932DB4D85D | Since: 323
 * @deprecated Use cam.setGameplayShakeAmplitude(amplitude) instead
 */
export declare function setGameplayCamShakeAmplitude(amplitude: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0EF93E9F3D08C178 | Since: 323
 * @deprecated Use cam.stopGameplayShaking() instead
 */
export declare function stopGameplayCamShaking(): void;
/**
 * Forces gameplay cam to specified ped as if you were the ped or spectating it
 *
 * Hash: 0x8BBACBF51DA047A8 | Since: 323
 * @deprecated Use cam.setGameplayFollowPedThisUpdate(ped) instead
 */
export declare function setGameplayCamFollowPedThisUpdate(ped: number | Ped): void;
/**
 * Examples when this function will return 0 are:
 * - During busted screen.
 * - When player is coming out from a hospital.
 * - When player is coming out from a police station.
 * - When player is buying gun from AmmuNation.
 *
 * Hash: 0x39B5D1B10383F0C8 | Since: 323
 * @deprecated Use cam.isGameplayRendering() instead
 */
export declare function isGameplayCamRendering(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3044240D2E0FA842 | Since: 323
 * @deprecated Use cam.isInterpolatingFromScripts() instead
 */
export declare function isInterpolatingFromScriptCams(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x705A276EBFF3133D | Since: 323
 * @deprecated Use cam.isInterpolatingToScripts() instead
 */
export declare function isInterpolatingToScriptCams(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDB90C6CCA48940F1 | Since: 323
 * @deprecated Use cam.setGameplayAltitudeFovScalingState() instead
 */
export declare function setGameplayCamAltitudeFovScalingState(): void;
/**
 * Shows the crosshair even if it wouldn't show normally. Only works for one frame, so make sure to call it repeatedly.
 *
 * Hash: 0xEA7F0AD7E9BA676F | Since: 323
 * @deprecated Use cam.disableGameplayAltitudeFovScalingThisUpdate() instead
 */
export declare function disableGameplayCamAltitudeFovScalingThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x70FDA869F3317EA9 | Since: 323
 * @deprecated Use cam.isGameplayLookingBehind() instead
 */
export declare function isGameplayCamLookingBehind(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2AED6301F67007D5 | Since: 323
 * @deprecated Use cam.setGameplayIgnoreEntityCollisionThisUpdate(entity) instead
 */
export declare function setGameplayCamIgnoreEntityCollisionThisUpdate(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x49482F9FCD825AAA | Since: 323
 * @deprecated Use cam.disableCollisionForObject(entity) instead
 */
export declare function disableCamCollisionForObject(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xA7092AFE81944852 | Since: 2189
 * @deprecated Use cam.bypasseraCollisionBuoyancyTestThisUpdate() instead
 */
export declare function bypassCameraCollisionBuoyancyTestThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0xFD3151CD37EA2245 | Since: 323
 * @deprecated Use cam.setGameplayEntityToLimitFocusOverBoundingSphereThisUpdate(entity) instead
 */
export declare function setGameplayCamEntityToLimitFocusOverBoundingSphereThisUpdate(entity: number | Entity): void;
/**
 * Sets some flag on cinematic camera
 *
 * Hash: 0xB1381B97F70C7B30 | Since: 1180
 * @deprecated Use cam.disableFirstPersoneraWaterClippingTestThisUpdate() instead
 */
export declare function disableFirstPersonCameraWaterClippingTestThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0xDD79DF9F4D26E1C9 | Since: 323
 * @deprecated Use cam.setFollowIgnoreAttachParentMovementThisUpdate() instead
 */
export declare function setFollowCamIgnoreAttachParentMovementThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0xE33D59DA70B58FDF | Since: 323
 * @deprecated Use cam.isSphereVisible(pos, radius) instead
 */
export declare function isSphereVisible(pos: Vector3, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC6D3D26810C8E0F9 | Since: 323
 * @deprecated Use cam.isFollowPedActive() instead
 */
export declare function isFollowPedCamActive(): boolean;
/**
 * From the scripts:
 *
 * `CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_ATTACHED_TO_ROPE_CAMERA", 0);`
 * `CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_ON_EXILE1_LADDER_CAMERA", 1500);`
 * `CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 0);`
 * `CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 3000);`
 * `CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_FAMILY5_CAMERA", 0);`
 * `CAM::SET_FOLLOW_PED_CAM_THIS_UPDATE("FOLLOW_PED_SKY_DIVING_CAMERA", 0);`
 *
 * Hash: 0x44A113DD6FFC48D1 | Since: 323
 * @deprecated Use cam.setFollowPedThisUpdate(camName) instead
 */
export declare function setFollowPedCamThisUpdate(camName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x271401846BD26E92 | Since: 323
 * @deprecated Use cam.useScriptForAmbientPopulationOriginThisFrame() instead
 */
export declare function useScriptCamForAmbientPopulationOriginThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0xC8391C309684595A | Since: 323
 * @deprecated Use cam.setFollowPedLadderAlignThisUpdate() instead
 */
export declare function setFollowPedCamLadderAlignThisUpdate(): void;
/**
 * minimum: Degrees between -180f and 180f.
 * maximum: Degrees between -180f and 180f.
 *
 * Clamps the gameplay camera's current yaw.
 *
 * Eg. SET_THIRD_PERSON_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE(0.0f, 0.0f) will set the horizontal angle directly behind the player.
 *
 * Hash: 0x8F993D26E0CA5E8E | Since: 323
 * @deprecated Use cam.setThirdPersonRelativeHeadingLimitsThisUpdate(minimum, maximum) instead
 */
export declare function setThirdPersonCamRelativeHeadingLimitsThisUpdate(minimum: number, maximum: number): void;
/**
 * minimum: Degrees between -90f and 90f.
 * maximum: Degrees between -90f and 90f.
 *
 * Clamps the gameplay camera's current pitch.
 *
 * Eg. SET_THIRD_PERSON_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE(0.0f, 0.0f) will set the vertical angle directly behind the player.
 *
 * Hash: 0xA516C198B7DCA1E1 | Since: 323
 * @deprecated Use cam.setThirdPersonRelativePitchLimitsThisUpdate(minimum, maximum) instead
 */
export declare function setThirdPersonCamRelativePitchLimitsThisUpdate(minimum: number, maximum: number): void;
/**
 * Seems to animate the gameplay camera zoom.
 *
 * Eg. SET_THIRD_PERSON_CAM_ORBIT_DISTANCE_LIMITS_THIS_UPDATE(1f, 1000f);
 * will animate the camera zooming in from 1000 meters away.
 *
 * Game scripts use it like this:
 *
 * // Setting this to 1 prevents V key from changing zoom
 * `PLAYER::SET_PLAYER_FORCED_ZOOM(PLAYER::PLAYER_ID(), 1);`
 *
 * // These restrict how far you can move cam up/down left/right
 * `CAM::SET_THIRD_PERSON_CAM_RELATIVE_HEADING_LIMITS_THIS_UPDATE(-20f, 50f);`
 * `CAM::SET_THIRD_PERSON_CAM_RELATIVE_PITCH_LIMITS_THIS_UPDATE(-60f, 0f);`
 *
 * `CAM::SET_THIRD_PERSON_CAM_ORBIT_DISTANCE_LIMITS_THIS_UPDATE(1f, 1f);`
 *
 * Hash: 0xDF2E1F7742402E81 | Since: 323
 * @deprecated Use cam.setThirdPersonOrbitDistanceLimitsThisUpdate(distance) instead
 */
export declare function setThirdPersonCamOrbitDistanceLimitsThisUpdate(distance: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBC456FB703431785 | Since: 3095
 * @deprecated Use cam.getThirdPersonMinOrbitDistanceSpring() instead
 */
export declare function getThirdPersonCamMinOrbitDistanceSpring(): number;
/**
 * No comment provided
 *
 * Hash: 0xD4592A16D36673ED | Since: 3095
 * @deprecated Use cam.getThirdPersonMaxOrbitDistanceSpring() instead
 */
export declare function getThirdPersonCamMaxOrbitDistanceSpring(): number;
/**
 * Forces gameplay cam to specified vehicle as if you were in it
 *
 * Hash: 0xE9EA16D6E54CDCA4 | Since: 323
 * @deprecated Use cam.setInVehicleStateThisUpdate(p0) instead
 */
export declare function setInVehicleCamStateThisUpdate(p0: number | Vehicle): void;
/**
 * Disables first person camera for the current frame.
 *
 * Found in decompiled scripts:
 * `GRAPHICS::DRAW_DEBUG_TEXT_2D("Disabling First Person Cam", 0.5, 0.8, 0.0, 0, 0, 255, 255);`
 * `CAM::DISABLE_ON_FOOT_FIRST_PERSON_VIEW_THIS_UPDATE();`
 *
 * Hash: 0xDE2EF5DA284CC8DF | Since: 323
 * @deprecated Use cam.disableOnFootFirstPersonViewThisUpdate() instead
 */
export declare function disableOnFootFirstPersonViewThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x59424BD75174C9B1 | Since: 323
 * @deprecated Use cam.disableFirstPersonFlashEffectThisUpdate() instead
 */
export declare function disableFirstPersonFlashEffectThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x9F97DA93681F87EA | Since: 1734
 * @deprecated Use cam.blockFirstPersonOrientationResetThisUpdate() instead
 */
export declare function blockFirstPersonOrientationResetThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x33E6C8EFD0CD93E9 | Since: 323
 * @deprecated Use cam.getFollowPedZoomLevel() instead
 */
export declare function getFollowPedCamZoomLevel(): number;
/**
 * See viewmode enum in CAM.GET_FOLLOW_VEHICLE_CAM_VIEW_MODE for return value
 *
 * Hash: 0x8D4D46230B2C353A | Since: 323
 * @deprecated Use cam.getFollowPedViewMode() instead
 */
export declare function getFollowPedCamViewMode(): number;
/**
 * Sets the type of Player camera:
 *
 * 0 - Third Person Close
 * 1 - Third Person Mid
 * 2 - Third Person Far
 * 4 - First Person
 *
 * Hash: 0x5A4F9EDF1673F704 | Since: 323
 * @deprecated Use cam.setFollowPedViewMode(viewMode) instead
 */
export declare function setFollowPedCamViewMode(viewMode: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCBBDE6D335D6D496 | Since: 323
 * @deprecated Use cam.isFollowVehicleActive() instead
 */
export declare function isFollowVehicleCamActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x91EF6EE6419E5B97 | Since: 323
 * @deprecated Use cam.setFollowVehicleHighAngleModeThisUpdate() instead
 */
export declare function setFollowVehicleCamHighAngleModeThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x9DFE13ECDC1EC196 | Since: 323
 * @deprecated Use cam.setFollowVehicleHighAngleModeEveryUpdate() instead
 */
export declare function setFollowVehicleCamHighAngleModeEveryUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x79C0E43EB9B944E2 | Since: 1734
 * @deprecated Use cam.setTableGameseraThisUpdate(hash) instead
 */
export declare function setTableGamesCameraThisUpdate(hash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEE82280AB767B690 | Since: 323
 * @deprecated Use cam.getFollowVehicleZoomLevel() instead
 */
export declare function getFollowVehicleCamZoomLevel(): number;
/**
 * No comment provided
 *
 * Hash: 0x19464CB6E4078C8A | Since: 323
 * @deprecated Use cam.setFollowVehicleZoomLevel(zoomLevel) instead
 */
export declare function setFollowVehicleCamZoomLevel(zoomLevel: number): void;
/**
 * Returns the type of camera:
 *
 * enum _viewmode //0xA11D7CA8
 * {
 * THIRD_PERSON_NEAR = 0,
 * THIRD_PERSON_MEDIUM = 1,
 * THIRD_PERSON_FAR = 2,
 * CINEMATIC = 3,
 * FIRST_PERSON = 4
 * };
 *
 * Hash: 0xA4FF579AC0E3AAAE | Since: 323
 * @deprecated Use cam.getFollowVehicleViewMode() instead
 */
export declare function getFollowVehicleCamViewMode(): number;
/**
 * Sets the type of Player camera in vehicles:
 * viewmode: see CAM.GET_FOLLOW_VEHICLE_CAM_VIEW_MODE
 *
 * Hash: 0xAC253D7842768F48 | Since: 323
 * @deprecated Use cam.setFollowVehicleViewMode(viewMode) instead
 */
export declare function setFollowVehicleCamViewMode(viewMode: number): void;
/**
 * context: see _GET_CAM_ACTIVE_VIEW_MODE_CONTEXT
 *
 * Hash: 0xEE778F8C7E1142E2 | Since: 323
 * @deprecated Use cam.getViewModeForContext(context) instead
 */
export declare function getCamViewModeForContext(context: number): number;
/**
 * context: see _GET_CAM_ACTIVE_VIEW_MODE_CONTEXT, viewmode: see CAM.GET_FOLLOW_VEHICLE_CAM_VIEW_MODE
 *
 * Hash: 0x2A2173E46DAECD12 | Since: 323
 * @deprecated Use cam.setViewModeForContext(context, viewMode) instead
 */
export declare function setCamViewModeForContext(context: number, viewMode: number): void;
/**
 * enum Context
 * {
 * ON_FOOT,
 * IN_VEHICLE,
 * ON_BIKE,
 * IN_BOAT,
 * IN_AIRCRAFT,
 * IN_SUBMARINE,
 * IN_HELI,
 * IN_TURRET
 * };
 *
 * Hash: 0x19CAFA3C87F7C2FF | Since: 323
 * @deprecated Use cam.getActiveViewModeContext() instead
 */
export declare function getCamActiveViewModeContext(): number;
/**
 * No comment provided
 *
 * Hash: 0x6493CF69859B116A | Since: 791
 * @deprecated Use cam.useVehicleStuntSettingsThisUpdate() instead
 */
export declare function useVehicleCamStuntSettingsThisUpdate(): void;
/**
 * Sets gameplay camera to hash
 *
 * Hash: 0x425A920FDB9A0DDA | Since: 1180
 * @deprecated Use cam.useDedicatedStunteraThisUpdate(camName) instead
 */
export declare function useDedicatedStuntCameraThisUpdate(camName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x0AA27680A0BD43FA | Since: 1103
 * @deprecated Use cam.forceVehicleStuntSettingsThisUpdate() instead
 */
export declare function forceVehicleCamStuntSettingsThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x5C90CAB09951A12F | Since: 1365
 * @deprecated Use cam.setFollowVehicleSeatThisUpdate(seatIndex) instead
 */
export declare function setFollowVehicleCamSeatThisUpdate(seatIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x68EDDA28A5976D07 | Since: 323
 * @deprecated Use cam.isAimActive() instead
 */
export declare function isAimCamActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x74BD83EA840F6BC9 | Since: 323
 * @deprecated Use cam.isAimActiveInAccurateMode() instead
 */
export declare function isAimCamActiveInAccurateMode(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5E346D934122613F | Since: 323
 * @deprecated Use cam.isFirstPersonAimActive() instead
 */
export declare function isFirstPersonAimCamActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1A31FE0049E542F6 | Since: 323
 * @deprecated Use cam.disableAimThisUpdate() instead
 */
export declare function disableAimCamThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x7EC52CC40597D170 | Since: 323
 * @deprecated Use cam.getFirstPersonAimZoomFactor() instead
 */
export declare function getFirstPersonAimCamZoomFactor(): number;
/**
 * No comment provided
 *
 * Hash: 0x70894BD0915C5BCA | Since: 323
 * @deprecated Use cam.setFirstPersonAimZoomFactor(zoomFactor) instead
 */
export declare function setFirstPersonAimCamZoomFactor(zoomFactor: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCED08CBE8EBB97C7 | Since: 323
 * @deprecated Use cam.setFirstPersonAimZoomFactorLimitsThisUpdate() instead
 */
export declare function setFirstPersonAimCamZoomFactorLimitsThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x2F7F2B26DD3F18EE | Since: 323
 * @deprecated Use cam.setFirstPersonAimRelativeHeadingLimitsThisUpdate() instead
 */
export declare function setFirstPersonAimCamRelativeHeadingLimitsThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0xBCFC632DB7673BF0 | Since: 323
 * @deprecated Use cam.setFirstPersonAimRelativePitchLimitsThisUpdate() instead
 */
export declare function setFirstPersonAimCamRelativePitchLimitsThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x0AF7B437918103B3 | Since: 323
 * @deprecated Use cam.setFirstPersonAimNearClipThisUpdate() instead
 */
export declare function setFirstPersonAimCamNearClipThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x42156508606DE65E | Since: 323
 * @deprecated Use cam.setThirdPersonAimNearClipThisUpdate() instead
 */
export declare function setThirdPersonAimCamNearClipThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x4008EDF7D6E48175 | Since: 323
 * @deprecated Use cam.setAllowCustomVehicleDriveByThisUpdate() instead
 */
export declare function setAllowCustomVehicleDriveByCamThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x380B4968D1E09E55 | Since: 1290
 * @deprecated Use cam.forceTightspaceCustomFramingThisUpdate() instead
 */
export declare function forceTightspaceCustomFramingThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0xA200EB1EE790F448 | Since: 323
 * @deprecated Use cam.getFinalRenderedCoord() instead
 */
export declare function getFinalRenderedCamCoord(): Vector3;
/**
 * p0 seems to consistently be 2 across scripts
 *
 * `Function is called faily often by CAM::CREATE_CAM_WITH_PARAMS`
 *
 * Hash: 0x5B4E4C817FCC2DFB | Since: 323
 * @deprecated Use cam.getFinalRenderedRot(rotationOrder) instead
 */
export declare function getFinalRenderedCamRot(rotationOrder: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x26903D9CD1175F2C | Since: 323
 * @deprecated Use cam.getFinalRenderedRemotePlayerRot(player, rotationOrder) instead
 */
export declare function getFinalRenderedRemotePlayerCamRot(player: number | string | Player, rotationOrder: number): Vector3;
/**
 * Gets some camera fov
 *
 * Hash: 0x80EC114669DAEFF4 | Since: 323
 * @deprecated Use cam.getFinalRenderedFov() instead
 */
export declare function getFinalRenderedCamFov(): number;
/**
 * No comment provided
 *
 * Hash: 0x5F35F6732C3FBBA0 | Since: 323
 * @deprecated Use cam.getFinalRenderedRemotePlayerFov(player) instead
 */
export declare function getFinalRenderedRemotePlayerCamFov(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xD0082607100D7193 | Since: 323
 * @deprecated Use cam.getFinalRenderedNearClip() instead
 */
export declare function getFinalRenderedCamNearClip(): number;
/**
 * No comment provided
 *
 * Hash: 0xDFC8CBC606FDB0FC | Since: 323
 * @deprecated Use cam.getFinalRenderedFarClip() instead
 */
export declare function getFinalRenderedCamFarClip(): number;
/**
 * No comment provided
 *
 * Hash: 0xA03502FC581F7D9B | Since: 323
 * @deprecated Use cam.getFinalRenderedNearDof() instead
 */
export declare function getFinalRenderedCamNearDof(): number;
/**
 * No comment provided
 *
 * Hash: 0x9780F32BCAF72431 | Since: 323
 * @deprecated Use cam.getFinalRenderedFarDof() instead
 */
export declare function getFinalRenderedCamFarDof(): number;
/**
 * No comment provided
 *
 * Hash: 0x162F9D995753DC19 | Since: 323
 * @deprecated Use cam.getFinalRenderedMotionBlurStrength() instead
 */
export declare function getFinalRenderedCamMotionBlurStrength(): number;
/**
 * No comment provided
 *
 * Hash: 0xD51ADCD2D8BC0FB3 | Since: 323
 * @deprecated Use cam.setGameplayCoordHint(pos, duration, blendOutDuration, blendInDuration) instead
 */
export declare function setGameplayCoordHint(pos: Vector3, duration: number, blendOutDuration: number, blendInDuration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2B486269ACD548D3 | Since: 323
 * @deprecated Use cam.setGameplayPedHint(ped, x1, y1, z1, duration, blendOutDuration, blendInDuration) instead
 */
export declare function setGameplayPedHint(ped: number | Ped, x1: number, y1: number, z1: number, duration: number, blendOutDuration: number, blendInDuration: number): void;
/**
 * Focuses the camera on the specified vehicle.
 *
 * Hash: 0xA2297E18F3E71C2E | Since: 323
 * @deprecated Use cam.setGameplayVehicleHint(vehicle, offsetX, offsetY, offsetZ, time, easeInTime, easeOutTime) instead
 */
export declare function setGameplayVehicleHint(vehicle: number | Vehicle, offsetX: number, offsetY: number, offsetZ: number, time: number, easeInTime: number, easeOutTime: number): void;
/**
 * No comment provided
 *
 * Hash: 0x83E87508A2CA2AC6 | Since: 323
 * @deprecated Use cam.setGameplayObjectHint(_object, xOffset, yOffset, zOffset, time, easeInTime, easeOutTime) instead
 */
export declare function setGameplayObjectHint(_object: number | Object, xOffset: number, yOffset: number, zOffset: number, time: number, easeInTime: number, easeOutTime: number): void;
/**
 * p8 could be some sort of flag. Scripts use:
 * -244429742
 * 0
 * 1726668277
 * 1844968929
 *
 * Hash: 0x189E955A8313E298 | Since: 323
 * @deprecated Use cam.setGameplayEntityHint(entity, xOffset, yOffset, zOffset, time, easeInTime, easeOutTime) instead
 */
export declare function setGameplayEntityHint(entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, time: number, easeInTime: number, easeOutTime: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE520FF1AD2785B40 | Since: 323
 * @deprecated Use cam.isGameplayHintActive() instead
 */
export declare function isGameplayHintActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF46C581C61718916 | Since: 323
 * @deprecated Use cam.stopGameplayHint() instead
 */
export declare function stopGameplayHint(): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0xCCD078C2665D2973 | Since: 323
 * @deprecated Use cam.stopGameplayHintBeingCancelledThisUpdate() instead
 */
export declare function stopGameplayHintBeingCancelledThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x247ACBC4ABBC9D1C | Since: 323
 * @deprecated Use cam.stopCodeGameplayHint() instead
 */
export declare function stopCodeGameplayHint(): void;
/**
 * No comment provided
 *
 * Hash: 0xBF72910D0F26F025 | Since: 323
 * @deprecated Use cam.isCodeGameplayHintActive() instead
 */
export declare function isCodeGameplayHintActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x513403FB9C56211F | Since: 323
 * @deprecated Use cam.setGameplayHintFov(FOV) instead
 */
export declare function setGameplayHintFov(FOV: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF8BDBF3D573049A1 | Since: 323
 * @deprecated Use cam.setGameplayHintFollowDistanceScalar(value) instead
 */
export declare function setGameplayHintFollowDistanceScalar(value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD1F8363DFAD03848 | Since: 323
 * @deprecated Use cam.setGameplayHintBaseOrbitPitchOffset(value) instead
 */
export declare function setGameplayHintBaseOrbitPitchOffset(value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5D7B620DAE436138 | Since: 323
 * @deprecated Use cam.setGameplayHinteraRelativeSideOffset(xOffset) instead
 */
export declare function setGameplayHintCameraRelativeSideOffset(xOffset: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC92717EF615B6704 | Since: 323
 * @deprecated Use cam.setGameplayHinteraRelativeVerticalOffset(yOffset) instead
 */
export declare function setGameplayHintCameraRelativeVerticalOffset(yOffset: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE3433EADAAF7EE40 | Since: 323
 * @deprecated Use cam.setGameplayHinteraBlendToFollowPedMediumViewMode(toggle) instead
 */
export declare function setGameplayHintCameraBlendToFollowPedMediumViewMode(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x51669F7D1FB53D9F | Since: 323
 * @deprecated Use cam.setCinematicButtonActive() instead
 */
export declare function setCinematicButtonActive(): void;
/**
 * No comment provided
 *
 * Hash: 0xB15162CB5826E9E8 | Since: 323
 * @deprecated Use cam.isCinematicRendering() instead
 */
export declare function isCinematicCamRendering(): boolean;
/**
 * p0 argument found in the b617d scripts: "DRUNK_SHAKE"
 *
 * Full list of cam shake types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/camShakeTypesCompact.json
 *
 * Hash: 0xDCE214D9ED58F3CF | Since: 323
 * @deprecated Use cam.shakeCinematic(shakeType, amount) instead
 */
export declare function shakeCinematicCam(shakeType: string, amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBBC08F6B4CB8FF0A | Since: 323
 * @deprecated Use cam.isCinematicShaking() instead
 */
export declare function isCinematicCamShaking(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC724C701C30B2FE7 | Since: 323
 * @deprecated Use cam.setCinematicShakeAmplitude() instead
 */
export declare function setCinematicCamShakeAmplitude(): void;
/**
 * No comment provided
 *
 * Hash: 0x2238E588E588A6D7 | Since: 323
 * @deprecated Use cam.stopCinematicShaking() instead
 */
export declare function stopCinematicCamShaking(): void;
/**
 * No comment provided
 *
 * Hash: 0xADFF1B2A555F5FBA | Since: 323
 * @deprecated Use cam.disableCinematicBonneteraThisUpdate() instead
 */
export declare function disableCinematicBonnetCameraThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x62ECFCFDEE7885D6 | Since: 323
 * @deprecated Use cam.disableCinematicVehicleIdleModeThisUpdate() instead
 */
export declare function disableCinematicVehicleIdleModeThisUpdate(): void;
/**
 * Resets the vehicle idle camera timer. Calling this in a loop will disable the idle camera.
 *
 * Hash: 0x9E4CFFF989258472 | Since: 323
 * @deprecated Use cam.invalidateCinematicVehicleIdleMode() instead
 */
export declare function invalidateCinematicVehicleIdleMode(): void;
/**
 * Resets the idle camera timer. Calling that in a loop once every few seconds is enough to disable the idle cinematic camera.
 *
 * Hash: 0xF4F2C0D4EE209E20 | Since: 323
 * @deprecated Use cam.invalidateIdle() instead
 */
export declare function invalidateIdleCam(): void;
/**
 * No comment provided
 *
 * Hash: 0xCA9D2AA3E326D720 | Since: 323
 * @deprecated Use cam.isCinematicIdleRendering() instead
 */
export declare function isCinematicIdleCamRendering(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4F32C0D5A90A9B40 | Since: 323
 * @deprecated Use cam.isCinematicFirstPersonVehicleInteriorRendering() instead
 */
export declare function isCinematicFirstPersonVehicleInteriorCamRendering(): boolean;
/**
 * hash is always JOAAT("CAMERA_MAN_SHOT") in decompiled scripts
 *
 * Hash: 0x741B0129D4560F31 | Since: 323
 * @deprecated Use cam.createCinematicShot(p0, time, entity) instead
 */
export declare function createCinematicShot(p0: number | string, time: number, entity: number | Entity): void;
/**
 * Hash is always JOAAT("CAMERA_MAN_SHOT") in decompiled scripts
 *
 * Hash: 0xCC9F3371A7C28BC9 | Since: 323
 * @deprecated Use cam.isCinematicShotActive(p0) instead
 */
export declare function isCinematicShotActive(p0: number | string): boolean;
/**
 * Only used once in carsteal3 with p0 set to -1096069633 (CAMERA_MAN_SHOT)
 *
 * Hash: 0x7660C6E75D3A078E | Since: 323
 * @deprecated Use cam.stopCinematicShot(p0) instead
 */
export declare function stopCinematicShot(p0: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xA41BCD7213805AAC | Since: 323
 * @deprecated Use cam.forceCinematicRenderingThisUpdate(toggle) instead
 */
export declare function forceCinematicRenderingThisUpdate(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDC9DA9E8789F5246 | Since: 323
 * @deprecated Use cam.setCinematicNewsChannelActiveThisUpdate() instead
 */
export declare function setCinematicNewsChannelActiveThisUpdate(): void;
/**
 * Toggles the vehicle cinematic cam; requires the player ped to be in a vehicle to work.
 *
 * Hash: 0xDCF0754AC3D6FD4E | Since: 323
 * @deprecated Use cam.setCinematicModeActive(toggle) instead
 */
export declare function setCinematicModeActive(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1F2300CB7FA7B7F6 | Since: 323
 * @deprecated Use cam.isInVehicleMobilePhoneeraRendering() instead
 */
export declare function isInVehicleMobilePhoneCameraRendering(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x17FCA7199A530203 | Since: 323
 * @deprecated Use cam.disableCinematicSlowMoThisUpdate() instead
 */
export declare function disableCinematicSlowMoThisUpdate(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD7360051C885628B | Since: 372
 * @deprecated Use cam.isBonnetCinematicRendering() instead
 */
export declare function isBonnetCinematicCamRendering(): boolean;
/**
 * Tests some cinematic camera flags
 *
 * Hash: 0xF5F1E89A970B7796 | Since: 1493
 * @deprecated Use cam.isCinematicInputActive() instead
 */
export declare function isCinematicCamInputActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7B8A361C1813FBEF | Since: 573
 * @deprecated Use cam.ignoreMenuPreferenceForBonneteraThisUpdate() instead
 */
export declare function ignoreMenuPreferenceForBonnetCameraThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0xDB629FFD9285FA06 | Since: 323
 * @deprecated Use cam.bypassCutsceneRenderingThisUpdate() instead
 */
export declare function bypassCutsceneCamRenderingThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x324C5AA411DA7737 | Since: 323
 * @deprecated Use cam.stopCutsceneShaking() instead
 */
export declare function stopCutsceneCamShaking(): void;
/**
 * Hardcoded to only work in multiplayer.
 *
 * Hash: 0x12DED8CA53D47EA5 | Since: 323
 * @deprecated Use cam.setCutsceneFarClipThisUpdate() instead
 */
export declare function setCutsceneCamFarClipThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x89215EC747DF244A | Since: 323
 * @deprecated Use cam.getFocusPedOnScreen() instead
 */
export declare function getFocusPedOnScreen(): number;
/**
 * No comment provided
 *
 * Hash: 0x5A43C76F7FC7BA5F | Since: 323
 * @deprecated Use cam.disableNearClipScanThisUpdate() instead
 */
export declare function disableNearClipScanThisUpdate(): void;
/**
 * if p0 is 0, effect is cancelled
 *
 * if p0 is 1, effect zooms in, gradually tilts cam clockwise apx 30 degrees, wobbles slowly. Motion blur is active until cancelled.
 *
 * if p0 is 2, effect immediately tilts cam clockwise apx 30 degrees, begins to wobble slowly, then gradually tilts cam back to normal. The wobbling will continue until the effect is cancelled.
 *
 * Hash: 0x80C8B1846639BB19 | Since: 323
 * @deprecated Use cam.setDeathFailEffectState() instead
 */
export declare function setCamDeathFailEffectState(): void;
/**
 * No comment provided
 *
 * Hash: 0x5C41E6BABC9E2112 | Since: 323
 * @deprecated Use cam.setFirstPersonFlashEffectType() instead
 */
export declare function setFirstPersonFlashEffectType(): void;
/**
 * From b617 scripts:
 *
 * `CAM::SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_NAME("DINGHY");`
 * `CAM::SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_NAME("ISSI2");`
 * `CAM::SET_FIRST_PERSON_FLASH_EFFECT_VEHICLE_MODEL_NAME("SPEEDO");`
 *
 * Hash: 0x21E253A7F8DA5DFB | Since: 323
 * @deprecated Use cam.setFirstPersonFlashEffectVehicleModelName(vehicleName) instead
 */
export declare function setFirstPersonFlashEffectVehicleModelName(vehicleName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x11FA5D3479C7DD47 | Since: 323
 * @deprecated Use cam.setFirstPersonFlashEffectVehicleModelHash(vehicleModel) instead
 */
export declare function setFirstPersonFlashEffectVehicleModelHash(vehicleModel: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xEAF0FA793D05C592 | Since: 323
 * @deprecated Use cam.isAllowedIndependenteraModes() instead
 */
export declare function isAllowedIndependentCameraModes(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x62374889A4D59F72 | Since: 877
 * @deprecated Use cam.eraPreventCollisionSettingsForTripleheadInInteriorsThisUpdate() instead
 */
export declare function cameraPreventCollisionSettingsForTripleheadInInteriorsThisUpdate(): void;
/**
 * No comment provided
 *
 * Hash: 0x8BFCEB5EA1B161B6 | Since: 323
 * @deprecated Use cam.replayGetMaxDistanceAllowedFromPlayer() instead
 */
export declare function replayGetMaxDistanceAllowedFromPlayer(): number;
/**
 * SET_CLOCK_TIME(12, 34, 56);
 *
 * Hash: 0x47C3B5848C3E45D8 | Since: 323
 * @deprecated Use clock.setTime(hour, minute, second) instead
 */
export declare function setClockTime(hour: number, minute: number, second: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4055E40BD2DBEC1D | Since: 323
 * @deprecated Use clock.pause(toggle) instead
 */
export declare function pauseClock(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC8CA9670B9D83B3B | Since: 323
 * @deprecated Use clock.advanceTimeTo(hour, minute, second) instead
 */
export declare function advanceClockTimeTo(hour: number, minute: number, second: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD716F30D8C8980E2 | Since: 323
 * @deprecated Use clock.addToTime(hours, minutes, seconds) instead
 */
export declare function addToClockTime(hours: number, minutes: number, seconds: number): void;
/**
 * Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)
 *
 * Hash: 0x25223CA6B4D20B7F | Since: 323
 * @deprecated Use clock.getHours() instead
 */
export declare function getClockHours(): number;
/**
 * Gets the current ingame clock minute.
 *
 * Hash: 0x13D2B8ADD79640F2 | Since: 323
 * @deprecated Use clock.getMinutes() instead
 */
export declare function getClockMinutes(): number;
/**
 * Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in GTA is only 48 minutes in real life.
 *
 * Hash: 0x494E97C2EF27C470 | Since: 323
 * @deprecated Use clock.getSeconds() instead
 */
export declare function getClockSeconds(): number;
/**
 * No comment provided
 *
 * Hash: 0xB096419DF0D06CE7 | Since: 323
 * @deprecated Use clock.setDate(day, month, year) instead
 */
export declare function setClockDate(day: number, month: number, year: number): void;
/**
 * Gets the current day of the week.
 *
 * 0: Sunday
 * 1: Monday
 * 2: Tuesday
 * 3: Wednesday
 * 4: Thursday
 * 5: Friday
 * 6: Saturday
 *
 * Hash: 0xD972E4BD7AEB235F | Since: 323
 * @deprecated Use clock.getDayOfWeek() instead
 */
export declare function getClockDayOfWeek(): number;
/**
 * No comment provided
 *
 * Hash: 0x3D10BC92A4DB1D35 | Since: 323
 * @deprecated Use clock.getDayOfMonth() instead
 */
export declare function getClockDayOfMonth(): number;
/**
 * No comment provided
 *
 * Hash: 0xBBC72712E80257A1 | Since: 323
 * @deprecated Use clock.getMonth() instead
 */
export declare function getClockMonth(): number;
/**
 * No comment provided
 *
 * Hash: 0x961777E64BDAF717 | Since: 323
 * @deprecated Use clock.getYear() instead
 */
export declare function getClockYear(): number;
/**
 * No comment provided
 *
 * Hash: 0x2F8B4D1C595B11DB | Since: 323
 * @deprecated Use clock.getMillisecondsPerGameMinute() instead
 */
export declare function getMillisecondsPerGameMinute(): number;
/**
 * Gets system time as year, month, day, hour, minute and second.
 *
 * Example usage:
 *
 * int year;
 * int month;
 * int day;
 * int hour;
 * int minute;
 * int second;
 *
 * `TIME::GET_POSIX_TIME(&year, &month, &day, &hour, &minute, &second);`
 *
 *
 * Hash: 0xDA488F299A5B164E | Since: 323
 * @deprecated Use clock.getPosixTime() instead
 */
export declare function getPosixTime(): [number, number, number, number, number, number];
/**
 * Gets current UTC time
 *
 * Hash: 0x8117E09A19EEF4D3 | Since: 323
 * @deprecated Use clock.getUtcTime() instead
 */
export declare function getUtcTime(): [number, number, number, number, number, number];
/**
 * Gets local system time as year, month, day, hour, minute and second.
 *
 * Example usage:
 *
 * int year;
 * int month;
 * int day;
 * int hour;
 * int minute;
 * int second;
 * `or use std::tm struct`
 *
 * `TIME::GET_LOCAL_TIME(&year, &month, &day, &hour, &minute, &second);`
 *
 *
 * Hash: 0x50C7A99057A69748 | Since: 323
 * @deprecated Use clock.getLocalTime() instead
 */
export declare function getLocalTime(): [number, number, number, number, number, number];
/**
 * flags: Usually 8
 * Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
 *
 * Hash: 0x7A86743F475D9E09 | Since: 323
 * @deprecated Use cutscene.request(cutsceneName, flags) instead
 */
export declare function requestCutscene(cutsceneName: string, flags: number): void;
/**
 * flags: Usually 8
 *
 * playbackFlags: Which scenes should be played.
 * Example: 0x105 (bit 0, 2 and 8 set) will enable scene 1, 3 and 9.
 * Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
 *
 * Hash: 0xC23DE0E91C30B58C | Since: 323
 * @deprecated Use cutscene.requestWithPlaybackList(cutsceneName, playbackFlags, flags) instead
 */
export declare function requestCutsceneWithPlaybackList(cutsceneName: string, playbackFlags: number, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x440AF51A3462B86F | Since: 323
 * @deprecated Use cutscene.remove() instead
 */
export declare function removeCutscene(): void;
/**
 * No comment provided
 *
 * Hash: 0xC59F528E9AB9F339 | Since: 323
 * @deprecated Use cutscene.hasLoaded() instead
 */
export declare function hasCutsceneLoaded(): boolean;
/**
 * Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
 *
 * Hash: 0x228D3D94F8A11C3C | Since: 323
 * @deprecated Use cutscene.hasThisLoaded(cutsceneName) instead
 */
export declare function hasThisCutsceneLoaded(cutsceneName: string): boolean;
/**
 * Sets the cutscene's owning thread ID.
 *
 * Hash: 0x8D9DF6ECA8768583 | Since: 323
 * @deprecated Use cutscene.setScriptCanStart(threadId) instead
 */
export declare function setScriptCanStartCutscene(threadId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB56BBBCC2955D9CB | Since: 323
 * @deprecated Use cutscene.canRequestAssetsForEntity() instead
 */
export declare function canRequestAssetsForCutsceneEntity(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x71B74D2AE19338D0 | Since: 323
 * @deprecated Use cutscene.isPlaybackFlagSet(flag) instead
 */
export declare function isCutscenePlaybackFlagSet(flag: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4C61C75BEE8184C2 | Since: 323
 * @deprecated Use cutscene.setEntityStreamingFlags(cutsceneEntName) instead
 */
export declare function setCutsceneEntityStreamingFlags(cutsceneEntName: string): void;
/**
 * Simply loads the cutscene and doesn't do extra stuff that REQUEST_CUTSCENE does.
 * Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
 *
 * Hash: 0x06A3524161C502BA | Since: 323
 * @deprecated Use cutscene.requestCutFile(cutsceneName) instead
 */
export declare function requestCutFile(cutsceneName: string): void;
/**
 * Simply checks if the cutscene has loaded and doesn't check via CutSceneManager as opposed to HAS_[THIS]_CUTSCENE_LOADED.
 * Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
 *
 * Hash: 0xA1C996C2A744262E | Since: 323
 * @deprecated Use cutscene.hasCutFileLoaded(cutsceneName) instead
 */
export declare function hasCutFileLoaded(cutsceneName: string): boolean;
/**
 * Simply unloads the cutscene and doesn't do extra stuff that REMOVE_CUTSCENE does.
 * Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
 *
 * Hash: 0xD00D76A7DFC9D852 | Since: 323
 * @deprecated Use cutscene.removeCutFile(cutsceneName) instead
 */
export declare function removeCutFile(cutsceneName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x1FA904B60E492336 | Since: 3570
 * @deprecated Use cutscene.getCutFileOffset(cutsceneName, index) instead
 */
export declare function getCutFileOffset(cutsceneName: string, index: number): Vector3;
/**
 * Full list of cutscene names by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/cutsceneNames.json
 *
 * Hash: 0x0ABC54DE641DC0FC | Since: 323
 * @deprecated Use cutscene.getCutFileConcatCount(cutsceneName) instead
 */
export declare function getCutFileConcatCount(cutsceneName: string): number;
/**
 * flags: Usually 0.
 *
 * Hash: 0x186D5CB5E7B0FF7B | Since: 323
 * @deprecated Use cutscene.start(flags) instead
 */
export declare function startCutscene(flags: number): void;
/**
 * flags: Usually 0.
 *
 * Hash: 0x1C9ADDA3244A1FBF | Since: 323
 * @deprecated Use cutscene.startAtCoords(pos, flags) instead
 */
export declare function startCutsceneAtCoords(pos: Vector3, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC7272775B4DC786E | Since: 323
 * @deprecated Use cutscene.stop() instead
 */
export declare function stopCutscene(): void;
/**
 * No comment provided
 *
 * Hash: 0xD220BDD222AC4A1E | Since: 323
 * @deprecated Use cutscene.stopImmediately() instead
 */
export declare function stopCutsceneImmediately(): void;
/**
 * p3 could be heading. Needs more research.
 *
 * Hash: 0xB812B3FD1C01CF27 | Since: 323
 * @deprecated Use cutscene.setOrigin(pos) instead
 */
export declare function setCutsceneOrigin(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x011883F41211432A | Since: 323
 * @deprecated Use cutscene.setOriginAndOrientation(x1, y1, z1, x2, y2, z2) instead
 */
export declare function setCutsceneOriginAndOrientation(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE625BEABBAFFDAB9 | Since: 323
 * @deprecated Use cutscene.getTime() instead
 */
export declare function getCutsceneTime(): number;
/**
 * No comment provided
 *
 * Hash: 0x710286BC5EF4D6E1 | Since: 3258
 * @deprecated Use cutscene.getPlayTime() instead
 */
export declare function getCutscenePlayTime(): number;
/**
 * No comment provided
 *
 * Hash: 0xEE53B14A19E480D4 | Since: 323
 * @deprecated Use cutscene.getTotalDuration() instead
 */
export declare function getCutsceneTotalDuration(): number;
/**
 * No comment provided
 *
 * Hash: 0x971D7B15BCDBEF99 | Since: 1734
 * @deprecated Use cutscene.getEndTime() instead
 */
export declare function getCutsceneEndTime(): number;
/**
 * No comment provided
 *
 * Hash: 0x5D583F71C901F2A3 | Since: 2802
 * @deprecated Use cutscene.getPlayDuration() instead
 */
export declare function getCutscenePlayDuration(): number;
/**
 * No comment provided
 *
 * Hash: 0x40C8656EDAEDD569 | Since: 323
 * @deprecated Use cutscene.wasSkipped() instead
 */
export declare function wasCutsceneSkipped(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7C0A893088881D57 | Since: 323
 * @deprecated Use cutscene.hasFinished() instead
 */
export declare function hasCutsceneFinished(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x991251AFC3981F84 | Since: 323
 * @deprecated Use cutscene.isActive() instead
 */
export declare function isCutsceneActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD3C2E180A40F031E | Since: 323
 * @deprecated Use cutscene.isPlaying() instead
 */
export declare function isCutscenePlaying(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x49010A6A396553D8 | Since: 323
 * @deprecated Use cutscene.getSectionPlaying() instead
 */
export declare function getCutsceneSectionPlaying(): number;
/**
 * No comment provided
 *
 * Hash: 0x0A2E9FDB9A8C62F6 | Since: 323
 * @deprecated Use cutscene.getEntityIndexOfEntity(cutsceneEntName, modelHash) instead
 */
export declare function getEntityIndexOfCutsceneEntity(cutsceneEntName: string, modelHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x583DF8E3D4AFBD98 | Since: 323
 * @deprecated Use cutscene.getConcatSectionPlaying() instead
 */
export declare function getCutsceneConcatSectionPlaying(): number;
/**
 * This function is hard-coded to always return 1.
 *
 * Hash: 0x4CEBC1ED31E8925E | Since: 323
 * @deprecated Use cutscene.isAuthorized(cutsceneName) instead
 */
export declare function isCutsceneAuthorized(cutsceneName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4FCD976DA686580C | Since: 1290
 * @deprecated Use cutscene.doesHandleExist(cutsceneHandle) instead
 */
export declare function doesCutsceneHandleExist(cutsceneHandle: number): number;
/**
 * No comment provided
 *
 * Hash: 0xE40C1C56DF95C2E8 | Since: 323
 * @deprecated Use cutscene.registerEntityFor(cutscenePed, cutsceneEntName, modelHash) instead
 */
export declare function registerEntityForCutscene(cutscenePed: number | Ped, cutsceneEntName: string, modelHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xC0741A26499654CD | Since: 323
 * @deprecated Use cutscene.getEntityIndexOfRegisteredEntity(cutsceneEntName, modelHash) instead
 */
export declare function getEntityIndexOfRegisteredEntity(cutsceneEntName: string, modelHash: number | string): number;
/**
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0x7F96F23FA9B73327 | Since: 323
 * @deprecated Use cutscene.setVehicleModelPlayerWillExitScene(modelHash) instead
 */
export declare function setVehicleModelPlayerWillExitScene(modelHash: number | string): void;
/**
 * Only used twice in R* scripts
 *
 * Hash: 0x9896CE4721BE84BA | Since: 323
 * @deprecated Use cutscene.setTriggerArea(x1, y1, z1, x2, y2, z2) instead
 */
export declare function setCutsceneTriggerArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
/**
 * modelHash (p1) was always 0 in R* scripts
 *
 * Hash: 0x645D0B458D8E17B5 | Since: 323
 * @deprecated Use cutscene.canSetEnterStateForRegisteredEntity(cutsceneEntName, modelHash) instead
 */
export declare function canSetEnterStateForRegisteredEntity(cutsceneEntName: string, modelHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4C6A6451C79E4662 | Since: 323
 * @deprecated Use cutscene.canSetExitStateForRegisteredEntity(cutsceneEntName, modelHash) instead
 */
export declare function canSetExitStateForRegisteredEntity(cutsceneEntName: string, modelHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB2CBCD0930DFB420 | Since: 323
 * @deprecated Use cutscene.canSetExitStateForCamera() instead
 */
export declare function canSetExitStateForCamera(): boolean;
/**
 * Toggles a value (bool) for cutscenes.
 *
 * Hash: 0xC61B86C9F61EB404 | Since: 323
 * @deprecated Use cutscene.setPadCanShakeDuring(toggle) instead
 */
export declare function setPadCanShakeDuringCutscene(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8093F23ABACCC7D4 | Since: 323
 * @deprecated Use cutscene.setFadeValues() instead
 */
export declare function setCutsceneFadeValues(): void;
/**
 * No comment provided
 *
 * Hash: 0x20746F7B1032A3C7 | Since: 323
 * @deprecated Use cutscene.setMultiheadFade() instead
 */
export declare function setCutsceneMultiheadFade(): void;
/**
 * No comment provided
 *
 * Hash: 0x06EE9048FD080382 | Since: 323
 * @deprecated Use cutscene.setMultiheadFadeManual() instead
 */
export declare function setCutsceneMultiheadFadeManual(): void;
/**
 * No comment provided
 *
 * Hash: 0xA0FE76168A189DDB | Since: 323
 * @deprecated Use cutscene.isMultiheadFadeUp() instead
 */
export declare function isMultiheadFadeUp(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2F137B508DE238F2 | Since: 323
 * @deprecated Use cutscene.networkSetMocapCanBeSkipped(toggle) instead
 */
export declare function networkSetMocapCutsceneCanBeSkipped(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE36A98D8AB3D3C66 | Since: 323
 * @deprecated Use cutscene.setCarGeneratorsCanUpdateDuring() instead
 */
export declare function setCarGeneratorsCanUpdateDuringCutscene(): void;
/**
 * No comment provided
 *
 * Hash: 0x5EDEF0CF8C1DAB3C | Since: 323
 * @deprecated Use cutscene.canUseMobilePhoneDuring() instead
 */
export declare function canUseMobilePhoneDuringCutscene(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x41FAA8FB2ECE8720 | Since: 323
 * @deprecated Use cutscene.setCanBeSkipped() instead
 */
export declare function setCutsceneCanBeSkipped(): void;
/**
 * No comment provided
 *
 * Hash: 0x2131046957F31B04 | Since: 323
 * @deprecated Use cutscene.setCanDisplayMinimapDuringThisUpdate() instead
 */
export declare function setCanDisplayMinimapDuringCutsceneThisUpdate(): void;
/**
 * Full list of ped components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedComponentVariations.json
 *
 * Hash: 0xBA01E7B6DEEFBBC9 | Since: 323
 * @deprecated Use cutscene.setPedComponentVariation(cutsceneEntName, componentId, drawableId, textureId, modelHash) instead
 */
export declare function setCutscenePedComponentVariation(cutsceneEntName: string, componentId: number, drawableId: number, textureId: number, modelHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x2A56C06EBEF2B0D9 | Since: 323
 * @deprecated Use cutscene.setPedComponentVariationFromPed(cutsceneEntName, ped, modelHash) instead
 */
export declare function setCutscenePedComponentVariationFromPed(cutsceneEntName: string, ped: number | Ped, modelHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x499EF20C5DB25C59 | Since: 323
 * @deprecated Use cutscene.doesEntityExist(cutsceneEntName, modelHash) instead
 */
export declare function doesCutsceneEntityExist(cutsceneEntName: string, modelHash: number | string): boolean;
/**
 * Thanks R*! ;)
 *
 * if ((l_161 == 0) || (l_161 == 2)) {
 * sub_2ea27("Trying to set Jimmy prop variation");
 * `CUTSCENE::SET_CUTSCENE_PED_PROP_VARIATION("Jimmy_Boston", 1, 0, 0, 0);`
 * }
 *
 * Full list of ped components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedComponentVariations.json
 *
 * Hash: 0x0546524ADE2E9723 | Since: 323
 * @deprecated Use cutscene.setPedPropVariation(cutsceneEntName, componentId, drawableId, textureId, modelHash) instead
 */
export declare function setCutscenePedPropVariation(cutsceneEntName: string, componentId: number, drawableId: number, textureId: number, modelHash: number | string): void;
/**
 * Possibly HAS_CUTSCENE_CUT_THIS_FRAME, needs more research.
 *
 * Hash: 0x708BDD8CD795B043 | Since: 323
 * @deprecated Use cutscene.hasCutThisFrame() instead
 */
export declare function hasCutsceneCutThisFrame(): boolean;
/**
 * Adds the given requestID to the watch list.
 *
 * Hash: 0xAD6875BBC0FC899C | Since: 323
 * @deprecated Use datafile.watchRequestId(requestId) instead
 */
export declare function datafileWatchRequestId(requestId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6CC86E78358D5119 | Since: 323
 * @deprecated Use datafile.clearWatchList() instead
 */
export declare function datafileClearWatchList(): void;
/**
 * No comment provided
 *
 * Hash: 0xFCCAE5B92A830878 | Since: 323
 * @deprecated Use datafile.isValidRequestId(index) instead
 */
export declare function datafileIsValidRequestId(index: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x15FF52B809DB2353 | Since: 323
 * @deprecated Use datafile.hasLoadedFileData(requestId) instead
 */
export declare function datafileHasLoadedFileData(requestId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF8CC1EBE0B62E29F | Since: 323
 * @deprecated Use datafile.hasValidFileData(requestId) instead
 */
export declare function datafileHasValidFileData(requestId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x22DA66936E0FFF37 | Since: 323
 * @deprecated Use datafile.selectActiveFile(requestId) instead
 */
export declare function datafileSelectActiveFile(requestId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8F5EA1C01D65A100 | Since: 323
 * @deprecated Use datafile.deleteRequestedFile(requestId) instead
 */
export declare function datafileDeleteRequestedFile(requestId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC84527E235FCA219 | Since: 323
 * @deprecated Use datafile.ugcCreateContent(dataCount, contentName, description, tagsCsv, contentTypeName, publish) instead
 */
export declare function ugcCreateContent(dataCount: number, contentName: string, description: string, tagsCsv: string, contentTypeName: string, publish: boolean): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xA5EFC3E847D60507 | Since: 323
 * @deprecated Use datafile.ugcCreateMission(contentName, description, tagsCsv, contentTypeName, publish) instead
 */
export declare function ugcCreateMission(contentName: string, description: string, tagsCsv: string, contentTypeName: string, publish: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x648E7A5434AF7969 | Since: 323
 * @deprecated Use datafile.ugcUpdateContent(contentId, dataCount, contentName, description, tagsCsv, contentTypeName) instead
 */
export declare function ugcUpdateContent(contentId: string, dataCount: number, contentName: string, description: string, tagsCsv: string, contentTypeName: string): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x4645DE9980999E93 | Since: 323
 * @deprecated Use datafile.ugcUpdateMission(contentId, contentName, description, tagsCsv, contentTypeName) instead
 */
export declare function ugcUpdateMission(contentId: string, contentName: string, description: string, tagsCsv: string, contentTypeName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x692D808C34A82143 | Since: 323
 * @deprecated Use datafile.ugcSetPlayerData(contentId, rating, contentTypeName) instead
 */
export declare function ugcSetPlayerData(contentId: string, rating: number, contentTypeName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA69AC4ADE82B57A4 | Since: 323
 * @deprecated Use datafile.selectUgcData() instead
 */
export declare function datafileSelectUgcData(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9CB0BFA7A9342C3D | Since: 323
 * @deprecated Use datafile.selectUgcStats() instead
 */
export declare function datafileSelectUgcStats(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x52818819057F2B40 | Since: 323
 * @deprecated Use datafile.selectUgcPlayerData() instead
 */
export declare function datafileSelectUgcPlayerData(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x01095C95CD46B624 | Since: 323
 * @deprecated Use datafile.selectCreatorStats() instead
 */
export declare function datafileSelectCreatorStats(): boolean;
/**
 * Loads a User-Generated Content (UGC) file. These files can be found in "[GTA5]\data\ugc" and "[GTA5]\common\patch\ugc". They seem to follow a naming convention, most likely of "[name]_[part].ugc". See example below for usage.
 *
 * Returns whether or not the file was successfully loaded.
 *
 * Example:
 * `DATAFILE::DATAFILE_LOAD_OFFLINE_UGC("RockstarPlaylists") // loads "rockstarplaylists_00.ugc"`
 *
 * Hash: 0xC5238C011AF405E4 | Since: 323
 * @deprecated Use datafile.loadOfflineUgc(filename) instead
 */
export declare function datafileLoadOfflineUgc(filename: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD27058A1CA2B13EE | Since: 323
 * @deprecated Use datafile.create() instead
 */
export declare function datafileCreate(): void;
/**
 * No comment provided
 *
 * Hash: 0x9AB9C1CFC8862DFB | Since: 323
 * @deprecated Use datafile.datafileDelete() instead
 */
export declare function datafileDelete(): void;
/**
 * No comment provided
 *
 * Hash: 0x2ED61456317B8178 | Since: 323
 * @deprecated Use datafile.storeMissionHeader() instead
 */
export declare function datafileStoreMissionHeader(): void;
/**
 * No comment provided
 *
 * Hash: 0xC55854C7D7274882 | Since: 323
 * @deprecated Use datafile.flushMissionHeader() instead
 */
export declare function datafileFlushMissionHeader(): void;
/**
 * No comment provided
 *
 * Hash: 0x906B778CA1DC72B6 | Since: 323
 * @deprecated Use datafile.getFileDict() instead
 */
export declare function datafileGetFileDict(): any;
/**
 * No comment provided
 *
 * Hash: 0x83BCCE3224735F05 | Since: 323
 * @deprecated Use datafile.startSaveToCloud(filename) instead
 */
export declare function datafileStartSaveToCloud(filename: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4DFDD9EB705F8140 | Since: 323
 * @deprecated Use datafile.updateSaveToCloud() instead
 */
export declare function datafileUpdateSaveToCloud(): [boolean, boolean];
/**
 * No comment provided
 *
 * Hash: 0xBEDB96A7584AA8CF | Since: 323
 * @deprecated Use datafile.isSavePending() instead
 */
export declare function datafileIsSavePending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA6EEF01087181EDD | Since: 2189
 * @deprecated Use datafile.loadOfflineUgcForAdditionalDataFile() instead
 */
export declare function datafileLoadOfflineUgcForAdditionalDataFile(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6AD0BD5E087866CB | Since: 2189
 * @deprecated Use datafile.deleteForAdditionalDataFile() instead
 */
export declare function datafileDeleteForAdditionalDataFile(): void;
/**
 * No comment provided
 *
 * Hash: 0xDBF860CF1DB8E599 | Since: 2189
 * @deprecated Use datafile.getFileDictForAdditionalDataFile() instead
 */
export declare function datafileGetFileDictForAdditionalDataFile(): any;
/**
 * No comment provided
 *
 * Hash: 0x35124302A556A325 | Since: 323
 * @deprecated Use datafile.datadictSetBool(key, value) instead
 */
export declare function datadictSetBool(key: string, value: boolean): any;
/**
 * No comment provided
 *
 * Hash: 0xE7E035450A7948D5 | Since: 323
 * @deprecated Use datafile.datadictSetInt(key, value) instead
 */
export declare function datadictSetInt(key: string, value: number): any;
/**
 * No comment provided
 *
 * Hash: 0xC27E1CC2D795105E | Since: 323
 * @deprecated Use datafile.datadictSetFloat(key, value) instead
 */
export declare function datadictSetFloat(key: string, value: number): any;
/**
 * No comment provided
 *
 * Hash: 0x8FF3847DADD8E30C | Since: 323
 * @deprecated Use datafile.datadictSetString(key, value) instead
 */
export declare function datadictSetString(key: string, value: string): any;
/**
 * No comment provided
 *
 * Hash: 0x4CD49B76338C7DEE | Since: 323
 * @deprecated Use datafile.datadictSetVector(key, valueX, valueY, valueZ) instead
 */
export declare function datadictSetVector(key: string, valueX: number, valueY: number, valueZ: number): any;
/**
 * No comment provided
 *
 * Hash: 0xA358F56F10732EE1 | Since: 323
 * @deprecated Use datafile.datadictCreateDict(key) instead
 */
export declare function datadictCreateDict(key: string): [any, any];
/**
 * No comment provided
 *
 * Hash: 0x5B11728527CA6E5F | Since: 323
 * @deprecated Use datafile.datadictCreateArray(key) instead
 */
export declare function datadictCreateArray(key: string): [any, any];
/**
 * No comment provided
 *
 * Hash: 0x1186940ED72FFEEC | Since: 323
 * @deprecated Use datafile.datadictGetBool(key) instead
 */
export declare function datadictGetBool(key: string): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x78F06F6B1FB5A80C | Since: 323
 * @deprecated Use datafile.datadictGetInt(key) instead
 */
export declare function datadictGetInt(key: string): [number, any];
/**
 * No comment provided
 *
 * Hash: 0x06610343E73B9727 | Since: 323
 * @deprecated Use datafile.datadictGetFloat(key) instead
 */
export declare function datadictGetFloat(key: string): [number, any];
/**
 * No comment provided
 *
 * Hash: 0x3D2FD9E763B24472 | Since: 323
 * @deprecated Use datafile.datadictGetString(key) instead
 */
export declare function datadictGetString(key: string): [string, any];
/**
 * No comment provided
 *
 * Hash: 0x46CD3CB66E0825CC | Since: 323
 * @deprecated Use datafile.datadictGetVector(key) instead
 */
export declare function datadictGetVector(key: string): [Vector3, any];
/**
 * No comment provided
 *
 * Hash: 0xB6B9DDC412FCEEE2 | Since: 323
 * @deprecated Use datafile.datadictGetDict(key) instead
 */
export declare function datadictGetDict(key: string): [any, any];
/**
 * No comment provided
 *
 * Hash: 0x7A983AA9DA2659ED | Since: 323
 * @deprecated Use datafile.datadictGetArray(key) instead
 */
export declare function datadictGetArray(key: string): [any, any];
/**
 * Types:
 * 1 = Boolean
 * 2 = Integer
 * 3 = Float
 * 4 = String
 * 5 = Vector3
 * 6 = Object
 * 7 = Array
 *
 * Hash: 0x031C55ED33227371 | Since: 323
 * @deprecated Use datafile.datadictGetType(key) instead
 */
export declare function datadictGetType(key: string): [number, any];
/**
 * No comment provided
 *
 * Hash: 0xF8B0F5A43E928C76 | Since: 323
 * @deprecated Use datafile.dataarrayAddBool(value) instead
 */
export declare function dataarrayAddBool(value: boolean): any;
/**
 * No comment provided
 *
 * Hash: 0xCABDB751D86FE93B | Since: 323
 * @deprecated Use datafile.dataarrayAddInt(value) instead
 */
export declare function dataarrayAddInt(value: number): any;
/**
 * No comment provided
 *
 * Hash: 0x57A995FD75D37F56 | Since: 323
 * @deprecated Use datafile.dataarrayAddFloat(value) instead
 */
export declare function dataarrayAddFloat(value: number): any;
/**
 * No comment provided
 *
 * Hash: 0x2F0661C155AEEEAA | Since: 323
 * @deprecated Use datafile.dataarrayAddString(value) instead
 */
export declare function dataarrayAddString(value: string): any;
/**
 * No comment provided
 *
 * Hash: 0x407F8D034F70F0C2 | Since: 323
 * @deprecated Use datafile.dataarrayAddVector(valueX, valueY, valueZ) instead
 */
export declare function dataarrayAddVector(valueX: number, valueY: number, valueZ: number): any;
/**
 * No comment provided
 *
 * Hash: 0x6889498B3E19C797 | Since: 323
 * @deprecated Use datafile.dataarrayAddDict() instead
 */
export declare function dataarrayAddDict(): [any, any];
/**
 * No comment provided
 *
 * Hash: 0x50C1B2874E50C114 | Since: 323
 * @deprecated Use datafile.dataarrayGetBool(arrayIndex) instead
 */
export declare function dataarrayGetBool(arrayIndex: number): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x3E5AE19425CD74BE | Since: 323
 * @deprecated Use datafile.dataarrayGetInt(arrayIndex) instead
 */
export declare function dataarrayGetInt(arrayIndex: number): [number, any];
/**
 * No comment provided
 *
 * Hash: 0xC0C527B525D7CFB5 | Since: 323
 * @deprecated Use datafile.dataarrayGetFloat(arrayIndex) instead
 */
export declare function dataarrayGetFloat(arrayIndex: number): [number, any];
/**
 * No comment provided
 *
 * Hash: 0xD3F2FFEB8D836F52 | Since: 323
 * @deprecated Use datafile.dataarrayGetString(arrayIndex) instead
 */
export declare function dataarrayGetString(arrayIndex: number): [string, any];
/**
 * No comment provided
 *
 * Hash: 0x8D2064E5B64A628A | Since: 323
 * @deprecated Use datafile.dataarrayGetVector(arrayIndex) instead
 */
export declare function dataarrayGetVector(arrayIndex: number): [Vector3, any];
/**
 * No comment provided
 *
 * Hash: 0x8B5FADCC4E3A145F | Since: 323
 * @deprecated Use datafile.dataarrayGetDict(arrayIndex) instead
 */
export declare function dataarrayGetDict(arrayIndex: number): [any, any];
/**
 * No comment provided
 *
 * Hash: 0x065DB281590CEA2D | Since: 323
 * @deprecated Use datafile.dataarrayGetCount() instead
 */
export declare function dataarrayGetCount(): [number, any];
/**
 * Types:
 * 1 = Boolean
 * 2 = Integer
 * 3 = Float
 * 4 = String
 * 5 = Vector3
 * 6 = Object
 * 7 = Array
 *
 * Hash: 0x3A0014ADB172A3C5 | Since: 323
 * @deprecated Use datafile.dataarrayGetType(arrayIndex) instead
 */
export declare function dataarrayGetType(arrayIndex: number): [number, any];
/**
 * No comment provided
 *
 * Hash: 0x95AED7B8E39ECAA4 | Since: 323
 * @deprecated Use decorator.decorSetTime(entity, propertyName, timestamp) instead
 */
export declare function decorSetTime(entity: number | Entity, propertyName: string, timestamp: number): boolean;
/**
 * This function sets metadata of type bool to specified entity.
 *
 *
 * Hash: 0x6B1E8E2ED1335B71 | Since: 323
 * @deprecated Use decorator.decorSetBool(entity, propertyName, value) instead
 */
export declare function decorSetBool(entity: number | Entity, propertyName: string, value: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x211AB1DD8D0F363A | Since: 323
 * @deprecated Use decorator.decorSetFloat(entity, propertyName, value) instead
 */
export declare function decorSetFloat(entity: number | Entity, propertyName: string, value: number): boolean;
/**
 * Sets property to int.
 *
 * Hash: 0x0CE3AA5E1CA19E10 | Since: 323
 * @deprecated Use decorator.decorSetInt(entity, propertyName, value) instead
 */
export declare function decorSetInt(entity: number | Entity, propertyName: string, value: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDACE671663F2F5DB | Since: 323
 * @deprecated Use decorator.decorGetBool(entity, propertyName) instead
 */
export declare function decorGetBool(entity: number | Entity, propertyName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6524A2F114706F43 | Since: 323
 * @deprecated Use decorator.decorGetFloat(entity, propertyName) instead
 */
export declare function decorGetFloat(entity: number | Entity, propertyName: string): number;
/**
 * No comment provided
 *
 * Hash: 0xA06C969B02A97298 | Since: 323
 * @deprecated Use decorator.decorGetInt(entity, propertyName) instead
 */
export declare function decorGetInt(entity: number | Entity, propertyName: string): number;
/**
 * Returns whether or not the specified property is set for the entity.
 *
 * Hash: 0x05661B80A8C9165F | Since: 323
 * @deprecated Use decorator.decorExistOn(entity, propertyName) instead
 */
export declare function decorExistOn(entity: number | Entity, propertyName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x00EE9F297C738720 | Since: 323
 * @deprecated Use decorator.decorRemove(entity, propertyName) instead
 */
export declare function decorRemove(entity: number | Entity, propertyName: string): boolean;
/**
 * https://alloc8or.re/gta5/doc/enums/eDecorType.txt
 *
 * Hash: 0x9FD90732F56403CE | Since: 323
 * @deprecated Use decorator.decorRegister(propertyName, _type) instead
 */
export declare function decorRegister(propertyName: string, _type: number): void;
/**
 * type: see DECOR_REGISTER
 *
 * Hash: 0x4F14F9F870D6FBC8 | Since: 323
 * @deprecated Use decorator.decorIsRegisteredAsType(propertyName, _type) instead
 */
export declare function decorIsRegisteredAsType(propertyName: string, _type: number): boolean;
/**
 * Called after all decorator type initializations.
 *
 * Hash: 0xA9D14EEA259F9248 | Since: 323
 * @deprecated Use decorator.decorRegisterLock() instead
 */
export declare function decorRegisterLock(): void;
/**
 * No comment provided
 *
 * Hash: 0x241FCA5B1AA14F75 | Since: 323
 * @deprecated Use dlc.areAnyCcsPending() instead
 */
export declare function areAnyCcsPending(): boolean;
/**
 * Returns true if the given DLC pack is present.
 *
 * Hash: 0x812595A0644CE1DE | Since: 323
 * @deprecated Use dlc.isPresent(dlcHash) instead
 */
export declare function isDlcPresent(dlcHash: number | string): boolean;
/**
 * This function is hard-coded to always return 1.
 *
 * Hash: 0xF2E07819EF1A5289 | Since: 323
 * @deprecated Use dlc.checkCloudDataCorrect() instead
 */
export declare function dlcCheckCloudDataCorrect(): boolean;
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0x9489659372A81585 | Since: 323
 * @deprecated Use dlc.getExtracontentCloudResult() instead
 */
export declare function getExtracontentCloudResult(): number;
/**
 * This function is hard-coded to always return 1.
 *
 * Hash: 0xA213B11DFF526300 | Since: 323
 * @deprecated Use dlc.checkCompatPackConfiguration() instead
 */
export declare function dlcCheckCompatPackConfiguration(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8D30F648014A92B5 | Since: 323
 * @deprecated Use dlc.getEverHadBadPackOrder() instead
 */
export declare function getEverHadBadPackOrder(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x10D0A8F259E93EC9 | Since: 323
 * @deprecated Use dlc.getIsLoadingScreenActive() instead
 */
export declare function getIsLoadingScreenActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC4637A6D03C24CC3 | Since: 1734
 * @deprecated Use dlc.getIsInitialLoadingScreenActive() instead
 */
export declare function getIsInitialLoadingScreenActive(): boolean;
/**
 * Sets the value of the specified variable to 0.
 * Always returns true.
 *
 * Hash: 0x46E2B844905BC5F0 | Since: 323
 * @deprecated Use dlc.hasCloudRequestsFinished(unused) instead
 */
export declare function hasCloudRequestsFinished(unused: number): [boolean, boolean];
/**
 * Unloads GROUP_MAP (GTAO/MP) DLC data and loads GROUP_MAP_SP DLC. Neither are loaded by default, ON_ENTER_MP is a cognate to this function and loads MP DLC (and unloads SP DLC by extension).
 * Works in singleplayer.
 *
 * Hash: 0xD7C10C4A637992C9 | Since: 323
 * @deprecated Use dlc.onEnterSp() instead
 */
export declare function onEnterSp(): void;
/**
 * This loads the GTA:O dlc map parts (high end garages, apartments).
 * Works in singleplayer.
 * In order to use GTA:O heist IPL's you have to call this native with the following params: SET_INSTANCE_PRIORITY_MODE(1);
 *
 * Hash: 0x0888C3502DBBEEF5 | Since: 323
 * @deprecated Use dlc.onEnterMp() instead
 */
export declare function onEnterMp(): void;
/**
 * Checks whether an entity exists in the game world.
 *
 * Hash: 0x7239B21A38F536BA | Since: 323
 * @deprecated Use entity.doesExist(entity1) instead
 */
export declare function doesEntityExist(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDDE6DF5AE89981D2 | Since: 323
 * @deprecated Use entity.doesBelongToThisScript(entity1) instead
 */
export declare function doesEntityBelongToThisScript(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x060D6E96F8B8E48D | Since: 323
 * @deprecated Use entity.doesHaveDrawable(entity1) instead
 */
export declare function doesEntityHaveDrawable(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDA95EA3317CC5064 | Since: 323
 * @deprecated Use entity.doesHavePhysics(entity1) instead
 */
export declare function doesEntityHavePhysics(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x764EB96874EFFDC1 | Since: 2699
 * @deprecated Use entity.doesHaveSkeleton(entity1) instead
 */
export declare function doesEntityHaveSkeleton(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2158E81A6AF65EA9 | Since: 2699
 * @deprecated Use entity.doesHaveAnimDirector(entity1) instead
 */
export declare function doesEntityHaveAnimDirector(entity1: number | Entity): boolean;
/**
 * P3 is always 3 as far as i cant tell
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x20B711662962B472 | Since: 323
 * @deprecated Use entity.hasAnimFinished(entity1, animDict, animName) instead
 */
export declare function hasEntityAnimFinished(entity1: number | Entity, animDict: string, animName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x95EB9964FF5C5C65 | Since: 323
 * @deprecated Use entity.hasBeenDamagedByAnyObject(entity1) instead
 */
export declare function hasEntityBeenDamagedByAnyObject(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x605F5A140F202491 | Since: 323
 * @deprecated Use entity.hasBeenDamagedByAnyPed(entity1) instead
 */
export declare function hasEntityBeenDamagedByAnyPed(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDFD5033FDBA0A9C8 | Since: 323
 * @deprecated Use entity.hasBeenDamagedByAnyVehicle(entity1) instead
 */
export declare function hasEntityBeenDamagedByAnyVehicle(entity1: number | Entity): boolean;
/**
 * Entity 1 = Victim
 * Entity 2 = Attacker
 *
 * p2 seems to always be 1
 *
 * Hash: 0xC86D67D52A707CF8 | Since: 323
 * @deprecated Use entity.hasBeenDamagedByEntity(entity1, entity2) instead
 */
export declare function hasEntityBeenDamagedByEntity(entity1: number | Entity, entity2: number | Entity): boolean;
/**
 * traceType is always 17 in the scripts.
 *
 * There is other codes used for traceType:
 * 19 - in jewelry_prep1a
 * 126 - in am_hunt_the_beast
 * 256 & 287 - in fm_mission_controller
 *
 * Hash: 0xFCDFF7B72D23A1AC | Since: 323
 * @deprecated Use entity.hasClearLosToEntity(entity1, entity2, traceType) instead
 */
export declare function hasEntityClearLosToEntity(entity1: number | Entity, entity2: number | Entity, traceType: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x394BDE2A7BBA031E | Since: 1868
 * @deprecated Use entity.hasClearLosToEntityAdjustForCover(entity1, entity2, traceType) instead
 */
export declare function hasEntityClearLosToEntityAdjustForCover(entity1: number | Entity, entity2: number | Entity, traceType: number): boolean;
/**
 * Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
 * This is one of the most CPU demanding BOOL natives in the game; avoid calling this in things like nested for-loops
 *
 * Hash: 0x0267D00AF114F17A | Since: 323
 * @deprecated Use entity.hasClearLosToEntityInFront(entity1, entity2) instead
 */
export declare function hasEntityClearLosToEntityInFront(entity1: number | Entity, entity2: number | Entity): boolean;
/**
 * Called on tick.
 * Tested with vehicles, returns true whenever the vehicle is touching any entity.
 *
 * Note: for vehicles, the wheels can touch the ground and it will still return false, but if the body of the vehicle touches the ground, it will return true.
 *
 * Hash: 0x8BAD02F0368D9E14 | Since: 323
 * @deprecated Use entity.hasCollidedWithAnything(entity1) instead
 */
export declare function hasEntityCollidedWithAnything(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA75EE4F689B85391 | Since: 2802
 * @deprecated Use entity.getLastHitByEntity(entity1) instead
 */
export declare function getLastEntityHitByEntity(entity1: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x5C3D0A935F535C4C | Since: 323
 * @deprecated Use entity.getLastMaterialHitBy(entity1) instead
 */
export declare function getLastMaterialHitByEntity(entity1: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xE465D4AB7CA6AE72 | Since: 323
 * @deprecated Use entity.getCollisionNormalOfLastHitFor(entity1) instead
 */
export declare function getCollisionNormalOfLastHitForEntity(entity1: number | Entity): Vector3;
/**
 * Based on carmod_shop script decompile this takes a vehicle parameter. It is called when repair is done on initial enter.
 *
 * Hash: 0x40FDEDB72F8293B2 | Since: 323
 * @deprecated Use entity.forceAiAndAnimationUpdate(entity1) instead
 */
export declare function forceEntityAiAndAnimationUpdate(entity1: number | Entity): void;
/**
 * Returns a float value representing animation's current playtime with respect to its total playtime. This value increasing in a range from [0 to 1] and wrap back to 0 when it reach 1.
 *
 * Example:
 * 0.000000 - mark the starting of animation.
 * 0.500000 - mark the midpoint of the animation.
 * 1.000000 - mark the end of animation.
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x346D81500D088F42 | Since: 323
 * @deprecated Use entity.getAnimCurrentTime(entity1, animDict, animName) instead
 */
export declare function getEntityAnimCurrentTime(entity1: number | Entity, animDict: string, animName: string): number;
/**
 * Returns a float value representing animation's total playtime in milliseconds.
 *
 * Example:
 * GET_ENTITY_ANIM_TOTAL_TIME(PLAYER_ID(),"amb@world_human_yoga@female@base","base_b")
 * return 20800.000000
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x50BD2730B191E360 | Since: 323
 * @deprecated Use entity.getAnimTotalTime(entity1, animDict, animName) instead
 */
export declare function getEntityAnimTotalTime(entity1: number | Entity, animDict: string, animName: string): number;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0xFEDDF04D62B8D790 | Since: 323
 * @deprecated Use entity.getAnimDuration(animDict, animName) instead
 */
export declare function getAnimDuration(animDict: string, animName: string): number;
/**
 * No comment provided
 *
 * Hash: 0x48C2BED9180FE123 | Since: 323
 * @deprecated Use entity.getAttachedTo(entity1) instead
 */
export declare function getEntityAttachedTo(entity1: number | Entity): number;
/**
 * Gets the current coordinates for a specified entity.
 * `entity` = The entity to get the coordinates from.
 * `alive` = Unused by the game, potentially used by debug builds of GTA in order to assert whether or not an entity was alive.
 *
 * Hash: 0x3FEF770D40960D5A | Since: 323
 * @deprecated Use entity.getCoords(entity1, alive) instead
 */
export declare function getEntityCoords(entity1: number | Entity, alive: boolean): Vector3;
/**
 * Gets the entity's forward vector.
 *
 * Hash: 0x0A794A5A57F8DF91 | Since: 323
 * @deprecated Use entity.getForwardVector(entity1) instead
 */
export declare function getEntityForwardVector(entity1: number | Entity): Vector3;
/**
 * Gets the X-component of the entity's forward vector.
 *
 * Hash: 0x8BB4EF4214E0E6D5 | Since: 323
 * @deprecated Use entity.getForwardX(entity1) instead
 */
export declare function getEntityForwardX(entity1: number | Entity): number;
/**
 * Gets the Y-component of the entity's forward vector.
 *
 * Hash: 0x866A4A5FAE349510 | Since: 323
 * @deprecated Use entity.getForwardY(entity1) instead
 */
export declare function getEntityForwardY(entity1: number | Entity): number;
/**
 * Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
 *
 * Hash: 0xE83D4F9BA2A38914 | Since: 323
 * @deprecated Use entity.getHeading(entity1) instead
 */
export declare function getEntityHeading(entity1: number | Entity): number;
/**
 * Gets the heading of the entity physics in degrees, which tends to be more accurate than just "GET_ENTITY_HEADING". This can be clearly seen while, for example, ragdolling a ped/player.
 *
 * NOTE: The name and description of this native are based on independent research. If you find this native to be more suitable under a different name and/or described differently, please feel free to do so.
 *
 * Hash: 0x846BF6291198A71E | Since: 323
 * @deprecated Use entity.getHeadingFromEulers(entity1) instead
 */
export declare function getEntityHeadingFromEulers(entity1: number | Entity): number;
/**
 * Returns an integer value of entity's current health.
 *
 * Example of range for ped:
 * - Player [0 to 200]
 * - Ped [100 to 200]
 * - Vehicle [0 to 1000]
 * - Object [0 to 1000]
 *
 * Health is actually a float value but this native casts it to int.
 * In order to get the actual value, do:
 * float health = *(float *)(entityAddress + 0x280);
 *
 * Hash: 0xEEF059FAD016D209 | Since: 323
 * @deprecated Use entity.getHealth(entity1) instead
 */
export declare function getEntityHealth(entity1: number | Entity): number;
/**
 * Return an integer value of entity's maximum health.
 *
 * Example:
 * - Player = 200
 * - Ped = 150
 *
 * Hash: 0x15D757606D170C3C | Since: 323
 * @deprecated Use entity.getMaxHealth(entity1) instead
 */
export declare function getEntityMaxHealth(entity1: number | Entity): number;
/**
 * `For instance: ENTITY::SET_ENTITY_MAX_HEALTH(PLAYER::PLAYER_PED_ID(), 200); // director_mode.c4: 67849`
 *
 * Hash: 0x166E7CF68597D8B5 | Since: 323
 * @deprecated Use entity.setMaxHealth(entity1, value) instead
 */
export declare function setEntityMaxHealth(entity1: number | Entity, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5A504562485944DD | Since: 323
 * @deprecated Use entity.getHeight(entity1, pos, atTop, inWorldCoords) instead
 */
export declare function getEntityHeight(entity1: number | Entity, pos: Vector3, atTop: boolean, inWorldCoords: boolean): number;
/**
 * Return height (z-dimension) above ground.
 * Example: The pilot in a titan plane is 1.844176 above ground.
 *
 * How can i convert it to meters?
 * Everything seems to be in meters, probably this too.
 *
 * Hash: 0x1DD55701034110E5 | Since: 323
 * @deprecated Use entity.getHeightAboveGround(entity1) instead
 */
export declare function getEntityHeightAboveGround(entity1: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xECB2FC7235A7D137 | Since: 323
 * @deprecated Use entity.getMatrix(entity1) instead
 */
export declare function getEntityMatrix(entity1: number | Entity): [Vector3, Vector3, Vector3, Vector3];
/**
 * Returns the model hash from the entity
 *
 * Hash: 0x9F47B058362C84B5 | Since: 323
 * @deprecated Use entity.getModel(entity1) instead
 */
export declare function getEntityModel(entity1: number | Entity): number;
/**
 * Converts world coords (posX - Z) to coords relative to the entity
 *
 * Example:
 * posX is given as 50
 * entity's x coord is 40
 * the returned x coord will then be 10 or -10, not sure haven't used this in a while (think it is 10 though).
 *
 * Hash: 0x2274BC1C4885E333 | Since: 323
 * @deprecated Use entity.getOffsetFromGivenWorldCoords(entity1, pos) instead
 */
export declare function getOffsetFromEntityGivenWorldCoords(entity1: number | Entity, pos: Vector3): Vector3;
/**
 * Offset values are relative to the entity.
 *
 * x = left/right
 * y = forward/backward
 * z = up/down
 *
 * Hash: 0x1899F328B0E12848 | Since: 323
 * @deprecated Use entity.getOffsetFromInWorldCoords(entity1, offsetX, offsetY, offsetZ) instead
 */
export declare function getOffsetFromEntityInWorldCoords(entity1: number | Entity, offsetX: number, offsetY: number, offsetZ: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xD45DC2893621E1FE | Since: 323
 * @deprecated Use entity.getPitch(entity1) instead
 */
export declare function getEntityPitch(entity1: number | Entity): number;
/**
 * w is the correct parameter name!
 *
 * Hash: 0x7B3703D2D32DFA18 | Since: 323
 * @deprecated Use entity.getQuaternion(entity1) instead
 */
export declare function getEntityQuaternion(entity1: number | Entity): [number, number, number, number];
/**
 * Displays the current ROLL axis of the entity [-180.0000/180.0000+]
 * (Sideways Roll) such as a vehicle tipped on its side
 *
 * Hash: 0x831E0242595560DF | Since: 323
 * @deprecated Use entity.getRoll(entity1) instead
 */
export declare function getEntityRoll(entity1: number | Entity): number;
/**
 * rotationOrder is the order yaw, pitch and roll is applied. Usually 2. Returns a vector where the Z coordinate is the yaw.
 *
 * rotationOrder refers to the order yaw pitch roll is applied; value ranges from 0 to 5 and is usually *2* in scripts.
 * What you use for rotationOrder when getting must be the same as rotationOrder when setting the rotation.
 *
 * What it returns is the yaw on the z part of the vector, which makes sense considering R* considers z as vertical. Here's a picture for those of you who don't understand pitch, yaw, and roll: www.allstar.fiu.edu/aero/images/pic5-1.gif
 *
 * Rotation Orders:
 * 0: ZYX - Rotate around the z-axis, then the y-axis and finally the x-axis.
 * 1: YZX - Rotate around the y-axis, then the z-axis and finally the x-axis.
 * 2: ZXY - Rotate around the z-axis, then the x-axis and finally the y-axis.
 * 3: XZY - Rotate around the x-axis, then the z-axis and finally the y-axis.
 * 4: YXZ - Rotate around the y-axis, then the x-axis and finally the z-axis.
 * 5: XYZ - Rotate around the x-axis, then the y-axis and finally the z-axis.
 *
 * Hash: 0xAFBD61CC738D9EB9 | Since: 323
 * @deprecated Use entity.getRotation(entity1, rotationOrder) instead
 */
export declare function getEntityRotation(entity1: number | Entity, rotationOrder: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x213B91045D09B983 | Since: 323
 * @deprecated Use entity.getRotationVelocity(entity1) instead
 */
export declare function getEntityRotationVelocity(entity1: number | Entity): Vector3;
/**
 * Returns the name of the script that owns/created the entity or nullptr. Second parameter is unused, can just be a nullptr.
 *
 * Hash: 0xA6E9C38DB51D7748 | Since: 323
 * @deprecated Use entity.getScript(entity1) instead
 */
export declare function getEntityScript(entity1: number | Entity): [string, number];
/**
 * result is in meters per second
 *
 * ------------------------------------------------------------
 * So would the conversion to mph and km/h, be along the lines of this.
 *
 * float speed = GET_ENTITY_SPEED(veh);
 * float kmh = (speed * 3.6);
 * float mph = (speed * 2.236936);
 * ------------------------------------------------------------
 *
 * Hash: 0xD5037BA82E12416F | Since: 323
 * @deprecated Use entity.getSpeed(entity1) instead
 */
export declare function getEntitySpeed(entity1: number | Entity): number;
/**
 * Relative can be used for getting speed relative to the frame of the vehicle, to determine for example, if you are going in reverse (-y speed) or not (+y speed).
 *
 * Hash: 0x9A8D700A51CB7B0D | Since: 323
 * @deprecated Use entity.getSpeedVector(entity1, relative) instead
 */
export declare function getEntitySpeedVector(entity1: number | Entity, relative: boolean): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x95EED5A694951F9F | Since: 323
 * @deprecated Use entity.getUprightValue(entity1) instead
 */
export declare function getEntityUprightValue(entity1: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x4805D2B1D8CF94A9 | Since: 323
 * @deprecated Use entity.getVelocity(entity1) instead
 */
export declare function getEntityVelocity(entity1: number | Entity): Vector3;
/**
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 *
 * Hash: 0xD7E3B9735C0F89D6 | Since: 323
 * @deprecated Use entity.getObjectIndexFromIndex(entity1) instead
 */
export declare function getObjectIndexFromEntityIndex(entity1: number | Entity): number;
/**
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 *
 * Hash: 0x04A2A40C73395041 | Since: 323
 * @deprecated Use entity.getPedIndexFromIndex(entity1) instead
 */
export declare function getPedIndexFromEntityIndex(entity1: number | Entity): number;
/**
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 *
 * Hash: 0x4B53F92932ADFAC0 | Since: 323
 * @deprecated Use entity.getVehicleIndexFromIndex(entity1) instead
 */
export declare function getVehicleIndexFromEntityIndex(entity1: number | Entity): number;
/**
 * Returns the coordinates of an entity-bone.
 *
 * Hash: 0x44A8FCB8ED227738 | Since: 323
 * @deprecated Use entity.getWorldPositionOfBone(entity1, boneIndex) instead
 */
export declare function getWorldPositionOfEntityBone(entity1: number | Entity, boneIndex: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x7196842CB375CDB3 | Since: 323
 * @deprecated Use entity.getNearestPlayerTo(entity1) instead
 */
export declare function getNearestPlayerToEntity(entity1: number | Entity): number | string;
/**
 * No comment provided
 *
 * Hash: 0x4DC9A62F844D9337 | Since: 323
 * @deprecated Use entity.getNearestPlayerToOnTeam(entity1, team) instead
 */
export declare function getNearestPlayerToEntityOnTeam(entity1: number | Entity, team: number): number | string;
/**
 * No comment provided
 *
 * Hash: 0xFFBD7052D65BE0FF | Since: 2944
 * @deprecated Use entity.getNearestParticipantTo(entity1) instead
 */
export declare function getNearestParticipantToEntity(entity1: number | Entity): number;
/**
 * Returns:
 * 0 = no entity
 * 1 = ped
 * 2 = vehicle
 * 3 = object
 *
 * Hash: 0x8ACD366038D14505 | Since: 323
 * @deprecated Use entity.getType(entity1) instead
 */
export declare function getEntityType(entity1: number | Entity): number;
/**
 * A population type, from the following enum: https://alloc8or.re/gta5/doc/enums/ePopulationType.txt
 *
 * Hash: 0xF6F5161F4534EDFF | Since: 323
 * @deprecated Use entity.getPopulationType(entity1) instead
 */
export declare function getEntityPopulationType(entity1: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x731EC8A916BD11A1 | Since: 323
 * @deprecated Use entity.isAn(handle) instead
 */
export declare function isAnEntity(handle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x524AC5ECEA15343E | Since: 323
 * @deprecated Use entity.isAPed(entity1) instead
 */
export declare function isEntityAPed(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0A7B270912999B3C | Since: 323
 * @deprecated Use entity.isAMissionEntity(entity1) instead
 */
export declare function isEntityAMissionEntity(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6AC7003FA6E5575E | Since: 323
 * @deprecated Use entity.isAVehicle(entity1) instead
 */
export declare function isEntityAVehicle(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8D68C8FD0FACA94E | Since: 323
 * @deprecated Use entity.isAnObject(entity1) instead
 */
export declare function isEntityAnObject(entity1: number | Entity): boolean;
/**
 * Checks if entity is within x/y/zSize distance of x/y/z.
 *
 * Last three are unknown ints, almost always p7 = 0, p8 = 1, p9 = 0
 *
 * Hash: 0x20B60995556D004F | Since: 323
 * @deprecated Use entity.isAtCoord(entity1, pos, xSize, ySize, zSize) instead
 */
export declare function isEntityAtCoord(entity1: number | Entity, pos: Vector3, xSize: number, ySize: number, zSize: number): boolean;
/**
 * Checks if entity1 is within the box defined by x/y/zSize of entity2.
 *
 * Last three parameters are almost alwasy p5 = 0, p6 = 1, p7 = 0
 *
 * Hash: 0x751B70C3D034E187 | Since: 323
 * @deprecated Use entity.isAtEntity(entity1, entity2, xSize, ySize, zSize) instead
 */
export declare function isEntityAtEntity(entity1: number | Entity, entity2: number | Entity, xSize: number, ySize: number, zSize: number): boolean;
/**
 * Whether the entity is attached to any other entity.
 *
 * Hash: 0xB346476EF1A64897 | Since: 323
 * @deprecated Use entity.isAttached(entity1) instead
 */
export declare function isEntityAttached(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCF511840CEEDE0CC | Since: 323
 * @deprecated Use entity.isAttachedToAnyObject(entity1) instead
 */
export declare function isEntityAttachedToAnyObject(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB1632E9A5F988D11 | Since: 323
 * @deprecated Use entity.isAttachedToAnyPed(entity1) instead
 */
export declare function isEntityAttachedToAnyPed(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x26AA915AD89BFB4B | Since: 323
 * @deprecated Use entity.isAttachedToAnyVehicle(entity1) instead
 */
export declare function isEntityAttachedToAnyVehicle(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEFBE71898A993728 | Since: 323
 * @deprecated Use entity.isAttachedToEntity(_from, to) instead
 */
export declare function isEntityAttachedToEntity(_from: number | Entity, to: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5F9532F3B5CC2551 | Since: 323
 * @deprecated Use entity.isDead(entity1) instead
 */
export declare function isEntityDead(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x886E37EC497200B6 | Since: 323
 * @deprecated Use entity.isInAir(entity1) instead
 */
export declare function isEntityInAir(entity1: number | Entity): boolean;
/**
 * `p8` is a debug flag invoking functions in the same path as ``DRAW_MARKER``
 * `p10` is some entity flag check, also used in `IS_ENTITY_AT_ENTITY`, `IS_ENTITY_IN_AREA`, and `IS_ENTITY_AT_COORD`.
 * See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
 *
 * Hash: 0x51210CED3DA1C78A | Since: 323
 * @deprecated Use entity.isInAngledArea(entity1, x1, y1, z1, x2, y2, z2, width, debug, includeZ) instead
 */
export declare function isEntityInAngledArea(entity1: number | Entity, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, debug: boolean, includeZ: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x54736AA40E271165 | Since: 323
 * @deprecated Use entity.isInArea(entity1, x1, y1, z1, x2, y2, z2) instead
 */
export declare function isEntityInArea(entity1: number | Entity, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * Full list of zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/zones.json
 *
 * Hash: 0xB6463CF6AF527071 | Since: 323
 * @deprecated Use entity.isInZone(entity1, zone) instead
 */
export declare function isEntityInZone(entity1: number | Entity, zone: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCFB0A0D8EDD145A3 | Since: 323
 * @deprecated Use entity.isInWater(entity1) instead
 */
export declare function isEntityInWater(entity1: number | Entity): boolean;
/**
 * Get how much of the entity is submerged.  1.0f is whole entity.
 *
 * Hash: 0xE81AFC1BC4CC41CE | Since: 323
 * @deprecated Use entity.getSubmergedLevel(entity1) instead
 */
export declare function getEntitySubmergedLevel(entity1: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x694E00132F2823ED | Since: 323
 * @deprecated Use entity.setRequiresMoreExpensiveRiverCheck(entity1, toggle) instead
 */
export declare function setEntityRequiresMoreExpensiveRiverCheck(entity1: number | Entity, toggle: boolean): void;
/**
 * Returns true if the entity is in between the minimum and maximum values for the 2d screen coords.
 * This means that it will return true even if the entity is behind a wall for example, as long as you're looking at their location.
 * Chipping
 *
 * Hash: 0xE659E47AF827484B | Since: 323
 * @deprecated Use entity.isOnScreen(entity1) instead
 */
export declare function isEntityOnScreen(entity1: number | Entity): boolean;
/**
 * `See also PED::IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM 0x6EC47A344923E1ED 0x3C30B447`
 *
 * `Taken from ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "creatures@shark@move", "attack_player", 3)`
 *
 * p4 is always 3 in the scripts.
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x1F0B79228E461EC9 | Since: 323
 * @deprecated Use entity.isPlayingAnim(entity1, animDict, animName, taskFlag) instead
 */
export declare function isEntityPlayingAnim(entity1: number | Entity, animDict: string, animName: string, taskFlag: number): boolean;
/**
 * `a static ped will not react to natives like "APPLY_FORCE_TO_ENTITY" or "SET_ENTITY_VELOCITY" and oftentimes will not react to task-natives like "TASK::TASK_COMBAT_PED". The only way I know of to make one of these peds react is to ragdoll them (or sometimes to use CLEAR_PED_TASKS_IMMEDIATELY(). Static peds include almost all far-away peds, beach-combers, peds in certain scenarios, peds crossing a crosswalk, peds walking to get back into their cars, and others. If anyone knows how to make a ped non-static without ragdolling them, please edit this with the solution.`
 *
 * Hash: 0x1218E6886D3D8327 | Since: 323
 * @deprecated Use entity.isStatic(entity1) instead
 */
export declare function isEntityStatic(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x17FFC1B2BA35A494 | Since: 323
 * @deprecated Use entity.isTouchingEntity(entity1, targetEntity) instead
 */
export declare function isEntityTouchingEntity(entity1: number | Entity, targetEntity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0F42323798A58C8C | Since: 323
 * @deprecated Use entity.isTouchingModel(entity1, modelHash) instead
 */
export declare function isEntityTouchingModel(entity1: number | Entity, modelHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5333F526F6AB19AA | Since: 323
 * @deprecated Use entity.isUpright(entity1, angle) instead
 */
export declare function isEntityUpright(entity1: number | Entity, angle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1DBD58820FA61D71 | Since: 323
 * @deprecated Use entity.isUpsidedown(entity1) instead
 */
export declare function isEntityUpsidedown(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x47D6F43D77935C75 | Since: 323
 * @deprecated Use entity.isVisible(entity1) instead
 */
export declare function isEntityVisible(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD796CB5BA8F20E32 | Since: 323
 * @deprecated Use entity.isVisibleToScript(entity1) instead
 */
export declare function isEntityVisibleToScript(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE31C2C72B8692B64 | Since: 323
 * @deprecated Use entity.isOccluded(entity1) instead
 */
export declare function isEntityOccluded(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEE5D2A122E09EC42 | Since: 323
 * @deprecated Use entity.wouldBeOccluded(entityModelHash, pos) instead
 */
export declare function wouldEntityBeOccluded(entityModelHash: number | string, pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD05BFF0C0A12C68F | Since: 323
 * @deprecated Use entity.isWaitingForWorldCollision(entity1) instead
 */
export declare function isEntityWaitingForWorldCollision(entity1: number | Entity): boolean;
/**
 * Applies a force to the specified entity.
 *
 * **List of force types (p1)**:
 * public enum ForceType
 * {
 * MinForce = 0,
 * MaxForceRot = 1,
 * MinForce2 = 2,
 * MaxForceRot2 = 3,
 * ForceNoRot = 4,
 * ForceRotPlusForce = 5
 * }
 * Research/documentation on the gtaforums can be found here https://gtaforums.com/topic/885669-precisely-define-object-physics/) and here https://gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/.
 *
 * p6/relative - makes the xyz force not relative to world coords, but to something else
 * p7/highForce - setting false will make the force really low
 *
 * Hash: 0x18FF00FC7EFF559E | Since: 323
 * @deprecated Use entity.applyForceToCenterOfMass(entity1, forceType, pos, isDirectionRel, isForceRel) instead
 */
export declare function applyForceToEntityCenterOfMass(entity1: number | Entity, forceType: number, pos: Vector3, isDirectionRel: boolean, isForceRel: boolean): void;
/**
 * Documented here:
 * gtaforums.com/topic/885669-precisely-define-object-physics/
 * gtaforums.com/topic/887362-apply-forces-and-momentums-to-entityobject/
 *
 * forceFlags:
 * First bit (lowest): Strong force flag, factor 100
 * Second bit: Unkown flag
 * Third bit: Momentum flag=1 (vector (x,y,z) is a momentum, more research needed)
 * If higher bits are unequal 0 the function doesn't applay any forces at all.
 * (As integer possible values are 0-7)
 *
 * 0: weak force
 * 1: strong force
 * 2: same as 0 (2nd bit?)
 * 3: same as 1
 * 4: weak momentum
 * 5: strong momentum
 * 6: same as 4
 * 7: same as 5
 *
 * isLocal: vector defined in local (body-fixed) coordinate frame
 * isMassRel: if true the force gets multiplied with the objects mass (this is why it was known as highForce) and different objects will have the same acceleration.
 *
 * p8 !!! Whenever I set this !=0, my script stopped.
 *
 * Hash: 0xC5F68BE9613E2D18 | Since: 323
 * @deprecated Use entity.applyForceTo(entity1, forceFlags, pos, offX, offY, offZ, boneIndex, isDirectionRel, ignoreUpVec, isForceRel) instead
 */
export declare function applyForceToEntity(entity1: number | Entity, forceFlags: number, pos: Vector3, offX: number, offY: number, offZ: number, boneIndex: number, isDirectionRel: boolean, ignoreUpVec: boolean, isForceRel: boolean): void;
/**
 * Attaches entity1 to bone (boneIndex) of entity2.
 *
 * boneIndex - this is different to boneID, use GET_PED_BONE_INDEX to get the index from the ID. use the index for attaching to specific bones. entity1 will be attached to entity2's centre if bone index given doesn't correspond to bone indexes for that entity type.
 *
 * useSoftPinning - if set to false attached entity will not detach when fixed
 * collision - controls collision between the two entities (FALSE disables collision).
 * isPed - pitch doesnt work when false and roll will only work on negative numbers (only peds)
 * vertexIndex - position of vertex
 * fixedRot - if false it ignores entity vector
 *
 *
 * Hash: 0x6B9BBD38AB0796DF | Since: 323
 * @deprecated Use entity.attachToEntity(entity1, entity2, boneIndex, pos, rot, useSoftPinning, collision, isPed, vertexIndex, fixedRot) instead
 */
export declare function attachEntityToEntity(entity1: number | Entity, entity2: number | Entity, boneIndex: number, pos: Vector3, rot: Vector3, useSoftPinning: boolean, collision: boolean, isPed: boolean, vertexIndex: number, fixedRot: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x5C48B75732C8456C | Since: 791
 * @deprecated Use entity.attachBoneToEntityBone(entity1, entity2, boneIndex1, boneIndex2) instead
 */
export declare function attachEntityBoneToEntityBone(entity1: number | Entity, entity2: number | Entity, boneIndex1: number, boneIndex2: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFD1695C5D3B05439 | Since: 791
 * @deprecated Use entity.attachBoneToEntityBoneYForward(entity1, entity2, boneIndex1, boneIndex2) instead
 */
export declare function attachEntityBoneToEntityBoneYForward(entity1: number | Entity, entity2: number | Entity, boneIndex1: number, boneIndex2: number): void;
/**
 * breakForce is the amount of force required to break the bond.
 * p14 - is always 1 in scripts
 * p15 - is 1 or 0 in scripts - unknoun what it does
 * p16 - controls collision between the two entities (FALSE disables collision).
 * p17 - do not teleport entity to be attached to the position of the bone Index of the target entity (if 1, entity will not be teleported to target bone)
 * p18 - is always 2 in scripts.
 *
 *
 *
 * Hash: 0xC3675780C92F90F9 | Since: 323
 * @deprecated Use entity.attachToEntityPhysically(entity1, entity2, boneIndex1, boneIndex2, xPos1, yPos1, zPos1, xPos2, yPos2, zPos2, rot, breakForce, fixedRot, collision) instead
 */
export declare function attachEntityToEntityPhysically(entity1: number | Entity, entity2: number | Entity, boneIndex1: number, boneIndex2: number, xPos1: number, yPos1: number, zPos1: number, xPos2: number, yPos2: number, zPos2: number, rot: Vector3, breakForce: number, fixedRot: boolean, collision: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x168A09D1B25B0BA4 | Since: 2944
 * @deprecated Use entity.attachToEntityPhysicallyOverrideInverseMass(firstEntityIndex, secondEntityIndex, firstEntityBoneIndex, secondEntityBoneIndex, secondEntityOffsetX, secondEntityOffsetY, secondEntityOffsetZ, firstEntityOffsetX, firstEntityOffsetY, firstEntityOffsetZ, vecRotationX, vecRotationY, vecRotationZ, physicalStrength, constrainRotation, doInitialWarp, collideWithEntity, addInitialSeperation, rotOrder, invMassScaleA, invMassScaleB) instead
 */
export declare function attachEntityToEntityPhysicallyOverrideInverseMass(firstEntityIndex: number | Entity, secondEntityIndex: number | Entity, firstEntityBoneIndex: number, secondEntityBoneIndex: number, secondEntityOffsetX: number, secondEntityOffsetY: number, secondEntityOffsetZ: number, firstEntityOffsetX: number, firstEntityOffsetY: number, firstEntityOffsetZ: number, vecRotationX: number, vecRotationY: number, vecRotationZ: number, physicalStrength: number, constrainRotation: boolean, doInitialWarp: boolean, collideWithEntity: boolean, addInitialSeperation: boolean, rotOrder: number, invMassScaleA: number, invMassScaleB: number): void;
/**
 * Called to update entity attachments.
 *
 * Hash: 0xF4080490ADC51C6F | Since: 323
 * @deprecated Use entity.processAttachments(entity1) instead
 */
export declare function processEntityAttachments(entity1: number | Entity): void;
/**
 * Returns the index of the bone. If the bone was not found, -1 will be returned.
 *
 * list:
 * https://pastebin.com/D7JMnX1g
 *
 * BoneNames:
 * chassis,
 * windscreen,
 * seat_pside_r,
 * seat_dside_r,
 * bodyshell,
 * suspension_lm,
 * suspension_lr,
 * platelight,
 * attach_female,
 * attach_male,
 * bonnet,
 * boot,
 * chassis_dummy,  //Center of the dummy
 * chassis_Control,    //Not found yet
 * door_dside_f,   //Door left, front
 * door_dside_r,   //Door left, back
 * door_pside_f,   //Door right, front
 * door_pside_r,   //Door right, back
 * Gun_GripR,
 * windscreen_f,
 * platelight, //Position where the light above the numberplate is located
 * VFX_Emitter,
 * window_lf,  //Window left, front
 * window_lr,  //Window left, back
 * window_rf,  //Window right, front
 * window_rr,  //Window right, back
 * engine, //Position of the engine
 * gun_ammo,
 * ROPE_ATTATCH,   //Not misspelled. In script "finale_heist2b.c4".
 * wheel_lf,   //Wheel left, front
 * wheel_lr,   //Wheel left, back
 * wheel_rf,   //Wheel right, front
 * wheel_rr,   //Wheel right, back
 * exhaust,    //Exhaust. shows only the position of the stock-exhaust
 * overheat,   //A position on the engine(not exactly sure, how to name it)
 * misc_e, //Not a car-bone.
 * seat_dside_f,   //Driver-seat
 * seat_pside_f,   //Seat next to driver
 * Gun_Nuzzle,
 * seat_r
 *
 * I doubt that the function is case-sensitive, since I found a "Chassis" and a "chassis". - Just tested: Definitely not case-sensitive.
 *
 *
 *
 * Hash: 0xFB71170B7E76ACBA | Since: 323
 * @deprecated Use entity.getBoneIndexByName(entity1, boneName) instead
 */
export declare function getEntityBoneIndexByName(entity1: number | Entity, boneName: string): number;
/**
 * No comment provided
 *
 * Hash: 0xA72CD9CA74A5ECBA | Since: 323
 * @deprecated Use entity.clearLastDamageEntity(entity1) instead
 */
export declare function clearEntityLastDamageEntity(entity1: number | Entity): void;
/**
 * Deletes the specified entity, then sets the handle pointed to by the pointer to NULL.
 *
 * Hash: 0xAE3CBE5BF394C9C9 | Since: 323
 * @deprecated Use entity.deleteEntity(entity1) instead
 */
export declare function deleteEntity(entity1: number | Entity): void;
/**
 * If `collision` is set to true, both entities won't collide with the other until the distance between them is above 4 meters.
 * Set `dynamic` to true to keep velocity after dettaching
 *
 * Hash: 0x961AC54BF0613F5D | Since: 323
 * @deprecated Use entity.detach(entity1, dynamic, collision) instead
 */
export declare function detachEntity(entity1: number | Entity, dynamic: boolean, collision: boolean): void;
/**
 * Freezes or unfreezes an entity preventing its coordinates to change by the player if set to `true`. You can still change the entity position using SET_ENTITY_COORDS.
 *
 * Hash: 0x428CA6DBD1094446 | Since: 323
 * @deprecated Use entity.freezePosition(entity1, toggle) instead
 */
export declare function freezeEntityPosition(entity1: number | Entity, toggle: boolean): void;
/**
 * True means it can be deleted by the engine when switching lobbies/missions/etc, false means the script is expected to clean it up.
 *
 * "Allow Freeze If No Collision"
 *
 * Hash: 0x3910051CCECDB00C | Since: 323
 * @deprecated Use entity.setShouldFreezeWaitingOnCollision(entity1, toggle) instead
 */
export declare function setEntityShouldFreezeWaitingOnCollision(entity1: number | Entity, toggle: boolean): void;
/**
 * delta and bitset are guessed fields. They are based on the fact that most of the calls have 0 or nil field types passed in.
 *
 * The only time bitset has a value is 0x4000 and the only time delta has a value is during stealth with usually <1.0f values.
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x7FB218262B810701 | Since: 323
 * @deprecated Use entity.playAnim(entity1, animName, animDict, loop, stayInAnim, delta, bitset) instead
 */
export declare function playEntityAnim(entity1: number | Entity, animName: string, animDict: string, loop: boolean, stayInAnim: boolean, delta: number, bitset: any): boolean;
/**
 * p4 and p7 are usually 1000.0f.
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0xC77720A12FE14A86 | Since: 323
 * @deprecated Use entity.playSynchronizedAnim(entity1, syncedScene, animation, propName) instead
 */
export declare function playSynchronizedEntityAnim(entity1: number | Entity, syncedScene: number, animation: string, propName: string): boolean;
/**
 * p6,p7 probably animname and animdict
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0xB9C54555ED30FBC4 | Since: 323
 * @deprecated Use entity.playSynchronizedMapAnim(x1, y1, z1, x2, y2, z2) instead
 */
export declare function playSynchronizedMapEntityAnim(x1: number, y1: number, z1: number, x2: number, y2: any, z2: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x11E79CAB7183B6F5 | Since: 323
 * @deprecated Use entity.stopSynchronizedMapAnim(x1, y1, z1, x2, y2, z2) instead
 */
export declare function stopSynchronizedMapEntityAnim(x1: number, y1: number, z1: number, x2: number, y2: any, z2: number): boolean;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * RAGEPluginHook list: docs.ragepluginhook.net/html/62951c37-a440-478c-b389-c471230ddfc5.htm
 *
 * Hash: 0x28004F88151E03E0 | Since: 323
 * @deprecated Use entity.stopAnim(entity1, animation, animGroup) instead
 */
export declare function stopEntityAnim(entity1: number | Entity, animation: string, animGroup: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x43D3807C077261E3 | Since: 323
 * @deprecated Use entity.stopSynchronizedAnim(entity1) instead
 */
export declare function stopSynchronizedEntityAnim(entity1: number | Entity): boolean;
/**
 * `if (ENTITY::HAS_ANIM_EVENT_FIRED(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("CreateObject")))`
 *
 * Hash: 0xEAF4CD9EA3E7E922 | Since: 323
 * @deprecated Use entity.hasAnimEventFired(entity1, actionHash) instead
 */
export declare function hasAnimEventFired(entity1: number | Entity, actionHash: number | string): boolean;
/**
 * In the script "player_scene_t_bbfight.c4":
 * `"if (ENTITY::FIND_ANIM_EVENT_PHASE(&l_16E, &l_19F[v_4\/\*16\*\/], v_9, &v_A, &v_B))"`
 * -- &l_16E (p0) is requested as an anim dictionary earlier in the script.
 * -- &l_19F[v_4\/\*16\*\/] (p1) is used in other natives in the script as the "animation" param.
 * -- v_9 (p2) is instantiated as "victim_fall"; I'm guessing that's another anim
 * --v_A and v_B (p3 & p4) are both set as -1.0, but v_A is used immediately after this native for:
 * `"if (v_A < ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(...))"`
 * Both v_A and v_B are seemingly used to contain both Vector3's and floats, so I can't say what either really is other than that they are both output parameters. p4 looks more like a *Vector3 though
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x07F1BE2BCCAA27A7 | Since: 323
 * @deprecated Use entity.findAnimEventPhase(animDictionary, animName) instead
 */
export declare function findAnimEventPhase(animDictionary: string, animName: string): [boolean, any, any];
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x4487C259F0F70977 | Since: 323
 * @deprecated Use entity.setAnimCurrentTime(entity1, animDictionary, animName, time) instead
 */
export declare function setEntityAnimCurrentTime(entity1: number | Entity, animDictionary: string, animName: string, time: number): void;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x28D1A16553C51776 | Since: 323
 * @deprecated Use entity.setAnimSpeed(entity1, animDictionary, animName, speedMultiplier) instead
 */
export declare function setEntityAnimSpeed(entity1: number | Entity, animDictionary: string, animName: string, speedMultiplier: number): void;
/**
 * Makes the specified entity (ped, vehicle or object) persistent. Persistent entities will not automatically be removed by the engine.
 *
 * p1 has no effect when either its on or off
 * maybe a quick disassembly will tell us what it does
 *
 * p2 has no effect when either its on or off
 * maybe a quick disassembly will tell us what it does
 *
 * Hash: 0xAD738C3085FE7E11 | Since: 323
 * @deprecated Use entity.setAsMissionEntity(entity1) instead
 */
export declare function setEntityAsMissionEntity(entity1: number | Entity): void;
/**
 * Marks the specified entity (ped, vehicle or object) as no longer needed if its population type is set to the mission type.
 * If the entity is ped, it will also clear their tasks immediately just like when CLEAR_PED_TASKS_IMMEDIATELY is called.
 * Entities marked as no longer needed, will be deleted as the engine sees fit.
 * Use this if you just want to just let the game delete the ped:
 * void MarkPedAsAmbientPed(Ped ped) {
 * auto addr = getScriptHandleBaseAddress(ped);
 *
 * if (!addr) {
 * return;
 * }
 *
 * //the game uses only lower 4 bits as entity population type
 * BYTE origValue = *(BYTE *)(addr + 0xDA);
 * `*(BYTE *)(addr + 0xDA) = ((origValue & 0xF0) | ePopulationType::POPTYPE_RANDOM_AMBIENT);`
 * }
 *
 * Hash: 0xB736A491E64A32CF | Since: 323
 * @deprecated Use entity.setAsNoLongerNeeded(entity) instead
 */
export declare function setEntityAsNoLongerNeeded(entity: number | Entity): void;
/**
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 *
 * Hash: 0x2595DD4236549CE3 | Since: 323
 * @deprecated Use entity.setPedAsNoLongerNeeded(ped) instead
 */
export declare function setPedAsNoLongerNeeded(ped: number | Ped): void;
/**
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 *
 * Hash: 0x629BFA74418D6239 | Since: 323
 * @deprecated Use entity.setVehicleAsNoLongerNeeded(vehicle) instead
 */
export declare function setVehicleAsNoLongerNeeded(vehicle: number | Vehicle): void;
/**
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 *
 * Hash: 0x3AE22DEB5BA5A3E6 | Since: 323
 * @deprecated Use entity.setObjectAsNoLongerNeeded(obj) instead
 */
export declare function setObjectAsNoLongerNeeded(obj: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x1760FFA8AB074D66 | Since: 323
 * @deprecated Use entity.setCanBeDamaged(entity1, toggle) instead
 */
export declare function setEntityCanBeDamaged(entity1: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD95CC5D2AB15A09F | Since: 757
 * @deprecated Use entity.getCanBeDamaged(entity1) instead
 */
export declare function getEntityCanBeDamaged(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE22D8FDE858B8119 | Since: 323
 * @deprecated Use entity.setCanBeDamagedByRelationshipGroup(entity1, bCanBeDamaged, relGroup) instead
 */
export declare function setEntityCanBeDamagedByRelationshipGroup(entity1: number | Entity, bCanBeDamaged: boolean, relGroup: number): void;
/**
 * No comment provided
 *
 * Hash: 0x352E2B5CF420BF3B | Since: 573
 * @deprecated Use entity.setCanOnlyBeDamagedByScriptParticipants(entity1, toggle) instead
 */
export declare function setEntityCanOnlyBeDamagedByScriptParticipants(entity1: number | Entity, toggle: boolean): void;
/**
 * Sets whether the entity can be targeted without being in line-of-sight.
 *
 * Hash: 0xD3997889736FD899 | Since: 323
 * @deprecated Use entity.setCanBeTargetedWithoutLos(entity1, toggle) instead
 */
export declare function setEntityCanBeTargetedWithoutLos(entity1: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1A9205C1B9EE827F | Since: 323
 * @deprecated Use entity.setCollision(entity1, toggle, keepPhysics) instead
 */
export declare function setEntityCollision(entity1: number | Entity, toggle: boolean, keepPhysics: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCCF1E97BEFDAE480 | Since: 323
 * @deprecated Use entity.getCollisionDisabled(entity1) instead
 */
export declare function getEntityCollisionDisabled(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9EBC85ED0FFFE51C | Since: 323
 * @deprecated Use entity.setCompletelyDisableCollision(entity1, toggle, keepPhysics) instead
 */
export declare function setEntityCompletelyDisableCollision(entity1: number | Entity, toggle: boolean, keepPhysics: boolean): void;
/**
 * p7 is always 1 in the scripts. Set to 1, an area around the destination coords for the moved entity is cleared from other entities.
 *
 * Often ends with 1, 0, 0, 1); in the scripts. It works.
 *
 * Axis - Invert Axis Flags
 *
 * Hash: 0x06843DA7060A026B | Since: 323
 * @deprecated Use entity.setCoords(entity1, pos, xAxis, yAxis, zAxis, clearArea) instead
 */
export declare function setEntityCoords(entity1: number | Entity, pos: Vector3, xAxis: boolean, yAxis: boolean, zAxis: boolean, clearArea: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x621873ECE1178967 | Since: 323
 * @deprecated Use entity.setCoordsWithoutPlantsReset(entity1, pos, alive, deadFlag, ragdollFlag, clearArea) instead
 */
export declare function setEntityCoordsWithoutPlantsReset(entity1: number | Entity, pos: Vector3, alive: boolean, deadFlag: boolean, ragdollFlag: boolean, clearArea: boolean): void;
/**
 * Axis - Invert Axis Flags
 *
 * Hash: 0x239A3351AC1DA385 | Since: 323
 * @deprecated Use entity.setCoordsNoOffset(entity1, pos, xAxis, yAxis, zAxis) instead
 */
export declare function setEntityCoordsNoOffset(entity1: number | Entity, pos: Vector3, xAxis: boolean, yAxis: boolean, zAxis: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1718DE8E3F2823CA | Since: 323
 * @deprecated Use entity.setDynamic(entity1, toggle) instead
 */
export declare function setEntityDynamic(entity1: number | Entity, toggle: boolean): void;
/**
 * Set the heading of an entity in degrees also known as "Yaw".
 *
 * Hash: 0x8E2530AA8ADA980E | Since: 323
 * @deprecated Use entity.setHeading(entity1, heading) instead
 */
export declare function setEntityHeading(entity1: number | Entity, heading: number): void;
/**
 * health >= 0
 * male ped ~= 100 - 200
 * female ped ~= 0 - 100
 *
 * Hash: 0x6B76DC1F3AE6E6A3 | Since: 323
 * @deprecated Use entity.setHealth(entity1, health, instigator, weaponType) instead
 */
export declare function setEntityHealth(entity1: number | Entity, health: number, instigator: number | Entity, weaponType: number | string): void;
/**
 * Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions and the tazer animation won't apply either.
 *
 * If you use this for a ped and you want Ragdoll to stay enabled, then do:
 * *(DWORD *)(pedAddress + 0x188) |= (1 << 9);
 *
 * Use this if you want to get the invincibility status:
 * bool IsPedInvincible(Ped ped)
 * {
 * auto addr = getScriptHandleBaseAddress(ped);
 *
 * if (addr)
 * {
 * DWORD flag = *(DWORD *)(addr + 0x188);
 * return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);
 * }
 *
 * return false;
 * }
 *
 * Hash: 0x3882114BDE571AD4 | Since: 323
 * @deprecated Use entity.setInvincible(entity1, toggle, dontResetOnCleanup) instead
 */
export declare function setEntityInvincible(entity1: number | Entity, toggle: boolean, dontResetOnCleanup: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEA02E132F5C68722 | Since: 323
 * @deprecated Use entity.setIsTargetPriority(entity1) instead
 */
export declare function setEntityIsTargetPriority(entity1: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x7CFBA6A80BDF3874 | Since: 323
 * @deprecated Use entity.setLights(entity1, toggle) instead
 */
export declare function setEntityLights(entity1: number | Entity, toggle: boolean): void;
/**
 * Loads collision grid for an entity spawned outside of a player's loaded area. This allows peds to execute tasks rather than sit dormant because of a lack of a physics grid.
 * Certainly not the main usage of this native but when set to true for a Vehicle, it will prevent the vehicle to explode if it is spawned far away from the player.
 *
 * Hash: 0x0DC7CABAB1E9B67E | Since: 323
 * @deprecated Use entity.setLoadCollisionFlag(entity1, toggle) instead
 */
export declare function setEntityLoadCollisionFlag(entity1: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE9676F61BC0B3321 | Since: 323
 * @deprecated Use entity.hasCollisionLoadedAround(entity1) instead
 */
export declare function hasCollisionLoadedAroundEntity(entity1: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0E46A3FCBDE2A1B1 | Since: 323
 * @deprecated Use entity.setMaxSpeed(entity1, speed) instead
 */
export declare function setEntityMaxSpeed(entity1: number | Entity, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x79F020FF9EDC0748 | Since: 323
 * @deprecated Use entity.setOnlyDamagedByPlayer(entity1, toggle) instead
 */
export declare function setEntityOnlyDamagedByPlayer(entity1: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7022BD828FA0B082 | Since: 323
 * @deprecated Use entity.setOnlyDamagedByRelationshipGroup(entity1) instead
 */
export declare function setEntityOnlyDamagedByRelationshipGroup(entity1: number | Entity): void;
/**
 * Enable / disable each type of damage.
 *
 * waterProof is damage related to water not drowning
 * --------------
 * `p7 is to to '1' in am_mp_property_ext/int: ENTITY::SET_ENTITY_PROOFS(uParam0->f_19, true, true, true, true, true, true, 1, true);`
 *
 *
 * Hash: 0xFAEE099C6F890BB8 | Since: 323
 * @deprecated Use entity.setProofs(entity1, bulletProof, fireProof, explosionProof, collisionProof, meleeProof, steamProof, dontResetOnCleanup, waterProof) instead
 */
export declare function setEntityProofs(entity1: number | Entity, bulletProof: boolean, fireProof: boolean, explosionProof: boolean, collisionProof: boolean, meleeProof: boolean, steamProof: boolean, dontResetOnCleanup: boolean, waterProof: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBE8CD9BE829BBEBF | Since: 1604
 * @deprecated Use entity.getProofs(entity1) instead
 */
export declare function getEntityProofs(entity1: number | Entity): [boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean];
/**
 * w is the correct parameter name!
 *
 * Hash: 0x77B21BE7AC540F07 | Since: 323
 * @deprecated Use entity.setQuaternion(entity1, pos, w) instead
 */
export declare function setEntityQuaternion(entity1: number | Entity, pos: Vector3, w: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0A50A1EEDAD01E65 | Since: 323
 * @deprecated Use entity.setRecordsCollisions(entity1, toggle) instead
 */
export declare function setEntityRecordsCollisions(entity1: number | Entity, toggle: boolean): void;
/**
 * rotationOrder refers to the order yaw pitch roll is applied
 * value ranges from 0 to 5. What you use for rotationOrder when setting must be the same as rotationOrder when getting the rotation.
 * Unsure what value corresponds to what rotation order, more testing will be needed for that.
 * For the most part R* uses 1 or 2 as the order.
 * p5 is usually set as true
 *
 *
 * Hash: 0x8524A8B0171D5E07 | Since: 323
 * @deprecated Use entity.setRotation(entity1, pitch, roll, yaw, rotationOrder) instead
 */
export declare function setEntityRotation(entity1: number | Entity, pitch: number, roll: number, yaw: number, rotationOrder: number): void;
/**
 * p2 is always 0.
 *
 * Hash: 0xEA1C610A04DB6BBB | Since: 323
 * @deprecated Use entity.setVisible(entity1, toggle) instead
 */
export declare function setEntityVisible(entity1: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC34BC448DA29F5E9 | Since: 573
 * @deprecated Use entity.setWaterReflectionFlag(entity1, toggle) instead
 */
export declare function setEntityWaterReflectionFlag(entity1: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE66377CDDADA4810 | Since: 1734
 * @deprecated Use entity.setMirrorReflectionFlag(entity1) instead
 */
export declare function setEntityMirrorReflectionFlag(entity1: number | Entity): void;
/**
 * Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
 *
 * Hash: 0x1C99BB7B6E96D16F | Since: 323
 * @deprecated Use entity.setVelocity(entity1, pos) instead
 */
export declare function setEntityVelocity(entity1: number | Entity, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x8339643499D1222E | Since: 2372
 * @deprecated Use entity.setAngularVelocity(entity1, pos) instead
 */
export declare function setEntityAngularVelocity(entity1: number | Entity, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x4A4722448F18EEF5 | Since: 323
 * @deprecated Use entity.setHasGravity(entity1, toggle) instead
 */
export declare function setEntityHasGravity(entity1: number | Entity, toggle: boolean): void;
/**
 * LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).
 *
 * Hash: 0x5927F96A78577363 | Since: 323
 * @deprecated Use entity.setLodDist(entity1, value) instead
 */
export declare function setEntityLodDist(entity1: number | Entity, value: number): void;
/**
 * Returns the LOD distance of an entity.
 *
 * Hash: 0x4159C2762B5791D6 | Since: 323
 * @deprecated Use entity.getLodDist(entity1) instead
 */
export declare function getEntityLodDist(entity1: number | Entity): number;
/**
 * skin - everything alpha except skin
 * Set entity alpha level. Ranging from 0 to 255 but chnages occur after every 20 percent (after every 51).
 *
 * Hash: 0x44A0870B7E92D7C0 | Since: 323
 * @deprecated Use entity.setAlpha(entity1, alphaLevel, skin) instead
 */
export declare function setEntityAlpha(entity1: number | Entity, alphaLevel: number, skin: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x5A47B3B5E63E94C6 | Since: 323
 * @deprecated Use entity.getAlpha(entity1) instead
 */
export declare function getEntityAlpha(entity1: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x9B1E824FFBB7027A | Since: 323
 * @deprecated Use entity.resetAlpha(entity1) instead
 */
export declare function resetEntityAlpha(entity1: number | Entity): void;
/**
 * Similar to RESET_ENTITY_ALPHA
 *
 * Hash: 0x490861B88F4FD846 | Since: 944
 * @deprecated Use entity.resetPickupGlow(entity1) instead
 */
export declare function resetPickupEntityGlow(entity1: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xCEA7C8E1B48FF68C | Since: 678
 * @deprecated Use entity.setPickupCollidesWithProjectiles() instead
 */
export declare function setPickupCollidesWithProjectiles(): void;
/**
 * Only called once in the scripts.
 *
 * Related to weapon objects.
 *
 *
 * Hash: 0x5C3B791D580E0BC2 | Since: 323
 * @deprecated Use entity.setSortBias(entity1) instead
 */
export declare function setEntitySortBias(entity1: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xACAD101E1FB66689 | Since: 323
 * @deprecated Use entity.setAlwaysPrerender(entity1, toggle) instead
 */
export declare function setEntityAlwaysPrerender(entity1: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x730F5F8D3F0F2050 | Since: 323
 * @deprecated Use entity.setRenderScorched(entity1, toggle) instead
 */
export declare function setEntityRenderScorched(entity1: number | Entity, toggle: boolean): void;
/**
 * Example here: www.gtaforums.com/topic/830463-help-with-turning-lights-green-and-causing-peds-to-crash-into-each-other/#entry1068211340
 *
 * 0 = green
 * 1 = red
 * 2 = yellow
 * 3 = reset changes
 * changing lights may not change the behavior of vehicles
 *
 * Hash: 0x57C5DB656185EAC4 | Since: 323
 * @deprecated Use entity.setTrafficlightOverride(entity1, state) instead
 */
export declare function setEntityTrafficlightOverride(entity1: number | Entity, state: number): void;
/**
 * No comment provided
 *
 * Hash: 0x78E8E3A640178255 | Since: 323
 * @deprecated Use entity.setIsInVehicle(entity1) instead
 */
export declare function setEntityIsInVehicle(entity1: number | Entity): void;
/**
 * Only works with objects!
 *
 * Hash: 0x92C47782FDA8B2A3 | Since: 323
 * @deprecated Use entity.createModelSwap(pos, radius, originalModel, newModel) instead
 */
export declare function createModelSwap(pos: Vector3, radius: number, originalModel: number | string, newModel: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x033C0F9A64E229AE | Since: 323
 * @deprecated Use entity.removeModelSwap(pos, radius, originalModel, newModel) instead
 */
export declare function removeModelSwap(pos: Vector3, radius: number, originalModel: number | string, newModel: number | string): void;
/**
 * p5 = sets as true in scripts
 * Same as the comment for CREATE_MODEL_SWAP unless for some reason p5 affects it this only works with objects as well.
 *
 * Network players do not see changes done with this.
 *
 * Hash: 0x8A97BCA30A0CE478 | Since: 323
 * @deprecated Use entity.createModelHide(pos, radius, modelHash) instead
 */
export declare function createModelHide(pos: Vector3, radius: number, modelHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x3A52AE588830BF7F | Since: 323
 * @deprecated Use entity.createModelHideExcludingScriptObjects(pos, radius, modelHash) instead
 */
export declare function createModelHideExcludingScriptObjects(pos: Vector3, radius: number, modelHash: number | string): void;
/**
 * This native makes entities visible that are hidden by the native CREATE_MODEL_HIDE.
 * p5 should be false, true does nothing
 *
 * Hash: 0xD9E3006FB3CBD765 | Since: 323
 * @deprecated Use entity.removeModelHide(pos, radius, modelHash) instead
 */
export declare function removeModelHide(pos: Vector3, radius: number, modelHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x150E808B375A385A | Since: 323
 * @deprecated Use entity.createForcedObject(pos, modelHash) instead
 */
export declare function createForcedObject(pos: Vector3, modelHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x61B6775E83C0DB6F | Since: 323
 * @deprecated Use entity.removeForcedObject(pos, modelHash) instead
 */
export declare function removeForcedObject(pos: Vector3, modelHash: number | string): void;
/**
 * Calling this function disables collision between two entities.
 * The importance of the order for entity1 and entity2 is unclear.
 * The third parameter, `thisFrame`, decides whether the collision is to be disabled until it is turned back on, or if it's just this frame.
 *
 * Hash: 0xA53ED5520C07654A | Since: 323
 * @deprecated Use entity.setNoCollisionEntity(entity1, entity2, thisFrameOnly) instead
 */
export declare function setEntityNoCollisionEntity(entity1: number | Entity, entity2: number | Entity, thisFrameOnly: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0A27A7827347B3B1 | Since: 3407
 * @deprecated Use entity.setNoCollisionWithNetworkedEntity(entity1, entity2) instead
 */
export declare function setEntityNoCollisionWithNetworkedEntity(entity1: number | Entity, entity2: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x295D82A8559F9150 | Since: 323
 * @deprecated Use entity.setMotionBlur(entity1, toggle) instead
 */
export declare function setEntityMotionBlur(entity1: number | Entity, toggle: boolean): void;
/**
 * p1 always false.
 *
 * Hash: 0xE12ABE5E3A389A6C | Since: 323
 * @deprecated Use entity.setCanAutoVaultOn(entity1, toggle) instead
 */
export declare function setCanAutoVaultOnEntity(entity1: number | Entity, toggle: boolean): void;
/**
 * p1 always false.
 *
 * Hash: 0xA80AE305E0A3044F | Since: 323
 * @deprecated Use entity.setCanClimbOn(entity1, toggle) instead
 */
export declare function setCanClimbOnEntity(entity1: number | Entity, toggle: boolean): void;
/**
 * Only called within 1 script for x360. 'fm_mission_controller' and it used on an object.
 *
 * Ran after these 2 natives,
 * set_object_targettable(uParam0, 0);
 * set_entity_invincible(uParam0, 1);
 *
 * Hash: 0xDC6F8601FAF2E893 | Since: 323
 * @deprecated Use entity.setWaitForCollisionsBeforeProbe(entity1, toggle) instead
 */
export declare function setWaitForCollisionsBeforeProbe(entity1: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2C2E3DC128F44309 | Since: 323
 * @deprecated Use entity.setNoweapondecals(entity1) instead
 */
export declare function setEntityNoweapondecals(entity1: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x1A092BB0C3808B96 | Since: 323
 * @deprecated Use entity.setUseMaxDistanceForWaterReflection(entity1) instead
 */
export declare function setEntityUseMaxDistanceForWaterReflection(entity1: number | Entity): void;
/**
 * Gets the world rotation of the specified bone of the specified entity.
 *
 * Hash: 0xCE6294A232D03786 | Since: 791
 * @deprecated Use entity.getBoneRotation(entity1, boneIndex) instead
 */
export declare function getEntityBoneRotation(entity1: number | Entity, boneIndex: number): Vector3;
/**
 * Gets the world position of the specified bone of the specified entity.
 *
 * Hash: 0x46F8696933A63C9B | Since: 877
 * @deprecated Use entity.getBonePostion(entity1, boneIndex) instead
 */
export declare function getEntityBonePostion(entity1: number | Entity, boneIndex: number): Vector3;
/**
 * Gets the local rotation of the specified bone of the specified entity.
 *
 * Hash: 0xBD8D32550E5CEBFE | Since: 1734
 * @deprecated Use entity.getBoneObjectRotation(entity1, boneIndex) instead
 */
export declare function getEntityBoneObjectRotation(entity1: number | Entity, boneIndex: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xCF1247CC86961FD6 | Since: 2802
 * @deprecated Use entity.getBoneObjectPostion(entity1, boneIndex) instead
 */
export declare function getEntityBoneObjectPostion(entity1: number | Entity, boneIndex: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xB328DCC3A3AA401B | Since: 791
 * @deprecated Use entity.getBoneCount(entity1) instead
 */
export declare function getEntityBoneCount(entity1: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x6CE177D014502E8A | Since: 877
 * @deprecated Use entity.enableBulletCollision(entity1) instead
 */
export declare function enableEntityBulletCollision(entity1: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xB17BC6453F6CF5AC | Since: 944
 * @deprecated Use entity.setCanOnlyBeDamagedByEntity(entity1, entity2) instead
 */
export declare function setEntityCanOnlyBeDamagedByEntity(entity1: number | Entity, entity2: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x68B562E124CC0AEF | Since: 1180
 * @deprecated Use entity.setCantCauseCollisionDamagedEntity(entity1, entity2) instead
 */
export declare function setEntityCantCauseCollisionDamagedEntity(entity1: number | Entity, entity2: number | Entity): void;
/**
 * p1 is always set to 1
 *
 * Hash: 0x36F32DE87082343E | Since: 1011
 * @deprecated Use entity.setAllowMigrateToSpectator(entity1) instead
 */
export declare function setAllowMigrateToSpectator(entity1: number | Entity): void;
/**
 * Gets the handle of an entity with a specific model hash attached to another entity, such as an object attached to a ped.
 * This native does not appear to have anything to do with pickups as in scripts it is used with objects.
 *
 * Example from fm_mission_controller_2020.c:
 *
 * `iVar8 = ENTITY::GET_ENTITY_OF_TYPE_ATTACHED_TO_ENTITY(bParam0->f_9, joaat("p_cs_clipboard"));`
 *
 * Hash: 0x1F922734E259BD26 | Since: 1180
 * @deprecated Use entity.getOfTypeAttachedToEntity(entity1, modelHash) instead
 */
export declare function getEntityOfTypeAttachedToEntity(entity1: number | Entity, modelHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xD7B80E7C3BEFC396 | Since: 1180
 * @deprecated Use entity.setPickUpByCargobobDisabled(entity1, toggle) instead
 */
export declare function setPickUpByCargobobDisabled(entity1: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB604A2942ADED0EE | Since: 323
 * @deprecated Use event.setDecisionMaker(ped, name) instead
 */
export declare function setDecisionMaker(ped: number | Ped, name: number | string): void;
/**
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 *
 * Hash: 0x4FC9381A7AEE8968 | Since: 323
 * @deprecated Use event.clearDecisionMakerResponse(name, eventType) instead
 */
export declare function clearDecisionMakerEventResponse(name: number | string, eventType: number): void;
/**
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 *
 * This is limited to 4 blocked events at a time.
 *
 * Hash: 0xE42FCDFD0E4196F7 | Since: 323
 * @deprecated Use event.blockDecisionMaker(name, eventType) instead
 */
export declare function blockDecisionMakerEvent(name: number | string, eventType: number): void;
/**
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 *
 * Hash: 0xD7CD9CF34F2C99E8 | Since: 323
 * @deprecated Use event.unblockDecisionMaker(name, eventType) instead
 */
export declare function unblockDecisionMakerEvent(name: number | string, eventType: number): void;
/**
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 *
 * Hash: 0xD9F8455409B525E9 | Since: 323
 * @deprecated Use event.addShockingAtPosition(eventType, pos, duration) instead
 */
export declare function addShockingEventAtPosition(eventType: number, pos: Vector3, duration: number): number;
/**
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 *
 * Hash: 0x7FD8F3BE76F89422 | Since: 323
 * @deprecated Use event.addShockingForEntity(eventType, entity, duration) instead
 */
export declare function addShockingEventForEntity(eventType: number, entity: number | Entity, duration: number): number;
/**
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 *
 * Hash: 0x1374ABB7C15BAB92 | Since: 323
 * @deprecated Use event.isShockingInSphere(eventType, pos, radius) instead
 */
export declare function isShockingEventInSphere(eventType: number, pos: Vector3, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2CDA538C44C6CCE5 | Since: 323
 * @deprecated Use event.removeShocking(event1) instead
 */
export declare function removeShockingEvent(event1: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEAABE8FDFA21274C | Since: 323
 * @deprecated Use event.removeAllShockings() instead
 */
export declare function removeAllShockingEvents(): void;
/**
 * No comment provided
 *
 * Hash: 0x340F1415B68AEADE | Since: 323
 * @deprecated Use event.removeShockingSpawnBlockingAreas() instead
 */
export declare function removeShockingEventSpawnBlockingAreas(): void;
/**
 * No comment provided
 *
 * Hash: 0x2F9A292AD0A3BD89 | Since: 323
 * @deprecated Use event.suppressShockingsNextFrame() instead
 */
export declare function suppressShockingEventsNextFrame(): void;
/**
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 *
 * Hash: 0x3FD2EC8BF1F1CF30 | Since: 323
 * @deprecated Use event.suppressShockingTypeNextFrame(eventType) instead
 */
export declare function suppressShockingEventTypeNextFrame(eventType: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5F3B7749C112D552 | Since: 323
 * @deprecated Use event.suppressAgitationsNextFrame() instead
 */
export declare function suppressAgitationEventsNextFrame(): void;
/**
 * Character types:
 * 0 = Michael,
 * 1 = Franklin,
 * 2 = Trevor,
 * 3 = MPMale,
 * 4 = MPFemale
 *
 * Hash: 0x278F76C3B0A8F109 | Since: 323
 * @deprecated Use extrametadata.getNumTattooShopDlcItems(character) instead
 */
export declare function getNumTattooShopDlcItems(character: number): number;
/**
 * Character types:
 * 0 = Michael,
 * 1 = Franklin,
 * 2 = Trevor,
 * 3 = MPMale,
 * 4 = MPFemale
 *
 *
 * enum TattooZoneData
 * {
 * ZONE_TORSO = 0,
 * ZONE_HEAD = 1,
 * ZONE_LEFT_ARM = 2,
 * ZONE_RIGHT_ARM = 3,
 * ZONE_LEFT_LEG = 4,
 * ZONE_RIGHT_LEG = 5,
 * ZONE_UNKNOWN = 6,
 * ZONE_NONE = 7,
 * };
 * struct outComponent
 * {
 * // these vars are suffixed with 4 bytes of padding each.
 * uint unk;
 * int unk2;
 * uint tattooCollectionHash;
 * uint tattooNameHash;
 * int unk3;
 * TattooZoneData zoneId;
 * uint unk4;
 * uint unk5;
 * // maybe more, not sure exactly, decompiled scripts are very vague around this part.
 * }
 *
 * Hash: 0xFF56381874F82086 | Since: 323
 * @deprecated Use extrametadata.getTattooShopDlcItemData(characterType, decorationIndex) instead
 */
export declare function getTattooShopDlcItemData(characterType: number, decorationIndex: number): [boolean, any];
/**
 * Returns some sort of index/offset for overlays/decorations.
 *
 * Character types:
 * 0 = Michael,
 * 1 = Franklin,
 * 2 = Trevor,
 * 3 = MPMale,
 * 4 = MPFemale
 *
 * Hash: 0x10144267DD22866C | Since: 2189
 * @deprecated Use extrametadata.getTattooShopDlcItemIndex(overlayHash, character) instead
 */
export declare function getTattooShopDlcItemIndex(overlayHash: number | string, character: number): number;
/**
 * No comment provided
 *
 * Hash: 0x1E8C308FD312C036 | Since: 323
 * @deprecated Use extrametadata.initShopPedComponent() instead
 */
export declare function initShopPedComponent(): any;
/**
 * No comment provided
 *
 * Hash: 0xEB0A2B758F7B850F | Since: 323
 * @deprecated Use extrametadata.initShopPedProp() instead
 */
export declare function initShopPedProp(): any;
/**
 * No comment provided
 *
 * Hash: 0x50F457823CE6EB5F | Since: 323
 * @deprecated Use extrametadata.setupShopPedApparelQuery() instead
 */
export declare function setupShopPedApparelQuery(): number;
/**
 * character is 0 for Michael, 1 for Franklin, 2 for Trevor, 3 for freemode male, and 4 for freemode female.
 *
 * componentId is between 0 and 11 and corresponds to the usual component slots.
 *
 * p1 could be the outfit number; unsure.
 *
 * p2 is usually -1; unknown function.
 *
 * p3 appears to be for selecting between clothes and props; false is used with components/clothes, true is used with props.
 *
 * p4 is usually -1; unknown function.
 *
 * componentId is -1 when p3 is true in decompiled scripts.
 *
 * Hash: 0x9BDF59818B1E38C1 | Since: 323
 * @deprecated Use extrametadata.setupShopPedApparelQueryTu(character, componentId) instead
 */
export declare function setupShopPedApparelQueryTu(character: number, componentId: number): number;
/**
 * See https://git.io/JtcRf for example and structs.
 *
 * Hash: 0x249E310B2D920699 | Since: 323
 * @deprecated Use extrametadata.getShopPedQueryComponent(componentId) instead
 */
export declare function getShopPedQueryComponent(componentId: number): any;
/**
 * Returns some sort of index/offset for components.
 * Needs _GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = false and componentId with the drawable's component slot first, returns -1 otherwise.
 *
 * Hash: 0x96E2929292A4DB77 | Since: 2189
 * @deprecated Use extrametadata.getShopPedQueryComponentIndex(componentHash) instead
 */
export declare function getShopPedQueryComponentIndex(componentHash: number | string): number;
/**
 * More info here: https://gist.github.com/root-cause/3b80234367b0c856d60bf5cb4b826f86
 *
 * Hash: 0x74C0E2A57EC66760 | Since: 323
 * @deprecated Use extrametadata.getShopPedComponent(componentHash) instead
 */
export declare function getShopPedComponent(componentHash: number | string): any;
/**
 * See https://git.io/JtcRf for example and structs.
 *
 * Hash: 0xDE44A00999B2837D | Since: 323
 * @deprecated Use extrametadata.getShopPedQueryProp(componentId) instead
 */
export declare function getShopPedQueryProp(componentId: number): any;
/**
 * Returns some sort of index/offset for props.
 * Needs _GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = true and componentId = -1 first, returns -1 otherwise.
 *
 * Hash: 0x6CEBE002E58DEE97 | Since: 2189
 * @deprecated Use extrametadata.getShopPedQueryPropIndex(componentHash) instead
 */
export declare function getShopPedQueryPropIndex(componentHash: number | string): number;
/**
 * More info here: https://gist.github.com/root-cause/3b80234367b0c856d60bf5cb4b826f86
 *
 * Hash: 0x5D5CAFF661DDF6FC | Since: 323
 * @deprecated Use extrametadata.getShopPedProp(componentHash) instead
 */
export declare function getShopPedProp(componentHash: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0x0368B3A838070348 | Since: 323
 * @deprecated Use extrametadata.getHashNameForComponent(entity, componentId, drawableVariant, textureVariant) instead
 */
export declare function getHashNameForComponent(entity: number | Entity, componentId: number, drawableVariant: number, textureVariant: number): number;
/**
 * No comment provided
 *
 * Hash: 0x5D6160275CAEC8DD | Since: 323
 * @deprecated Use extrametadata.getHashNameForProp(entity, componentId, propIndex, propTextureIndex) instead
 */
export declare function getHashNameForProp(entity: number | Entity, componentId: number, propIndex: number, propTextureIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0xC17AD0E5752BECDA | Since: 323
 * @deprecated Use extrametadata.getShopPedApparelVariantComponentCount(componentHash) instead
 */
export declare function getShopPedApparelVariantComponentCount(componentHash: number | string): number;
/**
 * `propHash`: Ped helmet prop hash?
 * This native returns 1 when the player helmet has a visor (there is another prop index for the same helmet with closed/opened visor variant) that can be toggled. 0 if there's no alternative version with a visor for this helmet prop.
 *
 * Hash: 0xD40AAC51E8E4C663 | Since: 791
 * @deprecated Use extrametadata.getShopPedApparelVariantPropCount(propHash) instead
 */
export declare function getShopPedApparelVariantPropCount(propHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x6E11F282F11863B6 | Since: 323
 * @deprecated Use extrametadata.getVariantComponent(componentHash, variantComponentIndex) instead
 */
export declare function getVariantComponent(componentHash: number | string, variantComponentIndex: number): [number, number, number];
/**
 * No comment provided
 *
 * Hash: 0xD81B7F27BC773E66 | Since: 791
 * @deprecated Use extrametadata.getVariantProp(componentHash, variantPropIndex) instead
 */
export declare function getVariantProp(componentHash: number | string, variantPropIndex: number): [number, number, number];
/**
 * Returns number of possible values of the forcedComponentIndex argument of GET_FORCED_COMPONENT.
 *
 * Hash: 0xC6B9DB42C04DD8C3 | Since: 323
 * @deprecated Use extrametadata.getShopPedApparelForcedComponentCount(componentHash) instead
 */
export declare function getShopPedApparelForcedComponentCount(componentHash: number | string): number;
/**
 * Returns number of possible values of the forcedPropIndex argument of GET_FORCED_PROP.
 *
 * Hash: 0x017568A8182D98A6 | Since: 323
 * @deprecated Use extrametadata.getShopPedApparelForcedPropCount(componentHash) instead
 */
export declare function getShopPedApparelForcedPropCount(componentHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x6C93ED8C2F74859B | Since: 323
 * @deprecated Use extrametadata.getForcedComponent(componentHash, forcedComponentIndex) instead
 */
export declare function getForcedComponent(componentHash: number | string, forcedComponentIndex: number): [number, number, number];
/**
 * No comment provided
 *
 * Hash: 0xE1CA84EBF72E691D | Since: 323
 * @deprecated Use extrametadata.getForcedProp(componentHash, forcedPropIndex) instead
 */
export declare function getForcedProp(componentHash: number | string, forcedPropIndex: number): [number, number, number];
/**
 * Full list of restriction tags by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedApparelRestrictionTags.json
 *
 * componentId/last parameter seems to be unused.
 *
 * Hash: 0x341DE7ED1D2A1BFD | Since: 323
 * @deprecated Use extrametadata.doesShopPedApparelHaveRestrictionTag(componentHash, restrictionTagHash, componentId) instead
 */
export declare function doesShopPedApparelHaveRestrictionTag(componentHash: number | string, restrictionTagHash: number | string, componentId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7796B21B76221BC5 | Since: 2612
 * @deprecated Use extrametadata.doesCurrentPedComponentHaveRestrictionTag(ped, componentId, restrictionTagHash) instead
 */
export declare function doesCurrentPedComponentHaveRestrictionTag(ped: number | Ped, componentId: number, restrictionTagHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD726BAB4554DA580 | Since: 2612
 * @deprecated Use extrametadata.doesCurrentPedPropHaveRestrictionTag(ped, componentId, restrictionTagHash) instead
 */
export declare function doesCurrentPedPropHaveRestrictionTag(ped: number | Ped, componentId: number, restrictionTagHash: number | string): boolean;
/**
 * characters
 *
 * 0: Michael
 * 1: Franklin
 * 2: Trevor
 * 3: MPMale
 * 4: MPFemale
 *
 * Hash: 0xF3FBE2D50A6A8C28 | Since: 323
 * @deprecated Use extrametadata.setupShopPedOutfitQuery(character) instead
 */
export declare function setupShopPedOutfitQuery(character: number): number;
/**
 * outfitIndex: from 0 to SETUP_SHOP_PED_OUTFIT_QUERY(characterIndex, false) - 1.
 * See https://git.io/JtcB8 for example and outfit struct.
 *
 * Hash: 0x6D793F03A631FE56 | Since: 323
 * @deprecated Use extrametadata.getShopPedQueryOutfit(outfitIndex) instead
 */
export declare function getShopPedQueryOutfit(outfitIndex: number): any;
/**
 * No comment provided
 *
 * Hash: 0xB7952076E444979D | Since: 323
 * @deprecated Use extrametadata.getShopPedOutfit() instead
 */
export declare function getShopPedOutfit(): any;
/**
 * No comment provided
 *
 * Hash: 0x073CA26B079F956E | Since: 323
 * @deprecated Use extrametadata.getShopPedOutfitLocate() instead
 */
export declare function getShopPedOutfitLocate(): number;
/**
 * See https://git.io/JtcBH for example and structs.
 *
 * Hash: 0xA9F9C2E0FDE11CBB | Since: 323
 * @deprecated Use extrametadata.getShopPedOutfitPropVariant(outfitHash, variantIndex) instead
 */
export declare function getShopPedOutfitPropVariant(outfitHash: number | string, variantIndex: number): [boolean, any];
/**
 * See https://git.io/JtcBH for example and structs.
 *
 * Hash: 0x19F2A026EDF0013F | Since: 323
 * @deprecated Use extrametadata.getShopPedOutfitComponentVariant(outfitHash, variantIndex) instead
 */
export declare function getShopPedOutfitComponentVariant(outfitHash: number | string, variantIndex: number): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xA7A866D21CD2329B | Since: 323
 * @deprecated Use extrametadata.getNumDlcVehicles() instead
 */
export declare function getNumDlcVehicles(): number;
/**
 * dlcVehicleIndex is 0 to GET_NUM_DLC_VEHICLS() - 1
 *
 * Hash: 0xECC01B7C5763333C | Since: 323
 * @deprecated Use extrametadata.getDlcVehicleModel(dlcVehicleIndex) instead
 */
export declare function getDlcVehicleModel(dlcVehicleIndex: number): number;
/**
 * dlcVehicleIndex takes a number from 0 - GET_NUM_DLC_VEHICLES() - 1.
 * outData is a struct of 3 8-byte items.
 * The Second item in the struct *(Hash *)(outData + 1) is the vehicle hash.
 *
 * Hash: 0x33468EDC08E371F6 | Since: 323
 * @deprecated Use extrametadata.getDlcVehicleData(dlcVehicleIndex) instead
 */
export declare function getDlcVehicleData(dlcVehicleIndex: number): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x5549EE11FA22FCF2 | Since: 323
 * @deprecated Use extrametadata.getDlcVehicleFlags(dlcVehicleIndex) instead
 */
export declare function getDlcVehicleFlags(dlcVehicleIndex: number): number;
/**
 * Returns the total number of DLC weapons.
 *
 * Hash: 0xEE47635F352DA367 | Since: 323
 * @deprecated Use extrametadata.getNumDlcWeapons() instead
 */
export declare function getNumDlcWeapons(): number;
/**
 * Returns the total number of DLC weapons that are available in SP (availableInSP field in shop_weapon.meta).
 *
 * Hash: 0x4160B65AE085B5A9 | Since: 2060
 * @deprecated Use extrametadata.getNumDlcWeaponsSp() instead
 */
export declare function getNumDlcWeaponsSp(): number;
/**
 *
 * dlcWeaponIndex takes a number from 0 - GET_NUM_DLC_WEAPONS() - 1.
 * struct DlcWeaponData
 * {
 * `int emptyCheck; //use DLC1::IS_CONTENT_ITEM_LOCKED on this`
 * int padding1;
 * int weaponHash;
 * int padding2;
 * int unk;
 * int padding3;
 * int weaponCost;
 * int padding4;
 * int ammoCost;
 * int padding5;
 * int ammoType;
 * int padding6;
 * int defaultClipSize;
 * int padding7;
 * char nameLabel[64];
 * char descLabel[64];
 * char desc2Label[64]; // usually "the" + name
 * char upperCaseNameLabel[64];
 * };
 *
 * Hash: 0x79923CD21BECE14E | Since: 323
 * @deprecated Use extrametadata.getDlcWeaponData(dlcWeaponIndex) instead
 */
export declare function getDlcWeaponData(dlcWeaponIndex: number): [boolean, any];
/**
 * Same as GET_DLC_WEAPON_DATA but only works for DLC weapons that are available in SP.
 *
 * Hash: 0x310836EE7129BA33 | Since: 2060
 * @deprecated Use extrametadata.getDlcWeaponDataSp(dlcWeaponIndex) instead
 */
export declare function getDlcWeaponDataSp(dlcWeaponIndex: number): [boolean, any];
/**
 * Returns the total number of DLC weapon components.
 *
 * Hash: 0x405425358A7D61FE | Since: 323
 * @deprecated Use extrametadata.getNumDlcWeaponComponents(dlcWeaponIndex) instead
 */
export declare function getNumDlcWeaponComponents(dlcWeaponIndex: number): number;
/**
 * Returns the total number of DLC weapon components that are available in SP.
 *
 * Hash: 0xAD2A7A6DFF55841B | Since: 2060
 * @deprecated Use extrametadata.getNumDlcWeaponComponentsSp(dlcWeaponIndex) instead
 */
export declare function getNumDlcWeaponComponentsSp(dlcWeaponIndex: number): number;
/**
 * p0 seems to be the weapon index
 * p1 seems to be the weapon component index
 * struct DlcComponentData{
 * int attachBone;
 * int padding1;
 * int bActiveByDefault;
 * int padding2;
 * int unk;
 * int padding3;
 * int componentHash;
 * int padding4;
 * int unk2;
 * int padding5;
 * int componentCost;
 * int padding6;
 * char nameLabel[64];
 * char descLabel[64];
 * };
 *
 *
 * Hash: 0x6CF598A2957C2BF8 | Since: 323
 * @deprecated Use extrametadata.getDlcWeaponComponentData(dlcWeaponIndex, dlcWeapCompIndex) instead
 */
export declare function getDlcWeaponComponentData(dlcWeaponIndex: number, dlcWeapCompIndex: number): [boolean, any];
/**
 * Same as GET_DLC_WEAPON_COMPONENT_DATA but only works for DLC components that are available in SP.
 *
 * Hash: 0x31D5E073B6F93CDC | Since: 2060
 * @deprecated Use extrametadata.getDlcWeaponComponentDataSp(dlcWeaponIndex, dlcWeapCompIndex) instead
 */
export declare function getDlcWeaponComponentDataSp(dlcWeaponIndex: number, dlcWeapCompIndex: number): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xD4D7B033C3AA243C | Since: 323
 * @deprecated Use extrametadata.isContentItemLocked(itemHash) instead
 */
export declare function isContentItemLocked(itemHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0564B9FF9631B82C | Since: 323
 * @deprecated Use extrametadata.isDlcVehicleMod(hash) instead
 */
export declare function isDlcVehicleMod(hash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC098810437312FFF | Since: 323
 * @deprecated Use extrametadata.getDlcVehicleModLockHash(hash) instead
 */
export declare function getDlcVehicleModLockHash(hash: number | string): number;
/**
 * From fm_deathmatch_creator and fm_race_creator:
 *
 * `FILES::REVERT_CONTENT_CHANGESET_GROUP_FOR_ALL(joaat("GROUP_MAP_SP"));`
 * `FILES::EXECUTE_CONTENT_CHANGESET_GROUP_FOR_ALL(joaat("GROUP_MAP"));`
 *
 * Hash: 0x6BEDF5769AC2DC07 | Since: 1604
 * @deprecated Use extrametadata.executeContentChangesetGroupForAll(hash) instead
 */
export declare function executeContentChangesetGroupForAll(hash: number | string): void;
/**
 * From fm_deathmatch_creator and fm_race_creator:
 *
 * `FILES::REVERT_CONTENT_CHANGESET_GROUP_FOR_ALL(joaat("GROUP_MAP_SP"));`
 * `FILES::EXECUTE_CONTENT_CHANGESET_GROUP_FOR_ALL(joaat("GROUP_MAP"));`
 *
 * Hash: 0x3C1978285B036B25 | Since: 1604
 * @deprecated Use extrametadata.revertContentChangesetGroupForAll(hash) instead
 */
export declare function revertContentChangesetGroupForAll(hash: number | string): void;
/**
 * Starts a fire:
 *
 * xyz: Location of fire
 * maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.
 * isGasFire: Whether or not the fire is powered by gasoline.
 *
 * Hash: 0x6B83617E04503888 | Since: 323
 * @deprecated Use fire.startScript(pos, maxChildren, isGasFire) instead
 */
export declare function startScriptFire(pos: Vector3, maxChildren: number, isGasFire: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x7FF548385680673F | Since: 323
 * @deprecated Use fire.removeScript(fireHandle) instead
 */
export declare function removeScriptFire(fireHandle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF6A9D9708F6F23DF | Since: 323
 * @deprecated Use fire.startEntity(entity) instead
 */
export declare function startEntityFire(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x7F0DD2EBBB651AFF | Since: 323
 * @deprecated Use fire.stopEntity(entity) instead
 */
export declare function stopEntityFire(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x28D3FED7190D3A0B | Since: 323
 * @deprecated Use fire.isEntityOn(entity) instead
 */
export declare function isEntityOnFire(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x50CAD495A460B305 | Since: 323
 * @deprecated Use fire.getNumberOfsInRange(pos, radius) instead
 */
export declare function getNumberOfFiresInRange(pos: Vector3, radius: number): number;
/**
 * No comment provided
 *
 * Hash: 0x8F390AC4155099BA | Since: 1734
 * @deprecated Use fire.setFlammabilityMultiplier() instead
 */
export declare function setFlammabilityMultiplier(): void;
/**
 * No comment provided
 *
 * Hash: 0x056A8A219B8E829F | Since: 323
 * @deprecated Use fire.stopInRange(pos, radius) instead
 */
export declare function stopFireInRange(pos: Vector3, radius: number): void;
/**
 * Returns TRUE if it found something. FALSE if not.
 *
 * Hash: 0x352A9F6BCF90081F | Since: 323
 * @deprecated Use fire.getClosestPos(pos) instead
 */
export declare function getClosestFirePos(pos: Vector3): [boolean, Vector3];
/**
 * BOOL isAudible = If explosion makes a sound.
 * BOOL isInvisible = If the explosion is invisible or not.
 *
 * explosionType: https://alloc8or.re/gta5/doc/enums/eExplosionTag.txt
 *
 * Hash: 0xE3AD2BDBAEE269AC | Since: 323
 * @deprecated Use fire.addExplosion(pos, explosionType, damageScale, isAudible, isInvisible, cameraShake, noDamage) instead
 */
export declare function addExplosion(pos: Vector3, explosionType: number, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number, noDamage: boolean): void;
/**
 * isAudible: If explosion makes a sound.
 * isInvisible: If the explosion is invisible or not.
 * explosionType: See ADD_EXPLOSION.
 *
 * Hash: 0x172AA1B624FA1013 | Since: 323
 * @deprecated Use fire.addOwnedExplosion(ped, pos, explosionType, damageScale, isAudible, isInvisible, cameraShake) instead
 */
export declare function addOwnedExplosion(ped: number | Ped, pos: Vector3, explosionType: number, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
/**
 * isAudible: If explosion makes a sound.
 * isInvisible: If the explosion is invisible or not.
 * explosionType: See ADD_EXPLOSION.
 *
 * Hash: 0x36DD3FE58B5E5212 | Since: 323
 * @deprecated Use fire.addExplosionWithUserVfx(pos, explosionType, explosionFx, damageScale, isAudible, isInvisible, cameraShake) instead
 */
export declare function addExplosionWithUserVfx(pos: Vector3, explosionType: number, explosionFx: number | string, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
/**
 * explosionType: See ADD_EXPLOSION.
 *
 * Hash: 0x2E2EBA0EE7CED0E0 | Since: 323
 * @deprecated Use fire.isExplosionInArea(explosionType, x1, y1, z1, x2, y2, z2) instead
 */
export declare function isExplosionInArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * explosionType: See ADD_EXPLOSION.
 *
 * Hash: 0x6070104B699B2EF4 | Since: 323
 * @deprecated Use fire.isExplosionActiveInArea(explosionType, x1, y1, z1, x2, y2, z2) instead
 */
export declare function isExplosionActiveInArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * explosionType: See ADD_EXPLOSION.
 *
 * Hash: 0xAB0F816885B0E483 | Since: 323
 * @deprecated Use fire.isExplosionInSphere(explosionType, pos, radius) instead
 */
export declare function isExplosionInSphere(explosionType: number, pos: Vector3, radius: number): boolean;
/**
 * explosionType: See ADD_EXPLOSION.
 *
 * Hash: 0xB3CD51E3DB86F176 | Since: 1290
 * @deprecated Use fire.getOwnerOfExplosionInSphere(explosionType, pos, radius) instead
 */
export declare function getOwnerOfExplosionInSphere(explosionType: number, pos: Vector3, radius: number): number;
/**
 * explosionType: See ADD_EXPLOSION, -1 for any explosion type
 *
 *
 * Hash: 0xA079A6C51525DC4B | Since: 323
 * @deprecated Use fire.isExplosionInAngledArea(explosionType, x1, y1, z1, x2, y2, z2, width) instead
 */
export declare function isExplosionInAngledArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): boolean;
/**
 * Returns a handle to the first entity within the a circle spawned inside the 2 points from a radius.
 *
 * explosionType: See ADD_EXPLOSION.
 *
 * Hash: 0x14BA4BA137AF6CEC | Since: 323
 * @deprecated Use fire.getOwnerOfExplosionInAngledArea(explosionType, x1, y1, z1, x2, y2, z2, radius) instead
 */
export declare function getOwnerOfExplosionInAngledArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number): number;
/**
 * No comment provided
 *
 * Hash: 0x5241DB47A8B8AD54 | Since: 3570
 * @deprecated Use fire.networkExpectExplosionEventsForPlayer(expect, player) instead
 */
export declare function networkExpectExplosionEventsForPlayer(expect: boolean, player: number | string | Player): void;
/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 *
 * Hash: 0x175B6BFC15CDD0C5 | Since: 323
 * @deprecated Use graphics.setDebugLinesAndSpheresDrawingActive(enabled) instead
 */
export declare function setDebugLinesAndSpheresDrawingActive(enabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7FDFADE676AA3CB0 | Since: 323
 * @deprecated Use graphics.drawDebugLine(x1, y1, z1, x2, y2, z2, r, g, b, alpha) instead
 */
export declare function drawDebugLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, r: number, g: number, b: number, alpha: number): void;
/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 *
 * Hash: 0xD8B9A8AC5608FF94 | Since: 323
 * @deprecated Use graphics.drawDebugLineWithTwoColours(x1, y1, z1, x2, y2, z2, r1, g1, b1, r2, g2, b2, alpha1, alpha2) instead
 */
export declare function drawDebugLineWithTwoColours(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, r1: number, g1: number, b1: number, r2: number, g2: number, b2: number, alpha1: number, alpha2: number): void;
/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 *
 * Hash: 0xAAD68E1AB39DA632 | Since: 323
 * @deprecated Use graphics.drawDebugSphere(pos, radius, red, green, blue, alpha) instead
 */
export declare function drawDebugSphere(pos: Vector3, radius: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0x083A2CA4F2E573BD | Since: 323
 * @deprecated Use graphics.drawDebugBox(x1, y1, z1, x2, y2, z2, r, g, b, alpha) instead
 */
export declare function drawDebugBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, r: number, g: number, b: number, alpha: number): void;
/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 *
 * Hash: 0x73B1189623049839 | Since: 323
 * @deprecated Use graphics.drawDebugCross(pos, size, red, green, blue, alpha) instead
 */
export declare function drawDebugCross(pos: Vector3, size: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 *
 * Hash: 0x3903E216620488E8 | Since: 323
 * @deprecated Use graphics.drawDebugText(text, pos, red, green, blue, alpha) instead
 */
export declare function drawDebugText(text: string, pos: Vector3, red: number, green: number, blue: number, alpha: number): void;
/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 *
 * Hash: 0xA3BB2E9555C05A8F | Since: 323
 * @deprecated Use graphics.drawDebugText2d(text, pos, red, green, blue, alpha) instead
 */
export declare function drawDebugText2d(text: string, pos: Vector3, red: number, green: number, blue: number, alpha: number): void;
/**
 * Draws a depth-tested line from one point to another.
 * ----------------
 * x1, y1, z1 : Coordinates for the first point
 * x2, y2, z2 : Coordinates for the second point
 * r, g, b, alpha : Color with RGBA-Values
 * I recommend using a predefined function to call this.
 * [VB.NET]
 * Public Sub DrawLine(from As Vector3, [to] As Vector3, col As Color)
 * [Function].Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, [to].X, [to].Y, [to].Z, col.R, col.G, col.B, col.A)
 * End Sub
 *
 * [C#]
 * public void DrawLine(Vector3 from, Vector3 to, Color col)
 * {
 * Function.Call(Hash.DRAW_LINE, from.X, from.Y, from.Z, to.X, to.Y, to.Z, col.R, col.G, col.B, col.A);
 * }
 *
 * Hash: 0x6B7256074AE34680 | Since: 323
 * @deprecated Use graphics.drawLine(x1, y1, z1, x2, y2, z2, red, green, blue, alpha) instead
 */
export declare function drawLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * x/y/z - Location of a vertex (in world coords), presumably.
 * ----------------
 * x1, y1, z1     : Coordinates for the first point
 * x2, y2, z2     : Coordinates for the second point
 * x3, y3, z3     : Coordinates for the third point
 * r, g, b, alpha : Color with RGBA-Values
 *
 * Keep in mind that only one side of the drawn triangle is visible: It's the side, in which the vector-product of the vectors heads to: (b-a)x(c-a) Or (b-a)x(c-b).
 * But be aware: The function seems to work somehow differently. I have trouble having them drawn in rotated orientation. Try it yourself and if you somehow succeed, please edit this and post your solution.
 * I recommend using a predefined function to call this.
 * [VB.NET]
 * Public Sub DrawPoly(a As Vector3, b As Vector3, c As Vector3, col As Color)
 * [Function].Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A)
 * End Sub
 *
 * [C#]
 * public void DrawPoly(Vector3 a, Vector3 b, Vector3 c, Color col)
 * {
 * Function.Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A);
 * }
 * BTW: Intersecting triangles are not supported: They overlap in the order they were called.
 *
 * Hash: 0xAC26716048436851 | Since: 323
 * @deprecated Use graphics.drawPoly(x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha) instead
 */
export declare function drawPoly(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * Used for drawling Deadline trailing lights, see deadline.ytd
 *
 * p15 through p23 are values that appear to be related to illiumation, scaling, and rotation; more testing required.
 * For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
 *
 * Hash: 0x29280002282F1928 | Since: 877
 * @deprecated Use graphics.drawTexturedPoly(x1, y1, z1, x2, y2, z2, x3, y3, z3, red, green, blue, alpha, textureDict, textureName, u1, v1, w1, u2, v2, w2, u3, v3, w3) instead
 */
export declare function drawTexturedPoly(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red: number, green: number, blue: number, alpha: number, textureDict: string, textureName: string, u1: number, v1: number, w1: number, u2: number, v2: number, w2: number, u3: number, v3: number, w3: number): void;
/**
 * Used for drawling Deadline trailing lights, see deadline.ytd
 *
 * Each vertex has its own colour that is blended/illuminated on the texture. Additionally, the R, G, and B components are floats that are int-casted internally.
 * For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
 *
 * Hash: 0x736D7AA1B750856B | Since: 877
 * @deprecated Use graphics.drawTexturedPolyWithThreeColours(x1, y1, z1, x2, y2, z2, x3, y3, z3, red1, green1, blue1, alpha1, red2, green2, blue2, alpha2, red3, green3, blue3, alpha3, textureDict, textureName, u1, v1, w1, u2, v2, w2, u3, v3, w3) instead
 */
export declare function drawTexturedPolyWithThreeColours(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red1: number, green1: number, blue1: number, alpha1: number, red2: number, green2: number, blue2: number, alpha2: number, red3: number, green3: number, blue3: number, alpha3: number, textureDict: string, textureName: string, u1: number, v1: number, w1: number, u2: number, v2: number, w2: number, u3: number, v3: number, w3: number): void;
/**
 * x,y,z = start pos
 * x2,y2,z2 = end pos
 *
 * Draw's a 3D Box between the two x,y,z coords.
 * --------------
 * Keep in mind that the edges of the box do only align to the worlds base-vectors. Therefore something like rotation cannot be applied. That means this function is pretty much useless, unless you want a static unicolor box somewhere.
 * I recommend using a predefined function to call this.
 * [VB.NET]
 * Public Sub DrawBox(a As Vector3, b As Vector3, col As Color)
 * [Function].Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A)
 * End Sub
 *
 * [C#]
 * public void DrawBox(Vector3 a, Vector3 b, Color col)
 * {
 * Function.Call(Hash.DRAW_BOX,a.X, a.Y, a.Z,b.X, b.Y, b.Z,col.R, col.G, col.B, col.A);
 * }
 *
 * Hash: 0xD3A9971CADAC7252 | Since: 323
 * @deprecated Use graphics.drawBox(x1, y1, z1, x2, y2, z2, red, green, blue, alpha) instead
 */
export declare function drawBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0x23BA6B0C2AD7B0D3 | Since: 323
 * @deprecated Use graphics.setBackfaceculling(toggle) instead
 */
export declare function setBackfaceculling(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC5C8F970D4EDFF71 | Since: 877
 * @deprecated Use graphics.setDepthwriting(toggle) instead
 */
export declare function setDepthwriting(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1DD2139A9A20DCE8 | Since: 323
 * @deprecated Use graphics.beginTakeMissionCreatorPhoto() instead
 */
export declare function beginTakeMissionCreatorPhoto(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x90A78ECAA4E78453 | Since: 323
 * @deprecated Use graphics.getStatusOfTakeMissionCreatorPhoto() instead
 */
export declare function getStatusOfTakeMissionCreatorPhoto(): number;
/**
 * No comment provided
 *
 * Hash: 0x0A46AF8A78DC5E0A | Since: 323
 * @deprecated Use graphics.freeMemoryForMissionCreatorPhoto() instead
 */
export declare function freeMemoryForMissionCreatorPhoto(): void;
/**
 * No comment provided
 *
 * Hash: 0x4862437A486F91B0 | Since: 323
 * @deprecated Use graphics.loadMissionCreatorPhoto() instead
 */
export declare function loadMissionCreatorPhoto(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x1670F8D05056F257 | Since: 323
 * @deprecated Use graphics.getStatusOfLoadMissionCreatorPhoto() instead
 */
export declare function getStatusOfLoadMissionCreatorPhoto(): [number, any];
/**
 * No comment provided
 *
 * Hash: 0x7FA5D82B8F58EC06 | Since: 323
 * @deprecated Use graphics.beginCreateMissionCreatorPhotoPreview() instead
 */
export declare function beginCreateMissionCreatorPhotoPreview(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5B0316762AFD4A64 | Since: 323
 * @deprecated Use graphics.getStatusOfCreateMissionCreatorPhotoPreview() instead
 */
export declare function getStatusOfCreateMissionCreatorPhotoPreview(): number;
/**
 * No comment provided
 *
 * Hash: 0x346EF3ECAAAB149E | Since: 323
 * @deprecated Use graphics.freeMemoryForMissionCreatorPhotoPreview() instead
 */
export declare function freeMemoryForMissionCreatorPhotoPreview(): void;
/**
 * No comment provided
 *
 * Hash: 0xA67C35C56EB1BD9D | Since: 323
 * @deprecated Use graphics.beginTakeHighQualityPhoto() instead
 */
export declare function beginTakeHighQualityPhoto(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0D6CA79EEEBD8CA3 | Since: 323
 * @deprecated Use graphics.getStatusOfTakeHighQualityPhoto() instead
 */
export declare function getStatusOfTakeHighQualityPhoto(): number;
/**
 * No comment provided
 *
 * Hash: 0xD801CC02177FA3F1 | Since: 323
 * @deprecated Use graphics.freeMemoryForHighQualityPhoto() instead
 */
export declare function freeMemoryForHighQualityPhoto(): void;
/**
 * No comment provided
 *
 * Hash: 0x1BBC135A4D25EDDE | Since: 323
 * @deprecated Use graphics.setTakenPhotoIsMugshot(toggle) instead
 */
export declare function setTakenPhotoIsMugshot(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF3F776ADA161E47D | Since: 1604
 * @deprecated Use graphics.setArenaThemeAndVariationForTakenPhoto() instead
 */
export declare function setArenaThemeAndVariationForTakenPhoto(): void;
/**
 * No comment provided
 *
 * Hash: 0xADD6627C4D325458 | Since: 2189
 * @deprecated Use graphics.setOnIslandXForTakenPhoto() instead
 */
export declare function setOnIslandXForTakenPhoto(): void;
/**
 * 1 match in 1 script. cellphone_controller.
 * p0 is -1 in scripts.
 *
 * Hash: 0x3DEC726C25A11BAC | Since: 323
 * @deprecated Use graphics.saveHighQualityPhoto(unused) instead
 */
export declare function saveHighQualityPhoto(unused: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0C0C4E81E1AC60A0 | Since: 323
 * @deprecated Use graphics.getStatusOfSaveHighQualityPhoto() instead
 */
export declare function getStatusOfSaveHighQualityPhoto(): number;
/**
 * No comment provided
 *
 * Hash: 0x759650634F07B6B4 | Since: 323
 * @deprecated Use graphics.beginCreateLowQualityCopyOfPhoto() instead
 */
export declare function beginCreateLowQualityCopyOfPhoto(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCB82A0BF0E3E3265 | Since: 323
 * @deprecated Use graphics.getStatusOfCreateLowQualityCopyOfPhoto() instead
 */
export declare function getStatusOfCreateLowQualityCopyOfPhoto(): number;
/**
 * No comment provided
 *
 * Hash: 0x6A12D88881435DCA | Since: 323
 * @deprecated Use graphics.freeMemoryForLowQualityPhoto() instead
 */
export declare function freeMemoryForLowQualityPhoto(): void;
/**
 * No comment provided
 *
 * Hash: 0x1072F115DAB0717E | Since: 323
 * @deprecated Use graphics.drawLowQualityPhotoToPhone() instead
 */
export declare function drawLowQualityPhotoToPhone(): void;
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0x34D23450F028B0BF | Since: 323
 * @deprecated Use graphics.getMaximumNumberOfPhotos() instead
 */
export declare function getMaximumNumberOfPhotos(): number;
/**
 * This function is hard-coded to always return 96.
 *
 * Hash: 0xDC54A7AF8B3A14EF | Since: 323
 * @deprecated Use graphics.getMaximumNumberOfCloudPhotos() instead
 */
export declare function getMaximumNumberOfCloudPhotos(): number;
/**
 * No comment provided
 *
 * Hash: 0x473151EBC762C6DA | Since: 323
 * @deprecated Use graphics.getCurrentNumberOfCloudPhotos() instead
 */
export declare function getCurrentNumberOfCloudPhotos(): number;
/**
 * 2 matches across 2 scripts. Only showed in appcamera & appmedia. Both were 0.
 *
 * Hash: 0x2A893980E96B659A | Since: 323
 * @deprecated Use graphics.queueOperationToCreateSortedListOfPhotos() instead
 */
export declare function queueOperationToCreateSortedListOfPhotos(): boolean;
/**
 * 3 matches across 3 scripts. First 2 were 0, 3rd was 1. Possibly a bool.
 * appcamera, appmedia, and cellphone_controller.
 *
 * Hash: 0xF5BED327CEA362B1 | Since: 323
 * @deprecated Use graphics.getStatusOfSortedListOperation() instead
 */
export declare function getStatusOfSortedListOperation(): number;
/**
 * No comment provided
 *
 * Hash: 0x4AF92ACD3141D96C | Since: 323
 * @deprecated Use graphics.clearStatusOfSortedListOperation() instead
 */
export declare function clearStatusOfSortedListOperation(): void;
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0xE791DF1F73ED2C8B | Since: 323
 * @deprecated Use graphics.doesThisPhotoSlotContainAValidPhoto() instead
 */
export declare function doesThisPhotoSlotContainAValidPhoto(): boolean;
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0xEC72C258667BE5EA | Since: 323
 * @deprecated Use graphics.loadHighQualityPhoto() instead
 */
export declare function loadHighQualityPhoto(): boolean;
/**
 * Hardcoded to always return 2.
 *
 * Hash: 0x40AFB081F8ADD4EE | Since: 323
 * @deprecated Use graphics.getLoadHighQualityPhotoStatus() instead
 */
export declare function getLoadHighQualityPhotoStatus(): number;
/**
 * No comment provided
 *
 * Hash: 0xF49E9A9716A04595 | Since: 323
 * @deprecated Use graphics.drawLightWithRangeex(pos, r, g, b, range, intensity, shadow) instead
 */
export declare function drawLightWithRangeex(pos: Vector3, r: number, g: number, b: number, range: number, intensity: number, shadow: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF2A1B2771A01DBD4 | Since: 323
 * @deprecated Use graphics.drawLightWithRange(pos, colorR, colorG, colorB, range, intensity) instead
 */
export declare function drawLightWithRange(pos: Vector3, colorR: number, colorG: number, colorB: number, range: number, intensity: number): void;
/**
 * Parameters:
 * * pos - coordinate where the spotlight is located
 * * dir - the direction vector the spotlight should aim at from its current position
 * * r,g,b - color of the spotlight
 * * distance - the maximum distance the light can reach
 * * brightness - the brightness of the light
 * * roundness - "smoothness" of the circle edge
 * * radius - the radius size of the spotlight
 * * falloff - the falloff size of the light's edge (example: www.i.imgur.com/DemAWeO.jpg)
 *
 * Example in C# (spotlight aims at the closest vehicle):
 * Vector3 myPos = Game.Player.Character.Position;
 * Vehicle nearest = World.GetClosestVehicle(myPos , 1000f);
 * Vector3 destinationCoords = nearest.Position;
 * Vector3 dirVector = destinationCoords - myPos;
 * dirVector.Normalize();
 * Function.Call(Hash.DRAW_SPOT_LIGHT, pos.X, pos.Y, pos.Z, dirVector.X, dirVector.Y, dirVector.Z, 255, 255, 255, 100.0f, 1f, 0.0f, 13.0f, 1f);
 *
 * Hash: 0xD0F64B265C8C8B33 | Since: 323
 * @deprecated Use graphics.drawSpotLight(pos, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, hardness, radius, falloff) instead
 */
export declare function drawSpotLight(pos: Vector3, dirX: number, dirY: number, dirZ: number, colorR: number, colorG: number, colorB: number, distance: number, brightness: number, hardness: number, radius: number, falloff: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5BCA583A583194DB | Since: 323
 * @deprecated Use graphics.drawShadowedSpotLight(pos, dirX, dirY, dirZ, colorR, colorG, colorB, distance, brightness, roundness, radius, falloff, shadowId) instead
 */
export declare function drawShadowedSpotLight(pos: Vector3, dirX: number, dirY: number, dirZ: number, colorR: number, colorG: number, colorB: number, distance: number, brightness: number, roundness: number, radius: number, falloff: number, shadowId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC9B18B4619F48F7B | Since: 323
 * @deprecated Use graphics.fadeUpPedLight() instead
 */
export declare function fadeUpPedLight(): void;
/**
 * No comment provided
 *
 * Hash: 0xDEADC0DEDEADC0DE | Since: 323
 * @deprecated Use graphics.updateLightsOnEntity(entity) instead
 */
export declare function updateLightsOnEntity(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x9641588DAB93B4B5 | Since: 877
 * @deprecated Use graphics.setLightOverrideMaxIntensityScale() instead
 */
export declare function setLightOverrideMaxIntensityScale(): void;
/**
 * No comment provided
 *
 * Hash: 0x393BD2275CEB7793 | Since: 1103
 * @deprecated Use graphics.getLightOverrideMaxIntensityScale() instead
 */
export declare function getLightOverrideMaxIntensityScale(): number;
/**
 * enum MarkerTypes
 * {
 * MarkerTypeUpsideDownCone = 0,
 * MarkerTypeVerticalCylinder = 1,
 * MarkerTypeThickChevronUp = 2,
 * MarkerTypeThinChevronUp = 3,
 * MarkerTypeCheckeredFlagRect = 4,
 * MarkerTypeCheckeredFlagCircle = 5,
 * MarkerTypeVerticleCircle = 6,
 * MarkerTypePlaneModel = 7,
 * MarkerTypeLostMCDark = 8,
 * MarkerTypeLostMCLight = 9,
 * MarkerTypeNumber0 = 10,
 * MarkerTypeNumber1 = 11,
 * MarkerTypeNumber2 = 12,
 * MarkerTypeNumber3 = 13,
 * MarkerTypeNumber4 = 14,
 * MarkerTypeNumber5 = 15,
 * MarkerTypeNumber6 = 16,
 * MarkerTypeNumber7 = 17,
 * MarkerTypeNumber8 = 18,
 * MarkerTypeNumber9 = 19,
 * MarkerTypeChevronUpx1 = 20,
 * MarkerTypeChevronUpx2 = 21,
 * MarkerTypeChevronUpx3 = 22,
 * MarkerTypeHorizontalCircleFat = 23,
 * MarkerTypeReplayIcon = 24,
 * MarkerTypeHorizontalCircleSkinny = 25,
 * MarkerTypeHorizontalCircleSkinny_Arrow = 26,
 * MarkerTypeHorizontalSplitArrowCircle = 27,
 * MarkerTypeDebugSphere = 28,
 * MarkerTypeDallorSign = 29,
 * MarkerTypeHorizontalBars = 30,
 * MarkerTypeWolfHead = 31
 * };
 *
 * dirX/Y/Z represent a heading on each axis in which the marker should face, alternatively you can rotate each axis independently with rotX/Y/Z (and set dirX/Y/Z all to 0).
 *
 * faceCamera - Rotates only the y-axis (the heading) towards the camera
 *
 * p19 - no effect, default value in script is 2
 *
 * rotate - Rotates only on the y-axis (the heading)
 *
 * textureDict - Name of texture dictionary to load texture from (e.g. "GolfPutting")
 *
 * textureName - Name of texture inside dictionary to load (e.g. "PuttingMarker")
 *
 * drawOnEnts - Draws the marker onto any entities that intersect it
 *
 * basically what he said, except textureDict and textureName are totally not const char*, or if so, then they are always set to 0/NULL/nullptr in every script I checked, eg:
 *
 * `bj.c: graphics::draw_marker(6, vParam0, 0f, 0f, 1f, 0f, 0f, 0f, 4f, 4f, 4f, 240, 200, 80, iVar1, 0, 0, 2, 0, 0, 0, false);`
 *
 * his is what I used to draw an amber downward pointing chevron "V", has to be redrawn every frame.  The 180 is for 180 degrees rotation around the Y axis, the 50 is alpha, assuming max is 100, but it will accept 255.
 *
 * `GRAPHICS::DRAW_MARKER(2, v.x, v.y, v.z + 2, 0, 0, 0, 0, 180, 0, 2, 2, 2, 255, 128, 0, 50, 0, 1, 1, 0, 0, 0, 0);`
 *
 *
 *
 * Hash: 0x28477EC23D892089 | Since: 323
 * @deprecated Use graphics.drawMarker(_type, pos, dirX, dirY, dirZ, rot, scale, red, green, blue, alpha, bobUpAndDown, faceCamera, rotate, textureDict, textureName, drawOnEnts) instead
 */
export declare function drawMarker(_type: number, pos: Vector3, dirX: number, dirY: number, dirZ: number, rot: Vector3, scale: Vector3, red: number, green: number, blue: number, alpha: number, bobUpAndDown: boolean, faceCamera: boolean, rotate: boolean, textureDict: string, textureName: string, drawOnEnts: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE82728F0DE75D13A | Since: 573
 * @deprecated Use graphics.drawMarkerEx(_type, pos, dirX, dirY, dirZ, rot, scale, red, green, blue, alpha, bobUpAndDown, faceCamera, rotate, textureDict, textureName, drawOnEnts) instead
 */
export declare function drawMarkerEx(_type: number, pos: Vector3, dirX: number, dirY: number, dirZ: number, rot: Vector3, scale: Vector3, red: number, green: number, blue: number, alpha: number, bobUpAndDown: boolean, faceCamera: boolean, rotate: boolean, textureDict: string, textureName: string, drawOnEnts: boolean): void;
/**
 * Draws a 3D sphere, typically seen in the GTA:O freemode event "Penned In".
 * Example https://imgur.com/nCbtS4H
 *
 * alpha - The alpha for the sphere. Goes from 0.0 to 1.0.
 *
 * Hash: 0x799017F9E3B10112 | Since: 463
 * @deprecated Use graphics.drawMarkerSphere(pos, radius, red, green, blue, alpha) instead
 */
export declare function drawMarkerSphere(pos: Vector3, radius: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * Creates a checkpoint. Returns the handle of the checkpoint.
 *
 * 20/03/17 : Attention, checkpoints are already handled by the game itself, so you must not loop it like markers.
 *
 * Parameters:
 * * type - The type of checkpoint to create. See below for a list of checkpoint types.
 * * pos1 - The position of the checkpoint.
 * * pos2 - The position of the next checkpoint to point to.
 * * radius - The radius of the checkpoint.
 * * color - The color of the checkpoint.
 * * reserved - Special parameter, see below for details. Usually set to 0 in the scripts.
 *
 * Checkpoint types:
 * 0-4---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 5-9---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 10-14-------Ring: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 15-19-------1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 20-24-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 25-29-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 30-34-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 35-38-------Ring: Airplane Up, Left, Right, UpsideDown
 * 39----------?
 * 40----------Ring: just a ring
 * 41----------?
 * 42-44-------Cylinder w/ number (uses 'reserved' parameter)
 * 45-47-------Cylinder no arrow or number
 *
 * If using type 42-44, reserved sets number / number and shape to display
 *
 * 0-99------------Just numbers (0-99)
 * 100-109-----------------Arrow (0-9)
 * 110-119------------Two arrows (0-9)
 * 120-129----------Three arrows (0-9)
 * 130-139----------------Circle (0-9)
 * 140-149------------CycleArrow (0-9)
 * 150-159----------------Circle (0-9)
 * 160-169----Circle  w/ pointer (0-9)
 * 170-179-------Perforated ring (0-9)
 * 180-189----------------Sphere (0-9)
 *
 * Hash: 0x0134F0835AB6BFCB | Since: 323
 * @deprecated Use graphics.createCheckpoint(_type, posX1, posY1, posZ1, posX2, posY2, posZ2, diameter, red, green, blue, alpha, reserved) instead
 */
export declare function createCheckpoint(_type: number, posX1: number, posY1: number, posZ1: number, posX2: number, posY2: number, posZ2: number, diameter: number, red: number, green: number, blue: number, alpha: number, reserved: number): number;
/**
 * No comment provided
 *
 * Hash: 0x4B5B4DA5D79F1943 | Since: 323
 * @deprecated Use graphics.setCheckpointInsideCylinderHeightScale(checkpoint, scale) instead
 */
export declare function setCheckpointInsideCylinderHeightScale(checkpoint: number, scale: number): void;
/**
 * No comment provided
 *
 * Hash: 0x44621483FF966526 | Since: 877
 * @deprecated Use graphics.setCheckpointInsideCylinderScale(checkpoint, scale) instead
 */
export declare function setCheckpointInsideCylinderScale(checkpoint: number, scale: number): void;
/**
 * Sets the cylinder height of the checkpoint.
 *
 * Parameters:
 * * nearHeight - The height of the checkpoint when inside of the radius.
 * * farHeight - The height of the checkpoint when outside of the radius.
 * * radius - The radius of the checkpoint.
 *
 * Hash: 0x2707AAE9D9297D89 | Since: 323
 * @deprecated Use graphics.setCheckpointCylinderHeight(checkpoint, nearHeight, farHeight, radius) instead
 */
export declare function setCheckpointCylinderHeight(checkpoint: number, nearHeight: number, farHeight: number, radius: number): void;
/**
 * Sets the checkpoint color.
 *
 * Hash: 0x7167371E8AD747F7 | Since: 323
 * @deprecated Use graphics.setCheckpointRgba(checkpoint, red, green, blue, alpha) instead
 */
export declare function setCheckpointRgba(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * Sets the checkpoint icon color.
 *
 * Hash: 0xB9EA40907C680580 | Since: 323
 * @deprecated Use graphics.setCheckpointRgba2(checkpoint, red, green, blue, alpha) instead
 */
export declare function setCheckpointRgba2(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * This does not move an existing checkpoint... so wtf.
 *
 * Hash: 0xF51D36185993515D | Since: 323
 * @deprecated Use graphics.setCheckpointClipplaneWithPosNorm(checkpoint, pos, unkX, unkY, unkZ) instead
 */
export declare function setCheckpointClipplaneWithPosNorm(checkpoint: number, pos: Vector3, unkX: number, unkY: number, unkZ: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFCF6788FC4860CD4 | Since: 1734
 * @deprecated Use graphics.setCheckpointForceOldArrowPointing(checkpoint) instead
 */
export declare function setCheckpointForceOldArrowPointing(checkpoint: number): void;
/**
 * Unknown. Called after creating a checkpoint (type: 51) in the creators.
 *
 * Hash: 0x615D3925E87A3B26 | Since: 323
 * @deprecated Use graphics.setCheckpointDecalRotAlignedToCameraRot(checkpoint) instead
 */
export declare function setCheckpointDecalRotAlignedToCameraRot(checkpoint: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDB1EA9411C8911EC | Since: 1180
 * @deprecated Use graphics.setCheckpointForceDirection(checkpoint) instead
 */
export declare function setCheckpointForceDirection(checkpoint: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3C788E7F6438754D | Since: 1180
 * @deprecated Use graphics.setCheckpointDirection(checkpoint, pos) instead
 */
export declare function setCheckpointDirection(checkpoint: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xF5ED37F54CD4D52E | Since: 323
 * @deprecated Use graphics.deleteCheckpoint(checkpoint) instead
 */
export declare function deleteCheckpoint(checkpoint: number): void;
/**
 * No comment provided
 *
 * Hash: 0x22A249A53034450A | Since: 323
 * @deprecated Use graphics.dontRenderInGameUi() instead
 */
export declare function dontRenderInGameUi(): void;
/**
 * No comment provided
 *
 * Hash: 0xDC459CFA0CCE245B | Since: 323
 * @deprecated Use graphics.forceRenderInGameUi(toggle) instead
 */
export declare function forceRenderInGameUi(toggle: boolean): void;
/**
 * This function can requests texture dictonaries from following RPFs:
 * scaleform_generic.rpf
 * scaleform_minigames.rpf
 * scaleform_minimap.rpf
 * scaleform_web.rpf
 *
 * last param isnt a toggle
 *
 * Hash: 0xDFA2EF8E04127DD5 | Since: 323
 * @deprecated Use graphics.requestStreamedTextureDict(textureDict) instead
 */
export declare function requestStreamedTextureDict(textureDict: string): void;
/**
 * No comment provided
 *
 * Hash: 0x0145F696AAAAD2E4 | Since: 323
 * @deprecated Use graphics.hasStreamedTextureDictLoaded(textureDict) instead
 */
export declare function hasStreamedTextureDictLoaded(textureDict: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBE2CACCF5A8AA805 | Since: 323
 * @deprecated Use graphics.setStreamedTextureDictAsNoLongerNeeded(textureDict) instead
 */
export declare function setStreamedTextureDictAsNoLongerNeeded(textureDict: string): void;
/**
 * Draws a rectangle on the screen.
 *
 * -x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)
 *
 * -y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)
 *
 * -width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)
 *
 * -height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)
 *
 * -R: Red part of the color. (0-255)
 *
 * -G: Green part of the color. (0-255)
 *
 * -B: Blue part of the color. (0-255)
 *
 * -A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)
 *
 * The total number of rectangles to be drawn in one frame is apparently limited to 399.
 *
 *
 * Hash: 0x3A618A217E5154F0 | Since: 323
 * @deprecated Use graphics.drawRect(x, y, width, height, r, g, b, a) instead
 */
export declare function drawRect(x: number, y: number, width: number, height: number, r: number, g: number, b: number, a: number): void;
/**
 * Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for TV channels and other draw commands that are used with a world render target.
 *
 * Hash: 0xC6372ECD45D73BCD | Since: 323
 * @deprecated Use graphics.setScriptGfxDrawBehindPausemenu(toggle) instead
 */
export declare function setScriptGfxDrawBehindPausemenu(toggle: boolean): void;
/**
 * Sets the draw order for script draw commands.
 *
 * Examples from decompiled scripts:
 * `GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);`
 * `GRAPHICS::DRAW_RECT(0.5, 0.5, 3.0, 3.0, v_4, v_5, v_6, a_0._f172, 0);`
 *
 * `GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);`
 * `GRAPHICS::DRAW_RECT(0.5, 0.5, 1.5, 1.5, 0, 0, 0, 255, 0);`
 *
 * Hash: 0x61BB1D9B3A95D802 | Since: 323
 * @deprecated Use graphics.setScriptGfxDrawOrder(drawOrder) instead
 */
export declare function setScriptGfxDrawOrder(drawOrder: number): void;
/**
 * horizontalAlign: The horizontal alignment. This can be 67 ('C'), 76 ('L'), or 82 ('R').
 * verticalAlign: The vertical alignment. This can be 67 ('C'), 66 ('B'), or 84 ('T').
 *
 * This function anchors script draws to a side of the safe zone. This needs to be called to make the interface independent of the player's safe zone configuration.
 *
 * These values are equivalent to alignX and alignY in common:/data/ui/frontend.xml, which can be used as a baseline for default alignment.
 *
 * Using any other value (including 0) will result in the safe zone not being taken into account for this draw. The canonical value for this is 'I' (73).
 *
 * For example, you can use SET_SCRIPT_GFX_ALIGN(0, 84) to only scale on the Y axis (to the top), but not change the X axis.
 *
 * To reset the value, use RESET_SCRIPT_GFX_ALIGN.
 *
 * Hash: 0xB8A850F20A067EB6 | Since: 323
 * @deprecated Use graphics.setScriptGfxAlign(horizontalAlign, verticalAlign) instead
 */
export declare function setScriptGfxAlign(horizontalAlign: number, verticalAlign: number): void;
/**
 * This function resets the alignment set using SET_SCRIPT_GFX_ALIGN and SET_SCRIPT_GFX_ALIGN_PARAMS to the default values ('I', 'I'; 0, 0, 0, 0).
 * This should be used after having used the aforementioned functions in order to not affect any other scripts attempting to draw.
 *
 * Hash: 0xE3A3DB414A373DAB | Since: 323
 * @deprecated Use graphics.resetScriptGfxAlign() instead
 */
export declare function resetScriptGfxAlign(): void;
/**
 * Sets the draw offset/calculated size for SET_SCRIPT_GFX_ALIGN. If using any alignment other than left/top, the game expects the width/height to be configured using this native in order to get a proper starting position for the draw command.
 *
 * Hash: 0xF5A2C681787E579D | Since: 323
 * @deprecated Use graphics.setScriptGfxAlignParams(x, y, w, h) instead
 */
export declare function setScriptGfxAlignParams(x: number, y: number, w: number, h: number): void;
/**
 * Calculates the effective X/Y fractions when applying the values set by SET_SCRIPT_GFX_ALIGN and SET_SCRIPT_GFX_ALIGN_PARAMS
 *
 * Hash: 0x6DD8F5AA635EB4B2 | Since: 323
 * @deprecated Use graphics.getScriptGfxAlignPosition(x, y) instead
 */
export declare function getScriptGfxAlignPosition(x: number, y: number): [number, number];
/**
 * Gets the scale of safe zone. if the safe zone size scale is max, it will return 1.0.
 *
 * Hash: 0xBAF107B6BB2C97F0 | Since: 323
 * @deprecated Use graphics.getSafeZoneSize() instead
 */
export declare function getSafeZoneSize(): number;
/**
 * Draws a 2D sprite on the screen.
 *
 * Parameters:
 * textureDict - Name of texture dictionary to load texture from (e.g. "CommonMenu", "MPWeaponsCommon", etc.)
 *
 * textureName - Name of texture to load from texture dictionary (e.g. "last_team_standing_icon", "tennis_icon", etc.)
 *
 * screenX/Y - Screen offset (0.5 = center)
 * scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)
 *
 * heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
 *
 * red,green,blue - Sprite color (default = 255/255/255)
 *
 * alpha - opacity level
 *
 * Hash: 0xE7FFAE5EBF23D890 | Since: 323
 * @deprecated Use graphics.drawSprite(textureDict, textureName, screenSize, width, height, heading, red, green, blue, alpha) instead
 */
export declare function drawSprite(textureDict: string, textureName: string, screenSize: Vector2, width: number, height: number, heading: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * Used in arcade games and Beam hack minigame in Doomsday Heist. I will most certainly dive into this to try replicate arcade games.
 * x position must be between 0.0 and 1.0 (1.0 being the most right side of the screen)
 * y position must be between 0.0 and 1.0 (1.0 being the most bottom side of the screen)
 * width 0.0 - 1.0 is the reasonable amount generally
 * height 0.0 - 1.0 is the reasonable amount generally
 * p6 almost always 0.0
 * p11 seems to be unknown but almost always 0 int
 *
 * Hash: 0x2D3B147AFAD49DE0 | Since: 1290
 * @deprecated Use graphics.drawSpriteArx(textureDict, textureName, x, y, width, height, red, green, blue, alpha) instead
 */
export declare function drawSpriteArx(textureDict: string, textureName: string, x: number, y: number, width: number, height: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * Similar to _DRAW_SPRITE, but seems to be some kind of "interactive" sprite, at least used by render targets.
 * These seem to be the only dicts ever requested by this native:
 *
 * prop_screen_biker_laptop
 * Prop_Screen_GR_Disruption
 * Prop_Screen_TaleOfUs
 * prop_screen_nightclub
 * Prop_Screen_IE_Adhawk
 * prop_screen_sm_free_trade_shipping
 * prop_screen_hacker_truck
 * MPDesktop
 * Prop_Screen_Nightclub
 * And a few others
 *
 *
 * Hash: 0x2BC54A8188768488 | Since: 877
 * @deprecated Use graphics.drawSpriteNamedRendertarget(textureDict, textureName, screenSize, width, height, heading, red, green, blue, alpha) instead
 */
export declare function drawSpriteNamedRendertarget(textureDict: string, textureName: string, screenSize: Vector2, width: number, height: number, heading: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * Similar to DRAW_SPRITE, but allows to specify the texture coordinates used to draw the sprite.
 *
 * u1, v1 - texture coordinates for the top-left corner
 * u2, v2 - texture coordinates for the bottom-right corner
 *
 * Hash: 0x95812F9B26074726 | Since: 1868
 * @deprecated Use graphics.drawSpriteArxWithUv(textureDict, textureName, x, y, width, height, u1, v1, u2, v2, heading, red, green, blue, alpha) instead
 */
export declare function drawSpriteArxWithUv(textureDict: string, textureName: string, x: number, y: number, width: number, height: number, u1: number, v1: number, u2: number, v2: number, heading: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * Example:
 * `GRAPHICS::ADD_ENTITY_ICON(a_0, "MP_Arrow");`
 *
 * I tried this and nothing happened...
 *
 * Hash: 0x9CD43EEE12BF4DD0 | Since: 323
 * @deprecated Use graphics.addEntityIcon(entity, icon) instead
 */
export declare function addEntityIcon(entity: number | Entity, icon: string): number;
/**
 * No comment provided
 *
 * Hash: 0xE0E8BEECCA96BA31 | Since: 323
 * @deprecated Use graphics.setEntityIconVisibility(entity, toggle) instead
 */
export declare function setEntityIconVisibility(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1D5F595CCAE2E238 | Since: 323
 * @deprecated Use graphics.setEntityIconColor(entity, red, green, blue, alpha) instead
 */
export declare function setEntityIconColor(entity: number | Entity, red: number, green: number, blue: number, alpha: number): void;
/**
 * Sets the on-screen drawing origin for draw-functions (which is normally x=0,y=0 in the upper left corner of the screen) to a world coordinate.
 * From now on, the screen coordinate which displays the given world coordinate on the screen is seen as x=0,y=0.
 *
 * Example in C#:
 * Vector3 boneCoord = somePed.GetBoneCoord(Bone.SKEL_Head);
 * Function.Call(Hash.SET_DRAW_ORIGIN, boneCoord.X, boneCoord.Y, boneCoord.Z, 0);
 * Function.Call(Hash.DRAW_SPRITE, "helicopterhud", "hud_corner", -0.01, -0.015, 0.013, 0.013, 0.0, 255, 0, 0, 200);
 * Function.Call(Hash.DRAW_SPRITE, "helicopterhud", "hud_corner", 0.01, -0.015, 0.013, 0.013, 90.0, 255, 0, 0, 200);
 * Function.Call(Hash.DRAW_SPRITE, "helicopterhud", "hud_corner", -0.01, 0.015, 0.013, 0.013, 270.0, 255, 0, 0, 200);
 * Function.Call(Hash.DRAW_SPRITE, "helicopterhud", "hud_corner", 0.01, 0.015, 0.013, 0.013, 180.0, 255, 0, 0, 200);
 * Function.Call(Hash.CLEAR_DRAW_ORIGIN);
 *
 * Result: www11.pic-upload.de/19.06.15/bkqohvil2uao.jpg
 * If the pedestrian starts walking around now, the sprites are always around her head, no matter where the head is displayed on the screen.
 *
 * This function also effects the drawing of texts and other UI-elements.
 * `The effect can be reset by calling GRAPHICS::CLEAR_DRAW_ORIGIN().`
 *
 * Hash: 0xAA0008F3BBB8F416 | Since: 323
 * @deprecated Use graphics.setDrawOrigin(pos) instead
 */
export declare function setDrawOrigin(pos: Vector3): void;
/**
 * `Resets the screen's draw-origin which was changed by the function GRAPHICS::SET_DRAW_ORIGIN(...) back to x=0,y=0.`
 *
 * `See GRAPHICS::SET_DRAW_ORIGIN(...) for further information.`
 *
 * Hash: 0xFF0B610F6BE0D7AF | Since: 323
 * @deprecated Use graphics.clearDrawOrigin() instead
 */
export declare function clearDrawOrigin(): void;
/**
 * No comment provided
 *
 * Hash: 0x338D9F609FD632DB | Since: 1290
 * @deprecated Use graphics.setBinkMovie(name) instead
 */
export declare function setBinkMovie(name: string): number;
/**
 * No comment provided
 *
 * Hash: 0x70D2CC8A542A973C | Since: 1290
 * @deprecated Use graphics.playBinkMovie(binkMovie) instead
 */
export declare function playBinkMovie(binkMovie: number): void;
/**
 * No comment provided
 *
 * Hash: 0x63606A61DE68898A | Since: 1290
 * @deprecated Use graphics.stopBinkMovie(binkMovie) instead
 */
export declare function stopBinkMovie(binkMovie: number): void;
/**
 * No comment provided
 *
 * Hash: 0x04D950EEFA4EED8C | Since: 1290
 * @deprecated Use graphics.releaseBinkMovie(binkMovie) instead
 */
export declare function releaseBinkMovie(binkMovie: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7118E83EEB9F7238 | Since: 1290
 * @deprecated Use graphics.drawBinkMovie(binkMovie, r, g, b, a) instead
 */
export declare function drawBinkMovie(binkMovie: number, r: number, g: number, b: number, a: number): void;
/**
 * In percentage: 0.0 - 100.0
 *
 * Hash: 0x0CB6B3446855B57A | Since: 1290
 * @deprecated Use graphics.setBinkMovieTime(binkMovie, progress) instead
 */
export declare function setBinkMovieTime(binkMovie: number, progress: number): void;
/**
 * In percentage: 0.0 - 100.0
 *
 * Hash: 0x8E17DDD6B9D5BF29 | Since: 1734
 * @deprecated Use graphics.getBinkMovieTime(binkMovie) instead
 */
export declare function getBinkMovieTime(binkMovie: number): number;
/**
 * `binkMovie: Is return value from _SET_BINK_MOVIE. Has something to do with bink volume? (audRequestedSettings::SetVolumeCurveScale)`
 *
 * Hash: 0xAFF33B1178172223 | Since: 1290
 * @deprecated Use graphics.setBinkMovieVolume(binkMovie, value) instead
 */
export declare function setBinkMovieVolume(binkMovie: number, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x845BAD77CC770633 | Since: 323
 * @deprecated Use graphics.attachTvAudioToEntity(entity) instead
 */
export declare function attachTvAudioToEntity(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xF816F2933752322D | Since: 1868
 * @deprecated Use graphics.setBinkMovieAudioFrontend(binkMovie) instead
 */
export declare function setBinkMovieAudioFrontend(binkMovie: number): void;
/**
 * Probably changes tvs from being a 3d audio to being "global" audio
 *
 * Hash: 0x113D2C5DC57E1774 | Since: 323
 * @deprecated Use graphics.setTvAudioFrontend(toggle) instead
 */
export declare function setTvAudioFrontend(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6805D58CAA427B72 | Since: 1290
 * @deprecated Use graphics.setBinkShouldSkip(binkMovie, bShouldSkip) instead
 */
export declare function setBinkShouldSkip(binkMovie: number, bShouldSkip: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB66064452270E8F1 | Since: 323
 * @deprecated Use graphics.loadMovieMeshSet(movieMeshSetName) instead
 */
export declare function loadMovieMeshSet(movieMeshSetName: string): number;
/**
 * No comment provided
 *
 * Hash: 0xEB119AA014E89183 | Since: 323
 * @deprecated Use graphics.releaseMovieMeshSet(movieMeshSet) instead
 */
export declare function releaseMovieMeshSet(movieMeshSet: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9B6E70C5CEEF4EEB | Since: 323
 * @deprecated Use graphics.queryMovieMeshSetState() instead
 */
export declare function queryMovieMeshSetState(): number;
/**
 * int screenresx,screenresy;
 * GET_SCREEN_RESOLUTION(&screenresx,&screenresy);
 *
 * Hash: 0x888D57E407E63624 | Since: 323
 * @deprecated Use graphics.getScreenResolution() instead
 */
export declare function getScreenResolution(): [number, number];
/**
 * Returns current screen resolution.
 *
 * Hash: 0x873C9F3104101DD3 | Since: 323
 * @deprecated Use graphics.getActualScreenResolution() instead
 */
export declare function getActualScreenResolution(): [number, number];
/**
 * No comment provided
 *
 * Hash: 0xF1307EF624A80D87 | Since: 323
 * @deprecated Use graphics.getAspectRatio(b) instead
 */
export declare function getAspectRatio(b: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0xB2EBE8CBC58B90E9 | Since: 323
 * @deprecated Use graphics.getScreenAspectRatio() instead
 */
export declare function getScreenAspectRatio(): number;
/**
 * Setting Aspect Ratio Manually in game will return:
 *
 * false - for Narrow format Aspect Ratios (3:2, 4:3, 5:4, etc. )
 * true - for Wide format Aspect Ratios (5:3, 16:9, 16:10, etc. )
 *
 * Setting Aspect Ratio to "Auto" in game will return "false" or "true" based on the actual set Resolution Ratio.
 *
 * Hash: 0x30CF4BDA4FCB1905 | Since: 323
 * @deprecated Use graphics.getIsWidescreen() instead
 */
export declare function getIsWidescreen(): boolean;
/**
 * false = Any resolution < 1280x720
 * true = Any resolution >= 1280x720
 *
 * Hash: 0x84ED31191CC5D2C9 | Since: 323
 * @deprecated Use graphics.getIsHidef() instead
 */
export declare function getIsHidef(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEFABC7722293DA7C | Since: 323
 * @deprecated Use graphics.adjustNextPosSizeAsNormalized169() instead
 */
export declare function adjustNextPosSizeAsNormalized169(): void;
/**
 * Enables Night Vision.
 *
 * Example:
 * C#: Function.Call(Hash.SET_NIGHTVISION, true);
 * `C++: GRAPHICS::SET_NIGHTVISION(true);`
 *
 * BOOL toggle:
 * true = turns night vision on for your player.
 * false = turns night vision off for your player.
 *
 * Hash: 0x18F621F7A5B1F85D | Since: 323
 * @deprecated Use graphics.setNightvision(toggle) instead
 */
export declare function setNightvision(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x35FB78DC42B7BD21 | Since: 323
 * @deprecated Use graphics.getRequestingnightvision() instead
 */
export declare function getRequestingnightvision(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2202A3F42C8E5F79 | Since: 323
 * @deprecated Use graphics.getUsingnightvision() instead
 */
export declare function getUsingnightvision(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEF398BEEE4EF45F9 | Since: 323
 * @deprecated Use graphics.setExposuretweak(toggle) instead
 */
export declare function setExposuretweak(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x814AF7DCAACC597B | Since: 372
 * @deprecated Use graphics.forceExposureReadback(toggle) instead
 */
export declare function forceExposureReadback(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x43FA7CBE20DAB219 | Since: 1290
 * @deprecated Use graphics.overrideNightvisionLightRange() instead
 */
export declare function overrideNightvisionLightRange(): void;
/**
 * No comment provided
 *
 * Hash: 0xE787BF1C5CF823C9 | Since: 323
 * @deprecated Use graphics.setNoiseoveride(toggle) instead
 */
export declare function setNoiseoveride(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCB6A7C3BB17A0C67 | Since: 323
 * @deprecated Use graphics.setNoisinessoveride(value) instead
 */
export declare function setNoisinessoveride(value: number): void;
/**
 * Convert a world coordinate into its relative screen coordinate.  (WorldToScreen)
 *
 * Returns a boolean; whether or not the operation was successful. It will return false if the coordinates given are not visible to the rendering camera.
 *
 *
 * For .NET users...
 *
 * VB:
 * Public Shared Function World3DToScreen2d(pos as vector3) As Vector2
 *
 * Dim x2dp, y2dp As New Native.OutputArgument
 *
 * Native.Function.Call(Of Boolean)(Native.Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.x, pos.y, pos.z, x2dp, y2dp)
 * Return New Vector2(x2dp.GetResult(Of Single), y2dp.GetResult(Of Single))
 *
 * End Function
 *
 * C#:
 * Vector2 World3DToScreen2d(Vector3 pos)
 * {
 * var x2dp = new OutputArgument();
 * var y2dp = new OutputArgument();
 *
 * Function.Call<bool>(Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.X, pos.Y, pos.Z, x2dp, y2dp);
 * return new Vector2(x2dp.GetResult<float>(), y2dp.GetResult<float>());
 * }
 * //USE VERY SMALL VALUES FOR THE SCALE OF RECTS/TEXT because it is dramatically larger on screen than in 3D, e.g '0.05' small.
 *
 * Used to be called _WORLD3D_TO_SCREEN2D
 *
 * I thought we lost you from the scene forever. It does seem however that calling SET_DRAW_ORIGIN then your natives, then ending it. Seems to work better for certain things such as keeping boxes around people for a predator missile e.g.
 *
 * Hash: 0x34E82F05DF2974F5 | Since: 323
 * @deprecated Use graphics.getScreenCoordFromWorldCoord(worldPos) instead
 */
export declare function getScreenCoordFromWorldCoord(worldPos: Vector3): [boolean, number, number];
/**
 * Returns the texture resolution of the passed texture dict+name.
 *
 * Note: Most texture resolutions are doubled compared to the console version of the game.
 *
 * Hash: 0x35736EE65BD00C11 | Since: 323
 * @deprecated Use graphics.getTextureResolution(textureDict, textureName) instead
 */
export declare function getTextureResolution(textureDict: string, textureName: string): Vector3;
/**
 * Overriding ped badge texture to a passed texture. It's synced between players (even custom textures!), don't forget to request used dict on *all* clients to make it sync properly. Can be removed by passing empty strings.
 *
 * Hash: 0x95EB5E34F821BABE | Since: 877
 * @deprecated Use graphics.overridePedCrewLogoTexture(ped, txd, txn) instead
 */
export declare function overridePedCrewLogoTexture(ped: number | Ped, txd: string, txn: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE2892E7E55D7073A | Since: 323
 * @deprecated Use graphics.setDistanceBlurStrengthOverride() instead
 */
export declare function setDistanceBlurStrengthOverride(): void;
/**
 * Purpose of p0 and p1 unknown.
 *
 * Hash: 0x0AB84296FED9CFC6 | Since: 323
 * @deprecated Use graphics.setFlash(fadeIn, duration, fadeOut) instead
 */
export declare function setFlash(fadeIn: number, duration: number, fadeOut: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3669F1B198DCAA4F | Since: 323
 * @deprecated Use graphics.disableOcclusionThisFrame() instead
 */
export declare function disableOcclusionThisFrame(): void;
/**
 * Does not affect weapons, particles, fire/explosions, flashlights or the sun.
 * When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.
 *
 * Used in Humane Labs Heist for EMP.
 *
 * state: True turns off all artificial light sources in the map: buildings, street lights, car lights, etc. False turns them back on.
 *
 * Hash: 0x1268615ACE24D504 | Since: 323
 * @deprecated Use graphics.setArtificialLightsState(state) instead
 */
export declare function setArtificialLightsState(state: boolean): void;
/**
 * If "blackout" is enabled, this native allows you to ignore "blackout" for vehicles.
 *
 * Hash: 0xE2B187C0939B3D32 | Since: 2060
 * @deprecated Use graphics.setArtificialVehicleLightsState(toggle) instead
 */
export declare function setArtificialVehicleLightsState(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC35A6D07C93802B2 | Since: 323
 * @deprecated Use graphics.disableHdtexThisFrame() instead
 */
export declare function disableHdtexThisFrame(): void;
/**
 * Creates a tracked point, useful for checking the visibility of a 3D point on screen.
 *
 * Hash: 0xE2C9439ED45DEA60 | Since: 323
 * @deprecated Use graphics.createTrackedPoint() instead
 */
export declare function createTrackedPoint(): number;
/**
 * No comment provided
 *
 * Hash: 0x164ECBB3CF750CB0 | Since: 323
 * @deprecated Use graphics.setTrackedPointInfo(point, pos, radius) instead
 */
export declare function setTrackedPointInfo(point: number, pos: Vector3, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC45CCDAAC9221CA8 | Since: 323
 * @deprecated Use graphics.isTrackedPointVisible(point) instead
 */
export declare function isTrackedPointVisible(point: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB25DC90BAD56CA42 | Since: 323
 * @deprecated Use graphics.destroyTrackedPoint(point) instead
 */
export declare function destroyTrackedPoint(point: number): void;
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0xBE197EAA669238F4 | Since: 323
 * @deprecated Use graphics.setGrassCullSphere() instead
 */
export declare function setGrassCullSphere(): number;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0x61F95E5BB3E0A8C6 | Since: 323
 * @deprecated Use graphics.removeGrassCullSphere(handle) instead
 */
export declare function removeGrassCullSphere(handle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAE51BC858F32BA66 | Since: 323
 * @deprecated Use graphics.procgrassEnableCullsphere(handle, pos, scale) instead
 */
export declare function procgrassEnableCullsphere(handle: number, pos: Vector3, scale: number): void;
/**
 * No comment provided
 *
 * Hash: 0x649C97D52332341A | Since: 323
 * @deprecated Use graphics.procgrassDisableCullsphere(handle) instead
 */
export declare function procgrassDisableCullsphere(handle: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2C42340F916C5930 | Since: 323
 * @deprecated Use graphics.procgrassIsCullsphereEnabled(handle) instead
 */
export declare function procgrassIsCullsphereEnabled(handle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x14FC5833464340A8 | Since: 323
 * @deprecated Use graphics.procgrassEnableAmbscalescan() instead
 */
export declare function procgrassEnableAmbscalescan(): void;
/**
 * No comment provided
 *
 * Hash: 0x0218BA067D249DEA | Since: 323
 * @deprecated Use graphics.procgrassDisableAmbscalescan() instead
 */
export declare function procgrassDisableAmbscalescan(): void;
/**
 * No comment provided
 *
 * Hash: 0x1612C45F9E3E0D44 | Since: 323
 * @deprecated Use graphics.disableProcobjCreation() instead
 */
export declare function disableProcobjCreation(): void;
/**
 * No comment provided
 *
 * Hash: 0x5DEBD9C4DC995692 | Since: 323
 * @deprecated Use graphics.enableProcobjCreation() instead
 */
export declare function enableProcobjCreation(): void;
/**
 * No comment provided
 *
 * Hash: 0xAAE9BE70EC7C69AB | Since: 1290
 * @deprecated Use graphics.grassbatchEnableFlatteningExtInSphere(pos, scale) instead
 */
export declare function grassbatchEnableFlatteningExtInSphere(pos: Vector3, scale: number): void;
/**
 * Wraps 0xAAE9BE70EC7C69AB with FLT_MAX as p7
 *
 * Hash: 0x6D955F6A9E0295B1 | Since: 323
 * @deprecated Use graphics.grassbatchEnableFlatteningInSphere(pos, radius) instead
 */
export declare function grassbatchEnableFlatteningInSphere(pos: Vector3, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0x302C91AB2D477F7E | Since: 323
 * @deprecated Use graphics.grassbatchDisableFlattening() instead
 */
export declare function grassbatchDisableFlattening(): void;
/**
 * No comment provided
 *
 * Hash: 0x03FC694AE06C5A20 | Since: 323
 * @deprecated Use graphics.cascadeShadowsInitSession() instead
 */
export declare function cascadeShadowsInitSession(): void;
/**
 * No comment provided
 *
 * Hash: 0xD2936CAB8B58FCBD | Since: 323
 * @deprecated Use graphics.cascadeShadowsSetCascadeBounds() instead
 */
export declare function cascadeShadowsSetCascadeBounds(): void;
/**
 * No comment provided
 *
 * Hash: 0x5F0F3F56635809EF | Since: 323
 * @deprecated Use graphics.cascadeShadowsSetCascadeBoundsScale() instead
 */
export declare function cascadeShadowsSetCascadeBoundsScale(): void;
/**
 * No comment provided
 *
 * Hash: 0x5E9DAF5A20F15908 | Since: 323
 * @deprecated Use graphics.cascadeShadowsSetEntityTrackerScale() instead
 */
export declare function cascadeShadowsSetEntityTrackerScale(): void;
/**
 * No comment provided
 *
 * Hash: 0x36F6626459D91457 | Since: 323
 * @deprecated Use graphics.cascadeShadowsSetSplitZExpWeight() instead
 */
export declare function cascadeShadowsSetSplitZExpWeight(): void;
/**
 * No comment provided
 *
 * Hash: 0x259BA6D4E6F808F1 | Since: 1011
 * @deprecated Use graphics.cascadeShadowsSetBoundPosition() instead
 */
export declare function cascadeShadowsSetBoundPosition(): void;
/**
 * When this is set to ON, shadows only draw as you get nearer.
 *
 * When OFF, they draw from a further distance.
 *
 * Hash: 0x80ECBC0C856D3B0B | Since: 323
 * @deprecated Use graphics.cascadeShadowsEnableEntityTracker(toggle) instead
 */
export declare function cascadeShadowsEnableEntityTracker(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x25FC3E33A31AD0C9 | Since: 323
 * @deprecated Use graphics.cascadeShadowsSetScreenSizeCheckEnabled() instead
 */
export declare function cascadeShadowsSetScreenSizeCheckEnabled(): void;
/**
 * Possible values:
 * "CSM_ST_POINT"
 * "CSM_ST_LINEAR"
 * "CSM_ST_TWOTAP"
 * "CSM_ST_BOX3x3"
 * "CSM_ST_BOX4x4"
 * "CSM_ST_DITHER2_LINEAR"
 * "CSM_ST_CUBIC"
 * "CSM_ST_DITHER4"
 * "CSM_ST_DITHER16"
 * "CSM_ST_SOFT16"
 * "CSM_ST_DITHER16_RPDB"
 * "CSM_ST_POISSON16_RPDB_GNORM"
 * "CSM_ST_HIGHRES_BOX4x4"
 * "CSM_ST_CLOUDS_SIMPLE"
 * "CSM_ST_CLOUDS_LINEAR"
 * "CSM_ST_CLOUDS_TWOTAP"
 * "CSM_ST_CLOUDS_BOX3x3"
 * "CSM_ST_CLOUDS_BOX4x4"
 * "CSM_ST_CLOUDS_DITHER2_LINEAR"
 * "CSM_ST_CLOUDS_SOFT16"
 * "CSM_ST_CLOUDS_DITHER16_RPDB"
 * "CSM_ST_CLOUDS_POISSON16_RPDB_GNORM"
 *
 * Hash: 0xB11D94BC55F41932 | Since: 323
 * @deprecated Use graphics.cascadeShadowsSetShadowSampleType(_type) instead
 */
export declare function cascadeShadowsSetShadowSampleType(_type: string): void;
/**
 * No comment provided
 *
 * Hash: 0x27CB772218215325 | Since: 323
 * @deprecated Use graphics.cascadeShadowsClearShadowSampleType() instead
 */
export declare function cascadeShadowsClearShadowSampleType(): void;
/**
 * No comment provided
 *
 * Hash: 0x6DDBF9DFFC4AC080 | Since: 323
 * @deprecated Use graphics.cascadeShadowsSetAircraftMode() instead
 */
export declare function cascadeShadowsSetAircraftMode(): void;
/**
 * No comment provided
 *
 * Hash: 0xD39D13C9FEBF0511 | Since: 323
 * @deprecated Use graphics.cascadeShadowsSetDynamicDepthMode() instead
 */
export declare function cascadeShadowsSetDynamicDepthMode(): void;
/**
 * No comment provided
 *
 * Hash: 0x02AC28F3A01FA04A | Since: 323
 * @deprecated Use graphics.cascadeShadowsSetDynamicDepthValue() instead
 */
export declare function cascadeShadowsSetDynamicDepthValue(): void;
/**
 * No comment provided
 *
 * Hash: 0x0AE73D8DF3A762B2 | Since: 323
 * @deprecated Use graphics.cascadeShadowsEnableFreezer() instead
 */
export declare function cascadeShadowsEnableFreezer(): void;
/**
 * No comment provided
 *
 * Hash: 0xCA465D9CC0D231BA | Since: 1011
 * @deprecated Use graphics.waterReflectionSetScriptObjectVisibility() instead
 */
export declare function waterReflectionSetScriptObjectVisibility(): void;
/**
 * No comment provided
 *
 * Hash: 0xA51C4B86B71652AE | Since: 323
 * @deprecated Use graphics.golfTrailSetEnabled(toggle) instead
 */
export declare function golfTrailSetEnabled(toggle: boolean): void;
/**
 * p8 seems to always be false.
 *
 * Hash: 0x312342E1A4874F3F | Since: 323
 * @deprecated Use graphics.golfTrailSetPath() instead
 */
export declare function golfTrailSetPath(): void;
/**
 * No comment provided
 *
 * Hash: 0x2485D34E50A22E84 | Since: 323
 * @deprecated Use graphics.golfTrailSetRadius() instead
 */
export declare function golfTrailSetRadius(): void;
/**
 * No comment provided
 *
 * Hash: 0x12995F2E53FFA601 | Since: 323
 * @deprecated Use graphics.golfTrailSetColour() instead
 */
export declare function golfTrailSetColour(): void;
/**
 * No comment provided
 *
 * Hash: 0xDBAA5EC848BA2D46 | Since: 323
 * @deprecated Use graphics.golfTrailSetTessellation() instead
 */
export declare function golfTrailSetTessellation(): void;
/**
 * No comment provided
 *
 * Hash: 0xC0416B061F2B7E5E | Since: 323
 * @deprecated Use graphics.golfTrailSetFixedControlPointEnable() instead
 */
export declare function golfTrailSetFixedControlPointEnable(): void;
/**
 * 12 matches across 4 scripts. All 4 scripts were job creators.
 *
 * type ranged from 0 - 2.
 * p4 was always 0.2f. Likely scale.
 * assuming p5 - p8 is RGBA, the graphic is always yellow (255, 255, 0, 255).
 *
 * Tested but noticed nothing.
 *
 * Hash: 0xB1BB03742917A5D6 | Since: 323
 * @deprecated Use graphics.golfTrailSetFixedControlPoint(_type, pos, red, green, blue, alpha) instead
 */
export declare function golfTrailSetFixedControlPoint(_type: number, pos: Vector3, red: number, green: number, blue: number, alpha: number): void;
/**
 * Only appeared in Golf & Golf_mp. Parameters were all ptrs
 *
 * Hash: 0x9CFDD90B2B844BF7 | Since: 323
 * @deprecated Use graphics.golfTrailSetShaderParams() instead
 */
export declare function golfTrailSetShaderParams(): void;
/**
 * No comment provided
 *
 * Hash: 0x06F761EA47C1D3ED | Since: 323
 * @deprecated Use graphics.golfTrailSetFacing() instead
 */
export declare function golfTrailSetFacing(): void;
/**
 * No comment provided
 *
 * Hash: 0xA4819F5E23E2FFAD | Since: 323
 * @deprecated Use graphics.golfTrailGetMaxHeight() instead
 */
export declare function golfTrailGetMaxHeight(): number;
/**
 * No comment provided
 *
 * Hash: 0xA4664972A9B8F8BA | Since: 323
 * @deprecated Use graphics.golfTrailGetVisualControlPoint() instead
 */
export declare function golfTrailGetVisualControlPoint(): Vector3;
/**
 * Toggles Heatvision on/off.
 *
 * Hash: 0x7E08924259E08CE0 | Since: 323
 * @deprecated Use graphics.setSeethrough(toggle) instead
 */
export declare function setSeethrough(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x44B80ABAB9D80BD3 | Since: 323
 * @deprecated Use graphics.getUsingseethrough() instead
 */
export declare function getUsingseethrough(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x70A64C0234EF522C | Since: 323
 * @deprecated Use graphics.seethroughReset() instead
 */
export declare function seethroughReset(): void;
/**
 * No comment provided
 *
 * Hash: 0xA78DE25577300BA1 | Since: 573
 * @deprecated Use graphics.seethroughSetFadeStartdistance(distance) instead
 */
export declare function seethroughSetFadeStartdistance(distance: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9D75795B9DC6EBBF | Since: 573
 * @deprecated Use graphics.seethroughSetFadeEnddistance(distance) instead
 */
export declare function seethroughSetFadeEnddistance(distance: number): void;
/**
 * No comment provided
 *
 * Hash: 0x43DBAE39626CE83F | Since: 1290
 * @deprecated Use graphics.seethroughGetMaxThickness() instead
 */
export declare function seethroughGetMaxThickness(): number;
/**
 * 0.0 = you will not be able to see people behind the walls. 50.0 and more = you will see everyone through the walls. More value is "better" view. See https://gfycat.com/FirmFlippantGourami
 * min: 1.0
 * max: 10000.0
 *
 * Hash: 0x0C8FAC83902A62DF | Since: 573
 * @deprecated Use graphics.seethroughSetMaxThickness(thickness) instead
 */
export declare function seethroughSetMaxThickness(thickness: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFF5992E1C9E65D05 | Since: 573
 * @deprecated Use graphics.seethroughSetNoiseMin(amount) instead
 */
export declare function seethroughSetNoiseMin(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFEBFBFDFB66039DE | Since: 573
 * @deprecated Use graphics.seethroughSetNoiseMax(amount) instead
 */
export declare function seethroughSetNoiseMax(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x19E50EB6E33E1D28 | Since: 573
 * @deprecated Use graphics.seethroughSetHilightIntensity(intensity) instead
 */
export declare function seethroughSetHilightIntensity(intensity: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1636D7FC127B10D2 | Since: 573
 * @deprecated Use graphics.seethroughSetHighlightNoise(noise) instead
 */
export declare function seethroughSetHighlightNoise(noise: number): void;
/**
 * min: 0.0
 * max: 0.75
 *
 * Hash: 0xD7D0B00177485411 | Since: 323
 * @deprecated Use graphics.seethroughSetHeatscale(index, heatScale) instead
 */
export declare function seethroughSetHeatscale(index: number, heatScale: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1086127B3A63505E | Since: 573
 * @deprecated Use graphics.seethroughSetColorNear(red, green, blue) instead
 */
export declare function seethroughSetColorNear(red: number, green: number, blue: number): void;
/**
 * Setter for GET_MOTIONBLUR_MAX_VEL_SCALER
 *
 * Hash: 0xB3C641F3630BF6DA | Since: 323
 * @deprecated Use graphics.setMotionblurMaxVelScaler() instead
 */
export declare function setMotionblurMaxVelScaler(): void;
/**
 * Getter for SET_MOTIONBLUR_MAX_VEL_SCALER
 *
 * Hash: 0xE59343E9E96529E7 | Since: 323
 * @deprecated Use graphics.getMotionblurMaxVelScaler() instead
 */
export declare function getMotionblurMaxVelScaler(): number;
/**
 * No comment provided
 *
 * Hash: 0x6A51F78772175A51 | Since: 1011
 * @deprecated Use graphics.setForceMotionblur(toggle) instead
 */
export declare function setForceMotionblur(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE63D7C6EECECB66B | Since: 323
 * @deprecated Use graphics.togglePlayerDamageOverlay(toggle) instead
 */
export declare function togglePlayerDamageOverlay(toggle: boolean): void;
/**
 * Sets an value related to timecycles.
 *
 * Hash: 0xE3E2C1B4C59DBC77 | Since: 323
 * @deprecated Use graphics.resetAdaptation() instead
 */
export declare function resetAdaptation(): void;
/**
 * time in ms to transition to fully blurred screen
 *
 * Hash: 0xA328A24AAA6B7FDC | Since: 323
 * @deprecated Use graphics.triggerScreenblurFadeIn(transitionTime) instead
 */
export declare function triggerScreenblurFadeIn(transitionTime: number): boolean;
/**
 * time in ms to transition from fully blurred to normal
 *
 * Hash: 0xEFACC8AEF94430D5 | Since: 323
 * @deprecated Use graphics.triggerScreenblurFadeOut(transitionTime) instead
 */
export declare function triggerScreenblurFadeOut(transitionTime: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDE81239437E8C5A8 | Since: 323
 * @deprecated Use graphics.disableScreenblurFade() instead
 */
export declare function disableScreenblurFade(): void;
/**
 * No comment provided
 *
 * Hash: 0x5CCABFFCA31DDE33 | Since: 323
 * @deprecated Use graphics.getScreenblurFadeCurrentTime() instead
 */
export declare function getScreenblurFadeCurrentTime(): number;
/**
 * Returns whether screen transition to blur/from blur is running.
 *
 * Hash: 0x7B226C785A52A0A9 | Since: 323
 * @deprecated Use graphics.isScreenblurFadeRunning() instead
 */
export declare function isScreenblurFadeRunning(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDFC252D8A3E15AB7 | Since: 323
 * @deprecated Use graphics.togglePausedRenderphases(toggle) instead
 */
export declare function togglePausedRenderphases(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEB3DAC2C86001E5E | Since: 323
 * @deprecated Use graphics.getTogglePausedRenderphasesStatus() instead
 */
export declare function getTogglePausedRenderphasesStatus(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE1C8709406F2C41C | Since: 323
 * @deprecated Use graphics.resetPausedRenderphases() instead
 */
export declare function resetPausedRenderphases(): void;
/**
 * No comment provided
 *
 * Hash: 0x851CD923176EBA7C | Since: 323
 * @deprecated Use graphics.grabPausemenuOwnership() instead
 */
export declare function grabPausemenuOwnership(): void;
/**
 * No comment provided
 *
 * Hash: 0xBA3D65906822BED5 | Since: 323
 * @deprecated Use graphics.setHidofOverride(nearplaneOut, nearplaneIn, farplaneOut, farplaneIn) instead
 */
export declare function setHidofOverride(nearplaneOut: number, nearplaneIn: number, farplaneOut: number, farplaneIn: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB569F41F3E7E83A4 | Since: 1103
 * @deprecated Use graphics.setLockAdaptiveDofDistance() instead
 */
export declare function setLockAdaptiveDofDistance(): void;
/**
 * No comment provided
 *
 * Hash: 0x7AC24EAB6D74118D | Since: 323
 * @deprecated Use graphics.phonephotoeditorToggle() instead
 */
export declare function phonephotoeditorToggle(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBCEDB009461DA156 | Since: 323
 * @deprecated Use graphics.phonephotoeditorIsActive() instead
 */
export declare function phonephotoeditorIsActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x27FEB5254759CDE3 | Since: 323
 * @deprecated Use graphics.phonephotoeditorSetFrameTxd(textureDict) instead
 */
export declare function phonephotoeditorSetFrameTxd(textureDict: string): boolean;
/**
 * `GRAPHICS::START_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_paleto_roof_impact", -140.8576f, 6420.789f, 41.1391f, 0f, 0f, 267.3957f, 0x3F800000, 0, 0, 0);`
 *
 * Axis - Invert Axis Flags
 *
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 *
 * -------------------------------------------------------------------
 * C#
 *
 * Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, = you are calling this function.
 *
 * char *effectname = This is an in-game effect name, for e.g. "scr_fbi4_trucks_crash" is used to give the effects when truck crashes etc
 *
 * float x, y, z pos = this one is Simple, you just have to declare, where do you want this effect to take place at, so declare the ordinates
 *
 * float xrot, yrot, zrot = Again simple? just mention the value in case if you want the effect to rotate.
 *
 * float scale = is declare the scale of the effect, this may vary as per the effects for e.g 1.0f
 *
 * bool xaxis, yaxis, zaxis = To bool the axis values.
 *
 * example:
 * Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, "scr_fbi4_trucks_crash", GTA.Game.Player.Character.Position.X, GTA.Game.Player.Character.Position.Y, GTA.Game.Player.Character.Position.Z + 4f, 0, 0, 0, 5.5f, 0, 0, 0);
 *
 * Hash: 0x25129531F77B9ED3 | Since: 323
 * @deprecated Use graphics.startParticleFxNonLoopedAtCoord(effectName, pos, rot, scale, xAxis, yAxis, zAxis) instead
 */
export declare function startParticleFxNonLoopedAtCoord(effectName: string, pos: Vector3, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): boolean;
/**
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 * Hash: 0xF56B8137DF10135D | Since: 323
 * @deprecated Use graphics.startNetworkedParticleFxNonLoopedAtCoord(effectName, pos, rot, scale, xAxis, yAxis, zAxis) instead
 */
export declare function startNetworkedParticleFxNonLoopedAtCoord(effectName: string, pos: Vector3, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): boolean;
/**
 * `GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE("scr_sh_bong_smoke", PLAYER::PLAYER_PED_ID(), -0.025f, 0.13f, 0f, 0f, 0f, 0f, 31086, 0x3F800000, 0, 0, 0);`
 *
 * Axis - Invert Axis Flags
 *
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 * Hash: 0x0E7E72961BA18619 | Since: 323
 * @deprecated Use graphics.startParticleFxNonLoopedOnPedBone(effectName, ped, offsetX, offsetY, offsetZ, rot, boneIndex, scale, axisX, axisY, axisZ) instead
 */
export declare function startParticleFxNonLoopedOnPedBone(effectName: string, ped: number | Ped, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
/**
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 * Hash: 0xA41B6A43642AC2CF | Since: 323
 * @deprecated Use graphics.startNetworkedParticleFxNonLoopedOnPedBone(effectName, ped, offsetX, offsetY, offsetZ, rot, boneIndex, scale, axisX, axisY, axisZ) instead
 */
export declare function startNetworkedParticleFxNonLoopedOnPedBone(effectName: string, ped: number | Ped, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
/**
 * Starts a particle effect on an entity for example your player.
 *
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 * Example:
 * C#:
 * Function.Call(Hash.REQUEST_NAMED_PTFX_ASSET, "scr_rcbarry2");                     Function.Call(Hash.USE_PARTICLE_FX_ASSET, "scr_rcbarry2");                             Function.Call(Hash.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY, "scr_clown_appears", Game.Player.Character, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 1.0, false, false, false);
 *
 * `Internally this calls the same function as GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE`
 * however it uses -1 for the specified bone index, so it should be possible to start a non looped fx on an entity bone using that native
 *
 * -can confirm START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE does NOT work on vehicle bones.
 *
 * Hash: 0x0D53A3B8DA0809D2 | Since: 323
 * @deprecated Use graphics.startParticleFxNonLoopedOnEntity(effectName, entity, offsetX, offsetY, offsetZ, rot, scale, axisX, axisY, axisZ) instead
 */
export declare function startParticleFxNonLoopedOnEntity(effectName: string, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
/**
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 * Hash: 0xC95EB1DB6E92113D | Since: 323
 * @deprecated Use graphics.startNetworkedParticleFxNonLoopedOnEntity(effectName, entity, offsetX, offsetY, offsetZ, rot, scale, axisX, axisY, axisZ) instead
 */
export declare function startNetworkedParticleFxNonLoopedOnEntity(effectName: string, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
/**
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 * Hash: 0x02B1F2A72E0F5325 | Since: 2189
 * @deprecated Use graphics.startParticleFxNonLoopedOnEntityBone(effectName, entity, offsetX, offsetY, offsetZ, rot, boneIndex, scale, axisX, axisY, axisZ) instead
 */
export declare function startParticleFxNonLoopedOnEntityBone(effectName: string, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, rot: Vector3, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
/**
 * only works on some fx's, not networked
 *
 * Hash: 0x26143A59EF48B262 | Since: 323
 * @deprecated Use graphics.setParticleFxNonLoopedColour(r, g, b) instead
 */
export declare function setParticleFxNonLoopedColour(r: number, g: number, b: number): void;
/**
 * Usage example for C#:
 *
 * Function.Call(Hash.SET_PARTICLE_FX_NON_LOOPED_ALPHA, new InputArgument[] { 0.1f });
 *
 * Note: the argument alpha ranges from 0.0f-1.0f !
 *
 * Hash: 0x77168D722C58B2FC | Since: 323
 * @deprecated Use graphics.setParticleFxNonLoopedAlpha(alpha) instead
 */
export declare function setParticleFxNonLoopedAlpha(alpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB7EF5850C39FABCA | Since: 2802
 * @deprecated Use graphics.setParticleFxNonLoopedScale(scale) instead
 */
export declare function setParticleFxNonLoopedScale(scale: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1E2E01C00837D26E | Since: 2699
 * @deprecated Use graphics.setParticleFxNonLoopedEmitterSize(scale) instead
 */
export declare function setParticleFxNonLoopedEmitterSize(scale: number): void;
/**
 * Used only once in the scripts (taxi_clowncar)
 *
 * Hash: 0x8CDE909A0370BB3A | Since: 323
 * @deprecated Use graphics.setParticleFxForceVehicleInterior(toggle) instead
 */
export declare function setParticleFxForceVehicleInterior(toggle: boolean): void;
/**
 * `GRAPHICS::START_PARTICLE_FX_LOOPED_AT_COORD("scr_fbi_falling_debris", 93.7743f, -749.4572f, 70.86904f, 0f, 0f, 0f, 0x3F800000, 0, 0, 0, 0)`
 *
 *
 * p11 seems to be always 0
 *
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 * Hash: 0xE184F4F0DC5910E7 | Since: 323
 * @deprecated Use graphics.startParticleFxLoopedAtCoord(effectName, pos, rot, scale, xAxis, yAxis, zAxis) instead
 */
export declare function startParticleFxLoopedAtCoord(effectName: string, pos: Vector3, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
/**
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 * Hash: 0xF28DA9F38CD1787C | Since: 323
 * @deprecated Use graphics.startParticleFxLoopedOnPedBone(effectName, ped, xOffset, yOffset, zOffset, rot, boneIndex, scale, xAxis, yAxis, zAxis) instead
 */
export declare function startParticleFxLoopedOnPedBone(effectName: string, ped: number | Ped, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
/**
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 * Hash: 0x1AE42C1660FD6517 | Since: 323
 * @deprecated Use graphics.startParticleFxLoopedOnEntity(effectName, entity, xOffset, yOffset, zOffset, rot, scale, xAxis, yAxis, zAxis) instead
 */
export declare function startParticleFxLoopedOnEntity(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
/**
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 * Hash: 0xC6EB449E33977F0B | Since: 323
 * @deprecated Use graphics.startParticleFxLoopedOnEntityBone(effectName, entity, xOffset, yOffset, zOffset, rot, boneIndex, scale, xAxis, yAxis, zAxis) instead
 */
export declare function startParticleFxLoopedOnEntityBone(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
/**
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 * Hash: 0x6F60E89A7B64EE1D | Since: 323
 * @deprecated Use graphics.startNetworkedParticleFxLoopedOnEntity(effectName, entity, xOffset, yOffset, zOffset, rot, scale, xAxis, yAxis, zAxis, r, g, b, a) instead
 */
export declare function startNetworkedParticleFxLoopedOnEntity(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean, r: number, g: number, b: number, a: number): number;
/**
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 * Hash: 0xDDE23F30CC5A0F03 | Since: 323
 * @deprecated Use graphics.startNetworkedParticleFxLoopedOnEntityBone(effectName, entity, xOffset, yOffset, zOffset, rot, boneIndex, scale, xAxis, yAxis, zAxis, r, g, b, a) instead
 */
export declare function startNetworkedParticleFxLoopedOnEntityBone(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, rot: Vector3, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean, r: number, g: number, b: number, a: number): number;
/**
 * p1 is always 0 in the native scripts
 *
 * Hash: 0x8F75998877616996 | Since: 323
 * @deprecated Use graphics.stopParticleFxLooped(ptfxHandle) instead
 */
export declare function stopParticleFxLooped(ptfxHandle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC401503DFE8D53CF | Since: 323
 * @deprecated Use graphics.removeParticleFx(ptfxHandle) instead
 */
export declare function removeParticleFx(ptfxHandle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB8FEAEEBCC127425 | Since: 323
 * @deprecated Use graphics.removeParticleFxFromEntity(entity) instead
 */
export declare function removeParticleFxFromEntity(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xDD19FA1C6D657305 | Since: 323
 * @deprecated Use graphics.removeParticleFxInRange(pos, radius) instead
 */
export declare function removeParticleFxInRange(pos: Vector3, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBA0127DA25FD54C9 | Since: 372
 * @deprecated Use graphics.forceParticleFxInVehicleInterior() instead
 */
export declare function forceParticleFxInVehicleInterior(): void;
/**
 * No comment provided
 *
 * Hash: 0x74AFEF0D2E1E409B | Since: 323
 * @deprecated Use graphics.doesParticleFxLoopedExist(ptfxHandle) instead
 */
export declare function doesParticleFxLoopedExist(ptfxHandle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF7DDEBEC43483C43 | Since: 323
 * @deprecated Use graphics.setParticleFxLoopedOffsets(ptfxHandle, pos, rot) instead
 */
export declare function setParticleFxLoopedOffsets(ptfxHandle: number, pos: Vector3, rot: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x5F0C4B5B1C393BE2 | Since: 323
 * @deprecated Use graphics.setParticleFxLoopedEvolution(ptfxHandle, propertyName, amount, noNetwork) instead
 */
export declare function setParticleFxLoopedEvolution(ptfxHandle: number, propertyName: string, amount: number, noNetwork: boolean): void;
/**
 * only works on some fx's
 *
 * p4 = 0
 *
 * Hash: 0x7F8F65877F88783B | Since: 323
 * @deprecated Use graphics.setParticleFxLoopedColour(ptfxHandle, r, g, b) instead
 */
export declare function setParticleFxLoopedColour(ptfxHandle: number, r: number, g: number, b: number): void;
/**
 * No comment provided
 *
 * Hash: 0x726845132380142E | Since: 323
 * @deprecated Use graphics.setParticleFxLoopedAlpha(ptfxHandle, alpha) instead
 */
export declare function setParticleFxLoopedAlpha(ptfxHandle: number, alpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB44250AAA456492D | Since: 323
 * @deprecated Use graphics.setParticleFxLoopedScale(ptfxHandle, scale) instead
 */
export declare function setParticleFxLoopedScale(ptfxHandle: number, scale: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDCB194B85EF7B541 | Since: 323
 * @deprecated Use graphics.setParticleFxLoopedFarClipDist(ptfxHandle, range) instead
 */
export declare function setParticleFxLoopedFarClipDist(ptfxHandle: number, range: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4100BF0346A8D2C3 | Since: 3095
 * @deprecated Use graphics.setParticleFxLoopedCameraBias(ptfxHandle) instead
 */
export declare function setParticleFxLoopedCameraBias(ptfxHandle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEEC4047028426510 | Since: 323
 * @deprecated Use graphics.setParticleFxCamInsideVehicle() instead
 */
export declare function setParticleFxCamInsideVehicle(): void;
/**
 * No comment provided
 *
 * Hash: 0xACEE6F360FC1F6B6 | Since: 323
 * @deprecated Use graphics.setParticleFxCamInsideNonplayerVehicle(vehicle) instead
 */
export declare function setParticleFxCamInsideNonplayerVehicle(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x96EF97DAEB89BEF5 | Since: 323
 * @deprecated Use graphics.setParticleFxShootoutBoat() instead
 */
export declare function setParticleFxShootoutBoat(): void;
/**
 * No comment provided
 *
 * Hash: 0x2A251AA48B2B46DB | Since: 323
 * @deprecated Use graphics.clearParticleFxShootoutBoat() instead
 */
export declare function clearParticleFxShootoutBoat(): void;
/**
 * No comment provided
 *
 * Hash: 0x908311265D42A820 | Since: 323
 * @deprecated Use graphics.setParticleFxBloodScale() instead
 */
export declare function setParticleFxBloodScale(): void;
/**
 * No comment provided
 *
 * Hash: 0xCFD16F0DB5A3535C | Since: 2060
 * @deprecated Use graphics.disableInWaterPtfx(toggle) instead
 */
export declare function disableInWaterPtfx(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x5F6DF3D92271E8A1 | Since: 323
 * @deprecated Use graphics.disableDownwashPtfx(toggle) instead
 */
export declare function disableDownwashPtfx(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2B40A97646381508 | Since: 1011
 * @deprecated Use graphics.setParticleFxSlipstreamLodrangeScale(scale) instead
 */
export declare function setParticleFxSlipstreamLodrangeScale(scale: number): void;
/**
 * Creates cartoon effect when Michel smokes the weed
 *
 * Hash: 0xD821490579791273 | Since: 323
 * @deprecated Use graphics.enableClownBloodVfx(toggle) instead
 */
export declare function enableClownBloodVfx(toggle: boolean): void;
/**
 * Creates a motion-blur sort of effect, this native does not seem to work, however by using the `START_SCREEN_EFFECT` native with `DrugsMichaelAliensFight` as the effect parameter, you should be able to get the effect.
 *
 * Hash: 0x9DCE1F0F78260875 | Since: 323
 * @deprecated Use graphics.enableAlienBloodVfx(toggle) instead
 */
export declare function enableAlienBloodVfx(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x27E32866E9A5C416 | Since: 323
 * @deprecated Use graphics.setParticleFxBulletImpactScale(scale) instead
 */
export declare function setParticleFxBulletImpactScale(scale: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBB90E12CAC1DAB25 | Since: 323
 * @deprecated Use graphics.setParticleFxBulletImpactLodrangeScale() instead
 */
export declare function setParticleFxBulletImpactLodrangeScale(): void;
/**
 * No comment provided
 *
 * Hash: 0xCA4AE345A153D573 | Since: 323
 * @deprecated Use graphics.setParticleFxBulletTraceNoAngleReject() instead
 */
export declare function setParticleFxBulletTraceNoAngleReject(): void;
/**
 * No comment provided
 *
 * Hash: 0x54E22EA2C1956A8D | Since: 323
 * @deprecated Use graphics.setParticleFxBangScrapeLodrangeScale() instead
 */
export declare function setParticleFxBangScrapeLodrangeScale(): void;
/**
 * No comment provided
 *
 * Hash: 0x949F397A288B28B3 | Since: 323
 * @deprecated Use graphics.setParticleFxFootLodrangeScale() instead
 */
export declare function setParticleFxFootLodrangeScale(): void;
/**
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 * Hash: 0xBA3D194057C79A7B | Since: 877
 * @deprecated Use graphics.setParticleFxFootOverrideName() instead
 */
export declare function setParticleFxFootOverrideName(): void;
/**
 * No comment provided
 *
 * Hash: 0x5DBF05DB5926D089 | Since: 1011
 * @deprecated Use graphics.setSkidmarkRangeScale(scale) instead
 */
export declare function setSkidmarkRangeScale(scale: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC6730E0D14E50703 | Since: 2545
 * @deprecated Use graphics.setPtfxForceVehicleInteriorFlag() instead
 */
export declare function setPtfxForceVehicleInteriorFlag(): void;
/**
 * No comment provided
 *
 * Hash: 0x170911F37F646F29 | Since: 2802
 * @deprecated Use graphics.registerPostfxBulletImpact(weaponWorldPosX, weaponWorldPosY, weaponWorldPosZ, intensity) instead
 */
export declare function registerPostfxBulletImpact(weaponWorldPosX: number, weaponWorldPosY: number, weaponWorldPosZ: number, intensity: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9B079E5221D984D3 | Since: 323
 * @deprecated Use graphics.forcePostfxBulletImpactsAfterHud() instead
 */
export declare function forcePostfxBulletImpactsAfterHud(): void;
/**
 * From the b678d decompiled scripts:
 *
 * `GRAPHICS::USE_PARTICLE_FX_ASSET("FM_Mission_Controler");`
 * `GRAPHICS::USE_PARTICLE_FX_ASSET("scr_apartment_mp");`
 * `GRAPHICS::USE_PARTICLE_FX_ASSET("scr_indep_fireworks");`
 * `GRAPHICS::USE_PARTICLE_FX_ASSET("scr_mp_cig_plane");`
 * `GRAPHICS::USE_PARTICLE_FX_ASSET("scr_mp_creator");`
 * `GRAPHICS::USE_PARTICLE_FX_ASSET("scr_ornate_heist");`
 * `GRAPHICS::USE_PARTICLE_FX_ASSET("scr_prison_break_heist_station");`
 *
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 * Hash: 0x6C38AF3693A69A91 | Since: 323
 * @deprecated Use graphics.useParticleFxAsset(name) instead
 */
export declare function useParticleFxAsset(name: string): void;
/**
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 * Hash: 0xEA1E2D93F6F75ED9 | Since: 323
 * @deprecated Use graphics.setParticleFxOverride(oldAsset, newAsset) instead
 */
export declare function setParticleFxOverride(oldAsset: string, newAsset: string): void;
/**
 * Resets the effect of SET_PARTICLE_FX_OVERRIDE
 *
 * Full list of particle effect dictionaries and effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/particleEffectsCompact.json
 *
 * Hash: 0x89C8553DD3274AAE | Since: 323
 * @deprecated Use graphics.resetParticleFxOverride(name) instead
 */
export declare function resetParticleFxOverride(name: string): void;
/**
 * Returns ptfxHandle
 * effectName: scr_sv_drag_burnout
 *
 * Hash: 0xDF269BE2909E181A | Since: 3095
 * @deprecated Use graphics.startVehicleParticleFxLooped(vehicle, effectName, frontBack, leftRight, localOnly) instead
 */
export declare function startVehicleParticleFxLooped(vehicle: number | Vehicle, effectName: string, frontBack: boolean, leftRight: boolean, localOnly: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0xA46B73FAA3460AE1 | Since: 323
 * @deprecated Use graphics.setWeatherPtfxUseOverrideSettings() instead
 */
export declare function setWeatherPtfxUseOverrideSettings(): void;
/**
 * No comment provided
 *
 * Hash: 0xF78B803082D4386F | Since: 323
 * @deprecated Use graphics.setWeatherPtfxOverrideCurrLevel() instead
 */
export declare function setWeatherPtfxOverrideCurrLevel(): void;
/**
 * No comment provided
 *
 * Hash: 0x9C30613D50A6ADEF | Since: 323
 * @deprecated Use graphics.washDecalsInRange(pos, range) instead
 */
export declare function washDecalsInRange(pos: Vector3, range: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5B712761429DBC14 | Since: 323
 * @deprecated Use graphics.washDecalsFromVehicle(vehicle) instead
 */
export declare function washDecalsFromVehicle(vehicle: number | Vehicle): void;
/**
 * Fades nearby decals within the range specified
 *
 * Hash: 0xD77EDADB0420E6E0 | Since: 323
 * @deprecated Use graphics.fadeDecalsInRange(pos) instead
 */
export declare function fadeDecalsInRange(pos: Vector3): void;
/**
 * Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...
 *
 * Hash: 0x5D6B2D4830A67C62 | Since: 323
 * @deprecated Use graphics.removeDecalsInRange(pos, range) instead
 */
export declare function removeDecalsInRange(pos: Vector3, range: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCCF71CBDDF5B6CB9 | Since: 323
 * @deprecated Use graphics.removeDecalsFromObject(obj) instead
 */
export declare function removeDecalsFromObject(obj: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0xA6F6F70FDC6D144C | Since: 323
 * @deprecated Use graphics.removeDecalsFromObjectFacing(obj, pos) instead
 */
export declare function removeDecalsFromObjectFacing(obj: number | Object, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xE91F1B65F2B48D57 | Since: 323
 * @deprecated Use graphics.removeDecalsFromVehicle(vehicle) instead
 */
export declare function removeDecalsFromVehicle(vehicle: number | Vehicle): void;
/**
 * decal types:
 *
 * public enum DecalTypes
 * {
 * splatters_blood = 1010,
 * splatters_blood_dir = 1015,
 * splatters_blood_mist = 1017,
 * splatters_mud = 1020,
 * splatters_paint = 1030,
 * splatters_water = 1040,
 * splatters_water_hydrant = 1050,
 * splatters_blood2 = 1110,
 * weapImpact_metal = 4010,
 * weapImpact_concrete = 4020,
 * weapImpact_mattress = 4030,
 * weapImpact_mud = 4032,
 * weapImpact_wood = 4050,
 * weapImpact_sand = 4053,
 * weapImpact_cardboard = 4040,
 * weapImpact_melee_glass = 4100,
 * weapImpact_glass_blood = 4102,
 * weapImpact_glass_blood2 = 4104,
 * weapImpact_shotgun_paper = 4200,
 * weapImpact_shotgun_mattress,
 * weapImpact_shotgun_metal,
 * weapImpact_shotgun_wood,
 * weapImpact_shotgun_dirt,
 * weapImpact_shotgun_tvscreen,
 * weapImpact_shotgun_tvscreen2,
 * weapImpact_shotgun_tvscreen3,
 * weapImpact_melee_concrete = 4310,
 * weapImpact_melee_wood = 4312,
 * weapImpact_melee_metal = 4314,
 * burn1 = 4421,
 * burn2,
 * burn3,
 * burn4,
 * burn5,
 * bang_concrete_bang = 5000,
 * bang_concrete_bang2,
 * bang_bullet_bang,
 * bang_bullet_bang2 = 5004,
 * bang_glass = 5031,
 * bang_glass2,
 * solidPool_water = 9000,
 * solidPool_blood,
 * solidPool_oil,
 * solidPool_petrol,
 * solidPool_mud,
 * porousPool_water,
 * porousPool_blood,
 * porousPool_oil,
 * porousPool_petrol,
 * porousPool_mud,
 * porousPool_water_ped_drip,
 * liquidTrail_water = 9050
 * }
 *
 * Hash: 0xB302244A1839BDAD | Since: 323
 * @deprecated Use graphics.addDecal(decalType, pos, width, height, rCoef, gCoef, bCoef, opacity, timeout) instead
 */
export declare function addDecal(decalType: number, pos: Vector3, width: number, height: number, rCoef: number, gCoef: number, bCoef: number, opacity: number, timeout: number): number;
/**
 * No comment provided
 *
 * Hash: 0x4F5212C7AD880DF8 | Since: 323
 * @deprecated Use graphics.addPetrolDecal(pos, groundLvl, width, transparency) instead
 */
export declare function addPetrolDecal(pos: Vector3, groundLvl: number, width: number, transparency: number): number;
/**
 * No comment provided
 *
 * Hash: 0x126D7F89FE859A5E | Since: 2699
 * @deprecated Use graphics.addOilDecal(pos, groundLvl, width, transparency) instead
 */
export declare function addOilDecal(pos: Vector3, groundLvl: number, width: number, transparency: number): number;
/**
 * No comment provided
 *
 * Hash: 0x99AC7F0D8B9C893D | Since: 323
 * @deprecated Use graphics.startPetrolTrailDecals() instead
 */
export declare function startPetrolTrailDecals(): void;
/**
 * No comment provided
 *
 * Hash: 0x967278682CB6967A | Since: 323
 * @deprecated Use graphics.addPetrolTrailDecalInfo(pos) instead
 */
export declare function addPetrolTrailDecalInfo(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x0A123435A26C36CD | Since: 323
 * @deprecated Use graphics.endPetrolTrailDecals() instead
 */
export declare function endPetrolTrailDecals(): void;
/**
 * No comment provided
 *
 * Hash: 0xED3F346429CCD659 | Since: 323
 * @deprecated Use graphics.removeDecal(decal) instead
 */
export declare function removeDecal(decal: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC694D74949CAFD0C | Since: 323
 * @deprecated Use graphics.isDecalAlive(decal) instead
 */
export declare function isDecalAlive(decal: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x323F647679A09103 | Since: 323
 * @deprecated Use graphics.getDecalWashLevel(decal) instead
 */
export declare function getDecalWashLevel(decal: number): number;
/**
 * No comment provided
 *
 * Hash: 0xD9454B5752C857DC | Since: 323
 * @deprecated Use graphics.setDisablePetrolDecalsIgnitingThisFrame() instead
 */
export declare function setDisablePetrolDecalsIgnitingThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x27CFB1B1E078CB2D | Since: 323
 * @deprecated Use graphics.setDisablePetrolDecalsRecyclingThisFrame() instead
 */
export declare function setDisablePetrolDecalsRecyclingThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x4B5CFC83122DF602 | Since: 323
 * @deprecated Use graphics.setDisableDecalRenderingThisFrame() instead
 */
export declare function setDisableDecalRenderingThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x2F09F7976C512404 | Since: 323
 * @deprecated Use graphics.getIsPetrolDecalInRange(xCoord, yCoord, zCoord, radius) instead
 */
export declare function getIsPetrolDecalInRange(xCoord: number, yCoord: number, zCoord: number, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8A35C742130C6080 | Since: 323
 * @deprecated Use graphics.patchDecalDiffuseMap(decalType, textureDict, textureName) instead
 */
export declare function patchDecalDiffuseMap(decalType: number, textureDict: string, textureName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xB7ED70C49521A61D | Since: 323
 * @deprecated Use graphics.unpatchDecalDiffuseMap(decalType) instead
 */
export declare function unpatchDecalDiffuseMap(decalType: number): void;
/**
 * No comment provided
 *
 * Hash: 0x84C8D7C2D30D3280 | Since: 323
 * @deprecated Use graphics.moveVehicleDecals() instead
 */
export declare function moveVehicleDecals(): void;
/**
 * boneIndex is always chassis_dummy in the scripts. The x/y/z params are location relative to the chassis bone.
 *
 * Hash: 0x428BDCB9DA58DA53 | Since: 323
 * @deprecated Use graphics.addVehicleCrewEmblem(vehicle, ped, boneIndex, x1, x2, x3, y1, y2, y3, z1, z2, z3, scale, alpha) instead
 */
export declare function addVehicleCrewEmblem(vehicle: number | Vehicle, ped: number | Ped, boneIndex: number, x1: number, x2: number, x3: number, y1: number, y2: number, y3: number, z1: number, z2: number, z3: number, scale: number, alpha: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x82ACC484FFA3B05F | Since: 372
 * @deprecated Use graphics.abortVehicleCrewEmblemRequest() instead
 */
export declare function abortVehicleCrewEmblemRequest(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xD2300034310557E4 | Since: 323
 * @deprecated Use graphics.removeVehicleCrewEmblem(vehicle) instead
 */
export declare function removeVehicleCrewEmblem(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xFE26117A5841B2FF | Since: 323
 * @deprecated Use graphics.getVehicleCrewEmblemRequestState(vehicle) instead
 */
export declare function getVehicleCrewEmblemRequestState(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x060D935D3981A275 | Since: 323
 * @deprecated Use graphics.doesVehicleHaveCrewEmblem(vehicle) instead
 */
export declare function doesVehicleHaveCrewEmblem(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0E4299C549F0D1F1 | Since: 323
 * @deprecated Use graphics.disableCompositeShotgunDecals(toggle) instead
 */
export declare function disableCompositeShotgunDecals(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x02369D5C8A51FDCF | Since: 323
 * @deprecated Use graphics.disableScuffDecals(toggle) instead
 */
export declare function disableScuffDecals(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x46D1A61A21F566FC | Since: 323
 * @deprecated Use graphics.setDecalBulletImpactRangeScale() instead
 */
export declare function setDecalBulletImpactRangeScale(): void;
/**
 * No comment provided
 *
 * Hash: 0x2A2A52824DB96700 | Since: 323
 * @deprecated Use graphics.overrideInteriorSmokeName(name) instead
 */
export declare function overrideInteriorSmokeName(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0x1600FD8CF72EBC12 | Since: 323
 * @deprecated Use graphics.overrideInteriorSmokeLevel(level) instead
 */
export declare function overrideInteriorSmokeLevel(level: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEFB55E7C25D3B3BE | Since: 323
 * @deprecated Use graphics.overrideInteriorSmokeEnd() instead
 */
export declare function overrideInteriorSmokeEnd(): void;
/**
 * Used with 'NG_filmnoir_BW{01,02}' timecycles and the "NOIR_FILTER_SOUNDS" audioref.
 *
 * Hash: 0xA44FF770DFBC5DAE | Since: 323
 * @deprecated Use graphics.registerNoirLensEffect() instead
 */
export declare function registerNoirLensEffect(): void;
/**
 * No comment provided
 *
 * Hash: 0xC9F98AC1884E73A2 | Since: 323
 * @deprecated Use graphics.disableVehicleDistantlights(toggle) instead
 */
export declare function disableVehicleDistantlights(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x03300B57FCAC6DDB | Since: 323
 * @deprecated Use graphics.renderShadowedLightsWithNoShadows() instead
 */
export declare function renderShadowedLightsWithNoShadows(): void;
/**
 * No comment provided
 *
 * Hash: 0x98EDF76A7271E4F2 | Since: 323
 * @deprecated Use graphics.requestEarlyLightCheck() instead
 */
export declare function requestEarlyLightCheck(): void;
/**
 * Forces footstep tracks on all surfaces.
 *
 * Hash: 0xAEEDAD1420C65CC0 | Since: 323
 * @deprecated Use graphics.useSnowFootVfxWhenUnsheltered(toggle) instead
 */
export declare function useSnowFootVfxWhenUnsheltered(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA342A3763B3AFB6C | Since: 3095
 * @deprecated Use graphics.forceAllowSnowFootVfxOnIce(toggle) instead
 */
export declare function forceAllowSnowFootVfxOnIce(toggle: boolean): void;
/**
 * Forces vehicle trails on all surfaces.
 *
 * Hash: 0x4CC7F0FEA5283FE0 | Since: 323
 * @deprecated Use graphics.useSnowWheelVfxWhenUnsheltered(toggle) instead
 */
export declare function useSnowWheelVfxWhenUnsheltered(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEFD97FF47B745B8D | Since: 791
 * @deprecated Use graphics.disableRegionVfx() instead
 */
export declare function disableRegionVfx(): void;
/**
 * No comment provided
 *
 * Hash: 0x6E9EF3A33C8899F8 | Since: 3095
 * @deprecated Use graphics.forceGroundSnowPass(toggle) instead
 */
export declare function forceGroundSnowPass(toggle: boolean): void;
/**
 * Only one match in the scripts:
 *
 * `GRAPHICS::PRESET_INTERIOR_AMBIENT_CACHE("int_carrier_hanger");`
 *
 * Hash: 0xD7021272EB0A451E | Since: 323
 * @deprecated Use graphics.presetInteriorAmbientCache(timecycleModifierName) instead
 */
export declare function presetInteriorAmbientCache(timecycleModifierName: string): void;
/**
 * Loads the specified timecycle modifier. Modifiers are defined separately in another file (e.g. "timecycle_mods_1.xml")
 *
 * Parameters:
 * modifierName - The modifier to load (e.g. "V_FIB_IT3", "scanline_cam", etc.)
 *
 * Full list of timecycle modifiers by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/timecycleModifiers.json
 *
 * Hash: 0x2C933ABF17A1DF41 | Since: 323
 * @deprecated Use graphics.setTimecycleModifier(modifierName) instead
 */
export declare function setTimecycleModifier(modifierName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x82E7FFCD5B2326B3 | Since: 323
 * @deprecated Use graphics.setTimecycleModifierStrength(strength) instead
 */
export declare function setTimecycleModifierStrength(strength: number): void;
/**
 * Full list of timecycle modifiers by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/timecycleModifiers.json
 *
 * Hash: 0x3BCF567485E1971C | Since: 323
 * @deprecated Use graphics.setTransitionTimecycleModifier(modifierName, transition) instead
 */
export declare function setTransitionTimecycleModifier(modifierName: string, transition: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1CBA05AE7BD7EE05 | Since: 323
 * @deprecated Use graphics.setTransitionOutOfTimecycleModifier(strength) instead
 */
export declare function setTransitionOutOfTimecycleModifier(strength: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0F07E7745A236711 | Since: 323
 * @deprecated Use graphics.clearTimecycleModifier() instead
 */
export declare function clearTimecycleModifier(): void;
/**
 * Only use for this in the PC scripts is:
 *
 * `if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)`
 *
 * Hash: 0xFDF3D97C674AFB66 | Since: 323
 * @deprecated Use graphics.getTimecycleModifierIndex() instead
 */
export declare function getTimecycleModifierIndex(): number;
/**
 * No comment provided
 *
 * Hash: 0x459FD2C8D0AB78BC | Since: 323
 * @deprecated Use graphics.getTimecycleTransitionModifierIndex() instead
 */
export declare function getTimecycleTransitionModifierIndex(): number;
/**
 * No comment provided
 *
 * Hash: 0x98D18905BF723B99 | Since: 1493
 * @deprecated Use graphics.getIsTimecycleTransitioningOut() instead
 */
export declare function getIsTimecycleTransitioningOut(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x58F735290861E6B4 | Since: 323
 * @deprecated Use graphics.pushTimecycleModifier() instead
 */
export declare function pushTimecycleModifier(): void;
/**
 * No comment provided
 *
 * Hash: 0x3C8938D7D872211E | Since: 323
 * @deprecated Use graphics.popTimecycleModifier() instead
 */
export declare function popTimecycleModifier(): void;
/**
 * No comment provided
 *
 * Hash: 0xBBF327DED94E4DEB | Since: 323
 * @deprecated Use graphics.setCurrentPlayerTcmodifier(modifierName) instead
 */
export declare function setCurrentPlayerTcmodifier(modifierName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xBDEB86F4D5809204 | Since: 323
 * @deprecated Use graphics.setPlayerTcmodifierTransition(value) instead
 */
export declare function setPlayerTcmodifierTransition(value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBF59707B3E5ED531 | Since: 323
 * @deprecated Use graphics.setNextPlayerTcmodifier(modifierName) instead
 */
export declare function setNextPlayerTcmodifier(modifierName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x1A8E2C8B9CF4549C | Since: 323
 * @deprecated Use graphics.addTcmodifierOverride(modifierName1, modifierName2) instead
 */
export declare function addTcmodifierOverride(modifierName1: string, modifierName2: string): void;
/**
 * No comment provided
 *
 * Hash: 0x15E33297C3E8DC60 | Since: 323
 * @deprecated Use graphics.clearAllTcmodifierOverrides() instead
 */
export declare function clearAllTcmodifierOverrides(): void;
/**
 * Full list of timecycle modifiers by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/timecycleModifiers.json
 *
 * Hash: 0x5096FD9CCB49056D | Since: 323
 * @deprecated Use graphics.setExtraTcmodifier(modifierName) instead
 */
export declare function setExtraTcmodifier(modifierName: string): void;
/**
 * Clears the secondary timecycle modifier usually set with _SET_EXTRA_TIMECYCLE_MODIFIER
 *
 * Hash: 0x92CCC17A7A2285DA | Since: 323
 * @deprecated Use graphics.clearExtraTcmodifier() instead
 */
export declare function clearExtraTcmodifier(): void;
/**
 * See GET_TIMECYCLE_MODIFIER_INDEX for use, works the same just for the secondary timecycle modifier.
 * Returns an integer representing the Timecycle modifier
 *
 * Hash: 0xBB0527EC6341496D | Since: 323
 * @deprecated Use graphics.getExtraTcmodifier() instead
 */
export declare function getExtraTcmodifier(): number;
/**
 * The same as SET_TIMECYCLE_MODIFIER_STRENGTH but for the secondary timecycle modifier.
 *
 * Hash: 0x2C328AF17210F009 | Since: 323
 * @deprecated Use graphics.enableMoonCycleOverride(strength) instead
 */
export declare function enableMoonCycleOverride(strength: number): void;
/**
 * Resets the extra timecycle modifier strength normally set with 0x2C328AF17210F009
 *
 * Hash: 0x2BF72AD5B41AA739 | Since: 323
 * @deprecated Use graphics.disableMoonCycleOverride() instead
 */
export declare function disableMoonCycleOverride(): void;
/**
 * No comment provided
 *
 * Hash: 0x11FE353CF9733E6F | Since: 323
 * @deprecated Use graphics.requestScaleformMovie(scaleformName) instead
 */
export declare function requestScaleformMovie(scaleformName: string): number;
/**
 * Another REQUEST_SCALEFORM_MOVIE equivalent.
 *
 * Hash: 0x65E7E78842E74CDB | Since: 372
 * @deprecated Use graphics.requestScaleformMovieWithIgnoreSuperWidescreen(scaleformName) instead
 */
export declare function requestScaleformMovieWithIgnoreSuperWidescreen(scaleformName: string): number;
/**
 * No comment provided
 *
 * Hash: 0xC514489CFB8AF806 | Since: 323
 * @deprecated Use graphics.requestScaleformMovieInstance(scaleformName) instead
 */
export declare function requestScaleformMovieInstance(scaleformName: string): number;
/**
 * Similar to REQUEST_SCALEFORM_MOVIE, but seems to be some kind of "interactive" scaleform movie?
 *
 * These seem to be the only scaleforms ever requested by this native:
 * "breaking_news"
 * "desktop_pc"
 * "ECG_MONITOR"
 * "Hacking_PC"
 * "TEETH_PULLING"
 *
 * Note: Unless this hash is out-of-order, this native is next-gen only.
 *
 *
 * Hash: 0xBD06C611BB9048C2 | Since: 323
 * @deprecated Use graphics.requestScaleformMovieSkipRenderWhilePaused(scaleformName) instead
 */
export declare function requestScaleformMovieSkipRenderWhilePaused(scaleformName: string): number;
/**
 * No comment provided
 *
 * Hash: 0x85F01B8D5B90570E | Since: 323
 * @deprecated Use graphics.hasScaleformMovieLoaded(scaleformHandle) instead
 */
export declare function hasScaleformMovieLoaded(scaleformHandle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9743BCCF7CD6E1F6 | Since: 3407
 * @deprecated Use graphics.hasScaleformMovieNamedLoaded(scaleformName) instead
 */
export declare function hasScaleformMovieNamedLoaded(scaleformName: string): [boolean, number];
/**
 * val is 1-20 (0 will return false)
 *
 * Hash: 0x2FCB133CA50A49EB | Since: 1290
 * @deprecated Use graphics.isActiveScaleformMovieDeleting(val) instead
 */
export declare function isActiveScaleformMovieDeleting(val: number): boolean;
/**
 * val is 1-20. Return is related to INSTRUCTIONAL_BUTTONS, COLOUR_SWITCHER_02, etc?
 *
 * Hash: 0x86255B1FC929E33E | Since: 1290
 * @deprecated Use graphics.isScaleformMovieDeleting(val) instead
 */
export declare function isScaleformMovieDeleting(val: number): boolean;
/**
 * Only values used in the scripts are:
 *
 * "heist_mp"
 * "heistmap_mp"
 * "instructional_buttons"
 * "heist_pre"
 *
 * Hash: 0x0C1C5D756FB5F337 | Since: 323
 * @deprecated Use graphics.hasScaleformMovieFilenameLoaded(scaleformName) instead
 */
export declare function hasScaleformMovieFilenameLoaded(scaleformName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8217150E1217EBFD | Since: 323
 * @deprecated Use graphics.hasScaleformContainerMovieLoadedIntoParent(scaleformHandle) instead
 */
export declare function hasScaleformContainerMovieLoadedIntoParent(scaleformHandle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1D132D614DD86811 | Since: 323
 * @deprecated Use graphics.setScaleformMovieAsNoLongerNeeded(scaleformHandle) instead
 */
export declare function setScaleformMovieAsNoLongerNeeded(scaleformHandle: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2FDFB1B04C76E9C3 | Since: 3407
 * @deprecated Use graphics.setScaleformMovieNamedAsNoLongerNeeded(scaleformHandle, scaleformName) instead
 */
export declare function setScaleformMovieNamedAsNoLongerNeeded(scaleformHandle: number, scaleformName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x6D8EB211944DCE08 | Since: 323
 * @deprecated Use graphics.setScaleformMovieToUseSystemTime(scaleform, toggle) instead
 */
export declare function setScaleformMovieToUseSystemTime(scaleform: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x32F34FF7F617643B | Since: 573
 * @deprecated Use graphics.setScaleformMovieToUseLargeRt(scaleformHandle, toggle) instead
 */
export declare function setScaleformMovieToUseLargeRt(scaleformHandle: number, toggle: boolean): void;
/**
 * This native is used in some casino scripts to fit the scaleform in the rendertarget.
 *
 * Hash: 0xE6A9F00D4240B519 | Since: 877
 * @deprecated Use graphics.setScaleformMovieToUseSuperLargeRt(scaleformHandle, toggle) instead
 */
export declare function setScaleformMovieToUseSuperLargeRt(scaleformHandle: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x54972ADAF0294A93 | Since: 323
 * @deprecated Use graphics.drawScaleformMovie(scaleformHandle, x, y, width, height, red, green, blue, alpha) instead
 */
export declare function drawScaleformMovie(scaleformHandle: number, x: number, y: number, width: number, height: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * unk is not used so no need
 *
 * Hash: 0x0DF606929C105BE1 | Since: 323
 * @deprecated Use graphics.drawScaleformMovieFullscreen(scaleform, red, green, blue, alpha) instead
 */
export declare function drawScaleformMovieFullscreen(scaleform: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCF537FDE4FBD4CE5 | Since: 323
 * @deprecated Use graphics.drawScaleformMovieFullscreenMasked(scaleform1, scaleform2, red, green, blue, alpha) instead
 */
export declare function drawScaleformMovieFullscreenMasked(scaleform1: number, scaleform2: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0x87D51D72255D4E78 | Since: 323
 * @deprecated Use graphics.drawScaleformMovie3d(scaleform, pos, rot, scale, rotationOrder) instead
 */
export declare function drawScaleformMovie3d(scaleform: number, pos: Vector3, rot: Vector3, scale: Vector3, rotationOrder: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1CE592FDC749D6F5 | Since: 323
 * @deprecated Use graphics.drawScaleformMovie3dSolid(scaleform, pos, rot, scale, rotationOrder) instead
 */
export declare function drawScaleformMovie3dSolid(scaleform: number, pos: Vector3, rot: Vector3, scale: Vector3, rotationOrder: number): void;
/**
 * Calls the Scaleform function.
 *
 * Hash: 0xFBD96D87AC96D533 | Since: 323
 * @deprecated Use graphics.callScaleformMovieMethod(scaleform, method) instead
 */
export declare function callScaleformMovieMethod(scaleform: number, method: string): void;
/**
 * Calls the Scaleform function and passes the parameters as floats.
 *
 * The number of parameters passed to the function varies, so the end of the parameter list is represented by -1.0.
 *
 * Hash: 0xD0837058AE2E4BEE | Since: 323
 * @deprecated Use graphics.callScaleformMovieMethodWithNumber(scaleform, methodName, param1, param2, param3, param4, param5) instead
 */
export declare function callScaleformMovieMethodWithNumber(scaleform: number, methodName: string, param1: number, param2: number, param3: number, param4: number, param5: number): void;
/**
 * Calls the Scaleform function and passes the parameters as strings.
 *
 * The number of parameters passed to the function varies, so the end of the parameter list is represented by 0 (NULL).
 *
 * Hash: 0x51BC1ED3CC44E8F7 | Since: 323
 * @deprecated Use graphics.callScaleformMovieMethodWithString(scaleform, methodName, param1, param2, param3, param4, param5) instead
 */
export declare function callScaleformMovieMethodWithString(scaleform: number, methodName: string, param1: string, param2: string, param3: string, param4: string, param5: string): void;
/**
 * Calls the Scaleform function and passes both float and string parameters (in their respective order).
 *
 * The number of parameters passed to the function varies, so the end of the float parameters is represented by -1.0, and the end of the string parameters is represented by 0 (NULL).
 *
 * NOTE: The order of parameters in the function prototype is important! All float parameters must come first, followed by the string parameters.
 *
 * Examples:
 * // function MY_FUNCTION(floatParam1, floatParam2, stringParam)
 * `GRAPHICS::CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER_AND_STRING(scaleform, "MY_FUNCTION", 10.0, 20.0, -1.0, -1.0, -1.0, "String param", 0, 0, 0, 0);`
 *
 * // function MY_FUNCTION_2(floatParam, stringParam1, stringParam2)
 * `GRAPHICS::CALL_SCALEFORM_MOVIE_METHOD_WITH_NUMBER_AND_STRING(scaleform, "MY_FUNCTION_2", 10.0, -1.0, -1.0, -1.0, -1.0, "String param #1", "String param #2", 0, 0, 0);`
 *
 * Hash: 0xEF662D8D57E290B1 | Since: 323
 * @deprecated Use graphics.callScaleformMovieMethodWithNumberAndString(scaleform, methodName, floatParam1, floatParam2, floatParam3, floatParam4, floatParam5, stringParam1, stringParam2, stringParam3, stringParam4, stringParam5) instead
 */
export declare function callScaleformMovieMethodWithNumberAndString(scaleform: number, methodName: string, floatParam1: number, floatParam2: number, floatParam3: number, floatParam4: number, floatParam5: number, stringParam1: string, stringParam2: string, stringParam3: string, stringParam4: string, stringParam5: string): void;
/**
 * `Pushes a function from the Hud component Scaleform onto the stack. Same behavior as GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD, just a hud component id instead of a Scaleform.`
 *
 * Known components:
 * 19 - MP_RANK_BAR
 * 20 - HUD_DIRECTOR_MODE
 *
 * This native requires more research - all information can be found inside of 'hud.gfx'. Using a decompiler, the different components are located under "scripts\__Packages\com\rockstargames\gtav\hud\hudComponents" and "scripts\__Packages\com\rockstargames\gtav\Multiplayer".
 *
 * Hash: 0x98C494FD5BDFBFD5 | Since: 323
 * @deprecated Use graphics.beginScaleformScriptHudMovieMethod(hudComponent, methodName) instead
 */
export declare function beginScaleformScriptHudMovieMethod(hudComponent: number, methodName: string): boolean;
/**
 * Push a function from the Scaleform onto the stack
 *
 *
 * Hash: 0xF6E48914C7A8694E | Since: 323
 * @deprecated Use graphics.beginScaleformMovieMethod(scaleform, methodName) instead
 */
export declare function beginScaleformMovieMethod(scaleform: number, methodName: string): boolean;
/**
 * Starts frontend (pause menu) scaleform movie methods.
 * This can be used when you want to make custom frontend menus, and customize things like images or text in the menus etc.
 * Use `BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER` for header scaleform functions.
 *
 * Hash: 0xAB58C27C2E6123C6 | Since: 323
 * @deprecated Use graphics.beginScaleformMovieMethodOnFrontend(methodName) instead
 */
export declare function beginScaleformMovieMethodOnFrontend(methodName: string): boolean;
/**
 * Starts frontend (pause menu) scaleform movie methods for header options.
 * Use `BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND` to customize the content inside the frontend menus.
 *
 * Hash: 0xB9449845F73F5E9C | Since: 323
 * @deprecated Use graphics.beginScaleformMovieMethodOnFrontendHeader(methodName) instead
 */
export declare function beginScaleformMovieMethodOnFrontendHeader(methodName: string): boolean;
/**
 * Pops and calls the Scaleform function on the stack
 *
 * Hash: 0xC6796A8FFA375E53 | Since: 323
 * @deprecated Use graphics.endScaleformMovieMethod() instead
 */
export declare function endScaleformMovieMethod(): void;
/**
 * No comment provided
 *
 * Hash: 0xC50AA39A577AF886 | Since: 323
 * @deprecated Use graphics.endScaleformMovieMethodReturnValue() instead
 */
export declare function endScaleformMovieMethodReturnValue(): number;
/**
 * methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
 * Returns true if the return value of a scaleform function is ready to be collected (using GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING or GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT).
 *
 * Hash: 0x768FF8961BA904D6 | Since: 323
 * @deprecated Use graphics.isScaleformMovieMethodReturnValueReady(methodReturn) instead
 */
export declare function isScaleformMovieMethodReturnValueReady(methodReturn: number): boolean;
/**
 * methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
 * Used to get a return value from a scaleform function. Returns an int in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING returns a string.
 *
 * Hash: 0x2DE7EFA66B906036 | Since: 323
 * @deprecated Use graphics.getScaleformMovieMethodReturnValueInt(methodReturn) instead
 */
export declare function getScaleformMovieMethodReturnValueInt(methodReturn: number): number;
/**
 * methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
 *
 * Hash: 0xD80A80346A45D761 | Since: 757
 * @deprecated Use graphics.getScaleformMovieMethodReturnValueBool(methodReturn) instead
 */
export declare function getScaleformMovieMethodReturnValueBool(methodReturn: number): boolean;
/**
 * methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
 * Used to get a return value from a scaleform function. Returns a string in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT returns an int.
 *
 * Hash: 0xE1E258829A885245 | Since: 323
 * @deprecated Use graphics.getScaleformMovieMethodReturnValueString(methodReturn) instead
 */
export declare function getScaleformMovieMethodReturnValueString(methodReturn: number): string;
/**
 * Pushes an integer for the Scaleform function onto the stack.
 *
 * Hash: 0xC3D0841A0CC546A6 | Since: 323
 * @deprecated Use graphics.scaleformMovieMethodAddParamInt(value) instead
 */
export declare function scaleformMovieMethodAddParamInt(value: number): void;
/**
 * Pushes a float for the Scaleform function onto the stack.
 *
 * Hash: 0xD69736AAE04DB51A | Since: 323
 * @deprecated Use graphics.scaleformMovieMethodAddParamFloat(value) instead
 */
export declare function scaleformMovieMethodAddParamFloat(value: number): void;
/**
 * Pushes a boolean for the Scaleform function onto the stack.
 *
 * Hash: 0xC58424BA936EB458 | Since: 323
 * @deprecated Use graphics.scaleformMovieMethodAddParamBool(value) instead
 */
export declare function scaleformMovieMethodAddParamBool(value: boolean): void;
/**
 * `Called prior to adding a text component to the UI. After doing so, GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING is called.`
 *
 * Examples:
 * `GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("NUMBER");`
 * `HUD::ADD_TEXT_COMPONENT_INTEGER(MISC::ABSI(a_1));`
 * `GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();`
 *
 * `GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");`
 * `HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(a_2);`
 * `GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();`
 *
 * `GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM2");`
 * `HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY(v_3);`
 * `HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY(v_4);`
 * `GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();`
 *
 * `GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM1");`
 * `HUD::ADD_TEXT_COMPONENT_SUBSTRING_TEXT_LABEL_HASH_KEY(v_3);`
 * `GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();`
 *
 * Hash: 0x80338406F3475E55 | Since: 323
 * @deprecated Use graphics.beginTextCommandScaleformString(componentType) instead
 */
export declare function beginTextCommandScaleformString(componentType: string): void;
/**
 * No comment provided
 *
 * Hash: 0x362E2D3FE93A9959 | Since: 323
 * @deprecated Use graphics.endTextCommandScaleformString() instead
 */
export declare function endTextCommandScaleformString(): void;
/**
 * Same as END_TEXT_COMMAND_SCALEFORM_STRING but does not perform HTML conversion for text tokens.
 *
 * Hash: 0xAE4E8157D9ECF087 | Since: 323
 * @deprecated Use graphics.endTextCommandUnparsedScaleformString() instead
 */
export declare function endTextCommandUnparsedScaleformString(): void;
/**
 * Same as SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING
 * Both SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING / _SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING_2 works, but _SCALEFORM_MOVIE_METHOD_ADD_PARAM_TEXTURE_NAME_STRING_2 is usually used for "name" (organisation, players..).
 *
 * Hash: 0x77FE3402004CD1B0 | Since: 573
 * @deprecated Use graphics.scaleformMovieMethodAddParamLiteralString(_string) instead
 */
export declare function scaleformMovieMethodAddParamLiteralString(_string: string): void;
/**
 * No comment provided
 *
 * Hash: 0xBA7148484BD90365 | Since: 323
 * @deprecated Use graphics.scaleformMovieMethodAddParamTextureNameString(_string) instead
 */
export declare function scaleformMovieMethodAddParamTextureNameString(_string: string): void;
/**
 * No comment provided
 *
 * Hash: 0xE83A3E3557A56640 | Since: 323
 * @deprecated Use graphics.scaleformMovieMethodAddParamPlayerNameString(_string) instead
 */
export declare function scaleformMovieMethodAddParamPlayerNameString(_string: string): void;
/**
 * No comment provided
 *
 * Hash: 0x5E657EF1099EDD65 | Since: 323
 * @deprecated Use graphics.doesLatestBriefStringExist() instead
 */
export declare function doesLatestBriefStringExist(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEC52C631A1831C03 | Since: 323
 * @deprecated Use graphics.scaleformMovieMethodAddParamLatestBriefString(value) instead
 */
export declare function scaleformMovieMethodAddParamLatestBriefString(value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9304881D6F6537EA | Since: 323
 * @deprecated Use graphics.requestScaleformScriptHudMovie(hudComponent) instead
 */
export declare function requestScaleformScriptHudMovie(hudComponent: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDF6E5987D2B4D140 | Since: 323
 * @deprecated Use graphics.hasScaleformScriptHudMovieLoaded(hudComponent) instead
 */
export declare function hasScaleformScriptHudMovieLoaded(hudComponent: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF44A5456AC3F4F97 | Since: 323
 * @deprecated Use graphics.removeScaleformScriptHudMovie(hudComponent) instead
 */
export declare function removeScaleformScriptHudMovie(hudComponent: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD1C7CB175E012964 | Since: 323
 * @deprecated Use graphics.passKeyboardInputToScaleform(scaleformHandle) instead
 */
export declare function passKeyboardInputToScaleform(scaleformHandle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBAABBB23EB6E484E | Since: 323
 * @deprecated Use graphics.setTvChannel(channel) instead
 */
export declare function setTvChannel(channel: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFC1E275A90D39995 | Since: 323
 * @deprecated Use graphics.getTvChannel() instead
 */
export declare function getTvChannel(): number;
/**
 * No comment provided
 *
 * Hash: 0x2982BF73F66E9DDC | Since: 323
 * @deprecated Use graphics.setTvVolume(volume) instead
 */
export declare function setTvVolume(volume: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2170813D3DD8661B | Since: 323
 * @deprecated Use graphics.getTvVolume() instead
 */
export declare function getTvVolume(): number;
/**
 * `All calls to this native are preceded by calls to GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER and GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU, respectively.`
 *
 * "act_cinema.ysc", line 1483:
 * `HUD::SET_HUD_COMPONENT_POSITION(15, 0.0, -0.0375);`
 * `HUD::SET_TEXT_RENDER_ID(l_AE);`
 * `GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(4);`
 * `GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(1);`
 * `if (GRAPHICS::IS_TVSHOW_CURRENTLY_PLAYING(${movie_arthouse})) {`
 * `GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 0.7375, 1.0, 0.0, 255, 255, 255, 255);`
 * } else {
 * `GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);`
 * }
 *
 * "am_mp_property_int.ysc", line 102545:
 * `if (ENTITY::DOES_ENTITY_EXIST(a_2._f3)) {`
 * `if (HUD::IS_NAMED_RENDERTARGET_LINKED(ENTITY::GET_ENTITY_MODEL(a_2._f3))) {`
 * `HUD::SET_TEXT_RENDER_ID(a_2._f1);`
 * `GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(4);`
 * `GRAPHICS::SET_SCRIPT_GFX_DRAW_BEHIND_PAUSEMENU(1);`
 * `GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);`
 * `if (GRAPHICS::GET_TV_CHANNEL() == -1) {`
 * sub_a8fa5(a_2, 1);
 * } else {
 * sub_a8fa5(a_2, 1);
 * `GRAPHICS::ATTACH_TV_AUDIO_TO_ENTITY(a_2._f3);`
 * }
 * `HUD::SET_TEXT_RENDER_ID(HUD::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID());`
 * }
 * }
 *
 *
 * Hash: 0xFDDC2B4ED3C69DF0 | Since: 323
 * @deprecated Use graphics.drawTvChannel(xPos, yPos, xScale, yScale, rotation, red, green, blue, alpha) instead
 */
export declare function drawTvChannel(xPos: number, yPos: number, xScale: number, yScale: number, rotation: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * Loads specified video sequence into the TV Channel
 * TV_Channel ranges from 0-2
 * VideoSequence can be any of the following:
 * "PL_STD_CNT" CNT Standard Channel
 * "PL_STD_WZL" Weazel Standard Channel
 * "PL_LO_CNT"
 * "PL_LO_WZL"
 * "PL_SP_WORKOUT"
 * "PL_SP_INV" - Jay Norris Assassination Mission Fail
 * "PL_SP_INV_EXP" - Jay Norris Assassination Mission Success
 * "PL_LO_RS" - Righteous Slaughter Ad
 * "PL_LO_RS_CUTSCENE" - Righteous Slaughter Cut-scene
 * "PL_SP_PLSH1_INTRO"
 * "PL_LES1_FAME_OR_SHAME"
 * "PL_STD_WZL_FOS_EP2"
 * "PL_MP_WEAZEL" - Weazel Logo on loop
 * "PL_MP_CCTV" - Generic CCTV loop
 *
 * Restart:
 * 0=video sequence continues as normal
 * 1=sequence restarts from beginning every time that channel is selected
 *
 *
 * The above playlists work as intended, and are commonly used, but there are many more playlists, as seen in `tvplaylists.xml`. A pastebin below outlines all playlists, they will be surronded by the name tag I.E. (<Name>PL_STD_CNT</Name> = PL_STD_CNT).
 * https://pastebin.com/zUzGB6h7
 *
 * Hash: 0xF7B38B8305F1FE8B | Since: 323
 * @deprecated Use graphics.setTvChannelPlaylist(tvChannel, playlistName, restart) instead
 */
export declare function setTvChannelPlaylist(tvChannel: number, playlistName: string, restart: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2201C576FACAEBE8 | Since: 323
 * @deprecated Use graphics.setTvChannelPlaylistAtHour(tvChannel, playlistName, hour) instead
 */
export declare function setTvChannelPlaylistAtHour(tvChannel: number, playlistName: string, hour: number): void;
/**
 * Does not actually return anything.
 *
 * Hash: 0xEE831F15A8D0D94A | Since: 3095
 * @deprecated Use graphics.setTvChannelPlaylistDirty(tvChannel) instead
 */
export declare function setTvChannelPlaylistDirty(tvChannel: number): any;
/**
 * No comment provided
 *
 * Hash: 0xBEB3D46BB7F043C0 | Since: 323
 * @deprecated Use graphics.clearTvChannelPlaylist(tvChannel) instead
 */
export declare function clearTvChannelPlaylist(tvChannel: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1F710BFF7DAE6261 | Since: 1604
 * @deprecated Use graphics.isPlaylistOnChannel(tvChannel) instead
 */
export declare function isPlaylistOnChannel(tvChannel: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0AD973CA1E077B60 | Since: 323
 * @deprecated Use graphics.isTvshowCurrentlyPlaying(videoCliphash) instead
 */
export declare function isTvshowCurrentlyPlaying(videoCliphash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x74C180030FDE4B69 | Since: 323
 * @deprecated Use graphics.enableMovieKeyframeWait(toggle) instead
 */
export declare function enableMovieKeyframeWait(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD1C55B110E4DF534 | Since: 323
 * @deprecated Use graphics.setTvPlayerWatchingThisFrame() instead
 */
export declare function setTvPlayerWatchingThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x30432A0118736E00 | Since: 1493
 * @deprecated Use graphics.getCurrentTvClipNamehash() instead
 */
export declare function getCurrentTvClipNamehash(): number;
/**
 * No comment provided
 *
 * Hash: 0x873FA65C778AD970 | Since: 323
 * @deprecated Use graphics.enableMovieSubtitles(toggle) instead
 */
export declare function enableMovieSubtitles(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD3A10FC7FD8D98CD | Since: 323
 * @deprecated Use graphics.ui3dsceneIsAvailable() instead
 */
export declare function ui3dsceneIsAvailable(): boolean;
/**
 * All presets can be found in common\data\ui\uiscenes.meta
 *
 * Hash: 0xF1CEA8A4198D8E9A | Since: 323
 * @deprecated Use graphics.ui3dscenePushPreset(presetName) instead
 */
export declare function ui3dscenePushPreset(presetName: string): boolean;
/**
 * It's called after UI3DSCENE_IS_AVAILABLE and UI3DSCENE_PUSH_PRESET
 *
 * presetName was always "CELEBRATION_WINNER"
 * All presets can be found in common\data\ui\uiscenes.meta
 *
 * Hash: 0x98C4FE6EC34154CA | Since: 323
 * @deprecated Use graphics.ui3dsceneAssignPedToSlot(presetName, ped, slot, pos) instead
 */
export declare function ui3dsceneAssignPedToSlot(presetName: string, ped: number | Ped, slot: number, pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7A42B2E236E71415 | Since: 323
 * @deprecated Use graphics.ui3dsceneClearPatchedData() instead
 */
export declare function ui3dsceneClearPatchedData(): void;
/**
 * No comment provided
 *
 * Hash: 0x108BE26959A9D9BB | Since: 323
 * @deprecated Use graphics.ui3dsceneMakePushedPresetPersistent(toggle) instead
 */
export declare function ui3dsceneMakePushedPresetPersistent(toggle: boolean): void;
/**
 * This native enables/disables the gold putting grid display (https://i.imgur.com/TC6cku6.png).
 * This requires these two natives to be called as well to configure the grid: `TERRAINGRID_SET_PARAMS` and `TERRAINGRID_SET_COLOURS`.
 *
 * Hash: 0xA356990E161C9E65 | Since: 323
 * @deprecated Use graphics.terraingridActivate(toggle) instead
 */
export declare function terraingridActivate(toggle: boolean): void;
/**
 * This native is used along with these two natives: `TERRAINGRID_ACTIVATE` and `TERRAINGRID_SET_COLOURS`.
 * This native configures the location, size, rotation, normal height, and the difference ratio between min, normal and max.
 *
 * All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
 *
 * This native renders a box at the given position, with a special shader that renders a grid on world geometry behind it. This box does not have backface culling.
 * The forward args here are a direction vector, something similar to what's returned by GET_ENTITY_FORWARD_VECTOR.
 * normalHeight and heightDiff are used for positioning the color gradient of the grid, colors specified via TERRAINGRID_SET_COLOURS.
 *
 * Example with box superimposed on the image to demonstrate: https://i.imgur.com/wdqskxd.jpg
 *
 * Hash: 0x1C4FC5752BCD8E48 | Since: 323
 * @deprecated Use graphics.terraingridSetParams(pos, forwardX, forwardY, forwardZ, sizeX, sizeY, sizeZ, gridScale, glowIntensity, normalHeight, heightDiff) instead
 */
export declare function terraingridSetParams(pos: Vector3, forwardX: number, forwardY: number, forwardZ: number, sizeX: number, sizeY: number, sizeZ: number, gridScale: number, glowIntensity: number, normalHeight: number, heightDiff: number): void;
/**
 * This native is used along with these two natives: `TERRAINGRID_ACTIVATE` and `TERRAINGRID_SET_PARAMS`.
 * This native sets the colors for the golf putting grid. the 'min...' values are for the lower areas that the grid covers, the 'max...' values are for the higher areas that the grid covers, all remaining values are for the 'normal' ground height.
 * All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
 *
 * Hash: 0x5CE62918F8D703C7 | Since: 323
 * @deprecated Use graphics.terraingridSetColours(lowR, lowG, lowB, lowAlpha, r, g, b, alpha, highR, highG, highB, highAlpha) instead
 */
export declare function terraingridSetColours(lowR: number, lowG: number, lowB: number, lowAlpha: number, r: number, g: number, b: number, alpha: number, highR: number, highG: number, highB: number, highAlpha: number): void;
/**
 * duration - is how long to play the effect for in milliseconds. If 0, it plays the default length
 * if loop is true, the effect won't stop until you call ANIMPOSTFX_STOP on it. (only loopable effects)
 *
 * Full list of animpostFX / screen effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animPostFxNamesCompact.json
 *
 * Hash: 0x2206BF9A37B7F724 | Since: 323
 * @deprecated Use graphics.animpostfxPlay(effectName, duration, looped) instead
 */
export declare function animpostfxPlay(effectName: string, duration: number, looped: boolean): void;
/**
 * See ANIMPOSTFX_PLAY
 *
 * Full list of animpostFX / screen effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animPostFxNamesCompact.json
 *
 * Hash: 0x068E835A1D0DC0E3 | Since: 323
 * @deprecated Use graphics.animpostfxStop(effectName) instead
 */
export declare function animpostfxStop(effectName: string): void;
/**
 * See ANIMPOSTFX_PLAY
 *
 * Full list of animpostFX / screen effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animPostFxNamesCompact.json
 *
 * Hash: 0xE35B38A27E8E7179 | Since: 877
 * @deprecated Use graphics.animpostfxGetCurrentTime(effectName) instead
 */
export declare function animpostfxGetCurrentTime(effectName: string): number;
/**
 * Returns whether the specified effect is active.
 * See ANIMPOSTFX_PLAY
 *
 * Full list of animpostFX / screen effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animPostFxNamesCompact.json
 *
 * Hash: 0x36AD3E690DA5ACEB | Since: 323
 * @deprecated Use graphics.animpostfxIsRunning(effectName) instead
 */
export declare function animpostfxIsRunning(effectName: string): boolean;
/**
 * Stops ALL currently playing effects.
 *
 * Hash: 0xB4EDDC19532BFB85 | Since: 323
 * @deprecated Use graphics.animpostfxStopAll() instead
 */
export declare function animpostfxStopAll(): void;
/**
 * Stops the effect and sets a value (bool) in its data (+0x199) to false.
 * See ANIMPOSTFX_PLAY
 *
 * Full list of animpostFX / screen effects by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animPostFxNamesCompact.json
 *
 * Hash: 0xD2209BE128B5418C | Since: 323
 * @deprecated Use graphics.animpostfxStopAndFlushRequests(effectName) instead
 */
export declare function animpostfxStopAndFlushRequests(effectName: string): void;
/**
 * Initializes the text entry for the the text next to a loading prompt. All natives for building UI texts can be used here
 *
 *
 * e.g
 * void StartLoadingMessage(char *text, int spinnerType = 3)
 * {
 * BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * END_TEXT_COMMAND_BUSYSPINNER_ON(spinnerType);
 * }
 * \/\*OR\*\/
 * void ShowLoadingMessage(char *text, int spinnerType = 3, int timeMs = 10000)
 * {
 * BEGIN_TEXT_COMMAND_BUSYSPINNER_ON("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * END_TEXT_COMMAND_BUSYSPINNER_ON(spinnerType);
 * WAIT(timeMs);
 * BUSYSPINNER_OFF();
 * }
 *
 *
 * These are some localized strings used in the loading spinner.
 * "PM_WAIT"                   = Please Wait
 * "CELEB_WPLYRS"              = Waiting For Players.
 * "CELL_SPINNER2"             = Scanning storage.
 * "ERROR_CHECKYACHTNAME" = Registering your yacht's name. Please wait.
 * "ERROR_CHECKPROFANITY"   = Checking your text for profanity. Please wait.
 * "FM_COR_AUTOD"                        = Just spinner no text
 * "FM_IHELP_WAT2"                        = Waiting for other players
 * "FM_JIP_WAITO"                            = Game options are being set
 * "FMMC_DOWNLOAD"                    = Downloading
 * "FMMC_PLYLOAD"                         = Loading
 * "FMMC_STARTTRAN"                    = Launching session
 * "HUD_QUITTING"                           =  Quiting session
 * "KILL_STRIP_IDM"                         = Waiting for to accept
 * "MP_SPINLOADING"                      = Loading
 *
 * Hash: 0xABA17D7CE615ADBF | Since: 323
 * @deprecated Use hud.beginTextCommandBusyspinnerOn(_string) instead
 */
export declare function beginTextCommandBusyspinnerOn(_string: string): void;
/**
 * enum eBusySpinnerType
 * {
 * BUSY_SPINNER_LEFT,
 * BUSY_SPINNER_LEFT_2,
 * BUSY_SPINNER_LEFT_3,
 * BUSY_SPINNER_SAVE,
 * BUSY_SPINNER_RIGHT,
 * };
 *
 * Hash: 0xBD12F8228410D9B4 | Since: 323
 * @deprecated Use hud.endTextCommandBusyspinnerOn(busySpinnerType) instead
 */
export declare function endTextCommandBusyspinnerOn(busySpinnerType: number): void;
/**
 * Removes the loading prompt at the bottom right of the screen.
 *
 * Hash: 0x10D373323E5B9C0D | Since: 323
 * @deprecated Use hud.busyspinnerOff() instead
 */
export declare function busyspinnerOff(): void;
/**
 * No comment provided
 *
 * Hash: 0xC65AB383CD91DF98 | Since: 323
 * @deprecated Use hud.preloadBusyspinner() instead
 */
export declare function preloadBusyspinner(): void;
/**
 * No comment provided
 *
 * Hash: 0xD422FCC5F239A915 | Since: 323
 * @deprecated Use hud.busyspinnerIsOn() instead
 */
export declare function busyspinnerIsOn(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB2A592B04648A9CB | Since: 323
 * @deprecated Use hud.busyspinnerIsDisplaying() instead
 */
export declare function busyspinnerIsDisplaying(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9245E81072704B8A | Since: 323
 * @deprecated Use hud.disablePausemenuSpinner() instead
 */
export declare function disablePausemenuSpinner(): void;
/**
 * Shows the cursor on screen for one frame.
 *
 * Hash: 0xAAE7CE1D63167423 | Since: 323
 * @deprecated Use hud.setMouseCursorThisFrame() instead
 */
export declare function setMouseCursorThisFrame(): void;
/**
 * Changes the mouse cursor's sprite.
 * 1 = Normal
 * 6 = Left Arrow
 * 7 = Right Arrow
 *
 * Hash: 0x8DB8CFFD58B62552 | Since: 323
 * @deprecated Use hud.setMouseCursorStyle(spriteId) instead
 */
export declare function setMouseCursorStyle(spriteId: number): void;
/**
 * Shows/hides the frontend cursor on the pause menu or similar menus.
 * Clicking off and then on the game window will show it again.
 *
 * Hash: 0x98215325A695E78A | Since: 323
 * @deprecated Use hud.setMouseCursorVisible(toggle) instead
 */
export declare function setMouseCursorVisible(toggle: boolean): void;
/**
 * Returns TRUE if mouse is hovering above instructional buttons. Works with all buttons gfx, such as popup_warning, pause_menu_instructional_buttons, instructional_buttons, etc. Note: You have to call TOGGLE_MOUSE_BUTTONS on the scaleform if you want this native to work.
 *
 * Hash: 0x3D9ACB1EB139E702 | Since: 323
 * @deprecated Use hud.isMouseRolledOverInstructionalButtons() instead
 */
export declare function isMouseRolledOverInstructionalButtons(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x632B2940C67F4EA9 | Since: 323
 * @deprecated Use hud.getMouseEvent(scaleformHandle) instead
 */
export declare function getMouseEvent(scaleformHandle: number): [boolean, any, any, any];
/**
 * No comment provided
 *
 * Hash: 0x6F1554B0CC2089FA | Since: 323
 * @deprecated Use hud.thefeedOnlyShowTooltips(toggle) instead
 */
export declare function thefeedOnlyShowTooltips(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x55598D21339CB998 | Since: 323
 * @deprecated Use hud.thefeedSetScriptedMenuHeight(pos) instead
 */
export declare function thefeedSetScriptedMenuHeight(pos: number): void;
/**
 * Stops loading screen tips shown by invoking `THEFEED_SHOW`
 *
 * Hash: 0x32888337579A5970 | Since: 463
 * @deprecated Use hud.thefeedHide() instead
 */
export declare function thefeedHide(): void;
/**
 * Once called each frame hides all above radar notifications.
 *
 * Hash: 0x25F87B30C382FCA7 | Since: 323
 * @deprecated Use hud.thefeedHideThisFrame() instead
 */
export declare function thefeedHideThisFrame(): void;
/**
 * Displays loading screen tips, requires `THEFEED_AUTO_POST_GAMETIPS_ON` to be called beforehand.
 *
 * Hash: 0x15CFA549788D35EF | Since: 463
 * @deprecated Use hud.thefeedShow() instead
 */
export declare function thefeedShow(): void;
/**
 * No comment provided
 *
 * Hash: 0xA8FDB297A8D25FBA | Since: 323
 * @deprecated Use hud.thefeedFlushQueue() instead
 */
export declare function thefeedFlushQueue(): void;
/**
 * Removes a notification instantly instead of waiting for it to disappear
 *
 * Hash: 0xBE4390CB40B3E627 | Since: 323
 * @deprecated Use hud.thefeedRemoveItem(notificationId) instead
 */
export declare function thefeedRemoveItem(notificationId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA13C11E1B5C06BFC | Since: 323
 * @deprecated Use hud.thefeedForceRenderOn() instead
 */
export declare function thefeedForceRenderOn(): void;
/**
 * Enables loading screen tips to be be shown (`THEFEED_SHOW`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
 *
 * Hash: 0x583049884A2EEE3C | Since: 323
 * @deprecated Use hud.thefeedForceRenderOff() instead
 */
export declare function thefeedForceRenderOff(): void;
/**
 * No comment provided
 *
 * Hash: 0xFDB423997FA30340 | Since: 323
 * @deprecated Use hud.thefeedPause() instead
 */
export declare function thefeedPause(): void;
/**
 * No comment provided
 *
 * Hash: 0xE1CD1E48E025E661 | Since: 323
 * @deprecated Use hud.thefeedResume() instead
 */
export declare function thefeedResume(): void;
/**
 * No comment provided
 *
 * Hash: 0xA9CBFD40B3FA3010 | Since: 323
 * @deprecated Use hud.thefeedIsPaused() instead
 */
export declare function thefeedIsPaused(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD4438C0564490E63 | Since: 323
 * @deprecated Use hud.thefeedReportLogoOn() instead
 */
export declare function thefeedReportLogoOn(): void;
/**
 * No comment provided
 *
 * Hash: 0xB695E2CD0A2DA9EE | Since: 323
 * @deprecated Use hud.thefeedReportLogoOff() instead
 */
export declare function thefeedReportLogoOff(): void;
/**
 * Returns the handle for the notification currently displayed on the screen. Name may be a hash collision, but describes the function accurately.
 *
 * Hash: 0x82352748437638CA | Since: 323
 * @deprecated Use hud.thefeedGetLastShownPhoneActivatableFeedId() instead
 */
export declare function thefeedGetLastShownPhoneActivatableFeedId(): number;
/**
 * Enables loading screen tips to be be shown (`THEFEED_SHOW`), blocks other kinds of notifications from being displayed (at least from current script). Call `THEFEED_AUTO_POST_GAMETIPS_OFF` to display those again.
 *
 * Hash: 0x56C8B608CFD49854 | Since: 323
 * @deprecated Use hud.thefeedAutoPostGametipsOn() instead
 */
export declare function thefeedAutoPostGametipsOn(): void;
/**
 * Displays "normal" notifications again after calling `THEFEED_AUTO_POST_GAMETIPS_ON` (those that were drawn before calling this native too), though those will have a weird offset and stay on screen forever (tested with notifications created from same script).
 *
 * Hash: 0xADED7F5748ACAFE6 | Since: 323
 * @deprecated Use hud.thefeedAutoPostGametipsOff() instead
 */
export declare function thefeedAutoPostGametipsOff(): void;
/**
 * From the decompiled scripts:
 * `HUD::THEFEED_SET_BACKGROUND_COLOR_FOR_NEXT_POST(6);`
 * `HUD::THEFEED_SET_BACKGROUND_COLOR_FOR_NEXT_POST(184);`
 * `HUD::THEFEED_SET_BACKGROUND_COLOR_FOR_NEXT_POST(190);`
 *
 * sets background color for the next notification
 * 6 = red
 * 184 = green
 * 190 = yellow
 *
 * Here is a list of some colors that can be used: https://gyazo.com/68bd384455fceb0a85a8729e48216e15
 *
 * Hash: 0x92F0DA1E27DB96DC | Since: 323
 * @deprecated Use hud.thefeedSetBackgroundColorForNextPost(hudColorIndex) instead
 */
export declare function thefeedSetBackgroundColorForNextPost(hudColorIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x17430B918701C342 | Since: 323
 * @deprecated Use hud.thefeedSetRgbaParameterForNextMessage(red, green, blue, alpha) instead
 */
export declare function thefeedSetRgbaParameterForNextMessage(red: number, green: number, blue: number, alpha: number): void;
/**
 * Related to notification color flashing, setting count to 0 invalidates a `THEFEED_SET_RGBA_PARAMETER_FOR_NEXT_MESSAGE` call for the target notification.
 *
 * Hash: 0x17AD8C9706BDD88A | Since: 323
 * @deprecated Use hud.thefeedSetFlashDurationParameterForNextMessage(count) instead
 */
export declare function thefeedSetFlashDurationParameterForNextMessage(count: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4A0C7C9BB10ABB36 | Since: 323
 * @deprecated Use hud.thefeedSetVibrateParameterForNextMessage(toggle) instead
 */
export declare function thefeedSetVibrateParameterForNextMessage(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xFDD85225B2DEA55E | Since: 323
 * @deprecated Use hud.thefeedResetAllParameters() instead
 */
export declare function thefeedResetAllParameters(): void;
/**
 * Requires manual management of game stream handles (i.e., 0xBE4390CB40B3E627).
 *
 * Hash: 0xFDEC055AB549E328 | Since: 323
 * @deprecated Use hud.thefeedFreezeNextPost() instead
 */
export declare function thefeedFreezeNextPost(): void;
/**
 * No comment provided
 *
 * Hash: 0x80FE4F3AB4E1B62A | Since: 323
 * @deprecated Use hud.thefeedClearFrozenPost() instead
 */
export declare function thefeedClearFrozenPost(): void;
/**
 * No comment provided
 *
 * Hash: 0xBAE4F9B97CD43B30 | Since: 323
 * @deprecated Use hud.thefeedSetSnapFeedItemPositions() instead
 */
export declare function thefeedSetSnapFeedItemPositions(): void;
/**
 * Used in the native scripts to reference "GET_PEDHEADSHOT_TXD_STRING" and "CHAR_DEFAULT".
 *
 * Hash: 0x317EBA71D7543F52 | Since: 323
 * @deprecated Use hud.thefeedUpdateItemTexture(txdString1, txnString1, txdString2, txnString2) instead
 */
export declare function thefeedUpdateItemTexture(txdString1: string, txnString1: string, txdString2: string, txnString2: string): void;
/**
 * Declares the entry type of a notification, for example "STRING".
 *
 * int ShowNotification(char *text)
 * {
 * BEGIN_TEXT_COMMAND_THEFEED_POST("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * return END_TEXT_COMMAND_THEFEED_POST_TICKER(1, 1);
 * }
 *
 * Hash: 0x202709F4C58A0424 | Since: 323
 * @deprecated Use hud.beginTextCommandThefeedPost(text) instead
 */
export declare function beginTextCommandThefeedPost(text: string): void;
/**
 * List of picture names: https://pastebin.com/XdpJVbHz
 * Example result: https://i.imgur.com/SdEZ22m.png
 *
 * Hash: 0x2B7E9A4EAAA93C89 | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostStats(statTitle, iconEnum, stepVal, barValue, isImportant, pictureTextureDict, pictureTextureName) instead
 */
export declare function endTextCommandThefeedPostStats(statTitle: string, iconEnum: number, stepVal: boolean, barValue: number, isImportant: boolean, pictureTextureDict: string, pictureTextureName: string): number;
/**
 * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
 *
 * List of picNames: https://pastebin.com/XdpJVbHz
 *
 *
 * flash is a bool for fading in.
 * iconTypes:
 * 1 : Chat Box
 * 2 : Email
 * 3 : Add Friend Request
 * 4 : Nothing
 * 5 : Nothing
 * 6 : Nothing
 * 7 : Right Jumping Arrow
 * 8 : RP Icon
 * 9 : $ Icon
 *
 * "sender" is the very top header. This can be any old string.
 * "subject" is the header under the sender.
 *
 * Hash: 0x1CCD9A37359072CF | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostMessagetext(txdName, textureName, flash, iconType, sender, subject) instead
 */
export declare function endTextCommandThefeedPostMessagetext(txdName: string, textureName: string, flash: boolean, iconType: number, sender: string, subject: string): number;
/**
 * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
 *
 * Needs more research.
 *
 * Only one type of usage in the scripts:
 *
 * `HUD::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_SUBTITLE_LABEL("CHAR_ACTING_UP", "CHAR_ACTING_UP", 0, 0, "DI_FEED_CHAR", a_0);`
 *
 * Hash: 0xC6F580E4C94926AC | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostMessagetextSubtitleLabel(txdName, textureName, flash, iconType, sender, subject) instead
 */
export declare function endTextCommandThefeedPostMessagetextSubtitleLabel(txdName: string, textureName: string, flash: boolean, iconType: number, sender: string, subject: string): number;
/**
 * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
 *
 * NOTE: 'duration' is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
 *
 * Example, only occurrence in the scripts:
 * `v_8 = HUD::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 0, 0, &v_9, "", a_5);`
 *
 * Hash: 0x1E6611149DB3DB6B | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostMessagetextTu(txdName, textureName, flash, iconType, sender, subject, duration) instead
 */
export declare function endTextCommandThefeedPostMessagetextTu(txdName: string, textureName: string, flash: boolean, iconType: number, sender: string, subject: string, duration: number): number;
/**
 * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
 *
 * List of picNames https://pastebin.com/XdpJVbHz
 *
 * flash is a bool for fading in.
 * iconTypes:
 * 1 : Chat Box
 * 2 : Email
 * 3 : Add Friend Request
 * 4 : Nothing
 * 5 : Nothing
 * 6 : Nothing
 * 7 : Right Jumping Arrow
 * 8 : RP Icon
 * 9 : $ Icon
 *
 * "sender" is the very top header. This can be any old string.
 * "subject" is the header under the sender.
 * "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
 * "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
 *
 * Hash: 0x5CBF7BADE20DB93E | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostMessagetextWithCrewTag(txdName, textureName, flash, iconType, sender, subject, duration, clanTag) instead
 */
export declare function endTextCommandThefeedPostMessagetextWithCrewTag(txdName: string, textureName: string, flash: boolean, iconType: number, sender: string, subject: string, duration: number, clanTag: string): number;
/**
 * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
 *
 * List of picNames:  https://pastebin.com/XdpJVbHz
 *
 * flash is a bool for fading in.
 * iconTypes:
 * 1 : Chat Box
 * 2 : Email
 * 3 : Add Friend Request
 * 4 : Nothing
 * 5 : Nothing
 * 6 : Nothing
 * 7 : Right Jumping Arrow
 * 8 : RP Icon
 * 9 : $ Icon
 *
 * "sender" is the very top header. This can be any old string.
 * "subject" is the header under the sender.
 * "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
 * "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
 * iconType2 is a mirror of iconType. It shows in the "subject" line, right under the original iconType.
 *
 *
 * int IconNotification(char *text, char *text2, char *Subject)
 * {
 * BEGIN_TEXT_COMMAND_THEFEED_POST("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * _SET_NOTIFICATION_MESSAGE_CLAN_TAG_2("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 1, 7, text2, Subject, 1.0f, "__EXAMPLE", 7);
 * return END_TEXT_COMMAND_THEFEED_POST_TICKER(1, 1);
 * }
 *
 * Hash: 0x531B84E7DA981FB6 | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon(txdName, textureName, flash, iconType1, sender, subject, duration, clanTag, iconType2) instead
 */
export declare function endTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon(txdName: string, textureName: string, flash: boolean, iconType1: number, sender: string, subject: string, duration: number, clanTag: string, iconType2: number): number;
/**
 * No comment provided
 *
 * Hash: 0x2ED7843F8F801023 | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostTicker(blink) instead
 */
export declare function endTextCommandThefeedPostTicker(blink: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x44FA03975424A0EE | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostTickerForced(blink) instead
 */
export declare function endTextCommandThefeedPostTickerForced(blink: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x378E809BF61EC840 | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostTickerWithTokens(blink) instead
 */
export declare function endTextCommandThefeedPostTickerWithTokens(blink: boolean): number;
/**
 * Shows an "award" notification above the minimap, example: https://i.imgur.com/e2DNaKX.png
 * Example:
 *
 * `HUD::BEGIN_TEXT_COMMAND_THEFEED_POST("HUNT");`
 * `HUD::END_TEXT_COMMAND_THEFEED_POST_AWARD("Hunting", "Hunting_Gold_128", 0, 109, "HUD_MED_UNLKED");`
 *
 * Hash: 0xAA295B6F28BD587D | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostAward(textureDict, textureName, rpBonus, colorOverlay, titleLabel) instead
 */
export declare function endTextCommandThefeedPostAward(textureDict: string, textureName: string, rpBonus: number, colorOverlay: number, titleLabel: string): number;
/**
 * No comment provided
 *
 * Hash: 0x97C9E4E7024A8F2C | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostCrewtag(isLeader, unk0, clanDesc, R, G, B) instead
 */
export declare function endTextCommandThefeedPostCrewtag(isLeader: boolean, unk0: boolean, clanDesc: number, R: number, G: number, B: number): [number, number];
/**
 * No comment provided
 *
 * Hash: 0x137BC35589E34E1E | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostCrewtagWithGameName(isLeader, unk0, clanDesc, playerName, R, G, B) instead
 */
export declare function endTextCommandThefeedPostCrewtagWithGameName(isLeader: boolean, unk0: boolean, clanDesc: number, playerName: string, R: number, G: number, B: number): [number, number];
/**
 * No comment provided
 *
 * Hash: 0x33EE12743CCD6343 | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostUnlock(gxtLabel1, gxtLabel2) instead
 */
export declare function endTextCommandThefeedPostUnlock(gxtLabel1: string, gxtLabel2: string): number;
/**
 * No comment provided
 *
 * Hash: 0xC8F3AAF93D0600BF | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostUnlockTu(gxtLabel1, gxtLabel2) instead
 */
export declare function endTextCommandThefeedPostUnlockTu(gxtLabel1: string, gxtLabel2: string): number;
/**
 * No comment provided
 *
 * Hash: 0x7AE0589093A2E088 | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostUnlockTuWithColor() instead
 */
export declare function endTextCommandThefeedPostUnlockTuWithColor(): number;
/**
 * No comment provided
 *
 * Hash: 0xF020C96915705B3A | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostMpticker(blink) instead
 */
export declare function endTextCommandThefeedPostMpticker(blink: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x8EFCCF6EC66D85E4 | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostCrewRankupWithLiteralFlag() instead
 */
export declare function endTextCommandThefeedPostCrewRankupWithLiteralFlag(): number;
/**
 * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
 *
 * List of picNames: https://pastebin.com/XdpJVbHz
 * HUD colors and their values: https://pastebin.com/d9aHPbXN
 *
 * Shows a deathmatch score above the minimap, example: https://i.imgur.com/YmoMklG.png
 *
 * Hash: 0xB6871B0555B02996 | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostVersusTu(txdName1, textureName1, count1, txdName2, textureName2, count2, hudColor1, hudColor2) instead
 */
export declare function endTextCommandThefeedPostVersusTu(txdName1: string, textureName1: string, count1: number, txdName2: string, textureName2: string, count2: number, hudColor1: number, hudColor2: number): number;
/**
 * returns a notification handle, prints out a notification like below:
 * type range: 0 - 2
 * if you set type to 1, image goes from 0 - 39 - Xbox you can add text to
 *
 * example:
 * `HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1, 20, "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");`
 * - https://imgur.com/lGBPCz3
 *
 * Hash: 0xD202B92CBF1D816F | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostReplay(_type, image, text) instead
 */
export declare function endTextCommandThefeedPostReplay(_type: number, image: number, text: string): number;
/**
 * returns a notification handle, prints out a notification like below:
 * type range: 0 - 2
 * if you set type to 1, button accepts "~INPUT_SOMETHING~"
 *
 * example:
 * `HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1, "~INPUT_TALK~", "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");`
 * - https://imgur.com/UPy0Ial
 *
 *
 * Examples from the scripts:
 * `l_D1[1\/\*1\*\/]=HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");`
 * `l_D1[2\/\*1\*\/]=HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1,"~INPUT_SAVE_REPLAY_CLIP~","");`
 * `l_D1[1\/\*1\*\/]=HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");`
 * `l_D1[2\/\*1\*\/]=HUD::END_TEXT_COMMAND_THEFEED_POST_REPLAY_INPUT(1,"~INPUT_REPLAY_START_STOP_RECORDING_SECONDARY~","");`
 *
 *
 * Hash: 0xDD6CB2CCE7C2735C | Since: 323
 * @deprecated Use hud.endTextCommandThefeedPostReplayInput(_type, button, text) instead
 */
export declare function endTextCommandThefeedPostReplayInput(_type: number, button: string, text: string): number;
/**
 * void ShowSubtitle(const char *text)
 * {
 * BEGIN_TEXT_COMMAND_PRINT("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * END_TEXT_COMMAND_PRINT(2000, true);
 * }
 *
 * Hash: 0xB87A37EEB7FAA67D | Since: 323
 * @deprecated Use hud.beginTextCommandPrint(GxtEntry) instead
 */
export declare function beginTextCommandPrint(GxtEntry: string): void;
/**
 * Draws the subtitle at middle center of the screen.
 *
 * int duration = time in milliseconds to show text on screen before disappearing
 *
 * drawImmediately = If true, the text will be drawn immediately, if false, the text will be drawn after the previous subtitle has finished
 *
 * Used to be known as _DRAW_SUBTITLE_TIMED
 *
 * Hash: 0x9D77056A530643F6 | Since: 323
 * @deprecated Use hud.endTextCommandPrint(duration, drawImmediately) instead
 */
export declare function endTextCommandPrint(duration: number, drawImmediately: boolean): void;
/**
 * nothin doin.
 *
 * BOOL Message(const char* text)
 * {
 * BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * return END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED();
 * }
 *
 * Hash: 0x853648FD1063A213 | Since: 323
 * @deprecated Use hud.beginTextCommandIsMessageDisplayed(text) instead
 */
export declare function beginTextCommandIsMessageDisplayed(text: string): void;
/**
 * No comment provided
 *
 * Hash: 0x8A9BA1AB3E237613 | Since: 323
 * @deprecated Use hud.endTextCommandIsMessageDisplayed() instead
 */
export declare function endTextCommandIsMessageDisplayed(): boolean;
/**
 * The following were found in the decompiled script files:
 * STRING, TWOSTRINGS, NUMBER, PERCENTAGE, FO_TWO_NUM, ESMINDOLLA, ESDOLLA, MTPHPER_XPNO, AHD_DIST, CMOD_STAT_0, CMOD_STAT_1, CMOD_STAT_2, CMOD_STAT_3, DFLT_MNU_OPT, F3A_TRAFDEST, ES_HELP_SOC3
 *
 * ESDOLLA - cash
 * ESMINDOLLA - cash (negative)
 *
 * Used to be known as _SET_TEXT_ENTRY
 *
 * Hash: 0x25FBB336DF1804CB | Since: 323
 * @deprecated Use hud.beginTextCommandDisplayText(text) instead
 */
export declare function beginTextCommandDisplayText(text: string): void;
/**
 * `After applying the properties to the text (See HUD::SET_TEXT_), this will draw the text in the applied position. Also 0.0f < x, y < 1.0f, percentage of the axis.`
 *
 * Used to be known as _DRAW_TEXT
 *
 * Hash: 0xCD015E5BB0D96A57 | Since: 323
 * @deprecated Use hud.endTextCommandDisplayText(x, y) instead
 */
export declare function endTextCommandDisplayText(x: number, y: number): void;
/**
 * No comment provided
 *
 * Hash: 0x54CE8AC98E120CAB | Since: 323
 * @deprecated Use hud.beginTextCommandGetScreenWidthOfDisplayText(text) instead
 */
export declare function beginTextCommandGetScreenWidthOfDisplayText(text: string): void;
/**
 * No comment provided
 *
 * Hash: 0x85F061DA64ED2F67 | Since: 323
 * @deprecated Use hud.endTextCommandGetScreenWidthOfDisplayText() instead
 */
export declare function endTextCommandGetScreenWidthOfDisplayText(): number;
/**
 * int GetLineCount(char *text, float x, float y)
 * {
 * BEGIN_TEXT_COMMAND_GET_NUMBER_OF_LINES_FOR_STRING("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * return BEGIN_TEXT_COMMAND_GET_NUMBER_OF_LINES_FOR_STRING(x, y);
 * }
 *
 * Hash: 0x521FB041D93DD0E4 | Since: 323
 * @deprecated Use hud.beginTextCommandGetNumberOfLinesForString(entry) instead
 */
export declare function beginTextCommandGetNumberOfLinesForString(entry: string): void;
/**
 * Determines how many lines the text string will use when drawn on screen.
 * Must use 0x521FB041D93DD0E4 for setting up
 *
 * Hash: 0x9040DFB09BE75706 | Since: 323
 * @deprecated Use hud.endTextCommandGetNumberOfLinesForString(x, y) instead
 */
export declare function endTextCommandGetNumberOfLinesForString(x: number, y: number): number;
/**
 * Used to be known as _SET_TEXT_COMPONENT_FORMAT
 *
 * Hash: 0x8509B634FBE7DA11 | Since: 323
 * @deprecated Use hud.beginTextCommandDisplayHelp(inputType) instead
 */
export declare function beginTextCommandDisplayHelp(inputType: string): void;
/**
 * shape goes from -1 to 50 (may be more).
 * p0 is always 0.
 *
 * Example:
 * void FloatingHelpText(const char* text)
 * {
 * BEGIN_TEXT_COMMAND_DISPLAY_HELP("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * END_TEXT_COMMAND_DISPLAY_HELP (0, 0, 1, -1);
 * }
 *
 * Image:
 * - imgbin.org/images/26209.jpg
 *
 * more inputs/icons:
 * - https://pastebin.com/nqNYWMSB
 *
 * Used to be known as _DISPLAY_HELP_TEXT_FROM_STRING_LABEL
 *
 * Hash: 0x238FFE5C7B0498A6 | Since: 323
 * @deprecated Use hud.endTextCommandDisplayHelp(loop, beep, shape) instead
 */
export declare function endTextCommandDisplayHelp(loop: boolean, beep: boolean, shape: number): void;
/**
 * BOOL IsContextActive(char *ctx)
 * {
 * BEGIN_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(ctx);
 * return END_TEXT_COMMAND_IS_THIS_HELP_MESSAGE_BEING_DISPLAYED(0);
 * }
 *
 * Hash: 0x0A24DA3A41B718F5 | Since: 323
 * @deprecated Use hud.beginTextCommandIsThisHelpMessageBeingDisplayed(labelName) instead
 */
export declare function beginTextCommandIsThisHelpMessageBeingDisplayed(labelName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x10BDDBFC529428DD | Since: 323
 * @deprecated Use hud.endTextCommandIsThisHelpMessageBeingDisplayed() instead
 */
export declare function endTextCommandIsThisHelpMessageBeingDisplayed(): boolean;
/**
 * Starts a text command to change the name of a blip displayed in the pause menu.
 * This should be paired with `END_TEXT_COMMAND_SET_BLIP_NAME`, once adding all required text components.
 * Example:
 *
 * `HUD::BEGIN_TEXT_COMMAND_SET_BLIP_NAME("STRING");`
 * `HUD::ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME("Name");`
 * `HUD::END_TEXT_COMMAND_SET_BLIP_NAME(blip);`
 *
 * Hash: 0xF9113A30DE5C6670 | Since: 323
 * @deprecated Use hud.beginTextCommandSetBlipName(textLabel) instead
 */
export declare function beginTextCommandSetBlipName(textLabel: string): void;
/**
 * Finalizes a text command started with BEGIN_TEXT_COMMAND_SET_BLIP_NAME, setting the name of the specified blip.
 *
 * Hash: 0xBC38B49BCB83BC9B | Since: 323
 * @deprecated Use hud.endTextCommandSetBlipName(blip) instead
 */
export declare function endTextCommandSetBlipName(blip: number | Blip): void;
/**
 * No comment provided
 *
 * Hash: 0x23D69E0465570028 | Since: 323
 * @deprecated Use hud.beginTextCommandAddDirectlyToPreviousBriefs() instead
 */
export declare function beginTextCommandAddDirectlyToPreviousBriefs(): void;
/**
 * No comment provided
 *
 * Hash: 0xCFDBDF5AE59BA0F4 | Since: 323
 * @deprecated Use hud.endTextCommandAddDirectlyToPreviousBriefs() instead
 */
export declare function endTextCommandAddDirectlyToPreviousBriefs(): void;
/**
 * clears a print text command with this text
 *
 * Hash: 0xE124FA80A759019C | Since: 323
 * @deprecated Use hud.beginTextCommandClearPrint(text) instead
 */
export declare function beginTextCommandClearPrint(text: string): void;
/**
 * No comment provided
 *
 * Hash: 0xFCC75460ABA29378 | Since: 323
 * @deprecated Use hud.endTextCommandClearPrint() instead
 */
export declare function endTextCommandClearPrint(): void;
/**
 * No comment provided
 *
 * Hash: 0x8F9EE5687F8EECCD | Since: 323
 * @deprecated Use hud.beginTextCommandOverrideButtonText(gxtEntry) instead
 */
export declare function beginTextCommandOverrideButtonText(gxtEntry: string): void;
/**
 * No comment provided
 *
 * Hash: 0xA86911979638106F | Since: 323
 * @deprecated Use hud.endTextCommandOverrideButtonText() instead
 */
export declare function endTextCommandOverrideButtonText(): void;
/**
 * No comment provided
 *
 * Hash: 0x03B504CF259931BC | Since: 323
 * @deprecated Use hud.addTextComponentInteger(value) instead
 */
export declare function addTextComponentInteger(value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE7DCB5B874BCD96E | Since: 323
 * @deprecated Use hud.addTextComponentFloat(value, decimalPlaces) instead
 */
export declare function addTextComponentFloat(value: number, decimalPlaces: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC63CD5D2920ACBE7 | Since: 323
 * @deprecated Use hud.addTextComponentSubstringTextLabel(labelName) instead
 */
export declare function addTextComponentSubstringTextLabel(labelName: string): void;
/**
 * It adds the localized text of the specified GXT entry name. Eg. if the argument is GET_HASH_KEY("ES_HELP"), adds "Continue". Just uses a text labels hash key
 *
 * Hash: 0x17299B63C7683A2B | Since: 323
 * @deprecated Use hud.addTextComponentSubstringTextLabelHashKey(gxtEntryHash) instead
 */
export declare function addTextComponentSubstringTextLabelHashKey(gxtEntryHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x80EAD8E2E1D5D52E | Since: 323
 * @deprecated Use hud.addTextComponentSubstringBlipName(blip) instead
 */
export declare function addTextComponentSubstringBlipName(blip: number | Blip): void;
/**
 * No comment provided
 *
 * Hash: 0x6C188BE134E074AA | Since: 323
 * @deprecated Use hud.addTextComponentSubstringPlayerName(text) instead
 */
export declare function addTextComponentSubstringPlayerName(text: string): void;
/**
 * Adds a timer (e.g. "00:00:00:000"). The appearance of the timer depends on the flags, which needs more research.
 *
 * Hash: 0x1115F16B8AB9E8BF | Since: 323
 * @deprecated Use hud.addTextComponentSubstringTime(timestamp, flags) instead
 */
export declare function addTextComponentSubstringTime(timestamp: number, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0E4C749FF9DE9CC4 | Since: 323
 * @deprecated Use hud.addTextComponentFormattedInteger(value, commaSeparated) instead
 */
export declare function addTextComponentFormattedInteger(value: number, commaSeparated: boolean): void;
/**
 * p1 was always -1
 *
 * Hash: 0x761B77454205A61D | Since: 323
 * @deprecated Use hud.addTextComponentSubstringPhoneNumber() instead
 */
export declare function addTextComponentSubstringPhoneNumber(): void;
/**
 * This native (along with ADD_TEXT_COMPONENT_SUBSTRING_KEYBOARD_DISPLAY and ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME) do not actually filter anything. They simply add the provided text (as of 944)
 *
 * Hash: 0x94CF4AC034C9C986 | Since: 323
 * @deprecated Use hud.addTextComponentSubstringWebsite(website) instead
 */
export declare function addTextComponentSubstringWebsite(website: string): void;
/**
 * No comment provided
 *
 * Hash: 0x5F68520888E69014 | Since: 323
 * @deprecated Use hud.addTextComponentSubstringKeyboardDisplay(_string) instead
 */
export declare function addTextComponentSubstringKeyboardDisplay(_string: string): void;
/**
 * No comment provided
 *
 * Hash: 0x39BBF623FC803EAC | Since: 323
 * @deprecated Use hud.setColourOfNextTextComponent(hudColor) instead
 */
export declare function setColourOfNextTextComponent(hudColor: number): void;
/**
 * Returns a substring of a specified length starting at a specified position.
 *
 * Example:
 * // Get "STRING" text from "MY_STRING"
 * `subStr = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME("MY_STRING", 3, 6);`
 *
 * Hash: 0x169BD9382084C8C0 | Since: 323
 * @deprecated Use hud.getCharacterFromAudioConversationFilename(text, position, length) instead
 */
export declare function getCharacterFromAudioConversationFilename(text: string, position: number, length: number): string;
/**
 * Returns a substring of a specified length starting at a specified position. The result is guaranteed not to exceed the specified max length.
 *
 * NOTE: The 'maxLength' parameter might actually be the size of the buffer that is returned. More research is needed. -CL69
 *
 * Example:
 * // Condensed example of how Rockstar uses this function
 * `strLen = HUD::GET_LENGTH_OF_LITERAL_STRING(MISC::GET_ONSCREEN_KEYBOARD_RESULT());`
 * `subStr = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_WITH_BYTE_LIMIT(MISC::GET_ONSCREEN_KEYBOARD_RESULT(), 0, strLen, 63);`
 *
 * --
 *
 * "fm_race_creator.ysc", line 85115:
 * // parameters modified for clarity
 * BOOL sub_8e5aa(char *text, int length) {
 * for (i = 0; i <= (length - 2); i += 1) {
 * `if (!MISC::ARE_STRINGS_EQUAL(HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_WITH_BYTE_LIMIT(text, i, i + 1, 1), " ")) {`
 * return FALSE;
 * }
 * }
 * return TRUE;
 * }
 *
 * Hash: 0xB2798643312205C5 | Since: 323
 * @deprecated Use hud.getCharacterFromAudioConversationFilenameWithByteLimit(text, position, length, maxLength) instead
 */
export declare function getCharacterFromAudioConversationFilenameWithByteLimit(text: string, position: number, length: number, maxLength: number): string;
/**
 * Returns a substring that is between two specified positions. The length of the string will be calculated using (endPosition - startPosition).
 *
 * Example:
 * // Get "STRING" text from "MY_STRING"
 * `subStr = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_BYTES("MY_STRING", 3, 9);`
 * // Overflows are possibly replaced with underscores (needs verification)
 * `subStr = HUD::GET_CHARACTER_FROM_AUDIO_CONVERSATION_FILENAME_BYTES("MY_STRING", 3, 10); // "STRING_"?`
 *
 * Hash: 0xCE94AEBA5D82908A | Since: 323
 * @deprecated Use hud.getCharacterFromAudioConversationFilenameBytes(text, startPosition, endPosition) instead
 */
export declare function getCharacterFromAudioConversationFilenameBytes(text: string, startPosition: number, endPosition: number): string;
/**
 * `Gets a localized string literal from a label name. Can be used for output of e.g. VEHICLE::GET_LIVERY_NAME. To check if a GXT label can be localized with this, HUD::DOES_TEXT_LABEL_EXIST can be used.`
 *
 * Hash: 0x7B5280EBA9840C72 | Since: 323
 * @deprecated Use hud.getFilenameForAudioConversation(labelName) instead
 */
export declare function getFilenameForAudioConversation(labelName: string): string;
/**
 * No comment provided
 *
 * Hash: 0xCC33FA791322B9D9 | Since: 323
 * @deprecated Use hud.clearPrints() instead
 */
export declare function clearPrints(): void;
/**
 * No comment provided
 *
 * Hash: 0x9D292F73ADBD9313 | Since: 323
 * @deprecated Use hud.clearBrief() instead
 */
export declare function clearBrief(): void;
/**
 * No comment provided
 *
 * Hash: 0x6178F68A87A4D3A0 | Since: 323
 * @deprecated Use hud.clearAllHelpMessages() instead
 */
export declare function clearAllHelpMessages(): void;
/**
 * p0: found arguments in the b617d scripts: https://pastebin.com/X5akCN7z
 *
 * Hash: 0xCF708001E1E536DD | Since: 323
 * @deprecated Use hud.clearThisPrint() instead
 */
export declare function clearThisPrint(): void;
/**
 * No comment provided
 *
 * Hash: 0x2CEA2839313C09AC | Since: 323
 * @deprecated Use hud.clearSmallPrints() instead
 */
export declare function clearSmallPrints(): void;
/**
 * No comment provided
 *
 * Hash: 0x1C7302E725259789 | Since: 323
 * @deprecated Use hud.doesTextBlockExist(gxt) instead
 */
export declare function doesTextBlockExist(gxt: string): boolean;
/**
 * Request a gxt into the passed slot.
 *
 * Hash: 0x71A78003C8E71424 | Since: 323
 * @deprecated Use hud.requestAdditionalText(gxt, slot) instead
 */
export declare function requestAdditionalText(gxt: string, slot: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6009F9F1AE90D8A6 | Since: 323
 * @deprecated Use hud.requestAdditionalTextForDlc(gxt, slot) instead
 */
export declare function requestAdditionalTextForDlc(gxt: string, slot: number): void;
/**
 * No comment provided
 *
 * Hash: 0x02245FE4BED318B8 | Since: 323
 * @deprecated Use hud.hasAdditionalTextLoaded(slot) instead
 */
export declare function hasAdditionalTextLoaded(slot: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2A179DF17CCF04CD | Since: 323
 * @deprecated Use hud.clearAdditionalText() instead
 */
export declare function clearAdditionalText(): void;
/**
 * No comment provided
 *
 * Hash: 0x8B6817B71B85EBF0 | Since: 323
 * @deprecated Use hud.isStreamingAdditionalText() instead
 */
export declare function isStreamingAdditionalText(): boolean;
/**
 * Checks if the specified gxt has loaded into the passed slot.
 *
 * Hash: 0xADBF060E2B30C5BC | Since: 323
 * @deprecated Use hud.hasThisAdditionalTextLoaded(gxt, slot) instead
 */
export declare function hasThisAdditionalTextLoaded(gxt: string, slot: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7984C03AA5CC2F41 | Since: 323
 * @deprecated Use hud.isMessageBeingDisplayed() instead
 */
export declare function isMessageBeingDisplayed(): boolean;
/**
 * Checks if the passed gxt name exists in the game files.
 *
 * Hash: 0xAC09CA973C564252 | Since: 323
 * @deprecated Use hud.doesTextLabelExist(gxt) instead
 */
export declare function doesTextLabelExist(gxt: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x98C3CF913D895111 | Since: 505
 * @deprecated Use hud.getFirstNCharactersOfLiteralString(_string, length) instead
 */
export declare function getFirstNCharactersOfLiteralString(_string: string, length: number): string;
/**
 * Returns the string length of the string from the gxt string .
 *
 * Hash: 0x801BD273D3A23F74 | Since: 323
 * @deprecated Use hud.getLengthOfStringWithThisTextLabel(gxt) instead
 */
export declare function getLengthOfStringWithThisTextLabel(gxt: string): number;
/**
 * Returns the length of the string passed (much like strlen).
 *
 * Hash: 0xF030907CCBB8A9FD | Since: 323
 * @deprecated Use hud.getLengthOfLiteralString(_string) instead
 */
export declare function getLengthOfLiteralString(_string: string): number;
/**
 * No comment provided
 *
 * Hash: 0x43E4111189E54F0E | Since: 323
 * @deprecated Use hud.getLengthOfLiteralStringInBytes(_string) instead
 */
export declare function getLengthOfLiteralStringInBytes(_string: string): number;
/**
 * This functions converts the hash of a street name into a readable string.
 *
 * `For how to get the hashes, see PATHFIND::GET_STREET_NAME_AT_COORD.`
 *
 * Hash: 0xD0EF8A959B8A4CB9 | Since: 323
 * @deprecated Use hud.getStreetNameFromHashKey(hash) instead
 */
export declare function getStreetNameFromHashKey(hash: number | string): string;
/**
 * No comment provided
 *
 * Hash: 0x1930DFA731813EC4 | Since: 323
 * @deprecated Use hud.isPreferenceSwitchedOn() instead
 */
export declare function isHudPreferenceSwitchedOn(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9EB6522EA68F22FE | Since: 323
 * @deprecated Use hud.isRadarPreferenceSwitchedOn() instead
 */
export declare function isRadarPreferenceSwitchedOn(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAD6DACA4BA53E0A4 | Since: 323
 * @deprecated Use hud.isSubtitlePreferenceSwitchedOn() instead
 */
export declare function isSubtitlePreferenceSwitchedOn(): boolean;
/**
 * If Hud should be displayed
 *
 * Hash: 0xA6294919E56FF02A | Since: 323
 * @deprecated Use hud.display(toggle) instead
 */
export declare function displayHud(toggle: boolean): void;
/**
 * Enables drawing some hud components, such as help labels, this frame, when the player is dead.
 *
 * Hash: 0x7669F9E39DC17063 | Since: 323
 * @deprecated Use hud.displayWhenNotInStateOfPlayThisFrame() instead
 */
export declare function displayHudWhenNotInStateOfPlayThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x402F9ED62087E898 | Since: 323
 * @deprecated Use hud.displayWhenPausedThisFrame() instead
 */
export declare function displayHudWhenPausedThisFrame(): void;
/**
 * If Minimap / Radar should be displayed.
 *
 * Hash: 0xA0EBB943C300E693 | Since: 323
 * @deprecated Use hud.displayRadar(toggle) instead
 */
export declare function displayRadar(toggle: boolean): void;
/**
 * Setter for GET_FAKE_SPECTATOR_MODE
 *
 * Hash: 0xCD74233600C4EA6B | Since: 505
 * @deprecated Use hud.setFakeSpectatorMode(toggle) instead
 */
export declare function setFakeSpectatorMode(toggle: boolean): void;
/**
 * Getter for SET_FAKE_SPECTATOR_MODE
 *
 * Hash: 0xC2D2AD9EAAE265B8 | Since: 505
 * @deprecated Use hud.getFakeSpectatorMode() instead
 */
export declare function getFakeSpectatorMode(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA86478C6958735C5 | Since: 323
 * @deprecated Use hud.isHidden() instead
 */
export declare function isHudHidden(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x157F93B036700462 | Since: 323
 * @deprecated Use hud.isRadarHidden() instead
 */
export declare function isRadarHidden(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAF754F20EB5CD51A | Since: 323
 * @deprecated Use hud.isMinimapRendering() instead
 */
export declare function isMinimapRendering(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0C698D8F099174C7 | Since: 1180
 * @deprecated Use hud.useVehicleTargetingReticule() instead
 */
export declare function useVehicleTargetingReticule(): void;
/**
 * No comment provided
 *
 * Hash: 0x1BC0EA2912708625 | Since: 3095
 * @deprecated Use hud.useVehicleTargetingReticuleOnVehicles(enable) instead
 */
export declare function useVehicleTargetingReticuleOnVehicles(enable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE4C3B169876D33D7 | Since: 1290
 * @deprecated Use hud.addValidVehicleHitHash() instead
 */
export declare function addValidVehicleHitHash(): void;
/**
 * No comment provided
 *
 * Hash: 0xEB81A3DADD503187 | Since: 1290
 * @deprecated Use hud.clearValidVehicleHitHashes() instead
 */
export declare function clearValidVehicleHitHashes(): void;
/**
 * Enable / disable showing route for the Blip-object.
 *
 * Hash: 0x4F7D8A9BFB0B43E9 | Since: 323
 * @deprecated Use hud.setBlipRoute(blip, enabled) instead
 */
export declare function setBlipRoute(blip: number | Blip, enabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD12882D3FF82BF11 | Since: 877
 * @deprecated Use hud.clearAllBlipRoutes() instead
 */
export declare function clearAllBlipRoutes(): void;
/**
 * No comment provided
 *
 * Hash: 0x837155CD2F63DA09 | Since: 323
 * @deprecated Use hud.setBlipRouteColour(blip, colour) instead
 */
export declare function setBlipRouteColour(blip: number | Blip, colour: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2790F4B17D098E26 | Since: 573
 * @deprecated Use hud.setForceShowGps(toggle) instead
 */
export declare function setForceShowGps(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6CDD58146A436083 | Since: 573
 * @deprecated Use hud.setUseSetDestinationInPauseMap(toggle) instead
 */
export declare function setUseSetDestinationInPauseMap(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD1942374085C8469 | Since: 505
 * @deprecated Use hud.setBlockWantedFlash(disabled) instead
 */
export declare function setBlockWantedFlash(disabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x60296AF4BA14ABC5 | Since: 323
 * @deprecated Use hud.addNextMessageToPreviousBriefs() instead
 */
export declare function addNextMessageToPreviousBriefs(): void;
/**
 * No comment provided
 *
 * Hash: 0x57D760D55F54E071 | Since: 323
 * @deprecated Use hud.forceNextMessageToPreviousBriefsList() instead
 */
export declare function forceNextMessageToPreviousBriefsList(): void;
/**
 * zoom ranges from 0 to 90f in R* Scripts
 *
 * Hash: 0xBD12C5EEE184C337 | Since: 323
 * @deprecated Use hud.setRadarZoomPrecise(zoom) instead
 */
export declare function setRadarZoomPrecise(zoom: number): void;
/**
 * zoomLevel ranges from 0 to 1400 in R* Scripts
 *
 * Hash: 0x096EF57A0C999BBA | Since: 323
 * @deprecated Use hud.setRadarZoom(zoomLevel) instead
 */
export declare function setRadarZoom(zoomLevel: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF98E4B3E56AFC7B1 | Since: 323
 * @deprecated Use hud.setRadarZoomToBlip(blip, zoom) instead
 */
export declare function setRadarZoomToBlip(blip: number | Blip, zoom: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCB7CC0D58405AD41 | Since: 323
 * @deprecated Use hud.setRadarZoomToDistance(zoom) instead
 */
export declare function setRadarZoomToDistance(zoom: number): void;
/**
 * Does nothing (it's a nullsub).
 *
 * Hash: 0xD2049635DEB9C375 | Since: 323
 * @deprecated Use hud.updateRadarZoomToBlip() instead
 */
export declare function updateRadarZoomToBlip(): void;
/**
 * No comment provided
 *
 * Hash: 0x7C9C91AB74A0360F | Since: 323
 * @deprecated Use hud.getColour(hudColorIndex) instead
 */
export declare function getHudColour(hudColorIndex: number): [number, number, number, number];
/**
 * Sets the color of HUD_COLOUR_SCRIPT_VARIABLE
 *
 * Hash: 0xD68A5FF8A3A89874 | Since: 323
 * @deprecated Use hud.setScriptVariableColour(r, g, b, a) instead
 */
export declare function setScriptVariableHudColour(r: number, g: number, b: number, a: number): void;
/**
 * Sets the color of HUD_COLOUR_SCRIPT_VARIABLE_2
 *
 * Hash: 0x16A304E6CB2BFAB9 | Since: 323
 * @deprecated Use hud.setSecondScriptVariableColour(r, g, b, a) instead
 */
export declare function setSecondScriptVariableHudColour(r: number, g: number, b: number, a: number): void;
/**
 * makes hudColorIndex2 color into hudColorIndex color
 *
 * Hash: 0x1CCC708F0F850613 | Since: 323
 * @deprecated Use hud.replaceColour(hudColorIndex, hudColorIndex2) instead
 */
export declare function replaceHudColour(hudColorIndex: number, hudColorIndex2: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF314CF4F0211894E | Since: 323
 * @deprecated Use hud.replaceColourWithRgba(hudColorIndex, r, g, b, a) instead
 */
export declare function replaceHudColourWithRgba(hudColorIndex: number, r: number, g: number, b: number, a: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1DFEDD15019315A9 | Since: 1493
 * @deprecated Use hud.setAbilityBarVisibility(visible) instead
 */
export declare function setAbilityBarVisibility(visible: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x889329C80FE5963C | Since: 1868
 * @deprecated Use hud.setAllowAbilityBar(toggle) instead
 */
export declare function setAllowAbilityBar(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x02CFBA0C9E9275CE | Since: 323
 * @deprecated Use hud.flashAbilityBar(millisecondsToFlash) instead
 */
export declare function flashAbilityBar(millisecondsToFlash: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9969599CCFF5D85E | Since: 323
 * @deprecated Use hud.setAbilityBarValue() instead
 */
export declare function setAbilityBarValue(): void;
/**
 * No comment provided
 *
 * Hash: 0xA18AFB39081B6A1F | Since: 323
 * @deprecated Use hud.flashWantedDisplay() instead
 */
export declare function flashWantedDisplay(): void;
/**
 * No comment provided
 *
 * Hash: 0xBA8D65C1C65702E5 | Since: 323
 * @deprecated Use hud.forceOffWantedStarFlash(toggle) instead
 */
export declare function forceOffWantedStarFlash(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2ACCB195F3CCD9DE | Since: 2545
 * @deprecated Use hud.setCustomMpColor(hudColorId) instead
 */
export declare function setCustomMpHudColor(hudColorId: number): void;
/**
 * This gets the height of the FONT and not the total text. You need to get the number of lines your text uses, and get the height of a newline (I'm using a smaller value) to get the total text height.
 *
 * Hash: 0xDB88A37483346780 | Since: 323
 * @deprecated Use hud.getRenderedCharacterHeight(size, font) instead
 */
export declare function getRenderedCharacterHeight(size: number, font: number): number;
/**
 * Size range : 0F to 1.0F
 * p0 is unknown and doesn't seem to have an effect, yet in the game scripts it changes to 1.0F sometimes.
 *
 * Hash: 0x07C837F9A01C34C9 | Since: 323
 * @deprecated Use hud.setTextScale(scale, size) instead
 */
export declare function setTextScale(scale: number, size: number): void;
/**
 * colors you input not same as you think?
 * A: for some reason its R B G A
 *
 * Hash: 0xBE6B23FFA53FB442 | Since: 323
 * @deprecated Use hud.setTextColour(red, green, blue, alpha) instead
 */
export declare function setTextColour(red: number, green: number, blue: number, alpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC02F4DBFB51D988B | Since: 323
 * @deprecated Use hud.setTextCentre(align) instead
 */
export declare function setTextCentre(align: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6B3C4650BC8BEE47 | Since: 323
 * @deprecated Use hud.setTextRightJustify(toggle) instead
 */
export declare function setTextRightJustify(toggle: boolean): void;
/**
 * Types -
 * 0: Center-Justify
 * 1: Left-Justify
 * 2: Right-Justify
 *
 * Right-Justify requires SET_TEXT_WRAP, otherwise it will draw to the far right of the screen
 *
 * Hash: 0x4E096588B13FFECA | Since: 323
 * @deprecated Use hud.setTextJustification(justifyType) instead
 */
export declare function setTextJustification(justifyType: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9F4624F76E6953D1 | Since: 3095
 * @deprecated Use hud.setTextLineHeightMult(lineHeightMult) instead
 */
export declare function setTextLineHeightMult(lineHeightMult: number): void;
/**
 * It sets the text in a specified box and wraps the text if it exceeds the boundries. Both values are for X axis. Useful when positioning text set to center or aligned to the right.
 *
 * start - left boundry on screen position (0.0 - 1.0)
 * end - right boundry on screen position (0.0 - 1.0)
 *
 * Hash: 0x63145D9C883A1A70 | Since: 323
 * @deprecated Use hud.setTextWrap(start, end) instead
 */
export declare function setTextWrap(start: number, end: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA50ABC31E3CDFAFF | Since: 323
 * @deprecated Use hud.setTextLeading() instead
 */
export declare function setTextLeading(): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0x038C1F517D7FDCF8 | Since: 323
 * @deprecated Use hud.setTextProportional() instead
 */
export declare function setTextProportional(): void;
/**
 * fonts that mess up your text where made for number values/misc stuff
 *
 * Hash: 0x66E0276CC5F6B9DA | Since: 323
 * @deprecated Use hud.setTextFont(fontType) instead
 */
export declare function setTextFont(fontType: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1CA3E9EAC9D93E5E | Since: 323
 * @deprecated Use hud.setTextDropShadow() instead
 */
export declare function setTextDropShadow(): void;
/**
 * distance - shadow distance in pixels, both horizontal and vertical
 * r, g, b, a - color
 *
 * Hash: 0x465C84BC39F1C351 | Since: 323
 * @deprecated Use hud.setTextDropshadow(distance, r, g, b, a) instead
 */
export declare function setTextDropshadow(distance: number, r: number, g: number, b: number, a: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2513DFB0FB8400FE | Since: 323
 * @deprecated Use hud.setTextOutline() instead
 */
export declare function setTextOutline(): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0x441603240D202FA6 | Since: 323
 * @deprecated Use hud.setTextEdge(r, g, b, a) instead
 */
export declare function setTextEdge(r: number, g: number, b: number, a: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5F15302936E07111 | Since: 323
 * @deprecated Use hud.setTextRenderId(renderId) instead
 */
export declare function setTextRenderId(renderId: number): void;
/**
 * This function is hard-coded to always return 1.
 *
 * Hash: 0x52F0982D7FD156B6 | Since: 323
 * @deprecated Use hud.getDefaultScriptRendertargetRenderId() instead
 */
export declare function getDefaultScriptRendertargetRenderId(): number;
/**
 * No comment provided
 *
 * Hash: 0x57D9C12635E25CE3 | Since: 323
 * @deprecated Use hud.registerNamedRendertarget(name) instead
 */
export declare function registerNamedRendertarget(name: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x78DCDC15C9F116B4 | Since: 323
 * @deprecated Use hud.isNamedRendertargetRegistered(name) instead
 */
export declare function isNamedRendertargetRegistered(name: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE9F6FFE837354DD4 | Since: 323
 * @deprecated Use hud.releaseNamedRendertarget(name) instead
 */
export declare function releaseNamedRendertarget(name: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF6C09E276AEB3F2D | Since: 323
 * @deprecated Use hud.linkNamedRendertarget(modelHash) instead
 */
export declare function linkNamedRendertarget(modelHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x1A6478B61C6BDC3B | Since: 323
 * @deprecated Use hud.getNamedRendertargetRenderId(name) instead
 */
export declare function getNamedRendertargetRenderId(name: string): number;
/**
 * No comment provided
 *
 * Hash: 0x113750538FA31298 | Since: 323
 * @deprecated Use hud.isNamedRendertargetLinked(modelHash) instead
 */
export declare function isNamedRendertargetLinked(modelHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8DFCED7A656F8802 | Since: 323
 * @deprecated Use hud.clearHelp(toggle) instead
 */
export declare function clearHelp(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDAD37F45428801AE | Since: 323
 * @deprecated Use hud.isHelpMessageOnScreen() instead
 */
export declare function isHelpMessageOnScreen(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x214CD562A939246A | Since: 323
 * @deprecated Use hud.hasScriptHiddenHelpThisFrame() instead
 */
export declare function hasScriptHiddenHelpThisFrame(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4D79439A6B55AC67 | Since: 323
 * @deprecated Use hud.isHelpMessageBeingDisplayed() instead
 */
export declare function isHelpMessageBeingDisplayed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x327EDEEEAC55C369 | Since: 323
 * @deprecated Use hud.isHelpMessageFadingOut() instead
 */
export declare function isHelpMessageFadingOut(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB9C362BABECDDC7A | Since: 463
 * @deprecated Use hud.setHelpMessageStyle(style, hudColor, alpha) instead
 */
export declare function setHelpMessageStyle(style: number, hudColor: number, alpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4A9923385BDB9DAD | Since: 323
 * @deprecated Use hud.getStandardBlipEnumId() instead
 */
export declare function getStandardBlipEnumId(): number;
/**
 * No comment provided
 *
 * Hash: 0x186E5D252FA50E7D | Since: 323
 * @deprecated Use hud.getWaypointBlipEnumId() instead
 */
export declare function getWaypointBlipEnumId(): number;
/**
 * No comment provided
 *
 * Hash: 0x9A3FF3DE163034E8 | Since: 323
 * @deprecated Use hud.getNumberOfActiveBlips() instead
 */
export declare function getNumberOfActiveBlips(): number;
/**
 * No comment provided
 *
 * Hash: 0x14F96AA50D6FBEA7 | Since: 323
 * @deprecated Use hud.getNextBlipInfoId(blipSprite) instead
 */
export declare function getNextBlipInfoId(blipSprite: number): number;
/**
 * No comment provided
 *
 * Hash: 0x1BEDE233E6CD2A1F | Since: 323
 * @deprecated Use hud.getFirstBlipInfoId(blipSprite) instead
 */
export declare function getFirstBlipInfoId(blipSprite: number): number;
/**
 * No comment provided
 *
 * Hash: 0xD484BF71050CA1EE | Since: 1180
 * @deprecated Use hud.getClosestBlipInfoId(blipSprite) instead
 */
export declare function getClosestBlipInfoId(blipSprite: number): number;
/**
 * No comment provided
 *
 * Hash: 0xFA7C7F0AADF25D09 | Since: 323
 * @deprecated Use hud.getBlipInfoIdCoord(blip) instead
 */
export declare function getBlipInfoIdCoord(blip: number | Blip): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x1E314167F701DC3B | Since: 323
 * @deprecated Use hud.getBlipInfoIdDisplay(blip) instead
 */
export declare function getBlipInfoIdDisplay(blip: number | Blip): number;
/**
 * Returns a value based on what the blip is attached to
 * 1 - Vehicle
 * 2 - Ped
 * 3 - Object
 * 4 - Coord
 * 5 - unk
 * 6 - Pickup
 * 7 - Radius
 *
 * Hash: 0xBE9B0959FFD0779B | Since: 323
 * @deprecated Use hud.getBlipInfoIdType(blip) instead
 */
export declare function getBlipInfoIdType(blip: number | Blip): number;
/**
 * No comment provided
 *
 * Hash: 0x4BA4E2553AFEDC2C | Since: 323
 * @deprecated Use hud.getBlipInfoIdEntityIndex(blip) instead
 */
export declare function getBlipInfoIdEntityIndex(blip: number | Blip): number;
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0x9B6786E4C03DD382 | Since: 323
 * @deprecated Use hud.getBlipInfoIdPickupIndex(blip) instead
 */
export declare function getBlipInfoIdPickupIndex(blip: number | Blip): any;
/**
 * Returns the Blip handle of given Entity.
 *
 * Hash: 0xBC8DBDCA2436F7E8 | Since: 323
 * @deprecated Use hud.getBlipFromEntity(entity) instead
 */
export declare function getBlipFromEntity(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x46818D79B1F7499A | Since: 323
 * @deprecated Use hud.addBlipForRadius(pos, radius) instead
 */
export declare function addBlipForRadius(pos: Vector3, radius: number): number;
/**
 * Adds a rectangular blip for the specified coordinates/area.
 *
 * It is recommended to use SET_BLIP_ROTATION and SET_BLIP_COLOUR to make the blip not rotate along with the camera.
 *
 * By default, the blip will show as a _regular_ blip with the specified color/sprite if it is outside of the minimap view.
 *
 * Example image:
 * minimap https://w.wew.wtf/pdcjig.png
 * big map https://w.wew.wtf/zgcjcm.png
 *
 * (Native name is _likely_ to actually be ADD_BLIP_FOR_AREA, but due to the usual reasons this can't be confirmed)
 *
 * Hash: 0xCE5D0E5E315DB238 | Since: 463
 * @deprecated Use hud.addBlipForArea(pos, width, height) instead
 */
export declare function addBlipForArea(pos: Vector3, width: number, height: number): number;
/**
 * Returns red ( default ) blip attached to entity.
 *
 * Example:
 * Blip blip; //Put this outside your case or option
 * `blip = HUD::ADD_BLIP_FOR_ENTITY(YourPedOrBodyguardName);`
 * `HUD::SET_BLIP_AS_FRIENDLY(blip, true);`
 *
 * Hash: 0x5CDE92C702A8FCE7 | Since: 323
 * @deprecated Use hud.addBlipForEntity(entity) instead
 */
export declare function addBlipForEntity(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xBE339365C863BD36 | Since: 323
 * @deprecated Use hud.addBlipForPickup(pickup) instead
 */
export declare function addBlipForPickup(pickup: any): number;
/**
 * Creates an orange ( default ) Blip-object. Returns a Blip-object which can then be modified.
 *
 * Hash: 0x5A039BB0BCA604B6 | Since: 323
 * @deprecated Use hud.addBlipForCoord(pos) instead
 */
export declare function addBlipForCoord(pos: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0x72DD432F3CDFC0EE | Since: 323
 * @deprecated Use hud.triggerSonarBlip(pos, radius) instead
 */
export declare function triggerSonarBlip(pos: Vector3, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0x60734CC207C9833C | Since: 323
 * @deprecated Use hud.allowSonarBlips(toggle) instead
 */
export declare function allowSonarBlips(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xAE2AF67E9D9AF65D | Since: 323
 * @deprecated Use hud.setBlipCoords(blip, pos) instead
 */
export declare function setBlipCoords(blip: number | Blip, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x586AFE3FF72D996E | Since: 323
 * @deprecated Use hud.getBlipCoords(blip) instead
 */
export declare function getBlipCoords(blip: number | Blip): Vector3;
/**
 * Sets the displayed sprite for a specific blip..
 *
 * You may have your own list, but since dev-c didn't show it I was bored and started looking through scripts and functions to get a presumable almost positive list of a majority of blip IDs
 * https://pastebin.com/Bpj9Sfft
 *
 * Blips Images + IDs:
 * https://gtaxscripting.blogspot.com/2016/05/gta-v-blips-id-and-image.html
 *
 * Hash: 0xDF735600A4696DAF | Since: 323
 * @deprecated Use hud.setBlipSprite(blip, spriteId) instead
 */
export declare function setBlipSprite(blip: number | Blip, spriteId: number): void;
/**
 * Blips Images + IDs:
 * gtaxscripting.blogspot.com/2016/05/gta-v-blips-id-and-image.html
 *
 * Hash: 0x1FC877464A04FC4F | Since: 323
 * @deprecated Use hud.getBlipSprite(blip) instead
 */
export declare function getBlipSprite(blip: number | Blip): number;
/**
 * No comment provided
 *
 * Hash: 0x9FCB3CBFB3EAD69A | Since: 1734
 * @deprecated Use hud.setCopBlipSprite() instead
 */
export declare function setCopBlipSprite(): void;
/**
 * No comment provided
 *
 * Hash: 0xB7B873520C84C118 | Since: 1734
 * @deprecated Use hud.setCopBlipSpriteAsStandard() instead
 */
export declare function setCopBlipSpriteAsStandard(): void;
/**
 * Doesn't work if the label text of gxtEntry is >= 80.
 *
 * Hash: 0xEAA0FFE120D92784 | Since: 323
 * @deprecated Use hud.setBlipNameFromTextFile(blip, gxtEntry) instead
 */
export declare function setBlipNameFromTextFile(blip: number | Blip, gxtEntry: string): void;
/**
 * No comment provided
 *
 * Hash: 0x127DE7B20C60A6A3 | Since: 323
 * @deprecated Use hud.setBlipNameToPlayerName(blip, player) instead
 */
export declare function setBlipNameToPlayerName(blip: number | Blip, player: number | string | Player): void;
/**
 * Sets alpha-channel for blip color.
 *
 * Example:
 *
 * `Blip blip = HUD::ADD_BLIP_FOR_ENTITY(entity);`
 * `HUD::SET_BLIP_COLOUR(blip , 3);`
 * `HUD::SET_BLIP_ALPHA(blip , 64);`
 *
 *
 * Hash: 0x45FF974EEE1C8734 | Since: 323
 * @deprecated Use hud.setBlipAlpha(blip, alpha) instead
 */
export declare function setBlipAlpha(blip: number | Blip, alpha: number): void;
/**
 * No comment provided
 *
 * Hash: 0x970F608F0EE6C885 | Since: 323
 * @deprecated Use hud.getBlipAlpha(blip) instead
 */
export declare function getBlipAlpha(blip: number | Blip): number;
/**
 * No comment provided
 *
 * Hash: 0x2AEE8F8390D2298C | Since: 323
 * @deprecated Use hud.setBlipFade(blip, opacity, duration) instead
 */
export declare function setBlipFade(blip: number | Blip, opacity: number, duration: number): void;
/**
 * Returns -1, 0, +1, depending on if the blip is fading out, doing nothing, or fading in respectively.
 *
 * Hash: 0x2C173AE2BDB9385E | Since: 463
 * @deprecated Use hud.getBlipFadeDirection(blip) instead
 */
export declare function getBlipFadeDirection(blip: number | Blip): number;
/**
 * After some testing, looks like you need to use CEIL() on the rotation (vehicle/ped heading) before using it there.
 *
 * Hash: 0xF87683CDF73C3F6E | Since: 323
 * @deprecated Use hud.setBlipRotation(blip, rotation) instead
 */
export declare function setBlipRotation(blip: number | Blip, rotation: number): void;
/**
 * Does not require whole number/integer rotations.
 *
 * Hash: 0xA8B6AFDAC320AC87 | Since: 877
 * @deprecated Use hud.setBlipRotationWithFloat(blip, heading) instead
 */
export declare function setBlipRotationWithFloat(blip: number | Blip, heading: number): void;
/**
 * No comment provided
 *
 * Hash: 0x003E92BA477F9D7F | Since: 2060
 * @deprecated Use hud.getBlipRotation(blip) instead
 */
export declare function getBlipRotation(blip: number | Blip): number;
/**
 * Adds up after viewing multiple R* scripts. I believe that the duration is in miliseconds.
 *
 * Hash: 0xD3CD6FD297AE87CC | Since: 323
 * @deprecated Use hud.setBlipFlashTimer(blip, duration) instead
 */
export declare function setBlipFlashTimer(blip: number | Blip, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAA51DB313C010A7E | Since: 323
 * @deprecated Use hud.setBlipFlashInterval(blip) instead
 */
export declare function setBlipFlashInterval(blip: number | Blip): void;
/**
 * https://gtaforums.com/topic/864881-all-blip-color-ids-pictured/
 *
 * Hash: 0x03D7FB09E75D6B7E | Since: 323
 * @deprecated Use hud.setBlipColour(blip, color) instead
 */
export declare function setBlipColour(blip: number | Blip, color: number): void;
/**
 * Can be used to give blips any RGB colour with SET_BLIP_COLOUR(blip, 84).
 *
 * Hash: 0x14892474891E09EB | Since: 323
 * @deprecated Use hud.setBlipSecondaryColour(blip, r, g, b) instead
 */
export declare function setBlipSecondaryColour(blip: number | Blip, r: number, g: number, b: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDF729E8D20CF7327 | Since: 323
 * @deprecated Use hud.getBlipColour(blip) instead
 */
export declare function getBlipColour(blip: number | Blip): number;
/**
 * No comment provided
 *
 * Hash: 0x729B5F1EFBC0AAEE | Since: 323
 * @deprecated Use hud.getBlipHudColour(blip) instead
 */
export declare function getBlipHudColour(blip: number | Blip): number;
/**
 * No comment provided
 *
 * Hash: 0xDA5F8727EB75B926 | Since: 323
 * @deprecated Use hud.isBlipShortRange(blip) instead
 */
export declare function isBlipShortRange(blip: number | Blip): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE41CA53051197A27 | Since: 323
 * @deprecated Use hud.isBlipOnMinimap(blip) instead
 */
export declare function isBlipOnMinimap(blip: number | Blip): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDD2238F57B977751 | Since: 323
 * @deprecated Use hud.doesBlipHaveGpsRoute(blip) instead
 */
export declare function doesBlipHaveGpsRoute(blip: number | Blip): boolean;
/**
 * No comment provided
 *
 * Hash: 0x54318C915D27E4CE | Since: 323
 * @deprecated Use hud.setBlipHiddenOnLegend(blip, toggle) instead
 */
export declare function setBlipHiddenOnLegend(blip: number | Blip, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE2590BC29220CEBB | Since: 323
 * @deprecated Use hud.setBlipHighDetail(blip, toggle) instead
 */
export declare function setBlipHighDetail(blip: number | Blip, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x24AC0137444F9FD5 | Since: 323
 * @deprecated Use hud.setBlipAsMissionCreatorBlip(blip, toggle) instead
 */
export declare function setBlipAsMissionCreatorBlip(blip: number | Blip, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x26F49BF3381D933D | Since: 323
 * @deprecated Use hud.isMissionCreatorBlip(blip) instead
 */
export declare function isMissionCreatorBlip(blip: number | Blip): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5C90988E7C8E1AF4 | Since: 323
 * @deprecated Use hud.getNewSelectedMissionCreatorBlip() instead
 */
export declare function getNewSelectedMissionCreatorBlip(): number;
/**
 * No comment provided
 *
 * Hash: 0x4167EFE0527D706E | Since: 323
 * @deprecated Use hud.isHoveringOverMissionCreatorBlip() instead
 */
export declare function isHoveringOverMissionCreatorBlip(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF1A6C18B35BCADE6 | Since: 323
 * @deprecated Use hud.showStartMissionInstructionalButton(toggle) instead
 */
export declare function showStartMissionInstructionalButton(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC772A904CDE1186F | Since: 2545
 * @deprecated Use hud.showContactInstructionalButton(toggle) instead
 */
export declare function showContactInstructionalButton(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF6865E26067B708C | Since: 3407
 * @deprecated Use hud.showPurchaseInstructionalButton(toggle) instead
 */
export declare function showPurchaseInstructionalButton(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2916A928514C9827 | Since: 573
 * @deprecated Use hud.reloadMapMenu() instead
 */
export declare function reloadMapMenu(): void;
/**
 * No comment provided
 *
 * Hash: 0xB552929B85FC27EC | Since: 573
 * @deprecated Use hud.setBlipMarkerLongDistance() instead
 */
export declare function setBlipMarkerLongDistance(): void;
/**
 * No comment provided
 *
 * Hash: 0xB14552383D39CE3E | Since: 323
 * @deprecated Use hud.setBlipFlashes(blip, toggle) instead
 */
export declare function setBlipFlashes(blip: number | Blip, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2E8D9498C56DD0D1 | Since: 323
 * @deprecated Use hud.setBlipFlashesAlternate(blip, toggle) instead
 */
export declare function setBlipFlashesAlternate(blip: number | Blip, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA5E41FD83AD6CEF0 | Since: 323
 * @deprecated Use hud.isBlipFlashing(blip) instead
 */
export declare function isBlipFlashing(blip: number | Blip): boolean;
/**
 * Sets whether or not the specified blip should only be displayed when nearby, or on the minimap.
 *
 * Hash: 0xBE8BE4FE60E27B72 | Since: 323
 * @deprecated Use hud.setBlipAsShortRange(blip, toggle) instead
 */
export declare function setBlipAsShortRange(blip: number | Blip, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD38744167B2FA257 | Since: 323
 * @deprecated Use hud.setBlipScale(blip, scale) instead
 */
export declare function setBlipScale(blip: number | Blip, scale: number): void;
/**
 * See https://imgur.com/a/lLkEsMN
 *
 * Hash: 0xCD6524439909C979 | Since: 1734
 * @deprecated Use hud.setBlipScale2d(blip, xScale, yScale) instead
 */
export declare function setBlipScale2d(blip: number | Blip, xScale: number, yScale: number): void;
/**
 * See this topic for more details : gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-35?p=1069477935
 *
 * Hash: 0xAE9FC9EF6A9FAC79 | Since: 323
 * @deprecated Use hud.setBlipPriority(blip, priority) instead
 */
export declare function setBlipPriority(blip: number | Blip, priority: number): void;
/**
 * Display Id behaviours:
 * 0 = Doesn't show up, ever, anywhere.
 * 1 = Doesn't show up, ever, anywhere.
 * 2 = Shows on both main map and minimap. (Selectable on map)
 * 3 = Shows on main map only. (Selectable on map)
 * 4 = Shows on main map only. (Selectable on map)
 * 5 = Shows on minimap only.
 * 6 = Shows on both main map and minimap. (Selectable on map)
 * 7 = Doesn't show up, ever, anywhere.
 * 8 = Shows on both main map and minimap. (Not selectable on map)
 * 9 = Shows on minimap only.
 * 10 = Shows on both main map and minimap. (Not selectable on map)
 *
 * Anything higher than 10 seems to be exactly the same as 10.
 *
 * Hash: 0x9029B2F3DA924928 | Since: 323
 * @deprecated Use hud.setBlipDisplay(blip, displayId) instead
 */
export declare function setBlipDisplay(blip: number | Blip, displayId: number): void;
/**
 * Example: https://i.imgur.com/skY6vAJ.png
 *
 * Index:
 * 1 = No distance shown in legend
 * 2 = Distance shown in legend
 * 7 = "Other Players" category, also shows distance in legend
 * 10 = "Property" category
 * 11 = "Owned Property" category
 *
 * Any other value behaves like index = 1, index wraps around after 255
 * Blips with categories 7, 10 or 11 will all show under the specific categories listing in the map legend, regardless of sprite or name.
 * Legend entries:
 * 7 = Other Players (BLIP_OTHPLYR)
 * 10 = Property (BLIP_PROPCAT)
 * 11 = Owned Property (BLIP_APARTCAT)
 *
 * Category needs to be `7` in order for blip names to show on the expanded minimap when using DISPLAY_PLAYER_NAME_TAGS_ON_BLIPS.
 *
 * Hash: 0x234CDD44D996FD9A | Since: 323
 * @deprecated Use hud.setBlipCategory(blip, index) instead
 */
export declare function setBlipCategory(blip: number | Blip, index: number): void;
/**
 * In the C++ SDK, this seems not to work-- the blip isn't removed immediately. I use it for saving cars.
 *
 * E.g.:
 *
 * `Ped pped = PLAYER::PLAYER_PED_ID();`
 * `Vehicle v = PED::GET_VEHICLE_PED_IS_USING(pped);`
 * `Blip b = HUD::ADD_BLIP_FOR_ENTITY(v);`
 *
 * works fine.
 * But later attempting to delete it with:
 *
 * `Blip b = HUD::GET_BLIP_FROM_ENTITY(v);`
 * `if (HUD::DOES_BLIP_EXIST(b)) HUD::REMOVE_BLIP(&b);`
 *
 * doesn't work. And yes, doesn't work without the DOES_BLIP_EXIST check either. Also, if you attach multiple blips to the same thing (say, a vehicle), and that thing disappears, the blips randomly attach to other things (in my case, a vehicle).
 *
 * `Thus for me, HUD::REMOVE_BLIP(&b) only works if there's one blip, (in my case) the vehicle is marked as no longer needed, you drive away from it and it eventually despawns, AND there is only one blip attached to it. I never intentionally attach multiple blips but if the user saves the car, this adds a blip. Then if they delete it, it is supposed to remove the blip, but it doesn't. Then they can immediately save it again, causing another blip to re-appear.`
 * -------------
 *
 * Passing the address of the variable instead of the value works for me.
 * e.g.
 * `int blip = HUD::ADD_BLIP_FOR_ENTITY(ped);`
 * `HUD::REMOVE_BLIP(&blip);`
 *
 *
 * Remove blip will currently crash your game, just artificially remove the blip by setting the sprite to a id that is 'invisible'.
 *
 * Hash: 0x86A652570E5F25DD | Since: 323
 * @deprecated Use hud.removeBlip() instead
 */
export declare function removeBlip(blip: number | Blip): void;
/**
 * false for enemy
 * true for friendly
 *
 * Hash: 0x6F6F290102C02AB4 | Since: 323
 * @deprecated Use hud.setBlipAsFriendly(blip, toggle) instead
 */
export declare function setBlipAsFriendly(blip: number | Blip, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x742D6FD43115AF73 | Since: 323
 * @deprecated Use hud.pulseBlip(blip) instead
 */
export declare function pulseBlip(blip: number | Blip): void;
/**
 * No comment provided
 *
 * Hash: 0xA3C0B359DCB848B6 | Since: 323
 * @deprecated Use hud.showNumberOnBlip(blip, _number) instead
 */
export declare function showNumberOnBlip(blip: number | Blip, _number: number): void;
/**
 * No comment provided
 *
 * Hash: 0x532CFF637EF80148 | Since: 323
 * @deprecated Use hud.hideNumberOnBlip(blip) instead
 */
export declare function hideNumberOnBlip(blip: number | Blip): void;
/**
 * No comment provided
 *
 * Hash: 0x75A16C3DA34F1245 | Since: 323
 * @deprecated Use hud.showHeightOnBlip(blip, toggle) instead
 */
export declare function showHeightOnBlip(blip: number | Blip, toggle: boolean): void;
/**
 * Adds a green checkmark on top of a blip.
 *
 * Hash: 0x74513EA3E505181E | Since: 323
 * @deprecated Use hud.showTickOnBlip(blip, toggle) instead
 */
export declare function showTickOnBlip(blip: number | Blip, toggle: boolean): void;
/**
 * Adds a orange checkmark on top of a given blip handle: https://imgur.com/a/aw5OTMF
 * _SHOW_FRIEND_INDICATOR_ON_BLIP* - _SHOW_HEADING_INDICATOR_ON_BLIP*
 *
 * Hash: 0xCAC2031EBF79B1A8 | Since: 2699
 * @deprecated Use hud.showGoldTickOnBlip(blip, toggle) instead
 */
export declare function showGoldTickOnBlip(blip: number | Blip, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x19BD6E3C0E16A8FA | Since: 2802
 * @deprecated Use hud.showForSaleIconOnBlip(blip, toggle) instead
 */
export declare function showForSaleIconOnBlip(blip: number | Blip, toggle: boolean): void;
/**
 * Adds the GTA: Online player heading indicator to a blip.
 *
 * Hash: 0x5FBCA48327B914DF | Since: 323
 * @deprecated Use hud.showHeadingIndicatorOnBlip(blip, toggle) instead
 */
export declare function showHeadingIndicatorOnBlip(blip: number | Blip, toggle: boolean): void;
/**
 * Highlights a blip by a cyan color circle.
 *
 * Color can be changed with SET_BLIP_SECONDARY_COLOUR
 *
 * Hash: 0xB81656BC81FE24D1 | Since: 323
 * @deprecated Use hud.showOutlineIndicatorOnBlip(blip, toggle) instead
 */
export declare function showOutlineIndicatorOnBlip(blip: number | Blip, toggle: boolean): void;
/**
 * Highlights a blip by a half cyan circle on the right side of the blip. https://i.imgur.com/FrV9M4e.png
 * .Indicating that that player is a friend (in GTA:O). This color can not be changed.
 * To toggle the left side (crew member indicator) of the half circle around the blip, use: `SHOW_CREW_INDICATOR_ON_BLIP`
 *
 * Hash: 0x23C3EB807312F01A | Since: 323
 * @deprecated Use hud.showFriendIndicatorOnBlip(blip, toggle) instead
 */
export declare function showFriendIndicatorOnBlip(blip: number | Blip, toggle: boolean): void;
/**
 * Enables or disables the blue half circle https://i.imgur.com/iZes9Ec.png around the specified blip on the left side of the blip. This is used to indicate that the player is in your crew in GTA:O. Color is changeable by using `SET_BLIP_SECONDARY_COLOUR`.
 *
 * Hash: 0xDCFB5D4DB8BF367E | Since: 323
 * @deprecated Use hud.showCrewIndicatorOnBlip(blip, toggle) instead
 */
export declare function showCrewIndicatorOnBlip(blip: number | Blip, toggle: boolean): void;
/**
 * Must be toggled before being queued for animation
 *
 * Hash: 0xC4278F70131BAA6D | Since: 323
 * @deprecated Use hud.setBlipExtendedHeightThreshold(blip, toggle) instead
 */
export declare function setBlipExtendedHeightThreshold(blip: number | Blip, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x4B5B620C9B59ED34 | Since: 678
 * @deprecated Use hud.setBlipShortHeightThreshold() instead
 */
export declare function setBlipShortHeightThreshold(): void;
/**
 * No comment provided
 *
 * Hash: 0x2C9F302398E13141 | Since: 1103
 * @deprecated Use hud.setBlipUseHeightIndicatorOnEdge(blip) instead
 */
export declare function setBlipUseHeightIndicatorOnEdge(blip: number | Blip): void;
/**
 * Makes a blip go small when off the minimap.
 *
 * Hash: 0x2B6D467DAB714E8D | Since: 323
 * @deprecated Use hud.setBlipAsMinimalOnEdge(blip, toggle) instead
 */
export declare function setBlipAsMinimalOnEdge(blip: number | Blip, toggle: boolean): void;
/**
 * Enabling this on a radius blip will make it outline only. See https://cdn.discordapp.com/attachments/553235301632573459/575132227935928330/unknown.png
 *
 * Hash: 0x25615540D894B814 | Since: 323
 * @deprecated Use hud.setRadiusBlipEdge(blip, toggle) instead
 */
export declare function setRadiusBlipEdge(blip: number | Blip, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA6DB27D19ECBB7DA | Since: 323
 * @deprecated Use hud.doesBlipExist(blip) instead
 */
export declare function doesBlipExist(blip: number | Blip): boolean;
/**
 * This native removes the current waypoint from the map.
 *
 * Example:
 * C#:
 * Function.Call(Hash.SET_WAYPOINT_OFF);
 *
 * C++:
 * `HUD::SET_WAYPOINT_OFF();`
 *
 * Hash: 0xA7E4E2D361C2627F | Since: 323
 * @deprecated Use hud.setWaypointOff() instead
 */
export declare function setWaypointOff(): void;
/**
 * No comment provided
 *
 * Hash: 0xD8E694757BCEA8E9 | Since: 323
 * @deprecated Use hud.deleteWaypointsFromThisPlayer() instead
 */
export declare function deleteWaypointsFromThisPlayer(): void;
/**
 * No comment provided
 *
 * Hash: 0x81FA173F170560D1 | Since: 323
 * @deprecated Use hud.refreshWaypoint() instead
 */
export declare function refreshWaypoint(): void;
/**
 * No comment provided
 *
 * Hash: 0x1DD1F58F493F1DA5 | Since: 323
 * @deprecated Use hud.isWaypointActive() instead
 */
export declare function isWaypointActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFE43368D2AA4F2FC | Since: 323
 * @deprecated Use hud.setNewWaypoint(x, y) instead
 */
export declare function setNewWaypoint(x: number, y: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB203913733F27884 | Since: 323
 * @deprecated Use hud.setBlipBright(blip, toggle) instead
 */
export declare function setBlipBright(blip: number | Blip, toggle: boolean): void;
/**
 * As of b2189, the third parameter sets the color of the cone (before b2189 it was ignored). Note that it uses HUD colors, not blip colors.
 *
 * Hash: 0x13127EC3665E8EE1 | Since: 323
 * @deprecated Use hud.setBlipShowCone(blip, toggle, hudColorIndex) instead
 */
export declare function setBlipShowCone(blip: number | Blip, toggle: boolean, hudColorIndex: number): void;
/**
 * Interesting fact: A hash collision for this is RESET_JETPACK_MODEL_SETTINGS
 *
 * Hash: 0xC594B315EDF2D4AF | Since: 323
 * @deprecated Use hud.removeCopBlipFromPed(ped) instead
 */
export declare function removeCopBlipFromPed(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xF83D0FEBE75E62C9 | Since: 1290
 * @deprecated Use hud.setupFakeConeData(blip) instead
 */
export declare function setupFakeConeData(blip: number | Blip): void;
/**
 * No comment provided
 *
 * Hash: 0x35A3CD97B2C0A6D2 | Since: 1290
 * @deprecated Use hud.removeFakeConeData(blip) instead
 */
export declare function removeFakeConeData(blip: number | Blip): void;
/**
 * No comment provided
 *
 * Hash: 0x8410C5E0CD847B9D | Since: 1290
 * @deprecated Use hud.clearFakeConeArray() instead
 */
export declare function clearFakeConeArray(): void;
/**
 * Applies to new eBlipParams _BLIP_CHANGE_46* and _BLIP_CHANGE_47*
 *
 * Hash: 0x25D984CFB64ED6DE | Since: 3095
 * @deprecated Use hud.setBlipGpsRouteDisplayDistance(blip, blipChangeParam46, blipChangeParam47) instead
 */
export declare function setBlipGpsRouteDisplayDistance(blip: number | Blip, blipChangeParam46: number, blipChangeParam47: boolean): void;
/**
 * This native is used to colorize certain map components like the army base at the top of the map.
 * p2 appears to be always -1. If p2 is -1 then native wouldn't change the color. See https://gfycat.com/SkinnyPinkChupacabra
 *
 * Hash: 0x75A9A10948D1DEA6 | Since: 323
 * @deprecated Use hud.setMinimapComponent(componentId, toggle, overrideColor) instead
 */
export declare function setMinimapComponent(componentId: number, toggle: boolean, overrideColor: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6B50FC8749632EC1 | Since: 2189
 * @deprecated Use hud.setMinimapSonarSweep(toggle) instead
 */
export declare function setMinimapSonarSweep(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x60E892BA4F5BDCA4 | Since: 323
 * @deprecated Use hud.showAccountPicker() instead
 */
export declare function showAccountPicker(): void;
/**
 * No comment provided
 *
 * Hash: 0xDCD4EC3F419D02FA | Since: 323
 * @deprecated Use hud.getMainPlayerBlipId() instead
 */
export declare function getMainPlayerBlipId(): number;
/**
 * No comment provided
 *
 * Hash: 0x41350B4FC28E3941 | Since: 323
 * @deprecated Use hud.setPmWarningscreenActive() instead
 */
export declare function setPmWarningscreenActive(): void;
/**
 * No comment provided
 *
 * Hash: 0x4B0311D3CDC4648F | Since: 323
 * @deprecated Use hud.hideLoadingOnFadeThisFrame() instead
 */
export declare function hideLoadingOnFadeThisFrame(): void;
/**
 * List of interior hashes: https://pastebin.com/1FUyXNqY
 * Not for every interior zoom > 0 available.
 *
 * Hash: 0x59E727A1C9D3E31A | Since: 323
 * @deprecated Use hud.setRadarAsInteriorThisFrame(interior, pos, zoom) instead
 */
export declare function setRadarAsInteriorThisFrame(interior: number | string, pos: Vector3, zoom: number): void;
/**
 * No comment provided
 *
 * Hash: 0x504DFE62A1692296 | Since: 1493
 * @deprecated Use hud.setInsideVerySmallInterior(toggle) instead
 */
export declare function setInsideVerySmallInterior(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7EC8ABA5E74B3D7A | Since: 2372
 * @deprecated Use hud.setInsideVeryLargeInterior(toggle) instead
 */
export declare function setInsideVeryLargeInterior(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE81B7D2A3DAB2D81 | Since: 323
 * @deprecated Use hud.setRadarAsExteriorThisFrame() instead
 */
export declare function setRadarAsExteriorThisFrame(): void;
/**
 * Sets the position of the arrow icon representing the player on both the minimap and world map.
 *
 * Too bad this wouldn't work over the network (obviously not). Could spoof where we would be.
 *
 * Hash: 0x77E2DD177910E1CF | Since: 323
 * @deprecated Use hud.setFakePausemapPlayerPositionThisFrame(x, y) instead
 */
export declare function setFakePausemapPlayerPositionThisFrame(x: number, y: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA17784FCA9548D15 | Since: 877
 * @deprecated Use hud.setFakeGpsPlayerPositionThisFrame(pos) instead
 */
export declare function setFakeGpsPlayerPositionThisFrame(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x9049FE339D5F6F6F | Since: 323
 * @deprecated Use hud.isPausemapInInteriorMode() instead
 */
export declare function isPausemapInInteriorMode(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5FBAE526203990C9 | Since: 323
 * @deprecated Use hud.hideMinimapExteriorMapThisFrame() instead
 */
export declare function hideMinimapExteriorMapThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x20FE7FDFEEAD38C0 | Since: 323
 * @deprecated Use hud.hideMinimapInteriorMapThisFrame() instead
 */
export declare function hideMinimapInteriorMapThisFrame(): void;
/**
 * Toggles the Cayo Perico map.
 *
 * Hash: 0x5E1460624D194A38 | Since: 2189
 * @deprecated Use hud.setUseIslandMap(toggle) instead
 */
export declare function setUseIslandMap(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x35CCE12EAECB4A51 | Since: 2944
 * @deprecated Use hud.setPauseExteriorRenderingWhileInInterior() instead
 */
export declare function setPauseExteriorRenderingWhileInInterior(): void;
/**
 * When calling this, the current frame will have the players "arrow icon" be focused on the dead center of the radar.
 *
 * Hash: 0x6D14BFDC33B34F55 | Since: 323
 * @deprecated Use hud.dontTiltMinimapThisFrame() instead
 */
export declare function dontTiltMinimapThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x89DA85D949CE57A0 | Since: 2802
 * @deprecated Use hud.dontZoomMinimapWhenRunningThisFrame() instead
 */
export declare function dontZoomMinimapWhenRunningThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x55F5A5F07134DE60 | Since: 1180
 * @deprecated Use hud.dontZoomMinimapWhenSnipingThisFrame() instead
 */
export declare function dontZoomMinimapWhenSnipingThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0xC3B07BA00A83B0F1 | Since: 323
 * @deprecated Use hud.setWidescreenFormat() instead
 */
export declare function setWidescreenFormat(): void;
/**
 * No comment provided
 *
 * Hash: 0x276B6CE369C33678 | Since: 323
 * @deprecated Use hud.displayAreaName(toggle) instead
 */
export declare function displayAreaName(toggle: boolean): void;
/**
 * "DISPLAY_CASH(false);" makes the cash amount render on the screen when appropriate
 * "DISPLAY_CASH(true);" disables cash amount rendering
 *
 * Hash: 0x96DEC8D5430208B7 | Since: 323
 * @deprecated Use hud.displayCash(toggle) instead
 */
export declare function displayCash(toggle: boolean): void;
/**
 * Related to displaying cash on the HUD
 * `Always called before HUD::CHANGE_FAKE_MP_CASH in decompiled scripts`
 *
 * Hash: 0x170F541E1CADD1DE | Since: 323
 * @deprecated Use hud.useFakeMpCash(toggle) instead
 */
export declare function useFakeMpCash(toggle: boolean): void;
/**
 * Displays cash change notifications on HUD.
 *
 * Hash: 0x0772DF77852C2E30 | Since: 323
 * @deprecated Use hud.changeFakeMpCash(cash, bank) instead
 */
export declare function changeFakeMpCash(cash: number, bank: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA5E78BA2B1331C55 | Since: 323
 * @deprecated Use hud.displayAmmoThisFrame(display) instead
 */
export declare function displayAmmoThisFrame(display: boolean): void;
/**
 * Displays the crosshair for this frame.
 *
 * Hash: 0x73115226F4814E62 | Since: 323
 * @deprecated Use hud.displaySniperScopeThisFrame() instead
 */
export declare function displaySniperScopeThisFrame(): void;
/**
 * Hides HUD and radar this frame and prohibits switching to other weapons (or accessing the weapon wheel)
 *
 * Hash: 0x719FF505F097FD20 | Since: 323
 * @deprecated Use hud.hideAndRadarThisFrame() instead
 */
export declare function hideHudAndRadarThisFrame(): void;
/**
 * Controls whether to display 'Cash'/'Bank' next to the money balance HUD in Multiplayer (https://i.imgur.com/MiYUtNl.png)
 *
 * Hash: 0xE67C6DFD386EA5E7 | Since: 323
 * @deprecated Use hud.allowDisplayOfMultiplayerCashText(allow) instead
 */
export declare function allowDisplayOfMultiplayerCashText(allow: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC2D15BEF167E27BC | Since: 323
 * @deprecated Use hud.setMultiplayerWalletCash() instead
 */
export declare function setMultiplayerWalletCash(): void;
/**
 * No comment provided
 *
 * Hash: 0x95CF81BD06EE1887 | Since: 323
 * @deprecated Use hud.removeMultiplayerWalletCash() instead
 */
export declare function removeMultiplayerWalletCash(): void;
/**
 * No comment provided
 *
 * Hash: 0xDD21B55DF695CD0A | Since: 323
 * @deprecated Use hud.setMultiplayerBankCash() instead
 */
export declare function setMultiplayerBankCash(): void;
/**
 * No comment provided
 *
 * Hash: 0xC7C6789AA1CFEDD0 | Since: 323
 * @deprecated Use hud.removeMultiplayerBankCash() instead
 */
export declare function removeMultiplayerBankCash(): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0xFD1D220394BCB824 | Since: 323
 * @deprecated Use hud.setMultiplayerCash() instead
 */
export declare function setMultiplayerHudCash(): void;
/**
 * Removes multiplayer cash hud each frame
 *
 * Hash: 0x968F270E39141ECA | Since: 323
 * @deprecated Use hud.removeMultiplayerCash() instead
 */
export declare function removeMultiplayerHudCash(): void;
/**
 * No comment provided
 *
 * Hash: 0xD46923FC481CA285 | Since: 323
 * @deprecated Use hud.hideHelpTextThisFrame() instead
 */
export declare function hideHelpTextThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x801879A9B4F4B2FB | Since: 372
 * @deprecated Use hud.isImeInProgress() instead
 */
export declare function isImeInProgress(): boolean;
/**
 * The messages are localized strings.
 * Examples:
 * "No_bus_money"
 * "Enter_bus"
 * "Tour_help"
 * "LETTERS_HELP2"
 * "Dummy"
 *
 * <strong>The bool appears to always be false (if it even is a bool, as it's represented by a zero)</strong>
 * --------
 * p1 doesn't seem to make a difference, regardless of the state it's in.
 *
 *
 * picture of where on the screen this is displayed?
 *
 * Hash: 0x960C9FF8F616E41C | Since: 323
 * @deprecated Use hud.displayHelpTextThisFrame(message) instead
 */
export declare function displayHelpTextThisFrame(message: string): void;
/**
 * Forces the weapon wheel to show/hide.
 *
 * Hash: 0xEB354E5376BC81A7 | Since: 323
 * @deprecated Use hud.forceWeaponWheel(show) instead
 */
export declare function hudForceWeaponWheel(show: boolean): void;
/**
 * Displays "blazer_wheels_up" and "blazer_wheels_down" "weapon" icons when switching between jetski and quadbike modes. Works only on vehicles using "VEHICLE_TYPE_AMPHIBIOUS_QUADBIKE" vehicle type. Needs to be called every time prior to switching modes, otherwise the icon will only appear when switching modes once.
 *
 * Hash: 0x488043841BBE156F | Since: 1011
 * @deprecated Use hud.forceSpecialVehicleWeaponWheel() instead
 */
export declare function hudForceSpecialVehicleWeaponWheel(): void;
/**
 * Calling this each frame, stops the player from receiving a weapon via the weapon wheel.
 *
 * Hash: 0x0AFC4AF510774B47 | Since: 323
 * @deprecated Use hud.suppressWeaponWheelResultsThisFrame() instead
 */
export declare function hudSuppressWeaponWheelResultsThisFrame(): void;
/**
 * Returns the weapon hash to the selected/highlighted weapon in the wheel
 *
 * Hash: 0xA48931185F0536FE | Since: 323
 * @deprecated Use hud.getWeaponWheelCurrentlyHighlighted() instead
 */
export declare function hudGetWeaponWheelCurrentlyHighlighted(): number;
/**
 * Set the active slotIndex in the wheel weapon to the slot associated with the provided Weapon hash
 *
 * Hash: 0x72C1056D678BB7D8 | Since: 323
 * @deprecated Use hud.setWeaponWheelTopSlot(weaponHash) instead
 */
export declare function hudSetWeaponWheelTopSlot(weaponHash: number | string): void;
/**
 * Returns the weapon hash active in a specific weapon wheel slotList
 *
 * Hash: 0xA13E93403F26C812 | Since: 323
 * @deprecated Use hud.getWeaponWheelTopSlot(weaponTypeIndex) instead
 */
export declare function hudGetWeaponWheelTopSlot(weaponTypeIndex: number): number;
/**
 * Sets a global that disables many weapon input tasks (shooting, aiming, etc.). Does not work with vehicle weapons, only used in selector.ysc
 *
 * Hash: 0x14C9FDCC41F81F63 | Since: 323
 * @deprecated Use hud.showingCharacterSwitchSelection(toggle) instead
 */
export declare function hudShowingCharacterSwitchSelection(toggle: boolean): void;
/**
 * Only the script that originally called SET_GPS_FLAGS can set them again. Another script cannot set the flags, until the first script that called it has called CLEAR_GPS_FLAGS.
 *
 * Doesn't seem like the flags are actually read by the game at all.
 *
 * Hash: 0x5B440763A4C8D15B | Since: 323
 * @deprecated Use hud.setGpsFlags() instead
 */
export declare function setGpsFlags(): void;
/**
 * Clears the GPS flags. Only the script that originally called SET_GPS_FLAGS can clear them.
 *
 * Doesn't seem like the flags are actually read by the game at all.
 *
 * Hash: 0x21986729D6A3A830 | Since: 323
 * @deprecated Use hud.clearGpsFlags() instead
 */
export declare function clearGpsFlags(): void;
/**
 * No comment provided
 *
 * Hash: 0x1EAC5F91BCBC5073 | Since: 323
 * @deprecated Use hud.setRaceTrackRender(toggle) instead
 */
export declare function setRaceTrackRender(toggle: boolean): void;
/**
 * Does the same as SET_RACE_TRACK_RENDER(false);
 *
 * Hash: 0x7AA5B4CE533C858B | Since: 323
 * @deprecated Use hud.clearGpsRaceTrack() instead
 */
export declare function clearGpsRaceTrack(): void;
/**
 * Starts a new GPS custom-route, allowing you to plot lines on the map.
 * Lines are drawn directly between points.
 * The GPS custom route works like the GPS multi route, except it does not follow roads.
 * Example result: https://i.imgur.com/BDm5pzt.png
 * hudColor: The HUD color of the GPS path.
 * displayOnFoot: Draws the path regardless if the player is in a vehicle or not.
 * followPlayer: Draw the path partially between the previous and next point based on the players position between them. When false, the GPS appears to not disappear after the last leg is completed.
 *
 * Hash: 0xDB34E8D56FC13B08 | Since: 323
 * @deprecated Use hud.startGpsCustomRoute(hudColor, displayOnFoot, followPlayer) instead
 */
export declare function startGpsCustomRoute(hudColor: number, displayOnFoot: boolean, followPlayer: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x311438A071DD9B1A | Since: 323
 * @deprecated Use hud.addPointToGpsCustomRoute(pos) instead
 */
export declare function addPointToGpsCustomRoute(pos: Vector3): void;
/**
 * radarThickness: The width of the GPS route on the radar
 * mapThickness: The width of the GPS route on the map
 *
 * Hash: 0x900086F371220B6F | Since: 323
 * @deprecated Use hud.setGpsCustomRouteRender(toggle, radarThickness, mapThickness) instead
 */
export declare function setGpsCustomRouteRender(toggle: boolean, radarThickness: number, mapThickness: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE6DE0561D9232A64 | Since: 323
 * @deprecated Use hud.clearGpsCustomRoute() instead
 */
export declare function clearGpsCustomRoute(): void;
/**
 * Starts a new GPS multi-route, allowing you to create custom GPS paths.
 * GPS functions like the waypoint, except it can contain multiple points it's forced to go through.
 * Once the player has passed a point, the GPS will no longer force its path through it.
 *
 * Works independently from the player-placed waypoint and blip routes.
 * Example result: https://i.imgur.com/ZZHQatX.png
 * hudColor: The HUD color of the GPS path.
 * routeFromPlayer: Makes the GPS draw a path from the player to the next point, rather than the original path from the previous point.
 * displayOnFoot: Draws the GPS path regardless if the player is in a vehicle or not.
 *
 * Hash: 0x3D3D15AF7BCAAF83 | Since: 323
 * @deprecated Use hud.startGpsMultiRoute(hudColor, routeFromPlayer, displayOnFoot) instead
 */
export declare function startGpsMultiRoute(hudColor: number, routeFromPlayer: boolean, displayOnFoot: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA905192A6781C41B | Since: 323
 * @deprecated Use hud.addPointToGpsMultiRoute(pos) instead
 */
export declare function addPointToGpsMultiRoute(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x3DDA37128DD1ACA8 | Since: 323
 * @deprecated Use hud.setGpsMultiRouteRender(toggle) instead
 */
export declare function setGpsMultiRouteRender(toggle: boolean): void;
/**
 * Does the same as SET_GPS_MULTI_ROUTE_RENDER(false);
 *
 * Hash: 0x67EEDEA1B9BAFD94 | Since: 323
 * @deprecated Use hud.clearGpsMultiRoute() instead
 */
export declare function clearGpsMultiRoute(): void;
/**
 * No comment provided
 *
 * Hash: 0xFF4FB7C8CDFA3DA7 | Since: 323
 * @deprecated Use hud.clearGpsPlayerWaypoint() instead
 */
export declare function clearGpsPlayerWaypoint(): void;
/**
 * No comment provided
 *
 * Hash: 0x320D0E0D936A0E9B | Since: 323
 * @deprecated Use hud.setGpsFlashes(toggle) instead
 */
export declare function setGpsFlashes(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7B21E0BB01E8224A | Since: 323
 * @deprecated Use hud.setPlayerIconColour(color) instead
 */
export declare function setPlayerIconColour(color: number): void;
/**
 * adds a short flash to the Radar/Minimap
 * Usage: UI.FLASH_MINIMAP_DISPLAY
 *
 * Hash: 0xF2DD778C22B15BDA | Since: 323
 * @deprecated Use hud.flashMinimapDisplay() instead
 */
export declare function flashMinimapDisplay(): void;
/**
 * No comment provided
 *
 * Hash: 0x6B1DE27EE78E6A19 | Since: 323
 * @deprecated Use hud.flashMinimapDisplayWithColor(hudColorIndex) instead
 */
export declare function flashMinimapDisplayWithColor(hudColorIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6AFDFB93754950C7 | Since: 323
 * @deprecated Use hud.toggleStealthRadar(toggle) instead
 */
export declare function toggleStealthRadar(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1A5CD7752DD28CD3 | Since: 323
 * @deprecated Use hud.setMinimapInSpectatorMode(toggle, ped) instead
 */
export declare function setMinimapInSpectatorMode(toggle: boolean, ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x5F28ECF5FC84772F | Since: 323
 * @deprecated Use hud.setMissionName(name) instead
 */
export declare function setMissionName(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0xE45087D85F468BC2 | Since: 323
 * @deprecated Use hud.setMissionNameForUgcMission(name) instead
 */
export declare function setMissionNameForUgcMission(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0x817B86108EB94E51 | Since: 323
 * @deprecated Use hud.setDescriptionForUgcMissionEightStrings() instead
 */
export declare function setDescriptionForUgcMissionEightStrings(): void;
/**
 * No comment provided
 *
 * Hash: 0x58FADDED207897DC | Since: 323
 * @deprecated Use hud.setMinimapBlockWaypoint(toggle) instead
 */
export declare function setMinimapBlockWaypoint(toggle: boolean): void;
/**
 * Toggles the North Yankton map
 *
 * Hash: 0x9133955F1A2DA957 | Since: 323
 * @deprecated Use hud.setMinimapInPrologue(toggle) instead
 */
export declare function setMinimapInPrologue(toggle: boolean): void;
/**
 * This native does absolutely nothing on PC master builds, just a nullsub.
 *
 * Hash: 0xB09D42557C45EBA1 | Since: 3258
 * @deprecated Use hud.setMinimapBackgroundHidden(toggle) instead
 */
export declare function setMinimapBackgroundHidden(toggle: boolean): void;
/**
 * If true, the entire map will be revealed.
 *
 * FOW = Fog of War
 *
 * Hash: 0xF8DEE0A5600CBB93 | Since: 323
 * @deprecated Use hud.setMinimapHideFow(toggle) instead
 */
export declare function setMinimapHideFow(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE0130B41D3CF4574 | Since: 323
 * @deprecated Use hud.getMinimapFowDiscoveryRatio() instead
 */
export declare function getMinimapFowDiscoveryRatio(): number;
/**
 * No comment provided
 *
 * Hash: 0x6E31B91145873922 | Since: 323
 * @deprecated Use hud.getMinimapFowCoordinateIsRevealed(pos) instead
 */
export declare function getMinimapFowCoordinateIsRevealed(pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x62E849B7EB28E770 | Since: 323
 * @deprecated Use hud.setMinimapFowDoNotUpdate() instead
 */
export declare function setMinimapFowDoNotUpdate(): void;
/**
 * Up to eight coordinates may be revealed per frame
 *
 * Hash: 0x0923DBF87DFF735E | Since: 323
 * @deprecated Use hud.setMinimapFowRevealCoordinate(pos) instead
 */
export declare function setMinimapFowRevealCoordinate(pos: Vector3): void;
/**
 * Not much is known so far on what it does _exactly_.
 * All I know for sure is that it draws the specified hole ID on the pause menu map as well as on the mini-map/radar. This native also seems to change some other things related to the pause menu map's behaviour, for example: you can no longer set waypoints, the pause menu map starts up in a 'zoomed in' state. This native does not need to be executed every tick.
 * You need to center the minimap manually as well as change/lock it's zoom and angle in order for it to appear correctly on the minimap.
 * You'll also need to use the `GOLF` scaleform in order to get the correct minmap border to show up.
 * Use `0x35edd5b2e3ff01c0` to reset the map when you no longer want to display any golf holes (you still need to unlock zoom, position and angle of the radar manually after calling this).
 *
 * Hash: 0x71BDB63DBAF8DA59 | Since: 323
 * @deprecated Use hud.setMinimapGolfCourse(hole) instead
 */
export declare function setMinimapGolfCourse(hole: number): void;
/**
 * No comment provided
 *
 * Hash: 0x35EDD5B2E3FF01C0 | Since: 323
 * @deprecated Use hud.setMinimapGolfCourseOff() instead
 */
export declare function setMinimapGolfCourseOff(): void;
/**
 * Locks the minimap to the specified angle in integer degrees.
 *
 * angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.
 *
 * Hash: 0x299FAEBB108AE05B | Since: 323
 * @deprecated Use hud.lockMinimapAngle(angle) instead
 */
export declare function lockMinimapAngle(angle: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8183455E16C42E3A | Since: 323
 * @deprecated Use hud.unlockMinimapAngle() instead
 */
export declare function unlockMinimapAngle(): void;
/**
 * Locks the minimap to the specified world position.
 *
 * Hash: 0x1279E861A329E73F | Since: 323
 * @deprecated Use hud.lockMinimapPosition(x, y) instead
 */
export declare function lockMinimapPosition(x: number, y: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3E93E06DB8EF1F30 | Since: 323
 * @deprecated Use hud.unlockMinimapPosition() instead
 */
export declare function unlockMinimapPosition(): void;
/**
 * Argument must be 0.0f or above 38.0f, or it will be ignored.
 *
 * Hash: 0xD201F3FF917A506D | Since: 323
 * @deprecated Use hud.setFakeMinimapMaxAltimeterHeight(altitude) instead
 */
export declare function setFakeMinimapMaxAltimeterHeight(altitude: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3F5CC444DCAAA8F2 | Since: 323
 * @deprecated Use hud.setHealthDisplayValues(health, capacity, wasAdded) instead
 */
export declare function setHealthHudDisplayValues(health: number, capacity: number, wasAdded: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x975D66A0BC17064C | Since: 323
 * @deprecated Use hud.setMaxHealthDisplay(maximumValue) instead
 */
export declare function setMaxHealthHudDisplay(maximumValue: number): void;
/**
 * No comment provided
 *
 * Hash: 0x06A320535F5F0248 | Since: 323
 * @deprecated Use hud.setMaxArmourDisplay(maximumValue) instead
 */
export declare function setMaxArmourHudDisplay(maximumValue: number): void;
/**
 * Toggles the big minimap state like in GTA:Online.
 *
 * Hash: 0x231C8F89D0539D8F | Since: 323
 * @deprecated Use hud.setBigmapActive(toggleBigMap, showFullMap) instead
 */
export declare function setBigmapActive(toggleBigMap: boolean, showFullMap: boolean): void;
/**
 * Full list of components below
 *
 * HUD = 0;
 * HUD_WANTED_STARS = 1;
 * HUD_WEAPON_ICON = 2;
 * HUD_CASH = 3;
 * HUD_MP_CASH = 4;
 * HUD_MP_MESSAGE = 5;
 * HUD_VEHICLE_NAME = 6;
 * HUD_AREA_NAME = 7;
 * HUD_VEHICLE_CLASS = 8;
 * HUD_STREET_NAME = 9;
 * HUD_HELP_TEXT = 10;
 * HUD_FLOATING_HELP_TEXT_1 = 11;
 * HUD_FLOATING_HELP_TEXT_2 = 12;
 * HUD_CASH_CHANGE = 13;
 * HUD_RETICLE = 14;
 * HUD_SUBTITLE_TEXT = 15;
 * HUD_RADIO_STATIONS = 16;
 * HUD_SAVING_GAME = 17;
 * HUD_GAME_STREAM = 18;
 * HUD_WEAPON_WHEEL = 19;
 * HUD_WEAPON_WHEEL_STATS = 20;
 * MAX_HUD_COMPONENTS = 21;
 * MAX_HUD_WEAPONS = 22;
 * MAX_SCRIPTED_HUD_COMPONENTS = 141;
 *
 * Hash: 0xBC4C9EA5391ECC0D | Since: 323
 * @deprecated Use hud.isComponentActive(id) instead
 */
export declare function isHudComponentActive(id: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDD100EB17A94FF65 | Since: 323
 * @deprecated Use hud.isScriptedComponentActive(id) instead
 */
export declare function isScriptedHudComponentActive(id: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE374C498D8BADC14 | Since: 323
 * @deprecated Use hud.hideScriptedComponentThisFrame(id) instead
 */
export declare function hideScriptedHudComponentThisFrame(id: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4F38DCA127DAAEA2 | Since: 1734
 * @deprecated Use hud.showScriptedComponentThisFrame(id) instead
 */
export declare function showScriptedHudComponentThisFrame(id: number): void;
/**
 * No comment provided
 *
 * Hash: 0x09C0403ED9A751C2 | Since: 323
 * @deprecated Use hud.isScriptedComponentHiddenThisFrame(id) instead
 */
export declare function isScriptedHudComponentHiddenThisFrame(id: number): boolean;
/**
 * This function hides various HUD (Heads-up Display) components.
 * Listed below are the integers and the corresponding HUD component.
 * - 1 : WANTED_STARS
 * - 2 : WEAPON_ICON
 * - 3 : CASH
 * - 4 : MP_CASH
 * - 5 : MP_MESSAGE
 * - 6 : VEHICLE_NAME
 * - 7 : AREA_NAME
 * - 8 : VEHICLE_CLASS
 * - 9 : STREET_NAME
 * - 10 : HELP_TEXT
 * - 11 : FLOATING_HELP_TEXT_1
 * - 12 : FLOATING_HELP_TEXT_2
 * - 13 : CASH_CHANGE
 * - 14 : RETICLE
 * - 15 : SUBTITLE_TEXT
 * - 16 : RADIO_STATIONS
 * - 17 : SAVING_GAME
 * - 18 : GAME_STREAM
 * - 19 : WEAPON_WHEEL
 * - 20 : WEAPON_WHEEL_STATS
 * - 21 : HUD_COMPONENTS
 * - 22 : HUD_WEAPONS
 *
 * These integers also work for the `SHOW_HUD_COMPONENT_THIS_FRAME` native, but instead shows the HUD Component.
 *
 * Hash: 0x6806C51AD12B83B8 | Since: 323
 * @deprecated Use hud.hideComponentThisFrame(id) instead
 */
export declare function hideHudComponentThisFrame(id: number): void;
/**
 * This function hides various HUD (Heads-up Display) components.
 * Listed below are the integers and the corresponding HUD component.
 * - 1 : WANTED_STARS
 * - 2 : WEAPON_ICON
 * - 3 : CASH
 * - 4 : MP_CASH
 * - 5 : MP_MESSAGE
 * - 6 : VEHICLE_NAME
 * - 7 : AREA_NAME
 * - 8 : VEHICLE_CLASS
 * - 9 : STREET_NAME
 * - 10 : HELP_TEXT
 * - 11 : FLOATING_HELP_TEXT_1
 * - 12 : FLOATING_HELP_TEXT_2
 * - 13 : CASH_CHANGE
 * - 14 : RETICLE
 * - 15 : SUBTITLE_TEXT
 * - 16 : RADIO_STATIONS
 * - 17 : SAVING_GAME
 * - 18 : GAME_STREAM
 * - 19 : WEAPON_WHEEL
 * - 20 : WEAPON_WHEEL_STATS
 * - 21 : HUD_COMPONENTS
 * - 22 : HUD_WEAPONS
 *
 * These integers also work for the `HIDE_HUD_COMPONENT_THIS_FRAME` native, but instead hides the HUD Component.
 *
 * Hash: 0x0B4DF1FA60C0E664 | Since: 323
 * @deprecated Use hud.showComponentThisFrame(id) instead
 */
export declare function showHudComponentThisFrame(id: number): void;
/**
 * Hides area and vehicle name HUD components for one frame.
 *
 * Hash: 0xA4DEDE28B1814289 | Since: 323
 * @deprecated Use hud.hideStreetAndCarNamesThisFrame() instead
 */
export declare function hideStreetAndCarNamesThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x12782CE0A636E9F0 | Since: 323
 * @deprecated Use hud.resetReticuleValues() instead
 */
export declare function resetReticuleValues(): void;
/**
 * No comment provided
 *
 * Hash: 0x450930E616475D0D | Since: 323
 * @deprecated Use hud.resetComponentValues(id) instead
 */
export declare function resetHudComponentValues(id: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAABB1F56E2A17CED | Since: 323
 * @deprecated Use hud.setComponentPosition(id, x, y) instead
 */
export declare function setHudComponentPosition(id: number, x: number, y: number): void;
/**
 * No comment provided
 *
 * Hash: 0x223CA69A8C4417FD | Since: 323
 * @deprecated Use hud.getComponentPosition(id) instead
 */
export declare function getHudComponentPosition(id: number): Vector3;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0xB57D8DD645CFA2CF | Since: 323
 * @deprecated Use hud.clearReminderMessage() instead
 */
export declare function clearReminderMessage(): void;
/**
 * World to relative screen coords, this world to screen will keep the text on screen. Was named _GET_SCREEN_COORD_FROM_WORLD_COORD, but this conflicts with 0x34E82F05DF2974F5. As that hash actually matches GET_SCREEN_COORD_FROM_WORLD_COORD that one supercedes and this one was renamed to _GET_2D_COORD_FROM_3D_COORD
 *
 * Hash: 0xF9904D11F1ACBEC3 | Since: 323
 * @deprecated Use hud.getScreenPositionFromWorldPosition(worldPos) instead
 */
export declare function getHudScreenPositionFromWorldPosition(worldPos: Vector3): [number, number, number];
/**
 * Shows a menu for reporting UGC content.
 *
 * Hash: 0x523A590C1A3CC0D3 | Since: 323
 * @deprecated Use hud.openReportugcMenu() instead
 */
export declare function openReportugcMenu(): void;
/**
 * No comment provided
 *
 * Hash: 0xEE4C0E6DBC6F2C6F | Since: 323
 * @deprecated Use hud.forceCloseReportugcMenu() instead
 */
export declare function forceCloseReportugcMenu(): void;
/**
 * No comment provided
 *
 * Hash: 0x9135584D09A3437E | Since: 323
 * @deprecated Use hud.isReportugcMenuOpen() instead
 */
export declare function isReportugcMenuOpen(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2432784ACA090DA4 | Since: 323
 * @deprecated Use hud.isFloatingHelpTextOnScreen(hudIndex) instead
 */
export declare function isFloatingHelpTextOnScreen(hudIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7679CC1BCEBE3D4C | Since: 323
 * @deprecated Use hud.setFloatingHelpTextScreenPosition(hudIndex, x, y) instead
 */
export declare function setFloatingHelpTextScreenPosition(hudIndex: number, x: number, y: number): void;
/**
 * No comment provided
 *
 * Hash: 0x784BA7E0ECEB4178 | Since: 323
 * @deprecated Use hud.setFloatingHelpTextWorldPosition(hudIndex, pos) instead
 */
export declare function setFloatingHelpTextWorldPosition(hudIndex: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xB094BC1DB4018240 | Since: 323
 * @deprecated Use hud.setFloatingHelpTextToEntity(hudIndex, entity, offsetX, offsetY) instead
 */
export declare function setFloatingHelpTextToEntity(hudIndex: number, entity: number | Entity, offsetX: number, offsetY: number): void;
/**
 * No comment provided
 *
 * Hash: 0x788E7FD431BD67F1 | Since: 323
 * @deprecated Use hud.setFloatingHelpTextStyle(hudIndex) instead
 */
export declare function setFloatingHelpTextStyle(hudIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x50085246ABD3FEFA | Since: 323
 * @deprecated Use hud.clearFloatingHelp(hudIndex) instead
 */
export declare function clearFloatingHelp(hudIndex: number): void;
/**
 * clanFlag: takes a number 0-5
 *
 * Hash: 0x6DD05E9D83EFA4C9 | Since: 323
 * @deprecated Use hud.createMpGamerTagWithCrewColor(player, username, pointedClanTag, isRockstarClan, clanTag, clanFlag, r, g, b) instead
 */
export declare function createMpGamerTagWithCrewColor(player: number | string | Player, username: string, pointedClanTag: boolean, isRockstarClan: boolean, clanTag: string, clanFlag: number, r: number, g: number, b: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6E0EB3EB47C8D7AA | Since: 323
 * @deprecated Use hud.isMpGamerTagMovieActive() instead
 */
export declare function isMpGamerTagMovieActive(): boolean;
/**
 * clanFlag: takes a number 0-5
 *
 * Hash: 0xBFEFE3321A3F5015 | Since: 323
 * @deprecated Use hud.createFakeMpGamerTag(ped, username, pointedClanTag, isRockstarClan, clanTag, clanFlag) instead
 */
export declare function createFakeMpGamerTag(ped: number | Ped, username: string, pointedClanTag: boolean, isRockstarClan: boolean, clanTag: string, clanFlag: number): number;
/**
 * No comment provided
 *
 * Hash: 0x31698AA80E0223F8 | Since: 323
 * @deprecated Use hud.removeMpGamerTag(gamerTagId) instead
 */
export declare function removeMpGamerTag(gamerTagId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4E929E7A5796FD26 | Since: 323
 * @deprecated Use hud.isMpGamerTagActive(gamerTagId) instead
 */
export declare function isMpGamerTagActive(gamerTagId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x595B5178E412E199 | Since: 323
 * @deprecated Use hud.isMpGamerTagFree(gamerTagId) instead
 */
export declare function isMpGamerTagFree(gamerTagId: number): boolean;
/**
 * enum eMpGamerTagComponent
 * {
 * MP_TAG_GAMER_NAME,
 * MP_TAG_CREW_TAG,
 * MP_TAG_HEALTH_ARMOUR,
 * MP_TAG_BIG_TEXT,
 * MP_TAG_AUDIO_ICON,
 * MP_TAG_USING_MENU,
 * MP_TAG_PASSIVE_MODE,
 * MP_TAG_WANTED_STARS,
 * MP_TAG_DRIVER,
 * MP_TAG_CO_DRIVER,
 * MP_TAG_TAGGED,
 * MP_TAG_GAMER_NAME_NEARBY,
 * MP_TAG_ARROW,
 * MP_TAG_PACKAGES,
 * MP_TAG_INV_IF_PED_FOLLOWING,
 * MP_TAG_RANK_TEXT,
 * MP_TAG_TYPING,
 * MP_TAG_BAG_LARGE,
 * MP_TAG_ARROW,
 * MP_TAG_GANG_CEO,
 * MP_TAG_GANG_BIKER,
 * MP_TAG_BIKER_ARROW,
 * MP_TAG_MC_ROLE_PRESIDENT,
 * MP_TAG_MC_ROLE_VICE_PRESIDENT,
 * MP_TAG_MC_ROLE_ROAD_CAPTAIN,
 * MP_TAG_MC_ROLE_SARGEANT,
 * MP_TAG_MC_ROLE_ENFORCER,
 * MP_TAG_MC_ROLE_PROSPECT,
 * MP_TAG_TRANSMITTER,
 * MP_TAG_BOMB
 * };
 *
 * Hash: 0x63BB75ABEDC1F6A0 | Since: 323
 * @deprecated Use hud.setMpGamerTagVisibility(gamerTagId, component, toggle) instead
 */
export declare function setMpGamerTagVisibility(gamerTagId: number, component: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEE76FF7E6A0166B0 | Since: 323
 * @deprecated Use hud.setAllMpGamerTagsVisibility(gamerTagId, toggle) instead
 */
export declare function setAllMpGamerTagsVisibility(gamerTagId: number, toggle: boolean): void;
/**
 * Displays a bunch of icons above the players name, and level, and their name twice
 *
 * Hash: 0xA67F9C46D612B6F1 | Since: 323
 * @deprecated Use hud.setMpGamerTagsShouldUseVehicleHealth(gamerTagId, toggle) instead
 */
export declare function setMpGamerTagsShouldUseVehicleHealth(gamerTagId: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD29EC58C2F6B5014 | Since: 1365
 * @deprecated Use hud.setMpGamerTagsShouldUsePointsHealth(gamerTagId, toggle) instead
 */
export declare function setMpGamerTagsShouldUsePointsHealth(gamerTagId: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1563FE35E9928E67 | Since: 1365
 * @deprecated Use hud.setMpGamerTagsPointHealth(gamerTagId, value, maximumValue) instead
 */
export declare function setMpGamerTagsPointHealth(gamerTagId: number, value: number, maximumValue: number): void;
/**
 * Sets a gamer tag's component colour
 *
 * gamerTagId is obtained using for example CREATE_FAKE_MP_GAMER_TAG
 * Ranges from 0 to 255. 0 is grey health bar, ~50 yellow, 200 purple.
 *
 * Hash: 0x613ED644950626AE | Since: 323
 * @deprecated Use hud.setMpGamerTagColour(gamerTagId, component, hudColorIndex) instead
 */
export declare function setMpGamerTagColour(gamerTagId: number, component: number, hudColorIndex: number): void;
/**
 * Ranges from 0 to 255. 0 is grey health bar, ~50 yellow, 200 purple.
 * Should be enabled as flag (2). Has 0 opacity by default.
 *
 * - This was _SET_MP_GAMER_TAG_HEALTH_BAR_COLOR,
 * -> Rockstar use the EU spelling of 'color' so I hashed the same name with COLOUR and it came back as the correct hash, so it has been corrected above.
 *
 * Hash: 0x3158C77A7E888AB4 | Since: 323
 * @deprecated Use hud.setMpGamerTagHealthBarColour(gamerTagId, hudColorIndex) instead
 */
export declare function setMpGamerTagHealthBarColour(gamerTagId: number, hudColorIndex: number): void;
/**
 * Sets flag's sprite transparency. 0-255.
 *
 * Hash: 0xD48FE545CD46F857 | Since: 323
 * @deprecated Use hud.setMpGamerTagAlpha(gamerTagId, component, alpha) instead
 */
export declare function setMpGamerTagAlpha(gamerTagId: number, component: number, alpha: number): void;
/**
 * displays wanted star above head
 *
 * Hash: 0xCF228E2AA03099C3 | Since: 323
 * @deprecated Use hud.setMpGamerTagWantedLevel(gamerTagId, wantedlvl) instead
 */
export declare function setMpGamerTagWantedLevel(gamerTagId: number, wantedlvl: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9C16459B2324B2CF | Since: 877
 * @deprecated Use hud.setMpGamerTagNumPackages(gamerTagId) instead
 */
export declare function setMpGamerTagNumPackages(gamerTagId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDEA2B8283BAA3944 | Since: 323
 * @deprecated Use hud.setMpGamerTagName(gamerTagId, _string) instead
 */
export declare function setMpGamerTagName(gamerTagId: number, _string: string): void;
/**
 * No comment provided
 *
 * Hash: 0xEB709A36958ABE0D | Since: 323
 * @deprecated Use hud.isUpdatingMpGamerTagNameAndCrewDetails(gamerTagId) instead
 */
export declare function isUpdatingMpGamerTagNameAndCrewDetails(gamerTagId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7B7723747CCB55B6 | Since: 323
 * @deprecated Use hud.setMpGamerTagBigText(gamerTagId, _string) instead
 */
export declare function setMpGamerTagBigText(gamerTagId: number, _string: string): void;
/**
 * No comment provided
 *
 * Hash: 0x01A358D9128B7A86 | Since: 323
 * @deprecated Use hud.getCurrentWebpageId() instead
 */
export declare function getCurrentWebpageId(): number;
/**
 * No comment provided
 *
 * Hash: 0x97D47996FC48CBAD | Since: 323
 * @deprecated Use hud.getCurrentWebsiteId() instead
 */
export declare function getCurrentWebsiteId(): number;
/**
 * Returns the ActionScript flagValue.
 * ActionScript flags are global flags that scaleforms use
 * Flags found during testing
 * 0: Returns 1 if the web_browser keyboard is open, otherwise 0
 * 1: Returns 1 if the player has clicked back twice on the opening page, otherwise 0 (web_browser)
 * 2: Returns how many links the player has clicked in the web_browser scaleform, returns 0 when the browser gets closed
 * 9: Returns the current selection on the mobile phone scaleform
 *
 * There are 20 flags in total.
 *
 * Hash: 0xE3B05614DCE1D014 | Since: 323
 * @deprecated Use hud.getGlobalActionscriptFlag(flagIndex) instead
 */
export declare function getGlobalActionscriptFlag(flagIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0xB99C4E4D9499DF29 | Since: 323
 * @deprecated Use hud.resetGlobalActionscriptFlag(flagIndex) instead
 */
export declare function resetGlobalActionscriptFlag(flagIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAF42195A42C63BBA | Since: 323
 * @deprecated Use hud.isWarningMessageReadyForControl() instead
 */
export declare function isWarningMessageReadyForControl(): boolean;
/**
 * You can only use text entries. No custom text.
 *
 * Example: SET_WARNING_MESSAGE("t20", 3, "adder", false, -1, 0, 0, true);
 * errorCode: shows an error code at the bottom left if nonzero
 *
 * Hash: 0x7B1776B3B53F8D74 | Since: 323
 * @deprecated Use hud.setWarningMessage(titleMsg, flags, promptMsg, showBackground, errorCode) instead
 */
export declare function setWarningMessage(titleMsg: string, flags: number, promptMsg: string, showBackground: boolean, errorCode: number): void;
/**
 * Shows a warning message on screen with a header.
 * Note: You can only use text entries. No custom text. You can recreate this easily with scaleforms.
 * Example: https://i.imgur.com/ITJt8bJ.png
 *
 * Hash: 0xDC38CC1E35B6A5D7 | Since: 323
 * @deprecated Use hud.setWarningMessageWithHeader(entryHeader, entryLine1, instructionalKey, entryLine2) instead
 */
export declare function setWarningMessageWithHeader(entryHeader: string, entryLine1: string, instructionalKey: number, entryLine2: string): [any, any];
/**
 * You can use this native for custom input, without having to use any scaleform-related natives.
 * The native must be called on tick.
 * The entryHeader must be a valid label.
 * For Single lines use JL_INVITE_N as entryLine1, JL_INVITE_ND for multiple.
 * Notes:
 * - additionalIntInfo: replaces first occurrence of ~1~ in provided label with an integer
 * - additionalTextInfoLine1: replaces first occurrence of ~a~ in provided label, with your custom text
 * - additionalTextInfoLine2: replaces second occurrence of ~a~ in provided label, with your custom text
 * - showBackground: shows black background of the warning screen
 * - errorCode: shows an error code at the bottom left if nonzero
 * Example of usage:
 * SET_WARNING_MESSAGE_WITH_HEADER_AND_SUBSTRING_FLAGS("ALERT", "JL_INVITE_ND", 66, "", true, -1, -1, "Testing line 1", "Testing line 2", true, 0);
 * Screenshot:
 * https://imgur.com/a/IYA7vJ8
 *
 * Hash: 0x701919482C74B5AB | Since: 323
 * @deprecated Use hud.setWarningMessageWithHeaderAndSubstringFlags(entryHeader, entryLine1, instructionalKey, entryLine2, additionalIntInfo, additionalTextInfoLine1, additionalTextInfoLine2, showBackground, errorCode) instead
 */
export declare function setWarningMessageWithHeaderAndSubstringFlags(entryHeader: string, entryLine1: string, instructionalKey: number, entryLine2: string, additionalIntInfo: any, additionalTextInfoLine1: string, additionalTextInfoLine2: string, showBackground: boolean, errorCode: number): void;
/**
 * No comment provided
 *
 * Hash: 0x38B55259C2E078ED | Since: 1493
 * @deprecated Use hud.setWarningMessageWithHeaderExtended(entryHeader, entryLine1, flags, entryLine2, showBg) instead
 */
export declare function setWarningMessageWithHeaderExtended(entryHeader: string, entryLine1: string, flags: number, entryLine2: string, showBg: boolean): [any, any];
/**
 * labelTitle: Label of the alert's title.
 * labelMsg: Label of the alert's message.
 * p2: This is an enum, check the description for a list.
 * p3: This is an enum, check the description for a list.
 * labelMsg2: Label of another message line
 * p5: usually 0
 * p6: usually -1
 * p7: usually 0
 * p8: unknown label
 * p9: unknown label
 * background: Set to anything other than 0 or false (even any string) and it will draw a background. Setting it to 0 or false will draw no background.
 * errorCode: Error code, shown at the bottom left if set to value other than 0.
 *
 * instructionalKey enum list:
 * Buttons = {
 * Empty = 0,
 * Select = 1, -- (RETURN)
 * Ok = 2, -- (RETURN)
 * Yes = 4, -- (RETURN)
 * Back = 8, -- (ESC)
 * Cancel = 16, -- (ESC)
 * No = 32, -- (ESC)
 * RetrySpace = 64, -- (SPACE)
 * Restart = 128, -- (SPACE)
 * Skip = 256, -- (SPACE)
 * Quit = 512, -- (ESC)
 * Adjust = 1024, -- (ARROWS)
 * SpaceKey = 2048, -- (SPACE)
 * Share = 4096, -- (SPACE)
 * SignIn = 8192, -- (SPACE)
 * Continue = 16384, -- (RETURN)
 * AdjustLeftRight = 32768, -- (SCROLL L/R)
 * AdjustUpDown = 65536, -- (SCROLL U/D)
 * Overwrite = 131072, -- (SPACE)
 * SocialClubSignup = 262144, -- (RETURN)
 * Confirm = 524288, -- (RETURN)
 * Queue = 1048576, -- (RETURN)
 * RetryReturn = 2097152, -- (RETURN)
 * BackEsc = 4194304, -- (ESC)
 * SocialClub = 8388608, -- (RETURN)
 * Spectate = 16777216, -- (SPACE)
 * OkEsc = 33554432, -- (ESC)
 * CancelTransfer = 67108864, -- (ESC)
 * LoadingSpinner = 134217728,
 * NoReturnToGTA = 268435456, -- (ESC)
 * CancelEsc = 536870912, -- (ESC)
 * }
 *
 * Alt = {
 * Empty = 0,
 * No = 1, -- (SPACE)
 * Host = 2, -- (ESC)
 * SearchForJob = 4, -- (RETURN)
 * ReturnKey = 8, -- (TURN)
 * Freemode = 16, -- (ESC)
 * }
 *
 * Example: https://i.imgur.com/TvmNF4k.png
 *
 * Hash: 0x15803FEC3B9A872B | Since: 573
 * @deprecated Use hud.setWarningMessageWithHeaderAndSubstringFlagsExtended(labelTitle, labelMessage, labelMessage2, background, errorCode) instead
 */
export declare function setWarningMessageWithHeaderAndSubstringFlagsExtended(labelTitle: string, labelMessage: string, labelMessage2: string, background: boolean, errorCode: number): void;
/**
 * Has to do with the confirmation overlay (E.g. confirm exit)
 *
 * Hash: 0x81DF9ABA6C83DFF9 | Since: 1290
 * @deprecated Use hud.getWarningScreenMessageHash() instead
 */
export declare function getWarningScreenMessageHash(): number;
/**
 * Some sort of list displayed in a warning message. Yet unknown how to prevent repeating.
 * Param names copied from the corresponding scaleform function "SET_LIST_ROW".
 * Example: https://i.imgur.com/arKvOYx.png
 *
 * Hash: 0x0C5A80A9E096D529 | Since: 323
 * @deprecated Use hud.setWarningMessageOptionItems(index, name, cash, rp, lvl, colour) instead
 */
export declare function setWarningMessageOptionItems(index: number, name: string, cash: number, rp: number, lvl: number, colour: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDAF87174BE7454FF | Since: 323
 * @deprecated Use hud.setWarningMessageOptionHighlight() instead
 */
export declare function setWarningMessageOptionHighlight(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6EF54AB721DC6242 | Since: 323
 * @deprecated Use hud.removeWarningMessageOptionItems() instead
 */
export declare function removeWarningMessageOptionItems(): void;
/**
 * No comment provided
 *
 * Hash: 0xE18B138FABC53103 | Since: 323
 * @deprecated Use hud.isWarningMessageActive() instead
 */
export declare function isWarningMessageActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7792424AA0EAC32E | Since: 323
 * @deprecated Use hud.clearDynamicPauseMenuErrorMessage() instead
 */
export declare function clearDynamicPauseMenuErrorMessage(): void;
/**
 * If toggle is true, the map is shown in full screen
 * If toggle is false, the map is shown in normal mode
 *
 * Hash: 0x5354C5BA2EA868A4 | Since: 323
 * @deprecated Use hud.customMinimapSetActive(toggle) instead
 */
export declare function customMinimapSetActive(toggle: boolean): void;
/**
 * Sets the sprite of the next BLIP_GALLERY blip, values used in the native scripts: 143 (ObjectiveBlue), 144 (ObjectiveGreen), 145 (ObjectiveRed), 146 (ObjectiveYellow).
 *
 * Hash: 0x1EAE6DD17B7A5EFA | Since: 323
 * @deprecated Use hud.customMinimapSetBlipObject(spriteId) instead
 */
export declare function customMinimapSetBlipObject(spriteId: number): void;
/**
 * Add a BLIP_GALLERY at the specific coordinate. Used in fm_maintain_transition_players to display race track points.
 *
 * Hash: 0x551DF99658DB6EE8 | Since: 323
 * @deprecated Use hud.customMinimapCreateBlip(pos) instead
 */
export declare function customMinimapCreateBlip(pos: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0x2708FC083123F9FF | Since: 323
 * @deprecated Use hud.customMinimapClearBlips() instead
 */
export declare function customMinimapClearBlips(): void;
/**
 * Doesn't actually return anything.
 *
 * Hash: 0x1121BFA1A1A522A8 | Since: 323
 * @deprecated Use hud.forceSonarBlipsThisFrame() instead
 */
export declare function forceSonarBlipsThisFrame(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3F0CF9CB7E589B88 | Since: 463
 * @deprecated Use hud.getNorthBlidIndex() instead
 */
export declare function getNorthBlidIndex(): number;
/**
 * Toggles whether or not name labels are shown on the expanded minimap next to player blips, like in GTA:O.
 * Doesn't need to be called every frame.
 * Preview: https://i.imgur.com/DfqKWfJ.png
 *
 * Make sure to call SET_BLIP_CATEGORY with index 7 for this to work on the desired blip.
 *
 * Hash: 0x82CEDC33687E1F50 | Since: 323
 * @deprecated Use hud.displayPlayerNameTagsOnBlips(toggle) instead
 */
export declare function displayPlayerNameTagsOnBlips(toggle: boolean): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0x211C4EF450086857 | Since: 323
 * @deprecated Use hud.drawFrontendBackgroundThisFrame() instead
 */
export declare function drawFrontendBackgroundThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0xBF4F34A85CA2970C | Since: 323
 * @deprecated Use hud.drawOverFadeThisFrame() instead
 */
export declare function drawHudOverFadeThisFrame(): void;
/**
 * Does stuff like this:
 * gyazo.com/7fcb78ea3520e3dbc5b2c0c0f3712617
 *
 * Example:
 * int GetHash = GET_HASH_KEY("fe_menu_version_corona_lobby");
 * ACTIVATE_FRONTEND_MENU(GetHash, 0, -1);
 *
 * BOOL p1 is a toggle to define the game in pause.
 * int p2 is unknown but -1 always works, not sure why though.
 *
 * [30/03/2017] ins1de :
 *
 * the int p2 is actually a component variable. When the pause menu is visible, it opens the tab related to it.
 *
 * Example : Function.Call(Hash.ACTIVATE_FRONTEND_MENU,-1171018317, 0, 42);
 * Result : Opens the "Online" tab without pausing the menu, with -1 it opens the map.Below is a list of all known Frontend Menu Hashes.
 * - FE_MENU_VERSION_SP_PAUSE
 * - FE_MENU_VERSION_MP_PAUSE
 * - FE_MENU_VERSION_CREATOR_PAUSE
 * - FE_MENU_VERSION_CUTSCENE_PAUSE
 * - FE_MENU_VERSION_SAVEGAME
 * - FE_MENU_VERSION_PRE_LOBBY
 * - FE_MENU_VERSION_LOBBY
 * - FE_MENU_VERSION_MP_CHARACTER_SELECT
 * - FE_MENU_VERSION_MP_CHARACTER_CREATION
 * - FE_MENU_VERSION_EMPTY
 * - FE_MENU_VERSION_EMPTY_NO_BACKGROUND
 * - FE_MENU_VERSION_TEXT_SELECTION
 * - FE_MENU_VERSION_CORONA
 * - FE_MENU_VERSION_CORONA_LOBBY
 * - FE_MENU_VERSION_CORONA_JOINED_PLAYERS
 * - FE_MENU_VERSION_CORONA_INVITE_PLAYERS
 * - FE_MENU_VERSION_CORONA_INVITE_FRIENDS
 * - FE_MENU_VERSION_CORONA_INVITE_CREWS
 * - FE_MENU_VERSION_CORONA_INVITE_MATCHED_PLAYERS
 * - FE_MENU_VERSION_CORONA_INVITE_LAST_JOB_PLAYERS
 * - FE_MENU_VERSION_CORONA_RACE
 * - FE_MENU_VERSION_CORONA_BETTING
 * - FE_MENU_VERSION_JOINING_SCREEN
 * - FE_MENU_VERSION_LANDING_MENU
 * - FE_MENU_VERSION_LANDING_KEYMAPPING_MENU
 *
 * Hash: 0xEF01D36B9C9D0C7B | Since: 323
 * @deprecated Use hud.activateFrontendMenu(menuhash, togglePause, component) instead
 */
export declare function activateFrontendMenu(menuhash: number | string, togglePause: boolean, component: number): void;
/**
 * Before using this native click the native above and look at the decription.
 *
 * Example:
 * int GetHash = Function.Call<int>(Hash.GET_HASH_KEY, "fe_menu_version_corona_lobby");
 * Function.Call(Hash.ACTIVATE_FRONTEND_MENU, GetHash, 0, -1);
 * Function.Call(Hash.RESTART_FRONTEND_MENU(GetHash, -1);
 *
 * This native refreshes the frontend menu.
 *
 * p1 = Hash of Menu
 * p2 = Unknown but always works with -1.
 *
 * Hash: 0x10706DC6AD2D49C0 | Since: 323
 * @deprecated Use hud.restartFrontendMenu(menuHash) instead
 */
export declare function restartFrontendMenu(menuHash: number | string): void;
/**
 * `if (HUD::GET_CURRENT_FRONTEND_MENU_VERSION() == joaat("fe_menu_version_empty_no_background"))`
 *
 * Hash: 0x2309595AD6145265 | Since: 323
 * @deprecated Use hud.getCurrentFrontendMenuVersion() instead
 */
export declare function getCurrentFrontendMenuVersion(): number;
/**
 * No comment provided
 *
 * Hash: 0xDF47FC56C71569CF | Since: 323
 * @deprecated Use hud.setPauseMenuActive(toggle) instead
 */
export declare function setPauseMenuActive(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6D3465A73092F0E6 | Since: 323
 * @deprecated Use hud.disableFrontendThisFrame() instead
 */
export declare function disableFrontendThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0xBA751764F0821256 | Since: 323
 * @deprecated Use hud.suppressFrontendRenderingThisFrame() instead
 */
export declare function suppressFrontendRenderingThisFrame(): void;
/**
 * Allows opening the pause menu this frame, when the player is dead.
 *
 * Hash: 0xCC3FDDED67BCFC63 | Since: 323
 * @deprecated Use hud.allowPauseWhenNotInStateOfPlayThisFrame() instead
 */
export declare function allowPauseWhenNotInStateOfPlayThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x745711A75AB09277 | Since: 323
 * @deprecated Use hud.setFrontendActive(active) instead
 */
export declare function setFrontendActive(active: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB0034A223497FFCB | Since: 323
 * @deprecated Use hud.isPauseMenuActive() instead
 */
export declare function isPauseMenuActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2F057596F2BD0061 | Since: 323
 * @deprecated Use hud.isStorePendingNetworkShutdownToOpen() instead
 */
export declare function isStorePendingNetworkShutdownToOpen(): boolean;
/**
 * Returns:
 *
 * 0
 * 5
 * 10
 * 15
 * 20
 * 25
 * 30
 * 35
 *
 *
 * Hash: 0x272ACD84970869C5 | Since: 323
 * @deprecated Use hud.getPauseMenuState() instead
 */
export declare function getPauseMenuState(): number;
/**
 * No comment provided
 *
 * Hash: 0x5BFF36D6ED83E0AE | Since: 323
 * @deprecated Use hud.getPauseMenuPosition() instead
 */
export declare function getPauseMenuPosition(): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x1C491717107431C7 | Since: 323
 * @deprecated Use hud.isPauseMenuRestarting() instead
 */
export declare function isPauseMenuRestarting(): boolean;
/**
 * Not present in retail version of the game, actual definiton seems to be
 * _LOG_DEBUG_INFO(const char* category, const char* debugText);
 *
 * Hash: 0x2162C446DFDF38FD | Since: 323
 * @deprecated Use hud.forceScriptedGfxWhenFrontendActive() instead
 */
export declare function forceScriptedGfxWhenFrontendActive(): void;
/**
 * No comment provided
 *
 * Hash: 0x77F16B447824DA6C | Since: 323
 * @deprecated Use hud.pauseMenuceptionGoDeeper(page) instead
 */
export declare function pauseMenuceptionGoDeeper(page: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCDCA26E80FAECB8F | Since: 323
 * @deprecated Use hud.pauseMenuceptionTheKick() instead
 */
export declare function pauseMenuceptionTheKick(): void;
/**
 * No comment provided
 *
 * Hash: 0x2DE6C5E2E996F178 | Since: 372
 * @deprecated Use hud.pauseToggleFullscreenMap() instead
 */
export declare function pauseToggleFullscreenMap(): void;
/**
 * Activates the specified frontend menu context.
 * pausemenu.xml defines some specific menu options using 'context'. Context is basically a 'condition'.
 * The `*ALL*` part of the context means that whatever is being defined, will be active when any or all of those conditions after `*ALL*` are met.
 * The `*NONE*` part of the context section means that whatever is being defined, will NOT be active if any or all of the conditions after `*NONE*` are met.
 * This basically allows you to hide certain menu sections, or things like instructional buttons.
 *
 * Hash: 0xDD564BDD0472C936 | Since: 323
 * @deprecated Use hud.pauseMenuActivateContext(contextHash) instead
 */
export declare function pauseMenuActivateContext(contextHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x444D8CF241EC25C5 | Since: 323
 * @deprecated Use hud.pauseMenuDeactivateContext(contextHash) instead
 */
export declare function pauseMenuDeactivateContext(contextHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x84698AB38D0C6636 | Since: 323
 * @deprecated Use hud.pauseMenuIsContextActive(contextHash) instead
 */
export declare function pauseMenuIsContextActive(contextHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2A25ADC48F87841F | Since: 323
 * @deprecated Use hud.pauseMenuIsContextMenuActive() instead
 */
export declare function pauseMenuIsContextMenuActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDE03620F8703A9DF | Since: 323
 * @deprecated Use hud.pauseMenuGetHairColourIndex() instead
 */
export declare function pauseMenuGetHairColourIndex(): number;
/**
 * No comment provided
 *
 * Hash: 0x359AF31A4B52F5ED | Since: 323
 * @deprecated Use hud.pauseMenuGetMouseHoverIndex() instead
 */
export declare function pauseMenuGetMouseHoverIndex(): number;
/**
 * No comment provided
 *
 * Hash: 0x13C4B962653A5280 | Since: 323
 * @deprecated Use hud.pauseMenuGetMouseHoverUniqueId() instead
 */
export declare function pauseMenuGetMouseHoverUniqueId(): number;
/**
 * No comment provided
 *
 * Hash: 0xC8E1071177A23BE5 | Since: 323
 * @deprecated Use hud.pauseMenuGetMouseClickEvent() instead
 */
export declare function pauseMenuGetMouseClickEvent(): [boolean, any, any, any];
/**
 * No comment provided
 *
 * Hash: 0x4895BDEA16E7C080 | Since: 323
 * @deprecated Use hud.pauseMenuRedrawInstructionalButtons() instead
 */
export declare function pauseMenuRedrawInstructionalButtons(): void;
/**
 * No comment provided
 *
 * Hash: 0xC78E239AC5B2DDB9 | Since: 323
 * @deprecated Use hud.pauseMenuSetBusySpinner(position, spinnerIndex) instead
 */
export declare function pauseMenuSetBusySpinner(position: number, spinnerIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF06EBB91A81E09E3 | Since: 323
 * @deprecated Use hud.pauseMenuSetWarnOnTabChange() instead
 */
export declare function pauseMenuSetWarnOnTabChange(): void;
/**
 * No comment provided
 *
 * Hash: 0x3BAB9A4E4F2FF5C7 | Since: 323
 * @deprecated Use hud.isFrontendReadyForControl() instead
 */
export declare function isFrontendReadyForControl(): boolean;
/**
 * Disables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard. Not sure about controller. Does not disable mouse controls. No need to call this every tick.
 *
 * To enable the keys again, use `0x14621BB1DF14E2B2`.
 *
 * Hash: 0xEC9264727EEC0F28 | Since: 323
 * @deprecated Use hud.takeControlOfFrontend() instead
 */
export declare function takeControlOfFrontend(): void;
/**
 * Enables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard if they were disabled using the native below.
 * To disable the keys, use `0xEC9264727EEC0F28`
 *
 * Hash: 0x14621BB1DF14E2B2 | Since: 323
 * @deprecated Use hud.releaseControlOfFrontend() instead
 */
export declare function releaseControlOfFrontend(): void;
/**
 * No comment provided
 *
 * Hash: 0x66E7CB63C97B7D20 | Since: 323
 * @deprecated Use hud.codeWantsScriptToTakeControl() instead
 */
export declare function codeWantsScriptToTakeControl(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x593FEAE1F73392D4 | Since: 323
 * @deprecated Use hud.getScreenCodeWantsScriptToControl() instead
 */
export declare function getScreenCodeWantsScriptToControl(): number;
/**
 * No comment provided
 *
 * Hash: 0x4E3CD0EF8A489541 | Since: 323
 * @deprecated Use hud.isNavigatingMenuContent() instead
 */
export declare function isNavigatingMenuContent(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF284AC67940C6812 | Since: 323
 * @deprecated Use hud.hasMenuTriggerEventOccurred() instead
 */
export declare function hasMenuTriggerEventOccurred(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2E22FEFA0100275E | Since: 323
 * @deprecated Use hud.hasMenuLayoutChangedEventOccurred() instead
 */
export declare function hasMenuLayoutChangedEventOccurred(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0CF54F20DE43879C | Since: 323
 * @deprecated Use hud.setSavegameListUniqueId() instead
 */
export declare function setSavegameListUniqueId(): void;
/**
 * No comment provided
 *
 * Hash: 0x36C1451A88A09630 | Since: 323
 * @deprecated Use hud.getMenuTriggerEventDetails() instead
 */
export declare function getMenuTriggerEventDetails(): [number, number];
/**
 * lastItemMenuId: this is the menuID of the last selected item minus 1000 (lastItem.menuID - 1000)
 * selectedItemMenuId: same as lastItemMenuId except for the currently selected menu item
 * selectedItemUniqueId: this is uniqueID of the currently selected menu item
 *
 * when the pausemenu is closed:
 * lastItemMenuId = -1
 * selectedItemMenuId = -1
 * selectedItemUniqueId = 0
 *
 * when the header gains focus:
 * lastItemMenuId updates as normal or 0 if the pausemenu was just opened
 * selectedItemMenuId becomes a unique id for the pausemenu page that focus was taken from (?) or 0 if the pausemenu was just opened
 * selectedItemUniqueId = -1
 *
 * when focus is moved from the header to a pausemenu page:
 * lastItemMenuId becomes a unique id for the pausemenu page that focus was moved to (?)
 * selectedItemMenuId = -1
 * selectedItemUniqueId updates as normal
 *
 * Hash: 0x7E17BE53E1AAABAF | Since: 323
 * @deprecated Use hud.getMenuLayoutChangedEventDetails() instead
 */
export declare function getMenuLayoutChangedEventDetails(): [number, number, number];
/**
 * No comment provided
 *
 * Hash: 0xA238192F33110615 | Since: 323
 * @deprecated Use hud.getPmPlayerCrewColor() instead
 */
export declare function getPmPlayerCrewColor(): [boolean, number, number, number];
/**
 * No comment provided
 *
 * Hash: 0xEF4CED81CEBEDC6D | Since: 323
 * @deprecated Use hud.getMenuPedIntStat() instead
 */
export declare function getMenuPedIntStat(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xCA6B2F7CE32AB653 | Since: 323
 * @deprecated Use hud.getCharacterMenuPedIntStat() instead
 */
export declare function getCharacterMenuPedIntStat(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x90A6526CF0381030 | Since: 323
 * @deprecated Use hud.getMenuPedMaskedIntStat(statHash, mask) instead
 */
export declare function getMenuPedMaskedIntStat(statHash: number | string, mask: number): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x24A49BEAF468DC90 | Since: 323
 * @deprecated Use hud.getCharacterMenuPedMaskedIntStat(statHash, mask) instead
 */
export declare function getCharacterMenuPedMaskedIntStat(statHash: number | string, mask: number): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x5FBD7095FE7AE57F | Since: 323
 * @deprecated Use hud.getMenuPedFloatStat(statHash) instead
 */
export declare function getMenuPedFloatStat(statHash: number | string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x8F08017F9D7C47BD | Since: 323
 * @deprecated Use hud.getCharacterMenuPedFloatStat(statHash) instead
 */
export declare function getCharacterMenuPedFloatStat(statHash: number): [boolean, number];
/**
 * p0 was always 0xAE2602A3.
 *
 * Hash: 0x052991E59076E4E4 | Since: 323
 * @deprecated Use hud.getMenuPedBoolStat(statHash) instead
 */
export declare function getMenuPedBoolStat(statHash: number | string): [boolean, boolean];
/**
 * No comment provided
 *
 * Hash: 0x5E62BE5DC58E9E06 | Since: 323
 * @deprecated Use hud.clearPedInPauseMenu() instead
 */
export declare function clearPedInPauseMenu(): void;
/**
 * p1 is either 1 or 2 in the PC scripts.
 *
 * Hash: 0xAC0BFBDC3BE00E14 | Since: 323
 * @deprecated Use hud.givePedToPauseMenu(ped) instead
 */
export declare function givePedToPauseMenu(ped: number | Ped): void;
/**
 * Toggles the light state for the pause menu ped in frontend menus.
 *
 * This is used by R* in combination with `SET_PAUSE_MENU_PED_SLEEP_STATE` to toggle the "offline" or "online" state in the "friends" tab of the pause menu in GTA Online.
 *
 *
 * Example:
 * Lights On: https://vespura.com/hi/i/2019-04-01_16-09_540ee_1015.png
 * Lights Off: https://vespura.com/hi/i/2019-04-01_16-10_8b5e7_1016.png
 *
 * Hash: 0x3CA6050692BC61B0 | Since: 323
 * @deprecated Use hud.setPauseMenuPedLighting(state) instead
 */
export declare function setPauseMenuPedLighting(state: boolean): void;
/**
 * Toggles the pause menu ped sleep state for frontend menus.
 *
 * Example: https://vespura.com/hi/i/2019-04-01_15-51_8ed38_1014.gif
 *
 * `state` 0 will make the ped slowly fall asleep, 1 will slowly wake the ped up.
 *
 * Hash: 0xECF128344E9FF9F1 | Since: 323
 * @deprecated Use hud.setPauseMenuPedSleepState(state) instead
 */
export declare function setPauseMenuPedSleepState(state: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x805D7CBB36FD6C4C | Since: 323
 * @deprecated Use hud.openOnlinePoliciesMenu() instead
 */
export declare function openOnlinePoliciesMenu(): void;
/**
 * No comment provided
 *
 * Hash: 0xF13FE2A80C05C561 | Since: 323
 * @deprecated Use hud.areOnlinePoliciesUpToDate() instead
 */
export declare function areOnlinePoliciesUpToDate(): boolean;
/**
 * Returns the same as IS_SOCIAL_CLUB_ACTIVE
 *
 * Hash: 0x6F72CD94F7B5B68C | Since: 323
 * @deprecated Use hud.isOnlinePoliciesMenuActive() instead
 */
export declare function isOnlinePoliciesMenuActive(): boolean;
/**
 * Uses the `SOCIAL_CLUB2` scaleform.
 * menu: GALLERY, MISSIONS, CREWS, MIGRATE, PLAYLISTS, JOBS
 *
 * Hash: 0x75D3691713C3B05A | Since: 323
 * @deprecated Use hud.openSocialClubMenu(menu) instead
 */
export declare function openSocialClubMenu(menu: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xD2B32BE3FC1626C6 | Since: 323
 * @deprecated Use hud.closeSocialClubMenu() instead
 */
export declare function closeSocialClubMenu(): void;
/**
 * `HUD::SET_SOCIAL_CLUB_TOUR("Gallery");`
 * `HUD::SET_SOCIAL_CLUB_TOUR("Missions");`
 * `HUD::SET_SOCIAL_CLUB_TOUR("General");`
 * `HUD::SET_SOCIAL_CLUB_TOUR("Playlists");`
 *
 * Hash: 0x9E778248D6685FE0 | Since: 323
 * @deprecated Use hud.setSocialClubTour(name) instead
 */
export declare function setSocialClubTour(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0xC406BE343FC4B9AF | Since: 323
 * @deprecated Use hud.isSocialClubActive() instead
 */
export declare function isSocialClubActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1185A8087587322C | Since: 323
 * @deprecated Use hud.setTextInputBoxEnabled() instead
 */
export declare function setTextInputBoxEnabled(): void;
/**
 * No comment provided
 *
 * Hash: 0x8817605C2BA76200 | Since: 323
 * @deprecated Use hud.forceCloseTextInputBox() instead
 */
export declare function forceCloseTextInputBox(): void;
/**
 * No comment provided
 *
 * Hash: 0x577599CCED639CA2 | Since: 505
 * @deprecated Use hud.setAllowCommaOnTextInput() instead
 */
export declare function setAllowCommaOnTextInput(): void;
/**
 * No comment provided
 *
 * Hash: 0x6A1738B4323FE2D9 | Since: 573
 * @deprecated Use hud.overrideMpTextChatTeamString(gxtEntryHash) instead
 */
export declare function overrideMpTextChatTeamString(gxtEntryHash: number | string): void;
/**
 * Returns whether or not the text chat (MULTIPLAYER_CHAT Scaleform component) is active.
 *
 * Hash: 0xB118AF58B5F332A1 | Since: 323
 * @deprecated Use hud.isMpTextChatTyping() instead
 */
export declare function isMpTextChatTyping(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1AC8F4AD40E22127 | Since: 323
 * @deprecated Use hud.closeMpTextChat() instead
 */
export declare function closeMpTextChat(): void;
/**
 * No comment provided
 *
 * Hash: 0x7C226D5346D4D10A | Since: 372
 * @deprecated Use hud.mpTextChatIsTeamJob() instead
 */
export declare function mpTextChatIsTeamJob(): void;
/**
 * No comment provided
 *
 * Hash: 0xF47E567B3630DD12 | Since: 678
 * @deprecated Use hud.overrideMpTextChatColor(hudColor) instead
 */
export declare function overrideMpTextChatColor(hudColor: number): void;
/**
 * Hides the chat history, closes the input box and makes it unable to be opened unless called again with FALSE.
 *
 * Hash: 0x1DB21A44B09E8BA3 | Since: 323
 * @deprecated Use hud.mpTextChatDisable(toggle) instead
 */
export declare function mpTextChatDisable(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCEF214315D276FD1 | Since: 323
 * @deprecated Use hud.flagPlayerContextInTournament(toggle) instead
 */
export declare function flagPlayerContextInTournament(toggle: boolean): void;
/**
 * This native turns on the AI blip on the specified ped. It also disappears automatically when the ped is too far or if the ped is dead. You don't need to control it with other natives.
 *
 * See gtaforums.com/topic/884370-native-research-ai-blips for further information.
 *
 * Hash: 0xD30C50DF888D58B5 | Since: 323
 * @deprecated Use hud.setPedHasAiBlip(ped, hasCone) instead
 */
export declare function setPedHasAiBlip(ped: number | Ped, hasCone: boolean): void;
/**
 * color: see SET_BLIP_COLOUR
 *
 * Hash: 0xB13DCB4C6FAAD238 | Since: 505
 * @deprecated Use hud.setPedHasAiBlipWithColour(ped, hasCone, color) instead
 */
export declare function setPedHasAiBlipWithColour(ped: number | Ped, hasCone: boolean, color: number): void;
/**
 * No comment provided
 *
 * Hash: 0x15B8ECF844EE67ED | Since: 323
 * @deprecated Use hud.doesPedHaveAiBlip(ped) instead
 */
export declare function doesPedHaveAiBlip(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE52B8E7F85D39A08 | Since: 323
 * @deprecated Use hud.setPedAiBlipGangId(ped, gangId) instead
 */
export declare function setPedAiBlipGangId(ped: number | Ped, gangId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3EED80DFF7325CAA | Since: 323
 * @deprecated Use hud.setPedAiBlipHasCone(ped, toggle) instead
 */
export declare function setPedAiBlipHasCone(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0C4BBF625CA98C4E | Since: 323
 * @deprecated Use hud.setPedAiBlipForcedOn(ped, toggle) instead
 */
export declare function setPedAiBlipForcedOn(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x97C65887D4B37FA9 | Since: 323
 * @deprecated Use hud.setPedAiBlipNoticeRange(ped, range) instead
 */
export declare function setPedAiBlipNoticeRange(ped: number | Ped, range: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFCFACD0DB9D7A57D | Since: 877
 * @deprecated Use hud.setPedAiBlipSprite(ped, spriteId) instead
 */
export declare function setPedAiBlipSprite(ped: number | Ped, spriteId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7CD934010E115C2C | Since: 323
 * @deprecated Use hud.getAiPedPedBlipIndex(ped) instead
 */
export declare function getAiPedPedBlipIndex(ped: number | Ped): number;
/**
 * Returns the current AI BLIP for the specified ped
 *
 * Hash: 0x56176892826A4FE8 | Since: 323
 * @deprecated Use hud.getAiPedVehicleBlipIndex(ped) instead
 */
export declare function getAiPedVehicleBlipIndex(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xA277800A9EAE340E | Since: 323
 * @deprecated Use hud.hasDirectorModeBeenLaunchedByCode() instead
 */
export declare function hasDirectorModeBeenLaunchedByCode(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2632482FD6B9AB87 | Since: 323
 * @deprecated Use hud.setDirectorModeLaunchedByScript() instead
 */
export declare function setDirectorModeLaunchedByScript(): void;
/**
 * If toggle is true, hides special ability bar / character name in the pause menu
 * If toggle is false, shows special ability bar / character name in the pause menu
 *
 * Hash: 0x808519373FD336A3 | Since: 323
 * @deprecated Use hud.setPlayerIsInDirectorMode(toggle) instead
 */
export declare function setPlayerIsInDirectorMode(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x04655F9D075D0AE5 | Since: 323
 * @deprecated Use hud.setDirectorModeAvailable(toggle) instead
 */
export declare function setDirectorModeAvailable(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x243296A510B562B6 | Since: 2060
 * @deprecated Use hud.hidemarkersThisFrame() instead
 */
export declare function hideHudmarkersThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0xF49B58631D9E22D9 | Since: 1493
 * @deprecated Use interior.getHeading(interior1) instead
 */
export declare function getInteriorHeading(interior1: number): number;
/**
 * No comment provided
 *
 * Hash: 0x252BDC06B73FA6EA | Since: 1290
 * @deprecated Use interior.getLocationAndNamehash(interior1) instead
 */
export declare function getInteriorLocationAndNamehash(interior1: number): [Vector3, number];
/**
 * Returns the group ID of the specified interior.
 * 0 = default
 * 1 = subway station, subway tracks, sewers
 * 3 = train tunnel under mirror park
 * 5 = tunnel near del perro
 * 6 = train tunnel near chilliad
 * 7 = train tunnel near josiah
 * 8 = train tunnel in sandy shores
 * 9 = braddock tunnel (near chilliad)
 * 12 = tunnel under fort zancudo
 * 14 = train tunnel under cypress flats
 * 18 = rockford plaza parking garage
 * 19 = arcadius parking garage
 * 20 = union depository parking garage
 * 21 = fib parking garage
 *
 * Hash: 0xE4A84ABF135EF91A | Since: 323
 * @deprecated Use interior.getGroupId(interior1) instead
 */
export declare function getInteriorGroupId(interior1: number): number;
/**
 * No comment provided
 *
 * Hash: 0x9E3B3E6D66F6E22F | Since: 323
 * @deprecated Use interior.getOffsetFromInWorldCoords(interior1, pos) instead
 */
export declare function getOffsetFromInteriorInWorldCoords(interior1: number, pos: Vector3): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xBC72B5D7A1CBD54D | Since: 323
 * @deprecated Use interior.isScene() instead
 */
export declare function isInteriorScene(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x26B0E73D7EAAF4D3 | Since: 323
 * @deprecated Use interior.isValid(interior1) instead
 */
export declare function isValidInterior(interior1: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB365FC0C4E27FFA7 | Since: 323
 * @deprecated Use interior.clearRoomForEntity(entity) instead
 */
export declare function clearRoomForEntity(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x52923C4710DD9907 | Since: 323
 * @deprecated Use interior.forceRoomForEntity(entity, interior1, roomHashKey) instead
 */
export declare function forceRoomForEntity(entity: number | Entity, interior1: number, roomHashKey: number | string): void;
/**
 * Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.
 *
 * Hash: 0x47C2A06D4F5F424B | Since: 323
 * @deprecated Use interior.getRoomKeyFromEntity(entity) instead
 */
export declare function getRoomKeyFromEntity(entity: number | Entity): number;
/**
 * `Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY`
 *
 * Hash: 0x399685DB942336BC | Since: 323
 * @deprecated Use interior.getKeyForEntityInRoom(entity) instead
 */
export declare function getKeyForEntityInRoom(entity: number | Entity): number;
/**
 * Returns the handle of the interior that the entity is in. Returns 0 if outside.
 *
 * Hash: 0x2107BA504071A6BB | Since: 323
 * @deprecated Use interior.getFromEntity(entity) instead
 */
export declare function getInteriorFromEntity(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x82EBB79E258FA2B7 | Since: 323
 * @deprecated Use interior.retainEntityIn(entity, interior1) instead
 */
export declare function retainEntityInInterior(entity: number | Entity, interior1: number): void;
/**
 * Immediately removes entity from an interior. Like sets entity to `limbo` room.
 *
 * Hash: 0x85D5422B2039A70D | Since: 2189
 * @deprecated Use interior.clearStateOfEntity(entity) instead
 */
export declare function clearInteriorStateOfEntity(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x38C1CB1CB119A016 | Since: 1493
 * @deprecated Use interior.forceActivatingTrackingOnEntity() instead
 */
export declare function forceActivatingTrackingOnEntity(): void;
/**
 * No comment provided
 *
 * Hash: 0x920D853F3E17F1DA | Since: 323
 * @deprecated Use interior.forceRoomForGameViewport(interiorID, roomHashKey) instead
 */
export declare function forceRoomForGameViewport(interiorID: number, roomHashKey: number | string): void;
/**
 * Example of use (carmod_shop)
 * `INTERIOR::SET_ROOM_FOR_GAME_VIEWPORT_BY_NAME("V_CarModRoom");`
 *
 * Hash: 0xAF348AFCB575A441 | Since: 323
 * @deprecated Use interior.setRoomForGameViewportByName(roomName) instead
 */
export declare function setRoomForGameViewportByName(roomName: string): void;
/**
 * `Usage: INTERIOR::SET_ROOM_FOR_GAME_VIEWPORT_BY_KEY(INTERIOR::GET_KEY_FOR_ENTITY_IN_ROOM(PLAYER::PLAYER_PED_ID()));`
 *
 * Hash: 0x405DC2AEF6AF95B9 | Since: 323
 * @deprecated Use interior.setRoomForGameViewportByKey(roomHashKey) instead
 */
export declare function setRoomForGameViewportByKey(roomHashKey: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xA6575914D2A0B450 | Since: 323
 * @deprecated Use interior.getRoomKeyForGameViewport() instead
 */
export declare function getRoomKeyForGameViewport(): number;
/**
 * No comment provided
 *
 * Hash: 0x23B59D8912F94246 | Since: 323
 * @deprecated Use interior.clearRoomForGameViewport() instead
 */
export declare function clearRoomForGameViewport(): void;
/**
 * Returns the current interior id from gameplay camera
 *
 * Hash: 0xE7D267EC6CA966C3 | Since: 1604
 * @deprecated Use interior.getFromPrimaryView() instead
 */
export declare function getInteriorFromPrimaryView(): number;
/**
 * Returns interior ID from specified coordinates. If coordinates are outside, then it returns 0.
 *
 * Example for VB.NET
 * Dim interiorID As Integer = Native.Function.Call(Of Integer)(Hash.GET_INTERIOR_AT_COORDS, X, Y, Z)
 *
 * Hash: 0xB0F7F8663821D9C3 | Since: 323
 * @deprecated Use interior.getAtCoords(pos) instead
 */
export declare function getInteriorAtCoords(pos: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0x3F6167F351168730 | Since: 323
 * @deprecated Use interior.addPickupToRoomByName(pickup, roomName) instead
 */
export declare function addPickupToInteriorRoomByName(pickup: any, roomName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x2CA429C029CCF247 | Since: 323
 * @deprecated Use interior.pinInMemory(interior1) instead
 */
export declare function pinInteriorInMemory(interior1: number): void;
/**
 * `Does something similar to INTERIOR::DISABLE_INTERIOR.`
 *
 * `You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside.`
 *
 * Hash: 0x261CCE7EED010641 | Since: 323
 * @deprecated Use interior.unpin(interior1) instead
 */
export declare function unpinInterior(interior1: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6726BDCCC1932F0E | Since: 323
 * @deprecated Use interior.isReady(interior1) instead
 */
export declare function isInteriorReady(interior1: number): boolean;
/**
 * Only used once in the entire game scripts.
 * Does not actually return anything.
 *
 * Hash: 0x4C2330E61D3DEB56 | Since: 323
 * @deprecated Use interior.setInUse(interior1) instead
 */
export declare function setInteriorInUse(interior1: number): boolean;
/**
 * Returns the interior ID representing the requested interior at that location (if found?). The supplied interior string is not the same as the one used to load the interior.
 *
 * `Use: INTERIOR::UNPIN_INTERIOR(INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(x, y, z, interior))`
 *
 * Interior types include: "V_Michael", "V_Franklins", "V_Franklinshouse", etc.. you can find them in the scripts.
 *
 * Not a very useful native as you could just use GET_INTERIOR_AT_COORDS instead and get the same result, without even having to specify the interior type.
 *
 * Hash: 0x05B7A89BD78797FC | Since: 323
 * @deprecated Use interior.getAtCoordsWithType(pos, interiorType) instead
 */
export declare function getInteriorAtCoordsWithType(pos: Vector3, interiorType: string): number;
/**
 * Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
 *
 * Hash: 0xF0F77ADB9F67E79D | Since: 323
 * @deprecated Use interior.getAtCoordsWithTypehash(pos, typeHash) instead
 */
export declare function getInteriorAtCoordsWithTypehash(pos: Vector3, typeHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x483ACA1176CA93F1 | Since: 1103
 * @deprecated Use interior.activateGroupsUsingCamera() instead
 */
export declare function activateInteriorGroupsUsingCamera(): void;
/**
 * Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
 *
 * Hash: 0xEEA5AC2EDA7C33E8 | Since: 323
 * @deprecated Use interior.isCollisionMarkedOutside(pos) instead
 */
export declare function isCollisionMarkedOutside(pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEC4CF9FCB29A4424 | Since: 323
 * @deprecated Use interior.getFromCollision(pos) instead
 */
export declare function getInteriorFromCollision(pos: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0x7ECDF98587E92DEC | Since: 1604
 * @deprecated Use interior.enableStadiumProbesThisFrame(toggle) instead
 */
export declare function enableStadiumProbesThisFrame(toggle: boolean): void;
/**
 * More info: http://gtaforums.com/topic/836367-adding-props-to-interiors/
 *
 * Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
 *
 * Hash: 0x55E86AF2712B36A1 | Since: 323
 * @deprecated Use interior.activateEntitySet(interior1, entitySetName) instead
 */
export declare function activateInteriorEntitySet(interior1: number, entitySetName: string): void;
/**
 * Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
 *
 * Hash: 0x420BD37289EEE162 | Since: 323
 * @deprecated Use interior.deactivateEntitySet(interior1, entitySetName) instead
 */
export declare function deactivateInteriorEntitySet(interior1: number, entitySetName: string): void;
/**
 * Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
 *
 * Hash: 0x35F7DD45E8C0A16D | Since: 323
 * @deprecated Use interior.isEntitySetActive(interior1, entitySetName) instead
 */
export declare function isInteriorEntitySetActive(interior1: number, entitySetName: string): boolean;
/**
 * Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
 *
 * Hash: 0xC1F1920BAF281317 | Since: 877
 * @deprecated Use interior.setEntitySetTintIndex(interior1, entitySetName, color) instead
 */
export declare function setInteriorEntitySetTintIndex(interior1: number, entitySetName: string, color: number): void;
/**
 * No comment provided
 *
 * Hash: 0x41F37C3427C75AE0 | Since: 323
 * @deprecated Use interior.refresh(interior1) instead
 */
export declare function refreshInterior(interior1: number): void;
/**
 * This is the native that is used to hide the exterior of GTA Online apartment buildings when you are inside an apartment.
 *
 * More info: http://gtaforums.com/topic/836301-hiding-gta-online-apartment-exteriors/
 *
 * Hash: 0xA97F257D0151A6AB | Since: 323
 * @deprecated Use interior.enableExteriorCullModelThisFrame(mapObjectHash) instead
 */
export declare function enableExteriorCullModelThisFrame(mapObjectHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x50C375537449F369 | Since: 757
 * @deprecated Use interior.enableShadowCullModelThisFrame(mapObjectHash) instead
 */
export declare function enableShadowCullModelThisFrame(mapObjectHash: number | string): void;
/**
 * Example:
 * This removes the interior from the strip club and when trying to walk inside the player just falls:
 *
 * `INTERIOR::DISABLE_INTERIOR(118018, true);`
 *
 * Hash: 0x6170941419D7D8EC | Since: 323
 * @deprecated Use interior.disable(interior1, toggle) instead
 */
export declare function disableInterior(interior1: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBC5115A5A939DD15 | Since: 323
 * @deprecated Use interior.isDisabled(interior1) instead
 */
export declare function isInteriorDisabled(interior1: number): boolean;
/**
 * `Does something similar to INTERIOR::DISABLE_INTERIOR`
 *
 * Hash: 0xD9175F941610DB54 | Since: 323
 * @deprecated Use interior.cap(interior1, toggle) instead
 */
export declare function capInterior(interior1: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x92BAC8ACF88CEC26 | Since: 323
 * @deprecated Use interior.isCapped(interior1) instead
 */
export declare function isInteriorCapped(interior1: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9E6542F0CE8E70A3 | Since: 323
 * @deprecated Use interior.disableMetroSystem(toggle) instead
 */
export declare function disableMetroSystem(toggle: boolean): void;
/**
 * Jenkins hash _might_ be 0xFC227584.
 *
 * Hash: 0x7241CCB7D020DB69 | Since: 791
 * @deprecated Use interior.setIsExteriorOnly(entity, toggle) instead
 */
export declare function setIsExteriorOnly(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x35AD299F50D91B24 | Since: 323
 * @deprecated Use itemset.create() instead
 */
export declare function createItemset(): number;
/**
 * No comment provided
 *
 * Hash: 0xDE18220B1C183EDA | Since: 323
 * @deprecated Use itemset.destroy(itemset1) instead
 */
export declare function destroyItemset(itemset1: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB1B1EA596344DFAB | Since: 323
 * @deprecated Use itemset.isValid(itemset1) instead
 */
export declare function isItemsetValid(itemset1: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE3945201F14637DD | Since: 323
 * @deprecated Use itemset.addTo(item, itemset1) instead
 */
export declare function addToItemset(item: number, itemset1: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x25E68244B0177686 | Since: 323
 * @deprecated Use itemset.removeFrom(item, itemset1) instead
 */
export declare function removeFromItemset(item: number, itemset1: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD9127E83ABF7C631 | Since: 323
 * @deprecated Use itemset.getSize(itemset1) instead
 */
export declare function getItemsetSize(itemset1: number): number;
/**
 * No comment provided
 *
 * Hash: 0x7A197E2521EE2BAB | Since: 323
 * @deprecated Use itemset.getIndexedItemIn(index, itemset1) instead
 */
export declare function getIndexedItemInItemset(index: number, itemset1: number): number;
/**
 * No comment provided
 *
 * Hash: 0x2D0FC594D1E9C107 | Since: 323
 * @deprecated Use itemset.isIn(item, itemset1) instead
 */
export declare function isInItemset(item: number, itemset1: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x41BC0D722FC04221 | Since: 323
 * @deprecated Use itemset.clean(itemset1) instead
 */
export declare function cleanItemset(itemset1: number): void;
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0xF2CA003F167E21D2 | Since: 323
 * @deprecated Use lobby.autoMultiplayerMenu() instead
 */
export declare function lobbyAutoMultiplayerMenu(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEF7D17BC6C85264C | Since: 323
 * @deprecated Use lobby.autoMultiplayerFreemode() instead
 */
export declare function lobbyAutoMultiplayerFreemode(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB0C56BD3D808D863 | Since: 323
 * @deprecated Use lobby.setAutoMultiplayer(toggle) instead
 */
export declare function lobbySetAutoMultiplayer(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8AA464D4E0F6ACCD | Since: 323
 * @deprecated Use lobby.autoMultiplayerEvent() instead
 */
export declare function lobbyAutoMultiplayerEvent(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFC309E94546FCDB5 | Since: 323
 * @deprecated Use lobby.setAutoMultiplayerEvent(toggle) instead
 */
export declare function lobbySetAutoMultiplayerEvent(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC6DC823253FBB366 | Since: 323
 * @deprecated Use lobby.autoMultiplayerRandomJob() instead
 */
export declare function lobbyAutoMultiplayerRandomJob(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC7E7181C09F33B69 | Since: 323
 * @deprecated Use lobby.setAutoMpRandomJob(toggle) instead
 */
export declare function lobbySetAutoMpRandomJob(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xFA1E0E893D915215 | Since: 323
 * @deprecated Use lobby.shutdownSessionClearsAutoMultiplayer(toggle) instead
 */
export declare function shutdownSessionClearsAutoMultiplayer(toggle: boolean): void;
/**
 * Same return values as GET_CURRENT_LANGUAGE
 *
 * Hash: 0x497420E022796B3F | Since: 877
 * @deprecated Use localization.getSystemLanguage() instead
 */
export declare function localizationGetSystemLanguage(): number;
/**
 * 0 = american (en-US)
 * 1 = french (fr-FR)
 * 2 = german (de-DE)
 * 3 = italian (it-IT)
 * 4 = spanish (es-ES)
 * 5 = brazilian (pt-BR)
 * 6 = polish (pl-PL)
 * 7 = russian (ru-RU)
 * 8 = korean (ko-KR)
 * 9 = chinesetrad (zh-TW)
 * 10 = japanese (ja-JP)
 * 11 = mexican (es-MX)
 * 12 = chinesesimp (zh-CN)
 *
 * Hash: 0x2BDD44CC428A7EAE | Since: 323
 * @deprecated Use localization.getCurrentLanguage() instead
 */
export declare function getCurrentLanguage(): number;
/**
 * Possible return values: 0, 1, 2
 *
 * Hash: 0xA8AE43AEC1A61314 | Since: 323
 * @deprecated Use localization.getSystemDateType() instead
 */
export declare function localizationGetSystemDateType(): number;
/**
 * No comment provided
 *
 * Hash: 0x8B3CA62B1EF19B62 | Since: 323
 * @deprecated Use misc.getAllocatedStackSize() instead
 */
export declare function getAllocatedStackSize(): number;
/**
 * No comment provided
 *
 * Hash: 0xFEAD16FC8F9DFC0F | Since: 323
 * @deprecated Use misc.getNumberOfFreeStacksOfThisSize(stackSize) instead
 */
export declare function getNumberOfFreeStacksOfThisSize(stackSize: number): number;
/**
 * No comment provided
 *
 * Hash: 0x444D98F98C11F3EC | Since: 323
 * @deprecated Use misc.setRandomSeed(seed) instead
 */
export declare function setRandomSeed(seed: number): void;
/**
 * Maximum value is 1.
 * At a value of 0 the game will still run at a minimum time scale.
 *
 * Slow Motion 1: 0.6
 * Slow Motion 2: 0.4
 * Slow Motion 3: 0.2
 *
 * Hash: 0x1D408577D440E81E | Since: 323
 * @deprecated Use misc.setTimeScale(timeScale) instead
 */
export declare function setTimeScale(timeScale: number): void;
/**
 * If true, the player can't save the game.
 *
 *
 * If the parameter is true, sets the mission flag to true, if the parameter is false, the function does nothing at all.
 *
 * ^ also, if the mission flag is already set, the function does nothing at all
 *
 * Hash: 0xC4301E5121A0ED73 | Since: 323
 * @deprecated Use misc.setMissionFlag(toggle) instead
 */
export declare function setMissionFlag(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA33CDCCDA663159E | Since: 323
 * @deprecated Use misc.getMissionFlag() instead
 */
export declare function getMissionFlag(): boolean;
/**
 * If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.
 * Does nothing if the mission flag is set.
 *
 * Hash: 0x971927086CFD2158 | Since: 323
 * @deprecated Use misc.setRandomEventFlag(toggle) instead
 */
export declare function setRandomEventFlag(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD2D57F1D764117B1 | Since: 323
 * @deprecated Use misc.getRandomEventFlag() instead
 */
export declare function getRandomEventFlag(): boolean;
/**
 * Returns pointer to an empty string.
 *
 * Hash: 0x24DA7D7667FD7B09 | Since: 323
 * @deprecated Use misc.getContentToLoad() instead
 */
export declare function getContentToLoad(): string;
/**
 * Does nothing (it's a nullsub). Seems to be PS4 specific.
 *
 * Hash: 0x4DCDF92BF64236CD | Since: 323
 * @deprecated Use misc.activityFeedCreate() instead
 */
export declare function activityFeedCreate(): void;
/**
 * Does nothing (it's a nullsub). Seems to be PS4 specific.
 *
 * Hash: 0x31125FD509D9043F | Since: 323
 * @deprecated Use misc.activityFeedAddSubstringToCaption() instead
 */
export declare function activityFeedAddSubstringToCaption(): void;
/**
 * Does nothing (it's a nullsub). Seems to be PS4 specific.
 *
 * Hash: 0xEBD3205A207939ED | Since: 323
 * @deprecated Use misc.activityFeedAddLiteralSubstringToCaption() instead
 */
export declare function activityFeedAddLiteralSubstringToCaption(): void;
/**
 * Does nothing (it's a nullsub). Seems to be PS4 specific.
 *
 * Hash: 0x97E7E2C04245115B | Since: 323
 * @deprecated Use misc.activityFeedAddIntToCaption() instead
 */
export declare function activityFeedAddIntToCaption(): void;
/**
 * Does nothing (it's a nullsub). Seems to be PS4 specific.
 *
 * Hash: 0x916CA67D26FD1E37 | Since: 2060
 * @deprecated Use misc.activityFeedLargeImageUrl() instead
 */
export declare function activityFeedLargeImageUrl(): void;
/**
 * Does nothing (it's a nullsub). Seems to be PS4 specific.
 *
 * Hash: 0xEB078CA2B5E82ADD | Since: 323
 * @deprecated Use misc.activityFeedActionStartWithCommandLine() instead
 */
export declare function activityFeedActionStartWithCommandLine(): void;
/**
 * Does nothing (it's a nullsub). Seems to be PS4 specific.
 *
 * Hash: 0x703CC7F60CBB2B57 | Since: 323
 * @deprecated Use misc.activityFeedActionStartWithCommandLineAdd() instead
 */
export declare function activityFeedActionStartWithCommandLineAdd(): void;
/**
 * Does nothing (it's a nullsub). Seems to be PS4 specific.
 *
 * Hash: 0x8951EB9C6906D3C8 | Since: 323
 * @deprecated Use misc.activityFeedPost() instead
 */
export declare function activityFeedPost(): void;
/**
 * Does nothing (it's a nullsub). Seems to be PS4 specific.
 *
 * Used only once in the scripts (ingamehud) with p0 = "AF_GAMEMODE"
 *
 * Hash: 0xBA4B8D83BDC75551 | Since: 323
 * @deprecated Use misc.activityFeedOnlinePlayedWithPost() instead
 */
export declare function activityFeedOnlinePlayedWithPost(): void;
/**
 * Hardcoded to return false.
 *
 * Hash: 0xE8B9C0EC9E183F35 | Since: 323
 * @deprecated Use misc.hasResumedFromSuspend() instead
 */
export declare function hasResumedFromSuspend(): boolean;
/**
 * Sets GtaThread+0x14A
 *
 * Hash: 0x65D2EBB47E1CEC21 | Since: 323
 * @deprecated Use misc.setScriptHighPrio(toggle) instead
 */
export declare function setScriptHighPrio(toggle: boolean): void;
/**
 * Sets bit 3 in GtaThread+0x150
 *
 * Hash: 0x6F2135B6129620C1 | Since: 323
 * @deprecated Use misc.setThisIsATriggerScript(toggle) instead
 */
export declare function setThisIsATriggerScript(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8D74E26F54B4E5C3 | Since: 323
 * @deprecated Use misc.informCodeOfContentIdOfCurrentUgcMission() instead
 */
export declare function informCodeOfContentIdOfCurrentUgcMission(): void;
/**
 * No comment provided
 *
 * Hash: 0xB335F761606DB47C | Since: 323
 * @deprecated Use misc.getBaseElementLocationFromMetadataBlock() instead
 */
export declare function getBaseElementLocationFromMetadataBlock(): [boolean, any, any];
/**
 * Returns current weather name hash
 *
 * Hash: 0x564B884A05EC45A3 | Since: 323
 * @deprecated Use misc.getPrevWeatherTypeHashName() instead
 */
export declare function getPrevWeatherTypeHashName(): number;
/**
 * Returns weather name hash
 *
 * Hash: 0x711327CD09C8F162 | Since: 323
 * @deprecated Use misc.getNextWeatherTypeHashName() instead
 */
export declare function getNextWeatherTypeHashName(): number;
/**
 * No comment provided
 *
 * Hash: 0x44F28F86433B10A9 | Since: 323
 * @deprecated Use misc.isPrevWeatherType(weatherType) instead
 */
export declare function isPrevWeatherType(weatherType: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2FAA3A30BEC0F25D | Since: 323
 * @deprecated Use misc.isNextWeatherType(weatherType) instead
 */
export declare function isNextWeatherType(weatherType: string): boolean;
/**
 * The following weatherTypes are used in the scripts:
 * "CLEAR"
 * "EXTRASUNNY"
 * "CLOUDS"
 * "OVERCAST"
 * "RAIN"
 * "CLEARING"
 * "THUNDER"
 * "SMOG"
 * "FOGGY"
 * "XMAS"
 * "SNOW"
 * "SNOWLIGHT"
 * "BLIZZARD"
 * "HALLOWEEN"
 * "NEUTRAL"
 *
 * Hash: 0x704983DF373B198F | Since: 323
 * @deprecated Use misc.setWeatherTypePersist(weatherType) instead
 */
export declare function setWeatherTypePersist(weatherType: string): void;
/**
 * The following weatherTypes are used in the scripts:
 * "CLEAR"
 * "EXTRASUNNY"
 * "CLOUDS"
 * "OVERCAST"
 * "RAIN"
 * "CLEARING"
 * "THUNDER"
 * "SMOG"
 * "FOGGY"
 * "XMAS"
 * "SNOW"
 * "SNOWLIGHT"
 * "BLIZZARD"
 * "HALLOWEEN"
 * "NEUTRAL"
 *
 * Hash: 0xED712CA327900C8A | Since: 323
 * @deprecated Use misc.setWeatherTypeNowPersist(weatherType) instead
 */
export declare function setWeatherTypeNowPersist(weatherType: string): void;
/**
 * The following weatherTypes are used in the scripts:
 * "CLEAR"
 * "EXTRASUNNY"
 * "CLOUDS"
 * "OVERCAST"
 * "RAIN"
 * "CLEARING"
 * "THUNDER"
 * "SMOG"
 * "FOGGY"
 * "XMAS"
 * "SNOW"
 * "SNOWLIGHT"
 * "BLIZZARD"
 * "HALLOWEEN"
 * "NEUTRAL"
 *
 * Hash: 0x29B487C359E19889 | Since: 323
 * @deprecated Use misc.setWeatherTypeNow(weatherType) instead
 */
export declare function setWeatherTypeNow(weatherType: string): void;
/**
 * No comment provided
 *
 * Hash: 0xFB5045B7C42B75BF | Since: 323
 * @deprecated Use misc.setWeatherTypeOvertimePersist(weatherType, time) instead
 */
export declare function setWeatherTypeOvertimePersist(weatherType: string, time: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8B05F884CF7E8020 | Since: 323
 * @deprecated Use misc.setRandomWeatherType() instead
 */
export declare function setRandomWeatherType(): void;
/**
 * No comment provided
 *
 * Hash: 0xCCC39339BEF76CF5 | Since: 323
 * @deprecated Use misc.clearWeatherTypePersist() instead
 */
export declare function clearWeatherTypePersist(): void;
/**
 * No comment provided
 *
 * Hash: 0x0CF97F497FE7D048 | Since: 1103
 * @deprecated Use misc.clearWeatherTypeNowPersistNetwork(milliseconds) instead
 */
export declare function clearWeatherTypeNowPersistNetwork(milliseconds: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF3BBE884A14BB413 | Since: 323
 * @deprecated Use misc.getCurrWeatherState() instead
 */
export declare function getCurrWeatherState(): [number, number, number];
/**
 * Mixes two weather types. If percentWeather2 is set to 0.0f, then the weather will be entirely of weatherType1, if it is set to 1.0f it will be entirely of weatherType2. If it's set somewhere in between, there will be a mixture of weather behaviors. To test, try this in the RPH console, and change the float to different values between 0 and 1:
 *
 * execute "NativeFunction.Natives.x578C752848ECFA0C(Game.GetHashKey(""RAIN""), Game.GetHashKey(""SMOG""), 0.50f);
 *
 * Note that unlike most of the other weather natives, this native takes the hash of the weather name, not the plain string. These are the weather names and their hashes:
 *
 * CLEAR  0x36A83D84
 * EXTRASUNNY  0x97AA0A79
 * CLOUDS  0x30FDAF5C
 * OVERCAST    0xBB898D2D
 * RAIN    0x54A69840
 * CLEARING    0x6DB1A50D
 * THUNDER 0xB677829F
 * SMOG    0x10DCF4B5
 * FOGGY   0xAE737644
 * XMAS    0xAAC9C895
 * SNOWLIGHT   0x23FB812B
 * BLIZZARD    0x27EA2814
 *
 *
 *
 *
 *
 * \/\* OLD INVALID INFO BELOW \*\/
 * Not tested. Based purely on disassembly. Instantly sets the weather to sourceWeather, then transitions to targetWeather over the specified transitionTime in seconds.
 *
 * If an invalid hash is specified for sourceWeather, the current weather type will be used.
 * If an invalid hash is specified for targetWeather, the next weather type will be used.
 * If an invalid hash is specified for both sourceWeather and targetWeather, the function just changes the transition time of the current transition.
 *
 * Hash: 0x578C752848ECFA0C | Since: 323
 * @deprecated Use misc.setCurrWeatherState(weatherType1, weatherType2, percentWeather2) instead
 */
export declare function setCurrWeatherState(weatherType1: number | string, weatherType2: number | string, percentWeather2: number): void;
/**
 * Appears to have an optional bool parameter that is unused in the scripts.
 *
 * If you pass true, something will be set to zero.
 *
 * Hash: 0xA43D5C6FE51ADBEF | Since: 323
 * @deprecated Use misc.setOverrideWeather(weatherType) instead
 */
export declare function setOverrideWeather(weatherType: string): void;
/**
 * Identical to SET_OVERRIDE_WEATHER but has an additional BOOL param that sets some weather var to 0 if true
 *
 * Hash: 0x1178E104409FE58C | Since: 2189
 * @deprecated Use misc.setOverrideWeatherex(weatherType) instead
 */
export declare function setOverrideWeatherex(weatherType: string): void;
/**
 * No comment provided
 *
 * Hash: 0x338D2E3477711050 | Since: 323
 * @deprecated Use misc.clearOverrideWeather() instead
 */
export declare function clearOverrideWeather(): void;
/**
 * No comment provided
 *
 * Hash: 0xB8F87EAD7533B176 | Since: 323
 * @deprecated Use misc.waterOverrideSetShorewaveamplitude(amplitude) instead
 */
export declare function waterOverrideSetShorewaveamplitude(amplitude: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC3EAD29AB273ECE8 | Since: 323
 * @deprecated Use misc.waterOverrideSetShorewaveminamplitude(minAmplitude) instead
 */
export declare function waterOverrideSetShorewaveminamplitude(minAmplitude: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA7A1127490312C36 | Since: 323
 * @deprecated Use misc.waterOverrideSetShorewavemaxamplitude(maxAmplitude) instead
 */
export declare function waterOverrideSetShorewavemaxamplitude(maxAmplitude: number): void;
/**
 * No comment provided
 *
 * Hash: 0x31727907B2C43C55 | Since: 323
 * @deprecated Use misc.waterOverrideSetOceannoiseminamplitude(minAmplitude) instead
 */
export declare function waterOverrideSetOceannoiseminamplitude(minAmplitude: number): void;
/**
 * No comment provided
 *
 * Hash: 0x405591EC8FD9096D | Since: 323
 * @deprecated Use misc.waterOverrideSetOceanwaveamplitude(amplitude) instead
 */
export declare function waterOverrideSetOceanwaveamplitude(amplitude: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF751B16FB32ABC1D | Since: 323
 * @deprecated Use misc.waterOverrideSetOceanwaveminamplitude(minAmplitude) instead
 */
export declare function waterOverrideSetOceanwaveminamplitude(minAmplitude: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB3E6360DDE733E82 | Since: 323
 * @deprecated Use misc.waterOverrideSetOceanwavemaxamplitude(maxAmplitude) instead
 */
export declare function waterOverrideSetOceanwavemaxamplitude(maxAmplitude: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7C9C0B1EEB1F9072 | Since: 323
 * @deprecated Use misc.waterOverrideSetRipplebumpiness(bumpiness) instead
 */
export declare function waterOverrideSetRipplebumpiness(bumpiness: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6216B116083A7CB4 | Since: 323
 * @deprecated Use misc.waterOverrideSetRippleminbumpiness(minBumpiness) instead
 */
export declare function waterOverrideSetRippleminbumpiness(minBumpiness: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9F5E6BB6B34540DA | Since: 323
 * @deprecated Use misc.waterOverrideSetRipplemaxbumpiness(maxBumpiness) instead
 */
export declare function waterOverrideSetRipplemaxbumpiness(maxBumpiness: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB9854DFDE0D833D6 | Since: 323
 * @deprecated Use misc.waterOverrideSetRippledisturb(disturb) instead
 */
export declare function waterOverrideSetRippledisturb(disturb: number): void;
/**
 * This seems to edit the water wave, intensity around your current location.
 *
 * 0.0f = Normal
 * 1.0f = So Calm and Smooth, a boat will stay still.
 * 3.0f = Really Intense.
 *
 * Hash: 0xC54A08C85AE4D410 | Since: 323
 * @deprecated Use misc.waterOverrideSetStrength(strength) instead
 */
export declare function waterOverrideSetStrength(strength: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA8434F1DFF41D6E7 | Since: 323
 * @deprecated Use misc.waterOverrideFadeIn() instead
 */
export declare function waterOverrideFadeIn(): void;
/**
 * No comment provided
 *
 * Hash: 0xC3C221ADDDE31A11 | Since: 323
 * @deprecated Use misc.waterOverrideFadeOut() instead
 */
export declare function waterOverrideFadeOut(): void;
/**
 * Sets the the normalized wind speed value. The wind speed clamps always at 12.0, SET_WIND sets the wind in a percentage, 0.0 is 0 and 1.0 is 12.0. Setting this value to a negative number resumes the random wind speed changes provided by the game.
 *
 * Hash: 0xAC3A74E8384A9919 | Since: 323
 * @deprecated Use misc.setWind(speed) instead
 */
export declare function setWind(speed: number): void;
/**
 * Using this native will set the absolute wind speed value. The wind speed clamps to a range of 0.0- 12.0. Setting this value to a negative number resumes the random wind speed changes provided by the game.
 *
 * Hash: 0xEE09ECEDBABE47FC | Since: 323
 * @deprecated Use misc.setWindSpeed(speed) instead
 */
export declare function setWindSpeed(speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA8CF1CC0AFCD3F12 | Since: 323
 * @deprecated Use misc.getWindSpeed() instead
 */
export declare function getWindSpeed(): number;
/**
 * The wind direction in radians
 * 180 degrees (PI), wind will blow from the south. Setting this value to a negative number resumes the random wind direction changes provided by the game.
 *
 * Hash: 0xEB0F4468467B4528 | Since: 323
 * @deprecated Use misc.setWindDirection(direction) instead
 */
export declare function setWindDirection(direction: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1F400FEF721170DA | Since: 323
 * @deprecated Use misc.getWindDirection() instead
 */
export declare function getWindDirection(): Vector3;
/**
 * With an `intensity` higher than `0.5f`, only the creation of puddles gets faster, rain and rain sound won't increase after that.
 * With an `intensity` of `0.0f` rain and rain sounds are disabled and there won't be any new puddles.
 * To use the rain intensity of the current weather, call this native with `-1f` as `intensity`.
 *
 * Hash: 0x643E26EA6E024D92 | Since: 323
 * @deprecated Use misc.setRain(intensity) instead
 */
export declare function setRain(intensity: number): void;
/**
 * No comment provided
 *
 * Hash: 0x96695E368AD855F3 | Since: 323
 * @deprecated Use misc.getRainLevel() instead
 */
export declare function getRainLevel(): number;
/**
 * No comment provided
 *
 * Hash: 0x7F06937B0CDCBC1A | Since: 1868
 * @deprecated Use misc.setSnow(level) instead
 */
export declare function setSnow(level: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC5868A966E5BE3AE | Since: 323
 * @deprecated Use misc.getSnowLevel() instead
 */
export declare function getSnowLevel(): number;
/**
 * creates single lightning+thunder at random position
 *
 * Hash: 0xF6062E089251C898 | Since: 323
 * @deprecated Use misc.forceLightningFlash() instead
 */
export declare function forceLightningFlash(): void;
/**
 * No comment provided
 *
 * Hash: 0x02DEAAC8F8EA7FE7 | Since: 323
 * @deprecated Use misc.setCloudSettingsOverride() instead
 */
export declare function setCloudSettingsOverride(): void;
/**
 * No comment provided
 *
 * Hash: 0x11B56FBBF7224868 | Since: 323
 * @deprecated Use misc.preloadCloudHat(name) instead
 */
export declare function preloadCloudHat(name: string): void;
/**
 * The following cloudhats are useable:
 * altostratus
 * Cirrus
 * cirrocumulus
 * Clear 01
 * Cloudy 01
 * Contrails
 * Horizon
 * horizonband1
 * horizonband2
 * horizonband3
 * horsey
 * Nimbus
 * Puffs
 * RAIN
 * Snowy 01
 * Stormy 01
 * stratoscumulus
 * Stripey
 * shower
 * Wispy
 *
 *
 * Hash: 0xFC4842A34657BFCB | Since: 323
 * @deprecated Use misc.loadCloudHat(name, transitionTime) instead
 */
export declare function loadCloudHat(name: string, transitionTime: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA74802FB8D0B7814 | Since: 323
 * @deprecated Use misc.unloadCloudHat(name) instead
 */
export declare function unloadCloudHat(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0x957E790EA1727B64 | Since: 323
 * @deprecated Use misc.unloadAllCloudHats() instead
 */
export declare function unloadAllCloudHats(): void;
/**
 * No comment provided
 *
 * Hash: 0xF36199225D6D8C86 | Since: 323
 * @deprecated Use misc.setCloudsAlpha(opacity) instead
 */
export declare function setCloudsAlpha(opacity: number): void;
/**
 * No comment provided
 *
 * Hash: 0x20AC25E781AE4A84 | Since: 323
 * @deprecated Use misc.getCloudsAlpha() instead
 */
export declare function getCloudsAlpha(): number;
/**
 * No comment provided
 *
 * Hash: 0x9CD27B0045628463 | Since: 323
 * @deprecated Use misc.getGameTimer() instead
 */
export declare function getGameTimer(): number;
/**
 * No comment provided
 *
 * Hash: 0x15C40837039FFAF7 | Since: 323
 * @deprecated Use misc.getFrameTime() instead
 */
export declare function getFrameTime(): number;
/**
 * No comment provided
 *
 * Hash: 0xE599A503B3837E1B | Since: 323
 * @deprecated Use misc.getSystemTimeStep() instead
 */
export declare function getSystemTimeStep(): number;
/**
 * No comment provided
 *
 * Hash: 0xFC8202EFC642E6F2 | Since: 323
 * @deprecated Use misc.getFrameCount() instead
 */
export declare function getFrameCount(): number;
/**
 * No comment provided
 *
 * Hash: 0x313CE5879CEB6FCD | Since: 323
 * @deprecated Use misc.getRandomFloatInRange(startRange, endRange) instead
 */
export declare function getRandomFloatInRange(startRange: number, endRange: number): number;
/**
 * No comment provided
 *
 * Hash: 0xD53343AA4FB7DD28 | Since: 323
 * @deprecated Use misc.getRandomIntInRange(startRange, endRange) instead
 */
export declare function getRandomIntInRange(startRange: number, endRange: number): number;
/**
 * No comment provided
 *
 * Hash: 0xF2D49816A804D134 | Since: 1734
 * @deprecated Use misc.getRandomMwcIntInRange(startRange, endRange) instead
 */
export declare function getRandomMwcIntInRange(startRange: number, endRange: number): number;
/**
 * Gets the ground elevation at the specified position. Note that if the specified position is below ground level, the function will output zero!
 *
 * x: Position on the X-axis to get ground elevation at.
 * y: Position on the Y-axis to get ground elevation at.
 * z: Position on the Z-axis to get ground elevation at.
 * groundZ: The ground elevation at the specified position.
 * ignoreWater: Nearly always 0, very rarely 1 in the scripts: https://gfycat.com/NiftyTatteredCricket
 *
 * Bear in mind this native can only calculate the elevation when the coordinates are within the client's render distance.
 *
 * Hash: 0xC906A7DAB05C8D2B | Since: 323
 * @deprecated Use misc.getGroundZFor3dCoord(pos, ignoreWater) instead
 */
export declare function getGroundZFor3dCoord(pos: Vector3, ignoreWater: boolean): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x8BDC7BFC57A81E76 | Since: 323
 * @deprecated Use misc.getGroundZAndNormalFor3dCoord(pos) instead
 */
export declare function getGroundZAndNormalFor3dCoord(pos: Vector3): [boolean, number, Vector3];
/**
 * No comment provided
 *
 * Hash: 0x9E82F0F362881B29 | Since: 505
 * @deprecated Use misc.getGroundZExcludingObjectsFor3dCoord(pos) instead
 */
export declare function getGroundZExcludingObjectsFor3dCoord(pos: Vector3): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xC843060B5765DCE7 | Since: 323
 * @deprecated Use misc.asin() instead
 */
export declare function asin(): number;
/**
 * No comment provided
 *
 * Hash: 0x1D08B970013C34B6 | Since: 323
 * @deprecated Use misc.acos() instead
 */
export declare function acos(): number;
/**
 * No comment provided
 *
 * Hash: 0x632106CC96E82E91 | Since: 323
 * @deprecated Use misc.tan() instead
 */
export declare function tan(): number;
/**
 * No comment provided
 *
 * Hash: 0xA9D1795CD5043663 | Since: 323
 * @deprecated Use misc.atan() instead
 */
export declare function atan(): number;
/**
 * No comment provided
 *
 * Hash: 0x8927CBF9D22261A4 | Since: 323
 * @deprecated Use misc.atan2() instead
 */
export declare function atan2(): number;
/**
 * Returns the distance between two three-dimensional points, optionally ignoring the Z values.
 * If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.
 *
 * `Consider using this faster native instead: SYSTEM::VDIST - DVIST always takes in consideration the 3D coordinates.`
 *
 * Hash: 0xF1B760881820C952 | Since: 323
 * @deprecated Use misc.getDistanceBetweenCoords(x1, y1, z1, x2, y2, z2, useZ) instead
 */
export declare function getDistanceBetweenCoords(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, useZ: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x186FC4BE848E1C92 | Since: 323
 * @deprecated Use misc.getAngleBetween2dVectors(x1, y1, x2, y2) instead
 */
export declare function getAngleBetween2dVectors(x1: number, y1: number, x2: number, y2: number): number;
/**
 * dx = x1 - x2
 * dy = y1 - y2
 *
 * Hash: 0x2FFB6B224F4B2926 | Since: 323
 * @deprecated Use misc.getHeadingFromVector2d(dx, dy) instead
 */
export declare function getHeadingFromVector2d(dx: number, dy: number): number;
/**
 * returns a float between 0.0 and 1.0, clamp: sets whether the product should be clamped between the given coordinates
 *
 * Hash: 0x7F8F6405F4777AF6 | Since: 323
 * @deprecated Use misc.getRatioOfClosestPointOnLine(x1, y1, z1, x2, y2, z2, x3, y3, z3, clamp) instead
 */
export declare function getRatioOfClosestPointOnLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, clamp: boolean): number;
/**
 * clamp: sets whether the product should be clamped between the given coordinates
 *
 * Hash: 0x21C235BC64831E5A | Since: 323
 * @deprecated Use misc.getClosestPointOnLine(x1, y1, z1, x2, y2, z2, x3, y3, z3, clamp) instead
 */
export declare function getClosestPointOnLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, clamp: boolean): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xF56DFB7B61BE7276 | Since: 323
 * @deprecated Use misc.getLinePlaneIntersection() instead
 */
export declare function getLinePlaneIntersection(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xA0AD167E4B39D9A2 | Since: 2189
 * @deprecated Use misc.getPointAreaOverlap() instead
 */
export declare function getPointAreaOverlap(): boolean;
/**
 * This sets bit [offset] of [address] to on.
 *
 * The offsets used are different bits to be toggled on and off, typically there is only one address used in a script.
 *
 * Example:
 * `MISC::SET_BIT(&bitAddress, 1);`
 *
 * To check if this bit has been enabled:
 * `MISC::IS_BIT_SET(bitAddress, 1); // will return 1 afterwards`
 *
 * Please note, this method may assign a value to [address] when used.
 *
 * Hash: 0x933D6A9EEC1BACD0 | Since: 323
 * @deprecated Use misc.setBit(offset) instead
 */
export declare function setBit(offset: number): number;
/**
 * This sets bit [offset] of [address] to off.
 *
 * Example:
 * `MISC::CLEAR_BIT(&bitAddress, 1);`
 *
 * To check if this bit has been enabled:
 * `MISC::IS_BIT_SET(bitAddress, 1); // will return 0 afterwards`
 *
 * Hash: 0xE80492A9AC099A93 | Since: 323
 * @deprecated Use misc.clearBit(offset) instead
 */
export declare function clearBit(offset: number): number;
/**
 * This native converts its past string to hash. It is hashed using jenkins one at a time method.
 *
 * Hash: 0xD24D37CC275948CC | Since: 323
 * @deprecated Use misc.getHashKey(_string) instead
 */
export declare function getHashKey(_string: string): number;
/**
 * This native always come right before SET_ENTITY_QUATERNION where its final 4 parameters are SLERP_NEAR_QUATERNION p9 to p12
 *
 * Hash: 0xF2F6A2FA49278625 | Since: 323
 * @deprecated Use misc.slerpNearQuaternion(t, pos, w, x1, y1, z1, w1) instead
 */
export declare function slerpNearQuaternion(t: number, pos: Vector3, w: number, x1: number, y1: number, z1: number, w1: number): [number, number, number, number];
/**
 * No comment provided
 *
 * Hash: 0xA61B4DF533DCB56E | Since: 323
 * @deprecated Use misc.isAreaOccupied() instead
 */
export declare function isAreaOccupied(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x39455BF4F4F55186 | Since: 1868
 * @deprecated Use misc.isAreaOccupiedSlow() instead
 */
export declare function isAreaOccupiedSlow(): boolean;
/**
 * `range`: The range, seems to not be very accurate during testing.
 * `p4`: Unknown, when set to true it seems to always return true no matter what I try.
 * `checkVehicle`: Check for any vehicles in that area.
 * `checkPeds`: Check for any peds in that area.
 * `ignoreEntity`: This entity will be ignored if it's in the area. Set to 0 if you don't want to exclude any entities.
 * The BOOL parameters that are documented have not been confirmed. They are just documented from what I've found during testing. They may not work as expected in all cases.
 *
 * Returns true if there is anything in that location matching the provided parameters.
 *
 * Hash: 0xADCDE75E1C60F32D | Since: 323
 * @deprecated Use misc.isPositionOccupied(pos, range, checkVehicles, checkPeds, ignoreEntity) instead
 */
export declare function isPositionOccupied(pos: Vector3, range: number, checkVehicles: boolean, checkPeds: boolean, ignoreEntity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE54E209C35FFA18D | Since: 323
 * @deprecated Use misc.isPointObscuredByAMissionEntity() instead
 */
export declare function isPointObscuredByAMissionEntity(): boolean;
/**
 * Example: CLEAR_AREA(0, 0, 0, 30, true, false, false, false);
 *
 * Hash: 0xA56F01F3765B93A0 | Since: 323
 * @deprecated Use misc.clearArea(pos, radius, ignoreCopCars, ignoreObjects) instead
 */
export declare function clearArea(pos: Vector3, radius: number, ignoreCopCars: boolean, ignoreObjects: boolean): void;
/**
 * `MISC::CLEAR_AREA_LEAVE_VEHICLE_HEALTH(x, y, z, radius, false, false, false, false); seem to make all objects go away, peds, vehicles etc. All booleans set to true doesn't seem to change anything.`
 *
 * Hash: 0x957838AAF91BD12D | Since: 323
 * @deprecated Use misc.clearAreaLeaveVehicleHealth(pos, radius) instead
 */
export declare function clearAreaLeaveVehicleHealth(pos: Vector3, radius: number): void;
/**
 * Example:
 * CLEAR_AREA_OF_VEHICLES(0.0f, 0.0f, 0.0f, 10000.0f, false, false, false, false, false, false);
 *
 * Hash: 0x01C7B9B38428AEB6 | Since: 323
 * @deprecated Use misc.clearAreaOfVehicles(pos, radius) instead
 */
export declare function clearAreaOfVehicles(pos: Vector3, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0x11DB3500F042A8AA | Since: 323
 * @deprecated Use misc.clearAngledAreaOfVehicles(x1, y1, z1, x2, y2, z2, width) instead
 */
export declare function clearAngledAreaOfVehicles(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): void;
/**
 * I looked through the PC scripts that this site provides you with a link to find. It shows the last param mainly uses, (0, 2, 6, 16, and 17) so I am going to assume it is a type of flag.
 *
 * Hash: 0xDD9B9B385AAC7F5B | Since: 323
 * @deprecated Use misc.clearAreaOfObjects(pos, radius, flags) instead
 */
export declare function clearAreaOfObjects(pos: Vector3, radius: number, flags: number): void;
/**
 * Example:       CLEAR_AREA_OF_PEDS(0, 0, 0, 10000, 1);
 *
 * Hash: 0xBE31FD6CE464AC59 | Since: 323
 * @deprecated Use misc.clearAreaOfPeds(pos, radius, flags) instead
 */
export declare function clearAreaOfPeds(pos: Vector3, radius: number, flags: number): void;
/**
 * flags appears to always be 0
 *
 * Hash: 0x04F8FC8FCF58F88D | Since: 323
 * @deprecated Use misc.clearAreaOfCops(pos, radius, flags) instead
 */
export declare function clearAreaOfCops(pos: Vector3, radius: number, flags: number): void;
/**
 * flags is usually 0 in the scripts.
 *
 * Hash: 0x0A1CB9094635D1A6 | Since: 323
 * @deprecated Use misc.clearAreaOfProjectiles(pos, radius, flags) instead
 */
export declare function clearAreaOfProjectiles(pos: Vector3, radius: number, flags: number): void;
/**
 * Possibly used to clear scenario points.
 *
 * Hash: 0x7EC6F9A478A6A512 | Since: 323
 * @deprecated Use misc.clearScenarioSpawnHistory() instead
 */
export declare function clearScenarioSpawnHistory(): void;
/**
 * ignoreVehicle - bypasses vehicle check of the local player (it will not open if you are in a vehicle and this is set to false)
 *
 * Hash: 0xC9BF75D28165FF77 | Since: 323
 * @deprecated Use misc.setSaveMenuActive(ignoreVehicle) instead
 */
export declare function setSaveMenuActive(ignoreVehicle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x397BAA01068BAA96 | Since: 323
 * @deprecated Use misc.getStatusOfManualSave() instead
 */
export declare function getStatusOfManualSave(): number;
/**
 * No comment provided
 *
 * Hash: 0xB938B7E6D3C0620C | Since: 323
 * @deprecated Use misc.setCreditsActive(toggle) instead
 */
export declare function setCreditsActive(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB51B9AB9EF81868C | Since: 323
 * @deprecated Use misc.setCreditsFadeOutWithScreen(toggle) instead
 */
export declare function setCreditsFadeOutWithScreen(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x075F1D57402C93BA | Since: 323
 * @deprecated Use misc.haveCreditsReachedEnd() instead
 */
export declare function haveCreditsReachedEnd(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD19C0826DC20CF1C | Since: 2802
 * @deprecated Use misc.areCreditsRunning() instead
 */
export declare function areCreditsRunning(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9DC711BC69C548DF | Since: 323
 * @deprecated Use misc.terminateAllScriptsWithThisName(scriptName) instead
 */
export declare function terminateAllScriptsWithThisName(scriptName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x9243BAC96D64C050 | Since: 323
 * @deprecated Use misc.networkSetScriptIsSafeForNetworkGame() instead
 */
export declare function networkSetScriptIsSafeForNetworkGame(): void;
/**
 * Returns the index of the newly created hospital spawn point.
 *
 * p3 might be radius?
 *
 * Hash: 0x1F464EF988465A81 | Since: 323
 * @deprecated Use misc.addHospitalRestart(pos) instead
 */
export declare function addHospitalRestart(pos: Vector3): number;
/**
 * The game by default has 5 hospital respawn points. Disabling them all will cause the player to respawn at the last position they were.
 *
 * Hash: 0xC8535819C450EBA8 | Since: 323
 * @deprecated Use misc.disableHospitalRestart(hospitalIndex, toggle) instead
 */
export declare function disableHospitalRestart(hospitalIndex: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x452736765B31FC4B | Since: 323
 * @deprecated Use misc.addPoliceRestart() instead
 */
export declare function addPoliceRestart(): number;
/**
 * Disables the spawn point at the police house on the specified index.
 *
 * policeIndex: The police house index.
 * toggle: true to enable the spawn point, false to disable.
 *
 * - Nacorpio
 *
 * Hash: 0x23285DED6EBD7EA3 | Since: 323
 * @deprecated Use misc.disablePoliceRestart(policeIndex, toggle) instead
 */
export declare function disablePoliceRestart(policeIndex: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x706B5EDCAA7FA663 | Since: 323
 * @deprecated Use misc.setRestartCoordOverride(pos, heading) instead
 */
export declare function setRestartCoordOverride(pos: Vector3, heading: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA2716D40842EAF79 | Since: 323
 * @deprecated Use misc.clearRestartCoordOverride() instead
 */
export declare function clearRestartCoordOverride(): void;
/**
 * No comment provided
 *
 * Hash: 0x2C2B3493FBF51C71 | Since: 323
 * @deprecated Use misc.pauseDeathArrestRestart(toggle) instead
 */
export declare function pauseDeathArrestRestart(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x21FFB63D8C615361 | Since: 323
 * @deprecated Use misc.ignoreNextRestart(toggle) instead
 */
export declare function ignoreNextRestart(toggle: boolean): void;
/**
 * Sets whether the game should fade out after the player dies.
 *
 * Hash: 0x4A18E01DF2C87B86 | Since: 323
 * @deprecated Use misc.setFadeOutAfterDeath(toggle) instead
 */
export declare function setFadeOutAfterDeath(toggle: boolean): void;
/**
 * Sets whether the game should fade out after the player is arrested.
 *
 * Hash: 0x1E0B4DC0D990A4E7 | Since: 323
 * @deprecated Use misc.setFadeOutAfterArrest(toggle) instead
 */
export declare function setFadeOutAfterArrest(toggle: boolean): void;
/**
 * Sets whether the game should fade in after the player dies or is arrested.
 *
 * Hash: 0xDA66D2796BA33F12 | Since: 323
 * @deprecated Use misc.setFadeInAfterDeathArrest(toggle) instead
 */
export declare function setFadeInAfterDeathArrest(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF3D78F59DFE18D79 | Since: 323
 * @deprecated Use misc.setFadeInAfterLoad(toggle) instead
 */
export declare function setFadeInAfterLoad(toggle: boolean): void;
/**
 * returns savehouseHandle
 *
 * Hash: 0xC0714D0A7EEECA54 | Since: 323
 * @deprecated Use misc.registerSaveHouse(pos) instead
 */
export declare function registerSaveHouse(pos: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0x4F548CABEAE553BC | Since: 323
 * @deprecated Use misc.setSaveHouse(savehouseHandle) instead
 */
export declare function setSaveHouse(savehouseHandle: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1162EA8AE9D24EEA | Since: 323
 * @deprecated Use misc.overrideSaveHouse() instead
 */
export declare function overrideSaveHouse(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA4A0065E39C9F25C | Since: 323
 * @deprecated Use misc.getSaveHouseDetailsAfterSuccessfulLoad() instead
 */
export declare function getSaveHouseDetailsAfterSuccessfulLoad(): [boolean, Vector3, number, boolean, boolean];
/**
 * No comment provided
 *
 * Hash: 0x50EEAAD86232EE55 | Since: 323
 * @deprecated Use misc.doAutoSave() instead
 */
export declare function doAutoSave(): void;
/**
 * Returns true if profile setting 208 is equal to 0.
 *
 * Hash: 0x6E04F06094C87047 | Since: 323
 * @deprecated Use misc.getIsAutoSaveOff() instead
 */
export declare function getIsAutoSaveOff(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x69240733738C19A0 | Since: 323
 * @deprecated Use misc.isAutoSaveInProgress() instead
 */
export declare function isAutoSaveInProgress(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2107A3773771186D | Since: 323
 * @deprecated Use misc.hasCodeRequestedAutosave() instead
 */
export declare function hasCodeRequestedAutosave(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x06462A961E94B67C | Since: 323
 * @deprecated Use misc.clearCodeRequestedAutosave() instead
 */
export declare function clearCodeRequestedAutosave(): void;
/**
 * No comment provided
 *
 * Hash: 0xE0E500246FF73D66 | Since: 323
 * @deprecated Use misc.beginReplayStats() instead
 */
export declare function beginReplayStats(): void;
/**
 * No comment provided
 *
 * Hash: 0x69FE6DC87BD2A5E9 | Since: 323
 * @deprecated Use misc.addReplayStatValue(value) instead
 */
export declare function addReplayStatValue(value: any): void;
/**
 * No comment provided
 *
 * Hash: 0xA23E821FBDF8A5F2 | Since: 323
 * @deprecated Use misc.endReplayStats() instead
 */
export declare function endReplayStats(): void;
/**
 * No comment provided
 *
 * Hash: 0xD642319C54AADEB6 | Since: 323
 * @deprecated Use misc.haveReplayStatsBeenStored() instead
 */
export declare function haveReplayStatsBeenStored(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5B1F2E327B6B6FE1 | Since: 323
 * @deprecated Use misc.getReplayStatMissionId() instead
 */
export declare function getReplayStatMissionId(): number;
/**
 * No comment provided
 *
 * Hash: 0x2B626A0150E4D449 | Since: 323
 * @deprecated Use misc.getReplayStatMissionType() instead
 */
export declare function getReplayStatMissionType(): number;
/**
 * No comment provided
 *
 * Hash: 0xDC9274A7EF6B2867 | Since: 323
 * @deprecated Use misc.getReplayStatCount() instead
 */
export declare function getReplayStatCount(): number;
/**
 * No comment provided
 *
 * Hash: 0x8098C8D6597AAE18 | Since: 323
 * @deprecated Use misc.getReplayStatAtIndex(index) instead
 */
export declare function getReplayStatAtIndex(index: number): number;
/**
 * No comment provided
 *
 * Hash: 0x1B1AB132A16FDA55 | Since: 323
 * @deprecated Use misc.clearReplayStats() instead
 */
export declare function clearReplayStats(): void;
/**
 * No comment provided
 *
 * Hash: 0x72DE52178C291CB5 | Since: 323
 * @deprecated Use misc.queueMissionRepeatLoad() instead
 */
export declare function queueMissionRepeatLoad(): boolean;
/**
 * Shows the screen which is visible before you redo a mission? The game will make a restoration point where you will cameback when the mission is over.
 * Returns 1 if the message isn't currently on screen
 *
 * Hash: 0x44A0BDC559B35F6E | Since: 323
 * @deprecated Use misc.queueMissionRepeatSave() instead
 */
export declare function queueMissionRepeatSave(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEB2104E905C6F2E9 | Since: 323
 * @deprecated Use misc.queueMissionRepeatSaveForBenchmarkTest() instead
 */
export declare function queueMissionRepeatSaveForBenchmarkTest(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2B5E102E4A42F2BF | Since: 323
 * @deprecated Use misc.getStatusOfMissionRepeatSave() instead
 */
export declare function getStatusOfMissionRepeatSave(): number;
/**
 * No comment provided
 *
 * Hash: 0x8A75CE2956274ADD | Since: 323
 * @deprecated Use misc.isMemoryCardInUse() instead
 */
export declare function isMemoryCardInUse(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x867654CBC7606F2C | Since: 323
 * @deprecated Use misc.shootSingleBulletBetweenCoords(x1, y1, z1, x2, y2, z2, damage, weaponHash, ownerPed, isAudible, isInvisible, speed) instead
 */
export declare function shootSingleBulletBetweenCoords(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, weaponHash: number | string, ownerPed: number | Ped, isAudible: boolean, isInvisible: boolean, speed: number): void;
/**
 * entity - entity to ignore
 *
 * Hash: 0xE3A7742E0B7A2F8B | Since: 323
 * @deprecated Use misc.shootSingleBulletBetweenCoordsIgnoreEntity(x1, y1, z1, x2, y2, z2, damage, weaponHash, ownerPed, isAudible, isInvisible, speed, entity) instead
 */
export declare function shootSingleBulletBetweenCoordsIgnoreEntity(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, weaponHash: number | string, ownerPed: number | Ped, isAudible: boolean, isInvisible: boolean, speed: number, entity: number | Entity): void;
/**
 * entity - entity to ignore
 * targetEntity - entity to home in on, if the weapon hash provided supports homing
 *
 * Hash: 0xBFE5756E7407064A | Since: 323
 * @deprecated Use misc.shootSingleBulletBetweenCoordsIgnoreEntityNew(x1, y1, z1, x2, y2, z2, damage, weaponHash, ownerPed, isAudible, isInvisible, speed, entity, targetEntity) instead
 */
export declare function shootSingleBulletBetweenCoordsIgnoreEntityNew(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, weaponHash: number | string, ownerPed: number | Ped, isAudible: boolean, isInvisible: boolean, speed: number, entity: number | Entity, targetEntity: number | Entity): void;
/**
 * Gets the dimensions of a model.
 *
 * Calculate (maximum - minimum) to get the size, in which case, Y will be how long the model is.
 *
 * `Example from the scripts: MISC::GET_MODEL_DIMENSIONS(ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), &v_1A, &v_17);`
 *
 * Hash: 0x03E8D3D5F549087A | Since: 323
 * @deprecated Use misc.getModelDimensions(modelHash) instead
 */
export declare function getModelDimensions(modelHash: number | string): [Vector3, Vector3];
/**
 * Sets a visually fake wanted level on the user interface. Used by Rockstar's scripts to "override" regular wanted levels and make custom ones while the real wanted level and multipliers are still in effect.
 *
 * Max is 6, anything above this makes it just 6. Also the mini-map gets the red & blue flashing effect.
 *
 * Hash: 0x1454F2448DE30163 | Since: 323
 * @deprecated Use misc.setFakeWantedLevel(fakeWantedLevel) instead
 */
export declare function setFakeWantedLevel(fakeWantedLevel: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4C9296CBCD1B971E | Since: 323
 * @deprecated Use misc.getFakeWantedLevel() instead
 */
export declare function getFakeWantedLevel(): number;
/**
 * No comment provided
 *
 * Hash: 0xF14878FC50BEC6EE | Since: 323
 * @deprecated Use misc.usingMissionCreator(toggle) instead
 */
export declare function usingMissionCreator(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDEA36202FC3382DF | Since: 323
 * @deprecated Use misc.allowMissionCreatorWarp(toggle) instead
 */
export declare function allowMissionCreatorWarp(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x19E00D7322C6F85B | Since: 323
 * @deprecated Use misc.setMinigameInProgress(toggle) instead
 */
export declare function setMinigameInProgress(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2B4A15E44DE0F478 | Since: 323
 * @deprecated Use misc.isMinigameInProgress() instead
 */
export declare function isMinigameInProgress(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7B30F65D7B710098 | Since: 323
 * @deprecated Use misc.isThisAMinigameScript() instead
 */
export declare function isThisAMinigameScript(): boolean;
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0x61A23B7EDA9BDA24 | Since: 323
 * @deprecated Use misc.isSniperInverted() instead
 */
export declare function isSniperInverted(): boolean;
/**
 * Returns true if the game is using the metric measurement system (profile setting 227), false if imperial is used.
 *
 * Hash: 0xD3D15555431AB793 | Since: 323
 * @deprecated Use misc.shouldUseMetricMeasurements() instead
 */
export declare function shouldUseMetricMeasurements(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC488FF2356EA7791 | Since: 323
 * @deprecated Use misc.getProfileSetting(profileSetting) instead
 */
export declare function getProfileSetting(profileSetting: number): number;
/**
 * No comment provided
 *
 * Hash: 0x0C515FAB3FF9EA92 | Since: 323
 * @deprecated Use misc.areStringsEqual(string1, string2) instead
 */
export declare function areStringsEqual(string1: string, string2: string): boolean;
/**
 * Compares two strings up to a specified number of characters.
 *
 * Parameters:
 * str1 - String to be compared.
 * str2 - String to be compared.
 * matchCase - Comparison will be case-sensitive.
 * maxLength - Maximum number of characters to compare. A value of -1 indicates an infinite length.
 *
 * Returns:
 * A value indicating the relationship between the strings:
 * <0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'A' < 'B', so result = -1)
 * 0 - The contents of both strings are equal.
 * >0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'B' > 'A', so result = 1)
 *
 * Examples:
 * `MISC::COMPARE_STRINGS("STRING", "string", false, -1); // 0; equal`
 * `MISC::COMPARE_STRINGS("TESTING", "test", false, 4); // 0; equal`
 * `MISC::COMPARE_STRINGS("R2D2", "R2xx", false, 2); // 0; equal`
 * `MISC::COMPARE_STRINGS("foo", "bar", false, -1); // 4; 'f' > 'b'`
 * `MISC::COMPARE_STRINGS("A", "A", true, 1); // 0; equal`
 *
 * When comparing case-sensitive strings, lower-case characters are greater than upper-case characters:
 * `MISC::COMPARE_STRINGS("A", "a", true, 1); // -1; 'A' < 'a'`
 * `MISC::COMPARE_STRINGS("a", "A", true, 1); // 1; 'a' > 'A'`
 *
 * Hash: 0x1E34710ECD4AB0EB | Since: 323
 * @deprecated Use misc.compareStrings(str1, str2, matchCase, maxLength) instead
 */
export declare function compareStrings(str1: string, str2: string, matchCase: boolean, maxLength: number): number;
/**
 * No comment provided
 *
 * Hash: 0xF0D31AD191A74F87 | Since: 323
 * @deprecated Use misc.absi(value) instead
 */
export declare function absi(value: number): number;
/**
 * No comment provided
 *
 * Hash: 0x73D57CFFDD12C355 | Since: 323
 * @deprecated Use misc.absf(value) instead
 */
export declare function absf(value: number): number;
/**
 * Determines whether there is a sniper bullet within the specified coordinates. The coordinates form an axis-aligned bounding box.
 *
 * Hash: 0xFEFCF11B01287125 | Since: 323
 * @deprecated Use misc.isSniperBulletInArea(x1, y1, z1, x2, y2, z2) instead
 */
export declare function isSniperBulletInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.
 *
 * - Nacorpio
 *
 *
 * ownedByPlayer = only projectiles fired by the player will be detected.
 *
 * Hash: 0x5270A8FBC098C3F8 | Since: 323
 * @deprecated Use misc.isProjectileInArea(x1, y1, z1, x2, y2, z2, ownedByPlayer) instead
 */
export declare function isProjectileInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, ownedByPlayer: boolean): boolean;
/**
 * Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a axis-aligned bounding box.
 *
 * Hash: 0x2E0DC353342C4A6D | Since: 323
 * @deprecated Use misc.isProjectileTypeInArea(x1, y1, z1, x2, y2, z2, _type, ownedByPlayer) instead
 */
export declare function isProjectileTypeInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, _type: number, ownedByPlayer: boolean): boolean;
/**
 * See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
 *
 * Hash: 0xF0BC12401061DEA0 | Since: 323
 * @deprecated Use misc.isProjectileTypeInAngledArea(x1, y1, z1, x2, y2, z2, width, ownedByPlayer) instead
 */
export declare function isProjectileTypeInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, ownedByPlayer: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x34318593248C8FB2 | Since: 323
 * @deprecated Use misc.isProjectileTypeWithinDistance(pos, projectileHash, radius, ownedByPlayer) instead
 */
export declare function isProjectileTypeWithinDistance(pos: Vector3, projectileHash: number | string, radius: number, ownedByPlayer: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8D7A43EC6A5FEA45 | Since: 323
 * @deprecated Use misc.getCoordsOfProjectileTypeInArea(x1, y1, z1, x2, y2, z2, projectileHash, ownedByPlayer) instead
 */
export declare function getCoordsOfProjectileTypeInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, projectileHash: number | string, ownedByPlayer: boolean): [boolean, Vector3];
/**
 * No comment provided
 *
 * Hash: 0x3DA8C28346B62CED | Since: 2802
 * @deprecated Use misc.getCoordsOfProjectileTypeInAngledArea(vecAngledAreaPoint1X, vecAngledAreaPoint1Y, vecAngledAreaPoint1Z, vecAngledAreaPoint2X, vecAngledAreaPoint2Y, vecAngledAreaPoint2Z, distanceOfOppositeFace, weaponType, bIsPlayer) instead
 */
export declare function getCoordsOfProjectileTypeInAngledArea(vecAngledAreaPoint1X: number, vecAngledAreaPoint1Y: number, vecAngledAreaPoint1Z: number, vecAngledAreaPoint2X: number, vecAngledAreaPoint2Y: number, vecAngledAreaPoint2Z: number, distanceOfOppositeFace: number, weaponType: number | string, bIsPlayer: boolean): [boolean, Vector3];
/**
 * No comment provided
 *
 * Hash: 0xDFB4138EEFED7B81 | Since: 323
 * @deprecated Use misc.getCoordsOfProjectileTypeWithinDistance(ped, weaponHash, distance) instead
 */
export declare function getCoordsOfProjectileTypeWithinDistance(ped: number | Ped, weaponHash: number | string, distance: number): [boolean, Vector3];
/**
 * No comment provided
 *
 * Hash: 0x82FDE6A57EE4EE44 | Since: 323
 * @deprecated Use misc.getProjectileOfProjectileTypeWithinDistance(ped, weaponHash, distance) instead
 */
export declare function getProjectileOfProjectileTypeWithinDistance(ped: number | Ped, weaponHash: number | string, distance: number): [boolean, Vector3, number];
/**
 * For projectiles, see: IS_PROJECTILE_TYPE_IN_ANGLED_AREA
 * See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
 * Returns True if a bullet, as maintained by a pool within CWeaponManager, has been fired into the defined angled area.
 *
 * Hash: 0x1A8B5F3C01E2B477 | Since: 323
 * @deprecated Use misc.isBulletInAngledArea(x1, y1, z1, x2, y2, z2, width, ownedByPlayer) instead
 */
export declare function isBulletInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, ownedByPlayer: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3F2023999AD51C1F | Since: 323
 * @deprecated Use misc.isBulletInArea(pos, radius, ownedByPlayer) instead
 */
export declare function isBulletInArea(pos: Vector3, radius: number, ownedByPlayer: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDE0F6D7450D37351 | Since: 323
 * @deprecated Use misc.isBulletInBox(x1, y1, z1, x2, y2, z2, ownedByPlayer) instead
 */
export declare function isBulletInBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, ownedByPlayer: boolean): boolean;
/**
 * p3 - possibly radius?
 *
 * Hash: 0x9870ACFB89A90995 | Since: 323
 * @deprecated Use misc.hasBulletImpactedInArea(pos) instead
 */
export declare function hasBulletImpactedInArea(pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDC8C5D7CFEAB8394 | Since: 323
 * @deprecated Use misc.hasBulletImpactedInBox() instead
 */
export declare function hasBulletImpactedInBox(): boolean;
/**
 * PS4
 *
 * Hash: 0xA72BC0B675B1519E | Since: 323
 * @deprecated Use misc.isOrbisVersion() instead
 */
export declare function isOrbisVersion(): boolean;
/**
 * XBOX ONE
 *
 * Hash: 0x4D982ADB1978442D | Since: 323
 * @deprecated Use misc.isDurangoVersion() instead
 */
export declare function isDurangoVersion(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF6201B4DAF662A9D | Since: 323
 * @deprecated Use misc.isXbox360Version() instead
 */
export declare function isXbox360Version(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCCA1072C29D096C2 | Since: 323
 * @deprecated Use misc.isPs3Version() instead
 */
export declare function isPs3Version(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x48AF36444B965238 | Since: 323
 * @deprecated Use misc.isPcVersion() instead
 */
export declare function isPcVersion(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0A27B2B6282F7169 | Since: 2545
 * @deprecated Use misc.isSteamVersion() instead
 */
export declare function isSteamVersion(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE2BCD0EFAE90D1F4 | Since: 3504
 * @deprecated Use misc.isXboxpcVersion() instead
 */
export declare function isXboxpcVersion(): boolean;
/**
 * Used to block some of the prostitute stuff due to laws in Australia.
 *
 * Hash: 0x9F1935CA1F724008 | Since: 323
 * @deprecated Use misc.isAussieVersion() instead
 */
export declare function isAussieVersion(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB8C0BB75D8A77DB3 | Since: 2545
 * @deprecated Use misc.isJapaneseVersion() instead
 */
export declare function isJapaneseVersion(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x138679CA01E21F53 | Since: 2612
 * @deprecated Use misc.isXboxPlatform() instead
 */
export declare function isXboxPlatform(): boolean;
/**
 * Xbox Series (Scarlett) version...
 *
 * Hash: 0xC545AB1CF97ABB34 | Since: 2612
 * @deprecated Use misc.isScarlettVersion() instead
 */
export declare function isScarlettVersion(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF911E695C1EB8518 | Since: 2612
 * @deprecated Use misc.isScePlatform() instead
 */
export declare function isScePlatform(): boolean;
/**
 * PS5 (Prospero) version...
 *
 * Hash: 0x807ABE1AB65C24D2 | Since: 2612
 * @deprecated Use misc.isProsperoVersion() instead
 */
export declare function isProsperoVersion(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF22B6C47C6EAB066 | Since: 323
 * @deprecated Use misc.isStringNull(_string) instead
 */
export declare function isStringNull(_string: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCA042B6957743895 | Since: 323
 * @deprecated Use misc.isStringNullOrEmpty(_string) instead
 */
export declare function isStringNullOrEmpty(_string: string): boolean;
/**
 * Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.
 *
 * If all checks have passed successfully, the return value will be set to whatever strtol(string, 0i64, 10); returns.
 *
 * Hash: 0x5A5F40FE637EB584 | Since: 323
 * @deprecated Use misc.stringToInt(_string) instead
 */
export declare function stringToInt(_string: string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x8EF07E15701D61ED | Since: 323
 * @deprecated Use misc.setBitsInRange(rangeStart, rangeEnd) instead
 */
export declare function setBitsInRange(rangeStart: number, rangeEnd: number): number;
/**
 * No comment provided
 *
 * Hash: 0x53158863FCC0893A | Since: 323
 * @deprecated Use misc.getBitsInRange(_var, rangeStart, rangeEnd) instead
 */
export declare function getBitsInRange(_var: number, rangeStart: number, rangeEnd: number): number;
/**
 * See description of `ADD_STUNT_JUMP_ANGLED` for detailed info. The only difference really is this one does not have the radius (or angle, not sure) floats parameters for entry and landing zones.
 *
 * Hash: 0x1A992DA297A4630C | Since: 323
 * @deprecated Use misc.addStuntJump(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4, camX, camY, camZ) instead
 */
export declare function addStuntJump(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, x4: number, y4: number, z4: number, camX: number, camY: number, camZ: number): number;
/**
 * Creates a new stunt jump.
 *
 * The radius1 and radius2 might actually not be a radius at all, but that's what it seems to me testing them in-game. But they may be 'angle' floats instead, considering this native is named ADD_STUNT_JUMP_**ANGLED**.
 *
 * Info about the specific 'parameter sections':
 *
 *
 * <strong>x1, y1, z1, x2, y2, z2 and radius1:</strong>
 *
 * First coordinates are for the jump entry area, and the radius that will be checked around that area. So if you're not exactly within the coordinates, but you are within the outter radius limit then it will still register as entering the stunt jump. Note as mentioned above, the radius is just a guess, I'm not really sure about it's exact purpose.
 *
 *
 * <strong>x3, y3, z3, x4, y4, z4 and radius2:</strong>
 *
 * Next part is the landing area, again starting with the left bottom (nearest to the stunt jump entry zone) coordinate, and the second one being the top right furthest away part of the landing area. Followed by another (most likely) radius float, this is usually slightly larger than the entry zone 'radius' float value, just because you have quite a lot of places where you can land (I'm guessing).
 *
 *
 * <strong>camX, camY and camZ:</strong>
 *
 * The final coordinate in this native is the Camera position. Rotation and zoom/FOV is managed by the game itself, you just need to provide the camera location.
 *
 *
 * <strong>unk1, unk2 and unk3:</strong>
 *
 * Not sure what these are for, but they're always `150, 0, 0` in decompiled scripts.
 *
 * Here is a list of almost all of the stunt jumps from GTA V (taken from decompiled scripts): https://pastebin.com/EW1jBPkY
 *
 * Hash: 0xBBE5D803A5360CBF | Since: 323
 * @deprecated Use misc.addStuntJumpAngled(x1, y1, z1, x2, y2, z2, radius1, x3, y3, z3, x4, y4, z4, radius2, camX, camY, camZ) instead
 */
export declare function addStuntJumpAngled(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius1: number, x3: number, y3: number, z3: number, x4: number, y4: number, z4: number, radius2: number, camX: number, camY: number, camZ: number): number;
/**
 * Toggles some stunt jump stuff.
 *
 * Hash: 0xFB80AB299D2EE1BD | Since: 757
 * @deprecated Use misc.toggleShowOptionalStuntJumpCamera(toggle) instead
 */
export declare function toggleShowOptionalStuntJumpCamera(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDC518000E39DAE1F | Since: 323
 * @deprecated Use misc.deleteStuntJump() instead
 */
export declare function deleteStuntJump(): void;
/**
 * No comment provided
 *
 * Hash: 0xE369A5783B866016 | Since: 323
 * @deprecated Use misc.enableStuntJumpSet() instead
 */
export declare function enableStuntJumpSet(): void;
/**
 * No comment provided
 *
 * Hash: 0xA5272EBEDD4747F6 | Since: 323
 * @deprecated Use misc.disableStuntJumpSet() instead
 */
export declare function disableStuntJumpSet(): void;
/**
 * No comment provided
 *
 * Hash: 0xD79185689F8FD5DF | Since: 323
 * @deprecated Use misc.setStuntJumpsCanTrigger(toggle) instead
 */
export declare function setStuntJumpsCanTrigger(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7A3F19700A4D0525 | Since: 323
 * @deprecated Use misc.isStuntJumpInProgress() instead
 */
export declare function isStuntJumpInProgress(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2272B0A1343129F4 | Since: 323
 * @deprecated Use misc.isStuntJumpMessageShowing() instead
 */
export declare function isStuntJumpMessageShowing(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x996DD1E1E02F1008 | Since: 323
 * @deprecated Use misc.getNumSuccessfulStuntJumps() instead
 */
export declare function getNumSuccessfulStuntJumps(): number;
/**
 * No comment provided
 *
 * Hash: 0x6856EC3D35C81EA4 | Since: 323
 * @deprecated Use misc.getTotalSuccessfulStuntJumps() instead
 */
export declare function getTotalSuccessfulStuntJumps(): number;
/**
 * No comment provided
 *
 * Hash: 0xE6B7B0ACD4E4B75E | Since: 323
 * @deprecated Use misc.cancelStuntJump() instead
 */
export declare function cancelStuntJump(): void;
/**
 * Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused which means you will lose control and the game remains in paused mode until you exit GTA5.exe
 *
 * Hash: 0x577D1284D6873711 | Since: 323
 * @deprecated Use misc.setGamePaused(toggle) instead
 */
export declare function setGamePaused(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xAA391C728106F7AF | Since: 323
 * @deprecated Use misc.setThisScriptCanBePaused(toggle) instead
 */
export declare function setThisScriptCanBePaused(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB98236CAAECEF897 | Since: 323
 * @deprecated Use misc.setThisScriptCanRemoveBlipsCreatedByAnyScript(toggle) instead
 */
export declare function setThisScriptCanRemoveBlipsCreatedByAnyScript(toggle: boolean): void;
/**
 * This native appears on the cheat_controller script and tracks a combination of buttons, which may be used to toggle cheats in-game. Credits to ThreeSocks for the info. The hash contains the combination, while the "amount" represents the amount of buttons used in a combination. The following page can be used to make a button combination: gta5offset.com/ts/hash/
 *
 * INT_SCORES_SCORTED was a hash collision
 *
 * Hash: 0x071E2A839DE82D90 | Since: 323
 * @deprecated Use misc.hasCheatWithHashBeenActivated(hash, amount) instead
 */
export declare function hasCheatWithHashBeenActivated(hash: number | string, amount: number): boolean;
/**
 * Get inputted "Cheat code", for example:
 *
 * while (TRUE)
 * {
 * `if (MISC::HAS_PC_CHEAT_WITH_HASH_BEEN_ACTIVATED(${fugitive}))`
 * {
 * // Do something.
 * }
 * `SYSTEM::WAIT(0);`
 * }
 *
 * Calling this will also set the last saved string hash to zero.
 *
 *
 * Hash: 0x557E43C447E700A8 | Since: 323
 * @deprecated Use misc.hasPcCheatWithHashBeenActivated(hash) instead
 */
export declare function hasPcCheatWithHashBeenActivated(hash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFA3FFB0EEBC288A3 | Since: 2060
 * @deprecated Use misc.overrideFreezeFlags() instead
 */
export declare function overrideFreezeFlags(): void;
/**
 * Formerly known as _LOWER_MAP_PROP_DENSITY and wrongly due to idiots as _ENABLE_MP_DLC_MAPS.
 * Sets the maximum prop density and changes a loading screen flag from 'loading story mode' to 'loading GTA Online'. Does not touch DLC map data at all.
 *
 * In fact, I doubt this changes the flag whatsoever, that's the OTHER native idiots use together with this that does so, this one only causes a loading screen to show as it reloads map data.
 *
 * Hash: 0x9BAE5AD2508DF078 | Since: 323
 * @deprecated Use misc.setInstancePriorityMode() instead
 */
export declare function setInstancePriorityMode(): void;
/**
 * Sets an unknown flag used by CScene in determining which entities from CMapData scene nodes to draw, similar to SET_INSTANCE_PRIORITY_MODE.
 *
 * Hash: 0xC5F0A8EBD3F361CE | Since: 323
 * @deprecated Use misc.setInstancePriorityHint(flag) instead
 */
export declare function setInstancePriorityHint(flag: number): void;
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0x7EA2B6AF97ECA6ED | Since: 323
 * @deprecated Use misc.isFrontendFading() instead
 */
export declare function isFrontendFading(): boolean;
/**
 * spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called
 *
 * Hash: 0x7472BB270D7B4F3E | Since: 323
 * @deprecated Use misc.populateNow() instead
 */
export declare function populateNow(): void;
/**
 * No comment provided
 *
 * Hash: 0xCBAD6729F7B1F4FC | Since: 323
 * @deprecated Use misc.getIndexOfCurrentLevel() instead
 */
export declare function getIndexOfCurrentLevel(): number;
/**
 * level can be from 0 to 3
 * 0: 9.8 - normal
 * 1: 2.4 - low
 * 2: 0.1 - very low
 * 3: 0.0 - off
 *
 * Hash: 0x740E14FAD5842351 | Since: 323
 * @deprecated Use misc.setGravityLevel(level) instead
 */
export declare function setGravityLevel(level: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA9575F812C6A7997 | Since: 323
 * @deprecated Use misc.startSaveData() instead
 */
export declare function startSaveData(): any;
/**
 * No comment provided
 *
 * Hash: 0x74E20C9145FB66FD | Since: 323
 * @deprecated Use misc.stopSaveData() instead
 */
export declare function stopSaveData(): void;
/**
 * No comment provided
 *
 * Hash: 0xA09F896CE912481F | Since: 323
 * @deprecated Use misc.getSizeOfSaveData() instead
 */
export declare function getSizeOfSaveData(): number;
/**
 * No comment provided
 *
 * Hash: 0x34C9EE5986258415 | Since: 323
 * @deprecated Use misc.registerIntToSave(name) instead
 */
export declare function registerIntToSave(name: string): any;
/**
 * No comment provided
 *
 * Hash: 0xA735353C77334EA0 | Since: 323
 * @deprecated Use misc.registerInt64ToSave(name) instead
 */
export declare function registerInt64ToSave(name: string): any;
/**
 * No comment provided
 *
 * Hash: 0x10C2FA78D0E128A1 | Since: 323
 * @deprecated Use misc.registerEnumToSave(name) instead
 */
export declare function registerEnumToSave(name: string): any;
/**
 * No comment provided
 *
 * Hash: 0x7CAEC29ECB5DFEBB | Since: 323
 * @deprecated Use misc.registerFloatToSave(name) instead
 */
export declare function registerFloatToSave(name: string): any;
/**
 * No comment provided
 *
 * Hash: 0xC8F4131414C835A1 | Since: 323
 * @deprecated Use misc.registerBoolToSave(name) instead
 */
export declare function registerBoolToSave(name: string): any;
/**
 * No comment provided
 *
 * Hash: 0xEDB1232C5BEAE62F | Since: 323
 * @deprecated Use misc.registerTextLabelToSave(name) instead
 */
export declare function registerTextLabelToSave(name: string): any;
/**
 * `MISC::REGISTER_TEXT_LABEL_15_TO_SAVE(&a_0._f1, "tlPlateText");`
 * `MISC::REGISTER_TEXT_LABEL_15_TO_SAVE(&a_0._f1C, "tlPlateText_pending");`
 * `MISC::REGISTER_TEXT_LABEL_15_TO_SAVE(&a_0._f10B, "tlCarAppPlateText");`
 *
 * Hash: 0x6F7794F28C6B2535 | Since: 323
 * @deprecated Use misc.registerTextLabel15ToSave(name) instead
 */
export declare function registerTextLabel15ToSave(name: string): any;
/**
 * Only found 3 times in decompiled scripts.
 *
 * `MISC::REGISTER_TEXT_LABEL_23_TO_SAVE(a_0, "Movie_Name_For_This_Player");`
 * `MISC::REGISTER_TEXT_LABEL_23_TO_SAVE(&a_0._fB, "Ringtone_For_This_Player");`
 * `MISC::REGISTER_TEXT_LABEL_23_TO_SAVE(&a_0._f1EC4._f12[v_A\/\*6\*\/], &v_13); // where v_13 is "MPATMLOGSCRS0" thru "MPATMLOGSCRS15"`
 *
 * Hash: 0x48F069265A0E4BEC | Since: 323
 * @deprecated Use misc.registerTextLabel23ToSave(name) instead
 */
export declare function registerTextLabel23ToSave(name: string): any;
/**
 * Only found 2 times in decompiled scripts.
 *
 * `MISC::REGISTER_TEXT_LABEL_31_TO_SAVE(&a_0._f1F5A._f6[0\/\*8\*\/], "TEMPSTAT_LABEL"); // gets saved in a struct called "g_SaveData_STRING_ScriptSaves"`
 * `MISC::REGISTER_TEXT_LABEL_31_TO_SAVE(&a_0._f4B4[v_1A\/\*8\*\/], &v_5); // where v_5 is "Name0" thru "Name9", gets saved in a struct called "OUTFIT_Name"`
 *
 * Hash: 0x8269816F6CFD40F8 | Since: 323
 * @deprecated Use misc.registerTextLabel31ToSave(name) instead
 */
export declare function registerTextLabel31ToSave(name: string): any;
/**
 * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(a_0, "Thumb_label");`
 * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f10, "Photo_label");`
 * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(a_0, "GXTlabel");`
 * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f21, "StringComp");`
 * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f43, "SecondStringComp");`
 * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f53, "ThirdStringComp");`
 * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f32, "SenderStringComp");`
 * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f726[v_1A\/\*16\*\/], &v_20); // where v_20 is "LastJobTL_0_1" thru "LastJobTL_2_1", gets saved in a struct called "LAST_JobGamer_TL"`
 * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f4B, "PAID_PLAYER");`
 * `MISC::REGISTER_TEXT_LABEL_63_TO_SAVE(&a_0._f5B, "RADIO_STATION");`
 *
 * Hash: 0xFAA457EF263E8763 | Since: 323
 * @deprecated Use misc.registerTextLabel63ToSave(name) instead
 */
export declare function registerTextLabel63ToSave(name: string): any;
/**
 * No comment provided
 *
 * Hash: 0xBF737600CDDBEADD | Since: 323
 * @deprecated Use misc.startSaveStructWithSize(size, structName) instead
 */
export declare function startSaveStructWithSize(size: number, structName: string): any;
/**
 * No comment provided
 *
 * Hash: 0xEB1774DF12BB9F12 | Since: 323
 * @deprecated Use misc.stopSaveStruct() instead
 */
export declare function stopSaveStruct(): void;
/**
 * No comment provided
 *
 * Hash: 0x60FE567DF1B1AF9D | Since: 323
 * @deprecated Use misc.startSaveArrayWithSize(size, arrayName) instead
 */
export declare function startSaveArrayWithSize(size: number, arrayName: string): any;
/**
 * No comment provided
 *
 * Hash: 0x04456F95153C6BE4 | Since: 323
 * @deprecated Use misc.stopSaveArray() instead
 */
export declare function stopSaveArray(): void;
/**
 * No comment provided
 *
 * Hash: 0x213AEB2B90CBA7AC | Since: 877
 * @deprecated Use misc.copyScriptStruct(size) instead
 */
export declare function copyScriptStruct(size: number): [any, any];
/**
 * https://alloc8or.re/gta5/doc/enums/DispatchType.txt
 *
 * Hash: 0xDC0F817884CDD856 | Since: 323
 * @deprecated Use misc.enableDispatchService(dispatchService, toggle) instead
 */
export declare function enableDispatchService(dispatchService: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9B2BD3773123EA2F | Since: 323
 * @deprecated Use misc.blockDispatchServiceResourceCreation(dispatchService, toggle) instead
 */
export declare function blockDispatchServiceResourceCreation(dispatchService: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEB4A0C2D56441717 | Since: 323
 * @deprecated Use misc.getNumberResourcesAllocatedToWantedLevel(dispatchService) instead
 */
export declare function getNumberResourcesAllocatedToWantedLevel(dispatchService: number): number;
/**
 * As for the 'police' incident, it will call police cars to you, but unlike PedsInCavalcades & Merryweather they won't start shooting at you unless you shoot first or shoot at them. The top 2 however seem to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I found out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 param I cant say is radius, but for the pedsInCavalcades and Merryweather R* uses 0.0f and for the top 3 (Emergency Services) they use 3.0f.
 *
 * Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course not IV).
 *
 * Side Note 2: I say it breaks as if you call this proper,
 * if(CREATE_INCIDENT) etc it will return false if you do as I said above.
 * =====================================================
 *
 * Hash: 0x3F892CAF67444AE7 | Since: 323
 * @deprecated Use misc.createIncident(dispatchService, pos, numUnits, radius) instead
 */
export declare function createIncident(dispatchService: number, pos: Vector3, numUnits: number, radius: number): [boolean, number];
/**
 * As for the 'police' incident, it will call police cars to you, but unlike PedsInCavalcades & Merryweather they won't start shooting at you unless you shoot first or shoot at them. The top 2 however seem to cancel theirselves if there is noone dead around you or a fire. I only figured them out as I found out the 3rd param is definately the amountOfPeople and they called incident 3 in scripts with 4 people (which the firetruck has) and incident 5 with 2 people (which the ambulence has). The 4 param I cant say is radius, but for the pedsInCavalcades and Merryweather R* uses 0.0f and for the top 3 (Emergency Services) they use 3.0f.
 *
 * Side Note: It seems calling the pedsInCavalcades or Merryweather then removing it seems to break you from calling the EmergencyEvents and I also believe pedsInCavalcades. (The V cavalcades of course not IV).
 *
 * Side Note 2: I say it breaks as if you call this proper,
 * if(CREATE_INCIDENT) etc it will return false if you do as I said above.
 * =====================================================
 *
 * Hash: 0x05983472F0494E60 | Since: 323
 * @deprecated Use misc.createIncidentWithEntity(dispatchService, ped, numUnits, radius) instead
 */
export declare function createIncidentWithEntity(dispatchService: number, ped: number | Ped, numUnits: number, radius: number): [boolean, number];
/**
 * Delete an incident with a given id.
 *
 * =======================================================
 * Correction, I have change this to int, instead of int*
 * as it doesn't use a pointer to the createdIncident.
 * If you try it you will crash (or) freeze.
 * =======================================================
 *
 * Hash: 0x556C1AA270D5A207 | Since: 323
 * @deprecated Use misc.deleteIncident(incidentId) instead
 */
export declare function deleteIncident(incidentId: number): void;
/**
 * =======================================================
 * Correction, I have change this to int, instead of int*
 * as it doesn't use a pointer to the createdIncident.
 * If you try it you will crash (or) freeze.
 * =======================================================
 *
 * Hash: 0xC8BC6461E629BEAA | Since: 323
 * @deprecated Use misc.isIncidentValid(incidentId) instead
 */
export declare function isIncidentValid(incidentId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB08B85D860E7BA3C | Since: 323
 * @deprecated Use misc.setIncidentRequestedUnits(incidentId, dispatchService, numUnits) instead
 */
export declare function setIncidentRequestedUnits(incidentId: number, dispatchService: number, numUnits: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD261BA3E7E998072 | Since: 323
 * @deprecated Use misc.setIdealSpawnDistanceForIncident(incidentId) instead
 */
export declare function setIdealSpawnDistanceForIncident(incidentId: number): void;
/**
 * Finds a position ahead of the player by predicting the players next actions.
 * The positions match path finding node positions.
 * When roads diverge, the position may rapidly change between two or more positions. This is due to the engine not being certain of which path the player will take.
 *
 * Hash: 0x6874E2190B0C1972 | Since: 323
 * @deprecated Use misc.findSpawnPointInDirection(pos, fwdVecX, fwdVecY, fwdVecZ, distance) instead
 */
export declare function findSpawnPointInDirection(pos: Vector3, fwdVecX: number, fwdVecY: number, fwdVecZ: number, distance: number): [boolean, Vector3];
/**
 * No comment provided
 *
 * Hash: 0x67F6413D3220E18D | Since: 323
 * @deprecated Use misc.addPopMultiplierArea(x1, y1, z1, x2, y2, z2) instead
 */
export declare function addPopMultiplierArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
/**
 * No comment provided
 *
 * Hash: 0x1327E2FE9746BAEE | Since: 323
 * @deprecated Use misc.doesPopMultiplierAreaExist(id) instead
 */
export declare function doesPopMultiplierAreaExist(id: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB129E447A2EDA4BF | Since: 323
 * @deprecated Use misc.removePopMultiplierArea(id) instead
 */
export declare function removePopMultiplierArea(id: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1312F4B242609CE3 | Since: 1290
 * @deprecated Use misc.isPopMultiplierAreaNetworked(id) instead
 */
export declare function isPopMultiplierAreaNetworked(id: number): boolean;
/**
 * This native is adding a zone, where you can change density settings. For example, you can add a zone on 0.0, 0.0, 0.0 with radius 900.0 and vehicleMultiplier 0.0, and you will not see any new population vehicle spawned in a radius of 900.0 from 0.0, 0.0, 0.0. Returns the id. You can have only 15 zones at the same time. You can remove zone using REMOVE_POP_MULTIPLIER_SPHERE
 *
 * Hash: 0x32C7A7E8C43A1F80 | Since: 323
 * @deprecated Use misc.addPopMultiplierSphere(pos, radius, pedMultiplier, vehicleMultiplier) instead
 */
export declare function addPopMultiplierSphere(pos: Vector3, radius: number, pedMultiplier: number, vehicleMultiplier: number): number;
/**
 * No comment provided
 *
 * Hash: 0x171BAFB3C60389F4 | Since: 791
 * @deprecated Use misc.doesPopMultiplierSphereExist(id) instead
 */
export declare function doesPopMultiplierSphereExist(id: number): boolean;
/**
 * Removes population multiplier sphere
 *
 * Hash: 0xE6869BECDD8F2403 | Since: 323
 * @deprecated Use misc.removePopMultiplierSphere(id) instead
 */
export declare function removePopMultiplierSphere(id: number): void;
/**
 * Makes the ped jump around like they're in a tennis match
 *
 * Hash: 0x28A04B411933F8A6 | Since: 323
 * @deprecated Use misc.enableTennisMode(ped, toggle) instead
 */
export declare function enableTennisMode(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x5D5479D115290C3F | Since: 323
 * @deprecated Use misc.isTennisMode(ped) instead
 */
export declare function isTennisMode(ped: number | Ped): boolean;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0xE266ED23311F24D4 | Since: 323
 * @deprecated Use misc.playTennisSwingAnim(ped, animDict, animName) instead
 */
export declare function playTennisSwingAnim(ped: number | Ped, animDict: string, animName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x17DF68D720AA77F8 | Since: 323
 * @deprecated Use misc.getTennisSwingAnimComplete(ped) instead
 */
export declare function getTennisSwingAnimComplete(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x19BFED045C647C49 | Since: 323
 * @deprecated Use misc.getTennisSwingAnimCanBeInterrupted(ped) instead
 */
export declare function getTennisSwingAnimCanBeInterrupted(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE95B0C7D5BA3B96B | Since: 323
 * @deprecated Use misc.getTennisSwingAnimSwung(ped) instead
 */
export declare function getTennisSwingAnimSwung(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8FA9C42FC5D7C64B | Since: 323
 * @deprecated Use misc.playTennisDiveAnim(ped) instead
 */
export declare function playTennisDiveAnim(ped: number | Ped): void;
/**
 * From the scripts:
 *
 * `MISC::SET_TENNIS_MOVE_NETWORK_SIGNAL_FLOAT(sub_aa49(a_0), "ForcedStopDirection", v_E);`
 *
 * Related to tennis mode.
 *
 * Hash: 0x54F157E0336A3822 | Since: 323
 * @deprecated Use misc.setTennisMoveNetworkSignalFloat(ped) instead
 */
export declare function setTennisMoveNetworkSignalFloat(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x5896F2BD5683A4E1 | Since: 1868
 * @deprecated Use misc.resetDispatchSpawnLocation() instead
 */
export declare function resetDispatchSpawnLocation(): void;
/**
 * No comment provided
 *
 * Hash: 0xD10F442036302D50 | Since: 323
 * @deprecated Use misc.setDispatchSpawnLocation(pos) instead
 */
export declare function setDispatchSpawnLocation(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x77A84429DD9F0A15 | Since: 323
 * @deprecated Use misc.resetDispatchIdealSpawnDistance() instead
 */
export declare function resetDispatchIdealSpawnDistance(): void;
/**
 * No comment provided
 *
 * Hash: 0x6FE601A64180D423 | Since: 323
 * @deprecated Use misc.setDispatchIdealSpawnDistance(distance) instead
 */
export declare function setDispatchIdealSpawnDistance(distance: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEB2DB0CAD13154B3 | Since: 323
 * @deprecated Use misc.resetDispatchTimeBetweenSpawnAttempts() instead
 */
export declare function resetDispatchTimeBetweenSpawnAttempts(): void;
/**
 * No comment provided
 *
 * Hash: 0x44F7CBC1BEB3327D | Since: 323
 * @deprecated Use misc.setDispatchTimeBetweenSpawnAttempts() instead
 */
export declare function setDispatchTimeBetweenSpawnAttempts(): void;
/**
 * No comment provided
 *
 * Hash: 0x48838ED9937A15D1 | Since: 323
 * @deprecated Use misc.setDispatchTimeBetweenSpawnAttemptsMultiplier() instead
 */
export declare function setDispatchTimeBetweenSpawnAttemptsMultiplier(): void;
/**
 * To remove, see: REMOVE_DISPATCH_SPAWN_BLOCKING_AREA
 * See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
 *
 * Hash: 0x918C7B2D2FF3928B | Since: 323
 * @deprecated Use misc.addDispatchSpawnAngledBlockingArea(x1, y1, z1, x2, y2, z2, width) instead
 */
export declare function addDispatchSpawnAngledBlockingArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): number;
/**
 * No comment provided
 *
 * Hash: 0x2D4259F1FEB81DA9 | Since: 323
 * @deprecated Use misc.addDispatchSpawnSphereBlockingArea(x1, y1, x2, y2) instead
 */
export declare function addDispatchSpawnSphereBlockingArea(x1: number, y1: number, x2: number, y2: number): number;
/**
 * No comment provided
 *
 * Hash: 0x264AC28B01B353A5 | Since: 323
 * @deprecated Use misc.removeDispatchSpawnBlockingArea() instead
 */
export declare function removeDispatchSpawnBlockingArea(): void;
/**
 * No comment provided
 *
 * Hash: 0xAC7BFD5C1D83EA75 | Since: 323
 * @deprecated Use misc.resetDispatchSpawnBlockingAreas() instead
 */
export declare function resetDispatchSpawnBlockingAreas(): void;
/**
 * No comment provided
 *
 * Hash: 0xD9F692D349249528 | Since: 323
 * @deprecated Use misc.resetWantedResponseNumPedsToSpawn() instead
 */
export declare function resetWantedResponseNumPedsToSpawn(): void;
/**
 * No comment provided
 *
 * Hash: 0xE532EC1A63231B4F | Since: 323
 * @deprecated Use misc.setWantedResponseNumPedsToSpawn() instead
 */
export declare function setWantedResponseNumPedsToSpawn(): void;
/**
 * No comment provided
 *
 * Hash: 0xB8721407EE9C3FF6 | Since: 323
 * @deprecated Use misc.addTacticalNavMeshPoint(pos) instead
 */
export declare function addTacticalNavMeshPoint(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xB3CD58CCA6CDA852 | Since: 323
 * @deprecated Use misc.clearTacticalNavMeshPoints() instead
 */
export declare function clearTacticalNavMeshPoints(): void;
/**
 * Activates (usused?) riot mode. All NPCs are being hostile to each other (including player). Also the game will give weapons (pistols, smgs) to random NPCs.
 *
 * Hash: 0x2587A48BC88DFADF | Since: 323
 * @deprecated Use misc.setRiotModeEnabled(toggle) instead
 */
export declare function setRiotModeEnabled(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCA78CFA0366592FE | Since: 323
 * @deprecated Use misc.displayOnscreenKeyboardWithLongerInitialString(windowTitle, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, defaultConcat4, defaultConcat5, defaultConcat6, defaultConcat7, maxInputLength) instead
 */
export declare function displayOnscreenKeyboardWithLongerInitialString(windowTitle: string, defaultText: string, defaultConcat1: string, defaultConcat2: string, defaultConcat3: string, defaultConcat4: string, defaultConcat5: string, defaultConcat6: string, defaultConcat7: string, maxInputLength: number): any;
/**
 * `sfink: note, p0 is set to 6 for PC platform in at least 1 script, or to `unk::_get_ui_language_id() == 0` otherwise.`
 *
 * NOTE: windowTitle uses text labels, and an invalid value will display nothing.
 *
 * www.gtaforums.com/topic/788343-vrel-script-hook-v/?p=1067380474
 *
 * windowTitle's
 * -----------------
 * CELL_EMAIL_BOD  =   "Enter your Eyefind message"
 * CELL_EMAIL_BODE =   "Message too long. Try again"
 * CELL_EMAIL_BODF    =   "Forbidden message. Try again"
 * CELL_EMAIL_SOD    =   "Enter your Eyefind subject"
 * CELL_EMAIL_SODE =   "Subject too long. Try again"
 * CELL_EMAIL_SODF    =   "Forbidden text. Try again"
 * CELL_EMASH_BOD   =   "Enter your Eyefind message"
 * CELL_EMASH_BODE =   "Message too long. Try again"
 * CELL_EMASH_BODF    =   "Forbidden message. Try again"
 * CELL_EMASH_SOD    =   "Enter your Eyefind subject"
 * CELL_EMASH_SODE =   "Subject too long. Try again"
 * CELL_EMASH_SODF    =   "Forbidden Text. Try again"
 * FMMC_KEY_TIP10   =   "Enter Synopsis"
 * FMMC_KEY_TIP12  =   "Enter Custom Team Name"
 * FMMC_KEY_TIP12F =   "Forbidden Text. Try again"
 * FMMC_KEY_TIP12N  =   "Custom Team Name"
 * FMMC_KEY_TIP8 =   "Enter Message"
 * FMMC_KEY_TIP8F   =   "Forbidden Text. Try again"
 * FMMC_KEY_TIP8FS  =   "Invalid Message. Try again"
 * FMMC_KEY_TIP8S  =   "Enter Message"
 * FMMC_KEY_TIP9    =   "Enter Outfit Name"
 * FMMC_KEY_TIP9F   =   "Invalid Outfit Name. Try again"
 * FMMC_KEY_TIP9N  =   "Outfit Name"
 * PM_NAME_CHALL  =   "Enter Challenge Name"
 *
 * Hash: 0x00DC833F2568DBF6 | Since: 323
 * @deprecated Use misc.displayOnscreenKeyboard(windowTitle, defaultText, defaultConcat1, defaultConcat2, defaultConcat3, maxInputLength) instead
 */
export declare function displayOnscreenKeyboard(windowTitle: string, defaultText: string, defaultConcat1: string, defaultConcat2: string, defaultConcat3: string, maxInputLength: number): void;
/**
 * Returns the current status of the onscreen keyboard, and updates the output.
 *
 * Status Codes:
 *
 * -1: Keyboard isn't active
 * 0: User still editing
 * 1: User has finished editing
 * 2: User has canceled editing
 *
 * Hash: 0x0CF2B696BBF945AE | Since: 323
 * @deprecated Use misc.updateOnscreenKeyboard() instead
 */
export declare function updateOnscreenKeyboard(): number;
/**
 * Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.
 *
 * Hash: 0x8362B09B91893647 | Since: 323
 * @deprecated Use misc.getOnscreenKeyboardResult() instead
 */
export declare function getOnscreenKeyboardResult(): string;
/**
 * DO NOT use this as it doesn't clean up the text input box properly and your script will get stuck in the UPDATE_ONSCREEN_KEYBOARD() loop.
 * Use FORCE_CLOSE_TEXT_INPUT_BOX instead.
 *
 * Hash: 0x58A39BE597CE99CD | Since: 757
 * @deprecated Use misc.cancelOnscreenKeyboard() instead
 */
export declare function cancelOnscreenKeyboard(): void;
/**
 * p0 was always 2 in R* scripts.
 * Called before calling DISPLAY_ONSCREEN_KEYBOARD if the input needs to be saved.
 *
 * Hash: 0x3ED1438C1F5C6612 | Since: 323
 * @deprecated Use misc.nextOnscreenKeyboardResultWillDisplayUsingTheseFonts() instead
 */
export declare function nextOnscreenKeyboardResultWillDisplayUsingTheseFonts(): void;
/**
 * Appears to remove stealth kill action from memory
 *
 * Hash: 0xA6A12939F16D85BE | Since: 323
 * @deprecated Use misc.actionManagerEnableAction(hash, enable) instead
 */
export declare function actionManagerEnableAction(hash: number | string, enable: boolean): void;
/**
 * GET_GAME_TIMER() / 1000
 *
 * Hash: 0x3F60413F5DF65748 | Since: 2612
 * @deprecated Use misc.getRealWorldTime() instead
 */
export declare function getRealWorldTime(): number;
/**
 * No comment provided
 *
 * Hash: 0x1EAE0A6E978894A2 | Since: 323
 * @deprecated Use misc.supressRandomEventThisFrame(eventType, suppress) instead
 */
export declare function supressRandomEventThisFrame(eventType: number, suppress: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA66C71C98D5F2CFB | Since: 323
 * @deprecated Use misc.setExplosiveAmmoThisFrame(player) instead
 */
export declare function setExplosiveAmmoThisFrame(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x11879CDD803D30F4 | Since: 323
 * @deprecated Use misc.setFireAmmoThisFrame(player) instead
 */
export declare function setFireAmmoThisFrame(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xFF1BED81BFDC0FE0 | Since: 323
 * @deprecated Use misc.setExplosiveMeleeThisFrame(player) instead
 */
export declare function setExplosiveMeleeThisFrame(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x57FFF03E423A4C0B | Since: 323
 * @deprecated Use misc.setSuperJumpThisFrame(player) instead
 */
export declare function setSuperJumpThisFrame(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x438822C279B73B93 | Since: 573
 * @deprecated Use misc.setBeastJumpThisFrame(player) instead
 */
export declare function setBeastJumpThisFrame(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xA1183BCFEE0F93D1 | Since: 1180
 * @deprecated Use misc.setForcedJumpThisFrame(player) instead
 */
export declare function setForcedJumpThisFrame(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x6FDDF453C0C756EC | Since: 323
 * @deprecated Use misc.hasGameInstalledThisSession() instead
 */
export declare function hasGameInstalledThisSession(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFB00CA71DA386228 | Since: 323
 * @deprecated Use misc.setTickerJohnmarstonIsDone() instead
 */
export declare function setTickerJohnmarstonIsDone(): void;
/**
 * No comment provided
 *
 * Hash: 0x5AA3BEFA29F03AD4 | Since: 323
 * @deprecated Use misc.areProfileSettingsValid() instead
 */
export declare function areProfileSettingsValid(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE3D969D2785FFB5E | Since: 323
 * @deprecated Use misc.preventArrestStateThisFrame() instead
 */
export declare function preventArrestStateThisFrame(): void;
/**
 * Sets the localplayer playerinfo state back to playing (State 0)
 *
 * States are:
 * -1: "Invalid"
 * 0: "Playing"
 * 1: "Died"
 * 2: "Arrested"
 * 3: "Failed Mission"
 * 4: "Left Game"
 * 5: "Respawn"
 * 6: "In MP Cutscene"
 *
 * Hash: 0xC0AA53F866B3134D | Since: 323
 * @deprecated Use misc.forceGameStatePlaying() instead
 */
export declare function forceGameStatePlaying(): void;
/**
 * No comment provided
 *
 * Hash: 0x0A60017F841A54F2 | Since: 323
 * @deprecated Use misc.scriptRaceInit() instead
 */
export declare function scriptRaceInit(): void;
/**
 * No comment provided
 *
 * Hash: 0x1FF6BF9A63E5757F | Since: 323
 * @deprecated Use misc.scriptRaceShutdown() instead
 */
export declare function scriptRaceShutdown(): void;
/**
 * No comment provided
 *
 * Hash: 0x1BB299305C3E8C13 | Since: 323
 * @deprecated Use misc.scriptRacePlayerHitCheckpoint(player) instead
 */
export declare function scriptRacePlayerHitCheckpoint(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x8EF5573A1F801A5C | Since: 323
 * @deprecated Use misc.scriptRaceGetPlayerSplitTime(player) instead
 */
export declare function scriptRaceGetPlayerSplitTime(player: number | string | Player): [boolean, number, number];
/**
 * No comment provided
 *
 * Hash: 0x92790862E36C2ADA | Since: 323
 * @deprecated Use misc.startEndUserBenchmark() instead
 */
export declare function startEndUserBenchmark(): void;
/**
 * No comment provided
 *
 * Hash: 0xC7DB36C24634F52B | Since: 323
 * @deprecated Use misc.stopEndUserBenchmark() instead
 */
export declare function stopEndUserBenchmark(): void;
/**
 * No comment provided
 *
 * Hash: 0x437138B6A830166A | Since: 323
 * @deprecated Use misc.resetEndUserBenchmark() instead
 */
export declare function resetEndUserBenchmark(): void;
/**
 * Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\GTA V\Benchmarks and submits some metrics.
 *
 * Hash: 0x37DEB0AA183FB6D8 | Since: 323
 * @deprecated Use misc.saveEndUserBenchmark() instead
 */
export declare function saveEndUserBenchmark(): void;
/**
 * Returns true if the current frontend menu is FE_MENU_VERSION_SP_PAUSE
 *
 * Hash: 0xEA2F2061875EED90 | Since: 323
 * @deprecated Use misc.uiStartedEndUserBenchmark() instead
 */
export declare function uiStartedEndUserBenchmark(): boolean;
/**
 * Returns true if the current frontend menu is FE_MENU_VERSION_LANDING_MENU
 *
 * Hash: 0x3BBBD13E5041A79E | Since: 323
 * @deprecated Use misc.landingScreenStartedEndUserBenchmark() instead
 */
export declare function landingScreenStartedEndUserBenchmark(): boolean;
/**
 * Returns true if command line option '-benchmark' is set.
 *
 * Hash: 0xA049A5BE0F04F2F8 | Since: 323
 * @deprecated Use misc.isCommandlineEndUserBenchmark() instead
 */
export declare function isCommandlineEndUserBenchmark(): boolean;
/**
 * Returns value of the '-benchmarkIterations' command line option.
 *
 * Hash: 0x4750FC27570311EC | Since: 323
 * @deprecated Use misc.getBenchmarkIterations() instead
 */
export declare function getBenchmarkIterations(): number;
/**
 * Returns value of the '-benchmarkPass' command line option.
 *
 * Hash: 0x1B2366C3F2A5C8DF | Since: 323
 * @deprecated Use misc.getBenchmarkPass() instead
 */
export declare function getBenchmarkPass(): number;
/**
 * In singleplayer it does exactly what the name implies. In FiveM / GTA:Online it shows `Disconnecting from GTA Online` HUD and then quits the game.
 *
 * Hash: 0xE574A662ACAEFBB1 | Since: 372
 * @deprecated Use misc.restartGame() instead
 */
export declare function restartGame(): void;
/**
 * Exits the game and downloads a fresh social club update on next restart.
 *
 * Hash: 0xEB6891F03362FB12 | Since: 323
 * @deprecated Use misc.quitGame() instead
 */
export declare function quitGame(): void;
/**
 * Hardcoded to always return true.
 *
 * Hash: 0x14832BF2ABA53FC5 | Since: 323
 * @deprecated Use misc.hasAsyncInstallFinished() instead
 */
export declare function hasAsyncInstallFinished(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC79AE21974B01FB2 | Since: 323
 * @deprecated Use misc.cleanupAsyncInstall() instead
 */
export declare function cleanupAsyncInstall(): void;
/**
 * aka "constrained"
 *
 * Hash: 0x684A41975F077262 | Since: 323
 * @deprecated Use misc.plmIsInConstrainedMode() instead
 */
export declare function plmIsInConstrainedMode(): boolean;
/**
 * Returns duration of how long the game has been in power-saving mode (aka "constrained") in milliseconds.
 *
 * Hash: 0xABB2FA71C83A1B72 | Since: 323
 * @deprecated Use misc.plmGetConstrainedDurationMs() instead
 */
export declare function plmGetConstrainedDurationMs(): number;
/**
 * If toggle is true, the ped's head is shown in the pause menu
 * If toggle is false, the ped's head is not shown in the pause menu
 *
 * Hash: 0x4EBB7E87AA0DBED4 | Since: 323
 * @deprecated Use misc.setPlayerIsInAnimalForm(toggle) instead
 */
export declare function setPlayerIsInAnimalForm(toggle: boolean): void;
/**
 * Although we don't have a jenkins hash for this one, the name is 100% confirmed.
 *
 * Hash: 0x9689123E3F213AA5 | Since: 323
 * @deprecated Use misc.getIsPlayerInAnimalForm() instead
 */
export declare function getIsPlayerInAnimalForm(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9D8D44ADBBA61EF2 | Since: 323
 * @deprecated Use misc.setPlayerIsRepeatingAMission(toggle) instead
 */
export declare function setPlayerIsRepeatingAMission(toggle: boolean): void;
/**
 * Does nothing (it's a nullsub).
 *
 * Hash: 0x23227DF0B2115469 | Since: 323
 * @deprecated Use misc.disableScreenDimmingThisFrame() instead
 */
export declare function disableScreenDimmingThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0xD10282B6E3751BA0 | Since: 323
 * @deprecated Use misc.getCityDensity() instead
 */
export declare function getCityDensity(): number;
/**
 * No comment provided
 *
 * Hash: 0x693478ACBD7F18E7 | Since: 1103
 * @deprecated Use misc.useActiveCameraForTimeslicingCentre() instead
 */
export declare function useActiveCameraForTimeslicingCentre(): void;
/**
 * No comment provided
 *
 * Hash: 0x4B82FA6F2D624634 | Since: 2612
 * @deprecated Use misc.setContentIdIndex(contentId, index) instead
 */
export declare function setContentIdIndex(contentId: number | string, index: number): void;
/**
 * No comment provided
 *
 * Hash: 0xECF041186C5A94DC | Since: 2612
 * @deprecated Use misc.getContentIdIndex(contentId) instead
 */
export declare function getContentIdIndex(contentId: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xBA4583AF4C678A9B | Since: 3095
 * @deprecated Use misc.setContentPropType(model, _type) instead
 */
export declare function setContentPropType(model: number | string, _type: number): void;
/**
 * Returns prop type for given model hash
 *
 * Hash: 0x8BAF8AD59F47AAFC | Since: 3095
 * @deprecated Use misc.getContentPropType(model) instead
 */
export declare function getContentPropType(model: number | string): number;
/**
 * Creates a mobile phone of the specified type.
 *
 * Possible phone types:
 *
 * 0 - Default phone / Michael's phone
 * 1 - Trevor's phone
 * 2 - Franklin's phone
 * 3 - Unused police phone
 * 4 - Prologue phone
 *
 * Higher values may crash your game.
 *
 * Hash: 0xA4E8E696C532FBC7 | Since: 323
 * @deprecated Use mobile.createPhone(phoneType) instead
 */
export declare function createMobilePhone(phoneType: number): void;
/**
 * Destroys the currently active mobile phone.
 *
 * Hash: 0x3BC861DF703E5097 | Since: 323
 * @deprecated Use mobile.destroyPhone() instead
 */
export declare function destroyMobilePhone(): void;
/**
 * The minimum/default is 500.0f. If you plan to make it bigger set it's position as well. Also this seems to need to be called in a loop as when you close the phone the scale is reset. If not in a loop you'd need to call it everytime before you re-open the phone.
 *
 * Hash: 0xCBDD322A73D6D932 | Since: 323
 * @deprecated Use mobile.setPhoneScale(scale) instead
 */
export declare function setMobilePhoneScale(scale: number): void;
/**
 * Last parameter is unknown and always zero.
 *
 * Hash: 0xBB779C0CA917E865 | Since: 323
 * @deprecated Use mobile.setPhoneRotation(rot) instead
 */
export declare function setMobilePhoneRotation(rot: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x1CEFB61F193070AE | Since: 323
 * @deprecated Use mobile.getPhoneRotation(p1) instead
 */
export declare function getMobilePhoneRotation(p1: number | Vehicle): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x693A5C6D6734085B | Since: 323
 * @deprecated Use mobile.setPhonePosition(pos) instead
 */
export declare function setMobilePhonePosition(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x584FDFDA48805B86 | Since: 323
 * @deprecated Use mobile.getPhonePosition() instead
 */
export declare function getMobilePhonePosition(): Vector3;
/**
 * If bool Toggle = true so the mobile is hide to screen.
 * If bool Toggle = false so the mobile is show to screen.
 *
 * Hash: 0xF511F759238A5122 | Since: 323
 * @deprecated Use mobile.scriptIsMovingPhoneOffscreen(toggle) instead
 */
export declare function scriptIsMovingMobilePhoneOffscreen(toggle: boolean): void;
/**
 * This one is weird and seems to return a TRUE state regardless of whether the phone is visible on screen or tucked away.
 *
 *
 * I can confirm the above. This function is hard-coded to always return 1.
 *
 * Hash: 0xC4E2813898C97A4B | Since: 323
 * @deprecated Use mobile.canPhoneBeSeenOnScreen() instead
 */
export declare function canPhoneBeSeenOnScreen(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x375A706A5C2FD084 | Since: 372
 * @deprecated Use mobile.setPhoneDofState(toggle) instead
 */
export declare function setMobilePhoneDofState(toggle: boolean): void;
/**
 * For move the finger of player, the value of int goes 1 at 5.
 *
 * Hash: 0x95C9E72F3D7DEC9B | Since: 323
 * @deprecated Use mobile.cellSetInput(direction) instead
 */
export declare function cellSetInput(direction: number): void;
/**
 * if the bool "Toggle" is "true" so the phone is lean.
 * if the bool "Toggle" is "false" so the phone is not lean.
 *
 * Hash: 0x44E44169EF70138E | Since: 323
 * @deprecated Use mobile.cellHorizontalModeToggle(toggle) instead
 */
export declare function cellHorizontalModeToggle(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xFDE8F069C542D126 | Since: 323
 * @deprecated Use mobile.cellCamActivate() instead
 */
export declare function cellCamActivate(): void;
/**
 * No comment provided
 *
 * Hash: 0x015C49A93E3E086E | Since: 323
 * @deprecated Use mobile.cellCamActivateSelfieMode(toggle) instead
 */
export declare function cellCamActivateSelfieMode(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA2CCBE62CD4C91A4 | Since: 323
 * @deprecated Use mobile.cellCamActivateShallowDofMode(toggle) instead
 */
export declare function cellCamActivateShallowDofMode(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1B0B4AEED5B9B41C | Since: 323
 * @deprecated Use mobile.cellCamSetSelfieModeSideOffsetScaling() instead
 */
export declare function cellCamSetSelfieModeSideOffsetScaling(): void;
/**
 * No comment provided
 *
 * Hash: 0x53F4892D18EC90A4 | Since: 323
 * @deprecated Use mobile.cellCamSetSelfieModeHorzPanOffset(horizontalPan) instead
 */
export declare function cellCamSetSelfieModeHorzPanOffset(horizontalPan: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3117D84EFA60F77B | Since: 323
 * @deprecated Use mobile.cellCamSetSelfieModeVertPanOffset(vertPan) instead
 */
export declare function cellCamSetSelfieModeVertPanOffset(vertPan: number): void;
/**
 * No comment provided
 *
 * Hash: 0x15E69E2802C24B8D | Since: 323
 * @deprecated Use mobile.cellCamSetSelfieModeRollOffset(roll) instead
 */
export declare function cellCamSetSelfieModeRollOffset(roll: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAC2890471901861C | Since: 323
 * @deprecated Use mobile.cellCamSetSelfieModeDistanceScaling(distanceScaling) instead
 */
export declare function cellCamSetSelfieModeDistanceScaling(distanceScaling: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD6ADE981781FCA09 | Since: 323
 * @deprecated Use mobile.cellCamSetSelfieModeHeadYawOffset(yaw) instead
 */
export declare function cellCamSetSelfieModeHeadYawOffset(yaw: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF1E22DC13F5EEBAD | Since: 323
 * @deprecated Use mobile.cellCamSetSelfieModeHeadRollOffset(roll) instead
 */
export declare function cellCamSetSelfieModeHeadRollOffset(roll: number): void;
/**
 * No comment provided
 *
 * Hash: 0x466DA42C89865553 | Since: 323
 * @deprecated Use mobile.cellCamSetSelfieModeHeadPitchOffset(pitch) instead
 */
export declare function cellCamSetSelfieModeHeadPitchOffset(pitch: number): void;
/**
 * No comment provided
 *
 * Hash: 0x439E9BC95B7E7FBE | Since: 323
 * @deprecated Use mobile.cellCamIsCharVisibleNoFaceCheck(entity) instead
 */
export declare function cellCamIsCharVisibleNoFaceCheck(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB4A53E05F68B6FA1 | Since: 323
 * @deprecated Use mobile.getPhoneRenderId() instead
 */
export declare function getMobilePhoneRenderId(): number;
/**
 * No comment provided
 *
 * Hash: 0x3DA5ECD1A56CBA6D | Since: 323
 * @deprecated Use money.networkInitializeCash(wallet, bank) instead
 */
export declare function networkInitializeCash(wallet: number, bank: number): void;
/**
 * Note the 2nd parameters are always 1, 0. I have a feeling it deals with your money, wallet, bank. So when you delete the character it of course wipes the wallet cash at that time. So if that was the case, it would be eg, NETWORK_DELETE_CHARACTER(characterIndex, deleteWalletCash, deleteBankCash);
 *
 * Hash: 0x05A50AF38947EB8D | Since: 323
 * @deprecated Use money.networkDeleteCharacter(characterSlot) instead
 */
export declare function networkDeleteCharacter(characterSlot: number): void;
/**
 * No comment provided
 *
 * Hash: 0x821418C727FCACD7 | Since: 791
 * @deprecated Use money.networkManualDeleteCharacter(characterSlot) instead
 */
export declare function networkManualDeleteCharacter(characterSlot: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFB2456B2040A6A67 | Since: 323
 * @deprecated Use money.networkGetPlayerIsHighEarner() instead
 */
export declare function networkGetPlayerIsHighEarner(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA921DED15FDF28F5 | Since: 323
 * @deprecated Use money.networkClearCharacterWallet(characterSlot) instead
 */
export declare function networkClearCharacterWallet(characterSlot: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFB18DF9CB95E0105 | Since: 323
 * @deprecated Use money.networkGivePlayerJobshareCash(amount) instead
 */
export declare function networkGivePlayerJobshareCash(amount: number): any;
/**
 * No comment provided
 *
 * Hash: 0x56A3B51944C50598 | Since: 323
 * @deprecated Use money.networkReceivePlayerJobshareCash(value) instead
 */
export declare function networkReceivePlayerJobshareCash(value: number): any;
/**
 * No comment provided
 *
 * Hash: 0x1C2473301B1C66BA | Since: 323
 * @deprecated Use money.networkCanShareJobCash() instead
 */
export declare function networkCanShareJobCash(): boolean;
/**
 * index
 * -------
 * See function sub_1005 in am_boat_taxi.ysc
 *
 * context
 * ----------
 * "BACKUP_VAGOS"
 * "BACKUP_LOST"
 * "BACKUP_FAMILIES"
 * "HIRE_MUGGER"
 * "HIRE_MERCENARY"
 * "BUY_CARDROPOFF"
 * "HELI_PICKUP"
 * "BOAT_PICKUP"
 * "CLEAR_WANTED"
 * "HEAD_2_HEAD"
 * "CHALLENGE"
 * "SHARE_LAST_JOB"
 * "DEFAULT"
 *
 * reason
 * ---------
 * "NOTREACHTARGET"
 * "TARGET_ESCAPE"
 * "DELIVERY_FAIL"
 * "NOT_USED"
 * "TEAM_QUIT"
 * "SERVER_ERROR"
 * "RECEIVE_LJ_L"
 * "CHALLENGE_PLAYER_LEFT"
 * "DEFAULT"
 *
 * unk
 * -----
 * Unknown bool value
 *
 *
 *
 * Hash: 0xF9C812CD7C46E817 | Since: 323
 * @deprecated Use money.networkRefundCash(index, context, reason) instead
 */
export declare function networkRefundCash(index: number, context: string, reason: string): void;
/**
 * No comment provided
 *
 * Hash: 0x18B7AE224B087E26 | Since: 323
 * @deprecated Use money.networkDeductCash(amount) instead
 */
export declare function networkDeductCash(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x81404F3DC124FE5B | Since: 323
 * @deprecated Use money.networkMoneyCanBet(amount) instead
 */
export declare function networkMoneyCanBet(amount: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3A54E33660DED67F | Since: 323
 * @deprecated Use money.networkCanBet(amount) instead
 */
export declare function networkCanBet(amount: number): boolean;
/**
 * GTAO_CASINO_HOUSE
 * GTAO_CASINO_INSIDETRACK
 * GTAO_CASINO_LUCKYWHEEL
 * GTAO_CASINO_BLACKJACK
 * GTAO_CASINO_ROULETTE
 * GTAO_CASINO_SLOTS
 * GTAO_CASINO_PURCHASE_CHIPS
 *
 * NETWORK_C*
 *
 * Hash: 0x158C16F5E4CF41F8 | Since: 1734
 * @deprecated Use money.networkCasinoCanBet(hash) instead
 */
export declare function networkCasinoCanBet(hash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x394DCDB9E836B7A9 | Since: 1734
 * @deprecated Use money.networkCasinoCanBetPvc() instead
 */
export declare function networkCasinoCanBetPvc(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF62F6D9528358FE4 | Since: 1734
 * @deprecated Use money.networkCasinoCanBetAmount() instead
 */
export declare function networkCasinoCanBetAmount(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8968D4D8C6C40C11 | Since: 1734
 * @deprecated Use money.networkCasinoCanBuyChipsPvc() instead
 */
export declare function networkCasinoCanBuyChipsPvc(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3BD101471C7F9EEC | Since: 1734
 * @deprecated Use money.networkCasinoBuyChips() instead
 */
export declare function networkCasinoBuyChips(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xED44897CB336F480 | Since: 1734
 * @deprecated Use money.networkCasinoSellChips() instead
 */
export declare function networkCasinoSellChips(): boolean;
/**
 * Does nothing (it's a nullsub).
 *
 * Hash: 0xCD0F5B5D932AE473 | Since: 323
 * @deprecated Use money.networkDeferCashTransactionsUntilShopSave() instead
 */
export declare function networkDeferCashTransactionsUntilShopSave(): void;
/**
 * No comment provided
 *
 * Hash: 0x9777734DAD16992F | Since: 573
 * @deprecated Use money.canPayAmountToBoss(amount) instead
 */
export declare function canPayAmountToBoss(amount: number): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xED1517D3AF17C698 | Since: 323
 * @deprecated Use money.networkEarnFromPickup(amount) instead
 */
export declare function networkEarnFromPickup(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x718FBBF67414FA36 | Since: 1290
 * @deprecated Use money.networkEarnFromCashingOut(amount) instead
 */
export declare function networkEarnFromCashingOut(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA03D4ACE0A3284CE | Since: 323
 * @deprecated Use money.networkEarnFromGangattackPickup(amount) instead
 */
export declare function networkEarnFromGangattackPickup(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFA700D8A9905F78A | Since: 1604
 * @deprecated Use money.networkEarnAssassinateTargetKilled(amount) instead
 */
export declare function networkEarnAssassinateTargetKilled(amount: number): void;
/**
 * For the money bags that drop a max of $40,000. Often called 40k bags.
 *
 * Most likely NETWORK_EARN_FROM_ROB***
 *
 * Hash: 0xF514621E8EA463D0 | Since: 323
 * @deprecated Use money.networkEarnFromRobArmoredCars(amount) instead
 */
export declare function networkEarnFromRobArmoredCars(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB1CC1B9EC3007A2A | Since: 323
 * @deprecated Use money.networkEarnFromCrateDrop(amount) instead
 */
export declare function networkEarnFromCrateDrop(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x827A5BA1A44ACA6D | Since: 323
 * @deprecated Use money.networkEarnFromBetting(amount) instead
 */
export declare function networkEarnFromBetting(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB2CC4836834E8A98 | Since: 323
 * @deprecated Use money.networkEarnFromJob(amount) instead
 */
export declare function networkEarnFromJob(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDEBBF584665411D0 | Since: 1734
 * @deprecated Use money.networkEarnFromJobx2(amount) instead
 */
export declare function networkEarnFromJobx2(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC8407624CEF2354B | Since: 791
 * @deprecated Use money.networkEarnFromPremiumJob(amount) instead
 */
export declare function networkEarnFromPremiumJob(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x61326EE6DF15B0CA | Since: 323
 * @deprecated Use money.networkEarnFromBendJob(amount, heistHash) instead
 */
export declare function networkEarnFromBendJob(amount: number, heistHash: string): void;
/**
 * No comment provided
 *
 * Hash: 0x2B171E6B2F64D8DF | Since: 323
 * @deprecated Use money.networkEarnFromChallengeWin() instead
 */
export declare function networkEarnFromChallengeWin(): any;
/**
 * No comment provided
 *
 * Hash: 0x131BB5DA15453ACF | Since: 323
 * @deprecated Use money.networkEarnFromBounty(amount) instead
 */
export declare function networkEarnFromBounty(amount: number): [any, any];
/**
 * No comment provided
 *
 * Hash: 0xF92A014A634442D6 | Since: 323
 * @deprecated Use money.networkEarnFromImportExport(amount, modelHash) instead
 */
export declare function networkEarnFromImportExport(amount: number, modelHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x45B8154E077D9E4D | Since: 323
 * @deprecated Use money.networkEarnFromHoldups(amount) instead
 */
export declare function networkEarnFromHoldups(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x849648349D77F5C5 | Since: 323
 * @deprecated Use money.networkEarnFromProperty(amount, propertyName) instead
 */
export declare function networkEarnFromProperty(amount: number, propertyName: number | string): void;
/**
 * DSPORT
 *
 * Hash: 0x515B4A22E4D3C6D7 | Since: 323
 * @deprecated Use money.networkEarnFromAiTargetKill() instead
 */
export declare function networkEarnFromAiTargetKill(): void;
/**
 * No comment provided
 *
 * Hash: 0x4337511FA8221D36 | Since: 323
 * @deprecated Use money.networkEarnFromNotBadsport(amount) instead
 */
export declare function networkEarnFromNotBadsport(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB539BD8A4C1EECF8 | Since: 323
 * @deprecated Use money.networkEarnFromVehicle() instead
 */
export declare function networkEarnFromVehicle(): void;
/**
 * No comment provided
 *
 * Hash: 0x3F4D00167E41E0AD | Since: 323
 * @deprecated Use money.networkEarnFromPersonalVehicle() instead
 */
export declare function networkEarnFromPersonalVehicle(): void;
/**
 * type either Monthly,Weekly,Daily
 *
 * Hash: 0x6EA318C91C1A8786 | Since: 323
 * @deprecated Use money.networkEarnFromDailyObjectives(amount, _type, characterSlot) instead
 */
export declare function networkEarnFromDailyObjectives(amount: number, _type: string, characterSlot: number): void;
/**
 * Example for p1: "AM_DISTRACT_COPS"
 *
 * Hash: 0xFB6DB092FBAE29E6 | Since: 323
 * @deprecated Use money.networkEarnFromAmbientJob() instead
 */
export declare function networkEarnFromAmbientJob(): any;
/**
 * No comment provided
 *
 * Hash: 0x6816FB4416760775 | Since: 323
 * @deprecated Use money.networkEarnFromJobBonus() instead
 */
export declare function networkEarnFromJobBonus(): [any, any];
/**
 * No comment provided
 *
 * Hash: 0xFA009A62990671D4 | Since: 1290
 * @deprecated Use money.networkEarnFromCriminalMastermind() instead
 */
export declare function networkEarnFromCriminalMastermind(): void;
/**
 * No comment provided
 *
 * Hash: 0x9D4FDBB035229669 | Since: 1290
 * @deprecated Use money.networkEarnHeistAward() instead
 */
export declare function networkEarnHeistAward(): void;
/**
 * No comment provided
 *
 * Hash: 0x11B0A20C493F7E36 | Since: 1290
 * @deprecated Use money.networkEarnFirstTimeBonus() instead
 */
export declare function networkEarnFirstTimeBonus(): void;
/**
 * No comment provided
 *
 * Hash: 0xCDA1C62BE2777802 | Since: 573
 * @deprecated Use money.networkEarnGoon() instead
 */
export declare function networkEarnGoon(): void;
/**
 * No comment provided
 *
 * Hash: 0x08B0CA7A6AB3AC32 | Since: 573
 * @deprecated Use money.networkEarnBoss() instead
 */
export declare function networkEarnBoss(): void;
/**
 * No comment provided
 *
 * Hash: 0x0CB1BE0633C024A8 | Since: 573
 * @deprecated Use money.networkEarnAgency() instead
 */
export declare function networkEarnAgency(): void;
/**
 * No comment provided
 *
 * Hash: 0x3E4ADAFF1830F146 | Since: 757
 * @deprecated Use money.networkEarnFromWarehouse(amount, id) instead
 */
export declare function networkEarnFromWarehouse(amount: number, id: number): void;
/**
 * No comment provided
 *
 * Hash: 0xECA658CE2A4E5A72 | Since: 757
 * @deprecated Use money.networkEarnFromContraband(amount) instead
 */
export declare function networkEarnFromContraband(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x84C0116D012E8FC2 | Since: 757
 * @deprecated Use money.networkEarnFromDestroyingContraband() instead
 */
export declare function networkEarnFromDestroyingContraband(): void;
/**
 * No comment provided
 *
 * Hash: 0x6B7E4FB50D5F3D65 | Since: 1180
 * @deprecated Use money.networkEarnFromSmugglerWork() instead
 */
export declare function networkEarnFromSmugglerWork(): void;
/**
 * No comment provided
 *
 * Hash: 0x31BA138F6304FB9F | Since: 1180
 * @deprecated Use money.networkEarnFromHangarTrade() instead
 */
export declare function networkEarnFromHangarTrade(): void;
/**
 * No comment provided
 *
 * Hash: 0x55A1E095DB052FA5 | Since: 877
 * @deprecated Use money.networkEarnPurchaseClubHouse() instead
 */
export declare function networkEarnPurchaseClubHouse(): void;
/**
 * No comment provided
 *
 * Hash: 0x8586789730B10CAF | Since: 877
 * @deprecated Use money.networkEarnFromBusinessProduct(amount) instead
 */
export declare function networkEarnFromBusinessProduct(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEDEAD9A91EC768B3 | Since: 944
 * @deprecated Use money.networkEarnFromVehicleExport(amount) instead
 */
export declare function networkEarnFromVehicleExport(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDEE612F2D71B0308 | Since: 1180
 * @deprecated Use money.networkEarnSmugglerAgency(amount) instead
 */
export declare function networkEarnSmugglerAgency(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF6B170F9A02E9E87 | Since: 1493
 * @deprecated Use money.networkEarnBountyHunterReward() instead
 */
export declare function networkEarnBountyHunterReward(): void;
/**
 * No comment provided
 *
 * Hash: 0x42FCE14F50F27291 | Since: 1493
 * @deprecated Use money.networkEarnFromBusinessBattle() instead
 */
export declare function networkEarnFromBusinessBattle(): void;
/**
 * No comment provided
 *
 * Hash: 0xA75EAC69F59E96E7 | Since: 1493
 * @deprecated Use money.networkEarnFromClubManagementParticipation() instead
 */
export declare function networkEarnFromClubManagementParticipation(): void;
/**
 * No comment provided
 *
 * Hash: 0xC5156361F26E2212 | Since: 1493
 * @deprecated Use money.networkEarnFromFmbbPhonecallMission() instead
 */
export declare function networkEarnFromFmbbPhonecallMission(): void;
/**
 * No comment provided
 *
 * Hash: 0x0B39CF0D53F1C883 | Since: 1493
 * @deprecated Use money.networkEarnFromBusinessHubSell() instead
 */
export declare function networkEarnFromBusinessHubSell(): void;
/**
 * No comment provided
 *
 * Hash: 0x1FDA0AA679C9919B | Since: 1493
 * @deprecated Use money.networkEarnFromFmbbBossWork() instead
 */
export declare function networkEarnFromFmbbBossWork(): void;
/**
 * No comment provided
 *
 * Hash: 0xFFFBA1B1F7C0B6F4 | Since: 1493
 * @deprecated Use money.networkEarnFmbbWageBonus() instead
 */
export declare function networkEarnFmbbWageBonus(): void;
/**
 * No comment provided
 *
 * Hash: 0xAB3CAA6B422164DA | Since: 323
 * @deprecated Use money.networkCanSpend() instead
 */
export declare function networkCanSpendMoney(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7303E27CC6532080 | Since: 323
 * @deprecated Use money.networkCanSpend2() instead
 */
export declare function networkCanSpendMoney2(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xF0077C797F66A355 | Since: 323
 * @deprecated Use money.networkBuyItem(amount, item, item_name) instead
 */
export declare function networkBuyItem(amount: number, item: number | string, item_name: string): void;
/**
 * No comment provided
 *
 * Hash: 0x17C3A7D31EAE39F9 | Since: 323
 * @deprecated Use money.networkSpentTaxi(amount) instead
 */
export declare function networkSpentTaxi(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5FD5ED82CBBE9989 | Since: 323
 * @deprecated Use money.networkPayEmployeeWage() instead
 */
export declare function networkPayEmployeeWage(): void;
/**
 * No comment provided
 *
 * Hash: 0x9346E14F2AF74D46 | Since: 323
 * @deprecated Use money.networkPayMatchEntryFee(amount, matchId) instead
 */
export declare function networkPayMatchEntryFee(amount: number, matchId: string): void;
/**
 * No comment provided
 *
 * Hash: 0x1C436FD11FFA692F | Since: 323
 * @deprecated Use money.networkSpentBetting(amount, matchId) instead
 */
export declare function networkSpentBetting(amount: number, matchId: string): void;
/**
 * No comment provided
 *
 * Hash: 0xD99DB210089617FE | Since: 573
 * @deprecated Use money.networkSpentWager(amount) instead
 */
export declare function networkSpentWager(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEE99784E4467689C | Since: 323
 * @deprecated Use money.networkSpentInStripclub() instead
 */
export declare function networkSpentInStripclub(): void;
/**
 * No comment provided
 *
 * Hash: 0xD9B067E55253E3DD | Since: 323
 * @deprecated Use money.networkBuyHealthcare(cost) instead
 */
export declare function networkBuyHealthcare(cost: number): void;
/**
 * p1 = 0 (always)
 * p2 = 1 (always)
 *
 * Hash: 0x763B4BD305338F19 | Since: 323
 * @deprecated Use money.networkBuyAirstrike(cost) instead
 */
export declare function networkBuyAirstrike(cost: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA3EDDAA42411D3B9 | Since: 323
 * @deprecated Use money.networkBuyBackupGang(npcProvider) instead
 */
export declare function networkBuyBackupGang(npcProvider: number): void;
/**
 * p1 = 0 (always)
 * p2 = 1 (always)
 *
 * Hash: 0x81AA4610E3FD3A69 | Since: 323
 * @deprecated Use money.networkBuyHeliStrike(cost) instead
 */
export declare function networkBuyHeliStrike(cost: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB162DC95C0A3317B | Since: 323
 * @deprecated Use money.networkSpentAmmoDrop() instead
 */
export declare function networkSpentAmmoDrop(): void;
/**
 * p1 is just an assumption. p2 was false and p3 was true.
 *
 * Hash: 0x7B718E197453F2D9 | Since: 323
 * @deprecated Use money.networkBuyBounty(amount, victim) instead
 */
export declare function networkBuyBounty(amount: number, victim: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x650A08A280870AF6 | Since: 323
 * @deprecated Use money.networkBuyProperty(cost, propertyName) instead
 */
export declare function networkBuyProperty(cost: number, propertyName: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x75AF80E61248EEBD | Since: 323
 * @deprecated Use money.networkBuySmokes() instead
 */
export declare function networkBuySmokes(): void;
/**
 * No comment provided
 *
 * Hash: 0x7BF1D73DB2ECA492 | Since: 323
 * @deprecated Use money.networkSpentHeliPickup() instead
 */
export declare function networkSpentHeliPickup(): void;
/**
 * No comment provided
 *
 * Hash: 0x524EE43A37232C00 | Since: 323
 * @deprecated Use money.networkSpentBoatPickup() instead
 */
export declare function networkSpentBoatPickup(): void;
/**
 * No comment provided
 *
 * Hash: 0xA6DD8458CE24012C | Since: 323
 * @deprecated Use money.networkSpentBullShark() instead
 */
export declare function networkSpentBullShark(): void;
/**
 * No comment provided
 *
 * Hash: 0x289016EC778D60E0 | Since: 323
 * @deprecated Use money.networkSpentCashDrop(amount) instead
 */
export declare function networkSpentCashDrop(amount: number): void;
/**
 * Only used once in a script (am_contact_requests)
 * p1 = 0
 * p2 = 1
 *
 * Hash: 0xE404BFB981665BF0 | Since: 323
 * @deprecated Use money.networkSpentHireMugger() instead
 */
export declare function networkSpentHireMugger(): void;
/**
 * No comment provided
 *
 * Hash: 0x995A65F15F581359 | Since: 323
 * @deprecated Use money.networkSpentRobbedByMugger(amount) instead
 */
export declare function networkSpentRobbedByMugger(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE7B80E2BF9D80BD6 | Since: 323
 * @deprecated Use money.networkSpentHireMercenary() instead
 */
export declare function networkSpentHireMercenary(): void;
/**
 * No comment provided
 *
 * Hash: 0xE1B13771A843C4F6 | Since: 323
 * @deprecated Use money.networkSpentBuyWantedlevel() instead
 */
export declare function networkSpentBuyWantedlevel(): any;
/**
 * No comment provided
 *
 * Hash: 0xA628A745E2275C5D | Since: 323
 * @deprecated Use money.networkSpentBuyOfftheradar() instead
 */
export declare function networkSpentBuyOfftheradar(): void;
/**
 * No comment provided
 *
 * Hash: 0x6E176F1B18BC0637 | Since: 323
 * @deprecated Use money.networkSpentBuyRevealPlayers() instead
 */
export declare function networkSpentBuyRevealPlayers(): void;
/**
 * No comment provided
 *
 * Hash: 0xEC03C719DB2F4306 | Since: 323
 * @deprecated Use money.networkSpentCarwash() instead
 */
export declare function networkSpentCarwash(): void;
/**
 * No comment provided
 *
 * Hash: 0x6B38ECB05A63A685 | Since: 323
 * @deprecated Use money.networkSpentCinema() instead
 */
export declare function networkSpentCinema(): void;
/**
 * No comment provided
 *
 * Hash: 0x7FE61782AD94CC09 | Since: 323
 * @deprecated Use money.networkSpentTelescope() instead
 */
export declare function networkSpentTelescope(): void;
/**
 * No comment provided
 *
 * Hash: 0xD9B86B9872039763 | Since: 323
 * @deprecated Use money.networkSpentHoldups() instead
 */
export declare function networkSpentHoldups(): void;
/**
 * No comment provided
 *
 * Hash: 0x6D3A430D1A809179 | Since: 323
 * @deprecated Use money.networkSpentBuyPassiveMode() instead
 */
export declare function networkSpentBuyPassiveMode(): void;
/**
 * No comment provided
 *
 * Hash: 0xCA230C9682556CF1 | Since: 323
 * @deprecated Use money.networkSpentBankInterest() instead
 */
export declare function networkSpentBankInterest(): void;
/**
 * No comment provided
 *
 * Hash: 0xB21B89501CFAC79E | Since: 323
 * @deprecated Use money.networkSpentProstitutes() instead
 */
export declare function networkSpentProstitutes(): void;
/**
 * No comment provided
 *
 * Hash: 0x812F5488B1B2A299 | Since: 323
 * @deprecated Use money.networkSpentArrestBail() instead
 */
export declare function networkSpentArrestBail(): void;
/**
 * According to how I understood this in the freemode script alone,
 * The first parameter is determined by a function named, func_5749 within the freemode script which has a list of all the vehicles and a set price to return which some vehicles deals with globals as well. So the first parameter is basically the set in stone insurance cost it's gonna charge you for that specific vehicle model.
 *
 * The second parameter whoever put it was right, they call GET_ENTITY_MODEL with the vehicle as the paremeter.
 *
 * The third parameter is the network handle as they call their little struct<13> func or atleast how the script decompiled it to look which in lamens terms just returns the network handle of the previous owner based on DECOR_GET_INT(vehicle, "Previous_Owner").
 *
 * The fourth parameter is a bool that returns true/false depending on if your bank balance is greater then 0.
 *
 * The fifth and last parameter is a bool that returns true/false depending on if you have the money for the car based on the cost returned by func_5749. In the freemode script eg,
 * `bool hasTheMoney = MONEY::_GET_BANK_BALANCE() < carCost.`
 *
 * Hash: 0x9FF28D88C766E3E8 | Since: 323
 * @deprecated Use money.networkSpentPayVehicleInsurancePremium(amount, vehicleModel, notBankrupt, hasTheMoney) instead
 */
export declare function networkSpentPayVehicleInsurancePremium(amount: number, vehicleModel: number | string, notBankrupt: boolean, hasTheMoney: boolean): any;
/**
 * No comment provided
 *
 * Hash: 0xACDE7185B374177C | Since: 323
 * @deprecated Use money.networkSpentCallPlayer() instead
 */
export declare function networkSpentCallPlayer(): any;
/**
 * No comment provided
 *
 * Hash: 0x29B260B84947DFCC | Since: 323
 * @deprecated Use money.networkSpentBounty() instead
 */
export declare function networkSpentBounty(): void;
/**
 * No comment provided
 *
 * Hash: 0x6A445B64ED7ABEB5 | Since: 323
 * @deprecated Use money.networkSpentFromRockstar() instead
 */
export declare function networkSpentFromRockstar(): void;
/**
 * Hardcoded to return 0.
 *
 * Hash: 0x9B5016A6433A68C5 | Since: 323
 * @deprecated Use money.networkSpendEarnedFromBankAndWallets(amount) instead
 */
export declare function networkSpendEarnedFromBankAndWallets(amount: number): number;
/**
 * This isn't a hash collision.
 *
 * Hash: 0x20194D48EAEC9A41 | Since: 323
 * @deprecated Use money.processCashGift() instead
 */
export declare function processCashGift(): [string, number, number];
/**
 * No comment provided
 *
 * Hash: 0xCD4D66B43B1DD28D | Since: 2189
 * @deprecated Use money.networkSpentMoveSubmarine() instead
 */
export declare function networkSpentMoveSubmarine(): void;
/**
 * No comment provided
 *
 * Hash: 0x7C99101F7FCE2EE5 | Since: 323
 * @deprecated Use money.networkSpentPlayerHealthcare() instead
 */
export declare function networkSpentPlayerHealthcare(): void;
/**
 * No comment provided
 *
 * Hash: 0xD5BB406F4E04019F | Since: 323
 * @deprecated Use money.networkSpentNoCops() instead
 */
export declare function networkSpentNoCops(): void;
/**
 * No comment provided
 *
 * Hash: 0x948705F6F9C50824 | Since: 2699
 * @deprecated Use money.networkSpentCargoSourcing() instead
 */
export declare function networkSpentCargoSourcing(): void;
/**
 * No comment provided
 *
 * Hash: 0x8204DA7934DF3155 | Since: 323
 * @deprecated Use money.networkSpentRequestJob() instead
 */
export declare function networkSpentRequestJob(): void;
/**
 * No comment provided
 *
 * Hash: 0x9D26502BB97BFE62 | Since: 323
 * @deprecated Use money.networkSpentRequestHeist() instead
 */
export declare function networkSpentRequestHeist(): void;
/**
 * The first parameter is the amount spent which is store in a global when this native is called. The global returns 10. Which is the price for both rides.
 *
 * The last 3 parameters are,
 * 2,0,1 in the am_ferriswheel.c
 * 1,0,1 in the am_rollercoaster.c
 *
 *
 * Hash: 0x8A7B3952DD64D2B5 | Since: 323
 * @deprecated Use money.networkBuyFairgroundRide(amount) instead
 */
export declare function networkBuyFairgroundRide(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7C4FCCD2E4DEB394 | Since: 323
 * @deprecated Use money.networkEconomyHasFixedCrazyNumbers() instead
 */
export declare function networkEconomyHasFixedCrazyNumbers(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x28F174A67B8D0C2F | Since: 323
 * @deprecated Use money.networkSpentJobSkip(amount, matchId) instead
 */
export declare function networkSpentJobSkip(amount: number, matchId: string): void;
/**
 * No comment provided
 *
 * Hash: 0xFFBE02CD385356BD | Since: 573
 * @deprecated Use money.networkSpentBossGoon(amount) instead
 */
export declare function networkSpentBossGoon(amount: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x08A1B82B91900682 | Since: 573
 * @deprecated Use money.networkSpendGoon(amount) instead
 */
export declare function networkSpendGoon(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDBC966A01C02BCA7 | Since: 573
 * @deprecated Use money.networkSpendBoss() instead
 */
export declare function networkSpendBoss(): void;
/**
 * No comment provided
 *
 * Hash: 0xE7DF4E0545DFB56E | Since: 573
 * @deprecated Use money.networkSpentMoveYacht(amount) instead
 */
export declare function networkSpentMoveYacht(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFC4EE00A7B3BFB76 | Since: 573
 * @deprecated Use money.networkSpentRenameOrganization() instead
 */
export declare function networkSpentRenameOrganization(): void;
/**
 * No comment provided
 *
 * Hash: 0x30FD873ECE50E9F6 | Since: 757
 * @deprecated Use money.networkBuyContrabandMission(p2) instead
 */
export declare function networkBuyContrabandMission(p2: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x112209CE0290C03A | Since: 757
 * @deprecated Use money.networkSpentPaServiceHeli() instead
 */
export declare function networkSpentPaServiceHeli(): void;
/**
 * No comment provided
 *
 * Hash: 0xED5FD7AF10F5E262 | Since: 757
 * @deprecated Use money.networkSpentPaServiceVehicle() instead
 */
export declare function networkSpentPaServiceVehicle(): void;
/**
 * No comment provided
 *
 * Hash: 0x0D30EB83668E63C5 | Since: 757
 * @deprecated Use money.networkSpentPaServiceSnack() instead
 */
export declare function networkSpentPaServiceSnack(): void;
/**
 * No comment provided
 *
 * Hash: 0xB49ECA122467D05F | Since: 757
 * @deprecated Use money.networkSpentPaServiceDancer() instead
 */
export declare function networkSpentPaServiceDancer(): void;
/**
 * No comment provided
 *
 * Hash: 0xE23ADC6FCB1F29AE | Since: 757
 * @deprecated Use money.networkSpentPaServiceImpound() instead
 */
export declare function networkSpentPaServiceImpound(): void;
/**
 * No comment provided
 *
 * Hash: 0x0FE8E1FCD2B86B33 | Since: 757
 * @deprecated Use money.networkSpentPaHeliPickup() instead
 */
export declare function networkSpentPaHeliPickup(): void;
/**
 * No comment provided
 *
 * Hash: 0x69EF772B192614C1 | Since: 757
 * @deprecated Use money.networkSpentPurchaseOfficeProperty() instead
 */
export declare function networkSpentPurchaseOfficeProperty(): void;
/**
 * No comment provided
 *
 * Hash: 0x8E243837643D9583 | Since: 757
 * @deprecated Use money.networkSpentUpgradeOfficeProperty() instead
 */
export declare function networkSpentUpgradeOfficeProperty(): void;
/**
 * No comment provided
 *
 * Hash: 0xBD0EFB25CCA8F97A | Since: 757
 * @deprecated Use money.networkSpentPurchaseWarehouseProperty() instead
 */
export declare function networkSpentPurchaseWarehouseProperty(): void;
/**
 * No comment provided
 *
 * Hash: 0xA95F667A755725DA | Since: 757
 * @deprecated Use money.networkSpentUpgradeWarehouseProperty() instead
 */
export declare function networkSpentUpgradeWarehouseProperty(): void;
/**
 * No comment provided
 *
 * Hash: 0x33981D6804E62F49 | Since: 944
 * @deprecated Use money.networkSpentPurchaseImpexpWarehouseProperty(amount) instead
 */
export declare function networkSpentPurchaseImpexpWarehouseProperty(amount: number): any;
/**
 * No comment provided
 *
 * Hash: 0x4128464231E3CA0B | Since: 944
 * @deprecated Use money.networkSpentUpgradeImpexpWarehouseProperty() instead
 */
export declare function networkSpentUpgradeImpexpWarehouseProperty(): void;
/**
 * No comment provided
 *
 * Hash: 0x2FAB6614CE22E196 | Since: 944
 * @deprecated Use money.networkSpentTradeImpexpWarehouseProperty() instead
 */
export declare function networkSpentTradeImpexpWarehouseProperty(): void;
/**
 * No comment provided
 *
 * Hash: 0x05F04155A226FBBF | Since: 757
 * @deprecated Use money.networkSpentOrderWarehouseVehicle() instead
 */
export declare function networkSpentOrderWarehouseVehicle(): void;
/**
 * No comment provided
 *
 * Hash: 0xE8B0B270B6E7C76E | Since: 757
 * @deprecated Use money.networkSpentOrderBodyguardVehicle() instead
 */
export declare function networkSpentOrderBodyguardVehicle(): void;
/**
 * No comment provided
 *
 * Hash: 0x5BCDE0F640C773D2 | Since: 877
 * @deprecated Use money.networkSpentJukebox() instead
 */
export declare function networkSpentJukebox(): void;
/**
 * No comment provided
 *
 * Hash: 0x998E18CEB44487FC | Since: 877
 * @deprecated Use money.networkSpentPurchaseClubHouse() instead
 */
export declare function networkSpentPurchaseClubHouse(): void;
/**
 * No comment provided
 *
 * Hash: 0xFA07759E6FDDD7CF | Since: 877
 * @deprecated Use money.networkSpentUpgradeClubHouse() instead
 */
export declare function networkSpentUpgradeClubHouse(): void;
/**
 * No comment provided
 *
 * Hash: 0x6FD97159FE3C971A | Since: 877
 * @deprecated Use money.networkSpentPurchaseBusinessProperty() instead
 */
export declare function networkSpentPurchaseBusinessProperty(): void;
/**
 * No comment provided
 *
 * Hash: 0x675D19C6067CAE08 | Since: 877
 * @deprecated Use money.networkSpentUpgradeBusinessProperty() instead
 */
export declare function networkSpentUpgradeBusinessProperty(): void;
/**
 * No comment provided
 *
 * Hash: 0xA51B086B0B2C0F7A | Since: 877
 * @deprecated Use money.networkSpentTradeBusinessProperty() instead
 */
export declare function networkSpentTradeBusinessProperty(): void;
/**
 * No comment provided
 *
 * Hash: 0xD7CCCBA28C4ECAF0 | Since: 877
 * @deprecated Use money.networkSpentMcAbility() instead
 */
export declare function networkSpentMcAbility(): void;
/**
 * No comment provided
 *
 * Hash: 0x0035BB914316F1E3 | Since: 877
 * @deprecated Use money.networkSpentPayBusinessSupplies() instead
 */
export declare function networkSpentPayBusinessSupplies(): void;
/**
 * No comment provided
 *
 * Hash: 0x5F456788B05FAEAC | Since: 944
 * @deprecated Use money.networkSpentChangeAppearance() instead
 */
export declare function networkSpentChangeAppearance(): void;
/**
 * No comment provided
 *
 * Hash: 0xA75CCF58A60A5FD1 | Since: 944
 * @deprecated Use money.networkSpentVehicleExportMods() instead
 */
export declare function networkSpentVehicleExportMods(): void;
/**
 * No comment provided
 *
 * Hash: 0xB4C2EC463672474E | Since: 944
 * @deprecated Use money.networkSpentPurchaseOfficeGarage() instead
 */
export declare function networkSpentPurchaseOfficeGarage(): void;
/**
 * No comment provided
 *
 * Hash: 0x2AFC2D19B50797F2 | Since: 944
 * @deprecated Use money.networkSpentUpgradeOfficeGarage() instead
 */
export declare function networkSpentUpgradeOfficeGarage(): void;
/**
 * No comment provided
 *
 * Hash: 0xC1952F3773BA18FE | Since: 944
 * @deprecated Use money.networkSpentImportExportRepair() instead
 */
export declare function networkSpentImportExportRepair(): void;
/**
 * No comment provided
 *
 * Hash: 0xCCB339CC970452DA | Since: 1180
 * @deprecated Use money.networkSpentPurchaseHangar() instead
 */
export declare function networkSpentPurchaseHangar(): void;
/**
 * No comment provided
 *
 * Hash: 0x615EB504B0788DAF | Since: 1180
 * @deprecated Use money.networkSpentUpgradeHangar() instead
 */
export declare function networkSpentUpgradeHangar(): void;
/**
 * No comment provided
 *
 * Hash: 0xB18AC2ECBB15CB6A | Since: 1180
 * @deprecated Use money.networkSpentHangarUtilityCharges(amount) instead
 */
export declare function networkSpentHangarUtilityCharges(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB1F1346FD57685D7 | Since: 1180
 * @deprecated Use money.networkSpentHangarStaffCharges(amount) instead
 */
export declare function networkSpentHangarStaffCharges(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAC272C0AE01B4BD8 | Since: 1103
 * @deprecated Use money.networkSpentBuyTruck() instead
 */
export declare function networkSpentBuyTruck(): void;
/**
 * No comment provided
 *
 * Hash: 0x365E877C61D6988B | Since: 1103
 * @deprecated Use money.networkSpentUpgradeTruck() instead
 */
export declare function networkSpentUpgradeTruck(): void;
/**
 * No comment provided
 *
 * Hash: 0x12D148D26538D0F9 | Since: 1103
 * @deprecated Use money.networkSpentBuyBunker() instead
 */
export declare function networkSpentBuyBunker(): void;
/**
 * No comment provided
 *
 * Hash: 0x0C82D21A77C22D49 | Since: 1103
 * @deprecated Use money.networkSpentUpradeBunker() instead
 */
export declare function networkSpentUpradeBunker(): void;
/**
 * No comment provided
 *
 * Hash: 0x9251B6ABF2D0A5B4 | Since: 1103
 * @deprecated Use money.networkEarnFromSellBunker(amount, bunkerHash) instead
 */
export declare function networkEarnFromSellBunker(amount: number, bunkerHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x5D97630A8A0EF123 | Since: 1103
 * @deprecated Use money.networkSpentBallisticEquipment(amount) instead
 */
export declare function networkSpentBallisticEquipment(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7A5349B773584675 | Since: 1290
 * @deprecated Use money.networkEarnRdrBonus(amount) instead
 */
export declare function networkEarnRdrBonus(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x35F8DA0E8A31EF1B | Since: 1180
 * @deprecated Use money.networkEarnWagePayment(amount) instead
 */
export declare function networkEarnWagePayment(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x005ACA7100BD101D | Since: 1180
 * @deprecated Use money.networkEarnWagePaymentBonus(amount) instead
 */
export declare function networkEarnWagePaymentBonus(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4EA3F425C7744D21 | Since: 1290
 * @deprecated Use money.networkSpentBuyBase() instead
 */
export declare function networkSpentBuyBase(): void;
/**
 * No comment provided
 *
 * Hash: 0x3DD3F33A5D55EA6F | Since: 1290
 * @deprecated Use money.networkSpentUpgradeBase() instead
 */
export declare function networkSpentUpgradeBase(): void;
/**
 * No comment provided
 *
 * Hash: 0x0CCE73BC7A11E885 | Since: 1290
 * @deprecated Use money.networkSpentBuyTiltrotor() instead
 */
export declare function networkSpentBuyTiltrotor(): void;
/**
 * No comment provided
 *
 * Hash: 0x165E135D6DFA2907 | Since: 1290
 * @deprecated Use money.networkSpentUpgradeTiltrotor() instead
 */
export declare function networkSpentUpgradeTiltrotor(): void;
/**
 * No comment provided
 *
 * Hash: 0x5BBBD92186E1F1C5 | Since: 1290
 * @deprecated Use money.networkSpentEmployAssassins() instead
 */
export declare function networkSpentEmployAssassins(): void;
/**
 * No comment provided
 *
 * Hash: 0x771ADB0E7635B7BF | Since: 1290
 * @deprecated Use money.networkSpendGangopsCannon() instead
 */
export declare function networkSpendGangopsCannon(): void;
/**
 * No comment provided
 *
 * Hash: 0xDA947AE8880D5C18 | Since: 1290
 * @deprecated Use money.networkSpendGangopsSkipMission() instead
 */
export declare function networkSpendGangopsSkipMission(): void;
/**
 * No comment provided
 *
 * Hash: 0x487009DD91D93429 | Since: 1868
 * @deprecated Use money.networkSpendCasinoHeistSkipMission() instead
 */
export declare function networkSpendCasinoHeistSkipMission(): void;
/**
 * No comment provided
 *
 * Hash: 0x0E1E2FF3F4EC11AA | Since: 1290
 * @deprecated Use money.networkEarnSellBase(amount, baseNameHash) instead
 */
export declare function networkEarnSellBase(amount: number, baseNameHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x5B669CF2299A271F | Since: 1290
 * @deprecated Use money.networkEarnTargetRefund(amount) instead
 */
export declare function networkEarnTargetRefund(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2DCB19ABAB0380A8 | Since: 1290
 * @deprecated Use money.networkEarnGangopsWages(amount) instead
 */
export declare function networkEarnGangopsWages(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x15BB2A5C757EB91F | Since: 1290
 * @deprecated Use money.networkEarnGangopsWagesBonus(amount) instead
 */
export declare function networkEarnGangopsWagesBonus(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCAC672087B4A24AB | Since: 1290
 * @deprecated Use money.networkEarnDarChallenge(amount) instead
 */
export declare function networkEarnDarChallenge(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x128A747F4A230952 | Since: 1290
 * @deprecated Use money.networkEarnDoomsdayFinaleBonus(amount, vehicleHash) instead
 */
export declare function networkEarnDoomsdayFinaleBonus(amount: number, vehicleHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xA9A31475F530DFDA | Since: 1290
 * @deprecated Use money.networkEarnGangopsAward(amount) instead
 */
export declare function networkEarnGangopsAward(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2597A0D4A4FC2C77 | Since: 1290
 * @deprecated Use money.networkEarnGangopsElite(amount, actIndex) instead
 */
export declare function networkEarnGangopsElite(amount: number, actIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1B882107C23A9022 | Since: 1290
 * @deprecated Use money.networkServiceEarnGangopsRivalDelivery(earnedMoney) instead
 */
export declare function networkServiceEarnGangopsRivalDelivery(earnedMoney: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA19EC0786E326E06 | Since: 1290
 * @deprecated Use money.networkSpendGangopsStartStrand(_type, amount) instead
 */
export declare function networkSpendGangopsStartStrand(_type: number, amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5ECE6FD7B4EC8D6A | Since: 1290
 * @deprecated Use money.networkSpendGangopsTripSkip(amount) instead
 */
export declare function networkSpendGangopsTripSkip(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xED26584F6BDCBBFD | Since: 1290
 * @deprecated Use money.networkEarnGangopsPrepParticipation(amount) instead
 */
export declare function networkEarnGangopsPrepParticipation(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA9160796D47A2CF8 | Since: 1290
 * @deprecated Use money.networkEarnGangopsSetup(amount) instead
 */
export declare function networkEarnGangopsSetup(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1C121FC9545E0D52 | Since: 1290
 * @deprecated Use money.networkEarnGangopsFinale(amount) instead
 */
export declare function networkEarnGangopsFinale(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2A7CEC72C3443BCC | Since: 1290
 * @deprecated Use money.networkSpendGangopsRepairCost() instead
 */
export declare function networkSpendGangopsRepairCost(): void;
/**
 * No comment provided
 *
 * Hash: 0xE0F82D68C7039158 | Since: 1493
 * @deprecated Use money.networkEarnNightclub() instead
 */
export declare function networkEarnNightclub(): void;
/**
 * No comment provided
 *
 * Hash: 0xB4DEAE67F35E2ACD | Since: 1493
 * @deprecated Use money.networkEarnNightclubDancing() instead
 */
export declare function networkEarnNightclubDancing(): void;
/**
 * No comment provided
 *
 * Hash: 0xFDD8D2440DAF1590 | Since: 1604
 * @deprecated Use money.networkEarnBbEventBonus(amount) instead
 */
export declare function networkEarnBbEventBonus(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2A93C46AAB1EACC9 | Since: 1493
 * @deprecated Use money.networkSpentPurchaseHackerTruck() instead
 */
export declare function networkSpentPurchaseHackerTruck(): void;
/**
 * No comment provided
 *
 * Hash: 0x226C284C830D0CA8 | Since: 1493
 * @deprecated Use money.networkSpentUpgradeHackerTruck() instead
 */
export declare function networkSpentUpgradeHackerTruck(): void;
/**
 * No comment provided
 *
 * Hash: 0xE8815FE993896AD3 | Since: 1493
 * @deprecated Use money.networkEarnHackerTruck(amount) instead
 */
export declare function networkEarnHackerTruck(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xED76D195E6E3BF7F | Since: 1493
 * @deprecated Use money.networkSpentPurchaseNightclubAndWarehouse() instead
 */
export declare function networkSpentPurchaseNightclubAndWarehouse(): void;
/**
 * No comment provided
 *
 * Hash: 0x1DC9B749E7AE282B | Since: 1493
 * @deprecated Use money.networkSpentUpgradeNightclubAndWarehouse() instead
 */
export declare function networkSpentUpgradeNightclubAndWarehouse(): void;
/**
 * No comment provided
 *
 * Hash: 0xC6E74CF8C884C880 | Since: 1493
 * @deprecated Use money.networkEarnNightclubAndWarehouse() instead
 */
export declare function networkEarnNightclubAndWarehouse(): void;
/**
 * No comment provided
 *
 * Hash: 0x65482BFD0923C8A1 | Since: 1493
 * @deprecated Use money.networkSpendNightclubAndWarehouse() instead
 */
export declare function networkSpendNightclubAndWarehouse(): void;
/**
 * No comment provided
 *
 * Hash: 0xE284D46FFDB82E36 | Since: 1493
 * @deprecated Use money.networkSpentRdrHatchetBonus(amount) instead
 */
export declare function networkSpentRdrHatchetBonus(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x876056684281655D | Since: 1493
 * @deprecated Use money.networkSpentNightclubEntryFee(player, amount) instead
 */
export declare function networkSpentNightclubEntryFee(player: number | string | Player, amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDD21B016E4289465 | Since: 1493
 * @deprecated Use money.networkSpendNightclubBarDrink(amount) instead
 */
export declare function networkSpendNightclubBarDrink(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1BEA0CD93470BB1F | Since: 1493
 * @deprecated Use money.networkSpendBountyHunterMission(amount) instead
 */
export declare function networkSpendBountyHunterMission(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF6C8A544E4CF14FC | Since: 1493
 * @deprecated Use money.networkSpentRehireDj(amount) instead
 */
export declare function networkSpentRehireDj(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x14EAEA58F93B55AF | Since: 1604
 * @deprecated Use money.networkSpentArenaJoinSpectator(amount) instead
 */
export declare function networkSpentArenaJoinSpectator(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE08256F972C7BB2C | Since: 1604
 * @deprecated Use money.networkEarnArenaSkillLevelProgression(amount) instead
 */
export declare function networkEarnArenaSkillLevelProgression(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0F99F70C61F14619 | Since: 1604
 * @deprecated Use money.networkEarnArenaCareerProgression(amount) instead
 */
export declare function networkEarnArenaCareerProgression(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE5F5A060439C2F5D | Since: 1604
 * @deprecated Use money.networkSpendMakeItRain(amount) instead
 */
export declare function networkSpendMakeItRain(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x40D5DA9550B7CB46 | Since: 1604
 * @deprecated Use money.networkSpendBuyArena(amount) instead
 */
export declare function networkSpendBuyArena(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x037ABB06825D7AB1 | Since: 1604
 * @deprecated Use money.networkSpendUpgradeArena(amount) instead
 */
export declare function networkSpendUpgradeArena(amount: number): void;
/**
 * type either, 1 for cam spectate, 2 for drone
 *
 * Hash: 0x7049BF858601DC0F | Since: 1604
 * @deprecated Use money.networkSpendArenaSpectatorBox(amount, _type) instead
 */
export declare function networkSpendArenaSpectatorBox(amount: number, _type: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9A5BD1D0000B339C | Since: 1604
 * @deprecated Use money.networkSpendSpinTheWheelPayment(amount) instead
 */
export declare function networkSpendSpinTheWheelPayment(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x676C48776CACBB5A | Since: 1604
 * @deprecated Use money.networkEarnSpinTheWheelCash(amount) instead
 */
export declare function networkEarnSpinTheWheelCash(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x619496D837EFD920 | Since: 1604
 * @deprecated Use money.networkSpendArenaPremium(amount) instead
 */
export declare function networkSpendArenaPremium(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x631F1CB8FB4130AA | Since: 1604
 * @deprecated Use money.networkEarnArenaWar(amount) instead
 */
export declare function networkEarnArenaWar(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5E7AE8AABE8B7C0D | Since: 1604
 * @deprecated Use money.networkEarnArenaWarAssassinateTarget(amount) instead
 */
export declare function networkEarnArenaWarAssassinateTarget(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA82959062361B259 | Since: 1604
 * @deprecated Use money.networkEarnArenaWarEventCargo(amount) instead
 */
export declare function networkEarnArenaWarEventCargo(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDFF49EE984E7AAE8 | Since: 1734
 * @deprecated Use money.networkEarnRcTimeTrial(amount) instead
 */
export declare function networkEarnRcTimeTrial(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5128DF14A5BB86FC | Since: 1734
 * @deprecated Use money.networkEarnDailyObjectiveEvent(amount) instead
 */
export declare function networkEarnDailyObjectiveEvent(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFBBE0570EDF39D46 | Since: 1734
 * @deprecated Use money.networkSpendCasinoMembership(amount) instead
 */
export declare function networkSpendCasinoMembership(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x34A6FC4D06C4DA0F | Since: 1734
 * @deprecated Use money.networkSpendBuyCasino(amount) instead
 */
export declare function networkSpendBuyCasino(amount: number): any;
/**
 * No comment provided
 *
 * Hash: 0x4740D62BC1B4EBEA | Since: 1734
 * @deprecated Use money.networkSpendUpgradeCasino(amount) instead
 */
export declare function networkSpendUpgradeCasino(amount: number): any;
/**
 * No comment provided
 *
 * Hash: 0x88BF9B612B84D3C3 | Since: 1734
 * @deprecated Use money.networkSpendCasinoGeneric(amount) instead
 */
export declare function networkSpendCasinoGeneric(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0819DB99FD2FBBD8 | Since: 1734
 * @deprecated Use money.networkEarnCasinoTimeTrialWin(amount) instead
 */
export declare function networkEarnCasinoTimeTrialWin(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5517F90043466049 | Since: 1734
 * @deprecated Use money.networkEarnCollectablesActionFigures(amount) instead
 */
export declare function networkEarnCollectablesActionFigures(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x83AD64F53F4E9483 | Since: 1734
 * @deprecated Use money.networkEarnCasinoCollectableCompletedCollection(amount) instead
 */
export declare function networkEarnCasinoCollectableCompletedCollection(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8BCB27A057DF7B7F | Since: 1734
 * @deprecated Use money.networkEarnSellPrizeVehicle(amount) instead
 */
export declare function networkEarnSellPrizeVehicle(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x566FD402B25787DE | Since: 1734
 * @deprecated Use money.networkEarnCasinoMissionReward(amount) instead
 */
export declare function networkEarnCasinoMissionReward(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAC95ED552157E092 | Since: 1734
 * @deprecated Use money.networkEarnCasinoStoryMissionReward(amount) instead
 */
export declare function networkEarnCasinoStoryMissionReward(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x09E8F18641BE2575 | Since: 1734
 * @deprecated Use money.networkEarnCasinoMissionParticipation(amount) instead
 */
export declare function networkEarnCasinoMissionParticipation(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x973A9781A34F8DEB | Since: 1734
 * @deprecated Use money.networkEarnCasinoAward(amount, hash) instead
 */
export declare function networkEarnCasinoAward(amount: number, hash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x870289A558348378 | Since: 1868
 * @deprecated Use money.networkSpendBuyArcade() instead
 */
export declare function networkSpendBuyArcade(): void;
/**
 * No comment provided
 *
 * Hash: 0x5574637681911FDA | Since: 1868
 * @deprecated Use money.networkSpendUpgradeArcade() instead
 */
export declare function networkSpendUpgradeArcade(): void;
/**
 * No comment provided
 *
 * Hash: 0xD30E8392F407C328 | Since: 1868
 * @deprecated Use money.networkSpendCasinoHeist() instead
 */
export declare function networkSpendCasinoHeist(): void;
/**
 * No comment provided
 *
 * Hash: 0xB5B58E24868CB09E | Since: 1868
 * @deprecated Use money.networkSpendArcadeMgmt() instead
 */
export declare function networkSpendArcadeMgmt(): void;
/**
 * No comment provided
 *
 * Hash: 0xEAD3D81F2C3A1458 | Since: 1868
 * @deprecated Use money.networkSpendPlayArcade() instead
 */
export declare function networkSpendPlayArcade(): void;
/**
 * No comment provided
 *
 * Hash: 0x43AA7FAC4E6D6687 | Since: 1868
 * @deprecated Use money.networkSpendArcade() instead
 */
export declare function networkSpendArcade(): void;
/**
 * No comment provided
 *
 * Hash: 0x72E7C7B9615FA3C3 | Since: 1868
 * @deprecated Use money.networkEarnCasinoHeist() instead
 */
export declare function networkEarnCasinoHeist(): void;
/**
 * No comment provided
 *
 * Hash: 0x4C3B75694F7E0D9C | Since: 1868
 * @deprecated Use money.networkEarnUpgradeArcade() instead
 */
export declare function networkEarnUpgradeArcade(): void;
/**
 * No comment provided
 *
 * Hash: 0xD29334ED1A256DBF | Since: 1868
 * @deprecated Use money.networkEarnArcade() instead
 */
export declare function networkEarnArcade(): void;
/**
 * No comment provided
 *
 * Hash: 0xA95CFB4E02390842 | Since: 1868
 * @deprecated Use money.networkEarnCollectables() instead
 */
export declare function networkEarnCollectables(): void;
/**
 * No comment provided
 *
 * Hash: 0x0DD362F14F18942A | Since: 1868
 * @deprecated Use money.networkEarnChallenge(amount) instead
 */
export declare function networkEarnChallenge(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3EC7471E6909798A | Since: 1868
 * @deprecated Use money.networkEarnCasinoHeistAwards() instead
 */
export declare function networkEarnCasinoHeistAwards(): void;
/**
 * No comment provided
 *
 * Hash: 0x84FF63BD4966F33D | Since: 1734
 * @deprecated Use money.networkEarnCollectableItem(amount) instead
 */
export declare function networkEarnCollectableItem(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5C9B198AF5A54FA6 | Since: 2060
 * @deprecated Use money.networkEarnCollectableCompletedCollection(amount) instead
 */
export declare function networkEarnCollectableCompletedCollection(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDE68E30D89F97132 | Since: 2060
 * @deprecated Use money.networkEarnYatchMission(amount) instead
 */
export declare function networkEarnYatchMission(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE2E244AB823B4483 | Since: 2060
 * @deprecated Use money.networkEarnDispatchCall(amount) instead
 */
export declare function networkEarnDispatchCall(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x54ABA22FA6371249 | Since: 2189
 * @deprecated Use money.networkSpendBeachParty() instead
 */
export declare function networkSpendBeachParty(): void;
/**
 * No comment provided
 *
 * Hash: 0x6C8BC1488527AAAB | Since: 2189
 * @deprecated Use money.networkSpendSubmarine() instead
 */
export declare function networkSpendSubmarine(): void;
/**
 * No comment provided
 *
 * Hash: 0xC991C255AA6D90B2 | Since: 2189
 * @deprecated Use money.networkSpendCasinoClub(amount1, amount2) instead
 */
export declare function networkSpendCasinoClub(amount1: number, amount2: number): void;
/**
 * No comment provided
 *
 * Hash: 0x90CD7C6871FBF1B4 | Since: 2189
 * @deprecated Use money.networkSpendBuySub() instead
 */
export declare function networkSpendBuySub(): void;
/**
 * No comment provided
 *
 * Hash: 0x89049A84065CE68E | Since: 2189
 * @deprecated Use money.networkSpendUpgradeSub() instead
 */
export declare function networkSpendUpgradeSub(): void;
/**
 * No comment provided
 *
 * Hash: 0xE86689E5F82DE429 | Since: 2189
 * @deprecated Use money.networkSpendIslandHeist() instead
 */
export declare function networkSpendIslandHeist(): void;
/**
 * No comment provided
 *
 * Hash: 0xD21D111C46BA9F15 | Since: 2189
 * @deprecated Use money.networkEarnIslandHeist(amount1, amount2) instead
 */
export declare function networkEarnIslandHeist(amount1: number, amount2: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA51338E0DCCD4065 | Since: 2189
 * @deprecated Use money.networkEarnBeachPartyLostFound() instead
 */
export declare function networkEarnBeachPartyLostFound(): void;
/**
 * No comment provided
 *
 * Hash: 0xE2BB399D90942091 | Since: 2189
 * @deprecated Use money.networkEarnFromIslandHeistDjMission() instead
 */
export declare function networkEarnFromIslandHeistDjMission(): void;
/**
 * No comment provided
 *
 * Hash: 0x1464E17207CD36E2 | Since: 2372
 * @deprecated Use money.networkSpendCarClubMembership(amount1, amount2) instead
 */
export declare function networkSpendCarClubMembership(amount1: number, amount2: number): void;
/**
 * No comment provided
 *
 * Hash: 0x925227803A0EAA1B | Since: 2372
 * @deprecated Use money.networkSpendCarClubBar() instead
 */
export declare function networkSpendCarClubBar(): void;
/**
 * No comment provided
 *
 * Hash: 0x9BEA350D7C48061B | Since: 2372
 * @deprecated Use money.networkSpendAutoshopModify() instead
 */
export declare function networkSpendAutoshopModify(): void;
/**
 * No comment provided
 *
 * Hash: 0xD1E46824E6FB92B5 | Since: 2372
 * @deprecated Use money.networkSpendCarClubTakeover() instead
 */
export declare function networkSpendCarClubTakeover(): void;
/**
 * No comment provided
 *
 * Hash: 0xEEB7E5D1FEB20869 | Since: 2372
 * @deprecated Use money.networkSpendBuyAutoshop() instead
 */
export declare function networkSpendBuyAutoshop(): void;
/**
 * No comment provided
 *
 * Hash: 0xDD829AA198FDC46C | Since: 2372
 * @deprecated Use money.networkSpendUpgradeAutoshop() instead
 */
export declare function networkSpendUpgradeAutoshop(): void;
/**
 * No comment provided
 *
 * Hash: 0x36A7FD5A7194B03E | Since: 2372
 * @deprecated Use money.networkEarnAutoshopBusiness() instead
 */
export declare function networkEarnAutoshopBusiness(): void;
/**
 * No comment provided
 *
 * Hash: 0xC66D1CF99ED7FE25 | Since: 2372
 * @deprecated Use money.networkEarnAutoshopIncome() instead
 */
export declare function networkEarnAutoshopIncome(): void;
/**
 * No comment provided
 *
 * Hash: 0xBC6227792A188E2E | Since: 2372
 * @deprecated Use money.networkEarnCarclubMembership() instead
 */
export declare function networkEarnCarclubMembership(): void;
/**
 * No comment provided
 *
 * Hash: 0x533073E8A596008C | Since: 2372
 * @deprecated Use money.networkEarnDailyVehicle() instead
 */
export declare function networkEarnDailyVehicle(): void;
/**
 * No comment provided
 *
 * Hash: 0xFE65AFE7308E32B2 | Since: 2372
 * @deprecated Use money.networkEarnDailyVehicleBonus() instead
 */
export declare function networkEarnDailyVehicleBonus(): void;
/**
 * No comment provided
 *
 * Hash: 0xB846F547D3792DF6 | Since: 2372
 * @deprecated Use money.networkEarnTunerAward() instead
 */
export declare function networkEarnTunerAward(): void;
/**
 * No comment provided
 *
 * Hash: 0xBCB266247193AC61 | Since: 2372
 * @deprecated Use money.networkEarnTunerRobbery() instead
 */
export declare function networkEarnTunerRobbery(): void;
/**
 * No comment provided
 *
 * Hash: 0xC10322A8D3E061EE | Since: 2372
 * @deprecated Use money.networkEarnUpgradeAutoshop() instead
 */
export declare function networkEarnUpgradeAutoshop(): void;
/**
 * No comment provided
 *
 * Hash: 0x93AA4165CB67E925 | Since: 2372
 * @deprecated Use money.networkSpendInteractionMenuAbility() instead
 */
export declare function networkSpendInteractionMenuAbility(): void;
/**
 * No comment provided
 *
 * Hash: 0xB9F7A469460E7A4A | Since: 2372
 * @deprecated Use money.networkSpendSetCommonFields() instead
 */
export declare function networkSpendSetCommonFields(): void;
/**
 * No comment provided
 *
 * Hash: 0x7E2F4E8F44CAF4E0 | Since: 2699
 * @deprecated Use money.networkSpendSetDiscount() instead
 */
export declare function networkSpendSetDiscount(): void;
/**
 * No comment provided
 *
 * Hash: 0xEA8CD3C9B3C35884 | Since: 2545
 * @deprecated Use money.networkSpendBuyAgency() instead
 */
export declare function networkSpendBuyAgency(): void;
/**
 * No comment provided
 *
 * Hash: 0x6CCA64840589A3B6 | Since: 2545
 * @deprecated Use money.networkSpendUpgradeAgency() instead
 */
export declare function networkSpendUpgradeAgency(): void;
/**
 * No comment provided
 *
 * Hash: 0x1B2120405080125C | Since: 2545
 * @deprecated Use money.networkSpendAgency() instead
 */
export declare function networkSpendAgency(): void;
/**
 * No comment provided
 *
 * Hash: 0xBF8793B91EA094A7 | Since: 2545
 * @deprecated Use money.networkSpendHidden() instead
 */
export declare function networkSpendHidden(): void;
/**
 * No comment provided
 *
 * Hash: 0xD9DF467CBE4398C8 | Since: 2545
 * @deprecated Use money.networkSpendSourceBike() instead
 */
export declare function networkSpendSourceBike(): void;
/**
 * No comment provided
 *
 * Hash: 0xD86581F9E7CDA383 | Since: 2545
 * @deprecated Use money.networkSpendCompSuv() instead
 */
export declare function networkSpendCompSuv(): void;
/**
 * No comment provided
 *
 * Hash: 0x61A2DF64ED2D396E | Since: 2545
 * @deprecated Use money.networkSpendSuvFstTrvl() instead
 */
export declare function networkSpendSuvFstTrvl(): void;
/**
 * No comment provided
 *
 * Hash: 0xEBD482B82ACB8BAD | Since: 2545
 * @deprecated Use money.networkSpendSupply() instead
 */
export declare function networkSpendSupply(): void;
/**
 * No comment provided
 *
 * Hash: 0x923AEA8E78F8DF0B | Since: 2699
 * @deprecated Use money.networkSpendBikeShop() instead
 */
export declare function networkSpendBikeShop(): void;
/**
 * No comment provided
 *
 * Hash: 0x02D24A35A9CC3503 | Since: 2699
 * @deprecated Use money.networkSpendVehicleRequested() instead
 */
export declare function networkSpendVehicleRequested(): void;
/**
 * No comment provided
 *
 * Hash: 0x2CEB0E0BC2A77C05 | Since: 2699
 * @deprecated Use money.networkSpendGunrunning() instead
 */
export declare function networkSpendGunrunning(): void;
/**
 * No comment provided
 *
 * Hash: 0x663B4B9D11742A12 | Since: 2545
 * @deprecated Use money.networkEarnAgencySafe() instead
 */
export declare function networkEarnAgencySafe(): void;
/**
 * No comment provided
 *
 * Hash: 0x146D4EB6D22A403F | Since: 2545
 * @deprecated Use money.networkEarnAwardContract() instead
 */
export declare function networkEarnAwardContract(): void;
/**
 * No comment provided
 *
 * Hash: 0x38482AD49CB905C7 | Since: 2545
 * @deprecated Use money.networkEarnAgencyContract() instead
 */
export declare function networkEarnAgencyContract(): void;
/**
 * No comment provided
 *
 * Hash: 0x7397A115030F1BE3 | Since: 2545
 * @deprecated Use money.networkEarnAwardPhone() instead
 */
export declare function networkEarnAwardPhone(): void;
/**
 * No comment provided
 *
 * Hash: 0xE29F3D5FA63B1B82 | Since: 2545
 * @deprecated Use money.networkEarnAgencyPhone() instead
 */
export declare function networkEarnAgencyPhone(): void;
/**
 * No comment provided
 *
 * Hash: 0x88D6C327D6C57C45 | Since: 2545
 * @deprecated Use money.networkEarnAwardFixerMission() instead
 */
export declare function networkEarnAwardFixerMission(): void;
/**
 * No comment provided
 *
 * Hash: 0x6283E5DE4C4460C6 | Since: 2545
 * @deprecated Use money.networkEarnFixerPrep() instead
 */
export declare function networkEarnFixerPrep(): void;
/**
 * No comment provided
 *
 * Hash: 0xBA154373C5FE51E8 | Since: 2545
 * @deprecated Use money.networkEarnFixerFinale() instead
 */
export declare function networkEarnFixerFinale(): void;
/**
 * No comment provided
 *
 * Hash: 0xF4A8E57460BF2037 | Since: 2545
 * @deprecated Use money.networkEarnFixerAgencyShortTrip() instead
 */
export declare function networkEarnFixerAgencyShortTrip(): void;
/**
 * No comment provided
 *
 * Hash: 0x5B4DBDED84D6A420 | Since: 2545
 * @deprecated Use money.networkEarnAwardShortTrip() instead
 */
export declare function networkEarnAwardShortTrip(): void;
/**
 * No comment provided
 *
 * Hash: 0x235D41210B3A1A5E | Since: 2545
 * @deprecated Use money.networkEarnFixerRivalDelivery() instead
 */
export declare function networkEarnFixerRivalDelivery(): void;
/**
 * No comment provided
 *
 * Hash: 0xD07C7C3F1995108C | Since: 2545
 * @deprecated Use money.networkEarnUpgradeAgency() instead
 */
export declare function networkEarnUpgradeAgency(): void;
/**
 * No comment provided
 *
 * Hash: 0x1254B5B3925EFD3D | Since: 2545
 * @deprecated Use money.networkSpendApartmentUtilities(amount) instead
 */
export declare function networkSpendApartmentUtilities(amount: number): any;
/**
 * No comment provided
 *
 * Hash: 0x92D1CFDA1227FF1C | Since: 2545
 * @deprecated Use money.networkSpendBusinessPropertyFees() instead
 */
export declare function networkSpendBusinessPropertyFees(): void;
/**
 * No comment provided
 *
 * Hash: 0x45087AE480B233AC | Since: 2699
 * @deprecated Use money.networkEarnSightseeingReward() instead
 */
export declare function networkEarnSightseeingReward(): void;
/**
 * No comment provided
 *
 * Hash: 0x2C5809EB9DF57257 | Since: 2699
 * @deprecated Use money.networkEarnBikerShop() instead
 */
export declare function networkEarnBikerShop(): void;
/**
 * No comment provided
 *
 * Hash: 0x71BEC32FA466E105 | Since: 2699
 * @deprecated Use money.networkEarnBiker() instead
 */
export declare function networkEarnBiker(): void;
/**
 * No comment provided
 *
 * Hash: 0x59498BC8B1C8B15C | Since: 2699
 * @deprecated Use money.networkYohanSourceGoods() instead
 */
export declare function networkYohanSourceGoods(): void;
/**
 * No comment provided
 *
 * Hash: 0xA2ED36DCF0FCA413 | Since: 2802
 * @deprecated Use money.networkSpendBuyMfgarage() instead
 */
export declare function networkSpendBuyMfgarage(): void;
/**
 * No comment provided
 *
 * Hash: 0xCF8F346DDDC66643 | Since: 2802
 * @deprecated Use money.networkSpendUpgradeMfgarage() instead
 */
export declare function networkSpendUpgradeMfgarage(): void;
/**
 * No comment provided
 *
 * Hash: 0xB48185C0CA67B16B | Since: 2802
 * @deprecated Use money.networkSpendBuySupplies() instead
 */
export declare function networkSpendBuySupplies(): void;
/**
 * No comment provided
 *
 * Hash: 0xF1E26A7924327152 | Since: 2802
 * @deprecated Use money.networkSpendBuyAcidLab() instead
 */
export declare function networkSpendBuyAcidLab(): void;
/**
 * No comment provided
 *
 * Hash: 0x110EE9D486C23126 | Since: 2802
 * @deprecated Use money.networkSpendUpgradeAcidLabEquipment() instead
 */
export declare function networkSpendUpgradeAcidLabEquipment(): void;
/**
 * No comment provided
 *
 * Hash: 0xA7D541C9ACD63133 | Since: 2802
 * @deprecated Use money.networkSpendUpgradeAcidLabArmor() instead
 */
export declare function networkSpendUpgradeAcidLabArmor(): void;
/**
 * No comment provided
 *
 * Hash: 0x2940558E05BCC2EC | Since: 2802
 * @deprecated Use money.networkSpendUpgradeAcidLabScoop() instead
 */
export declare function networkSpendUpgradeAcidLabScoop(): void;
/**
 * No comment provided
 *
 * Hash: 0x4B99AB08C92C54E4 | Since: 2802
 * @deprecated Use money.networkSpendUpgradeAcidLabMines() instead
 */
export declare function networkSpendUpgradeAcidLabMines(): void;
/**
 * No comment provided
 *
 * Hash: 0x842B1C5AF61ACDE9 | Since: 2802
 * @deprecated Use money.networkSpendRenameAcidLab() instead
 */
export declare function networkSpendRenameAcidLab(): void;
/**
 * No comment provided
 *
 * Hash: 0x446798F7495DD7D8 | Since: 2802
 * @deprecated Use money.networkSpendRenameAcidProduct() instead
 */
export declare function networkSpendRenameAcidProduct(): void;
/**
 * No comment provided
 *
 * Hash: 0xDDF047577F1A02A7 | Since: 2802
 * @deprecated Use money.networkEarnAwardJuggaloMission() instead
 */
export declare function networkEarnAwardJuggaloMission(): void;
/**
 * No comment provided
 *
 * Hash: 0xD1A8165767AD2D23 | Since: 2802
 * @deprecated Use money.networkEarnAwardAcidLab() instead
 */
export declare function networkEarnAwardAcidLab(): void;
/**
 * No comment provided
 *
 * Hash: 0xC30650FA74A19D02 | Since: 2802
 * @deprecated Use money.networkEarnAwardDailyStash() instead
 */
export declare function networkEarnAwardDailyStash(): void;
/**
 * No comment provided
 *
 * Hash: 0xD01EBAEA1F905EF6 | Since: 2802
 * @deprecated Use money.networkEarnAwardDeadDrop() instead
 */
export declare function networkEarnAwardDeadDrop(): void;
/**
 * No comment provided
 *
 * Hash: 0xBEAFBB1B98B7EF55 | Since: 2802
 * @deprecated Use money.networkEarnAwardRandomEvent() instead
 */
export declare function networkEarnAwardRandomEvent(): void;
/**
 * No comment provided
 *
 * Hash: 0xA914768AD35CD3A5 | Since: 2802
 * @deprecated Use money.networkEarnAwardTaxi() instead
 */
export declare function networkEarnAwardTaxi(): void;
/**
 * No comment provided
 *
 * Hash: 0xA81017EE1324FDFE | Since: 2802
 * @deprecated Use money.networkEarnStreetDealer() instead
 */
export declare function networkEarnStreetDealer(): void;
/**
 * No comment provided
 *
 * Hash: 0x79B656937DF6DF5D | Since: 2802
 * @deprecated Use money.networkEarnSellAcid() instead
 */
export declare function networkEarnSellAcid(): void;
/**
 * No comment provided
 *
 * Hash: 0xE3942D59E8A7F70D | Since: 2802
 * @deprecated Use money.networkEarnSetupParticipationAcidLab() instead
 */
export declare function networkEarnSetupParticipationAcidLab(): void;
/**
 * No comment provided
 *
 * Hash: 0x136F11B5DF1B304D | Since: 2802
 * @deprecated Use money.networkEarnSourceParticipationAcidLab() instead
 */
export declare function networkEarnSourceParticipationAcidLab(): void;
/**
 * No comment provided
 *
 * Hash: 0xCA3EF9B09A8D76B4 | Since: 2802
 * @deprecated Use money.networkEarnSellParticipationAcidLab() instead
 */
export declare function networkEarnSellParticipationAcidLab(): void;
/**
 * No comment provided
 *
 * Hash: 0xE01D10BA8CD53621 | Since: 2802
 * @deprecated Use money.networkEarnJuggaloStoryMission() instead
 */
export declare function networkEarnJuggaloStoryMission(): void;
/**
 * No comment provided
 *
 * Hash: 0x40FF6CCCC476185C | Since: 2802
 * @deprecated Use money.networkEarnJuggaloStoryMissionParticipation() instead
 */
export declare function networkEarnJuggaloStoryMissionParticipation(): void;
/**
 * JUGGALO_PHONE_MISSION...
 *
 * Hash: 0xCE4452AE85F5E252 | Since: 2802
 * @deprecated Use money.networkEarnFooliganJob() instead
 */
export declare function networkEarnFooliganJob(): void;
/**
 * JUGGALO_PHONE_MISSION_PARTICIPATION...
 *
 * Hash: 0xC376B92D0E060970 | Since: 2802
 * @deprecated Use money.networkEarnFooliganJobParticipation() instead
 */
export declare function networkEarnFooliganJobParticipation(): void;
/**
 * No comment provided
 *
 * Hash: 0x991E1588FAD9019D | Since: 2802
 * @deprecated Use money.networkEarnTaxiJob() instead
 */
export declare function networkEarnTaxiJob(): void;
/**
 * No comment provided
 *
 * Hash: 0xCABC9874AFA70D6D | Since: 2802
 * @deprecated Use money.networkEarnDailyStashHouseCompleted() instead
 */
export declare function networkEarnDailyStashHouseCompleted(): void;
/**
 * No comment provided
 *
 * Hash: 0x9C0C6BD0F94CE391 | Since: 2802
 * @deprecated Use money.networkEarnDailyStashHouseParticipation() instead
 */
export declare function networkEarnDailyStashHouseParticipation(): void;
/**
 * Used for SERVICE_EARN_AVENGER_OPERATIONS & SERVICE_EARN_AVENGER_OPS_BONUS
 *
 * Hash: 0x55F006B9D4A46C1D | Since: 2944
 * @deprecated Use money.networkEarnAvenger(amount) instead
 */
export declare function networkEarnAvenger(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDEA273D5F8A9661A | Since: 2944
 * @deprecated Use money.networkEarnSmugglerOps() instead
 */
export declare function networkEarnSmugglerOps(): void;
/**
 * No comment provided
 *
 * Hash: 0xDCEF983C24191997 | Since: 2944
 * @deprecated Use money.networkEarnBonusObjective(amount) instead
 */
export declare function networkEarnBonusObjective(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF8332B06F0EECC9C | Since: 2944
 * @deprecated Use money.networkEarnProgressHub() instead
 */
export declare function networkEarnProgressHub(): void;
/**
 * No comment provided
 *
 * Hash: 0x8C7E8D6F96C9E948 | Since: 2944
 * @deprecated Use money.networkSpentAirFreight(hangarCargoSourcingPrice, fromBank, fromBankAndWallet, cost, warehouseId, warehouseSlot) instead
 */
export declare function networkSpentAirFreight(hangarCargoSourcingPrice: number, fromBank: boolean, fromBankAndWallet: boolean, cost: number, warehouseId: number, warehouseSlot: number): void;
/**
 * No comment provided
 *
 * Hash: 0xED1B407BADA42CEC | Since: 2944
 * @deprecated Use money.networkSpentSkipCargoSourceSetup(amount, fromBank, fromBankAndWallet, cost) instead
 */
export declare function networkSpentSkipCargoSourceSetup(amount: number, fromBank: boolean, fromBankAndWallet: boolean, cost: number): void;
/**
 * Hash p3 = STEALTH_MODULE
 *
 * Hash: 0x95CE79A6939C537A | Since: 2944
 * @deprecated Use money.networkSpentStealthModule(amount, fromBank, fromBankAndWallet, p3) instead
 */
export declare function networkSpentStealthModule(amount: number, fromBank: boolean, fromBankAndWallet: boolean, p3: number | string): void;
/**
 * Hash p3 = MISSILE_JAMMER
 *
 * Hash: 0xD687100F616163F4 | Since: 2944
 * @deprecated Use money.networkSpentMissileJammer(amount, fromBank, fromBankAndWallet, p3) instead
 */
export declare function networkSpentMissileJammer(amount: number, fromBank: boolean, fromBankAndWallet: boolean, p3: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x2803B027479FB640 | Since: 3095
 * @deprecated Use money.networkSpentGeneric(price, stat, spent) instead
 */
export declare function networkSpentGeneric(price: number, stat: number | string, spent: number | string): any;
/**
 * _NETWORK_EARN_G*
 *
 * Hash: 0xBF7B5BB7ED890380 | Since: 3095
 * @deprecated Use money.networkEarnGeneric(amount, earn) instead
 */
export declare function networkEarnGeneric(amount: number, earn: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0xE03B9F95556E48E9 | Since: 3095
 * @deprecated Use money.networkClearTransactionTelemetryNonce() instead
 */
export declare function networkClearTransactionTelemetryNonce(): void;
/**
 * No comment provided
 *
 * Hash: 0x76EF28DA05EA395A | Since: 323
 * @deprecated Use money.networkGetVcBankBalance() instead
 */
export declare function networkGetVcBankBalance(): number;
/**
 * No comment provided
 *
 * Hash: 0xA40F9C2623F6A8B5 | Since: 323
 * @deprecated Use money.networkGetVcWalletBalance(characterSlot) instead
 */
export declare function networkGetVcWalletBalance(characterSlot: number): number;
/**
 * No comment provided
 *
 * Hash: 0x5CBAD97E059E1B94 | Since: 323
 * @deprecated Use money.networkGetVcBalance() instead
 */
export declare function networkGetVcBalance(): number;
/**
 * No comment provided
 *
 * Hash: 0x5D1E75F91C07DEE5 | Since: 323
 * @deprecated Use money.networkGetEvcBalance() instead
 */
export declare function networkGetEvcBalance(): number;
/**
 * No comment provided
 *
 * Hash: 0x4F54F3B6C202FB4E | Since: 323
 * @deprecated Use money.networkGetPvcBalance() instead
 */
export declare function networkGetPvcBalance(): number;
/**
 * No comment provided
 *
 * Hash: 0xF9B10B529DCFB33B | Since: 323
 * @deprecated Use money.networkGetStringWalletBalance(characterSlot) instead
 */
export declare function networkGetStringWalletBalance(characterSlot: number): string;
/**
 * No comment provided
 *
 * Hash: 0xA6FA3979BED01B81 | Since: 323
 * @deprecated Use money.networkGetStringBankBalance() instead
 */
export declare function networkGetStringBankBalance(): string;
/**
 * No comment provided
 *
 * Hash: 0x700AF71AE615E6DD | Since: 323
 * @deprecated Use money.networkGetStringBankWalletBalance(character) instead
 */
export declare function networkGetStringBankWalletBalance(character: number): string;
/**
 * Returns true if wallet balance >= amount.
 *
 * Hash: 0xED5AB8860415BABA | Since: 323
 * @deprecated Use money.networkGetCanSpendFromWallet(amount, characterSlot) instead
 */
export declare function networkGetCanSpendFromWallet(amount: number, characterSlot: number): boolean;
/**
 * Returns true if bank balance >= amount.
 *
 * Hash: 0xA31FD6A0865B6D14 | Since: 323
 * @deprecated Use money.networkGetCanSpendFromBank(amount) instead
 */
export declare function networkGetCanSpendFromBank(amount: number): boolean;
/**
 * Returns true if bank balance + wallet balance >= amount.
 *
 * Hash: 0xDC18531D7019A535 | Since: 323
 * @deprecated Use money.networkGetCanSpendFromBankAndWallet(amount, characterSlot) instead
 */
export declare function networkGetCanSpendFromBankAndWallet(amount: number, characterSlot: number): boolean;
/**
 * Retturns the same value as NETWORK_GET_REMAINING_TRANSFER_BALANCE.
 *
 * Hash: 0x13A8DE2FD77D04F3 | Since: 323
 * @deprecated Use money.networkGetPvcTransferBalance() instead
 */
export declare function networkGetPvcTransferBalance(): number;
/**
 * Returns false if amount > wallet balance or daily transfer limit has been hit.
 *
 * Hash: 0x08E8EEADFD0DC4A0 | Since: 323
 * @deprecated Use money.networkGetCanTransferCash(amount) instead
 */
export declare function networkGetCanTransferCash(amount: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5D17BE59D2123284 | Since: 323
 * @deprecated Use money.networkCanReceivePlayerCash() instead
 */
export declare function networkCanReceivePlayerCash(): boolean;
/**
 * Returns the same value as NETWORK_GET_PVC_TRANSFER_BALANCE.
 *
 * Hash: 0xEA560AC9EEB1E19B | Since: 323
 * @deprecated Use money.networkGetRemainingTransferBalance() instead
 */
export declare function networkGetRemainingTransferBalance(): number;
/**
 * Does nothing and always returns 0.
 *
 * Hash: 0xF70EFA14FE091429 | Since: 323
 * @deprecated Use money.withdrawVc(amount) instead
 */
export declare function withdrawVc(amount: number): number;
/**
 * Does nothing and always returns false.
 *
 * Hash: 0xE260E0BB9CD995AC | Since: 323
 * @deprecated Use money.depositVc(amount) instead
 */
export declare function depositVc(amount: number): boolean;
/**
 * This function is hard-coded to always return 1.
 *
 * Hash: 0xE154B48B68EF72BC | Since: 323
 * @deprecated Use money.hasVcWithdrawalCompleted() instead
 */
export declare function hasVcWithdrawalCompleted(): boolean;
/**
 * This function is hard-coded to always return 1.
 *
 * Hash: 0x6FCF8DDEA146C45B | Since: 323
 * @deprecated Use money.wasVcWithdrawalSuccessful() instead
 */
export declare function wasVcWithdrawalSuccessful(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7D2708796355B20B | Since: 1290
 * @deprecated Use netshopping.netGameserverUseServerTransactions() instead
 */
export declare function netGameserverUseServerTransactions(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBD4D7EAF8A30F637 | Since: 323
 * @deprecated Use netshopping.netGameserverCatalogItemIsValid(name) instead
 */
export declare function netGameserverCatalogItemIsValid(name: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x247F0F73A182EA0B | Since: 323
 * @deprecated Use netshopping.netGameserverCatalogItemKeyIsValid(hash) instead
 */
export declare function netGameserverCatalogItemKeyIsValid(hash: number | string): boolean;
/**
 * bool is always true in game scripts
 *
 * Hash: 0xC27009422FCCA88D | Since: 323
 * @deprecated Use netshopping.netGameserverGetPrice(itemHash, categoryHash) instead
 */
export declare function netGameserverGetPrice(itemHash: number | string, categoryHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x3C4487461E9B0DCB | Since: 323
 * @deprecated Use netshopping.netGameserverCatalogIsValid() instead
 */
export declare function netGameserverCatalogIsValid(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2B949A1E6AEC8F6A | Since: 323
 * @deprecated Use netshopping.netGameserverIsCatalogCurrent() instead
 */
export declare function netGameserverIsCatalogCurrent(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x85F6C9ABA1DE2BCF | Since: 323
 * @deprecated Use netshopping.netGameserverGetCatalogCloudCrc() instead
 */
export declare function netGameserverGetCatalogCloudCrc(): number;
/**
 * No comment provided
 *
 * Hash: 0x357B152EF96C30B6 | Since: 323
 * @deprecated Use netshopping.netGameserverRefreshServerCatalog() instead
 */
export declare function netGameserverRefreshServerCatalog(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCF38DAFBB49EDE5E | Since: 323
 * @deprecated Use netshopping.netGameserverRetrieveCatalogRefreshStatus() instead
 */
export declare function netGameserverRetrieveCatalogRefreshStatus(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xE3E5A7C64CA2C6ED | Since: 323
 * @deprecated Use netshopping.netGameserverInitSession() instead
 */
export declare function netGameserverInitSession(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0395CB47B022E62C | Since: 323
 * @deprecated Use netshopping.netGameserverRetrieveInitSessionStatus() instead
 */
export declare function netGameserverRetrieveInitSessionStatus(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xA135AC892A58FC07 | Since: 323
 * @deprecated Use netshopping.netGameserverStartSession(charSlot) instead
 */
export declare function netGameserverStartSession(charSlot: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x72EB7BA9B69BF6AB | Since: 323
 * @deprecated Use netshopping.netGameserverStartSessionPending() instead
 */
export declare function netGameserverStartSessionPending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x170910093218C8B9 | Since: 323
 * @deprecated Use netshopping.netGameserverRetrieveStartSessionStatus() instead
 */
export declare function netGameserverRetrieveStartSessionStatus(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xC13C38E47EA5DF31 | Since: 323
 * @deprecated Use netshopping.netGameserverRetrieveSessionErrorCode() instead
 */
export declare function netGameserverRetrieveSessionErrorCode(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xB24F0944DA203D9E | Since: 323
 * @deprecated Use netshopping.netGameserverIsSessionValid(charSlot) instead
 */
export declare function netGameserverIsSessionValid(charSlot: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x74A0FD0688F1EE45 | Since: 323
 * @deprecated Use netshopping.netGameserverClearSession() instead
 */
export declare function netGameserverClearSession(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2F41D51BA3BCD1F1 | Since: 323
 * @deprecated Use netshopping.netGameserverSessionApplyReceivedData(charSlot) instead
 */
export declare function netGameserverSessionApplyReceivedData(charSlot: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x810E8431C0614BF9 | Since: 323
 * @deprecated Use netshopping.netGameserverIsSessionRefreshPending() instead
 */
export declare function netGameserverIsSessionRefreshPending(): boolean;
/**
 * Note: only one of the arguments can be set to true at a time
 *
 * Hash: 0x35A1B3E1D1315CFA | Since: 323
 * @deprecated Use netshopping.netGameserverStartSessionRestart(inventory, playerbalance) instead
 */
export declare function netGameserverStartSessionRestart(inventory: boolean, playerbalance: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x613F125BA3BD2EB9 | Since: 372
 * @deprecated Use netshopping.netGameserverTransactionInProgress() instead
 */
export declare function netGameserverTransactionInProgress(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x897433D292B44130 | Since: 323
 * @deprecated Use netshopping.netGameserverGetSessionStateAndStatus() instead
 */
export declare function netGameserverGetSessionStateAndStatus(): [boolean, number, boolean];
/**
 * No comment provided
 *
 * Hash: 0x279F08B1A4B29B7E | Since: 323
 * @deprecated Use netshopping.netGameserverBasketStart(categoryHash, actionHash, flags) instead
 */
export declare function netGameserverBasketStart(categoryHash: number | string, actionHash: number | string, flags: number): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xFA336E7F40C0A0D0 | Since: 372
 * @deprecated Use netshopping.netGameserverBasketEnd() instead
 */
export declare function netGameserverBasketEnd(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA65568121DF2EA26 | Since: 323
 * @deprecated Use netshopping.netGameserverBasketIsActive() instead
 */
export declare function netGameserverBasketIsActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF30980718C8ED876 | Since: 323
 * @deprecated Use netshopping.netGameserverBasketAddItem(quantity) instead
 */
export declare function netGameserverBasketAddItem(quantity: number): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x27F76CC6C55AD30E | Since: 323
 * @deprecated Use netshopping.netGameserverBasketIsFull() instead
 */
export declare function netGameserverBasketIsFull(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE1A0450ED46A7812 | Since: 323
 * @deprecated Use netshopping.netGameserverBasketApplyServerData() instead
 */
export declare function netGameserverBasketApplyServerData(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x39BE7CEA8D9CC8E6 | Since: 323
 * @deprecated Use netshopping.netGameserverCheckoutStart(transactionId) instead
 */
export declare function netGameserverCheckoutStart(transactionId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4B64CD6D18474126 | Since: 3570
 * @deprecated Use netshopping.netGameserverCheckoutPending(transactionId) instead
 */
export declare function netGameserverCheckoutPending(transactionId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3C5FD37B5499582E | Since: 323
 * @deprecated Use netshopping.netGameserverBeginService(categoryHash, itemHash, actionTypeHash, value, flags) instead
 */
export declare function netGameserverBeginService(categoryHash: number | string, itemHash: number | string, actionTypeHash: number | string, value: number, flags: number): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xE2A99A9B524BEFFF | Since: 323
 * @deprecated Use netshopping.netGameserverEndService(transactionId) instead
 */
export declare function netGameserverEndService(transactionId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x51F1A8E48C3D2F6D | Since: 323
 * @deprecated Use netshopping.netGameserverDeleteCharacter(slot, transfer, reason) instead
 */
export declare function netGameserverDeleteCharacter(slot: number, transfer: boolean, reason: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0A6D923DFFC9BD89 | Since: 323
 * @deprecated Use netshopping.netGameserverDeleteCharacterGetStatus() instead
 */
export declare function netGameserverDeleteCharacterGetStatus(): number;
/**
 * No comment provided
 *
 * Hash: 0x112CEF1615A1139F | Since: 323
 * @deprecated Use netshopping.netGameserverDeleteSetTelemetryNonceSeed() instead
 */
export declare function netGameserverDeleteSetTelemetryNonceSeed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD47A2C1BA117471D | Since: 323
 * @deprecated Use netshopping.netGameserverTransferBankToWallet(charSlot, amount) instead
 */
export declare function netGameserverTransferBankToWallet(charSlot: number, amount: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC2F7FE5309181C7D | Since: 323
 * @deprecated Use netshopping.netGameserverTransferWalletToBank(charSlot, amount) instead
 */
export declare function netGameserverTransferWalletToBank(charSlot: number, amount: number): boolean;
/**
 * Same as 0x350AA5EBC03D3BD2
 *
 * Hash: 0x23789E777D14CE44 | Since: 323
 * @deprecated Use netshopping.netGameserverTransferBankToWalletGetStatus() instead
 */
export declare function netGameserverTransferBankToWalletGetStatus(): number;
/**
 * Same as 0x23789E777D14CE44
 *
 * Hash: 0x350AA5EBC03D3BD2 | Since: 323
 * @deprecated Use netshopping.netGameserverTransferWalletToBankGetStatus() instead
 */
export declare function netGameserverTransferWalletToBankGetStatus(): number;
/**
 * Used to be NETWORK_SHOP_CASH_TRANSFER_SET_TELEMETRY_NONCE_SEED
 *
 * Hash: 0x498C1E05CE5F7877 | Since: 323
 * @deprecated Use netshopping.netGameserverTransferCashSetTelemetryNonceSeed() instead
 */
export declare function netGameserverTransferCashSetTelemetryNonceSeed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9507D4271988E1AE | Since: 323
 * @deprecated Use netshopping.netGameserverSetTelemetryNonceSeed() instead
 */
export declare function netGameserverSetTelemetryNonceSeed(): boolean;
/**
 * Online version is defined here: update\update.rpf\common\data\version.txt
 *
 * Example:
 *
 * [ONLINE_VERSION_NUMBER]
 * 1.33
 *
 * _GET_ONLINE_VERSION() will return "1.33"
 *
 * Hash: 0xFCA9373EF340AC0A | Since: 323
 * @deprecated Use network.getOnlineVersion() instead
 */
export declare function getOnlineVersion(): string;
/**
 * Returns whether the player is signed into Social Club.
 *
 * Hash: 0x054354A99211EB96 | Since: 323
 * @deprecated Use network.isSignedIn() instead
 */
export declare function networkIsSignedIn(): boolean;
/**
 * Returns whether the game is not in offline mode.
 *
 * seemed not to work for some ppl
 *
 * Hash: 0x1077788E268557C2 | Since: 323
 * @deprecated Use network.isSignedOnline() instead
 */
export declare function networkIsSignedOnline(): boolean;
/**
 * This function is hard-coded to always return 1.
 *
 * Hash: 0xBD545D44CCE70597 | Since: 323
 * @deprecated Use network.isNpAvailable() instead
 */
export declare function networkIsNpAvailable(): boolean;
/**
 * This function is hard-coded to always return 1.
 *
 * Hash: 0xEBCAB9E5048434F4 | Since: 323
 * @deprecated Use network.isNpPending() instead
 */
export declare function networkIsNpPending(): boolean;
/**
 * Hardcoded to return zero.
 *
 * ==== PS4 specific info ====
 *
 * Returns some sort of unavailable reason:
 * -1 = REASON_INVALID
 * 0 = REASON_OTHER
 * 1 = REASON_SYSTEM_UPDATE
 * 2 = REASON_GAME_UPDATE
 * 3 = REASON_SIGNED_OUT
 * 4 = REASON_AGE
 * 5 = REASON_CONNECTION
 *
 * =================================
 *
 * Hash: 0x74FB3E29E6D10FA9 | Since: 323
 * @deprecated Use network.getNpUnavailableReason() instead
 */
export declare function networkGetNpUnavailableReason(): number;
/**
 * This function is hard-coded to always return 1.
 *
 * Hash: 0x7808619F31FF22DB | Since: 323
 * @deprecated Use network.isConnetedToNpPresence() instead
 */
export declare function networkIsConnetedToNpPresence(): boolean;
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0xA0FA4EC6A05DA44E | Since: 323
 * @deprecated Use network.isLoggedInToPsn() instead
 */
export declare function networkIsLoggedInToPsn(): boolean;
/**
 * Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
 *
 * Hash: 0x85443FF4C328F53B | Since: 323
 * @deprecated Use network.hasValidRosCredentials() instead
 */
export declare function networkHasValidRosCredentials(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8D11E61A4ABF49CC | Since: 323
 * @deprecated Use network.isRefreshingRosCredentials() instead
 */
export declare function networkIsRefreshingRosCredentials(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9A4CF4F48AD77302 | Since: 323
 * @deprecated Use network.isCloudAvailable() instead
 */
export declare function networkIsCloudAvailable(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x67A5589628E0CFF6 | Since: 323
 * @deprecated Use network.hasSocialClubAccount() instead
 */
export declare function networkHasSocialClubAccount(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBA9775570DB788CF | Since: 323
 * @deprecated Use network.areSocialClubPoliciesCurrent() instead
 */
export declare function networkAreSocialClubPoliciesCurrent(): boolean;
/**
 * If you are host, returns true else returns false.
 *
 * Hash: 0x8DB296B814EDDA07 | Since: 323
 * @deprecated Use network.isHost() instead
 */
export declare function networkIsHost(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8251FB94DC4FDFC8 | Since: 2612
 * @deprecated Use network.getHostPlayerIndex() instead
 */
export declare function networkGetHostPlayerIndex(): number | string;
/**
 * No comment provided
 *
 * Hash: 0x4237E822315D8BA9 | Since: 323
 * @deprecated Use network.wasGameSuspended() instead
 */
export declare function networkWasGameSuspended(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x25CB5A9F37BFD063 | Since: 323
 * @deprecated Use network.haveOnlinePrivileges() instead
 */
export declare function networkHaveOnlinePrivileges(): boolean;
/**
 * For the XboxPC version this returns true if XPRIVILEGE_MULTIPLAYER_SESSIONS is granted but XPRIVILEGE_CROSS_PLAY is NOT granted.
 * For more information, see https://learn.microsoft.com/en-us/gaming/gdk/_content/gc/live/features/identity/privileges/concepts/live-user-privileges-client#privilege-ids-to-check
 *
 * Always returns false for non-XboxPC versions.
 *
 * Hash: 0xA6BC0D9BCF9662FA | Since: 3504
 * @deprecated Use network.multiplayerCrossplayNotAllowed() instead
 */
export declare function networkMultiplayerCrossplayNotAllowed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1353F87E89946207 | Since: 323
 * @deprecated Use network.hasAgeRestrictions() instead
 */
export declare function networkHasAgeRestrictions(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x72D918C99BCACC54 | Since: 323
 * @deprecated Use network.haveUserContentPrivileges() instead
 */
export declare function networkHaveUserContentPrivileges(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAEEF48CDF5B6CE7C | Since: 323
 * @deprecated Use network.haveCommunicationPrivileges(player) instead
 */
export declare function networkHaveCommunicationPrivileges(player: number | string | Player): boolean;
/**
 * Appears to be PlayStation-specific. Always returns true on other platforms if signed in with the primary user profile
 *
 * Hash: 0xE1E02509169C124E | Since: 3095
 * @deprecated Use network.havePlatformCommunicationPrivileges() instead
 */
export declare function networkHavePlatformCommunicationPrivileges(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x78321BEA235FD8CD | Since: 323
 * @deprecated Use network.checkOnlinePrivileges() instead
 */
export declare function networkCheckOnlinePrivileges(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x595F028698072DD9 | Since: 323
 * @deprecated Use network.checkUserContentPrivileges() instead
 */
export declare function networkCheckUserContentPrivileges(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x83F28CE49FBBFFBA | Since: 323
 * @deprecated Use network.checkCommunicationPrivileges() instead
 */
export declare function networkCheckCommunicationPrivileges(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x07EAB372C8841D99 | Since: 1011
 * @deprecated Use network.checkTextCommunicationPrivileges() instead
 */
export declare function networkCheckTextCommunicationPrivileges(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x906CA41A4B74ECA4 | Since: 1493
 * @deprecated Use network.isUsingOnlinePromotion() instead
 */
export declare function networkIsUsingOnlinePromotion(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x023ACAB2DC9DC4A4 | Since: 1493
 * @deprecated Use network.shouldShowPromotionAlertScreen() instead
 */
export declare function networkShouldShowPromotionAlertScreen(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x76BF03FADBF154F5 | Since: 323
 * @deprecated Use network.hasSocialNetworkingSharingPriv() instead
 */
export declare function networkHasSocialNetworkingSharingPriv(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9614B71F8ADB982B | Since: 323
 * @deprecated Use network.getAgeGroup() instead
 */
export declare function networkGetAgeGroup(): number;
/**
 * No comment provided
 *
 * Hash: 0x0CF6CC51AA18F0F8 | Since: 1180
 * @deprecated Use network.checkPrivileges() instead
 */
export declare function networkCheckPrivileges(): boolean;
/**
 * Hardcoded to return false.
 *
 * Hash: 0x64E5C4CC82847B73 | Since: 1734
 * @deprecated Use network.isPrivilegeCheckInProgress() instead
 */
export declare function networkIsPrivilegeCheckInProgress(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1F7BC3539F9E0224 | Since: 1180
 * @deprecated Use network.setPrivilegeCheckResultNotNeeded() instead
 */
export declare function networkSetPrivilegeCheckResultNotNeeded(): void;
/**
 * Hardcoded to return true.
 *
 * Hash: 0xDE9225854F37BF72 | Since: 2612
 * @deprecated Use network.resolvePrivilegeUserContent() instead
 */
export declare function networkResolvePrivilegeUserContent(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5EA784D197556507 | Since: 323
 * @deprecated Use network.havePlatformSubscription() instead
 */
export declare function networkHavePlatformSubscription(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA8ACB6459542A8C8 | Since: 323
 * @deprecated Use network.isPlatformSubscriptionCheckPending() instead
 */
export declare function networkIsPlatformSubscriptionCheckPending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x83FE8D7229593017 | Since: 323
 * @deprecated Use network.showAccountUpgradeUi() instead
 */
export declare function networkShowAccountUpgradeUi(): void;
/**
 * No comment provided
 *
 * Hash: 0x7788DFE15016A182 | Since: 2612
 * @deprecated Use network.isShowingSystemUiOrRecentlyRequestedUpsell() instead
 */
export declare function networkIsShowingSystemUiOrRecentlyRequestedUpsell(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x53C10C8BD774F2C9 | Since: 1011
 * @deprecated Use network.needToStartNewGameButBlocked() instead
 */
export declare function networkNeedToStartNewGameButBlocked(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x580CE4438479CC61 | Since: 323
 * @deprecated Use network.canBail() instead
 */
export declare function networkCanBail(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x95914459A87EBA28 | Since: 323
 * @deprecated Use network.bail() instead
 */
export declare function networkBail(): void;
/**
 * No comment provided
 *
 * Hash: 0x283B6062A2C01E9B | Since: 323
 * @deprecated Use network.onReturnToSinglePlayer() instead
 */
export declare function networkOnReturnToSinglePlayer(): void;
/**
 * No comment provided
 *
 * Hash: 0x8B4FFC790CA131EF | Since: 617
 * @deprecated Use network.transitionStart() instead
 */
export declare function networkTransitionStart(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC3BFED92026A2AAD | Since: 617
 * @deprecated Use network.transitionAddStage(hash, state) instead
 */
export declare function networkTransitionAddStage(hash: number | string, state: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x04918A41BC9B8157 | Since: 617
 * @deprecated Use network.transitionFinish() instead
 */
export declare function networkTransitionFinish(): boolean;
/**
 * 11 - Need to download tunables.
 * 12 - Need to download background script.
 *
 * Returns 1 if the multiplayer is loaded, otherwhise 0.
 *
 * Hash: 0xAF50DA1A3F8B1BA4 | Since: 323
 * @deprecated Use network.canAccessMultiplayer() instead
 */
export declare function networkCanAccessMultiplayer(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x6FA9825D0B5A721B | Since: 3570
 * @deprecated Use network.checkCanAccessAndAlert() instead
 */
export declare function networkCheckCanAccessAndAlert(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x967E6FB554E1B6DE | Since: 3570
 * @deprecated Use network.getAccessCodeLabelHeading(accessCode) instead
 */
export declare function networkGetAccessCodeLabelHeading(accessCode: number): string;
/**
 * No comment provided
 *
 * Hash: 0x214CA1730793EBA8 | Since: 3570
 * @deprecated Use network.getAccessCodeLabelBody(accessCode) instead
 */
export declare function networkGetAccessCodeLabelBody(accessCode: number): string;
/**
 * No comment provided
 *
 * Hash: 0x9747292807126EDA | Since: 323
 * @deprecated Use network.isMultiplayerDisabled() instead
 */
export declare function networkIsMultiplayerDisabled(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7E782A910C362C25 | Since: 323
 * @deprecated Use network.canEnterMultiplayer() instead
 */
export declare function networkCanEnterMultiplayer(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x330ED4D05491934F | Since: 323
 * @deprecated Use network.sessionDoFreeroamQuickmatch() instead
 */
export declare function networkSessionDoFreeroamQuickmatch(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2CFC76E0D087C994 | Since: 323
 * @deprecated Use network.sessionDoFriendMatchmaking() instead
 */
export declare function networkSessionDoFriendMatchmaking(): boolean;
/**
 * p4 seems to be unused in 1.60/build 2628
 *
 * Hash: 0x94BC51E9449D917F | Since: 323
 * @deprecated Use network.sessionDoCrewMatchmaking(crewId, maxPlayers) instead
 */
export declare function networkSessionDoCrewMatchmaking(crewId: number, maxPlayers: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBE3E347A87ACEB82 | Since: 323
 * @deprecated Use network.sessionDoActivityQuickmatch() instead
 */
export declare function networkSessionDoActivityQuickmatch(): boolean;
/**
 * Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
 *
 * Hash: 0x6F3D4ED9BEE4E61D | Since: 323
 * @deprecated Use network.sessionHost(maxPlayers) instead
 */
export declare function networkSessionHost(maxPlayers: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xED34C0C02C098BB7 | Since: 323
 * @deprecated Use network.sessionHostClosed(maxPlayers) instead
 */
export declare function networkSessionHostClosed(maxPlayers: number): boolean;
/**
 * Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
 *
 * Hash: 0xB9CFD27A5D578D83 | Since: 323
 * @deprecated Use network.sessionHostFriendsOnly(maxPlayers) instead
 */
export declare function networkSessionHostFriendsOnly(maxPlayers: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFBCFA2EA2E206890 | Since: 323
 * @deprecated Use network.sessionIsClosedFriends() instead
 */
export declare function networkSessionIsClosedFriends(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x74732C6CA90DA2B4 | Since: 323
 * @deprecated Use network.sessionIsClosedCrew() instead
 */
export declare function networkSessionIsClosedCrew(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF3929C2379B60CCE | Since: 323
 * @deprecated Use network.sessionIsSolo() instead
 */
export declare function networkSessionIsSolo(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCEF70AA5B3F89BA1 | Since: 323
 * @deprecated Use network.sessionIsPrivate() instead
 */
export declare function networkSessionIsPrivate(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE0128328CF1FD9F4 | Since: 3095
 * @deprecated Use network.sessionLeaveIncludingReason(leaveFlags, leaveReason) instead
 */
export declare function networkSessionLeaveIncludingReason(leaveFlags: number, leaveReason: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB9351A07A0D458B1 | Since: 2060
 * @deprecated Use network.sessionLeave() instead
 */
export declare function networkSessionLeave(): boolean;
/**
 * Only works as host.
 *
 * Hash: 0xFA8904DC5F304220 | Since: 323
 * @deprecated Use network.sessionKickPlayer(player) instead
 */
export declare function networkSessionKickPlayer(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xD6D09A6F32F49EF1 | Since: 323
 * @deprecated Use network.sessionGetKickVote(player) instead
 */
export declare function networkSessionGetKickVote(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x041C7F2A6C9894E6 | Since: 463
 * @deprecated Use network.sessionReserveSlotsTransition() instead
 */
export declare function networkSessionReserveSlotsTransition(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x59DF79317F85A7E0 | Since: 323
 * @deprecated Use network.joinPreviouslyFailedSession() instead
 */
export declare function networkJoinPreviouslyFailedSession(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFFE1E5B792D92B34 | Since: 323
 * @deprecated Use network.joinPreviouslyFailedTransition() instead
 */
export declare function networkJoinPreviouslyFailedTransition(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x49EC8030F5015F8B | Since: 323
 * @deprecated Use network.sessionSetMatchmakingGroup(matchmakingGroup) instead
 */
export declare function networkSessionSetMatchmakingGroup(matchmakingGroup: number): void;
/**
 * playerType is an unsigned int from 0 to 4
 * 0 = regular joiner
 * 4 = spectator
 *
 * Hash: 0x8B6A4DD0AF9CE215 | Since: 323
 * @deprecated Use network.sessionSetMatchmakingGroupMax(playerType, playerCount) instead
 */
export declare function networkSessionSetMatchmakingGroupMax(playerType: number, playerCount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x56CE820830EF040B | Since: 323
 * @deprecated Use network.sessionGetMatchmakingGroupFree() instead
 */
export declare function networkSessionGetMatchmakingGroupFree(): number;
/**
 * groupId range: [0, 4]
 *
 * Hash: 0xCAE55F48D3D7875C | Since: 323
 * @deprecated Use network.sessionAddActiveMatchmakingGroup(groupId) instead
 */
export declare function networkSessionAddActiveMatchmakingGroup(groupId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF49ABC20D8552257 | Since: 323
 * @deprecated Use network.sessionSetUniqueCrewLimit() instead
 */
export declare function networkSessionSetUniqueCrewLimit(): void;
/**
 * No comment provided
 *
 * Hash: 0xCDC936BF35EDCB73 | Since: 3095
 * @deprecated Use network.sessionGetUniqueCrewLimit() instead
 */
export declare function networkSessionGetUniqueCrewLimit(): number;
/**
 * No comment provided
 *
 * Hash: 0x4811BBAC21C5FCD5 | Since: 323
 * @deprecated Use network.sessionSetUniqueCrewLimitTransition() instead
 */
export declare function networkSessionSetUniqueCrewLimitTransition(): void;
/**
 * No comment provided
 *
 * Hash: 0x5539C3EBF104A53A | Since: 323
 * @deprecated Use network.sessionSetUniqueCrewOnlyCrewsTransition() instead
 */
export declare function networkSessionSetUniqueCrewOnlyCrewsTransition(): void;
/**
 * No comment provided
 *
 * Hash: 0x702BC4D605522539 | Since: 323
 * @deprecated Use network.sessionSetCrewLimitMaxMembersTransition() instead
 */
export declare function networkSessionSetCrewLimitMaxMembersTransition(): void;
/**
 * No comment provided
 *
 * Hash: 0x3F52E880AAF6C8CA | Since: 323
 * @deprecated Use network.sessionSetMatchmakingPropertyId() instead
 */
export declare function networkSessionSetMatchmakingPropertyId(): void;
/**
 * p0 in the decompiled scripts is always the stat mesh_texblend * 0.07 to int
 *
 * Hash: 0xF1EEA2DDA9FFA69D | Since: 323
 * @deprecated Use network.sessionSetMatchmakingMentalState() instead
 */
export declare function networkSessionSetMatchmakingMentalState(): void;
/**
 * No comment provided
 *
 * Hash: 0x59D421683D31835A | Since: 573
 * @deprecated Use network.sessionSetNumBosses(num) instead
 */
export declare function networkSessionSetNumBosses(num: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1153FA02A659051C | Since: 323
 * @deprecated Use network.sessionSetScriptValidateJoin() instead
 */
export declare function networkSessionSetScriptValidateJoin(): void;
/**
 * No comment provided
 *
 * Hash: 0xC19F6C8E7865A6FF | Since: 323
 * @deprecated Use network.sessionValidateJoin() instead
 */
export declare function networkSessionValidateJoin(): void;
/**
 * ..
 *
 * Hash: 0x236406F60CF216D6 | Since: 323
 * @deprecated Use network.addFollowers() instead
 */
export declare function networkAddFollowers(): number;
/**
 * No comment provided
 *
 * Hash: 0x058F43EC59A8631A | Since: 323
 * @deprecated Use network.clearFollowers() instead
 */
export declare function networkClearFollowers(): void;
/**
 * No comment provided
 *
 * Hash: 0x6D03BFBD643B2A02 | Since: 323
 * @deprecated Use network.getGlobalMultiplayerClock() instead
 */
export declare function networkGetGlobalMultiplayerClock(): [number, number, number];
/**
 * No comment provided
 *
 * Hash: 0x600F8CB31C7AAB6E | Since: 323
 * @deprecated Use network.sessionSetGamemode() instead
 */
export declare function networkSessionSetGamemode(): void;
/**
 * No comment provided
 *
 * Hash: 0xDFFA5BE8381C3314 | Since: 463
 * @deprecated Use network.sessionGetHostAimPreference() instead
 */
export declare function networkSessionGetHostAimPreference(): number;
/**
 * No comment provided
 *
 * Hash: 0xE532D6811B3A4D2A | Since: 323
 * @deprecated Use network.findGamersInCrew(crewId) instead
 */
export declare function networkFindGamersInCrew(crewId: number): boolean;
/**
 * Uses attributes to find players with similar stats. Upper/Lower limit must be above zero or the fallback limit +/-0.1 is used.
 * There can be up to 15 attributes, they are as follows:
 *
 * 0 = Races
 * 1 = Parachuting
 * 2 = Horde
 * 3 = Darts
 * 4 = Arm Wrestling
 * 5 = Tennis
 * 6 = Golf
 * 7 = Shooting Range
 * 8 = Deathmatch
 * 9 = MPPLY_MCMWIN/MPPLY_CRMISSION
 *
 * Hash: 0xF7B2CFDE5C9F700D | Since: 323
 * @deprecated Use network.findMatchedGamers(attribute, fallbackLimit, lowerLimit, upperLimit) instead
 */
export declare function networkFindMatchedGamers(attribute: number, fallbackLimit: number, lowerLimit: number, upperLimit: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDDDF64C91BFCF0AA | Since: 323
 * @deprecated Use network.isFindingGamers() instead
 */
export declare function networkIsFindingGamers(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF9B83B77929D8863 | Since: 323
 * @deprecated Use network.didFindGamersSucceed() instead
 */
export declare function networkDidFindGamersSucceed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA1B043EE79A916FB | Since: 323
 * @deprecated Use network.getNumFoundGamers() instead
 */
export declare function networkGetNumFoundGamers(): number;
/**
 * No comment provided
 *
 * Hash: 0x9DCFF2AFB68B3476 | Since: 323
 * @deprecated Use network.getFoundGamer() instead
 */
export declare function networkGetFoundGamer(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x6D14CCEE1B40381A | Since: 323
 * @deprecated Use network.clearFoundGamers() instead
 */
export declare function networkClearFoundGamers(): void;
/**
 * No comment provided
 *
 * Hash: 0x85A0EF54A500882C | Since: 323
 * @deprecated Use network.queueGamerForStatus() instead
 */
export declare function networkQueueGamerForStatus(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x2CC848A861D01493 | Since: 323
 * @deprecated Use network.getGamerStatusFromQueue() instead
 */
export declare function networkGetGamerStatusFromQueue(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x94A8394D150B013A | Since: 323
 * @deprecated Use network.isGettingGamerStatus() instead
 */
export declare function networkIsGettingGamerStatus(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5AE17C6B0134B7F1 | Since: 323
 * @deprecated Use network.didGetGamerStatusSucceed() instead
 */
export declare function networkDidGetGamerStatusSucceed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x02A8BEC6FD9AF660 | Since: 323
 * @deprecated Use network.getGamerStatusResult() instead
 */
export declare function networkGetGamerStatusResult(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x86E0660E4F5C956D | Since: 323
 * @deprecated Use network.clearGetGamerStatus() instead
 */
export declare function networkClearGetGamerStatus(): void;
/**
 * No comment provided
 *
 * Hash: 0xC6F8AB8A4189CF3A | Since: 323
 * @deprecated Use network.sessionJoinInvite() instead
 */
export declare function networkSessionJoinInvite(): void;
/**
 * No comment provided
 *
 * Hash: 0x2FBF47B1B36D36F9 | Since: 323
 * @deprecated Use network.sessionCancelInvite() instead
 */
export declare function networkSessionCancelInvite(): void;
/**
 * No comment provided
 *
 * Hash: 0xA29177F7703B5644 | Since: 323
 * @deprecated Use network.sessionForceCancelInvite() instead
 */
export declare function networkSessionForceCancelInvite(): void;
/**
 * No comment provided
 *
 * Hash: 0xAC8C7B9B88C4A668 | Since: 323
 * @deprecated Use network.hasPendingInvite() instead
 */
export declare function networkHasPendingInvite(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC42DD763159F3461 | Since: 323
 * @deprecated Use network.hasConfirmedInvite() instead
 */
export declare function networkHasConfirmedInvite(): boolean;
/**
 * Triggers a CEventNetworkInviteConfirmed event
 *
 * Hash: 0x62A0296C1BB1CEB3 | Since: 323
 * @deprecated Use network.requestInviteConfirmedEvent() instead
 */
export declare function networkRequestInviteConfirmedEvent(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x23DFB504655D0CE4 | Since: 323
 * @deprecated Use network.sessionWasInvited() instead
 */
export declare function networkSessionWasInvited(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE57397B4A3429DD0 | Since: 323
 * @deprecated Use network.sessionGetInviter() instead
 */
export declare function networkSessionGetInviter(): any;
/**
 * Seems to be true while "Getting GTA Online session details" shows up.
 *
 * Hash: 0xD313DE83394AF134 | Since: 323
 * @deprecated Use network.sessionIsAwaitingInviteResponse() instead
 */
export declare function networkSessionIsAwaitingInviteResponse(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBDB6F89C729CF388 | Since: 323
 * @deprecated Use network.sessionIsDisplayingInviteConfirmation() instead
 */
export declare function networkSessionIsDisplayingInviteConfirmation(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA0682D67EF1FBA3D | Since: 323
 * @deprecated Use network.suppressInvite(toggle) instead
 */
export declare function networkSuppressInvite(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x34F9E9049454A7A0 | Since: 323
 * @deprecated Use network.blockInvites(toggle) instead
 */
export declare function networkBlockInvites(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCFEB8AF24FC1D0BB | Since: 323
 * @deprecated Use network.blockJoinQueueInvites(toggle) instead
 */
export declare function networkBlockJoinQueueInvites(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x68980414688F7F9D | Since: 2612
 * @deprecated Use network.setCanReceiveRsInvites() instead
 */
export declare function networkSetCanReceiveRsInvites(): void;
/**
 * No comment provided
 *
 * Hash: 0xF814FEC6A19FD6E0 | Since: 323
 * @deprecated Use network.storeInviteThroughRestart() instead
 */
export declare function networkStoreInviteThroughRestart(): void;
/**
 * No comment provided
 *
 * Hash: 0x6B07B9CE4D390375 | Since: 323
 * @deprecated Use network.allowInviteProcessInPlayerSwitch() instead
 */
export declare function networkAllowInviteProcessInPlayerSwitch(): void;
/**
 * No comment provided
 *
 * Hash: 0x7AC752103856FB20 | Since: 323
 * @deprecated Use network.setScriptReadyForEvents(toggle) instead
 */
export declare function networkSetScriptReadyForEvents(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x74698374C45701D2 | Since: 323
 * @deprecated Use network.isOfflineInvitePending() instead
 */
export declare function networkIsOfflineInvitePending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x140E6A44870A11CE | Since: 323
 * @deprecated Use network.clearOfflineInvitePending() instead
 */
export declare function networkClearOfflineInvitePending(): void;
/**
 * Retrieves the failed invite join alert reason
 *
 * Hash: 0x7B335F84501145BB | Since: 3179
 * @deprecated Use network.inviteGetJoinFailReason() instead
 */
export declare function networkInviteGetJoinFailReason(): string;
/**
 * Clears the failed invite join alert reason
 *
 * Hash: 0x8EF5F5811A940F82 | Since: 3179
 * @deprecated Use network.inviteClearJoinFailReason() instead
 */
export declare function networkInviteClearJoinFailReason(): void;
/**
 * Loads up the map that is loaded when beeing in mission creator
 * Player gets placed in a mix between online/offline mode
 * p0 is always 2 in R* scripts.
 *
 * Appears to be patched in gtav b757 (game gets terminated) alonside with most other network natives to prevent online modding ~ghost30812
 *
 * Hash: 0xC74C33FCA52856D5 | Since: 323
 * @deprecated Use network.sessionHostSinglePlayer() instead
 */
export declare function networkSessionHostSinglePlayer(): void;
/**
 * No comment provided
 *
 * Hash: 0x3442775428FD2DAA | Since: 323
 * @deprecated Use network.sessionLeaveSinglePlayer() instead
 */
export declare function networkSessionLeaveSinglePlayer(): void;
/**
 * No comment provided
 *
 * Hash: 0x10FAB35428CCC9D7 | Since: 323
 * @deprecated Use network.isGameInProgress() instead
 */
export declare function networkIsGameInProgress(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD83C2B94E7508980 | Since: 323
 * @deprecated Use network.isSessionActive() instead
 */
export declare function networkIsSessionActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCA97246103B63917 | Since: 323
 * @deprecated Use network.isInSession() instead
 */
export declare function networkIsInSession(): boolean;
/**
 * Hardcoded to return 0.
 *
 * Hash: 0x0292BD7F3766CEBC | Since: 3095
 * @deprecated Use network.isAmericasVersion() instead
 */
export declare function networkIsAmericasVersion(): boolean;
/**
 * This checks if player is playing on gta online or not.
 * Please add an if and block your mod if this is "true".
 *
 * Hash: 0x9DE624D2FC4B603F | Since: 323
 * @deprecated Use network.isSessionStarted() instead
 */
export declare function networkIsSessionStarted(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF4435D66A8E2905E | Since: 323
 * @deprecated Use network.isSessionBusy() instead
 */
export declare function networkIsSessionBusy(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4EEBC3694E49C572 | Since: 323
 * @deprecated Use network.canSessionEnd() instead
 */
export declare function networkCanSessionEnd(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4C9034162368E206 | Since: 2060
 * @deprecated Use network.getGameMode() instead
 */
export declare function networkGetGameMode(): number;
/**
 * No comment provided
 *
 * Hash: 0x271CC6AB59EBF9A5 | Since: 323
 * @deprecated Use network.sessionMarkVisible(toggle) instead
 */
export declare function networkSessionMarkVisible(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBA416D68C631496A | Since: 323
 * @deprecated Use network.sessionIsVisible() instead
 */
export declare function networkSessionIsVisible(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA73667484D7037C3 | Since: 323
 * @deprecated Use network.sessionBlockJoinRequests(toggle) instead
 */
export declare function networkSessionBlockJoinRequests(toggle: boolean): void;
/**
 * num player slots allowed in session, seems to work? 32 max
 *
 * Hash: 0xB4AB419E0D86ACAE | Since: 323
 * @deprecated Use network.sessionChangeSlots(slots) instead
 */
export declare function networkSessionChangeSlots(slots: number): void;
/**
 * No comment provided
 *
 * Hash: 0x53AFD64C6758F2F9 | Since: 323
 * @deprecated Use network.sessionGetPrivateSlots() instead
 */
export declare function networkSessionGetPrivateSlots(): number;
/**
 * No comment provided
 *
 * Hash: 0x9C1556705F864230 | Since: 323
 * @deprecated Use network.sessionVoiceHost() instead
 */
export declare function networkSessionVoiceHost(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6793E42BE02B575D | Since: 323
 * @deprecated Use network.sessionVoiceLeave() instead
 */
export declare function networkSessionVoiceLeave(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xABD5E88B8A2D3DB2 | Since: 323
 * @deprecated Use network.sessionVoiceConnectToPlayer() instead
 */
export declare function networkSessionVoiceConnectToPlayer(): any;
/**
 * No comment provided
 *
 * Hash: 0x7F8413B7FC2AA6B9 | Since: 323
 * @deprecated Use network.sessionVoiceRespondToRequest() instead
 */
export declare function networkSessionVoiceRespondToRequest(): void;
/**
 * No comment provided
 *
 * Hash: 0x5B8ED3DB018927B1 | Since: 323
 * @deprecated Use network.sessionVoiceSetTimeout(timeout) instead
 */
export declare function networkSessionVoiceSetTimeout(timeout: number): void;
/**
 * No comment provided
 *
 * Hash: 0x855BC38818F6F684 | Since: 323
 * @deprecated Use network.sessionIsInVoiceSession() instead
 */
export declare function networkSessionIsInVoiceSession(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB5D3453C98456528 | Since: 323
 * @deprecated Use network.sessionIsVoiceSessionActive() instead
 */
export declare function networkSessionIsVoiceSessionActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEF0912DDF7C4CB4B | Since: 323
 * @deprecated Use network.sessionIsVoiceSessionBusy() instead
 */
export declare function networkSessionIsVoiceSessionBusy(): boolean;
/**
 * Message is limited to 64 characters.
 *
 * Hash: 0x3A214F2EC889B100 | Since: 323
 * @deprecated Use network.sendTextMessage(message) instead
 */
export declare function networkSendTextMessage(message: string): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x75138790B4359A74 | Since: 323
 * @deprecated Use network.setActivitySpectator(toggle) instead
 */
export declare function networkSetActivitySpectator(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x12103B9E0C9F92FB | Since: 323
 * @deprecated Use network.isActivitySpectator() instead
 */
export declare function networkIsActivitySpectator(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0E4F77F7B9D74D84 | Since: 573
 * @deprecated Use network.setActivityPlayerMax() instead
 */
export declare function networkSetActivityPlayerMax(): void;
/**
 * No comment provided
 *
 * Hash: 0x9D277B76D1D12222 | Since: 323
 * @deprecated Use network.setActivitySpectatorMax(maxSpectators) instead
 */
export declare function networkSetActivitySpectatorMax(maxSpectators: number): void;
/**
 * No comment provided
 *
 * Hash: 0x73E2B500410DA5A2 | Since: 323
 * @deprecated Use network.getActivityPlayerNum() instead
 */
export declare function networkGetActivityPlayerNum(): number;
/**
 * No comment provided
 *
 * Hash: 0x2763BBAA72A7BCB9 | Since: 323
 * @deprecated Use network.isActivitySpectatorFromHandle() instead
 */
export declare function networkIsActivitySpectatorFromHandle(): [boolean, any];
/**
 * p0: Unknown int
 * p1: Unknown int
 * p2: Unknown int
 * p3: Unknown int
 * p4: Unknown always 0 in decompiled scripts
 * p5: BOOL purpose unknown, both 0 and 1 are used in decompiled scripts.
 * p6: BOOL purpose unknown, both 0 and 1 are used in decompiled scripts.
 * p7: Unknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.
 * p8: Unknown int, it's an int according to decompiled scripts, however the value is always 0 or 1.
 * p9: Unknown int, sometimes 0, but also 32768 or 16384 appear in decompiled scripst, maybe a flag of some sort?
 *
 * From what I can tell it looks like it does the following:
 * Creates/hosts a new transition to another online session, using this in FiveM will result in other players being disconencted from the server/preventing them from joining. This is most likely because I entered the wrong session parameters since they're pretty much all unknown right now.
 * You also need to use `NetworkJoinTransition(Player player)` and `NetworkLaunchTransition()`.
 *
 * Hash: 0xA60BB5CE242BB254 | Since: 323
 * @deprecated Use network.hostTransition() instead
 */
export declare function networkHostTransition(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x71FB0EBCD4915D56 | Since: 323
 * @deprecated Use network.doTransitionQuickmatch() instead
 */
export declare function networkDoTransitionQuickmatch(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA091A5E44F0072E5 | Since: 323
 * @deprecated Use network.doTransitionQuickmatchAsync() instead
 */
export declare function networkDoTransitionQuickmatchAsync(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9C4AB58491FDC98A | Since: 323
 * @deprecated Use network.doTransitionQuickmatchWithGroup() instead
 */
export declare function networkDoTransitionQuickmatchWithGroup(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xA06509A691D12BE4 | Since: 323
 * @deprecated Use network.joinGroupActivity() instead
 */
export declare function networkJoinGroupActivity(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1888694923EF4591 | Since: 393
 * @deprecated Use network.clearGroupActivity() instead
 */
export declare function networkClearGroupActivity(): void;
/**
 * No comment provided
 *
 * Hash: 0xB13E88E655E5A3BC | Since: 323
 * @deprecated Use network.retainActivityGroup() instead
 */
export declare function networkRetainActivityGroup(): void;
/**
 * No comment provided
 *
 * Hash: 0x6512765E3BE78C50 | Since: 323
 * @deprecated Use network.isTransitionClosedFriends() instead
 */
export declare function networkIsTransitionClosedFriends(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0DBD5D7E3C5BEC3B | Since: 323
 * @deprecated Use network.isTransitionClosedCrew() instead
 */
export declare function networkIsTransitionClosedCrew(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5DC577201723960A | Since: 323
 * @deprecated Use network.isTransitionSolo() instead
 */
export declare function networkIsTransitionSolo(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5A6AA44FF8E931E6 | Since: 323
 * @deprecated Use network.isTransitionPrivate() instead
 */
export declare function networkIsTransitionPrivate(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x617F49C2668E6155 | Since: 757
 * @deprecated Use network.getNumTransitionNonAsyncGamers() instead
 */
export declare function networkGetNumTransitionNonAsyncGamers(): number;
/**
 * No comment provided
 *
 * Hash: 0x261E97AD7BCF3D40 | Since: 323
 * @deprecated Use network.markAsPreferredActivity() instead
 */
export declare function networkMarkAsPreferredActivity(): void;
/**
 * No comment provided
 *
 * Hash: 0x39917E1B4CB0F911 | Since: 323
 * @deprecated Use network.markAsWaitingAsync() instead
 */
export declare function networkMarkAsWaitingAsync(): void;
/**
 * No comment provided
 *
 * Hash: 0x2CE9D95E4051AECD | Since: 678
 * @deprecated Use network.setInProgressFinishTime() instead
 */
export declare function networkSetInProgressFinishTime(): void;
/**
 * No comment provided
 *
 * Hash: 0xEF26739BCD9907D5 | Since: 323
 * @deprecated Use network.setTransitionCreatorHandle() instead
 */
export declare function networkSetTransitionCreatorHandle(): any;
/**
 * No comment provided
 *
 * Hash: 0xFB3272229A82C759 | Since: 323
 * @deprecated Use network.clearTransitionCreatorHandle() instead
 */
export declare function networkClearTransitionCreatorHandle(): void;
/**
 * No comment provided
 *
 * Hash: 0x4A595C32F77DFF76 | Since: 323
 * @deprecated Use network.inviteGamersToTransition() instead
 */
export declare function networkInviteGamersToTransition(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xCA2C8073411ECDB6 | Since: 323
 * @deprecated Use network.setGamerInvitedToTransition() instead
 */
export declare function networkSetGamerInvitedToTransition(): any;
/**
 * No comment provided
 *
 * Hash: 0xD23A1A815D21DB19 | Since: 323
 * @deprecated Use network.leaveTransition() instead
 */
export declare function networkLeaveTransition(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2DCF46CB1A4F0884 | Since: 323
 * @deprecated Use network.launchTransition() instead
 */
export declare function networkLaunchTransition(): boolean;
/**
 * Appears to set whether a transition should be started when the session is migrating.
 *
 * Hash: 0xA2E9C1AB8A92E8CD | Since: 323
 * @deprecated Use network.setDoNotLaunchFromJoinAsMigratedHost(toggle) instead
 */
export declare function networkSetDoNotLaunchFromJoinAsMigratedHost(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x023782EFC70585EE | Since: 2699
 * @deprecated Use network.cancelTransitionMatchmaking() instead
 */
export declare function networkCancelTransitionMatchmaking(): void;
/**
 * No comment provided
 *
 * Hash: 0xEAA572036990CD1B | Since: 323
 * @deprecated Use network.bailTransition() instead
 */
export declare function networkBailTransition(): void;
/**
 * No comment provided
 *
 * Hash: 0x3E9BB38102A589B0 | Since: 323
 * @deprecated Use network.doTransitionToGame(maxPlayers) instead
 */
export declare function networkDoTransitionToGame(maxPlayers: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4665F51EFED00034 | Since: 323
 * @deprecated Use network.doTransitionToNewGame(maxPlayers) instead
 */
export declare function networkDoTransitionToNewGame(maxPlayers: number): boolean;
/**
 * p2 is true 3/4 of the occurrences I found.
 * 'players' is the number of players for a session. On PS3/360 it's always 18. On PC it's 32.
 *
 * Hash: 0x3AAD8B2FCA1E289F | Since: 323
 * @deprecated Use network.doTransitionToFreemode(players) instead
 */
export declare function networkDoTransitionToFreemode(players: number): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x9E80A5BA8109F974 | Since: 323
 * @deprecated Use network.doTransitionToNewFreemode(players) instead
 */
export declare function networkDoTransitionToNewFreemode(players: number): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x9D7696D8F4FA6CB7 | Since: 323
 * @deprecated Use network.isTransitionToGame() instead
 */
export declare function networkIsTransitionToGame(): boolean;
/**
 * Returns count.
 *
 * Hash: 0x73B000F7FBC55829 | Since: 323
 * @deprecated Use network.getTransitionMembers(dataCount) instead
 */
export declare function networkGetTransitionMembers(dataCount: number): [number, any];
/**
 * No comment provided
 *
 * Hash: 0x521638ADA1BA0D18 | Since: 323
 * @deprecated Use network.applyTransitionParameter() instead
 */
export declare function networkApplyTransitionParameter(): void;
/**
 * No comment provided
 *
 * Hash: 0xEBEFC2E77084F599 | Since: 323
 * @deprecated Use network.applyTransitionParameterString(_string) instead
 */
export declare function networkApplyTransitionParameterString(_string: string): void;
/**
 * No comment provided
 *
 * Hash: 0x31D1D2B858D25E6B | Since: 323
 * @deprecated Use network.sendTransitionGamerInstruction() instead
 */
export declare function networkSendTransitionGamerInstruction(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x5728BB6D63E3FF1D | Since: 323
 * @deprecated Use network.markTransitionGamerAsFullyJoined() instead
 */
export declare function networkMarkTransitionGamerAsFullyJoined(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x0B824797C9BF2159 | Since: 323
 * @deprecated Use network.isTransitionHost() instead
 */
export declare function networkIsTransitionHost(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6B5C83BA3EFE6A10 | Since: 323
 * @deprecated Use network.isTransitionHostFromHandle() instead
 */
export declare function networkIsTransitionHostFromHandle(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x65042B9774C4435E | Since: 323
 * @deprecated Use network.getTransitionHost() instead
 */
export declare function networkGetTransitionHost(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x68049AEFF83D8F0A | Since: 323
 * @deprecated Use network.isInTransition() instead
 */
export declare function networkIsInTransition(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x53FA83401D9C07FE | Since: 323
 * @deprecated Use network.isTransitionStarted() instead
 */
export declare function networkIsTransitionStarted(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x520F3282A53D26B7 | Since: 323
 * @deprecated Use network.isTransitionBusy() instead
 */
export declare function networkIsTransitionBusy(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x292564C735375EDF | Since: 323
 * @deprecated Use network.isTransitionMatchmaking() instead
 */
export declare function networkIsTransitionMatchmaking(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC571D0E77D8BBC29 | Since: 323
 * @deprecated Use network.isTransitionLeavePostponed() instead
 */
export declare function networkIsTransitionLeavePostponed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1398582B7F72B3ED | Since: 505
 * @deprecated Use network.transitionSetInProgress() instead
 */
export declare function networkTransitionSetInProgress(): void;
/**
 * No comment provided
 *
 * Hash: 0x1F8E00FB18239600 | Since: 573
 * @deprecated Use network.transitionSetContentCreator() instead
 */
export declare function networkTransitionSetContentCreator(): void;
/**
 * No comment provided
 *
 * Hash: 0xF6F4383B7C92F11A | Since: 573
 * @deprecated Use network.transitionSetActivityIsland() instead
 */
export declare function networkTransitionSetActivityIsland(): void;
/**
 * No comment provided
 *
 * Hash: 0x2B3A8F7CA3A38FDE | Since: 323
 * @deprecated Use network.openTransitionMatchmaking() instead
 */
export declare function networkOpenTransitionMatchmaking(): void;
/**
 * No comment provided
 *
 * Hash: 0x43F4DBA69710E01E | Since: 323
 * @deprecated Use network.closeTransitionMatchmaking() instead
 */
export declare function networkCloseTransitionMatchmaking(): void;
/**
 * No comment provided
 *
 * Hash: 0x37A4494483B9F5C9 | Since: 323
 * @deprecated Use network.isTransitionOpenToMatchmaking() instead
 */
export declare function networkIsTransitionOpenToMatchmaking(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0C978FDA19692C2C | Since: 323
 * @deprecated Use network.setTransitionVisibilityLock() instead
 */
export declare function networkSetTransitionVisibilityLock(): void;
/**
 * No comment provided
 *
 * Hash: 0xD0A484CB2F829FBE | Since: 323
 * @deprecated Use network.isTransitionVisibilityLocked() instead
 */
export declare function networkIsTransitionVisibilityLocked(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x30DE938B516F0AD2 | Since: 323
 * @deprecated Use network.setTransitionActivityId() instead
 */
export declare function networkSetTransitionActivityId(): void;
/**
 * No comment provided
 *
 * Hash: 0xEEEDA5E6D7080987 | Since: 323
 * @deprecated Use network.changeTransitionSlots() instead
 */
export declare function networkChangeTransitionSlots(): void;
/**
 * No comment provided
 *
 * Hash: 0x973D76AA760A6CB6 | Since: 323
 * @deprecated Use network.transitionBlockJoinRequests() instead
 */
export declare function networkTransitionBlockJoinRequests(): void;
/**
 * No comment provided
 *
 * Hash: 0x9AC9CCBFA8C29795 | Since: 323
 * @deprecated Use network.hasPlayerStartedTransition(player) instead
 */
export declare function networkHasPlayerStartedTransition(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2615AA2A695930C1 | Since: 323
 * @deprecated Use network.areTransitionDetailsValid() instead
 */
export declare function networkAreTransitionDetailsValid(): boolean;
/**
 * int handle[76];
 * NETWORK_HANDLE_FROM_FRIEND(iSelectedPlayer, &handle[0], 13);
 * Player uVar2 = NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(&handle[0]);
 * NETWORK_JOIN_TRANSITION(uVar2);
 * nothing doin.
 *
 * Hash: 0x9D060B08CD63321A | Since: 323
 * @deprecated Use network.joinTransition(player) instead
 */
export declare function networkJoinTransition(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7284A47B3540E6CF | Since: 323
 * @deprecated Use network.hasInvitedGamerToTransition() instead
 */
export declare function networkHasInvitedGamerToTransition(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x3F9990BF5F22759C | Since: 323
 * @deprecated Use network.hasTransitionInviteBeenAcked() instead
 */
export declare function networkHasTransitionInviteBeenAcked(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x05095437424397FA | Since: 323
 * @deprecated Use network.isActivitySession() instead
 */
export declare function networkIsActivitySession(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x236905C700FDB54D | Since: 2612
 * @deprecated Use network.disableRealtimeMultiplayer() instead
 */
export declare function networkDisableRealtimeMultiplayer(): void;
/**
 * Does nothing. It's just a nullsub.
 *
 * Hash: 0x4A9FDE3A5A6D0437 | Since: 323
 * @deprecated Use network.setPresenceSessionInvitesBlocked(toggle) instead
 */
export declare function networkSetPresenceSessionInvitesBlocked(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC3C7A6AFDB244624 | Since: 323
 * @deprecated Use network.sendInviteViaPresence(dataCount) instead
 */
export declare function networkSendInviteViaPresence(dataCount: number): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xC116FF9B4D488291 | Since: 323
 * @deprecated Use network.sendTransitionInviteViaPresence(dataCount) instead
 */
export declare function networkSendTransitionInviteViaPresence(dataCount: number): [boolean, any];
/**
 * Contains the string "NETWORK_SEND_PRESENCE_TRANSITION_INVITE" but so does 0xC116FF9B4D488291; seems to fit alphabetically here, tho.
 *
 * Hash: 0x1171A97A3D3981B6 | Since: 323
 * @deprecated Use network.sendImportantTransitionInviteViaPresence(dataCount) instead
 */
export declare function networkSendImportantTransitionInviteViaPresence(dataCount: number): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x742B58F723233ED9 | Since: 323
 * @deprecated Use network.getPresenceInviteIndexById() instead
 */
export declare function networkGetPresenceInviteIndexById(): number;
/**
 * No comment provided
 *
 * Hash: 0xCEFA968912D0F78D | Since: 323
 * @deprecated Use network.getNumPresenceInvites() instead
 */
export declare function networkGetNumPresenceInvites(): number;
/**
 * No comment provided
 *
 * Hash: 0xFA91550DF9318B22 | Since: 323
 * @deprecated Use network.acceptPresenceInvite() instead
 */
export declare function networkAcceptPresenceInvite(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF0210268DB0974B1 | Since: 323
 * @deprecated Use network.removePresenceInvite() instead
 */
export declare function networkRemovePresenceInvite(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDFF09646E12EC386 | Since: 323
 * @deprecated Use network.getPresenceInviteId() instead
 */
export declare function networkGetPresenceInviteId(): number;
/**
 * No comment provided
 *
 * Hash: 0x4962CC4AA2F345B7 | Since: 323
 * @deprecated Use network.getPresenceInviteInviter() instead
 */
export declare function networkGetPresenceInviteInviter(): string;
/**
 * No comment provided
 *
 * Hash: 0x38D5B0FEBB086F75 | Since: 323
 * @deprecated Use network.getPresenceInviteHandle() instead
 */
export declare function networkGetPresenceInviteHandle(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x26E1CD96B0903D60 | Since: 323
 * @deprecated Use network.getPresenceInviteSessionId() instead
 */
export declare function networkGetPresenceInviteSessionId(): number;
/**
 * No comment provided
 *
 * Hash: 0x24409FC4C55CB22D | Since: 323
 * @deprecated Use network.getPresenceInviteContentId() instead
 */
export declare function networkGetPresenceInviteContentId(): string;
/**
 * No comment provided
 *
 * Hash: 0xD39B3FFF8FFDD5BF | Since: 323
 * @deprecated Use network.getPresenceInvitePlaylistLength() instead
 */
export declare function networkGetPresenceInvitePlaylistLength(): number;
/**
 * No comment provided
 *
 * Hash: 0x728C4CC7920CD102 | Since: 323
 * @deprecated Use network.getPresenceInvitePlaylistCurrent() instead
 */
export declare function networkGetPresenceInvitePlaylistCurrent(): number;
/**
 * No comment provided
 *
 * Hash: 0x3DBF2DF0AEB7D289 | Since: 323
 * @deprecated Use network.getPresenceInviteFromAdmin() instead
 */
export declare function networkGetPresenceInviteFromAdmin(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8806CEBFABD3CE05 | Since: 323
 * @deprecated Use network.getPresenceInviteIsTournament() instead
 */
export declare function networkGetPresenceInviteIsTournament(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x76D9B976C4C09FDE | Since: 323
 * @deprecated Use network.hasFollowInvite() instead
 */
export declare function networkHasFollowInvite(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC88156EBB786F8D5 | Since: 323
 * @deprecated Use network.actionFollowInvite() instead
 */
export declare function networkActionFollowInvite(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x439BFDE3CD0610F6 | Since: 323
 * @deprecated Use network.clearFollowInvite() instead
 */
export declare function networkClearFollowInvite(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEBF8284D8CADEB53 | Since: 323
 * @deprecated Use network.removeAndCancelAllInvites() instead
 */
export declare function networkRemoveAndCancelAllInvites(): void;
/**
 * No comment provided
 *
 * Hash: 0x7524B431B2E6F7EE | Since: 323
 * @deprecated Use network.removeTransitionInvite() instead
 */
export declare function networkRemoveTransitionInvite(): any;
/**
 * No comment provided
 *
 * Hash: 0x726E0375C7A26368 | Since: 323
 * @deprecated Use network.removeAllTransitionInvite() instead
 */
export declare function networkRemoveAllTransitionInvite(): void;
/**
 * No comment provided
 *
 * Hash: 0xF083835B70BA9BFE | Since: 323
 * @deprecated Use network.removeAndCancelAllTransitionInvites() instead
 */
export declare function networkRemoveAndCancelAllTransitionInvites(): void;
/**
 * No comment provided
 *
 * Hash: 0x9D80CD1D0E6327DE | Since: 323
 * @deprecated Use network.inviteGamers() instead
 */
export declare function networkInviteGamers(): [boolean, any, any];
/**
 * No comment provided
 *
 * Hash: 0x4D86CD31E8976ECE | Since: 323
 * @deprecated Use network.hasInvitedGamer() instead
 */
export declare function networkHasInvitedGamer(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x71DC455F5CD1C2B1 | Since: 505
 * @deprecated Use network.hasMadeInviteDecision() instead
 */
export declare function networkHasMadeInviteDecision(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x3855FB5EB2C5E8B2 | Since: 505
 * @deprecated Use network.getInviteReplyStatus() instead
 */
export declare function networkGetInviteReplyStatus(): number;
/**
 * No comment provided
 *
 * Hash: 0x74881E6BCAE2327C | Since: 323
 * @deprecated Use network.getCurrentlySelectedGamerHandleFromInviteMenu() instead
 */
export declare function networkGetCurrentlySelectedGamerHandleFromInviteMenu(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x7206F674F2A3B1BB | Since: 323
 * @deprecated Use network.setCurrentlySelectedGamerHandleFromInviteMenu() instead
 */
export declare function networkSetCurrentlySelectedGamerHandleFromInviteMenu(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x66F010A4B031A331 | Since: 323
 * @deprecated Use network.setInviteOnCallForInviteMenu() instead
 */
export declare function networkSetInviteOnCallForInviteMenu(): any;
/**
 * No comment provided
 *
 * Hash: 0x44B37CDCAE765AAE | Since: 323
 * @deprecated Use network.checkDataManagerSucceededForHandle() instead
 */
export declare function networkCheckDataManagerSucceededForHandle(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x4AD490AE1536933B | Since: 372
 * @deprecated Use network.checkDataManagerForHandle() instead
 */
export declare function networkCheckDataManagerForHandle(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x0D77A82DC2D0DA59 | Since: 323
 * @deprecated Use network.setInviteFailedMessageForInviteMenu() instead
 */
export declare function networkSetInviteFailedMessageForInviteMenu(): [any, any];
/**
 * No comment provided
 *
 * Hash: 0xCBBD7C4991B64809 | Since: 323
 * @deprecated Use network.filloutPmPlayerList() instead
 */
export declare function filloutPmPlayerList(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x716B6DB9D1886106 | Since: 323
 * @deprecated Use network.filloutPmPlayerListWithNames() instead
 */
export declare function filloutPmPlayerListWithNames(): [boolean, any, any];
/**
 * No comment provided
 *
 * Hash: 0xE26CCFF8094D8C74 | Since: 323
 * @deprecated Use network.refreshPlayerListStats() instead
 */
export declare function refreshPlayerListStats(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x796A87B3B68D1F3D | Since: 323
 * @deprecated Use network.setCurrentDataManagerHandle() instead
 */
export declare function networkSetCurrentDataManagerHandle(): [boolean, any];
/**
 * Hardcoded to return false.
 *
 * Hash: 0x2FC5650B0271CB57 | Since: 323
 * @deprecated Use network.isInPlatformParty() instead
 */
export declare function networkIsInPlatformParty(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x01ABCE5E7CBDA196 | Since: 323
 * @deprecated Use network.getPlatformPartyMemberCount() instead
 */
export declare function networkGetPlatformPartyMemberCount(): number;
/**
 * No comment provided
 *
 * Hash: 0x120364DE2845DAF8 | Since: 323
 * @deprecated Use network.getPlatformPartyMembers(dataSize) instead
 */
export declare function networkGetPlatformPartyMembers(dataSize: number): [number, any];
/**
 * Hardcoded to return false.
 *
 * Hash: 0xFD8B834A8BA05048 | Since: 323
 * @deprecated Use network.isInPlatformPartyChat() instead
 */
export declare function networkIsInPlatformPartyChat(): boolean;
/**
 * This would be nice to see if someone is in party chat, but 2 sad notes.
 * 1) It only becomes true if said person is speaking in that party at the time.
 * 2) It will never, become true unless you are in that party with said person.
 *
 * Hash: 0x8DE9945BCC9AEC52 | Since: 323
 * @deprecated Use network.isChattingInPlatformParty() instead
 */
export declare function networkIsChattingInPlatformParty(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x2BF66D2E7414F686 | Since: 323
 * @deprecated Use network.canQueueForPreviousSessionJoin() instead
 */
export declare function networkCanQueueForPreviousSessionJoin(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x14922ED3E38761F0 | Since: 323
 * @deprecated Use network.isQueuingForSessionJoin() instead
 */
export declare function networkIsQueuingForSessionJoin(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6CE50E47F5543D0C | Since: 573
 * @deprecated Use network.clearQueuedJoinRequest() instead
 */
export declare function networkClearQueuedJoinRequest(): void;
/**
 * No comment provided
 *
 * Hash: 0xFA2888E3833C8E96 | Since: 323
 * @deprecated Use network.sendQueuedJoinRequest() instead
 */
export declare function networkSendQueuedJoinRequest(): void;
/**
 * No comment provided
 *
 * Hash: 0x25D990F8E0E3F13C | Since: 323
 * @deprecated Use network.removeAllQueuedJoinRequests() instead
 */
export declare function networkRemoveAllQueuedJoinRequests(): void;
/**
 * No comment provided
 *
 * Hash: 0xF1B84178F8674195 | Since: 323
 * @deprecated Use network.seedRandomNumberGenerator(seed) instead
 */
export declare function networkSeedRandomNumberGenerator(seed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x599E4FA1F87EB5FF | Since: 323
 * @deprecated Use network.getRandomInt() instead
 */
export declare function networkGetRandomInt(): number;
/**
 * Same as GET_RANDOM_INT_IN_RANGE
 *
 * Hash: 0xE30CF56F1EFA5F43 | Since: 323
 * @deprecated Use network.getRandomIntRanged(rangeStart, rangeEnd) instead
 */
export declare function networkGetRandomIntRanged(rangeStart: number, rangeEnd: number): number;
/**
 * No comment provided
 *
 * Hash: 0x04BD27B5ACB67067 | Since: 2802
 * @deprecated Use network.getRandomFloatRanged(rangeStart, rangeEnd) instead
 */
export declare function networkGetRandomFloatRanged(rangeStart: number, rangeEnd: number): number;
/**
 * No comment provided
 *
 * Hash: 0x655B91F1495A9090 | Since: 323
 * @deprecated Use network.playerIsCheater() instead
 */
export declare function networkPlayerIsCheater(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x172F75B6EE2233BA | Since: 323
 * @deprecated Use network.playerGetCheaterReason() instead
 */
export declare function networkPlayerGetCheaterReason(): number;
/**
 * No comment provided
 *
 * Hash: 0x19D8DA0E5A68045A | Since: 323
 * @deprecated Use network.playerIsBadsport() instead
 */
export declare function networkPlayerIsBadsport(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x472841A026D26D8B | Since: 1103
 * @deprecated Use network.remoteCheaterPlayerDetected(player, a, b) instead
 */
export declare function remoteCheaterPlayerDetected(player: number | string | Player, a: number, b: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEC5E3AF5289DCA81 | Since: 323
 * @deprecated Use network.badSportPlayerLeftDetected(event, amountReceived) instead
 */
export declare function badSportPlayerLeftDetected(event: number, amountReceived: number): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x7F562DBC212E81F9 | Since: 2545
 * @deprecated Use network.addInvalidObjectModel(modelHash) instead
 */
export declare function networkAddInvalidObjectModel(modelHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x791EDB5803B2F468 | Since: 2545
 * @deprecated Use network.removeInvalidObjectModel(modelHash) instead
 */
export declare function networkRemoveInvalidObjectModel(modelHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x03B2F03A53D85E41 | Since: 2545
 * @deprecated Use network.clearInvalidObjectModels() instead
 */
export declare function networkClearInvalidObjectModels(): void;
/**
 * No comment provided
 *
 * Hash: 0xE66C690248F11150 | Since: 323
 * @deprecated Use network.applyPedScarData(ped) instead
 */
export declare function networkApplyPedScarData(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x1CA59E306ECB80A5 | Since: 323
 * @deprecated Use network.setThisScriptIsNetworkScript(maxNumMissionParticipants, instanceId) instead
 */
export declare function networkSetThisScriptIsNetworkScript(maxNumMissionParticipants: number, instanceId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD1110739EEADB592 | Since: 323
 * @deprecated Use network.tryToSetThisScriptIsNetworkScript() instead
 */
export declare function networkTryToSetThisScriptIsNetworkScript(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2910669969E9535E | Since: 323
 * @deprecated Use network.getThisScriptIsNetworkScript() instead
 */
export declare function networkGetThisScriptIsNetworkScript(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA6C90FBC38E395EE | Since: 323
 * @deprecated Use network.getMaxNumParticipants() instead
 */
export declare function networkGetMaxNumParticipants(): number;
/**
 * No comment provided
 *
 * Hash: 0x18D0456E86604654 | Since: 323
 * @deprecated Use network.getNumParticipants() instead
 */
export declare function networkGetNumParticipants(): number;
/**
 * No comment provided
 *
 * Hash: 0x57D158647A6BFABF | Since: 323
 * @deprecated Use network.getScriptStatus() instead
 */
export declare function networkGetScriptStatus(): number;
/**
 * No comment provided
 *
 * Hash: 0x3E9B2F01C50DF595 | Since: 323
 * @deprecated Use network.registerHostBroadcastVariables(numVars, debugName) instead
 */
export declare function networkRegisterHostBroadcastVariables(numVars: number, debugName: string): number;
/**
 * No comment provided
 *
 * Hash: 0x3364AA97340CA215 | Since: 323
 * @deprecated Use network.registerPlayerBroadcastVariables(numVars, debugName) instead
 */
export declare function networkRegisterPlayerBroadcastVariables(numVars: number, debugName: string): number;
/**
 * No comment provided
 *
 * Hash: 0xEA8C0DDB10E2822A | Since: 1868
 * @deprecated Use network.registerHighFrequencyHostBroadcastVariables() instead
 */
export declare function networkRegisterHighFrequencyHostBroadcastVariables(): void;
/**
 * No comment provided
 *
 * Hash: 0xD6D7478CA62B8D41 | Since: 1868
 * @deprecated Use network.registerHighFrequencyPlayerBroadcastVariables() instead
 */
export declare function networkRegisterHighFrequencyPlayerBroadcastVariables(): void;
/**
 * No comment provided
 *
 * Hash: 0x64F62AFB081E260D | Since: 323
 * @deprecated Use network.finishBroadcastingData() instead
 */
export declare function networkFinishBroadcastingData(): void;
/**
 * No comment provided
 *
 * Hash: 0x72C8588ABE22C972 | Since: 3586
 * @deprecated Use network.getHostBroadcastDataSizeUnsynced(scriptNameHash, instance, positionHash, handlerNum) instead
 */
export declare function networkGetHostBroadcastDataSizeUnsynced(scriptNameHash: number | string, instance: number, positionHash: number | string, handlerNum: number): number;
/**
 * No comment provided
 *
 * Hash: 0xB99CD664FD4720A1 | Since: 3586
 * @deprecated Use network.getPlayerBroadcastDataSizeUnsynced(scriptNameHash, instance, positionHash, handlerNum) instead
 */
export declare function networkGetPlayerBroadcastDataSizeUnsynced(scriptNameHash: number | string, instance: number, positionHash: number | string, handlerNum: number): number;
/**
 * No comment provided
 *
 * Hash: 0xE448693B3EA3B92C | Since: 3586
 * @deprecated Use network.getBroadcastDataHostUpdateSize(scriptNameHash, instance, positionHash, handlerNum) instead
 */
export declare function networkGetBroadcastDataHostUpdateSize(scriptNameHash: number | string, instance: number, positionHash: number | string, handlerNum: number): number;
/**
 * No comment provided
 *
 * Hash: 0xAC3F722321800755 | Since: 3586
 * @deprecated Use network.getBroadcastDataPlayerUpdateSize(scriptNameHash, instance, positionHash, handlerNum) instead
 */
export declare function networkGetBroadcastDataPlayerUpdateSize(scriptNameHash: number | string, instance: number, positionHash: number | string, handlerNum: number): number;
/**
 * No comment provided
 *
 * Hash: 0x5D10B3795F3FC886 | Since: 323
 * @deprecated Use network.hasReceivedHostBroadcastData() instead
 */
export declare function networkHasReceivedHostBroadcastData(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x24FB80D107371267 | Since: 323
 * @deprecated Use network.getPlayerIndex(player) instead
 */
export declare function networkGetPlayerIndex(player: number | string | Player): number | string;
/**
 * No comment provided
 *
 * Hash: 0x1B84DF6AF2A46938 | Since: 323
 * @deprecated Use network.getParticipantIndex(index) instead
 */
export declare function networkGetParticipantIndex(index: number): number;
/**
 * Returns the Player associated to a given Ped when in an online session.
 *
 * Hash: 0x6C0E2E0125610278 | Since: 323
 * @deprecated Use network.getPlayerIndexFromPed(ped) instead
 */
export declare function networkGetPlayerIndexFromPed(ped: number | Ped): number | string;
/**
 * Returns the amount of players connected in the current session. Only works when connected to a session/server.
 *
 * Hash: 0xA4A79DD2D9600654 | Since: 323
 * @deprecated Use network.getNumConnectedPlayers() instead
 */
export declare function networkGetNumConnectedPlayers(): number;
/**
 * No comment provided
 *
 * Hash: 0x93DC1BE4E1ABE9D1 | Since: 323
 * @deprecated Use network.isPlayerConnected(player) instead
 */
export declare function networkIsPlayerConnected(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCF61D4B4702EE9EB | Since: 323
 * @deprecated Use network.getTotalNumPlayers() instead
 */
export declare function networkGetTotalNumPlayers(): number;
/**
 * No comment provided
 *
 * Hash: 0x6FF8FF40B6357D45 | Since: 323
 * @deprecated Use network.isParticipantActive() instead
 */
export declare function networkIsParticipantActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB8DFD30D6973E135 | Since: 323
 * @deprecated Use network.isPlayerActive(player) instead
 */
export declare function networkIsPlayerActive(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3CA58F6CB7CBD784 | Since: 323
 * @deprecated Use network.isPlayerAParticipant(player) instead
 */
export declare function networkIsPlayerAParticipant(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x83CD99A1E6061AB5 | Since: 323
 * @deprecated Use network.isHostOfThisScript() instead
 */
export declare function networkIsHostOfThisScript(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC7B4D79B01FA7A5C | Since: 323
 * @deprecated Use network.getHostOfThisScript() instead
 */
export declare function networkGetHostOfThisScript(): number | string;
/**
 * scriptName examples:
 * "freemode", "AM_CR_SecurityVan", ...
 *
 * Most of the time, these values are used:
 * instance_id = -1
 * position_hash = 0
 *
 * Hash: 0x1D6A14F1F9A736FC | Since: 323
 * @deprecated Use network.getHostOfScript(scriptName, instance_id, position_hash) instead
 */
export declare function networkGetHostOfScript(scriptName: string, instance_id: number, position_hash: number): number | string;
/**
 * No comment provided
 *
 * Hash: 0x3B3D11CD9FFCDFC9 | Since: 323
 * @deprecated Use network.setMissionFinished() instead
 */
export declare function networkSetMissionFinished(): void;
/**
 * No comment provided
 *
 * Hash: 0x9D40DF90FAD26098 | Since: 323
 * @deprecated Use network.isScriptActive(scriptName, instance_id, position_hash) instead
 */
export declare function networkIsScriptActive(scriptName: string, instance_id: number, position_hash: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDA7DE67F5FE5EE13 | Since: 2245
 * @deprecated Use network.isScriptActiveByHash(scriptHash) instead
 */
export declare function networkIsScriptActiveByHash(scriptHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x560B423D73015E77 | Since: 1604
 * @deprecated Use network.isThreadANetworkScript(threadId) instead
 */
export declare function networkIsThreadANetworkScript(threadId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3658E8CD94FC121A | Since: 323
 * @deprecated Use network.getNumScriptParticipants(scriptName, instance_id, position_hash) instead
 */
export declare function networkGetNumScriptParticipants(scriptName: string, instance_id: number, position_hash: number): number;
/**
 * No comment provided
 *
 * Hash: 0x638A3A81733086DB | Since: 323
 * @deprecated Use network.getInstanceIdOfThisScript() instead
 */
export declare function networkGetInstanceIdOfThisScript(): number;
/**
 * No comment provided
 *
 * Hash: 0x257ED0FADF750BCF | Since: 2372
 * @deprecated Use network.getPositionHashOfThisScript() instead
 */
export declare function networkGetPositionHashOfThisScript(): number;
/**
 * No comment provided
 *
 * Hash: 0x1AD5B71586B94820 | Since: 323
 * @deprecated Use network.isPlayerAParticipantOnScript(player, script, instance_id) instead
 */
export declare function networkIsPlayerAParticipantOnScript(player: number | string | Player, script: string, instance_id: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2302C0264EA58D31 | Since: 323
 * @deprecated Use network.preventScriptHostMigration() instead
 */
export declare function networkPreventScriptHostMigration(): void;
/**
 * No comment provided
 *
 * Hash: 0x741A3D8380319A81 | Since: 323
 * @deprecated Use network.requestToBeHostOfThisScript() instead
 */
export declare function networkRequestToBeHostOfThisScript(): void;
/**
 * Return the local Participant ID
 *
 * Hash: 0x90986E8876CE0A83 | Since: 323
 * @deprecated Use network.participantId() instead
 */
export declare function participantId(): number | string;
/**
 * Return the local Participant ID.
 *
 * This native is exactly the same as 'PARTICIPANT_ID' native.
 *
 * Hash: 0x57A3BDDAD8E5AA0A | Since: 323
 * @deprecated Use network.participantIdToInt() instead
 */
export declare function participantIdToInt(): number;
/**
 * No comment provided
 *
 * Hash: 0x2DA41ED6E1FCD7A5 | Since: 463
 * @deprecated Use network.getKillerOfPlayer(player) instead
 */
export declare function networkGetKillerOfPlayer(player: number | string | Player): [number | string, number];
/**
 * No comment provided
 *
 * Hash: 0x7A1ADEEF01740A24 | Since: 323
 * @deprecated Use network.getDestroyerOfNetworkId(netId) instead
 */
export declare function networkGetDestroyerOfNetworkId(netId: number): [number | string, number];
/**
 * No comment provided
 *
 * Hash: 0xC434133D9BA52777 | Since: 463
 * @deprecated Use network.getDestroyerOfEntity(entity) instead
 */
export declare function networkGetDestroyerOfEntity(entity: number | Entity): [number | string, number];
/**
 * NETWORK_GET_ASSISTED_DAMAGE_OF_ENTITY that ensures the entity is dead (IS_ENTITY_DEAD)
 *
 * Hash: 0x83660B734994124D | Since: 463
 * @deprecated Use network.getAssistedKillOfEntity(player, entity) instead
 */
export declare function networkGetAssistedKillOfEntity(player: number | string | Player, entity: number | Entity): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x4CACA84440FA26F6 | Since: 323
 * @deprecated Use network.getAssistedDamageOfEntity(player, entity) instead
 */
export declare function networkGetAssistedDamageOfEntity(player: number | string | Player, entity: number | Entity): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x42B2DAA6B596F5F8 | Since: 323
 * @deprecated Use network.getEntityKillerOfPlayer(player) instead
 */
export declare function networkGetEntityKillerOfPlayer(player: number | string | Player): [number, number];
/**
 * No comment provided
 *
 * Hash: 0x2C863ACDCD12B3DB | Since: 2699
 * @deprecated Use network.setCurrentPublicContentId(missionId) instead
 */
export declare function networkSetCurrentPublicContentId(missionId: string): void;
/**
 * No comment provided
 *
 * Hash: 0x3DAD00265FBF356B | Since: 2802
 * @deprecated Use network.setCurrentChatOption(newChatOption) instead
 */
export declare function networkSetCurrentChatOption(newChatOption: number): void;
/**
 * mpSettingSpawn:
 *
 * enum eMpSettingSpawn
 * {
 * MP_SETTING_SPAWN_NULL,
 * MP_SETTING_SPAWN_PROPERTY,
 * MP_SETTING_SPAWN_LAST_POSITION,
 * MP_SETTING_SPAWN_GARAGE,
 * MP_SETTING_SPAWN_RANDOM,
 * MP_SETTING_SPAWN_PRIVATE_YACHT,
 * MP_SETTING_SPAWN_OFFICE,
 * MP_SETTING_SPAWN_CLUBHOUSE,
 * MP_SETTING_SPAWN_IE_WAREHOUSE,
 * MP_SETTING_SPAWN_BUNKER,
 * MP_SETTING_SPAWN_HANGAR,
 * MP_SETTING_SPAWN_DEFUNCT_BASE,
 * MP_SETTING_SPAWN_NIGHTCLUB,
 * MP_SETTING_SPAWN_ARENA_GARAGE,
 * MP_SETTING_SPAWN_CASINO_APARTMENT,
 * MP_SETTING_SPAWN_ARCADE,
 * MP_SETTING_SPAWN_SUBMARINE,
 * MP_SETTING_SPAWN_CAR_MEET,
 * MP_SETTING_SPAWN_AUTO_SHOP,
 * MP_SETTING_SPAWN_FIXER_HQ,
 * MP_SETTING_SPAWN_MAX,
 * };
 *
 * Hash: 0xAA6D5451DC3448B6 | Since: 2699
 * @deprecated Use network.setCurrentSpawnLocationOption(mpSettingSpawn) instead
 */
export declare function networkSetCurrentSpawnLocationOption(mpSettingSpawn: number | string): void;
/**
 * Used by MetricVEHICLE_DIST_DRIVEN
 *
 * Hash: 0x8C70252FC40F320B | Since: 2699
 * @deprecated Use network.setVehicleDrivenInTestDrive(toggle) instead
 */
export declare function networkSetVehicleDrivenInTestDrive(toggle: boolean): void;
/**
 * Sets 'loc' variable used in MetricVEHICLE_DIST_DRIVEN
 *
 * Hash: 0xA0CE91E47531D3BB | Since: 2944
 * @deprecated Use network.setVehicleDrivenLocation(location) instead
 */
export declare function networkSetVehicleDrivenLocation(location: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xEA23C49EAA83ACFB | Since: 323
 * @deprecated Use network.resurrectLocalPlayer(pos, heading, changetime) instead
 */
export declare function networkResurrectLocalPlayer(pos: Vector3, heading: number, changetime: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2D95C7E2D7E07307 | Since: 323
 * @deprecated Use network.setLocalPlayerInvincibleTime(time) instead
 */
export declare function networkSetLocalPlayerInvincibleTime(time: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8A8694B48715B000 | Since: 323
 * @deprecated Use network.isLocalPlayerInvincible() instead
 */
export declare function networkIsLocalPlayerInvincible(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9DD368BF06983221 | Since: 323
 * @deprecated Use network.disableInvincibleFlashing(player, toggle) instead
 */
export declare function networkDisableInvincibleFlashing(player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF0BC9BCD24A511D5 | Since: 2372
 * @deprecated Use network.patchPostCutsceneHs4fTunEnt(ped) instead
 */
export declare function networkPatchPostCutsceneHs4fTunEnt(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x524FF0AEFF9C3973 | Since: 323
 * @deprecated Use network.setLocalPlayerSyncLookAt(toggle) instead
 */
export declare function networkSetLocalPlayerSyncLookAt(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB07D3185E11657A5 | Since: 323
 * @deprecated Use network.hasEntityBeenRegisteredWithThisThread(entity) instead
 */
export declare function networkHasEntityBeenRegisteredWithThisThread(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA11700682F3AD45C | Since: 323
 * @deprecated Use network.getNetworkIdFromEntity(entity) instead
 */
export declare function networkGetNetworkIdFromEntity(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xCE4E5D9B0A4FF560 | Since: 323
 * @deprecated Use network.getEntityFromNetworkId(netId) instead
 */
export declare function networkGetEntityFromNetworkId(netId: number): number;
/**
 * No comment provided
 *
 * Hash: 0xC7827959479DCC78 | Since: 323
 * @deprecated Use network.getEntityIsNetworked(entity) instead
 */
export declare function networkGetEntityIsNetworked(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0991549DE4D64762 | Since: 323
 * @deprecated Use network.getEntityIsLocal(entity) instead
 */
export declare function networkGetEntityIsLocal(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x06FAACD625D80CAA | Since: 323
 * @deprecated Use network.registerEntityAsNetworked(entity) instead
 */
export declare function networkRegisterEntityAsNetworked(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x7368E683BB9038D6 | Since: 323
 * @deprecated Use network.unregisterNetworkedEntity(entity) instead
 */
export declare function networkUnregisterNetworkedEntity(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x38CE16C96BD11344 | Since: 323
 * @deprecated Use network.doesNetworkIdExist(netId) instead
 */
export declare function networkDoesNetworkIdExist(netId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x18A47D074708FD68 | Since: 323
 * @deprecated Use network.doesEntityExistWithNetworkId(netId) instead
 */
export declare function networkDoesEntityExistWithNetworkId(netId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA670B3662FAFFBD0 | Since: 323
 * @deprecated Use network.requestControlOfNetworkId(netId) instead
 */
export declare function networkRequestControlOfNetworkId(netId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4D36070FE0215186 | Since: 323
 * @deprecated Use network.hasControlOfNetworkId(netId) instead
 */
export declare function networkHasControlOfNetworkId(netId: number): boolean;
/**
 * Returns true if the specified network id is controlled by someone else.
 *
 * Hash: 0x7242F8B741CE1086 | Since: 678
 * @deprecated Use network.isNetworkIdRemotelyControlled(netId) instead
 */
export declare function networkIsNetworkIdRemotelyControlled(netId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB69317BF5E782347 | Since: 323
 * @deprecated Use network.requestControlOfEntity(entity) instead
 */
export declare function networkRequestControlOfEntity(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x870DDFD5A4A796E4 | Since: 323
 * @deprecated Use network.requestControlOfDoor(doorID) instead
 */
export declare function networkRequestControlOfDoor(doorID: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x01BF60A500E28887 | Since: 323
 * @deprecated Use network.hasControlOfEntity(entity) instead
 */
export declare function networkHasControlOfEntity(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5BC9495F0B3B6FA6 | Since: 323
 * @deprecated Use network.hasControlOfPickup(pickup) instead
 */
export declare function networkHasControlOfPickup(pickup: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCB3C68ADB06195DF | Since: 323
 * @deprecated Use network.hasControlOfDoor(doorHash) instead
 */
export declare function networkHasControlOfDoor(doorHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC01E93FAC20C3346 | Since: 323
 * @deprecated Use network.isDoorNetworked(doorHash) instead
 */
export declare function networkIsDoorNetworked(doorHash: number | string): boolean;
/**
 * calls from vehicle to net.
 *
 *
 * Hash: 0xB4C94523F023419C | Since: 323
 * @deprecated Use network.vehToNet(vehicle) instead
 */
export declare function vehToNet(vehicle: number | Vehicle): number;
/**
 * gets the network id of a ped
 *
 * Hash: 0x0EDEC3C276198689 | Since: 323
 * @deprecated Use network.pedToNet(ped) instead
 */
export declare function pedToNet(ped: number | Ped): number;
/**
 * Lets objects spawn online simply do it like this:
 *
 * int createdObject = OBJ_TO_NET(CREATE_OBJECT_NO_OFFSET(oball, pCoords.x, pCoords.y, pCoords.z, 1, 0, 0));
 *
 * Hash: 0x99BFDC94A603E541 | Since: 323
 * @deprecated Use network.objToNet(_object) instead
 */
export declare function objToNet(_object: number | Object): number;
/**
 * No comment provided
 *
 * Hash: 0x367B936610BA360C | Since: 323
 * @deprecated Use network.netToVeh(netHandle) instead
 */
export declare function netToVeh(netHandle: number): number;
/**
 * gets the ped id of a network id
 *
 * Hash: 0xBDCD95FC216A8B3E | Since: 323
 * @deprecated Use network.netToPed(netHandle) instead
 */
export declare function netToPed(netHandle: number): number;
/**
 * gets the object id of a network id
 *
 * Hash: 0xD8515F5FEA14CB3F | Since: 323
 * @deprecated Use network.netToObj(netHandle) instead
 */
export declare function netToObj(netHandle: number): number;
/**
 * gets the entity id of a network id
 *
 * Hash: 0xBFFEAB45A9A9094A | Since: 323
 * @deprecated Use network.netToEnt(netHandle) instead
 */
export declare function netToEnt(netHandle: number): number;
/**
 * No comment provided
 *
 * Hash: 0xE86051786B66CD8E | Since: 323
 * @deprecated Use network.getLocalHandle(gamerHandleSize) instead
 */
export declare function networkGetLocalHandle(gamerHandleSize: number): any;
/**
 * No comment provided
 *
 * Hash: 0xDCD51DD8F87AEC5C | Since: 323
 * @deprecated Use network.handleFromUserId(userId, gamerHandleSize) instead
 */
export declare function networkHandleFromUserId(userId: string, gamerHandleSize: number): any;
/**
 * No comment provided
 *
 * Hash: 0xA0FD21BED61E5C4C | Since: 323
 * @deprecated Use network.handleFromMemberId(memberId, gamerHandleSize) instead
 */
export declare function networkHandleFromMemberId(memberId: string, gamerHandleSize: number): any;
/**
 * No comment provided
 *
 * Hash: 0x388EB2B86C73B6B3 | Since: 323
 * @deprecated Use network.handleFromPlayer(player, gamerHandleSize) instead
 */
export declare function networkHandleFromPlayer(player: number | string | Player, gamerHandleSize: number): any;
/**
 * No comment provided
 *
 * Hash: 0xBC1D768F2F5D6C05 | Since: 323
 * @deprecated Use network.hashFromPlayerHandle(player) instead
 */
export declare function networkHashFromPlayerHandle(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x58575AC3CF2CA8EC | Since: 323
 * @deprecated Use network.hashFromGamerHandle() instead
 */
export declare function networkHashFromGamerHandle(): [number, any];
/**
 * No comment provided
 *
 * Hash: 0xD45CB817D7E177D2 | Since: 323
 * @deprecated Use network.handleFromFriend(friendIndex, gamerHandleSize) instead
 */
export declare function networkHandleFromFriend(friendIndex: number, gamerHandleSize: number): any;
/**
 * No comment provided
 *
 * Hash: 0x9F0C0A981D73FA56 | Since: 323
 * @deprecated Use network.gamertagFromHandleStart() instead
 */
export declare function networkGamertagFromHandleStart(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xB071E27958EF4CF0 | Since: 323
 * @deprecated Use network.gamertagFromHandlePending() instead
 */
export declare function networkGamertagFromHandlePending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFD00798DBA7523DD | Since: 323
 * @deprecated Use network.gamertagFromHandleSucceeded() instead
 */
export declare function networkGamertagFromHandleSucceeded(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x426141162EBE5CDB | Since: 323
 * @deprecated Use network.getGamertagFromHandle() instead
 */
export declare function networkGetGamertagFromHandle(): [string, any];
/**
 * Hardcoded to return -1.
 *
 * Hash: 0xD66C9E72B3CC4982 | Since: 323
 * @deprecated Use network.displaynamesFromHandlesStart() instead
 */
export declare function networkDisplaynamesFromHandlesStart(): [number, any];
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0x58CC181719256197 | Since: 323
 * @deprecated Use network.getDisplaynamesFromHandles() instead
 */
export declare function networkGetDisplaynamesFromHandles(): number;
/**
 * No comment provided
 *
 * Hash: 0x57DBA049E110F217 | Since: 323
 * @deprecated Use network.areHandlesTheSame() instead
 */
export declare function networkAreHandlesTheSame(): [boolean, any, any];
/**
 * No comment provided
 *
 * Hash: 0x6F79B93B0A8E4133 | Since: 323
 * @deprecated Use network.isHandleValid(gamerHandleSize) instead
 */
export declare function networkIsHandleValid(gamerHandleSize: number): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xCE5F689CF5A0A49D | Since: 323
 * @deprecated Use network.getPlayerFromGamerHandle() instead
 */
export declare function networkGetPlayerFromGamerHandle(): [number | string, any];
/**
 * No comment provided
 *
 * Hash: 0xC82630132081BB6F | Since: 323
 * @deprecated Use network.memberIdFromGamerHandle() instead
 */
export declare function networkMemberIdFromGamerHandle(): [string, any];
/**
 * No comment provided
 *
 * Hash: 0x0F10B05DDF8D16E9 | Since: 323
 * @deprecated Use network.isGamerInMySession() instead
 */
export declare function networkIsGamerInMySession(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x859ED1CEA343FCA8 | Since: 323
 * @deprecated Use network.showProfileUi() instead
 */
export declare function networkShowProfileUi(): any;
/**
 * Returns the name of a given player. Returns "**Invalid**" if rlGamerInfo of the given player cannot be retrieved or the player doesn't exist.
 *
 * Hash: 0x7718D2E2060837D2 | Since: 323
 * @deprecated Use network.playerGetName(player) instead
 */
export declare function networkPlayerGetName(player: number | string | Player): string;
/**
 * Returns a string of the player's Rockstar Id.
 * Takes a 24 char buffer. Returns the buffer or "**Invalid**" if rlGamerInfo of the given player cannot be retrieved or the player doesn't exist.
 *
 * Hash: 0x4927FC39CD0869A0 | Since: 323
 * @deprecated Use network.playerGetUserid(player) instead
 */
export declare function networkPlayerGetUserid(player: number | string | Player): [string, number];
/**
 * Checks if a specific value (BYTE) in CNetGamePlayer is nonzero.
 * Returns always false in Singleplayer.
 *
 * No longer used for dev checks since first mods were released on PS3 & 360.
 * R* now checks with the IS_DLC_PRESENT native for the dlc hash 2532323046,
 * if that is present it will unlock dev stuff.
 *
 * Hash: 0x544ABDDA3B409B6D | Since: 323
 * @deprecated Use network.playerIsRockstarDev(player) instead
 */
export declare function networkPlayerIsRockstarDev(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x565E430DB3B05BEC | Since: 323
 * @deprecated Use network.playerIndexIsCheater(player) instead
 */
export declare function networkPlayerIndexIsCheater(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x815F18AD865F057F | Since: 463
 * @deprecated Use network.entityGetObjectId(entity) instead
 */
export declare function networkEntityGetObjectId(entity: number | Entity): number;
/**
 * I've had this return the player's ped handle sometimes, but also other random entities.
 * Whatever p0 is, it's at least not synced to other players.
 * At least not all the time, some p0 values actually output the same entity, (different handle of course, but same entity).
 * But another p0 value may return an entity for player x, but not for player y (it'll just return -1 even if the entity exists on both clients).
 *
 * Returns an entity handle or -1, value changes based on p0's value.
 *
 * Hash: 0x37D5F739FD494675 | Since: 505
 * @deprecated Use network.getEntityFromObjectId() instead
 */
export declare function networkGetEntityFromObjectId(): number;
/**
 * No comment provided
 *
 * Hash: 0x7E58745504313A2E | Since: 323
 * @deprecated Use network.isInactiveProfile() instead
 */
export declare function networkIsInactiveProfile(): [boolean, any];
/**
 * Returns the name from given friend gamer handle.
 *
 * Hash: 0x338ECE3637937BC2 | Since: 3258
 * @deprecated Use network.loadGamerDisplayName() instead
 */
export declare function networkLoadGamerDisplayName(): [string, any];
/**
 * No comment provided
 *
 * Hash: 0xAFEBB0D5D8F687D2 | Since: 323
 * @deprecated Use network.getMaxFriends() instead
 */
export declare function networkGetMaxFriends(): number;
/**
 * No comment provided
 *
 * Hash: 0x203F1CFD823B27A4 | Since: 323
 * @deprecated Use network.getFriendCount() instead
 */
export declare function networkGetFriendCount(): number;
/**
 * No comment provided
 *
 * Hash: 0xE11EBBB2A783FE8B | Since: 323
 * @deprecated Use network.getFriendName(friendIndex) instead
 */
export declare function networkGetFriendName(friendIndex: number): string;
/**
 * No comment provided
 *
 * Hash: 0x4164F227D052E293 | Since: 323
 * @deprecated Use network.getFriendDisplayName(friendIndex) instead
 */
export declare function networkGetFriendDisplayName(friendIndex: number): string;
/**
 * No comment provided
 *
 * Hash: 0x425A44533437B64D | Since: 323
 * @deprecated Use network.isFriendOnline(name) instead
 */
export declare function networkIsFriendOnline(name: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x87EB7A3FFCB314DB | Since: 323
 * @deprecated Use network.isFriendHandleOnline() instead
 */
export declare function networkIsFriendHandleOnline(): [boolean, any];
/**
 * In scripts R* calls 'NETWORK_GET_FRIEND_NAME' in this param.
 *
 * Hash: 0x2EA9A3BEDF3F17B8 | Since: 323
 * @deprecated Use network.isFriendInSameTitle(friendName) instead
 */
export declare function networkIsFriendInSameTitle(friendName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x57005C18827F3A28 | Since: 323
 * @deprecated Use network.isFriendInMultiplayer(friendName) instead
 */
export declare function networkIsFriendInMultiplayer(friendName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1A24A179F9B31654 | Since: 323
 * @deprecated Use network.isFriend() instead
 */
export declare function networkIsFriend(): [boolean, any];
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0x0BE73DA6984A6E33 | Since: 323
 * @deprecated Use network.isPendingFriend() instead
 */
export declare function networkIsPendingFriend(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6EA101606F6E4D81 | Since: 323
 * @deprecated Use network.isAddingFriend() instead
 */
export declare function networkIsAddingFriend(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8E02D73914064223 | Since: 323
 * @deprecated Use network.addFriend(message) instead
 */
export declare function networkAddFriend(message: string): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xBAD8F2A42B844821 | Since: 323
 * @deprecated Use network.isFriendIndexOnline(friendIndex) instead
 */
export declare function networkIsFriendIndexOnline(friendIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1B857666604B1A74 | Since: 323
 * @deprecated Use network.setPlayerIsPassive(toggle) instead
 */
export declare function networkSetPlayerIsPassive(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x82377B65E943F72D | Since: 323
 * @deprecated Use network.getPlayerOwnsWaypoint(player) instead
 */
export declare function networkGetPlayerOwnsWaypoint(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC927EC229934AF60 | Since: 323
 * @deprecated Use network.canSetWaypoint() instead
 */
export declare function networkCanSetWaypoint(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4C2A9FDC22377075 | Since: 372
 * @deprecated Use network.ignoreRemoteWaypoints() instead
 */
export declare function networkIgnoreRemoteWaypoints(): void;
/**
 * communicationType: 0 = VOICE; 1 = TEXT_CHAT; 2 = TEXT_MESSAGE; 3 = EMAIL; 4 = USER_CONTENT; 5 = USER_TEXT
 *
 * Hash: 0xDBDF80673BBA3D65 | Since: 3095
 * @deprecated Use network.doesCommunicationGroupHavePermission(communicationType) instead
 */
export declare function networkDoesCommunicationGroupHavePermission(communicationType: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x20C12650830A64EC | Since: 3570
 * @deprecated Use network.doesCommunicationGroupHaveSettingsEnabled(communicationType) instead
 */
export declare function networkDoesCommunicationGroupHaveSettingsEnabled(communicationType: number): boolean;
/**
 * Returns communicationGroupFlag
 * communicationType: see 0xDBDF80673BBA3D65
 *
 * enum eCommunicationGroupFlag
 * {
 * COMMUNICATION_GROUP_LOCAL_PLAYER = 1 << 0,
 * COMMUNICATION_GROUP_FRIENDS = 1 << 1,
 * COMMUNICATION_GROUP_SMALL_CREW = 1 << 2,
 * COMMUNICATION_GROUP_LARGE_CREW = 1 << 3,
 * COMMUNICATION_GROUP_RECENT_PLAYER = 1 << 4,
 * COMMUNICATION_GROUP_SAME_SESSION = 1 << 5,
 * COMMUNICATION_GROUP_SAME_TEAM = 1 << 6,
 * COMMUNICATION_GROUP_INVALID = 1 << 7,
 * };
 *
 * Hash: 0x40DF02F371F40883 | Since: 3095
 * @deprecated Use network.getCommunicationGroupFlags(communicationType) instead
 */
export declare function networkGetCommunicationGroupFlags(communicationType: number): number;
/**
 * No comment provided
 *
 * Hash: 0x97F35B898D2D067F | Since: 3570
 * @deprecated Use network.getCommunicationGroupDefaultFlags(communicationType) instead
 */
export declare function networkGetCommunicationGroupDefaultFlags(communicationType: number): number;
/**
 * No comment provided
 *
 * Hash: 0xBF66ACD9AE81A99F | Since: 3570
 * @deprecated Use network.getCommunicationGroupValue(communicationType) instead
 */
export declare function networkGetCommunicationGroupValue(communicationType: number): number;
/**
 * communicationType: see 0xDBDF80673BBA3D65
 * communicationGroupFlag: see 0x40DF02F371F40883
 *
 * Hash: 0xE549F846DE7D32D5 | Since: 3095
 * @deprecated Use network.setCommunicationGroupFlags(communicationType, communicationGroupFlag) instead
 */
export declare function networkSetCommunicationGroupFlags(communicationType: number, communicationGroupFlag: number): void;
/**
 * _NETWORK_HAS_P*
 * checkType 3 is similar as using 0x9F633448E4C73207
 *
 * Hash: 0x62E29CDA11F9C230 | Since: 3258
 * @deprecated Use network.hasPlayerPassedCheckType(checkType) instead
 */
export declare function networkHasPlayerPassedCheckType(checkType: number): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xAD4326FCA30D62F8 | Since: 2802
 * @deprecated Use network.isPlayerOnBlocklist() instead
 */
export declare function networkIsPlayerOnBlocklist(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xB309EBEA797E001F | Since: 323
 * @deprecated Use network.setScriptAutomuted() instead
 */
export declare function networkSetScriptAutomuted(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x26F07DD83A5F7F98 | Since: 323
 * @deprecated Use network.hasAutomuteOverride() instead
 */
export declare function networkHasAutomuteOverride(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE870F9F1F7B4F1FA | Since: 323
 * @deprecated Use network.hasHeadset() instead
 */
export declare function networkHasHeadset(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7D395EA61622E116 | Since: 323
 * @deprecated Use network.setLookAtTalkers() instead
 */
export declare function networkSetLookAtTalkers(): void;
/**
 * No comment provided
 *
 * Hash: 0xC0D2AF00BCC234CA | Since: 323
 * @deprecated Use network.isPushToTalkActive() instead
 */
export declare function networkIsPushToTalkActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF2FD55CB574BCC55 | Since: 323
 * @deprecated Use network.gamerHasHeadset() instead
 */
export declare function networkGamerHasHeadset(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x71C33B22606CD88A | Since: 323
 * @deprecated Use network.isGamerTalking() instead
 */
export declare function networkIsGamerTalking(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x559EBF901A8C68E0 | Since: 2699
 * @deprecated Use network.permissionsHasGamerRecord() instead
 */
export declare function networkPermissionsHasGamerRecord(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x8F5D1AD832AEB06C | Since: 323
 * @deprecated Use network.canCommunicateWithGamer() instead
 */
export declare function networkCanCommunicateWithGamer(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xA150A4F065806B1F | Since: 944
 * @deprecated Use network.canTextChatWithGamer() instead
 */
export declare function networkCanTextChatWithGamer(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xCE60DE011B6C7978 | Since: 323
 * @deprecated Use network.isGamerMutedByMe() instead
 */
export declare function networkIsGamerMutedByMe(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xDF02A2C93F1F26DA | Since: 323
 * @deprecated Use network.amIMutedByGamer() instead
 */
export declare function networkAmIMutedByGamer(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xE944C4F5AF1B5883 | Since: 323
 * @deprecated Use network.isGamerBlockedByMe() instead
 */
export declare function networkIsGamerBlockedByMe(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x15337C7C268A27B2 | Since: 323
 * @deprecated Use network.amIBlockedByGamer() instead
 */
export declare function networkAmIBlockedByGamer(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xB57A49545BA53CE7 | Since: 323
 * @deprecated Use network.canViewGamerUserContent() instead
 */
export declare function networkCanViewGamerUserContent(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xCCA4318E1AB03F1F | Since: 323
 * @deprecated Use network.hasViewGamerUserContentResult() instead
 */
export declare function networkHasViewGamerUserContentResult(): [boolean, any];
/**
 * NETWORK_CAN_*
 *
 * Hash: 0x9F633448E4C73207 | Since: 3258
 * @deprecated Use network.canTextFromGamerBeViewed() instead
 */
export declare function networkCanTextFromGamerBeViewed(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x07DD29D5E22763F1 | Since: 323
 * @deprecated Use network.canPlayMultiplayerWithGamer() instead
 */
export declare function networkCanPlayMultiplayerWithGamer(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x135F9B7B7ADD2185 | Since: 323
 * @deprecated Use network.canGamerPlayMultiplayerWithMe() instead
 */
export declare function networkCanGamerPlayMultiplayerWithMe(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x021ABCBD98EC4320 | Since: 2612
 * @deprecated Use network.canSendLocalInvite() instead
 */
export declare function networkCanSendLocalInvite(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x421E34C55F125964 | Since: 2612
 * @deprecated Use network.canReceiveLocalInvite() instead
 */
export declare function networkCanReceiveLocalInvite(): [boolean, any];
/**
 * returns true if someone is screaming or talking in a microphone
 *
 * Hash: 0x031E11F3D447647E | Since: 323
 * @deprecated Use network.isPlayerTalking(player) instead
 */
export declare function networkIsPlayerTalking(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3FB99A8B08D18FD6 | Since: 323
 * @deprecated Use network.playerHasHeadset(player) instead
 */
export declare function networkPlayerHasHeadset(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8C71288AE68EDE39 | Since: 323
 * @deprecated Use network.isPlayerMutedByMe(player) instead
 */
export declare function networkIsPlayerMutedByMe(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9D6981DFC91A8604 | Since: 323
 * @deprecated Use network.amIMutedByPlayer(player) instead
 */
export declare function networkAmIMutedByPlayer(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x57AF1F8E27483721 | Since: 323
 * @deprecated Use network.isPlayerBlockedByMe(player) instead
 */
export declare function networkIsPlayerBlockedByMe(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x87F395D957D4353D | Since: 323
 * @deprecated Use network.amIBlockedByPlayer(player) instead
 */
export declare function networkAmIBlockedByPlayer(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x21A1684A25C2867F | Since: 323
 * @deprecated Use network.getPlayerLoudness(player) instead
 */
export declare function networkGetPlayerLoudness(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xCBF12D65F95AD686 | Since: 323
 * @deprecated Use network.setTalkerProximity(value) instead
 */
export declare function networkSetTalkerProximity(value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x84F0F13120B4E098 | Since: 323
 * @deprecated Use network.getTalkerProximity() instead
 */
export declare function networkGetTalkerProximity(): number;
/**
 * No comment provided
 *
 * Hash: 0xBABEC9E69A91C57B | Since: 323
 * @deprecated Use network.setVoiceActive(toggle) instead
 */
export declare function networkSetVoiceActive(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCFEB46DCD7D8D5EB | Since: 323
 * @deprecated Use network.remainInGameChat() instead
 */
export declare function networkRemainInGameChat(): void;
/**
 * No comment provided
 *
 * Hash: 0xAF66059A131AA269 | Since: 323
 * @deprecated Use network.overrideTransitionChat() instead
 */
export declare function networkOverrideTransitionChat(): void;
/**
 * No comment provided
 *
 * Hash: 0xD5B4883AC32F24C3 | Since: 323
 * @deprecated Use network.setTeamOnlyChat(toggle) instead
 */
export declare function networkSetTeamOnlyChat(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x265559DA40B3F327 | Since: 573
 * @deprecated Use network.setScriptControllingTeams() instead
 */
export declare function networkSetScriptControllingTeams(): void;
/**
 * No comment provided
 *
 * Hash: 0x4348BFDA56023A2F | Since: 573
 * @deprecated Use network.setSameTeamAsLocalPlayer() instead
 */
export declare function networkSetSameTeamAsLocalPlayer(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6F697A66CE78674E | Since: 323
 * @deprecated Use network.overrideTeamRestrictions(team, toggle) instead
 */
export declare function networkOverrideTeamRestrictions(team: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x70DA3BF8DACD3210 | Since: 323
 * @deprecated Use network.setOverrideSpectatorMode(toggle) instead
 */
export declare function networkSetOverrideSpectatorMode(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3C5C1E2C2FF814B1 | Since: 323
 * @deprecated Use network.setOverrideTutorialSessionChat(toggle) instead
 */
export declare function networkSetOverrideTutorialSessionChat(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9D7AFCBF21C51712 | Since: 323
 * @deprecated Use network.setProximityAffectsTeam(toggle) instead
 */
export declare function networkSetProximityAffectsTeam(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF46A1E03E8755980 | Since: 323
 * @deprecated Use network.setNoSpectatorChat(toggle) instead
 */
export declare function networkSetNoSpectatorChat(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6A5D89D7769A40D8 | Since: 323
 * @deprecated Use network.setIgnoreSpectatorChatLimitsSameTeam(toggle) instead
 */
export declare function networkSetIgnoreSpectatorChatLimitsSameTeam(toggle: boolean): void;
/**
 * Could possibly bypass being muted or automatically muted
 *
 * Hash: 0x3039AE5AD2C9C0C4 | Since: 323
 * @deprecated Use network.overrideChatRestrictions(player, toggle) instead
 */
export declare function networkOverrideChatRestrictions(player: number | string | Player, toggle: boolean): void;
/**
 * This is used alongside the native,
 * 'NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS'. Read its description for more info.
 *
 * Hash: 0x97DD4C5944CC2E6A | Since: 323
 * @deprecated Use network.overrideSendRestrictions(player, toggle) instead
 */
export declare function networkOverrideSendRestrictions(player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x57B192B4D4AD23D5 | Since: 323
 * @deprecated Use network.overrideSendRestrictionsAll(toggle) instead
 */
export declare function networkOverrideSendRestrictionsAll(toggle: boolean): void;
/**
 * R* uses this to hear all player when spectating.
 * It allows you to hear other online players when their chat is on none, crew and or friends
 *
 * Hash: 0xDDF73E2B1FEC5AB4 | Since: 323
 * @deprecated Use network.overrideReceiveRestrictions(player, toggle) instead
 */
export declare function networkOverrideReceiveRestrictions(player: number | string | Player, toggle: boolean): void;
/**
 * p0 is always false in scripts.
 *
 * Hash: 0x0FF2862B61A58AF9 | Since: 323
 * @deprecated Use network.overrideReceiveRestrictionsAll(toggle) instead
 */
export declare function networkOverrideReceiveRestrictionsAll(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEF6212C2EFEF1A23 | Since: 323
 * @deprecated Use network.setVoiceChannel(channel) instead
 */
export declare function networkSetVoiceChannel(channel: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE036A705F989E049 | Since: 323
 * @deprecated Use network.clearVoiceChannel() instead
 */
export declare function networkClearVoiceChannel(): void;
/**
 * No comment provided
 *
 * Hash: 0xDBD2056652689917 | Since: 323
 * @deprecated Use network.applyVoiceProximityOverride(pos) instead
 */
export declare function networkApplyVoiceProximityOverride(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xF03755696450470C | Since: 323
 * @deprecated Use network.clearVoiceProximityOverride() instead
 */
export declare function networkClearVoiceProximityOverride(): void;
/**
 * No comment provided
 *
 * Hash: 0x5E3AA4CA2B6FB0EE | Since: 323
 * @deprecated Use network.enableVoiceBandwidthRestriction(player) instead
 */
export declare function networkEnableVoiceBandwidthRestriction(player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xCA575C391FEA25CC | Since: 323
 * @deprecated Use network.disableVoiceBandwidthRestriction(player) instead
 */
export declare function networkDisableVoiceBandwidthRestriction(player: number | string | Player): void;
/**
 * NETWORK_GET_M[A-U]
 *
 * Hash: 0xADB57E5B663CCA8B | Since: 323
 * @deprecated Use network.getMuteCountForPlayer(p0) instead
 */
export declare function networkGetMuteCountForPlayer(p0: number | string | Player): [number, number];
/**
 * No comment provided
 *
 * Hash: 0x8EF52ACAECC51D9C | Since: 1734
 * @deprecated Use network.setSpectatorToNonSpectatorTextChat(toggle) instead
 */
export declare function networkSetSpectatorToNonSpectatorTextChat(toggle: boolean): void;
/**
 * Same as _IS_TEXT_CHAT_ACTIVE, except it does not check if the text chat HUD component is initialized, and therefore may crash.
 *
 * Hash: 0x5FCF4D7069B09026 | Since: 323
 * @deprecated Use network.textChatIsTyping() instead
 */
export declare function networkTextChatIsTyping(): boolean;
/**
 * Starts a new singleplayer game (at the prologue).
 *
 * Hash: 0x593850C16A36B692 | Since: 323
 * @deprecated Use network.shutdownAndLaunchSinglePlayerGame() instead
 */
export declare function shutdownAndLaunchSinglePlayerGame(): void;
/**
 * In singleplayer this will re-load your game.
 *
 * In FiveM / GTA:Online this disconnects you from the session, and starts loading single player, however you still remain connected to the server (only if you're the host, if you're not then you also (most likely) get disconnected from the server) and other players will not be able to join until you exit the game.
 *
 * You might need to DoScreenFadeIn and ShutdownLoadingScreen otherwise you probably won't end up loading into SP at all.
 *
 * Somewhat related note: opening the pause menu after loading into this 'singleplayer' mode crashes the game.
 *
 * Hash: 0x9ECA15ADFE141431 | Since: 505
 * @deprecated Use network.shutdownAndLoadMostRecentSave() instead
 */
export declare function shutdownAndLoadMostRecentSave(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF808475FA571D823 | Since: 323
 * @deprecated Use network.setFriendlyFireOption(toggle) instead
 */
export declare function networkSetFriendlyFireOption(toggle: boolean): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0x1DCCACDCFC569362 | Since: 323
 * @deprecated Use network.setRichPresence() instead
 */
export declare function networkSetRichPresence(): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0x3E200C2BCF4164EB | Since: 323
 * @deprecated Use network.setRichPresenceString(textLabel) instead
 */
export declare function networkSetRichPresenceString(textLabel: string): void;
/**
 * No comment provided
 *
 * Hash: 0x5ED0356A0CE3A34F | Since: 323
 * @deprecated Use network.getTimeoutTime() instead
 */
export declare function networkGetTimeoutTime(): number;
/**
 * p4 and p5 are always 0 in scripts
 *
 * Hash: 0x9769F811D1785B03 | Since: 323
 * @deprecated Use network.leavePedBehindBeforeWarp(player, pos) instead
 */
export declare function networkLeavePedBehindBeforeWarp(player: number | string | Player, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xBF22E0F32968E967 | Since: 323
 * @deprecated Use network.leavePedBehindBeforeCutscene(player) instead
 */
export declare function networkLeavePedBehindBeforeCutscene(player: number | string | Player): void;
/**
 * entity must be a valid entity; ped can be NULL
 *
 * Hash: 0x715135F4B82AC90D | Since: 323
 * @deprecated Use network.removeAllStickyBombsFromEntity(entity, ped) instead
 */
export declare function removeAllStickyBombsFromEntity(entity: number | Entity, ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x17C9E241111A674D | Since: 2060
 * @deprecated Use network.keepEntityCollisionDisabledAfterAnimScene() instead
 */
export declare function networkKeepEntityCollisionDisabledAfterAnimScene(): void;
/**
 * No comment provided
 *
 * Hash: 0x2E4C123D1C8A710E | Since: 505
 * @deprecated Use network.isAnyPlayerNear() instead
 */
export declare function networkIsAnyPlayerNear(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x579CCED0265D4896 | Since: 323
 * @deprecated Use network.clanServiceIsValid() instead
 */
export declare function networkClanServiceIsValid(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB124B57F571D8F18 | Since: 323
 * @deprecated Use network.clanPlayerIsActive() instead
 */
export declare function networkClanPlayerIsActive(): [boolean, any];
/**
 * bufferSize is 35 in the scripts.
 *
 * `bufferSize is the elementCount of p0(desc), sizeof(p0) == 280 == p1*8 == 35 * 8, p2(netHandle) is obtained from NETWORK::NETWORK_HANDLE_FROM_PLAYER.  And no, I can't explain why 35 * sizeof(int) == 280 and not 140, but I'll get back to you on that.`
 *
 * the answer is: because p0 an int64_t* / int64_t[35].  and FYI p2 is an int64_t[13]
 *
 * https://pastebin.com/cSZniHak
 *
 * Hash: 0xEEE6EACBE8874FBA | Since: 323
 * @deprecated Use network.clanPlayerGetDesc(bufferSize) instead
 */
export declare function networkClanPlayerGetDesc(bufferSize: number): [boolean, any, any];
/**
 * bufferSize is 35 in the scripts.
 *
 * Hash: 0x7543BB439F63792B | Since: 323
 * @deprecated Use network.clanIsRockstarClan(bufferSize) instead
 */
export declare function networkClanIsRockstarClan(bufferSize: number): [boolean, any];
/**
 * bufferSize is 35 in the scripts.
 *
 * Hash: 0xF45352426FF3A4F0 | Since: 323
 * @deprecated Use network.clanGetUiFormattedTag(bufferSize) instead
 */
export declare function networkClanGetUiFormattedTag(bufferSize: number): [any, string];
/**
 * No comment provided
 *
 * Hash: 0x1F471B79ACC90BEF | Since: 323
 * @deprecated Use network.clanGetLocalMembershipsCount() instead
 */
export declare function networkClanGetLocalMembershipsCount(): number;
/**
 * No comment provided
 *
 * Hash: 0x48DE78AF2C8885B8 | Since: 323
 * @deprecated Use network.clanGetMembershipDesc() instead
 */
export declare function networkClanGetMembershipDesc(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xA989044E70010ABE | Since: 323
 * @deprecated Use network.clanDownloadMembership() instead
 */
export declare function networkClanDownloadMembership(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x5B9E023DC6EBEDC0 | Since: 323
 * @deprecated Use network.clanDownloadMembershipPending() instead
 */
export declare function networkClanDownloadMembershipPending(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xB3F64A6A91432477 | Since: 323
 * @deprecated Use network.clanAnyDownloadMembershipPending() instead
 */
export declare function networkClanAnyDownloadMembershipPending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBB6E6FEE99D866B2 | Since: 323
 * @deprecated Use network.clanRemoteMembershipsAreInCache() instead
 */
export declare function networkClanRemoteMembershipsAreInCache(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xAAB11F6C4ADBC2C1 | Since: 323
 * @deprecated Use network.clanGetMembershipCount() instead
 */
export declare function networkClanGetMembershipCount(): [number, number];
/**
 * No comment provided
 *
 * Hash: 0x48A59CF88D43DF0E | Since: 323
 * @deprecated Use network.clanGetMembershipValid() instead
 */
export declare function networkClanGetMembershipValid(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xC8BC2011F67B3411 | Since: 323
 * @deprecated Use network.clanGetMembership() instead
 */
export declare function networkClanGetMembership(): [boolean, number, any];
/**
 * No comment provided
 *
 * Hash: 0x9FAAA4F4FC71F87F | Since: 323
 * @deprecated Use network.clanJoin(clanDesc) instead
 */
export declare function networkClanJoin(clanDesc: number): boolean;
/**
 * Only documented...
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x729E3401F0430686 | Since: 323
 * @deprecated Use network.clanCrewinfoGetStringValue(animDict, animName) instead
 */
export declare function networkClanCrewinfoGetStringValue(animDict: string, animName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2B51EDBEFC301339 | Since: 323
 * @deprecated Use network.clanCrewinfoGetCrewranktitle() instead
 */
export declare function networkClanCrewinfoGetCrewranktitle(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC32EA7A2F6CA7557 | Since: 323
 * @deprecated Use network.clanHasCrewinfoMetadataBeenReceived() instead
 */
export declare function networkClanHasCrewinfoMetadataBeenReceived(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5835D9CD92E83184 | Since: 323
 * @deprecated Use network.clanGetEmblemTxdName() instead
 */
export declare function networkClanGetEmblemTxdName(): [boolean, any, string];
/**
 * No comment provided
 *
 * Hash: 0x13518FF1C6B28938 | Since: 323
 * @deprecated Use network.clanRequestEmblem() instead
 */
export declare function networkClanRequestEmblem(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA134777FF7F33331 | Since: 323
 * @deprecated Use network.clanIsEmblemReady() instead
 */
export declare function networkClanIsEmblemReady(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x113E6E3E50E286B0 | Since: 323
 * @deprecated Use network.clanReleaseEmblem() instead
 */
export declare function networkClanReleaseEmblem(): void;
/**
 * No comment provided
 *
 * Hash: 0x9AA46BADAD0E27ED | Since: 323
 * @deprecated Use network.getPrimaryClanDataClear() instead
 */
export declare function networkGetPrimaryClanDataClear(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x042E4B70B93E6054 | Since: 323
 * @deprecated Use network.getPrimaryClanDataCancel() instead
 */
export declare function networkGetPrimaryClanDataCancel(): void;
/**
 * No comment provided
 *
 * Hash: 0xCE86D8191B762107 | Since: 323
 * @deprecated Use network.getPrimaryClanDataStart() instead
 */
export declare function networkGetPrimaryClanDataStart(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xB5074DB804E28CE7 | Since: 323
 * @deprecated Use network.getPrimaryClanDataPending() instead
 */
export declare function networkGetPrimaryClanDataPending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5B4F04F19376A0BA | Since: 323
 * @deprecated Use network.getPrimaryClanDataSuccess() instead
 */
export declare function networkGetPrimaryClanDataSuccess(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC080FF658B2E41DA | Since: 323
 * @deprecated Use network.getPrimaryClanDataNew() instead
 */
export declare function networkGetPrimaryClanDataNew(): [boolean, any, any];
/**
 * Whether or not another player is allowed to take control of the entity
 *
 * Hash: 0x299EEB23175895FC | Since: 323
 * @deprecated Use network.setIdCanMigrate(netId, toggle) instead
 */
export declare function setNetworkIdCanMigrate(netId: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE05E81A888FA63C8 | Since: 323
 * @deprecated Use network.setIdExistsOnAllMachines(netId, toggle) instead
 */
export declare function setNetworkIdExistsOnAllMachines(netId: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA8A024587329F36A | Since: 323
 * @deprecated Use network.setIdAlwaysExistsForPlayer(netId, player, toggle) instead
 */
export declare function setNetworkIdAlwaysExistsForPlayer(netId: number, player: number | string | Player, toggle: boolean): void;
/**
 * "No Reassign" in CPhysicalScriptGameStateDataNode
 *
 * Hash: 0x9D724B400A7E8FFC | Since: 2189
 * @deprecated Use network.setIdCanBeReassigned(netId, toggle) instead
 */
export declare function setNetworkIdCanBeReassigned(netId: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD830567D88A1E873 | Since: 323
 * @deprecated Use network.setEntityCanBlend(entity, toggle) instead
 */
export declare function networkSetEntityCanBlend(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0379DAF89BA09AA5 | Since: 944
 * @deprecated Use network.setObjectCanBlendWhenFixed(_object, toggle) instead
 */
export declare function networkSetObjectCanBlendWhenFixed(_object: number | Object, toggle: boolean): void;
/**
 * if set to true other network players can't see it
 * if set to false other network player can see it
 * =========================================
 * ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
 *
 * pc or last gen?
 *
 * ^^ last-gen
 *
 * Hash: 0xF1CA12B18AEF5298 | Since: 323
 * @deprecated Use network.setEntityOnlyExistsForParticipants(entity, toggle) instead
 */
export declare function networkSetEntityOnlyExistsForParticipants(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA6928482543022B4 | Since: 323
 * @deprecated Use network.setIdVisibleInCutscene(netId) instead
 */
export declare function setNetworkIdVisibleInCutscene(netId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x32EBD154CB6B8B99 | Since: 505
 * @deprecated Use network.setIdVisibleInCutsceneHack(netId) instead
 */
export declare function setNetworkIdVisibleInCutsceneHack(netId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x76B3F29D3F967692 | Since: 2189
 * @deprecated Use network.setIdVisibleInCutsceneRemainHack() instead
 */
export declare function setNetworkIdVisibleInCutsceneRemainHack(): void;
/**
 * No comment provided
 *
 * Hash: 0xAAA553E7DD28A457 | Since: 323
 * @deprecated Use network.setCutsceneEntities(toggle) instead
 */
export declare function setNetworkCutsceneEntities(toggle: boolean): void;
/**
 * Getter for SET_NETWORK_CUTSCENE_ENTITIES.
 *
 * Hash: 0x66D6A5E9C511214A | Since: 2699
 * @deprecated Use network.areCutsceneEntitiesed() instead
 */
export declare function areCutsceneEntitiesNetworked(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3FA36981311FA4FF | Since: 323
 * @deprecated Use network.setIdPassControlInTutorial(netId, state) instead
 */
export declare function setNetworkIdPassControlInTutorial(netId: number, state: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA1607996431332DF | Since: 323
 * @deprecated Use network.isIdOwnedByParticipant(netId) instead
 */
export declare function isNetworkIdOwnedByParticipant(netId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x96320E6549DAE7B4 | Since: 2802
 * @deprecated Use network.setRemotePlayerVisibleInCutscene(player, locallyVisible) instead
 */
export declare function setRemotePlayerVisibleInCutscene(player: number | string | Player, locallyVisible: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD1065D68947E7B6E | Since: 323
 * @deprecated Use network.setLocalPlayerVisibleInCutscene() instead
 */
export declare function setLocalPlayerVisibleInCutscene(): void;
/**
 * No comment provided
 *
 * Hash: 0xE5F773C1A1D9D168 | Since: 323
 * @deprecated Use network.setLocalPlayerInvisibleLocally(bIncludePlayersVehicle) instead
 */
export declare function setLocalPlayerInvisibleLocally(bIncludePlayersVehicle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7619364C82D3BF14 | Since: 323
 * @deprecated Use network.setLocalPlayerVisibleLocally(bIncludePlayersVehicle) instead
 */
export declare function setLocalPlayerVisibleLocally(bIncludePlayersVehicle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x12B37D54667DB0B8 | Since: 323
 * @deprecated Use network.setPlayerInvisibleLocally(player, bIncludePlayersVehicle) instead
 */
export declare function setPlayerInvisibleLocally(player: number | string | Player, bIncludePlayersVehicle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xFAA10F1FAFB11AF2 | Since: 323
 * @deprecated Use network.setPlayerVisibleLocally(player, bIncludePlayersVehicle) instead
 */
export declare function setPlayerVisibleLocally(player: number | string | Player, bIncludePlayersVehicle: boolean): void;
/**
 * Hardcoded to not work in SP.
 *
 * Hash: 0x416DBD4CD6ED8DD2 | Since: 323
 * @deprecated Use network.fadeOutLocalPlayer() instead
 */
export declare function fadeOutLocalPlayer(): void;
/**
 * normal - transition like when your coming out of LSC
 * slow - transition like when you walk into a mission
 *
 *
 * Hash: 0xDE564951F95E09ED | Since: 323
 * @deprecated Use network.fadeOutEntity(entity, normal, slow) instead
 */
export declare function networkFadeOutEntity(entity: number | Entity, normal: boolean, slow: boolean): void;
/**
 * state - 0 does 5 fades
 * state - 1 does 6 fades
 *
 * p3: setting to 1 made vehicle fade in slower, probably "slow" as per NETWORK_FADE_OUT_ENTITY
 *
 * Hash: 0x1F4ED342ACEFE62D | Since: 323
 * @deprecated Use network.fadeInEntity(entity, state) instead
 */
export declare function networkFadeInEntity(entity: number | Entity, state: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x631DC5DFF4B110E3 | Since: 323
 * @deprecated Use network.isPlayerFading(player) instead
 */
export declare function networkIsPlayerFading(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x422F32CC7E56ABAD | Since: 323
 * @deprecated Use network.isEntityFading(entity) instead
 */
export declare function networkIsEntityFading(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE73092F4157CD126 | Since: 323
 * @deprecated Use network.isPlayerInCutscene(player) instead
 */
export declare function isPlayerInCutscene(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE0031D3C8F36AB82 | Since: 323
 * @deprecated Use network.setEntityVisibleInCutscene() instead
 */
export declare function setEntityVisibleInCutscene(): void;
/**
 * Makes the provided entity visible for yourself for the current frame.
 *
 * Hash: 0xE135A9FF3F5D05D8 | Since: 323
 * @deprecated Use network.setEntityLocallyInvisible(entity) instead
 */
export declare function setEntityLocallyInvisible(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x241E289B5C059EDC | Since: 323
 * @deprecated Use network.setEntityLocallyVisible(entity) instead
 */
export declare function setEntityLocallyVisible(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x6E192E33AD436366 | Since: 323
 * @deprecated Use network.isDamageTrackerActiveOnId(netID) instead
 */
export declare function isDamageTrackerActiveOnNetworkId(netID: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD45B1FFCCD52FF19 | Since: 323
 * @deprecated Use network.activateDamageTrackerOnId(netID, toggle) instead
 */
export declare function activateDamageTrackerOnNetworkId(netID: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB2092A1EAA7FD45F | Since: 757
 * @deprecated Use network.isDamageTrackerActiveOnPlayer(player) instead
 */
export declare function isDamageTrackerActiveOnPlayer(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBEC0816FF5ACBCDA | Since: 757
 * @deprecated Use network.activateDamageTrackerOnPlayer(player, toggle) instead
 */
export declare function activateDamageTrackerOnPlayer(player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD82CF8E64C8729D8 | Since: 323
 * @deprecated Use network.isSphereVisibleToAnotherMachine() instead
 */
export declare function isSphereVisibleToAnotherMachine(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDC3A310219E5DA62 | Since: 323
 * @deprecated Use network.isSphereVisibleToPlayer() instead
 */
export declare function isSphereVisibleToPlayer(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4E5C93BD0C32FBF8 | Since: 323
 * @deprecated Use network.reserveMissionObjects(amount) instead
 */
export declare function reserveNetworkMissionObjects(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB60FEBA45333D36F | Since: 323
 * @deprecated Use network.reserveMissionPeds(amount) instead
 */
export declare function reserveNetworkMissionPeds(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x76B02E21ED27A469 | Since: 323
 * @deprecated Use network.reserveMissionVehicles(amount) instead
 */
export declare function reserveNetworkMissionVehicles(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x797F9C5E661D920E | Since: 1290
 * @deprecated Use network.reserveLocalMissionObjects(amount) instead
 */
export declare function reserveLocalNetworkMissionObjects(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2C8DF5D129595281 | Since: 1493
 * @deprecated Use network.reserveLocalMissionPeds(amount) instead
 */
export declare function reserveLocalNetworkMissionPeds(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x42613035157E4208 | Since: 1103
 * @deprecated Use network.reserveLocalMissionVehicles(amount) instead
 */
export declare function reserveLocalNetworkMissionVehicles(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x800DD4721A8B008B | Since: 323
 * @deprecated Use network.canRegisterMissionObjects(amount) instead
 */
export declare function canRegisterMissionObjects(amount: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBCBF4FEF9FA5D781 | Since: 323
 * @deprecated Use network.canRegisterMissionPeds(amount) instead
 */
export declare function canRegisterMissionPeds(amount: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7277F1F2E085EE74 | Since: 323
 * @deprecated Use network.canRegisterMissionVehicles(amount) instead
 */
export declare function canRegisterMissionVehicles(amount: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0A49D1CB6E34AF72 | Since: 757
 * @deprecated Use network.canRegisterMissionPickups(amount) instead
 */
export declare function canRegisterMissionPickups(amount: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE16AA70CE9BEEDC3 | Since: 877
 * @deprecated Use network.canRegisterMissionDoors() instead
 */
export declare function canRegisterMissionDoors(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x69778E7564BADE6D | Since: 323
 * @deprecated Use network.canRegisterMissionEntities(ped_amt, vehicle_amt, object_amt, pickup_amt) instead
 */
export declare function canRegisterMissionEntities(ped_amt: number, vehicle_amt: number, object_amt: number, pickup_amt: number): boolean;
/**
 * p0 appears to be for MP
 *
 * Hash: 0xAA81B5F10BC43AC2 | Since: 323
 * @deprecated Use network.getNumReservedMissionObjects() instead
 */
export declare function getNumReservedMissionObjects(): number;
/**
 * p0 appears to be for MP
 *
 * Hash: 0x1F13D5AE5CB17E17 | Since: 323
 * @deprecated Use network.getNumReservedMissionPeds() instead
 */
export declare function getNumReservedMissionPeds(): number;
/**
 * p0 appears to be for MP
 *
 * Hash: 0xCF3A965906452031 | Since: 323
 * @deprecated Use network.getNumReservedMissionVehicles() instead
 */
export declare function getNumReservedMissionVehicles(): number;
/**
 * No comment provided
 *
 * Hash: 0x12B6281B6C6706C0 | Since: 323
 * @deprecated Use network.getNumCreatedMissionObjects() instead
 */
export declare function getNumCreatedMissionObjects(): number;
/**
 * No comment provided
 *
 * Hash: 0xCB215C4B56A7FAE7 | Since: 323
 * @deprecated Use network.getNumCreatedMissionPeds() instead
 */
export declare function getNumCreatedMissionPeds(): number;
/**
 * No comment provided
 *
 * Hash: 0x0CD9AB83489430EA | Since: 323
 * @deprecated Use network.getNumCreatedMissionVehicles() instead
 */
export declare function getNumCreatedMissionVehicles(): number;
/**
 * No comment provided
 *
 * Hash: 0xE42D626EEC94E5D9 | Since: 1290
 * @deprecated Use network.getReservedMissionEntitiesInArea(pos) instead
 */
export declare function getReservedMissionEntitiesInArea(pos: Vector3): [any, any, any];
/**
 * No comment provided
 *
 * Hash: 0xC7BE335216B5EC7C | Since: 323
 * @deprecated Use network.getMaxNumObjects() instead
 */
export declare function getMaxNumNetworkObjects(): number;
/**
 * No comment provided
 *
 * Hash: 0x0C1F7D49C39D2289 | Since: 323
 * @deprecated Use network.getMaxNumPeds() instead
 */
export declare function getMaxNumNetworkPeds(): number;
/**
 * No comment provided
 *
 * Hash: 0x0AFCE529F69B21FF | Since: 323
 * @deprecated Use network.getMaxNumVehicles() instead
 */
export declare function getMaxNumNetworkVehicles(): number;
/**
 * No comment provided
 *
 * Hash: 0xA72835064DD63E4C | Since: 323
 * @deprecated Use network.getMaxNumPickups() instead
 */
export declare function getMaxNumNetworkPickups(): number;
/**
 * No comment provided
 *
 * Hash: 0xBA7F0B77D80A4EB7 | Since: 372
 * @deprecated Use network.setObjectScopeDistance(_object, range) instead
 */
export declare function networkSetObjectScopeDistance(_object: number | Object, range: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0F1A4B45B7693B95 | Since: 2189
 * @deprecated Use network.allowCloningWhileInTutorial() instead
 */
export declare function networkAllowCloningWhileInTutorial(): void;
/**
 * A value between 1.0 and 5.0
 *
 * Hash: 0xC6FCEE21C6FCEE21 | Since: 2545
 * @deprecated Use network.setTaskCutsceneInscopeMultipler(multiplier) instead
 */
export declare function networkSetTaskCutsceneInscopeMultipler(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCFE359CCCFE359CC | Since: 3258
 * @deprecated Use network.hideEntityInTutorialSession(netHandle, hide) instead
 */
export declare function networkHideEntityInTutorialSession(netHandle: number, hide: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7A5487FE9FAA6B48 | Since: 323
 * @deprecated Use network.getTime() instead
 */
export declare function getNetworkTime(): number;
/**
 * Returns the same value as GET_NETWORK_TIME in freemode, but as opposed to `GET_NETWORK_TIME` it always gets the most recent time, instead of once per tick.
 * Could be used for benchmarking since it can return times in ticks.
 *
 * Hash: 0x89023FBBF9200E9F | Since: 323
 * @deprecated Use network.getTimeAccurate() instead
 */
export declare function getNetworkTimeAccurate(): number;
/**
 * No comment provided
 *
 * Hash: 0x46718ACEEDEAFC84 | Since: 323
 * @deprecated Use network.hasTimeStarted() instead
 */
export declare function hasNetworkTimeStarted(): boolean;
/**
 * Adds the first argument to the second.
 *
 * Hash: 0x017008CCDAD48503 | Since: 323
 * @deprecated Use network.getTimeOffset(timeA, timeB) instead
 */
export declare function getTimeOffset(timeA: number, timeB: number): number;
/**
 * Subtracts the second argument from the first, then returns whether the result is negative.
 *
 * Hash: 0xCB2CF5148012C8D0 | Since: 323
 * @deprecated Use network.isTimeLessThan(timeA, timeB) instead
 */
export declare function isTimeLessThan(timeA: number, timeB: number): boolean;
/**
 * Subtracts the first argument from the second, then returns whether the result is negative.
 *
 * Hash: 0xDE350F8651E4346C | Since: 323
 * @deprecated Use network.isTimeMoreThan(timeA, timeB) instead
 */
export declare function isTimeMoreThan(timeA: number, timeB: number): boolean;
/**
 * Returns true if the two times are equal; otherwise returns false.
 *
 * Hash: 0xF5BC95857BD6D512 | Since: 323
 * @deprecated Use network.isTimeEqualTo(timeA, timeB) instead
 */
export declare function isTimeEqualTo(timeA: number, timeB: number): boolean;
/**
 * Subtracts the second argument from the first.
 *
 * Hash: 0xA2C6FC031D46FFF0 | Since: 323
 * @deprecated Use network.getTimeDifference(timeA, timeB) instead
 */
export declare function getTimeDifference(timeA: number, timeB: number): number;
/**
 * No comment provided
 *
 * Hash: 0x9E23B1777A927DAD | Since: 323
 * @deprecated Use network.getTimeAsString(time) instead
 */
export declare function getTimeAsString(time: number): string;
/**
 * Same as GET_CLOUD_TIME_AS_INT but returns the value as a hex string (%I64X).
 *
 * Hash: 0xF12E6CD06C73D69E | Since: 1103
 * @deprecated Use network.getCloudTimeAsString() instead
 */
export declare function getCloudTimeAsString(): string;
/**
 * Returns POSIX timestamp, an int representing the cloud time.
 *
 * Hash: 0x9A73240B49945C76 | Since: 323
 * @deprecated Use network.getCloudTimeAsInt() instead
 */
export declare function getCloudTimeAsInt(): number;
/**
 * Takes the specified time and writes it to the structure specified in the second argument.
 *
 * struct date_time
 * {
 * int year;
 * int PADDING1;
 * int month;
 * int PADDING2;
 * int day;
 * int PADDING3;
 * int hour;
 * int PADDING4;
 * int minute;
 * int PADDING5;
 * int second;
 * int PADDING6;
 * };
 *
 * Hash: 0xAC97AF97FA68E5D5 | Since: 323
 * @deprecated Use network.convertPosixTime(posixTime) instead
 */
export declare function convertPosixTime(posixTime: number): any;
/**
 * No comment provided
 *
 * Hash: 0x423DE3854BB50894 | Since: 323
 * @deprecated Use network.setInSpectatorMode(toggle, playerPed) instead
 */
export declare function networkSetInSpectatorMode(toggle: boolean, playerPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x419594E137637120 | Since: 323
 * @deprecated Use network.setInSpectatorModeExtended(toggle, playerPed) instead
 */
export declare function networkSetInSpectatorModeExtended(toggle: boolean, playerPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xFC18DB55AE19E046 | Since: 323
 * @deprecated Use network.setInFreeCamMode(toggle) instead
 */
export declare function networkSetInFreeCamMode(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x5C707A667DF8B9FA | Since: 323
 * @deprecated Use network.setAntagonisticToPlayer(toggle, player) instead
 */
export declare function networkSetAntagonisticToPlayer(toggle: boolean, player: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x048746E388762E11 | Since: 323
 * @deprecated Use network.isInSpectatorMode() instead
 */
export declare function networkIsInSpectatorMode(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9CA5DE655269FEC4 | Since: 323
 * @deprecated Use network.setInMpCutscene() instead
 */
export declare function networkSetInMpCutscene(): void;
/**
 * No comment provided
 *
 * Hash: 0x6CC27C9FA2040220 | Since: 323
 * @deprecated Use network.isInMpCutscene() instead
 */
export declare function networkIsInMpCutscene(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x63F9EE203C3619F2 | Since: 323
 * @deprecated Use network.isPlayerInMpCutscene(player) instead
 */
export declare function networkIsPlayerInMpCutscene(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFAC18E7356BD3210 | Since: 1180
 * @deprecated Use network.hideProjectileInCutscene() instead
 */
export declare function networkHideProjectileInCutscene(): void;
/**
 * No comment provided
 *
 * Hash: 0xEC51713AB6EC36E8 | Since: 323
 * @deprecated Use network.setVehicleRespotTimer(netId, time) instead
 */
export declare function setNetworkVehicleRespotTimer(netId: number, time: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDD7CEF5B3A4DA8A6 | Since: 2802
 * @deprecated Use network.isVehicleRunningRespotTimer(networkID) instead
 */
export declare function isNetworkVehicleRunningRespotTimer(networkID: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6274C4712850841E | Since: 323
 * @deprecated Use network.setVehicleAsGhost(vehicle, toggle) instead
 */
export declare function setNetworkVehicleAsGhost(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * `rage::netBlenderLinInterp::GetPositionMaxForUpdateLevel`
 *
 * Hash: 0xA2A707979FE754DC | Since: 877
 * @deprecated Use network.setVehicleMaxPositionDeltaMultiplier(vehicle, multiplier) instead
 */
export declare function setNetworkVehicleMaxPositionDeltaMultiplier(vehicle: number | Vehicle, multiplier: number): void;
/**
 * `Enables a periodic ShapeTest within the NetBlender and invokes rage::netBlenderLinInterp::GoStraightToTarget (or some functional wrapper).`
 *
 * Hash: 0x838DA0936A24ED4D | Since: 944
 * @deprecated Use network.setEnableHighSpeedEdgeFallDetection(vehicle, toggle) instead
 */
export declare function setNetworkEnableHighSpeedEdgeFallDetection(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x5FFE9B4144F9712F | Since: 323
 * @deprecated Use network.setLocalPlayerAsGhost(toggle) instead
 */
export declare function setLocalPlayerAsGhost(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x21D04D7BC538C146 | Since: 323
 * @deprecated Use network.isEntityAGhost(entity) instead
 */
export declare function isEntityAGhost(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x13F1FCB111B820B0 | Since: 877
 * @deprecated Use network.setNonParticipantsOfThisScriptAsGhosts() instead
 */
export declare function setNonParticipantsOfThisScriptAsGhosts(): void;
/**
 * Enables ghosting between specific players
 *
 * Hash: 0xA7C511FA1C5BDA38 | Since: 463
 * @deprecated Use network.setRemotePlayerAsGhost(player) instead
 */
export declare function setRemotePlayerAsGhost(player: number | string | Player): void;
/**
 * Must be a value between 1 and 254
 *
 * Hash: 0x658500AE6D723A7E | Since: 791
 * @deprecated Use network.setGhostAlpha(alpha) instead
 */
export declare function setGhostAlpha(alpha: number): void;
/**
 * Resets the entity ghost alpha to the default value (128)
 *
 * Hash: 0x17330EBF2F2124A8 | Since: 791
 * @deprecated Use network.resetGhostAlpha() instead
 */
export declare function resetGhostAlpha(): void;
/**
 * No comment provided
 *
 * Hash: 0x4BA166079D658ED4 | Since: 944
 * @deprecated Use network.setEntityGhostedForGhostPlayers(entity, toggle) instead
 */
export declare function setEntityGhostedForGhostPlayers(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD7B6C73CAD419BCF | Since: 944
 * @deprecated Use network.setInvertGhosting() instead
 */
export declare function setInvertGhosting(): void;
/**
 * No comment provided
 *
 * Hash: 0x7EF7649B64D7FF10 | Since: 944
 * @deprecated Use network.isEntityInGhostCollision(entity) instead
 */
export declare function isEntityInGhostCollision(entity: number | Entity): boolean;
/**
 * reportData includes mc, ceo, yacht and licenceplate names
 *
 * Hash: 0x527803286A8B6C81 | Since: 3258
 * @deprecated Use network.setFreemodeReportData() instead
 */
export declare function setFreemodeReportData(): [any, any];
/**
 * No comment provided
 *
 * Hash: 0x28123C8B056CC8AA | Since: 3274
 * @deprecated Use network.isObjectReassignmentInProgress() instead
 */
export declare function isObjectReassignmentInProgress(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x77758139EC9B66C7 | Since: 323
 * @deprecated Use network.usePlayerColourInsteadOfTeamColour(toggle) instead
 */
export declare function usePlayerColourInsteadOfTeamColour(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7CD6BC4C2BBDD526 | Since: 323
 * @deprecated Use network.createSynchronisedScene(pos, rot, rotationOrder, useOcclusionPortal, looped, animTime) instead
 */
export declare function networkCreateSynchronisedScene(pos: Vector3, rot: Vector3, rotationOrder: number, useOcclusionPortal: boolean, looped: boolean, animTime: number): number;
/**
 * No comment provided
 *
 * Hash: 0x742A637471BCECD9 | Since: 323
 * @deprecated Use network.addPedToSynchronisedScene(ped, netScene, animDict, animnName, speed, speedMultiplier, duration, flag, playbackRate) instead
 */
export declare function networkAddPedToSynchronisedScene(ped: number | Ped, netScene: number, animDict: string, animnName: string, speed: number, speedMultiplier: number, duration: number, flag: number, playbackRate: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA5EAFE473E45C442 | Since: 1290
 * @deprecated Use network.addPedToSynchronisedSceneWithIk() instead
 */
export declare function networkAddPedToSynchronisedSceneWithIk(): void;
/**
 * No comment provided
 *
 * Hash: 0xF2404D68CBC855FA | Since: 323
 * @deprecated Use network.addEntityToSynchronisedScene(entity, netScene, animDict, animName, speed, speedMulitiplier, flag) instead
 */
export declare function networkAddEntityToSynchronisedScene(entity: number | Entity, netScene: number, animDict: string, animName: string, speed: number, speedMulitiplier: number, flag: number): void;
/**
 * Similar structure as NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE but it includes this time a hash.
 * In casino_slots it is used one time in a synced scene involving a ped and the slot machine?
 *
 * Hash: 0x45F35C0EDC33B03B | Since: 1734
 * @deprecated Use network.addMapEntityToSynchronisedScene(netScene, modelHash, pos, flags) instead
 */
export declare function networkAddMapEntityToSynchronisedScene(netScene: number, modelHash: number | string, pos: Vector3, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCF8BD3B0BD6D42D7 | Since: 323
 * @deprecated Use network.addSynchronisedSceneCamera(netScene, animDict, animName) instead
 */
export declare function networkAddSynchronisedSceneCamera(netScene: number, animDict: string, animName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x478DCBD2A98B705A | Since: 323
 * @deprecated Use network.attachSynchronisedSceneToEntity(netScene, entity, bone) instead
 */
export declare function networkAttachSynchronisedSceneToEntity(netScene: number, entity: number | Entity, bone: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9A1B3FCDB36C8697 | Since: 323
 * @deprecated Use network.startSynchronisedScene(netScene) instead
 */
export declare function networkStartSynchronisedScene(netScene: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC254481A4574CB2F | Since: 323
 * @deprecated Use network.stopSynchronisedScene(netScene) instead
 */
export declare function networkStopSynchronisedScene(netScene: number): void;
/**
 * No comment provided
 *
 * Hash: 0x02C40BF885C567B6 | Since: 323
 * @deprecated Use network.getLocalSceneFromNetworkId(netId) instead
 */
export declare function networkGetLocalSceneFromNetworkId(netId: number): number;
/**
 * No comment provided
 *
 * Hash: 0xC9B43A33D09CADA7 | Since: 323
 * @deprecated Use network.forceLocalUseOfSyncedSceneCamera(netScene) instead
 */
export declare function networkForceLocalUseOfSyncedSceneCamera(netScene: number): void;
/**
 * No comment provided
 *
 * Hash: 0x144DA052257AE7D8 | Since: 1103
 * @deprecated Use network.allowRemoteSyncedSceneLocalPlayerRequests() instead
 */
export declare function networkAllowRemoteSyncedSceneLocalPlayerRequests(): void;
/**
 * p0 is always 0. p1 is pointing to a global.
 *
 * Hash: 0xFB1F9381E80FA13F | Since: 323
 * @deprecated Use network.findLargestBunchOfPlayers() instead
 */
export declare function networkFindLargestBunchOfPlayers(): boolean;
/**
 * One of the first things it does is get the players ped.
 * Then it calls a function that is used in some tasks and ped based functions.
 * p5, p6, p7 is another coordinate (or zero), often related to `GET_BLIP_COORDS, in the decompiled scripts.
 *
 * Hash: 0x5A6FFA2433E2F14C | Since: 323
 * @deprecated Use network.startRespawnSearchForPlayer(player, pos, radius, flags) instead
 */
export declare function networkStartRespawnSearchForPlayer(player: number | string | Player, pos: Vector3, radius: number, flags: number): boolean;
/**
 * p8, p9, p10 is another coordinate, or zero, often related to `GET_BLIP_COORDS in the decompiled scripts.
 *
 * Hash: 0x4BA92A18502BCA61 | Since: 323
 * @deprecated Use network.startRespawnSearchInAngledAreaForPlayer(player, x1, y1, z1, x2, y2, z2, width, flags) instead
 */
export declare function networkStartRespawnSearchInAngledAreaForPlayer(player: number | string | Player, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, flags: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3C891A251567DFCE | Since: 323
 * @deprecated Use network.queryRespawnResults() instead
 */
export declare function networkQueryRespawnResults(): [number, any];
/**
 * No comment provided
 *
 * Hash: 0xFB8F2A6F3DF08CBE | Since: 323
 * @deprecated Use network.cancelRespawnSearch() instead
 */
export declare function networkCancelRespawnSearch(): void;
/**
 * Based on scripts such as in freemode.c how they call their vars vVar and fVar the 2nd and 3rd param it a Vector3 and Float, but the first is based on get_random_int_in_range..
 *
 * Hash: 0x371EA43692861CF1 | Since: 323
 * @deprecated Use network.getRespawnResult(randomInt) instead
 */
export declare function networkGetRespawnResult(randomInt: number): [Vector3, number];
/**
 * No comment provided
 *
 * Hash: 0x6C34F1208B8923FD | Since: 323
 * @deprecated Use network.getRespawnResultFlags() instead
 */
export declare function networkGetRespawnResultFlags(): number;
/**
 * No comment provided
 *
 * Hash: 0x17E0198B3882C2CB | Since: 323
 * @deprecated Use network.startSoloTutorialSession() instead
 */
export declare function networkStartSoloTutorialSession(): void;
/**
 * teamId must be < 3, instanceId must be < 64
 *
 * Hash: 0xFB680D403909DC70 | Since: 323
 * @deprecated Use network.allowGangToJoinTutorialSession(teamId, instanceId) instead
 */
export declare function networkAllowGangToJoinTutorialSession(teamId: number, instanceId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD0AFAFF5A51D72F7 | Since: 323
 * @deprecated Use network.endTutorialSession() instead
 */
export declare function networkEndTutorialSession(): void;
/**
 * No comment provided
 *
 * Hash: 0xADA24309FE08DACF | Since: 323
 * @deprecated Use network.isInTutorialSession() instead
 */
export declare function networkIsInTutorialSession(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB37E4E6A2388CA7B | Since: 323
 * @deprecated Use network.waitingPopClearTutorialSession() instead
 */
export declare function networkWaitingPopClearTutorialSession(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x35F0B98A8387274D | Since: 323
 * @deprecated Use network.isTutorialSessionChangePending() instead
 */
export declare function networkIsTutorialSessionChangePending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3B39236746714134 | Since: 323
 * @deprecated Use network.getPlayerTutorialSessionInstance(player) instead
 */
export declare function networkGetPlayerTutorialSessionInstance(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x9DE986FC9A87C474 | Since: 323
 * @deprecated Use network.arePlayersInSameTutorialSession(player, index) instead
 */
export declare function networkArePlayersInSameTutorialSession(player: number | string | Player, index: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFEA7A352DDB34D52 | Since: 2545
 * @deprecated Use network.blockProxyMigrationBetweenTutorialSessions() instead
 */
export declare function networkBlockProxyMigrationBetweenTutorialSessions(): void;
/**
 * No comment provided
 *
 * Hash: 0xBBDF066252829606 | Since: 323
 * @deprecated Use network.concealPlayer(player, toggle) instead
 */
export declare function networkConcealPlayer(player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x919B3C98ED8292F9 | Since: 323
 * @deprecated Use network.isPlayerConcealed(player) instead
 */
export declare function networkIsPlayerConcealed(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1632BE0AC1E62876 | Since: 877
 * @deprecated Use network.concealEntity(entity, toggle) instead
 */
export declare function networkConcealEntity(entity: number | Entity, toggle: boolean): void;
/**
 * Note: This only works for vehicles, which appears to be a bug (since the setter _does_ work for every entity type and the name is 99% correct).
 *
 * Hash: 0x71302EC70689052A | Since: 877
 * @deprecated Use network.isEntityConcealed(entity) instead
 */
export declare function networkIsEntityConcealed(entity: number | Entity): boolean;
/**
 * Works in Singleplayer too.
 * Passing wrong data (e.g. hours above 23) will cause the game to crash.
 *
 * Hash: 0xE679E3E06E363892 | Since: 323
 * @deprecated Use network.overrideClockTime(hours, minutes, seconds) instead
 */
export declare function networkOverrideClockTime(hours: number, minutes: number, seconds: number): void;
/**
 * No comment provided
 *
 * Hash: 0x42BF1D2E723B6D7E | Since: 2189
 * @deprecated Use network.overrideClockRate(ms) instead
 */
export declare function networkOverrideClockRate(ms: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD972DF67326F966E | Since: 323
 * @deprecated Use network.clearClockTimeOverride() instead
 */
export declare function networkClearClockTimeOverride(): void;
/**
 * Does nothing in final builds.
 *
 * Hash: 0xCBD02360C5E16871 | Since: 3570
 * @deprecated Use network.syncClockTimeOverride() instead
 */
export declare function networkSyncClockTimeOverride(): void;
/**
 * No comment provided
 *
 * Hash: 0xD7C95D322FF57522 | Since: 323
 * @deprecated Use network.isClockTimeOverridden() instead
 */
export declare function networkIsClockTimeOverridden(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x494C8FB299290269 | Since: 323
 * @deprecated Use network.addEntityArea(x1, y1, z1, x2, y2, z2) instead
 */
export declare function networkAddEntityArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
/**
 * To remove, see: NETWORK_REMOVE_ENTITY_AREA
 * See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
 *
 * Hash: 0x376C6375BA60293A | Since: 323
 * @deprecated Use network.addEntityAngledArea(x1, y1, z1, x2, y2, z2, width) instead
 */
export declare function networkAddEntityAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): number;
/**
 * No comment provided
 *
 * Hash: 0x25B99872D588A101 | Since: 323
 * @deprecated Use network.addClientEntityArea(x1, y1, z1, x2, y2, z2) instead
 */
export declare function networkAddClientEntityArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
/**
 * No comment provided
 *
 * Hash: 0x2B1C623823DB0D9D | Since: 1103
 * @deprecated Use network.addClientEntityAngledArea(x1, y1, z1, x2, y2, z2, radius) instead
 */
export declare function networkAddClientEntityAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number): number;
/**
 * No comment provided
 *
 * Hash: 0x93CF869BAA0C4874 | Since: 323
 * @deprecated Use network.removeEntityArea(areaHandle) instead
 */
export declare function networkRemoveEntityArea(areaHandle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE64A3CA08DFA37A9 | Since: 323
 * @deprecated Use network.entityAreaDoesExist(areaHandle) instead
 */
export declare function networkEntityAreaDoesExist(areaHandle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4DF7CFFF471A7FB1 | Since: 323
 * @deprecated Use network.entityAreaHaveAllReplied(areaHandle) instead
 */
export declare function networkEntityAreaHaveAllReplied(areaHandle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4A2D4E8BF4265B0F | Since: 323
 * @deprecated Use network.entityAreaIsOccupied(areaHandle) instead
 */
export declare function networkEntityAreaIsOccupied(areaHandle: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2B1813ABA29016C5 | Since: 323
 * @deprecated Use network.useHighPrecisionBlending(netID, toggle) instead
 */
export declare function networkUseHighPrecisionBlending(netID: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA6FCECCF4721D679 | Since: 1604
 * @deprecated Use network.setCustomArenaBallParams(netId) instead
 */
export declare function networkSetCustomArenaBallParams(netId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x95BAF97C82464629 | Since: 1604
 * @deprecated Use network.entityUseHighPrecisionRotation(netId, toggle) instead
 */
export declare function networkEntityUseHighPrecisionRotation(netId: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x924426BFFD82E915 | Since: 323
 * @deprecated Use network.requestCloudBackgroundScripts() instead
 */
export declare function networkRequestCloudBackgroundScripts(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8132C0EB8B2B3293 | Since: 323
 * @deprecated Use network.isCloudBackgroundScriptRequestPending() instead
 */
export declare function networkIsCloudBackgroundScriptRequestPending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x42FB3B532D526E6C | Since: 323
 * @deprecated Use network.requestCloudTunables() instead
 */
export declare function networkRequestCloudTunables(): void;
/**
 * No comment provided
 *
 * Hash: 0x0467C11ED88B7D28 | Since: 323
 * @deprecated Use network.isTunableCloudRequestPending() instead
 */
export declare function networkIsTunableCloudRequestPending(): boolean;
/**
 * Actually returns the version (TUNABLE_VERSION)
 *
 * Hash: 0x10BD227A753B0D84 | Since: 323
 * @deprecated Use network.getTunableCloudCrc() instead
 */
export declare function networkGetTunableCloudCrc(): number;
/**
 * Sets up tunable contexts for _NETWORK_GET_TUNABLES_REGISTRATION_{BOOL|INT|FLOAT}
 *
 * Hash: 0x014A73449675121D | Since: 3258
 * @deprecated Use network.setTunablesRegistrationContexts() instead
 */
export declare function networkSetTunablesRegistrationContexts(): any;
/**
 * Clears tunable contexts that were set up using _NETWORK_SET_TUNABLES_REGISTRATION_CONTEXTS
 *
 * Hash: 0x0C87C83C8950432B | Since: 3258
 * @deprecated Use network.clearTunablesRegistrationContexts() instead
 */
export declare function networkClearTunablesRegistrationContexts(): void;
/**
 * Checks if the given tunable exists and returns its value. Otherwise returns defaultValue.
 * Possible tunable contexts must first be set up using _NETWORK_SET_TUNABLES_REGISTRATION_CONTEXTS.
 *
 * Hash: 0xB327CF1B8C2C0EA3 | Since: 3258
 * @deprecated Use network.getTunablesRegistrationBool(tunableName, defaultValue) instead
 */
export declare function networkGetTunablesRegistrationBool(tunableName: number | string, defaultValue: boolean): boolean;
/**
 * Checks if the given tunable exists and returns its value. Otherwise returns defaultValue.
 * Possible tunable contexts must first be set up using _NETWORK_SET_TUNABLES_REGISTRATION_CONTEXTS.
 *
 * Hash: 0x0D94071E55F4C9CE | Since: 3258
 * @deprecated Use network.getTunablesRegistrationInt(tunableName, defaultValue) instead
 */
export declare function networkGetTunablesRegistrationInt(tunableName: number | string, defaultValue: number): number;
/**
 * Checks if the given tunable exists and returns its value. Otherwise returns defaultValue.
 * Possible tunable contexts must first be set up using _NETWORK_SET_TUNABLES_REGISTRATION_CONTEXTS.
 *
 * Hash: 0x367E5E33E7F0DD1A | Since: 3258
 * @deprecated Use network.getTunablesRegistrationFloat(tunableName, defaultValue) instead
 */
export declare function networkGetTunablesRegistrationFloat(tunableName: number | string, defaultValue: number): number;
/**
 * No comment provided
 *
 * Hash: 0x85E5F8B9B898B20A | Since: 323
 * @deprecated Use network.doesTunableExist(tunableContext, tunableName) instead
 */
export declare function networkDoesTunableExist(tunableContext: string, tunableName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8BE1146DFD5D4468 | Since: 323
 * @deprecated Use network.accessTunableInt(tunableContext, tunableName) instead
 */
export declare function networkAccessTunableInt(tunableContext: string, tunableName: string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xE5608CA7BC163A5F | Since: 323
 * @deprecated Use network.accessTunableFloat(tunableContext, tunableName) instead
 */
export declare function networkAccessTunableFloat(tunableContext: string, tunableName: string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xAA6A47A573ABB75A | Since: 323
 * @deprecated Use network.accessTunableBool(tunableContext, tunableName) instead
 */
export declare function networkAccessTunableBool(tunableContext: string, tunableName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE4E53E1419D81127 | Since: 323
 * @deprecated Use network.doesTunableExistHash(tunableContext, tunableName) instead
 */
export declare function networkDoesTunableExistHash(tunableContext: number | string, tunableName: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFAFC23AEE23868DB | Since: 393
 * @deprecated Use network.accessTunableModificationDetectionClear() instead
 */
export declare function networkAccessTunableModificationDetectionClear(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x40FCE03E50E8DBE8 | Since: 323
 * @deprecated Use network.accessTunableIntHash(tunableContext, tunableName) instead
 */
export declare function networkAccessTunableIntHash(tunableContext: number | string, tunableName: number | string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x3A8B55FDA4C8DDEF | Since: 393
 * @deprecated Use network.accessTunableIntModificationDetectionRegistrationHash(contextHash, nameHash) instead
 */
export declare function networkAccessTunableIntModificationDetectionRegistrationHash(contextHash: number | string, nameHash: number | string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x972BC203BBC4C4D5 | Since: 323
 * @deprecated Use network.accessTunableFloatHash(tunableContext, tunableName) instead
 */
export declare function networkAccessTunableFloatHash(tunableContext: number | string, tunableName: number | string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x1950DAE9848A4739 | Since: 393
 * @deprecated Use network.accessTunableFloatModificationDetectionRegistrationHash(contextHash, nameHash) instead
 */
export declare function networkAccessTunableFloatModificationDetectionRegistrationHash(contextHash: number | string, nameHash: number | string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xEA16B69D93D71A45 | Since: 323
 * @deprecated Use network.accessTunableBoolHash(tunableContext, tunableName) instead
 */
export declare function networkAccessTunableBoolHash(tunableContext: number | string, tunableName: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x697F508861875B42 | Since: 393
 * @deprecated Use network.accessTunableBoolModificationDetectionRegistrationHash(contextHash, nameHash) instead
 */
export declare function networkAccessTunableBoolModificationDetectionRegistrationHash(contextHash: number | string, nameHash: number | string): [boolean, boolean];
/**
 * Returns defaultValue if the tunable doesn't exist.
 *
 * Hash: 0xC7420099936CE286 | Since: 323
 * @deprecated Use network.tryAccessTunableBoolHash(tunableContext, tunableName, defaultValue) instead
 */
export declare function networkTryAccessTunableBoolHash(tunableContext: number | string, tunableName: number | string, defaultValue: boolean): boolean;
/**
 * Return the content modifier id (the tunables context if you want) of a specific content.
 *
 * It takes the content hash (which is the mission id hash), and return the content modifier id, used as the tunables context.
 *
 * The mission id can be found on the Social club, for example, 'socialclub.rockstargames.com/games/gtav/jobs/job/A8M6Bz8MLEC5xngvDCzGwA'
 *
 * 'A8M6Bz8MLEC5xngvDCzGwA' is the mission id, so the game hash this and use it as the parameter for this native.
 *
 *
 * Hash: 0x187382F8A3E0A6C3 | Since: 323
 * @deprecated Use network.getContentModifierListId(contentHash) instead
 */
export declare function networkGetContentModifierListId(contentHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x7DB53B37A2F211A0 | Since: 323
 * @deprecated Use network.getBoneIdOfFatalHit() instead
 */
export declare function networkGetBoneIdOfFatalHit(): number;
/**
 * No comment provided
 *
 * Hash: 0x72433699B4E6DD64 | Since: 323
 * @deprecated Use network.resetBodyTracker() instead
 */
export declare function networkResetBodyTracker(): void;
/**
 * No comment provided
 *
 * Hash: 0xD38C4A6D047C019D | Since: 323
 * @deprecated Use network.getNumberBodyTrackerHits() instead
 */
export declare function networkGetNumberBodyTrackerHits(): number;
/**
 * No comment provided
 *
 * Hash: 0x2E0BF682CC778D49 | Since: 323
 * @deprecated Use network.hasBoneBeenHitByKiller(boneIndex) instead
 */
export declare function networkHasBoneBeenHitByKiller(boneIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0EDE326D47CD0F3E | Since: 323
 * @deprecated Use network.setAttributeDamageToPlayer(ped, player) instead
 */
export declare function networkSetAttributeDamageToPlayer(ped: number | Ped, player: number | string | Player): boolean;
/**
 * Allows vehicle wheels to be destructible even when the vehicle entity is invincible.
 *
 * Hash: 0x890E2C5ABED7236D | Since: 1365
 * @deprecated Use network.triggerDamageEventForZeroDamage(entity, toggle) instead
 */
export declare function networkTriggerDamageEventForZeroDamage(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE9D0244ACBEE1BC4 | Since: 3258
 * @deprecated Use network.triggerDamageEventForZeroPedDamage(entity, trigger) instead
 */
export declare function networkTriggerDamageEventForZeroPedDamage(entity: number | Entity, trigger: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x38B7C51AB1EDC7D8 | Since: 1734
 * @deprecated Use network.triggerDamageEventForZeroWeaponHash(entity, toggle) instead
 */
export declare function networkTriggerDamageEventForZeroWeaponHash(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3FC795691834481D | Since: 1868
 * @deprecated Use network.setNoLongerNeeded(entity, toggle) instead
 */
export declare function networkSetNoLongerNeeded(entity: number | Entity, toggle: boolean): void;
/**
 * In the console script dumps, this is only referenced once.
 * `NETWORK::NETWORK_EXPLODE_VEHICLE(vehicle, 1, 0, 0);`
 *
 * ^^^^^ That must be PC script dumps? In X360 Script Dumps it is reference a few times with 2 differences in the parameters.
 * Which as you see below is 1, 0, 0 + 1, 1, 0 + 1, 0, and a *param?
 *
 * am_plane_takedown.c
 * network_explode_vehicle(net_to_veh(Local_40.imm_2), 1, 1, 0);
 *
 * armenian2.c
 * network_explode_vehicle(Local_80[6 <2>], 1, 0, 0);
 *
 * fm_horde_controler.c
 * network_explode_vehicle(net_to_veh(*uParam0), 1, 0, *uParam0);
 *
 * fm_mission_controller.c, has 6 hits so not going to list them.
 *
 * Side note, setting the first parameter to 0 seems to mute sound or so?
 *
 * Seems it's like ADD_EXPLOSION, etc. the first 2 params. The 3rd atm no need to worry since it always seems to be 0.
 *
 *
 * Hash: 0x301A42153C9AD707 | Since: 323
 * @deprecated Use network.explodeVehicle(vehicle, isAudible, isInvisible, netId) instead
 */
export declare function networkExplodeVehicle(vehicle: number | Vehicle, isAudible: boolean, isInvisible: boolean, netId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2A5E0621DD815A9A | Since: 463
 * @deprecated Use network.explodeHeli(vehicle, isAudible, isInvisible, netId) instead
 */
export declare function networkExplodeHeli(vehicle: number | Vehicle, isAudible: boolean, isInvisible: boolean, netId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCD71A4ECAB22709E | Since: 323
 * @deprecated Use network.useLogarithmicBlendingThisFrame(entity) instead
 */
export declare function networkUseLogarithmicBlendingThisFrame(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xA7E30DE9272B6D49 | Since: 323
 * @deprecated Use network.overrideCoordsAndHeading(entity, pos, heading) instead
 */
export declare function networkOverrideCoordsAndHeading(entity: number | Entity, pos: Vector3, heading: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE6717E652B8C8D8A | Since: 617
 * @deprecated Use network.enableExtraVehicleOrientationBlendChecks(netId, toggle) instead
 */
export declare function networkEnableExtraVehicleOrientationBlendChecks(netId: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x407091CF6037118E | Since: 323
 * @deprecated Use network.disableProximityMigration(netID) instead
 */
export declare function networkDisableProximityMigration(netID: number): void;
/**
 * p0 in the decompiled scripts is always the stat mesh_texblend * 0.07 to int
 *
 * Hash: 0x367EF5E2F439B4C6 | Since: 323
 * @deprecated Use network.setPlayerMentalState() instead
 */
export declare function networkSetPlayerMentalState(): void;
/**
 * No comment provided
 *
 * Hash: 0x94538037EE44F5CF | Since: 323
 * @deprecated Use network.setMinimumRankForMission() instead
 */
export declare function networkSetMinimumRankForMission(): void;
/**
 * No comment provided
 *
 * Hash: 0xBD0BE0BFC927EAC1 | Since: 323
 * @deprecated Use network.cacheLocalPlayerHeadBlendData() instead
 */
export declare function networkCacheLocalPlayerHeadBlendData(): void;
/**
 * No comment provided
 *
 * Hash: 0x237D5336A9A54108 | Since: 323
 * @deprecated Use network.hasCachedPlayerHeadBlendData(player) instead
 */
export declare function networkHasCachedPlayerHeadBlendData(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x99B72C7ABDE5C910 | Since: 323
 * @deprecated Use network.applyCachedPlayerHeadBlendData(ped, player) instead
 */
export declare function networkApplyCachedPlayerHeadBlendData(ped: number | Ped, player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF2EAC213D5EA0623 | Since: 323
 * @deprecated Use network.getNumCommerceItems() instead
 */
export declare function getNumCommerceItems(): number;
/**
 * No comment provided
 *
 * Hash: 0xEA14EEF5B7CD2C30 | Since: 323
 * @deprecated Use network.isCommerceDataValid() instead
 */
export declare function isCommerceDataValid(): boolean;
/**
 * Does nothing (it's a nullsub).
 *
 * Hash: 0xB606E6CC59664972 | Since: 323
 * @deprecated Use network.triggerCommerceDataFetch() instead
 */
export declare function triggerCommerceDataFetch(): void;
/**
 * No comment provided
 *
 * Hash: 0x1D4DC17C38FEAFF0 | Since: 323
 * @deprecated Use network.isCommerceDataFetchInProgress() instead
 */
export declare function isCommerceDataFetchInProgress(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x662635855957C411 | Since: 323
 * @deprecated Use network.getCommerceItemId(index) instead
 */
export declare function getCommerceItemId(index: number): string;
/**
 * No comment provided
 *
 * Hash: 0xB4271092CA7EDF48 | Since: 323
 * @deprecated Use network.getCommerceItemName(index) instead
 */
export declare function getCommerceItemName(index: number): string;
/**
 * No comment provided
 *
 * Hash: 0xCA94551B50B4932C | Since: 323
 * @deprecated Use network.getCommerceProductPrice(index) instead
 */
export declare function getCommerceProductPrice(index: number): string;
/**
 * No comment provided
 *
 * Hash: 0x2A7776C709904AB0 | Since: 323
 * @deprecated Use network.getCommerceItemNumCats(index) instead
 */
export declare function getCommerceItemNumCats(index: number): number;
/**
 * index2 is unused
 *
 * Hash: 0x6F44CBF56D79FAC0 | Since: 323
 * @deprecated Use network.getCommerceItemCat(index, index2) instead
 */
export declare function getCommerceItemCat(index: number, index2: number): string;
/**
 * No comment provided
 *
 * Hash: 0x58C21165F6545892 | Since: 323
 * @deprecated Use network.openCommerceStore() instead
 */
export declare function openCommerceStore(): void;
/**
 * No comment provided
 *
 * Hash: 0x2EAC52B4019E2782 | Since: 323
 * @deprecated Use network.isCommerceStoreOpen() instead
 */
export declare function isCommerceStoreOpen(): boolean;
/**
 * Access to the store for shark cards etc...
 *
 * Hash: 0x9641A9FF718E9C5E | Since: 323
 * @deprecated Use network.setStoreEnabled(toggle) instead
 */
export declare function setStoreEnabled(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA2F952104FC6DD4B | Since: 323
 * @deprecated Use network.requestCommerceItemImage(index) instead
 */
export declare function requestCommerceItemImage(index: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x72D0706CD6CCDB58 | Since: 323
 * @deprecated Use network.releaseAllCommerceItemImages() instead
 */
export declare function releaseAllCommerceItemImages(): void;
/**
 * No comment provided
 *
 * Hash: 0x722F5D28B61C5EA8 | Since: 323
 * @deprecated Use network.getCommerceItemTexturename(index) instead
 */
export declare function getCommerceItemTexturename(index: number): string;
/**
 * No comment provided
 *
 * Hash: 0x883D79C4071E18B3 | Since: 323
 * @deprecated Use network.isStoreAvailableToUser() instead
 */
export declare function isStoreAvailableToUser(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x265635150FB0D82E | Since: 323
 * @deprecated Use network.delayMpStoreOpen() instead
 */
export declare function delayMpStoreOpen(): void;
/**
 * No comment provided
 *
 * Hash: 0x444C4525ECE0A4B9 | Since: 323
 * @deprecated Use network.resetStoreGameTracking() instead
 */
export declare function resetStoreNetworkGameTracking(): void;
/**
 * No comment provided
 *
 * Hash: 0x59328EB08C5CEB2B | Since: 323
 * @deprecated Use network.isUserOldEnoughToAccessStore() instead
 */
export declare function isUserOldEnoughToAccessStore(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFAE628F1E9ADB239 | Since: 323
 * @deprecated Use network.setLastViewedShopItem(p0, p2) instead
 */
export declare function setLastViewedShopItem(p0: number | string, p2: number | string): void;
/**
 * Checks some commerce stuff
 *
 * Hash: 0x754615490A029508 | Since: 1290
 * @deprecated Use network.getUserPremiumAccess() instead
 */
export declare function getUserPremiumAccess(): number;
/**
 * Checks some commerce stuff
 *
 * Hash: 0x155467ACA0F55705 | Since: 1290
 * @deprecated Use network.getUserStarterAccess() instead
 */
export declare function getUserStarterAccess(): number;
/**
 * No comment provided
 *
 * Hash: 0xC64DED7EF0D2FE37 | Since: 323
 * @deprecated Use network.cloudDeleteMemberFile() instead
 */
export declare function cloudDeleteMemberFile(): number;
/**
 * No comment provided
 *
 * Hash: 0x4C61B39930D045DA | Since: 323
 * @deprecated Use network.cloudHasRequestCompleted(requestId) instead
 */
export declare function cloudHasRequestCompleted(requestId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3A3D5568AF297CD5 | Since: 323
 * @deprecated Use network.cloudDidRequestSucceed(requestId) instead
 */
export declare function cloudDidRequestSucceed(requestId: number): boolean;
/**
 * Downloads prod.cloud.rockstargames.com/titles/gta5/[platform]/check.json
 *
 * Hash: 0x4F18196C8D38768D | Since: 323
 * @deprecated Use network.cloudCheckAvailability() instead
 */
export declare function cloudCheckAvailability(): void;
/**
 * No comment provided
 *
 * Hash: 0xC7ABAC5DE675EE3B | Since: 323
 * @deprecated Use network.cloudIsCheckingAvailability() instead
 */
export declare function cloudIsCheckingAvailability(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0B0CC10720653F3B | Since: 323
 * @deprecated Use network.cloudGetAvailabilityCheckResult() instead
 */
export declare function cloudGetAvailabilityCheckResult(): boolean;
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0x8B0C2964BA471961 | Since: 323
 * @deprecated Use network.getContentToLoadType() instead
 */
export declare function getContentToLoadType(): number;
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0x88B588B41FF7868E | Since: 323
 * @deprecated Use network.getIsLaunchFromLiveArea() instead
 */
export declare function getIsLaunchFromLiveArea(): boolean;
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0x67FC09BC554A75E5 | Since: 323
 * @deprecated Use network.getIsLiveAreaLaunchWithContent() instead
 */
export declare function getIsLiveAreaLaunchWithContent(): boolean;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0x966DD84FB6A46017 | Since: 323
 * @deprecated Use network.clearServiceEventArguments() instead
 */
export declare function clearServiceEventArguments(): void;
/**
 * No comment provided
 *
 * Hash: 0x152D90E4C1B4738A | Since: 323
 * @deprecated Use network.ugcCopyContent() instead
 */
export declare function ugcCopyContent(): [boolean, any, any];
/**
 * No comment provided
 *
 * Hash: 0x9FEDF86898F100E9 | Since: 323
 * @deprecated Use network.ugcIsCreating() instead
 */
export declare function ugcIsCreating(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5E24341A7F92A74B | Since: 323
 * @deprecated Use network.ugcHasCreateFinished() instead
 */
export declare function ugcHasCreateFinished(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x24E4E51FC16305F9 | Since: 323
 * @deprecated Use network.ugcDidCreateSucceed() instead
 */
export declare function ugcDidCreateSucceed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFBC5E768C7A77A6A | Since: 323
 * @deprecated Use network.ugcGetCreateResult() instead
 */
export declare function ugcGetCreateResult(): number;
/**
 * No comment provided
 *
 * Hash: 0xC55A0B40FFB1ED23 | Since: 323
 * @deprecated Use network.ugcGetCreateContentId() instead
 */
export declare function ugcGetCreateContentId(): string;
/**
 * No comment provided
 *
 * Hash: 0x17440AA15D1D3739 | Since: 323
 * @deprecated Use network.ugcClearCreateResult() instead
 */
export declare function ugcClearCreateResult(): void;
/**
 * No comment provided
 *
 * Hash: 0x9BF438815F5D96EA | Since: 323
 * @deprecated Use network.ugcQueryMyContent() instead
 */
export declare function ugcQueryMyContent(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x692D58DF40657E8C | Since: 323
 * @deprecated Use network.ugcQueryByCategory() instead
 */
export declare function ugcQueryByCategory(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x158EC424F35EC469 | Since: 323
 * @deprecated Use network.ugcQueryByContentId(contentId, latestVersion, contentTypeName) instead
 */
export declare function ugcQueryByContentId(contentId: string, latestVersion: boolean, contentTypeName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC7397A83F7A2A462 | Since: 323
 * @deprecated Use network.ugcQueryByContentIds(count, latestVersion, contentTypeName) instead
 */
export declare function ugcQueryByContentIds(count: number, latestVersion: boolean, contentTypeName: string): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x6D4CB481FAC835E8 | Since: 323
 * @deprecated Use network.ugcQueryMostRecentlyCreatedContent(offset, count, contentTypeName) instead
 */
export declare function ugcQueryMostRecentlyCreatedContent(offset: number, count: number, contentTypeName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD5A4B59980401588 | Since: 323
 * @deprecated Use network.ugcGetBookmarkedContent() instead
 */
export declare function ugcGetBookmarkedContent(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x3195F8DD0D531052 | Since: 323
 * @deprecated Use network.ugcGetMyContent() instead
 */
export declare function ugcGetMyContent(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xF9E1CCAE8BA4C281 | Since: 323
 * @deprecated Use network.ugcGetFriendContent() instead
 */
export declare function ugcGetFriendContent(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x9F6E2821885CAEE2 | Since: 323
 * @deprecated Use network.ugcGetCrewContent() instead
 */
export declare function ugcGetCrewContent(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x678BB03C1A3BD51E | Since: 323
 * @deprecated Use network.ugcGetGetByCategory() instead
 */
export declare function ugcGetGetByCategory(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x815E5E3073DA1D67 | Since: 323
 * @deprecated Use network.ugcGetGetByContentId(contentId, contentTypeName) instead
 */
export declare function ugcGetGetByContentId(contentId: string, contentTypeName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB8322EEB38BE7C26 | Since: 323
 * @deprecated Use network.ugcGetGetByContentIds(dataCount, contentTypeName) instead
 */
export declare function ugcGetGetByContentIds(dataCount: number, contentTypeName: string): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xA7862BC5ED1DFD7E | Since: 323
 * @deprecated Use network.ugcGetMostRecentlyCreatedContent() instead
 */
export declare function ugcGetMostRecentlyCreatedContent(): [boolean, any, any];
/**
 * No comment provided
 *
 * Hash: 0x97A770BEEF227E2B | Since: 323
 * @deprecated Use network.ugcGetMostRecentlyPlayedContent() instead
 */
export declare function ugcGetMostRecentlyPlayedContent(): [boolean, any, any];
/**
 * No comment provided
 *
 * Hash: 0x5324A0E3E4CE3570 | Since: 323
 * @deprecated Use network.ugcGetTopRatedContent() instead
 */
export declare function ugcGetTopRatedContent(): [boolean, any, any];
/**
 * No comment provided
 *
 * Hash: 0xE9B99B6853181409 | Since: 323
 * @deprecated Use network.ugcCancelQuery() instead
 */
export declare function ugcCancelQuery(): void;
/**
 * No comment provided
 *
 * Hash: 0xD53ACDBEF24A46E8 | Since: 323
 * @deprecated Use network.ugcIsGetting() instead
 */
export declare function ugcIsGetting(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x02ADA21EA2F6918F | Since: 323
 * @deprecated Use network.ugcHasGetFinished() instead
 */
export declare function ugcHasGetFinished(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x941E5306BCD7C2C7 | Since: 323
 * @deprecated Use network.ugcDidGetSucceed() instead
 */
export declare function ugcDidGetSucceed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC87E740D9F3872CC | Since: 323
 * @deprecated Use network.ugcWasQueryForceCancelled() instead
 */
export declare function ugcWasQueryForceCancelled(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEDF7F927136C224B | Since: 323
 * @deprecated Use network.ugcGetQueryResult() instead
 */
export declare function ugcGetQueryResult(): number;
/**
 * No comment provided
 *
 * Hash: 0xE0A6138401BCB837 | Since: 323
 * @deprecated Use network.ugcGetContentNum() instead
 */
export declare function ugcGetContentNum(): number;
/**
 * No comment provided
 *
 * Hash: 0x769951E2455E2EB5 | Since: 323
 * @deprecated Use network.ugcGetContentTotal() instead
 */
export declare function ugcGetContentTotal(): number;
/**
 * No comment provided
 *
 * Hash: 0x3A17A27D75C74887 | Since: 323
 * @deprecated Use network.ugcGetContentHash() instead
 */
export declare function ugcGetContentHash(): number;
/**
 * No comment provided
 *
 * Hash: 0xBA96394A0EECFA65 | Since: 323
 * @deprecated Use network.ugcClearQueryResults() instead
 */
export declare function ugcClearQueryResults(): void;
/**
 * No comment provided
 *
 * Hash: 0xCD67AD041A394C9C | Since: 323
 * @deprecated Use network.ugcGetContentUserId() instead
 */
export declare function ugcGetContentUserId(): string;
/**
 * No comment provided
 *
 * Hash: 0x584770794D758C18 | Since: 323
 * @deprecated Use network.ugcGetContentCreatorGamerHandle() instead
 */
export declare function ugcGetContentCreatorGamerHandle(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x8C8D2739BA44AF0F | Since: 323
 * @deprecated Use network.ugcGetContentCreatedByLocalPlayer() instead
 */
export declare function ugcGetContentCreatedByLocalPlayer(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x703F12425ECA8BF5 | Since: 323
 * @deprecated Use network.ugcGetContentUserName() instead
 */
export declare function ugcGetContentUserName(): string;
/**
 * No comment provided
 *
 * Hash: 0xAEAB987727C5A8A4 | Since: 323
 * @deprecated Use network.ugcGetContentIsUsingScNickname() instead
 */
export declare function ugcGetContentIsUsingScNickname(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA7BAB11E7C9C6C5A | Since: 323
 * @deprecated Use network.ugcGetContentCategory() instead
 */
export declare function ugcGetContentCategory(): number;
/**
 * Return the mission id of a job.
 *
 * Hash: 0x55AA95F481D694D2 | Since: 323
 * @deprecated Use network.ugcGetContentId() instead
 */
export declare function ugcGetContentId(): string;
/**
 * Return the root content id of a job.
 *
 * Hash: 0xC0173D6BFF4E0348 | Since: 323
 * @deprecated Use network.ugcGetRootContentId() instead
 */
export declare function ugcGetRootContentId(): string;
/**
 * No comment provided
 *
 * Hash: 0xBF09786A7FCAB582 | Since: 323
 * @deprecated Use network.ugcGetContentName() instead
 */
export declare function ugcGetContentName(): string;
/**
 * No comment provided
 *
 * Hash: 0x4A56710BAB5C4DB4 | Since: 3407
 * @deprecated Use network.ugcGetContentDescription(index) instead
 */
export declare function ugcGetContentDescription(index: number): string;
/**
 * No comment provided
 *
 * Hash: 0x7CF0448787B23758 | Since: 323
 * @deprecated Use network.ugcGetContentDescriptionHash() instead
 */
export declare function ugcGetContentDescriptionHash(): number;
/**
 * No comment provided
 *
 * Hash: 0xBAF6BABF9E7CCC13 | Since: 323
 * @deprecated Use network.ugcGetContentPath() instead
 */
export declare function ugcGetContentPath(): string;
/**
 * No comment provided
 *
 * Hash: 0xCFD115B373C0DF63 | Since: 323
 * @deprecated Use network.ugcGetContentUpdatedDate() instead
 */
export declare function ugcGetContentUpdatedDate(): any;
/**
 * No comment provided
 *
 * Hash: 0x37025B27D9B658B1 | Since: 323
 * @deprecated Use network.ugcGetContentFileVersion() instead
 */
export declare function ugcGetContentFileVersion(): number;
/**
 * No comment provided
 *
 * Hash: 0x1D610EB0FEA716D9 | Since: 323
 * @deprecated Use network.ugcGetContentHasLoResPhoto() instead
 */
export declare function ugcGetContentHasLoResPhoto(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7FCC39C46C3C03BD | Since: 323
 * @deprecated Use network.ugcGetContentHasHiResPhoto() instead
 */
export declare function ugcGetContentHasHiResPhoto(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x32DD916F3F7C9672 | Since: 323
 * @deprecated Use network.ugcGetContentLanguage() instead
 */
export declare function ugcGetContentLanguage(): number;
/**
 * No comment provided
 *
 * Hash: 0x3054F114121C21EA | Since: 323
 * @deprecated Use network.ugcGetContentIsPublished() instead
 */
export declare function ugcGetContentIsPublished(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA9240A96C74CCA13 | Since: 323
 * @deprecated Use network.ugcGetContentIsVerified() instead
 */
export declare function ugcGetContentIsVerified(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1ACCFBA3D8DAB2EE | Since: 323
 * @deprecated Use network.ugcGetContentRating() instead
 */
export declare function ugcGetContentRating(): number;
/**
 * No comment provided
 *
 * Hash: 0x759299C5BB31D2A9 | Since: 323
 * @deprecated Use network.ugcGetContentRatingCount() instead
 */
export declare function ugcGetContentRatingCount(): number;
/**
 * No comment provided
 *
 * Hash: 0x87E5C46C187FE0AE | Since: 323
 * @deprecated Use network.ugcGetContentRatingPositiveCount() instead
 */
export declare function ugcGetContentRatingPositiveCount(): number;
/**
 * No comment provided
 *
 * Hash: 0x4E548C0D7AE39FF9 | Since: 323
 * @deprecated Use network.ugcGetContentRatingNegativeCount() instead
 */
export declare function ugcGetContentRatingNegativeCount(): number;
/**
 * No comment provided
 *
 * Hash: 0x70EA8DA57840F9BE | Since: 323
 * @deprecated Use network.ugcGetContentHasPlayerRecord() instead
 */
export declare function ugcGetContentHasPlayerRecord(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x993CBE59D350D225 | Since: 323
 * @deprecated Use network.ugcGetContentHasPlayerBookmarked() instead
 */
export declare function ugcGetContentHasPlayerBookmarked(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x171DF6A0C07FB3DC | Since: 323
 * @deprecated Use network.ugcRequestContentDataFromIndex() instead
 */
export declare function ugcRequestContentDataFromIndex(): number;
/**
 * No comment provided
 *
 * Hash: 0x7FD2990AF016795E | Since: 323
 * @deprecated Use network.ugcRequestContentDataFromParams(contentTypeName, contentId) instead
 */
export declare function ugcRequestContentDataFromParams(contentTypeName: string, contentId: string): number;
/**
 * No comment provided
 *
 * Hash: 0x5E0165278F6339EE | Since: 323
 * @deprecated Use network.ugcRequestCachedDescription() instead
 */
export declare function ugcRequestCachedDescription(): number;
/**
 * No comment provided
 *
 * Hash: 0x2D5DC831176D0114 | Since: 323
 * @deprecated Use network.ugcIsDescriptionRequestInProgress() instead
 */
export declare function ugcIsDescriptionRequestInProgress(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEBFA8D50ADDC54C4 | Since: 323
 * @deprecated Use network.ugcHasDescriptionRequestFinished() instead
 */
export declare function ugcHasDescriptionRequestFinished(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x162C23CA83ED0A62 | Since: 323
 * @deprecated Use network.ugcDidDescriptionRequestSucceed() instead
 */
export declare function ugcDidDescriptionRequestSucceed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x40F7E66472DF3E5C | Since: 323
 * @deprecated Use network.ugcGetCachedDescription() instead
 */
export declare function ugcGetCachedDescription(): string;
/**
 * No comment provided
 *
 * Hash: 0x5A34CD9C3C5BEC44 | Since: 323
 * @deprecated Use network.ugcReleaseCachedDescription() instead
 */
export declare function ugcReleaseCachedDescription(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x68103E2247887242 | Since: 323
 * @deprecated Use network.ugcReleaseAllCachedDescriptions() instead
 */
export declare function ugcReleaseAllCachedDescriptions(): void;
/**
 * No comment provided
 *
 * Hash: 0xC33E7CBC06EC1A8D | Since: 3095
 * @deprecated Use network.ugcHasPermissionToWrite() instead
 */
export declare function ugcHasPermissionToWrite(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1DE0F5F50D723CAA | Since: 323
 * @deprecated Use network.ugcPublish(contentId, baseContentId, contentTypeName) instead
 */
export declare function ugcPublish(contentId: string, baseContentId: string, contentTypeName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x274A1519DFC1094F | Since: 323
 * @deprecated Use network.ugcSetBookmarked(contentId, bookmarked, contentTypeName) instead
 */
export declare function ugcSetBookmarked(contentId: string, bookmarked: boolean, contentTypeName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD05D1A6C74DA3498 | Since: 323
 * @deprecated Use network.ugcSetDeleted() instead
 */
export declare function ugcSetDeleted(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x45E816772E93A9DB | Since: 323
 * @deprecated Use network.ugcIsModifying() instead
 */
export declare function ugcIsModifying(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x299EF3C576773506 | Since: 323
 * @deprecated Use network.ugcHasModifyFinished() instead
 */
export declare function ugcHasModifyFinished(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x793FF272D5B365F4 | Since: 323
 * @deprecated Use network.ugcDidModifySucceed() instead
 */
export declare function ugcDidModifySucceed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5A0A3D1A186A5508 | Since: 323
 * @deprecated Use network.ugcGetModifyResult() instead
 */
export declare function ugcGetModifyResult(): number;
/**
 * No comment provided
 *
 * Hash: 0xA1E5E0204A6FCC70 | Since: 323
 * @deprecated Use network.ugcClearModifyResult() instead
 */
export declare function ugcClearModifyResult(): void;
/**
 * No comment provided
 *
 * Hash: 0xB746D20B17F2A229 | Since: 323
 * @deprecated Use network.ugcGetCreatorsByUserId() instead
 */
export declare function ugcGetCreatorsByUserId(): [boolean, any, any];
/**
 * No comment provided
 *
 * Hash: 0x63B406D7884BFA95 | Since: 323
 * @deprecated Use network.ugcHasQueryCreatorsFinished() instead
 */
export declare function ugcHasQueryCreatorsFinished(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4D02279C83BE69FE | Since: 323
 * @deprecated Use network.ugcDidQueryCreatorsSucceed() instead
 */
export declare function ugcDidQueryCreatorsSucceed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x597F8DBA9B206FC7 | Since: 323
 * @deprecated Use network.ugcGetCreatorNum() instead
 */
export declare function ugcGetCreatorNum(): number;
/**
 * No comment provided
 *
 * Hash: 0x5CAE833B0EE0C500 | Since: 323
 * @deprecated Use network.ugcLoadOfflineQuery() instead
 */
export declare function ugcLoadOfflineQuery(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x61A885D3F7CFEE9A | Since: 323
 * @deprecated Use network.ugcClearOfflineQuery() instead
 */
export declare function ugcClearOfflineQuery(): void;
/**
 * No comment provided
 *
 * Hash: 0xF98DDE0A8ED09323 | Since: 323
 * @deprecated Use network.ugcSetQueryDataFromOffline() instead
 */
export declare function ugcSetQueryDataFromOffline(): void;
/**
 * No comment provided
 *
 * Hash: 0xFD75DABC0957BF33 | Since: 323
 * @deprecated Use network.ugcSetUsingOfflineContent() instead
 */
export declare function ugcSetUsingOfflineContent(): void;
/**
 * No comment provided
 *
 * Hash: 0xF53E48461B71EECB | Since: 323
 * @deprecated Use network.ugcIsLanguageSupported() instead
 */
export declare function ugcIsLanguageSupported(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x098AB65B9ED9A9EC | Since: 323
 * @deprecated Use network.facebookPostCompletedHeist(heistName, cashEarned, xpEarned) instead
 */
export declare function facebookPostCompletedHeist(heistName: string, cashEarned: number, xpEarned: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDC48473142545431 | Since: 323
 * @deprecated Use network.facebookPostCreateCharacter() instead
 */
export declare function facebookPostCreateCharacter(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0AE1F1653B554AB9 | Since: 323
 * @deprecated Use network.facebookPostCompletedMilestone(milestoneId) instead
 */
export declare function facebookPostCompletedMilestone(milestoneId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x62B9FEC9A11F10EF | Since: 323
 * @deprecated Use network.facebookHasPostCompleted() instead
 */
export declare function facebookHasPostCompleted(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA75E2B6733DA5142 | Since: 323
 * @deprecated Use network.facebookDidPostSucceed() instead
 */
export declare function facebookDidPostSucceed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x43865688AE10F0D7 | Since: 323
 * @deprecated Use network.facebookCanPostToFacebook() instead
 */
export declare function facebookCanPostToFacebook(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x16160DA74A8E74A2 | Since: 323
 * @deprecated Use network.textureDownloadRequest(filePath, name) instead
 */
export declare function textureDownloadRequest(filePath: string, name: string): [number, any];
/**
 * No comment provided
 *
 * Hash: 0x0B203B4AFDE53A4F | Since: 323
 * @deprecated Use network.titleTextureDownloadRequest(filePath, name) instead
 */
export declare function titleTextureDownloadRequest(filePath: string, name: string): number;
/**
 * No comment provided
 *
 * Hash: 0x308F96458B7087CC | Since: 323
 * @deprecated Use network.ugcTextureDownloadRequest() instead
 */
export declare function ugcTextureDownloadRequest(): number;
/**
 * No comment provided
 *
 * Hash: 0x487EB90B98E9FB19 | Since: 323
 * @deprecated Use network.textureDownloadRelease() instead
 */
export declare function textureDownloadRelease(): void;
/**
 * No comment provided
 *
 * Hash: 0x5776ED562C134687 | Since: 323
 * @deprecated Use network.textureDownloadHasFailed() instead
 */
export declare function textureDownloadHasFailed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3448505B6E35262D | Since: 323
 * @deprecated Use network.textureDownloadGetName() instead
 */
export declare function textureDownloadGetName(): string;
/**
 * 0 = succeeded
 * 1 = pending
 * 2 = failed
 *
 * Hash: 0x8BD6C6DEA20E82C6 | Since: 323
 * @deprecated Use network.getStatusOfTextureDownload() instead
 */
export declare function getStatusOfTextureDownload(): number;
/**
 * Returns true if profile setting 901 is set to true and sets it to false.
 *
 * Hash: 0x60EDD13EB3AC1FF3 | Since: 323
 * @deprecated Use network.checkRosLinkWentdownNotNet() instead
 */
export declare function networkCheckRosLinkWentdownNotNet(): boolean;
/**
 * Returns true if the NAT type is Strict (3) and a certain number of connections have failed.
 *
 * Hash: 0x82A2B386716608F1 | Since: 393
 * @deprecated Use network.shouldShowStrictNatWarning() instead
 */
export declare function networkShouldShowStrictNatWarning(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEFFB25453D8600F9 | Since: 323
 * @deprecated Use network.isCableConnected() instead
 */
export declare function networkIsCableConnected(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x66B59CFFD78467AF | Since: 323
 * @deprecated Use network.haveScsPrivateMsgPriv() instead
 */
export declare function networkHaveScsPrivateMsgPriv(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x606E4D3E3CCCF3EB | Since: 323
 * @deprecated Use network.haveRosSocialClubPriv() instead
 */
export declare function networkHaveRosSocialClubPriv(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8020A73847E0CA7D | Since: 323
 * @deprecated Use network.haveRosBannedPriv() instead
 */
export declare function networkHaveRosBannedPriv(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA0AD7E2AF5349F61 | Since: 323
 * @deprecated Use network.haveRosCreateTicketPriv() instead
 */
export declare function networkHaveRosCreateTicketPriv(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5F91D5D0B36AA310 | Since: 323
 * @deprecated Use network.haveRosMultiplayerPriv() instead
 */
export declare function networkHaveRosMultiplayerPriv(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x422D396F80A96547 | Since: 323
 * @deprecated Use network.haveRosLeaderboardWritePriv() instead
 */
export declare function networkHaveRosLeaderboardWritePriv(): boolean;
/**
 * index is always 18 in scripts
 *
 * Hash: 0xA699957E60D80214 | Since: 323
 * @deprecated Use network.hasRosPrivilege(index) instead
 */
export declare function networkHasRosPrivilege(index: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC22912B1D85F26B1 | Since: 323
 * @deprecated Use network.hasRosPrivilegeEndDate(privilege) instead
 */
export declare function networkHasRosPrivilegeEndDate(privilege: number): [boolean, number, any];
/**
 * No comment provided
 *
 * Hash: 0x593570C289A77688 | Since: 323
 * @deprecated Use network.hasRosPrivilegePlayedLastGen() instead
 */
export declare function networkHasRosPrivilegePlayedLastGen(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x91B87C55093DE351 | Since: 323
 * @deprecated Use network.hasRosPrivilegeSpecialEditionContent() instead
 */
export declare function networkHasRosPrivilegeSpecialEditionContent(): boolean;
/**
 * Checks for privilege 29
 *
 * Hash: 0xD9719341663C385F | Since: 3095
 * @deprecated Use network.hasRosPrivilegeMpTextCommunication() instead
 */
export declare function networkHasRosPrivilegeMpTextCommunication(): boolean;
/**
 * Checks for privilege 30
 *
 * Hash: 0x8956A309BE90057C | Since: 3095
 * @deprecated Use network.hasRosPrivilegeMpVoiceCommunication() instead
 */
export declare function networkHasRosPrivilegeMpVoiceCommunication(): boolean;
/**
 * Checks for privilege 31
 *
 * Hash: 0x9BA54B3CFB82ADDD | Since: 3258
 * @deprecated Use network.hasRosPrivilegeReporting() instead
 */
export declare function networkHasRosPrivilegeReporting(): boolean;
/**
 * Always returns -1. Seems to be XB1 specific.
 *
 * Hash: 0xDEB2B99A1AF1A2A6 | Since: 323
 * @deprecated Use network.startUserContentPermissionsCheck() instead
 */
export declare function networkStartUserContentPermissionsCheck(): [number, any];
/**
 * No comment provided
 *
 * Hash: 0x9465E683B12D3F6B | Since: 323
 * @deprecated Use network.skipRadioResetNextClose() instead
 */
export declare function networkSkipRadioResetNextClose(): void;
/**
 * No comment provided
 *
 * Hash: 0xCA59CCAE5D01E4CE | Since: 1734
 * @deprecated Use network.skipRadioResetNextOpen() instead
 */
export declare function networkSkipRadioResetNextOpen(): void;
/**
 * Returns true if dinput8.dll is present in the game directory.
 * You will get following error message if that is true: "You are attempting to access GTA Online servers with an altered version of the game."
 *
 * Hash: 0x659CF2EF7F550C4F | Since: 1011
 * @deprecated Use network.skipRadioWarning() instead
 */
export declare function networkSkipRadioWarning(): boolean;
/**
 * NETWORK_F[I-O]
 *
 * Hash: 0xB7C7F6AD6424304B | Since: 323
 * @deprecated Use network.forceLocalPlayerScarSync() instead
 */
export declare function networkForceLocalPlayerScarSync(): void;
/**
 * No comment provided
 *
 * Hash: 0xC505036A35AFD01B | Since: 323
 * @deprecated Use network.disableLeaveRemotePedBehind(toggle) instead
 */
export declare function networkDisableLeaveRemotePedBehind(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x267C78C60E806B9A | Since: 323
 * @deprecated Use network.allowRemoteAttachmentModification(entity, toggle) instead
 */
export declare function networkAllowRemoteAttachmentModification(entity: number | Entity, toggle: boolean): void;
/**
 * Does nothing (it's a nullsub).
 *
 * Hash: 0x6BFF5F84102DF80A | Since: 323
 * @deprecated Use network.showChatRestrictionMsc(player) instead
 */
export declare function networkShowChatRestrictionMsc(player: number | string | Player): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0x5C497525F803486B | Since: 323
 * @deprecated Use network.showPsnUgcRestriction() instead
 */
export declare function networkShowPsnUgcRestriction(): void;
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0x6FB7BB3607D27FA2 | Since: 323
 * @deprecated Use network.isTitleUpdateRequired() instead
 */
export declare function networkIsTitleUpdateRequired(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x45A83257ED02D9BC | Since: 323
 * @deprecated Use network.quitMpToDesktop() instead
 */
export declare function networkQuitMpToDesktop(): void;
/**
 * No comment provided
 *
 * Hash: 0x16D3D49902F697BB | Since: 323
 * @deprecated Use network.isConnectedViaRelay(player) instead
 */
export declare function networkIsConnectedViaRelay(player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD414BE129BB81B32 | Since: 323
 * @deprecated Use network.getAverageLatency(player) instead
 */
export declare function networkGetAverageLatency(player: number | string | Player): number;
/**
 * Same as NETWORK_GET_AVERAGE_LATENCY
 *
 * Hash: 0x0E3A041ED6AC2B45 | Since: 323
 * @deprecated Use network.getAveragePing(player) instead
 */
export declare function networkGetAveragePing(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x350C23949E43686C | Since: 323
 * @deprecated Use network.getAveragePacketLoss(player) instead
 */
export declare function networkGetAveragePacketLoss(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xFF8FCF9FFC458A1C | Since: 323
 * @deprecated Use network.getNumUnackedReliables(player) instead
 */
export declare function networkGetNumUnackedReliables(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x3765C3A3E8192E10 | Since: 323
 * @deprecated Use network.getUnreliableResendCount(player) instead
 */
export declare function networkGetUnreliableResendCount(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x52C1EADAF7B10302 | Since: 323
 * @deprecated Use network.getHighestReliableResendCount(player) instead
 */
export declare function networkGetHighestReliableResendCount(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x5626D9D6810730D5 | Since: 350
 * @deprecated Use network.reportCodeTamper() instead
 */
export declare function networkReportCodeTamper(): void;
/**
 * No comment provided
 *
 * Hash: 0x64D779659BC37B19 | Since: 393
 * @deprecated Use network.getLastEntityPosReceivedOverNetwork(entity) instead
 */
export declare function networkGetLastEntityPosReceivedOverNetwork(entity: number | Entity): Vector3;
/**
 * Returns the coordinates of another player.
 * Does not work if you enter your own player id as p0 (will return `(0.0, 0.0, 0.0)` in that case).
 *
 * Hash: 0x125E6D638B8605D4 | Since: 393
 * @deprecated Use network.getLastPlayerPosReceivedOverNetwork(player) instead
 */
export declare function networkGetLastPlayerPosReceivedOverNetwork(player: number | string | Player): Vector3;
/**
 * Used by NetBlender
 *
 * Hash: 0x33DE49EDF4DDE77A | Since: 1103
 * @deprecated Use network.getLastVelReceivedOverNetwork(entity) instead
 */
export declare function networkGetLastVelReceivedOverNetwork(entity: number | Entity): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xAA5FAFCD2C5F5E47 | Since: 1103
 * @deprecated Use network.getPredictedVelocity(entity, maxSpeedToPredict) instead
 */
export declare function networkGetPredictedVelocity(entity: number | Entity, maxSpeedToPredict: number): Vector3;
/**
 * Does nothing (it's a nullsub).
 *
 * Hash: 0xAEDF1BC1C133D6E3 | Since: 323
 * @deprecated Use network.dumpNetIfConfig() instead
 */
export declare function networkDumpNetIfConfig(): void;
/**
 * Does nothing (it's a nullsub).
 *
 * Hash: 0x2555CF7DA5473794 | Since: 323
 * @deprecated Use network.getSignallingInfo() instead
 */
export declare function networkGetSignallingInfo(): any;
/**
 * Does nothing (it's a nullsub).
 *
 * Hash: 0x6FD992C4A1C1B986 | Since: 323
 * @deprecated Use network.getNetStatisticsInfo() instead
 */
export declare function networkGetNetStatisticsInfo(): any;
/**
 * No comment provided
 *
 * Hash: 0xDB663CC9FF3407A9 | Since: 1734
 * @deprecated Use network.getPlayerAccountId(player) instead
 */
export declare function networkGetPlayerAccountId(player: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xC1447451DDB512F0 | Since: 2372
 * @deprecated Use network.ugcNav() instead
 */
export declare function networkUgcNav(): void;
/**
 * enum eNetworkGameRestartReason
 * {
 * BE_RESTART_SERVICE_NOT_RUNNING = 1, 	// BattlEye service not running
 * BE_RESTART_SERVICE_NEEDS_UPDATE, 		// BattlEye service needs an update
 * BE_RESTART_UNKNOWN_REASON,				// Unknown BattlEye reason
 * BE_RESTART_EF_DISABLED_WITH_BE,			// BattlEye Enforcement Flag is disabled, but BattlEye is active
 * BE_RESTART_EF_ENABLED_NO_BE,			// BattlEye Enforcement Flag is enabled, but BattlEye is not active
 * BE_RESTART_BE_MODULES_FAILED_TO_LOAD,	// BattlEye modules failed to load
 * NUM_NETWORK_GAME_RESTART_REASONS
 * };
 *
 * Hash: 0x7F7E8401F81CB65B | Since: 3323
 * @deprecated Use network.getGameRestartReason() instead
 */
export declare function networkGetGameRestartReason(): number;
/**
 * If the restart reason is 4 (BE_RESTART_EF_DISABLED_WITH_BE), will cause the game to exit with exit code 622011. Otherwise exits with code 622010. Has no effect when a restart hasn't been requested (reason == 0 or reason > 6).
 *
 * Note that this 'confirmation' itself does not restart the game, a call to QUIT_GAME or similar is required afterwards.
 *
 * Hash: 0x0A141818CA2311AD | Since: 3323
 * @deprecated Use network.confirmGameRestart() instead
 */
export declare function networkConfirmGameRestart(): void;
/**
 * Returns the restart reason as a string, see _NETWORK_GET_GAME_RESTART_REASON. Returns a null pointer when a restart hasn't been requested (reason == 0 or reason > 6).
 *
 * Hash: 0x47B11D51FC50A259 | Since: 3323
 * @deprecated Use network.getGameRestartReasonMessageLabel() instead
 */
export declare function networkGetGameRestartReasonMessageLabel(): string;
/**
 * 0x20211000 = HUD_BE_ERROR_FAILED_UNKNOWN
 * 0x20212000 = HUD_BE_ERROR_FAILED_CLIENT_INIT
 * 0x20213000 = HUD_BE_ERROR_FAILED_SERVER_INIT
 * 0x20214000 = HUD_BE_ERROR_FAILED_AUTH_ATTEMPTS
 * 0x20215000 = HUD_BE_ERROR_UNTRUSTED_HOST
 * 0x20216000 = HUD_BE_ERROR_KICKED
 * 0x20217000 = HUD_BE_ERROR_BANNED
 * 0x50140000 = HUD_BE_BLOCK_BANNED
 *
 * Note: an invalid error code returns a null pointer!
 *
 * Hash: 0xCBA50F371E45B90D | Since: 3323
 * @deprecated Use network.getBattleyeErrorMessageLabel(errorCode) instead
 */
export declare function networkGetBattleyeErrorMessageLabel(errorCode: number): string;
/**
 * List of object models that can be created without any additional effort like making sure ytyp is loaded etc: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ObjectList.ini
 *
 * Hash: 0x509D5878EB39E842 | Since: 323
 * @deprecated Use object.create(modelHash, pos, isNetwork, bScriptHostObj, dynamic) instead
 */
export declare function createObject(modelHash: number | string, pos: Vector3, isNetwork: boolean, bScriptHostObj: boolean, dynamic: boolean): number;
/**
 * List of object models that can be created without any additional effort like making sure ytyp is loaded etc: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ObjectList.ini
 *
 * Hash: 0x9A294B2138ABB884 | Since: 323
 * @deprecated Use object.createNoOffset(modelHash, pos, isNetwork, bScriptHostObj, dynamic) instead
 */
export declare function createObjectNoOffset(modelHash: number | string, pos: Vector3, isNetwork: boolean, bScriptHostObj: boolean, dynamic: boolean): number;
/**
 * Deletes the specified object, then sets the handle pointed to by the pointer to NULL.
 *
 * Hash: 0x539E0AE3E6634B9F | Since: 323
 * @deprecated Use object.deleteObject(obj) instead
 */
export declare function deleteObject(obj: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x58A850EAEE20FAA3 | Since: 323
 * @deprecated Use object.placeOnGroundProperly(_object) instead
 */
export declare function placeObjectOnGroundProperly(_object: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD76EEEF746057FD6 | Since: 505
 * @deprecated Use object.placeOnGroundOrObjectProperly(_object) instead
 */
export declare function placeObjectOnGroundOrObjectProperly(_object: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAFE24E4D29249E4A | Since: 1734
 * @deprecated Use object.rotate(_object) instead
 */
export declare function rotateObject(_object: number | Object): boolean;
/**
 * Returns true if the object has finished moving.
 *
 * If false, moves the object towards the specified X, Y and Z coordinates with the specified X, Y and Z speed.
 *
 * See also: https://gtagmodding.com/opcode-database/opcode/034E/
 * Has to be looped until it returns true.
 *
 * Hash: 0x2FDFF4107B8C1147 | Since: 323
 * @deprecated Use object.slide(_object, toX, toY, toZ, speedX, speedY, speedZ, collision) instead
 */
export declare function slideObject(_object: number | Object, toX: number, toY: number, toZ: number, speedX: number, speedY: number, speedZ: number, collision: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8A7391690F5AFD81 | Since: 323
 * @deprecated Use object.setTargettable(_object, targettable) instead
 */
export declare function setObjectTargettable(_object: number | Object, targettable: boolean): void;
/**
 * Sets the 34th and 35th object flags related to player peds.
 *
 * Hash: 0xB39F03368DB0CAA2 | Since: 3258
 * @deprecated Use object.setTargettableByPlayer(_object, setFlag34, setFlag35) instead
 */
export declare function setObjectTargettableByPlayer(_object: number | Object, setFlag34: boolean, setFlag35: boolean): void;
/**
 * Overrides a flag on the object which determines if the object should be avoided by a vehicle in task CTaskVehicleGoToPointWithAvoidanceAutomobile.
 *
 * Hash: 0x77F33F2CCF64B3AA | Since: 323
 * @deprecated Use object.setForceVehiclesToAvoid(_object, toggle) instead
 */
export declare function setObjectForceVehiclesToAvoid(_object: number | Object, toggle: boolean): void;
/**
 * Has 8 params in the latest patches.
 *
 * isMission - if true doesn't return mission objects
 *
 * Hash: 0xE143FA2249364369 | Since: 323
 * @deprecated Use object.getClosestOfType(pos, radius, modelHash, isMission) instead
 */
export declare function getClosestObjectOfType(pos: Vector3, radius: number, modelHash: number | string, isMission: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x8ABFB70C49CC43E2 | Since: 323
 * @deprecated Use object.hasBeenBroken(_object) instead
 */
export declare function hasObjectBeenBroken(_object: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0x761B0E69AC4D007E | Since: 323
 * @deprecated Use object.hasClosestOfTypeBeenBroken(modelHash) instead
 */
export declare function hasClosestObjectOfTypeBeenBroken(modelHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x46494A2475701343 | Since: 323
 * @deprecated Use object.hasClosestOfTypeBeenCompletelyDestroyed(pos, radius, modelHash) instead
 */
export declare function hasClosestObjectOfTypeBeenCompletelyDestroyed(pos: Vector3, radius: number, modelHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2542269291C6AC84 | Since: 1180
 * @deprecated Use object.getHasBeenCompletelyDestroyed() instead
 */
export declare function getHasObjectBeenCompletelyDestroyed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x163E252DE035A133 | Since: 323
 * @deprecated Use object.getOffsetFromCoordAndHeadingInWorldCoords(pos, heading, xOffset, yOffset, zOffset) instead
 */
export declare function getOffsetFromCoordAndHeadingInWorldCoords(pos: Vector3, heading: number, xOffset: number, yOffset: number, zOffset: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x163F8B586BC95F2A | Since: 323
 * @deprecated Use object.getCoordsAndRotationOfClosestOfType(pos, radius, modelHash, rotationOrder) instead
 */
export declare function getCoordsAndRotationOfClosestObjectOfType(pos: Vector3, radius: number, modelHash: number | string, rotationOrder: number): [boolean, Vector3, Vector3];
/**
 * Hardcoded to not work in multiplayer.
 *
 *
 * Used to lock/unlock doors to interior areas of the game.
 *
 * (Possible) Door Types:
 *
 * https://pastebin.com/9S2m3qA4
 *
 * Heading is either 1, 0 or -1 in the scripts. Means default closed(0) or opened either into(1) or out(-1) of the interior.
 * Locked means that the heading is locked.
 * p6 is always 0.
 *
 * 225 door types, model names and coords found in stripclub.c4:
 * https://pastebin.com/gywnbzsH
 *
 * get door info: https://pastebin.com/i14rbekD
 *
 * Hash: 0xF82D8F1926A02C3D | Since: 323
 * @deprecated Use object.setStateOfClosestDoorOfType(_type, pos, locked, heading) instead
 */
export declare function setStateOfClosestDoorOfType(_type: number | string, pos: Vector3, locked: boolean, heading: number): void;
/**
 * locked is 0 if no door is found
 * locked is 0 if door is unlocked
 * locked is 1 if door is found and unlocked.
 *
 * -------------
 * the locked bool is either 0(unlocked)(false) or 1(locked)(true)
 *
 * Hash: 0xEDC1A5B84AEF33FF | Since: 323
 * @deprecated Use object.getStateOfClosestDoorOfType(_type, pos) instead
 */
export declare function getStateOfClosestDoorOfType(_type: number | string, pos: Vector3): [boolean, number];
/**
 * Hardcoded not to work in multiplayer environments.
 * When you set locked to 0 the door open and to 1 the door close
 * `OBJECT::SET_LOCKED_UNSTREAMED_IN_DOOR_OF_TYPE(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 0, 0.0, 50.0, 0);  //door open`
 *
 * `OBJECT::SET_LOCKED_UNSTREAMED_IN_DOOR_OF_TYPE(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 1, 0.0, 50.0, 0);  //door close`
 *
 * Hash: 0x9B12F9A24FABEDB0 | Since: 323
 * @deprecated Use object.setLockedUnstreamedInDoorOfType(modelHash, pos, locked, xRotMult, yRotMult, zRotMult) instead
 */
export declare function setLockedUnstreamedInDoorOfType(modelHash: number | string, pos: Vector3, locked: boolean, xRotMult: number, yRotMult: number, zRotMult: number): void;
/**
 * No comment provided
 *
 * Hash: 0x006E4B040ED37EC3 | Since: 1868
 * @deprecated Use object.playAutoStartAnim() instead
 */
export declare function playObjectAutoStartAnim(): void;
/**
 * doorHash has to be unique. scriptDoor false; relies upon getNetworkGameScriptHandler. isLocal On true disables the creation CRequestDoorEvent's in DOOR_SYSTEM_SET_DOOR_STATE.
 * p5 only set to true in single player native scripts.
 * If scriptDoor is true, register the door on the script handler host (note: there's a hardcap on the number of script IDs that can be added to the system at a given time). If scriptDoor and isLocal are both false, the door is considered to be in a "Persists w/o netobj" state.
 *
 * door hashes normally look like PROP_[int]_DOOR_[int] for interior doors and PROP_BUILDING_[int]_DOOR_[int] exterior doors but you can just make up your own hash if you want
 * All doors need to be registered with ADD_DOOR_TO_SYSTEM before they can be manipulated with the door natives and the easiest way to get door models is just find the door in codewalker.
 *
 * Example: AddDoorToSystem("PROP_43_DOOR_0", "hei_v_ilev_fh_heistdoor2", -1456.818, -520.5037, 69.67043, 0, 0, 0)
 *
 * Hash: 0x6F8838D03D1DC226 | Since: 323
 * @deprecated Use object.addDoorToSystem(doorHash, modelHash, pos, scriptDoor, isLocal) instead
 */
export declare function addDoorToSystem(doorHash: number | string, modelHash: number | string, pos: Vector3, scriptDoor: boolean, isLocal: boolean): void;
/**
 * CDoor and CDoorSystemData still internally allocated (and their associations between doorHash, modelHash, and coordinates).
 * Only its NetObj removed and flag ``*(v2 + 192) |= 8u`` (1604 retail) toggled.
 *
 * Hash: 0x464D8E1427156FE4 | Since: 323
 * @deprecated Use object.removeDoorFromSystem(doorHash) instead
 */
export declare function removeDoorFromSystem(doorHash: number | string): void;
/**
 * Lockstates not applied and CNetObjDoor's not created until DOOR_SYSTEM_GET_IS_PHYSICS_LOADED returns true.
 * `requestDoor` on true, and when door system is configured to, i.e., "persists w/o netobj", generate a CRequestDoorEvent.
 * `forceUpdate` on true, forces an update on the door system (same path as netObjDoor_applyDoorStuff)
 * Door lock states:
 * 0: UNLOCKED
 * 1: LOCKED
 * 2: DOORSTATE_FORCE_LOCKED_UNTIL_OUT_OF_AREA
 * 3: DOORSTATE_FORCE_UNLOCKED_THIS_FRAME
 * 4: DOORSTATE_FORCE_LOCKED_THIS_FRAME
 * 5: DOORSTATE_FORCE_OPEN_THIS_FRAME
 * 6: DOORSTATE_FORCE_CLOSED_THIS_FRAME
 *
 * Hash: 0x6BAB9442830C7F53 | Since: 323
 * @deprecated Use object.doorSystemSetDoorState(doorHash, state, requestDoor, forceUpdate) instead
 */
export declare function doorSystemSetDoorState(doorHash: number | string, state: number, requestDoor: boolean, forceUpdate: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x160AA1B32F6139B8 | Since: 323
 * @deprecated Use object.doorSystemGetDoorState(doorHash) instead
 */
export declare function doorSystemGetDoorState(doorHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x4BC2854478F3A749 | Since: 323
 * @deprecated Use object.doorSystemGetDoorPendingState(doorHash) instead
 */
export declare function doorSystemGetDoorPendingState(doorHash: number | string): number;
/**
 * Includes networking check: ownership vs. or the door itself **isn't** networked.
 * `forceUpdate` on true invokes DOOR_SYSTEM_SET_DOOR_STATE otherwise requestDoor is unused.
 *
 * Hash: 0x03C27E13B42A0E82 | Since: 323
 * @deprecated Use object.doorSystemSetAutomaticRate(doorHash, rate, requestDoor, forceUpdate) instead
 */
export declare function doorSystemSetAutomaticRate(doorHash: number | string, rate: number, requestDoor: boolean, forceUpdate: boolean): void;
/**
 * `forceUpdate` on true invokes DOOR_SYSTEM_SET_DOOR_STATE otherwise requestDoor is unused.
 *
 * Hash: 0x9BA001CB45CBF627 | Since: 323
 * @deprecated Use object.doorSystemSetAutomaticDistance(doorHash, distance, requestDoor, forceUpdate) instead
 */
export declare function doorSystemSetAutomaticDistance(doorHash: number | string, distance: number, requestDoor: boolean, forceUpdate: boolean): void;
/**
 * Sets the ajar angle of a door.
 * Ranges from -1.0 to 1.0, and 0.0 is closed / default.
 * `forceUpdate` on true invokes DOOR_SYSTEM_SET_DOOR_STATE otherwise requestDoor is unused.
 *
 * Hash: 0xB6E6FBA95C7324AC | Since: 323
 * @deprecated Use object.doorSystemSetOpenRatio(doorHash, ajar, requestDoor, forceUpdate) instead
 */
export declare function doorSystemSetOpenRatio(doorHash: number | string, ajar: number, requestDoor: boolean, forceUpdate: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE851471AEFC3374F | Since: 1868
 * @deprecated Use object.doorSystemGetAutomaticDistance(doorHash) instead
 */
export declare function doorSystemGetAutomaticDistance(doorHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x65499865FCA6E5EC | Since: 323
 * @deprecated Use object.doorSystemGetOpenRatio(doorHash) instead
 */
export declare function doorSystemGetOpenRatio(doorHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x8562FD8AB1E94D39 | Since: 3407
 * @deprecated Use object.doorSystemGetIsSpringRemoved(doorHash) instead
 */
export declare function doorSystemGetIsSpringRemoved(doorHash: number | string): boolean;
/**
 * Includes networking check: ownership vs. or the door itself **isn't** networked.
 * `forceUpdate` on true invokes DOOR_SYSTEM_SET_DOOR_STATE otherwise requestDoor is unused.
 *
 * Hash: 0xC485E07E4F0B7958 | Since: 323
 * @deprecated Use object.doorSystemSetSpringRemoved(doorHash, removed, requestDoor, forceUpdate) instead
 */
export declare function doorSystemSetSpringRemoved(doorHash: number | string, removed: boolean, requestDoor: boolean, forceUpdate: boolean): void;
/**
 * Includes networking check: ownership vs. or the door itself **isn't** networked.
 *
 * Hash: 0xD9B71952F78A2640 | Since: 323
 * @deprecated Use object.doorSystemSetHoldOpen(doorHash, toggle) instead
 */
export declare function doorSystemSetHoldOpen(doorHash: number | string, toggle: boolean): void;
/**
 * Some property related to gates. Native name between ``DOOR_SYSTEM_SET_AUTOMATIC_RATE`` and ``DOOR_SYSTEM_SET_DOOR_STATE``.
 *
 * Hash: 0xA85A21582451E951 | Since: 323
 * @deprecated Use object.doorSystemSetDoorOpenForRaces(doorHash) instead
 */
export declare function doorSystemSetDoorOpenForRaces(doorHash: number | string): void;
/**
 * `if (OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(doorHash))`
 * {
 * `OBJECT::REMOVE_DOOR_FROM_SYSTEM(doorHash);`
 * }
 *
 * Hash: 0xC153C43EA202C8C1 | Since: 323
 * @deprecated Use object.isDoorRegisteredWithSystem(doorHash) instead
 */
export declare function isDoorRegisteredWithSystem(doorHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC531EE8A1145A149 | Since: 323
 * @deprecated Use object.isDoorClosed(doorHash) instead
 */
export declare function isDoorClosed(doorHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC7F29CA00F46350E | Since: 323
 * @deprecated Use object.openAllBarriersForRace() instead
 */
export declare function openAllBarriersForRace(): void;
/**
 * Clears the fields sets by 0xC7F29CA00F46350E (1604 retail: 0x1424A7A10, 0x1424A7A11) and iterates over the global CDoor's bucket-list.
 * Related to its "Pre-networked state"?
 *
 * Hash: 0x701FDA1E82076BA4 | Since: 323
 * @deprecated Use object.closeAllBarriersForRace() instead
 */
export declare function closeAllBarriersForRace(): void;
/**
 * No comment provided
 *
 * Hash: 0xDF97CDD4FC08FD34 | Since: 323
 * @deprecated Use object.doorSystemGetIsPhysicsLoaded() instead
 */
export declare function doorSystemGetIsPhysicsLoaded(): boolean;
/**
 * Search radius: 0.5
 *
 * Hash: 0x589F80B325CC82C5 | Since: 323
 * @deprecated Use object.doorSystemFindExistingDoor(pos, modelHash) instead
 */
export declare function doorSystemFindExistingDoor(pos: Vector3, modelHash: number | string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x90E47239EA1980B8 | Since: 323
 * @deprecated Use object.isGarageEmpty(garageHash) instead
 */
export declare function isGarageEmpty(garageHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x024A60DEB0EA69F0 | Since: 323
 * @deprecated Use object.isPlayerEntirelyInsideGarage(garageHash, player) instead
 */
export declare function isPlayerEntirelyInsideGarage(garageHash: number | string, player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1761DC5D8471CBAA | Since: 323
 * @deprecated Use object.isPlayerPartiallyInsideGarage(garageHash, player) instead
 */
export declare function isPlayerPartiallyInsideGarage(garageHash: number | string, player: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x85B6C850546FDDE2 | Since: 323
 * @deprecated Use object.areEntitiesEntirelyInsideGarage(garageHash) instead
 */
export declare function areEntitiesEntirelyInsideGarage(garageHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x673ED815D6E323B7 | Since: 323
 * @deprecated Use object.isAnyEntityEntirelyInsideGarage(garageHash) instead
 */
export declare function isAnyEntityEntirelyInsideGarage(garageHash: number | string): boolean;
/**
 * Despite the name, it does work for any entity type.
 *
 * Hash: 0x372EF6699146A1E4 | Since: 323
 * @deprecated Use object.isEntirelyInsideGarage(garageHash, entity) instead
 */
export declare function isObjectEntirelyInsideGarage(garageHash: number | string, entity: number | Entity): boolean;
/**
 * Despite the name, it does work for any entity type.
 *
 * Hash: 0xF0EED5A6BC7B237A | Since: 323
 * @deprecated Use object.isPartiallyInsideGarage(garageHash, entity) instead
 */
export declare function isObjectPartiallyInsideGarage(garageHash: number | string, entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDA05194260CDCDF9 | Since: 678
 * @deprecated Use object.clearGarage(garageHash, isNetwork) instead
 */
export declare function clearGarage(garageHash: number | string, isNetwork: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x190428512B240692 | Since: 323
 * @deprecated Use object.clearsInsideGarage(garageHash, vehicles, peds, objects, isNetwork) instead
 */
export declare function clearObjectsInsideGarage(garageHash: number | string, vehicles: boolean, peds: boolean, objects: boolean, isNetwork: boolean): void;
/**
 * Sets a flag. A valid id is 0x157DC10D
 *
 * Hash: 0x659F9D71F52843F8 | Since: 1290
 * @deprecated Use object.disableTidyingUpInGarage(id, toggle) instead
 */
export declare function disableTidyingUpInGarage(id: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF2E1A7133DD356A6 | Since: 323
 * @deprecated Use object.enableSavingInGarage(garageHash, toggle) instead
 */
export declare function enableSavingInGarage(garageHash: number | string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x66A49D021870FE88 | Since: 323
 * @deprecated Use object.closeSafehouseGarages() instead
 */
export declare function closeSafehouseGarages(): void;
/**
 * p5 is usually 0.
 *
 * Hash: 0xBFA48E2FF417213F | Since: 323
 * @deprecated Use object.doesOfTypeExistAtCoords(pos, radius, hash) instead
 */
export declare function doesObjectOfTypeExistAtCoords(pos: Vector3, radius: number, hash: number | string): boolean;
/**
 * An angled area is an X-Z oriented rectangle with three parameters:
 * 1. origin: the mid-point along a base edge of the rectangle;
 * 2. extent: the mid-point of opposite base edge on the other Z;
 * 3. width: the length of the base edge; (named derived from logging strings ``CNetworkRoadNodeWorldStateData``).
 *
 * The oriented rectangle can then be derived from the direction of the two points (``norm(origin - extent)``), its orthonormal, and the width, e.g:
 * 1. golf_mp https://i.imgur.com/JhsQAK9.png
 * 2. am_taxi https://i.imgur.com/TJWCZaT.jpg
 *
 * Hash: 0x2A70BAE8883E4C81 | Since: 323
 * @deprecated Use object.isPointInAngledArea(pos, x1, y1, z1, x2, y2, z2, width, debug, includeZ) instead
 */
export declare function isPointInAngledArea(pos: Vector3, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, debug: boolean, includeZ: boolean): boolean;
/**
 * Overrides the climbing/blocking flags of the object, used in the native scripts mostly for "prop_dock_bouy_*"
 *
 * Hash: 0x4D89D607CB3DD1D2 | Since: 323
 * @deprecated Use object.setAllowLowLodBuoyancy(_object, toggle) instead
 */
export declare function setObjectAllowLowLodBuoyancy(_object: number | Object, toggle: boolean): void;
/**
 * Adjust the physics parameters of a prop, or otherwise known as "object". This is useful for simulated gravity.
 *
 * Other parameters seem to be unknown.
 *
 * p2: seems to be weight and gravity related. Higher value makes the obj fall faster. Very sensitive?
 * p3: seems similar to p2
 * p4: makes obj fall slower the higher the value
 * p5: similar to p4
 *
 * Hash: 0xF6DF6E90DE7DF90F | Since: 323
 * @deprecated Use object.setPhysicsParams(_object, weight, gravity, buoyancy) instead
 */
export declare function setObjectPhysicsParams(_object: number | Object, weight: number, gravity: number, buoyancy: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB6FBFD079B8D0596 | Since: 323
 * @deprecated Use object.getFragmentDamageHealth() instead
 */
export declare function getObjectFragmentDamageHealth(): number;
/**
 * No comment provided
 *
 * Hash: 0x406137F8EF90EAF5 | Since: 323
 * @deprecated Use object.setActivatePhysicsAsSoonAsItIsUnfrozen(_object, toggle) instead
 */
export declare function setActivateObjectPhysicsAsSoonAsItIsUnfrozen(_object: number | Object, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x397DC58FF00298D1 | Since: 323
 * @deprecated Use object.isAnyNearPoint(pos, range) instead
 */
export declare function isAnyObjectNearPoint(pos: Vector3, range: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8C90FE4B381BA60A | Since: 323
 * @deprecated Use object.isNearPoint(objectHash, pos, range) instead
 */
export declare function isObjectNearPoint(objectHash: number | string, pos: Vector3, range: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4A39DB43E47CF3AA | Since: 323
 * @deprecated Use object.removeHighDetailModel(_object) instead
 */
export declare function removeObjectHighDetailModel(_object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0xE7E4C198B0185900 | Since: 323
 * @deprecated Use object.breakFragmentChild(p0) instead
 */
export declare function breakObjectFragmentChild(p0: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0xE05F6AEEFEB0BB02 | Since: 1180
 * @deprecated Use object.damageFragmentChild() instead
 */
export declare function damageObjectFragmentChild(): void;
/**
 * No comment provided
 *
 * Hash: 0xF9C1681347C8BD15 | Since: 323
 * @deprecated Use object.fixFragment(_object) instead
 */
export declare function fixObjectFragment(_object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0xB252BC036B525623 | Since: 323
 * @deprecated Use object.trackVisibility(_object) instead
 */
export declare function trackObjectVisibility(_object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x8B32ACE6326A7546 | Since: 323
 * @deprecated Use object.isVisible(_object) instead
 */
export declare function isObjectVisible(_object: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC6033D32241F6FB5 | Since: 323
 * @deprecated Use object.setIsSpecialGolfball(_object, toggle) instead
 */
export declare function setObjectIsSpecialGolfball(_object: number | Object, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEB6F1A9B5510A5D2 | Since: 323
 * @deprecated Use object.setTakesDamageFromCollidingWithBuildings() instead
 */
export declare function setObjectTakesDamageFromCollidingWithBuildings(): void;
/**
 * No comment provided
 *
 * Hash: 0xABDABF4E1EDECBFA | Since: 1365
 * @deprecated Use object.allowDamageEventsForNonNetworkeds(value) instead
 */
export declare function allowDamageEventsForNonNetworkedObjects(value: boolean): void;
/**
 * Requires a component_at_*_flsh to be attached to the weapon object
 *
 * Hash: 0xBCE595371A5FBAAF | Since: 323
 * @deprecated Use object.setCutscenesWeaponFlashlightOnThisFrame(_object, toggle) instead
 */
export declare function setCutscenesWeaponFlashlightOnThisFrame(_object: number | Object, toggle: boolean): void;
/**
 * Example:
 * `OBJECT::GET_RAYFIRE_MAP_OBJECT(-809.9619750976562, 170.919, 75.7406997680664, 3.0, "des_tvsmash");`
 *
 * Hash: 0xB48FCED898292E52 | Since: 323
 * @deprecated Use object.getRayfireMap(pos, radius, name) instead
 */
export declare function getRayfireMapObject(pos: Vector3, radius: number, name: string): number;
/**
 * Defines the state of a destructible object.
 * Use the GET_RAYFIRE_MAP_OBJECT native to find an object's handle with its name / coords.
 * State 2 == object just spawned
 * State 4 == Beginning of the animation
 * State 6 == Start animation
 * State 9 == End of the animation
 *
 * Hash: 0x5C29F698D404C5E1 | Since: 323
 * @deprecated Use object.setStateOfRayfireMap(_object, state) instead
 */
export declare function setStateOfRayfireMapObject(_object: number | Object, state: number): void;
/**
 * Get a destructible object's state.
 * Substract 1 to get the real state.
 * See SET_STATE_OF_RAYFIRE_MAP_OBJECT to see the different states
 * For example, if the object just spawned (state 2), the native will return 3.
 *
 * Hash: 0x899BA936634A322E | Since: 323
 * @deprecated Use object.getStateOfRayfireMap(_object) instead
 */
export declare function getStateOfRayfireMapObject(_object: number | Object): number;
/**
 * Returns true if a destructible object with this handle exists, false otherwise.
 *
 * Hash: 0x52AF537A0C5B8AAD | Since: 323
 * @deprecated Use object.doesRayfireMapExist(_object) instead
 */
export declare function doesRayfireMapObjectExist(_object: number | Object): boolean;
/**
 * `object`: The des-object handle to get the animation progress from.
 * Return value is a float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.
 *
 * Hash: 0x260EE4FDBDF4DB01 | Since: 323
 * @deprecated Use object.getRayfireMapAnimPhase(_object) instead
 */
export declare function getRayfireMapObjectAnimPhase(_object: number | Object): number;
/**
 * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
 *
 * Hash: 0xFBA08C503DD5FA58 | Since: 323
 * @deprecated Use object.createPickup(pickupHash, pos, value, modelHash) instead
 */
export declare function createPickup(pickupHash: number | string, pos: Vector3, value: number, modelHash: number | string): any;
/**
 * flags:
 * 8 (1 << 3): place on ground
 * 512 (1 << 9): spin around
 *
 * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
 *
 * Hash: 0x891804727E0A98B7 | Since: 323
 * @deprecated Use object.createPickupRotate(pickupHash, pos, rot, flag, amount, modelHash) instead
 */
export declare function createPickupRotate(pickupHash: number | string, pos: Vector3, rot: Vector3, flag: number, amount: number, modelHash: number | string): any;
/**
 * No comment provided
 *
 * Hash: 0x394CD08E31313C28 | Since: 944
 * @deprecated Use object.forcePickupRotateFaceUp() instead
 */
export declare function forcePickupRotateFaceUp(): void;
/**
 * No comment provided
 *
 * Hash: 0x826D1EE4D1CAFC78 | Since: 505
 * @deprecated Use object.setCustomPickupWeaponHash(pickupHash, pickup) instead
 */
export declare function setCustomPickupWeaponHash(pickupHash: number | string, pickup: any): void;
/**
 * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
 *
 * Hash: 0x673966A0C0FD7171 | Since: 323
 * @deprecated Use object.createAmbientPickup(pickupHash, pos, flags, value, modelHash) instead
 */
export declare function createAmbientPickup(pickupHash: number | string, pos: Vector3, flags: number, value: number, modelHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x9C93764223E29C50 | Since: 2372
 * @deprecated Use object.createNonNetworkedAmbientPickup(pickupHash, pos, flags, value, modelHash) instead
 */
export declare function createNonNetworkedAmbientPickup(pickupHash: number | string, pos: Vector3, flags: number, value: number, modelHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x1E3F1B1B891A2AAA | Since: 573
 * @deprecated Use object.blockPlayersForAmbientPickup() instead
 */
export declare function blockPlayersForAmbientPickup(): void;
/**
 * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
 *
 * Hash: 0x2EAF1FDB2FB55698 | Since: 323
 * @deprecated Use object.createPortablePickup(pickupHash, pos, placeOnGround, modelHash) instead
 */
export declare function createPortablePickup(pickupHash: number | string, pos: Vector3, placeOnGround: boolean, modelHash: number | string): number;
/**
 * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
 *
 * Hash: 0x125494B98A21AAF7 | Since: 323
 * @deprecated Use object.createNonNetworkedPortablePickup(pickupHash, pos, placeOnGround, modelHash) instead
 */
export declare function createNonNetworkedPortablePickup(pickupHash: number | string, pos: Vector3, placeOnGround: boolean, modelHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x8DC39368BDD57755 | Since: 323
 * @deprecated Use object.attachPortablePickupToPed(pickupObject, ped) instead
 */
export declare function attachPortablePickupToPed(pickupObject: number | Object, ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xCF463D1E9A0AECB1 | Since: 323
 * @deprecated Use object.detachPortablePickupFromPed(pickupObject) instead
 */
export declare function detachPortablePickupFromPed(pickupObject: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x5CE2E45A5CE2E45A | Since: 2545
 * @deprecated Use object.forcePortablePickupLastAccessiblePositionSetting(_object) instead
 */
export declare function forcePortablePickupLastAccessiblePositionSetting(_object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x867458251D47CCB2 | Since: 463
 * @deprecated Use object.hidePortablePickupWhenDetached(pickupObject, toggle) instead
 */
export declare function hidePortablePickupWhenDetached(pickupObject: number | Object, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0BF3B3BD47D79C08 | Since: 323
 * @deprecated Use object.setMaxNumPortablePickupsCarriedByPlayer(modelHash, _number) instead
 */
export declare function setMaxNumPortablePickupsCarriedByPlayer(modelHash: number | string, _number: number): void;
/**
 * No comment provided
 *
 * Hash: 0x78857FC65CADB909 | Since: 323
 * @deprecated Use object.setLocalPlayerCanCollectPortablePickups(toggle) instead
 */
export declare function setLocalPlayerCanCollectPortablePickups(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6E16BC2503FF1FF0 | Since: 323
 * @deprecated Use object.getSafePickupCoords(pos) instead
 */
export declare function getSafePickupCoords(pos: Vector3): Vector3;
/**
 * Adds an area that seems to be related to pickup physics behavior.
 * Max amount of areas is 10. Only works in multiplayer.
 *
 * Hash: 0xD4A7A435B3710D05 | Since: 1290
 * @deprecated Use object.addExtendedPickupProbeArea(pos, radius) instead
 */
export declare function addExtendedPickupProbeArea(pos: Vector3, radius: number): void;
/**
 * Clears all areas created by ADD_EXTENDED_PICKUP_PROBE_AREA
 *
 * Hash: 0xB7C6D80FB371659A | Since: 1290
 * @deprecated Use object.clearExtendedPickupProbeAreas() instead
 */
export declare function clearExtendedPickupProbeAreas(): void;
/**
 * No comment provided
 *
 * Hash: 0x225B8B35C88029B3 | Since: 323
 * @deprecated Use object.getPickupCoords(pickup) instead
 */
export declare function getPickupCoords(pickup: any): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x8DCA505A5C196F05 | Since: 1180
 * @deprecated Use object.suppressPickupSoundForPickup() instead
 */
export declare function suppressPickupSoundForPickup(): void;
/**
 * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
 *
 * Hash: 0x27F9D613092159CF | Since: 323
 * @deprecated Use object.removeAllPickupsOfType(pickupHash) instead
 */
export declare function removeAllPickupsOfType(pickupHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x80EC48E6679313F9 | Since: 323
 * @deprecated Use object.hasPickupBeenCollected(pickup) instead
 */
export declare function hasPickupBeenCollected(pickup: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3288D8ACAECD2AB2 | Since: 323
 * @deprecated Use object.removePickup(pickup) instead
 */
export declare function removePickup(pickup: any): void;
/**
 * Spawns one or more money pickups.
 *
 * x: The X-component of the world position to spawn the money pickups at.
 * y: The Y-component of the world position to spawn the money pickups at.
 * z: The Z-component of the world position to spawn the money pickups at.
 * value: The combined value of the pickups (in dollars).
 * amount: The number of pickups to spawn.
 * model: The model to use, or 0 for default money model.
 *
 * Example:
 * CREATE_MONEY_PICKUPS(x, y, z, 1000, 3, 0x684a97ae);
 *
 * Spawns 3 spray cans that'll collectively give $1000 when picked up. (Three spray cans, each giving $334, $334, $332 = $1000).
 *
 * ==============================================
 *
 * Max is 2000 in MP. So if you put the amount to 20, but the value to $400,000 eg. They will only be able to pickup 20 - $2,000 bags. So, $40,000
 *
 * Hash: 0x0589B5E791CE9B2B | Since: 323
 * @deprecated Use object.createMoneyPickups(pos, value, amount, model) instead
 */
export declare function createMoneyPickups(pos: Vector3, value: number, amount: number, model: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xAFC1CA75AD4074D1 | Since: 323
 * @deprecated Use object.doesPickupExist(pickup) instead
 */
export declare function doesPickupExist(pickup: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD9EFB6DBF7DAAEA3 | Since: 323
 * @deprecated Use object.doesPickupObjectExist(pickupObject) instead
 */
export declare function doesPickupObjectExist(pickupObject: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5099BC55630B25AE | Since: 323
 * @deprecated Use object.getPickup(pickup) instead
 */
export declare function getPickupObject(pickup: any): number;
/**
 * No comment provided
 *
 * Hash: 0xFC481C641EBBD27D | Since: 1365
 * @deprecated Use object.isAPickup(_object) instead
 */
export declare function isObjectAPickup(_object: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0378C08504160D0D | Since: 323
 * @deprecated Use object.isAPortablePickup(_object) instead
 */
export declare function isObjectAPortablePickup(_object: number | Object): boolean;
/**
 * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
 *
 * Hash: 0xF9C36251F6E48E33 | Since: 323
 * @deprecated Use object.doesPickupOfTypeExistInArea(pickupHash, pos, radius) instead
 */
export declare function doesPickupOfTypeExistInArea(pickupHash: number | string, pos: Vector3, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x78015C9B4B3ECC9D | Since: 323
 * @deprecated Use object.setPickupRegenerationTime(pickup, duration) instead
 */
export declare function setPickupRegenerationTime(pickup: any, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x758A5C1B3B1E1990 | Since: 1011
 * @deprecated Use object.forcePickupRegenerate() instead
 */
export declare function forcePickupRegenerate(): void;
/**
 * Disabling/enabling a player from getting pickups. From the scripts:
 *
 * `OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);`
 * `OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);`
 * `OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 1);`
 * `OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);`
 * `OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 0);`
 * `OBJECT::SET_PLAYER_PERMITTED_TO_COLLECT_PICKUPS_OF_TYPE(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 1);`
 *
 * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
 *
 * Hash: 0x616093EC6B139DD9 | Since: 323
 * @deprecated Use object.setPlayerPermittedToCollectPickupsOfType(player, pickupHash, toggle) instead
 */
export declare function setPlayerPermittedToCollectPickupsOfType(player: number | string | Player, pickupHash: number | string, toggle: boolean): void;
/**
 * Maximum amount of pickup models that can be disallowed is 30.
 *
 * Hash: 0x88EAEC617CD26926 | Since: 323
 * @deprecated Use object.setLocalPlayerPermittedToCollectPickupsWithModel(modelHash, toggle) instead
 */
export declare function setLocalPlayerPermittedToCollectPickupsWithModel(modelHash: number | string, toggle: boolean): void;
/**
 * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
 *
 * Hash: 0xFDC07C58E8AAB715 | Since: 1734
 * @deprecated Use object.allowAllPlayersToCollectPickupsOfType(pickupHash) instead
 */
export declare function allowAllPlayersToCollectPickupsOfType(pickupHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x53E0DF1A2A3CF0CA | Since: 323
 * @deprecated Use object.setTeamPickup(_object) instead
 */
export declare function setTeamPickupObject(_object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x92AEFB5F6E294023 | Since: 323
 * @deprecated Use object.preventCollectionOfPortablePickup(_object) instead
 */
export declare function preventCollectionOfPortablePickup(_object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x27F248C3FEBFAAD3 | Since: 2372
 * @deprecated Use object.setPickupGlowWhenUncollectable(pickup, toggle) instead
 */
export declare function setPickupObjectGlowWhenUncollectable(pickup: any, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x08BD8BA5BDE2C2FA | Since: 3407
 * @deprecated Use object.setPickupGlowDisabled(pickup, toggle) instead
 */
export declare function setPickupGlowDisabled(pickup: any, toggle: boolean): void;
/**
 * p1 is always 0.51. This native is called before SET_PICKUP_REGENERATION_TIME in all occurances.
 *
 * Hash: 0x0596843B34B95CE5 | Since: 505
 * @deprecated Use object.setPickupGlowOffset(pickup) instead
 */
export declare function setPickupGlowOffset(pickup: any): void;
/**
 * p1 is always -0.2 in scripts and p2 is always true in scripts.
 *
 * Hash: 0xA08FE5E49BDC39DD | Since: 323
 * @deprecated Use object.setPickupObjectGlowOffset(pickup) instead
 */
export declare function setPickupObjectGlowOffset(pickup: any): void;
/**
 * No comment provided
 *
 * Hash: 0x62454A641B41F3C5 | Since: 678
 * @deprecated Use object.setGlowInSameTeam(pickup) instead
 */
export declare function setObjectGlowInSameTeam(pickup: any): void;
/**
 * No comment provided
 *
 * Hash: 0x39A5FB7EAF150840 | Since: 678
 * @deprecated Use object.setPickupArrowMarker(pickup, toggle) instead
 */
export declare function setPickupObjectArrowMarker(pickup: any, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x834344A414C7C85D | Since: 2372
 * @deprecated Use object.allowPickupArrowMarkerWhenUncollectable(pickup, toggle) instead
 */
export declare function allowPickupArrowMarkerWhenUncollectable(pickup: any, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDB41D07A45A6D4B7 | Since: 323
 * @deprecated Use object.getDefaultAmmoForWeaponPickup(pickupHash) instead
 */
export declare function getDefaultAmmoForWeaponPickup(pickupHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x318516E02DE3ECE2 | Since: 323
 * @deprecated Use object.setPickupGenerationRangeMultiplier(multiplier) instead
 */
export declare function setPickupGenerationRangeMultiplier(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB3ECA65C7317F174 | Since: 944
 * @deprecated Use object.getPickupGenerationRangeMultiplier() instead
 */
export declare function getPickupGenerationRangeMultiplier(): number;
/**
 * No comment provided
 *
 * Hash: 0x31F924B53EADDF65 | Since: 323
 * @deprecated Use object.setOnlyAllowAmmoCollectionWhenLow() instead
 */
export declare function setOnlyAllowAmmoCollectionWhenLow(): void;
/**
 * No comment provided
 *
 * Hash: 0x1C1B69FAE509BA97 | Since: 757
 * @deprecated Use object.setPickupUncollectable(pickup, toggle) instead
 */
export declare function setPickupUncollectable(pickup: any, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x858EC9FD25DE04AA | Since: 757
 * @deprecated Use object.setPickupTransparentWhenUncollectable(pickup, toggle) instead
 */
export declare function setPickupTransparentWhenUncollectable(pickup: any, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3ED2B83AB2E82799 | Since: 757
 * @deprecated Use object.setPickupHiddenWhenUncollectable(pickup, toggle) instead
 */
export declare function setPickupHiddenWhenUncollectable(pickup: any, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8881C98A31117998 | Since: 678
 * @deprecated Use object.setPickupObjectTransparentWhenUncollectable(pickup, toggle) instead
 */
export declare function setPickupObjectTransparentWhenUncollectable(pickup: any, toggle: boolean): void;
/**
 * p0 is either 0 or 50 in scripts.
 *
 * Hash: 0x8CFF648FBD7330F1 | Since: 757
 * @deprecated Use object.setPickupAlphaWhenTransparent() instead
 */
export declare function setPickupObjectAlphaWhenTransparent(): void;
/**
 * No comment provided
 *
 * Hash: 0x46F3ADD1E2D5BAF2 | Since: 877
 * @deprecated Use object.setPortablePickupPersist(pickup, toggle) instead
 */
export declare function setPortablePickupPersist(pickup: any, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x641F272B52E2F0F8 | Since: 877
 * @deprecated Use object.allowPortablePickupToMigrateToNonParticipants(pickup, toggle) instead
 */
export declare function allowPortablePickupToMigrateToNonParticipants(pickup: any, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x4C134B4DF76025D0 | Since: 1180
 * @deprecated Use object.forceActivatePhysicsOnUnfixedPickup(pickup, toggle) instead
 */
export declare function forceActivatePhysicsOnUnfixedPickup(pickup: any, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xAA059C615DE9DD03 | Since: 1180
 * @deprecated Use object.allowPickupByNoneParticipant(pickup, toggle) instead
 */
export declare function allowPickupByNoneParticipant(pickup: any, toggle: boolean): void;
/**
 * enum ePickupRewardType
 * {
 * PICKUP_REWARD_TYPE_AMMO = (1 << 0),
 * PICKUP_REWARD_TYPE_BULLET_MP = (1 << 1),
 * PICKUP_REWARD_TYPE_MISSILE_MP = (1 << 2),
 * PICKUP_REWARD_TYPE_GRENADE_LAUNCHER_MP = (1 << 3),
 * PICKUP_REWARD_TYPE_ARMOUR = (1 << 4),
 * PICKUP_REWARD_TYPE_HEALTH = (1 << 5),
 * PICKUP_REWARD_TYPE_HEALTH_VARIABLE = PICKUP_REWARD_TYPE_HEALTH,
 * PICKUP_REWARD_TYPE_MONEY_FIXED = (1 << 6),
 * PICKUP_REWARD_TYPE_MONEY_VARIABLE = PICKUP_REWARD_TYPE_MONEY_FIXED,
 * PICKUP_REWARD_TYPE_WEAPON = (1 << 7),
 * PICKUP_REWARD_TYPE_STAT = (1 << 8),
 * PICKUP_REWARD_TYPE_STAT_VARIABLE = PICKUP_REWARD_TYPE_STAT,
 * PICKUP_REWARD_TYPE_VEHICLE_FIX = (1 << 9),
 * PICKUP_REWARD_TYPE_FIREWORK_MP = (1 << 10),
 * };
 *
 * Hash: 0xF92099527DB8E2A7 | Since: 323
 * @deprecated Use object.suppressPickupRewardType(rewardType, suppress) instead
 */
export declare function suppressPickupRewardType(rewardType: number, suppress: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA2C1F5E92AFE49ED | Since: 323
 * @deprecated Use object.clearAllPickupRewardTypeSuppression() instead
 */
export declare function clearAllPickupRewardTypeSuppression(): void;
/**
 * No comment provided
 *
 * Hash: 0x762DB2D380B48D04 | Since: 323
 * @deprecated Use object.clearPickupRewardTypeSuppression(rewardType) instead
 */
export declare function clearPickupRewardTypeSuppression(rewardType: number): void;
/**
 * draws circular marker at pos
 * -1 = none
 * 0 = red
 * 1 = green
 * 2 = blue
 * 3 = green larger
 * 4 = nothing
 * 5 = green small
 *
 * Hash: 0x3430676B11CDF21D | Since: 323
 * @deprecated Use object.renderFakePickupGlow(pos, colorIndex) instead
 */
export declare function renderFakePickupGlow(pos: Vector3, colorIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7813E8B8C4AE4799 | Since: 1734
 * @deprecated Use object.setPickupCollectableInVehicle(pickup) instead
 */
export declare function setPickupObjectCollectableInVehicle(pickup: any): void;
/**
 * No comment provided
 *
 * Hash: 0xBFFE53AE7E67FCDC | Since: 1290
 * @deprecated Use object.setPickupTrackDamageEvents(pickup, toggle) instead
 */
export declare function setPickupTrackDamageEvents(pickup: any, toggle: boolean): void;
/**
 * Sets entity+38 to C (when false) or 0xFF3f (when true)
 *
 * Hash: 0xD05A3241B9A86F19 | Since: 1180
 * @deprecated Use object.setEntityFlagSuppressShadow(entity, toggle) instead
 */
export declare function setEntityFlagSuppressShadow(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB2D0BDE54F0E8E5A | Since: 323
 * @deprecated Use object.setEntityFlagRenderSmallShadow(_object, toggle) instead
 */
export declare function setEntityFlagRenderSmallShadow(_object: number | Object, toggle: boolean): void;
/**
 * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
 *
 * Hash: 0x08F96CA6C551AD51 | Since: 323
 * @deprecated Use object.getWeaponTypeFromPickupType(pickupHash) instead
 */
export declare function getWeaponTypeFromPickupType(pickupHash: number | string): number;
/**
 * Returns the pickup hash for the given weapon hash
 *
 * Hash: 0xD6429A016084F1A5 | Since: 1290
 * @deprecated Use object.getPickupTypeFromWeaponHash(weaponHash) instead
 */
export declare function getPickupTypeFromWeaponHash(weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x11D1E53A726891FE | Since: 323
 * @deprecated Use object.isPickupWeaponValid(_object) instead
 */
export declare function isPickupWeaponObjectValid(_object: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE84EB93729C5F36A | Since: 757
 * @deprecated Use object.getTintIndex(_object) instead
 */
export declare function getObjectTintIndex(_object: number | Object): number;
/**
 * enum ObjectPaintVariants
 * {
 * Pacific = 0,
 * Azure = 1,
 * Nautical = 2,
 * Continental = 3,
 * Battleship = 4,
 * Intrepid = 5,
 * Uniform = 6,
 * Classico = 7,
 * Mediterranean = 8,
 * Command = 9,
 * Mariner = 10,
 * Ruby = 11,
 * Vintage = 12,
 * Pristine = 13,
 * Merchant = 14,
 * Voyager = 15
 * };
 *
 * Hash: 0x971DA0055324D033 | Since: 323
 * @deprecated Use object.setTintIndex(_object, textureVariation) instead
 */
export declare function setObjectTintIndex(_object: number | Object, textureVariation: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF12E33034D887F66 | Since: 1103
 * @deprecated Use object.setTintIndexClosestBuildingOfType(pos, radius, modelHash, textureVariation) instead
 */
export declare function setTintIndexClosestBuildingOfType(pos: Vector3, radius: number, modelHash: number | string, textureVariation: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x31574B1B41268673 | Since: 2189
 * @deprecated Use object.setPropTintIndex() instead
 */
export declare function setPropTintIndex(): void;
/**
 * No comment provided
 *
 * Hash: 0x5F048334B4A4E774 | Since: 1493
 * @deprecated Use object.setPropLightColor(_object, r, g, b) instead
 */
export declare function setPropLightColor(_object: number | Object, r: number, g: number, b: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xADF084FB8F075D06 | Since: 1604
 * @deprecated Use object.isPropLightOverriden(_object) instead
 */
export declare function isPropLightOverriden(_object: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3B2FD68DB5F8331C | Since: 757
 * @deprecated Use object.setIsVisibleInMirrors(_object, toggle) instead
 */
export declare function setObjectIsVisibleInMirrors(_object: number | Object, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x96EE0EBA0163DF80 | Since: 791
 * @deprecated Use object.setSpeedBoostAmount(_object) instead
 */
export declare function setObjectSpeedBoostAmount(_object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0xDF6CA0330F2E737B | Since: 791
 * @deprecated Use object.setSpeedBoostDuration(_object, duration) instead
 */
export declare function setObjectSpeedBoostDuration(_object: number | Object, duration: number): void;
/**
 * returns pickup hash.
 *
 * Full list of pickup types by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pickupTypes.json
 *
 * Hash: 0x5EAAD83F8CFB4575 | Since: 323
 * @deprecated Use object.convertOldPickupTypeToNew(pickupHash) instead
 */
export declare function convertOldPickupTypeToNew(pickupHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xF538081986E49E9D | Since: 323
 * @deprecated Use object.setForceThisFrame(pos) instead
 */
export declare function setForceObjectThisFrame(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xADBE4809F19F927A | Since: 323
 * @deprecated Use object.onlyCleanUpWhenOutOfRange(_object) instead
 */
export declare function onlyCleanUpObjectWhenOutOfRange(_object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x8CAAB2BD3EA58BD4 | Since: 1011
 * @deprecated Use object.setDisableCollisionsBetweenCarsAndCarParachute() instead
 */
export declare function setDisableCollisionsBetweenCarsAndCarParachute(): void;
/**
 * No comment provided
 *
 * Hash: 0x63ECF581BC70E363 | Since: 1365
 * @deprecated Use object.setProjectilesShouldExplodeOnContact(entity) instead
 */
export declare function setProjectilesShouldExplodeOnContact(entity: number | Entity): void;
/**
 * Activate the physics to: "xs_prop_arena_{flipper,wall,bollard,turntable,pit}"
 *
 * Hash: 0x911024442F4898F0 | Since: 1604
 * @deprecated Use object.setDriveArticulatedJoint(_object, toggle) instead
 */
export declare function setDriveArticulatedJoint(_object: number | Object, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB20834A7DD3D8896 | Since: 1604
 * @deprecated Use object.setDriveArticulatedJointWithInflictor(_object, toggle, ped) instead
 */
export declare function setDriveArticulatedJointWithInflictor(_object: number | Object, toggle: boolean, ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x734E1714D077DA9A | Since: 1604
 * @deprecated Use object.setIsAPressurePlate(_object, toggle) instead
 */
export declare function setObjectIsAPressurePlate(_object: number | Object, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1A6CBB06E2D0D79D | Since: 1604
 * @deprecated Use object.setWeaponImpactsApplyGreaterForce(_object) instead
 */
export declare function setWeaponImpactsApplyGreaterForce(_object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x43C677F1E1158005 | Since: 1604
 * @deprecated Use object.getIsArticulatedJointAtMinAngle(_object) instead
 */
export declare function getIsArticulatedJointAtMinAngle(_object: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3BD770D281982DB5 | Since: 1604
 * @deprecated Use object.getIsArticulatedJointAtMaxAngle() instead
 */
export declare function getIsArticulatedJointAtMaxAngle(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1C57C94A6446492A | Since: 1604
 * @deprecated Use object.setIsArticulated(_object, toggle) instead
 */
export declare function setIsObjectArticulated(_object: number | Object, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB5B7742424BD4445 | Since: 1604
 * @deprecated Use object.setIsBall(_object, toggle) instead
 */
export declare function setIsObjectBall(_object: number | Object, toggle: boolean): void;
/**
 * control: 0: PLAYER_CONTROL, 1: CAMERA_CONTROL, 2: FRONTEND_CONTROL
 * For more info, see https://docs.fivem.net/docs/game-references/controls/
 *
 * Hash: 0x1CEA6BFDF248E5D9 | Since: 323
 * @deprecated Use pad.isControlEnabled(control, action) instead
 */
export declare function isControlEnabled(control: number, action: number): boolean;
/**
 * Returns whether a control is currently pressed.
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0xF3A21BCD95725A4A | Since: 323
 * @deprecated Use pad.isControlPressed(control, action) instead
 */
export declare function isControlPressed(control: number, action: number): boolean;
/**
 * Returns whether a control is currently _not_ pressed.
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0x648EE3E7F38877DD | Since: 323
 * @deprecated Use pad.isControlReleased(control, action) instead
 */
export declare function isControlReleased(control: number, action: number): boolean;
/**
 * Returns whether a control was newly pressed since the last check.
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0x580417101DDB492F | Since: 323
 * @deprecated Use pad.isControlJustPressed(control, action) instead
 */
export declare function isControlJustPressed(control: number, action: number): boolean;
/**
 * Returns whether a control was newly released since the last check.
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0x50F940259D3841E6 | Since: 323
 * @deprecated Use pad.isControlJustReleased(control, action) instead
 */
export declare function isControlJustReleased(control: number, action: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE9CB8C56E90D5079 | Since: 3407
 * @deprecated Use pad.isControlHeldDown(control, action, duration) instead
 */
export declare function isControlHeldDown(control: number, action: number, duration: number): boolean;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0xD95E79E8686D2C27 | Since: 323
 * @deprecated Use pad.getControlValue(control, action) instead
 */
export declare function getControlValue(control: number, action: number): number;
/**
 * Returns the value of GET_CONTROL_VALUE normalized (i.e. a real number value between -1 and 1)
 *
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0xEC3C9B8D5327B563 | Since: 323
 * @deprecated Use pad.getControlNormal(control, action) instead
 */
export declare function getControlNormal(control: number, action: number): number;
/**
 * No comment provided
 *
 * Hash: 0x5B73C77D9EB66E24 | Since: 323
 * @deprecated Use pad.setUseAdjustedMouseCoords(toggle) instead
 */
export declare function setUseAdjustedMouseCoords(toggle: boolean): void;
/**
 * Seems to return values between -1 and 1 for controls like gas and steering.
 *
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0x5B84D09CEC5209C5 | Since: 323
 * @deprecated Use pad.getControlUnboundNormal(control, action) instead
 */
export declare function getControlUnboundNormal(control: number, action: number): number;
/**
 * This is for simulating player input.
 * value is a float value from 0 - 1
 *
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0xE8A25867FBA3B05E | Since: 323
 * @deprecated Use pad.setControlValueNextFrame(control, action, value) instead
 */
export declare function setControlValueNextFrame(control: number, action: number, value: number): boolean;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0xE2587F8CBBD87B1D | Since: 323
 * @deprecated Use pad.isDisabledControlPressed(control, action) instead
 */
export declare function isDisabledControlPressed(control: number, action: number): boolean;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0xFB6C4072E9A32E92 | Since: 757
 * @deprecated Use pad.isDisabledControlReleased(control, action) instead
 */
export declare function isDisabledControlReleased(control: number, action: number): boolean;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0x91AEF906BCA88877 | Since: 323
 * @deprecated Use pad.isDisabledControlJustPressed(control, action) instead
 */
export declare function isDisabledControlJustPressed(control: number, action: number): boolean;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0x305C8DCD79DA8B0F | Since: 323
 * @deprecated Use pad.isDisabledControlJustReleased(control, action) instead
 */
export declare function isDisabledControlJustReleased(control: number, action: number): boolean;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0x11E65974A982637C | Since: 323
 * @deprecated Use pad.getDisabledControlNormal(control, action) instead
 */
export declare function getDisabledControlNormal(control: number, action: number): number;
/**
 * The "disabled" variant of GET_CONTROL_UNBOUND_NORMAL.
 *
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0x4F8A26A890FD62FB | Since: 323
 * @deprecated Use pad.getDisabledControlUnboundNormal(control, action) instead
 */
export declare function getDisabledControlUnboundNormal(control: number, action: number): number;
/**
 * Returns time in ms since last input.
 *
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0xD7D22F5592AED8BA | Since: 323
 * @deprecated Use pad.getControlHowLongAgo(control) instead
 */
export declare function getControlHowLongAgo(control: number): number;
/**
 * control: unused parameter
 *
 * Hash: 0xA571D46727E2B718 | Since: 323
 * @deprecated Use pad.isUsingKeyboardAndMouse(control) instead
 */
export declare function isUsingKeyboardAndMouse(control: number): boolean;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0x13337B38DB572509 | Since: 323
 * @deprecated Use pad.isUsingCursor(control) instead
 */
export declare function isUsingCursor(control: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFC695459D4D0E219 | Since: 323
 * @deprecated Use pad.setCursorPosition(x, y) instead
 */
export declare function setCursorPosition(x: number, y: number): boolean;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hardcoded to return false.
 *
 * Hash: 0x23F09EADC01449D6 | Since: 323
 * @deprecated Use pad.isUsingRemotePlay(control) instead
 */
export declare function isUsingRemotePlay(control: number): boolean;
/**
 * control: unused parameter
 *
 * Hash: 0x6CD79468A1E595C6 | Since: 323
 * @deprecated Use pad.haveControlsChanged(control) instead
 */
export declare function haveControlsChanged(control: number): boolean;
/**
 * allowXOSwap appears to always be true.
 *
 * EG:
 * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 201, 1) \/\*INPUT_FRONTEND_ACCEPT (e.g. Enter button)\*\/
 * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 202, 1) \/\*INPUT_FRONTEND_CANCEL (e.g. ESC button)\*\/
 * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 51, 1) \/\*INPUT_CONTEXT (e.g. E button)\*\/
 *
 * gtaforums.com/topic/819070-c-draw-instructional-buttons-scaleform-movie/#entry1068197378
 *
 * control: unused parameter
 *
 * Hash: 0x0499D7B09FC9B407 | Since: 323
 * @deprecated Use pad.getControlInstructionalButtonsString(control, action, allowXOSwap) instead
 */
export declare function getControlInstructionalButtonsString(control: number, action: number, allowXOSwap: boolean): string;
/**
 * control: unused parameter
 *
 * Hash: 0x80C2FD58D720C801 | Since: 323
 * @deprecated Use pad.getControlGroupInstructionalButtonsString(control, controlGroup, allowXOSwap) instead
 */
export declare function getControlGroupInstructionalButtonsString(control: number, controlGroup: number, allowXOSwap: boolean): string;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0x8290252FFF36ACB5 | Since: 323
 * @deprecated Use pad.setControlLightEffectColor(control, red, green, blue) instead
 */
export declare function setControlLightEffectColor(control: number, red: number, green: number, blue: number): void;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0xCB0360EFEFB2580D | Since: 323
 * @deprecated Use pad.clearControlLightEffect(control) instead
 */
export declare function clearControlLightEffect(control: number): void;
/**
 * control: see IS_CONTROL_ENABLED
 * duration in milliseconds
 * frequency should range from about 10 (slow vibration) to 255 (very fast)
 *
 * example:
 * SET_CONTROL_SHAKE(PLAYER_CONTROL, 100, 200);
 *
 * Hash: 0x48B3886C1358D0D5 | Since: 323
 * @deprecated Use pad.setControlShake(control, duration, frequency) instead
 */
export declare function setControlShake(control: number, duration: number, frequency: number): void;
/**
 * Does nothing (it's a nullsub).
 *
 * Hash: 0x14D29BB12D47F68C | Since: 323
 * @deprecated Use pad.setControlTriggerShake(control, leftDuration, leftFrequency, rightDuration, rightFrequency) instead
 */
export declare function setControlTriggerShake(control: number, leftDuration: number, leftFrequency: number, rightDuration: number, rightFrequency: number): void;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0x38C16A305E8CDC8D | Since: 323
 * @deprecated Use pad.stopControlShake(control) instead
 */
export declare function stopControlShake(control: number): void;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0xF239400E16C23E08 | Since: 323
 * @deprecated Use pad.setControlShakeSuppressedId(control, uniqueId) instead
 */
export declare function setControlShakeSuppressedId(control: number, uniqueId: number): void;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0xA0CEFCEA390AAB9B | Since: 323
 * @deprecated Use pad.clearControlShakeSuppressedId(control) instead
 */
export declare function clearControlShakeSuppressedId(control: number): void;
/**
 * No comment provided
 *
 * Hash: 0x77B612531280010D | Since: 323
 * @deprecated Use pad.isLookInverted() instead
 */
export declare function isLookInverted(): boolean;
/**
 * Used with IS_LOOK_INVERTED() and negates its affect.
 *
 * --
 *
 * Not sure how the person above got that description, but here's an actual example:
 *
 * `if (PAD::IS_USING_KEYBOARD_AND_MOUSE(2)) {`
 * if (a_5) {
 * `if (PAD::IS_LOOK_INVERTED()) {`
 * a_3 *= -1;
 * }
 * `if (PAD::IS_MOUSE_LOOK_INVERTED()) {`
 * a_3 *= -1;
 * }
 * }
 * }
 *
 * Hash: 0xE1615EC03B3BB4FD | Since: 323
 * @deprecated Use pad.isMouseLookInverted() instead
 */
export declare function isMouseLookInverted(): boolean;
/**
 * Hard-coded to return 3 if using KBM, otherwise same behavior as GET_LOCAL_PLAYER_GAMEPAD_AIM_STATE.
 *
 * Hash: 0xBB41AFBBBC0A0287 | Since: 323
 * @deprecated Use pad.getLocalPlayerAimState() instead
 */
export declare function getLocalPlayerAimState(): number;
/**
 * `Returns the local player's targeting mode. See PLAYER::SET_PLAYER_TARGETING_MODE.`
 *
 * Hash: 0x59B9A7AF4C95133C | Since: 323
 * @deprecated Use pad.getLocalPlayerGameAimState() instead
 */
export declare function getLocalPlayerGamepadAimState(): number;
/**
 * No comment provided
 *
 * Hash: 0x25AAA32BDC98F2A3 | Since: 1365
 * @deprecated Use pad.getIsUsingAlternateHandbrake() instead
 */
export declare function getIsUsingAlternateHandbrake(): boolean;
/**
 * Returns profile setting 225.
 *
 * Hash: 0x0F70731BACCFBB96 | Since: 323
 * @deprecated Use pad.getIsUsingAlternateDriveby() instead
 */
export declare function getIsUsingAlternateDriveby(): boolean;
/**
 * Returns profile setting 17.
 *
 * Hash: 0xFC859E2374407556 | Since: 323
 * @deprecated Use pad.getAllowMovementWhileZoomed() instead
 */
export declare function getAllowMovementWhileZoomed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x798FDEB5B1575088 | Since: 323
 * @deprecated Use pad.setPlayerShakesWhenControllerDisabled(toggle) instead
 */
export declare function setPlayerpadShakesWhenControllerDisabled(toggle: boolean): void;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0xEDE476E5EE29EDB1 | Since: 323
 * @deprecated Use pad.setInputExclusive(control, action) instead
 */
export declare function setInputExclusive(control: number, action: number): void;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0xFE99B66D079CF6BC | Since: 323
 * @deprecated Use pad.disableControlAction(control, action, disableRelatedActions) instead
 */
export declare function disableControlAction(control: number, action: number, disableRelatedActions: boolean): void;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0x351220255D64C155 | Since: 323
 * @deprecated Use pad.enableControlAction(control, action, enableRelatedActions) instead
 */
export declare function enableControlAction(control: number, action: number, enableRelatedActions: boolean): void;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0x5F4B6931816E599B | Since: 323
 * @deprecated Use pad.disableAllControlActions(control) instead
 */
export declare function disableAllControlActions(control: number): void;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0xA5FFE9B05F199DE7 | Since: 323
 * @deprecated Use pad.enableAllControlActions(control) instead
 */
export declare function enableAllControlActions(control: number): void;
/**
 * Used in carsteal3 script with schemeName = "Carsteal4_spycar".
 *
 * Hash: 0x3D42B92563939375 | Since: 323
 * @deprecated Use pad.initPcScriptedControls(schemeName) instead
 */
export declare function initPcScriptedControls(schemeName: string): boolean;
/**
 * Same as INIT_PC_SCRIPTED_CONTROLS
 *
 * Hash: 0x4683149ED1DDE7A1 | Since: 323
 * @deprecated Use pad.switchPcScriptedControls(schemeName) instead
 */
export declare function switchPcScriptedControls(schemeName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x643ED62D5EA3BEBD | Since: 323
 * @deprecated Use pad.shutdownPcScriptedControls() instead
 */
export declare function shutdownPcScriptedControls(): void;
/**
 * control: see IS_CONTROL_ENABLED
 *
 * Hash: 0x7F4724035FDCA1DD | Since: 323
 * @deprecated Use pad.allowAlternativeScriptControlsLayout(control) instead
 */
export declare function allowAlternativeScriptControlsLayout(control: number): void;
/**
 * Always returns zero.
 *
 * Hash: 0x18E474F40EF05F10 | Since: 3570
 * @deprecated Use pad.getGameType() instead
 */
export declare function getGamepadType(): number;
/**
 * When nodeEnabled is set to false, all nodes in the area get disabled.
 * `GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns true afterwards.
 * If it's true, `GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns false.
 *
 * Hash: 0xBF1A602B5BA52FEE | Since: 323
 * @deprecated Use pathfind.setRoadsInArea(x1, y1, z1, x2, y2, z2, nodeEnabled, unknown2) instead
 */
export declare function setRoadsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, nodeEnabled: boolean, unknown2: boolean): void;
/**
 * unknown3 is related to `SEND_SCRIPT_WORLD_STATE_EVENT > CNetworkRoadNodeWorldStateData` in networked environments.
 * See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
 *
 * Hash: 0x1A5AA1208AF5DB59 | Since: 323
 * @deprecated Use pathfind.setRoadsInAngledArea(x1, y1, z1, x2, y2, z2, width, unknown1, unknown2, unknown3) instead
 */
export declare function setRoadsInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, unknown1: boolean, unknown2: boolean, unknown3: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x34F060F4BF92E018 | Since: 323
 * @deprecated Use pathfind.setPedPathsInArea(x1, y1, z1, x2, y2, z2) instead
 */
export declare function setPedPathsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
/**
 * Flags are:
 * 1 = 1 = B02_IsFootpath
 * 2 = 4 = !B15_InteractionUnk
 * 4 = 0x20 = !B14_IsInterior
 * 8 = 0x40 = !B07_IsWater
 * 16 = 0x200 = B17_IsFlatGround
 * When onGround == true outPosition is a position located on the nearest pavement.
 *
 * When a safe coord could not be found the result of a function is false and outPosition == Vector3.Zero.
 *
 * In the scripts these flags are used: 0, 14, 12, 16, 20, 21, 28. 0 is most commonly used, then 16.
 *
 * 16 works for me, 0 crashed the script.
 *
 * Hash: 0xB61C8E878A4199CA | Since: 323
 * @deprecated Use pathfind.getSafeCoordForPed(pos, onGround, flags) instead
 */
export declare function getSafeCoordForPed(pos: Vector3, onGround: boolean, flags: number): [boolean, Vector3];
/**
 * https://gtaforums.com/topic/843561-pathfind-node-types
 *
 * Hash: 0x240A18690AE96513 | Since: 323
 * @deprecated Use pathfind.getClosestVehicleNode(pos, nodeFlags) instead
 */
export declare function getClosestVehicleNode(pos: Vector3, nodeFlags: number): [boolean, Vector3];
/**
 * Get the closest vehicle node to a given position.
 *
 * Hash: 0x2EABE3B06F58C1BE | Since: 323
 * @deprecated Use pathfind.getClosestMajorVehicleNode(pos, unknown1, unknown2) instead
 */
export declare function getClosestMajorVehicleNode(pos: Vector3, unknown1: number, unknown2: number): [boolean, Vector3];
/**
 * p5, p6 and p7 seems to be about the same as p4, p5 and p6 for GET_CLOSEST_VEHICLE_NODE. p6 and/or p7 has something to do with finding a node on the same path/road and same direction(at least for this native, something to do with the heading maybe). Edit this when you find out more.
 *
 * nodeType: 0 = main roads, 1 = any dry path, 3 = water
 * p6 is always 3.0
 * p7 is always 0
 *
 * gtaforums.com/topic/843561-pathfind-node-types
 *
 * Example of usage, moving vehicle to closest path/road:
 * `Vector3 coords = ENTITY::GET_ENTITY_COORDS(playerVeh, true);`
 * Vector3 closestVehicleNodeCoords;
 * float roadHeading;
 * `PATHFIND::GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(coords.x, coords.y, coords.z, &closestVehicleNodeCoords, &roadHeading, 1, 3, 0);`
 * `ENTITY::SET_ENTITY_HEADING(playerVeh, roadHeading);`
 * `ENTITY::SET_ENTITY_COORDS(playerVeh, closestVehicleNodeCoords.x, closestVehicleNodeCoords.y, closestVehicleNodeCoords.z, 1, 0, 0, 1);`
 * `VEHICLE::SET_VEHICLE_ON_GROUND_PROPERLY(playerVeh);`
 *
 * ------------------------------------------------------------------
 * C# Example (ins1de) : https://pastebin.com/fxtMWAHD
 *
 * Hash: 0xFF071FB798B803B0 | Since: 323
 * @deprecated Use pathfind.getClosestVehicleNodeWithHeading(pos, nodeType) instead
 */
export declare function getClosestVehicleNodeWithHeading(pos: Vector3, nodeType: number): [boolean, Vector3, number];
/**
 * No comment provided
 *
 * Hash: 0xE50E52416CCF948B | Since: 323
 * @deprecated Use pathfind.getNthClosestVehicleNode(pos, nthClosest, nodeFlags, unknown1, unknown2) instead
 */
export declare function getNthClosestVehicleNode(pos: Vector3, nthClosest: number, nodeFlags: number, unknown1: number, unknown2: number): [boolean, Vector3];
/**
 * Returns the id.
 *
 * Hash: 0x22D7275A79FE8215 | Since: 323
 * @deprecated Use pathfind.getNthClosestVehicleNodeId(pos, nth, nodeFlags) instead
 */
export declare function getNthClosestVehicleNodeId(pos: Vector3, nth: number, nodeFlags: number): number;
/**
 * Get the nth closest vehicle node and its heading.
 *
 * Hash: 0x80CA6A8B6C094CC4 | Since: 323
 * @deprecated Use pathfind.getNthClosestVehicleNodeWithHeading(pos, nthClosest, nodeFlags, unknown3, unknown4) instead
 */
export declare function getNthClosestVehicleNodeWithHeading(pos: Vector3, nthClosest: number, nodeFlags: number, unknown3: number, unknown4: number): [boolean, Vector3, number, number];
/**
 * No comment provided
 *
 * Hash: 0x6448050E9C2A7207 | Since: 323
 * @deprecated Use pathfind.getNthClosestVehicleNodeIdWithHeading(pos, nthClosest, nodeFlags) instead
 */
export declare function getNthClosestVehicleNodeIdWithHeading(pos: Vector3, nthClosest: number, nodeFlags: number): [number, Vector3, number];
/**
 * See gtaforums.com/topic/843561-pathfind-node-types for node type info. 0 = paved road only, 1 = any road, 3 = water
 *
 * p10 always equals 3.0
 * p11 always equals 0
 *
 * Hash: 0x45905BE8654AE067 | Since: 323
 * @deprecated Use pathfind.getNthClosestVehicleNodeFavourDirection(pos, desiredX, desiredY, desiredZ, nthClosest, nodeFlags) instead
 */
export declare function getNthClosestVehicleNodeFavourDirection(pos: Vector3, desiredX: number, desiredY: number, desiredZ: number, nthClosest: number, nodeFlags: number): [boolean, Vector3, number];
/**
 * Gets the density and flags of the closest node to the specified position.
 * Density is a value between 0 and 15, indicating how busy the road is.
 * Flags is a bit field.
 *
 * Hash: 0x0568566ACBB5DEDC | Since: 323
 * @deprecated Use pathfind.getVehicleNodeProperties(pos) instead
 */
export declare function getVehicleNodeProperties(pos: Vector3): [boolean, number, number];
/**
 * Returns true if the id is non zero.
 *
 * Hash: 0x1EAF30FCFBF5AF74 | Since: 323
 * @deprecated Use pathfind.isVehicleNodeIdValid(vehicleNodeId) instead
 */
export declare function isVehicleNodeIdValid(vehicleNodeId: number): boolean;
/**
 * Calling this with an invalid node id, will crash the game.
 * Note that IS_VEHICLE_NODE_ID_VALID simply checks if nodeId is not zero. It does not actually ensure that the id is valid.
 * Eg. IS_VEHICLE_NODE_ID_VALID(1) will return true, but will crash when calling GET_VEHICLE_NODE_POSITION().
 *
 * Hash: 0x703123E5E7D429C2 | Since: 323
 * @deprecated Use pathfind.getVehicleNodePosition(nodeId) instead
 */
export declare function getVehicleNodePosition(nodeId: number): Vector3;
/**
 * Returns false for nodes that aren't used for GPS routes.
 * Example:
 * Nodes in Fort Zancudo and LSIA are false
 *
 * Hash: 0xA2AE5C478B96E3B6 | Since: 323
 * @deprecated Use pathfind.getVehicleNodeIsGpsAllowed(nodeID) instead
 */
export declare function getVehicleNodeIsGpsAllowed(nodeID: number): boolean;
/**
 * Returns true when the node is Offroad. Alleys, some dirt roads, and carparks return true.
 * Normal roads where plenty of Peds spawn will return false
 *
 * Hash: 0x4F5070AA58F69279 | Since: 323
 * @deprecated Use pathfind.getVehicleNodeIsSwitchedOff(nodeID) instead
 */
export declare function getVehicleNodeIsSwitchedOff(nodeID: number): boolean;
/**
 * p1 seems to be always 1.0f in the scripts
 *
 * Hash: 0x132F52BBA570FE92 | Since: 323
 * @deprecated Use pathfind.getClosestRoad(pos) instead
 */
export declare function getClosestRoad(pos: Vector3): [boolean, Vector3, Vector3, any, any, number];
/**
 * No comment provided
 *
 * Hash: 0xC2AB6BFE34E92F8B | Since: 2802
 * @deprecated Use pathfind.loadAllPathNodes(_set) instead
 */
export declare function loadAllPathNodes(_set: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x228E5C6AD4D74BFD | Since: 323
 * @deprecated Use pathfind.setAllowStreamPrologueNodes(toggle) instead
 */
export declare function setAllowStreamPrologueNodes(toggle: boolean): void;
/**
 * Activates Cayo Perico path nodes if passed `1`. GPS navigation will start working, maybe more stuff will change, not sure. It seems if you try to unload (pass `0`) when close to the island, your game might crash.
 *
 * Hash: 0xF74B1FFA4A15FBEA | Since: 2189
 * @deprecated Use pathfind.setAllowStreamHeistIslandNodes(_type) instead
 */
export declare function setAllowStreamHeistIslandNodes(_type: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF7B79A50B905A30D | Since: 323
 * @deprecated Use pathfind.areNodesLoadedForArea(x1, y1, x2, y2) instead
 */
export declare function areNodesLoadedForArea(x1: number, y1: number, x2: number, y2: number): boolean;
/**
 * Used internally for long range tasks
 *
 * Hash: 0x07FB139B592FA687 | Since: 323
 * @deprecated Use pathfind.requestPathNodesInAreaThisFrame(x1, y1, x2, y2) instead
 */
export declare function requestPathNodesInAreaThisFrame(x1: number, y1: number, x2: number, y2: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1EE7063B80FFC77C | Since: 323
 * @deprecated Use pathfind.setRoadsBackToOriginal() instead
 */
export declare function setRoadsBackToOriginal(): void;
/**
 * See IS_POINT_IN_ANGLED_AREA for the definition of an angled area.
 * bool p7 - always 1
 *
 * Hash: 0x0027501B9F3B407E | Since: 323
 * @deprecated Use pathfind.setRoadsBackToOriginalInAngledArea(x1, y1, z1, x2, y2, z2, width) instead
 */
export declare function setRoadsBackToOriginalInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0B919E1FB47CC4E0 | Since: 323
 * @deprecated Use pathfind.setAmbientPedRangeMultiplierThisFrame(multiplier) instead
 */
export declare function setAmbientPedRangeMultiplierThisFrame(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAA76052DDA9BFC3E | Since: 323
 * @deprecated Use pathfind.adjustAmbientPedSpawnDensitiesThisFrame() instead
 */
export declare function adjustAmbientPedSpawnDensitiesThisFrame(): void;
/**
 * p6 is always 0
 *
 * Hash: 0xE04B48F2CC926253 | Since: 323
 * @deprecated Use pathfind.setPedPathsBackToOriginal(x1, y1, z1, x2, y2, z2) instead
 */
export declare function setPedPathsBackToOriginal(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
/**
 * No comment provided
 *
 * Hash: 0x93E0DB8440B73A7D | Since: 323
 * @deprecated Use pathfind.getRandomVehicleNode(pos, radius) instead
 */
export declare function getRandomVehicleNode(pos: Vector3, radius: number): [boolean, Vector3, number];
/**
 * No comment provided
 *
 * Hash: 0x809549AFC7AEC597 | Since: 2944
 * @deprecated Use pathfind.getSpawnCoordsForVehicleNode(nodeAddress, towardsCoorsX, towardsCoorsY, towardsCoorsZ) instead
 */
export declare function getSpawnCoordsForVehicleNode(nodeAddress: number, towardsCoorsX: number, towardsCoorsY: number, towardsCoorsZ: number): [Vector3, number];
/**
 * Determines the name of the street which is the closest to the given coordinates.
 *
 * x,y,z - the coordinates of the street
 * streetName - returns a hash to the name of the street the coords are on
 * crossingRoad - if the coordinates are on an intersection, a hash to the name of the crossing road
 *
 * `Note: the names are returned as hashes, the strings can be returned using the function HUD::GET_STREET_NAME_FROM_HASH_KEY.`
 *
 * Hash: 0x2EB41072B4C1E4C0 | Since: 323
 * @deprecated Use pathfind.getStreetNameAtCoord(pos) instead
 */
export declare function getStreetNameAtCoord(pos: Vector3): [number, number];
/**
 * p3 is 0 in the only game script occurrence (trevor3) but 1 doesn't seem to make a difference
 *
 * distToNxJunction seems to be the distance in metres * 10.0f
 *
 * direction:
 * 0 = This happens randomly during the drive for seemingly no reason but if you consider that this native is only used in trevor3, it seems to mean "Next frame, stop whatever's being said and tell the player the direction."
 * 1 = Route is being calculated or the player is going in the wrong direction
 * 2 = Please Proceed the Highlighted Route
 * 3 = In (distToNxJunction) Turn Left
 * 4 = In (distToNxJunction) Turn Right
 * 5 = In (distToNxJunction) Keep Straight
 * 6 = In (distToNxJunction) Turn Sharply To The Left
 * 7 = In (distToNxJunction) Turn Sharply To The Right
 * 8 = Route is being recalculated or the navmesh is confusing. This happens randomly during the drive but consistently at {2044.0358, 2996.6116, 44.9717} if you face towards the bar and the route needs you to turn right. In that particular case, it could be a bug with how the turn appears to be 270 deg. CCW instead of "right." Either way, this seems to be the engine saying "I don't know the route right now."
 *
 * return value set to 0 always
 *
 * Hash: 0xF90125F1F79ECDF8 | Since: 323
 * @deprecated Use pathfind.generateDirectionsToCoord(pos) instead
 */
export declare function generateDirectionsToCoord(pos: Vector3): [number, number, number, number];
/**
 * No comment provided
 *
 * Hash: 0x72751156E7678833 | Since: 323
 * @deprecated Use pathfind.setIgnoreNoGpsFlag(toggle) instead
 */
export declare function setIgnoreNoGpsFlag(toggle: boolean): void;
/**
 * See: SET_BLIP_ROUTE
 *
 * Hash: 0x1FC289A0C3FF470F | Since: 323
 * @deprecated Use pathfind.setIgnoreNoGpsFlagUntilFirstNormalNode(toggle) instead
 */
export declare function setIgnoreNoGpsFlagUntilFirstNormalNode(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDC20483CD3DD5201 | Since: 323
 * @deprecated Use pathfind.setGpsDisabledZone(x1, y1, z1, x2, y2, z3) instead
 */
export declare function setGpsDisabledZone(x1: number, y1: number, z1: number, x2: number, y2: number, z3: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBBB45C3CF5C8AA85 | Since: 323
 * @deprecated Use pathfind.getGpsBlipRouteLength() instead
 */
export declare function getGpsBlipRouteLength(): number;
/**
 * p3 can be 0, 1 or 2.
 *
 * Hash: 0xF3162836C28F9DA5 | Since: 505
 * @deprecated Use pathfind.getPosAlongGpsTypeRoute() instead
 */
export declare function getPosAlongGpsTypeRoute(): [boolean, Vector3];
/**
 * No comment provided
 *
 * Hash: 0x869DAACBBE9FA006 | Since: 323
 * @deprecated Use pathfind.getGpsBlipRouteFound() instead
 */
export declare function getGpsBlipRouteFound(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA0F8A7517A273C05 | Since: 463
 * @deprecated Use pathfind.getRoadBoundaryUsingHeading(pos, heading) instead
 */
export declare function getRoadBoundaryUsingHeading(pos: Vector3, heading: number): [boolean, Vector3];
/**
 * No comment provided
 *
 * Hash: 0x16F46FB18C8009E4 | Since: 323
 * @deprecated Use pathfind.getPositionBySideOfRoad(pos) instead
 */
export declare function getPositionBySideOfRoad(pos: Vector3): [boolean, Vector3];
/**
 * Gets a value indicating whether the specified position is on a road.
 * The vehicle parameter is not implemented (ignored).
 *
 * Hash: 0x125BF4ABFC536B09 | Since: 323
 * @deprecated Use pathfind.isPointOnRoad(pos, vehicle) instead
 */
export declare function isPointOnRoad(pos: Vector3, vehicle: number | Vehicle): boolean;
/**
 * Gets the next zone that has been disabled using SET_GPS_DISABLED_ZONE_AT_INDEX.
 *
 * Hash: 0xD3A6A0EF48823A8C | Since: 323
 * @deprecated Use pathfind.getNextGpsDisabledZoneIndex() instead
 */
export declare function getNextGpsDisabledZoneIndex(): number;
/**
 * Disables the GPS route displayed on the minimap while within a certain zone (area). When in a disabled zone and creating a waypoint, the GPS route is not shown on the minimap until you are outside of the zone. When disabled, the direct distance is shown on minimap opposed to distance to travel. Seems to only work before setting a waypoint.
 * You can clear the disabled zone with CLEAR_GPS_DISABLED_ZONE_AT_INDEX.
 *
 * <strong>Setting a waypoint at the same coordinate:</strong>
 * Disabled Zone: https://i.imgur.com/P9VUuxM.png
 * Enabled Zone (normal): https://i.imgur.com/BPi24aw.png
 *
 * Hash: 0xD0BC1C6FB18EE154 | Since: 323
 * @deprecated Use pathfind.setGpsDisabledZoneAtIndex(x1, y1, z1, x2, y2, z2, index) instead
 */
export declare function setGpsDisabledZoneAtIndex(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, index: number): void;
/**
 * Clears a disabled GPS route area from a certain index previously set using `SET_GPS_DISABLED_ZONE_AT_INDEX`.
 *
 * Hash: 0x2801D0012266DF07 | Since: 323
 * @deprecated Use pathfind.clearGpsDisabledZoneAtIndex(index) instead
 */
export declare function clearGpsDisabledZoneAtIndex(index: number): void;
/**
 * No comment provided
 *
 * Hash: 0x387EAD7EE42F6685 | Since: 323
 * @deprecated Use pathfind.addNavmeshRequiredRegion(x, y, radius) instead
 */
export declare function addNavmeshRequiredRegion(x: number, y: number, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0x916F0A3CDEC3445E | Since: 323
 * @deprecated Use pathfind.removeNavmeshRequiredRegions() instead
 */
export declare function removeNavmeshRequiredRegions(): void;
/**
 * No comment provided
 *
 * Hash: 0x705A844002B39DC0 | Since: 944
 * @deprecated Use pathfind.isNavmeshRequiredRegionInUse() instead
 */
export declare function isNavmeshRequiredRegionInUse(): boolean;
/**
 * Set toggle true to disable navmesh.
 * Set toggle false to enable navmesh.
 *
 * Hash: 0x4C8872D8CDBE1B8B | Since: 323
 * @deprecated Use pathfind.disableNavmeshInArea(x1, y1, z1, x2, y2, z2, toggle) instead
 */
export declare function disableNavmeshInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8415D95B194A3AEA | Since: 323
 * @deprecated Use pathfind.areAllNavmeshRegionsLoaded() instead
 */
export declare function areAllNavmeshRegionsLoaded(): boolean;
/**
 * Returns whether navmesh for the region is loaded. The region is a rectangular prism defined by it's top left deepest corner to it's bottom right shallowest corner.
 *
 * If you can re-word this so it makes more sense, please do. I'm horrible with words sometimes...
 *
 * Hash: 0xF813C7E63F9062A5 | Since: 323
 * @deprecated Use pathfind.isNavmeshLoadedInArea(x1, y1, z1, x2, y2, z2) instead
 */
export declare function isNavmeshLoadedInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x01708E8DD3FF8C65 | Since: 323
 * @deprecated Use pathfind.getNumNavmeshesExistingInArea(x1, y1, z1, x2, y2, z2) instead
 */
export declare function getNumNavmeshesExistingInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
/**
 * No comment provided
 *
 * Hash: 0xFCD5C8E06E502F5A | Since: 323
 * @deprecated Use pathfind.addNavmeshBlockingObject() instead
 */
export declare function addNavmeshBlockingObject(): number;
/**
 * No comment provided
 *
 * Hash: 0x109E99373F290687 | Since: 323
 * @deprecated Use pathfind.updateNavmeshBlockingObject() instead
 */
export declare function updateNavmeshBlockingObject(): void;
/**
 * No comment provided
 *
 * Hash: 0x46399A7895957C0E | Since: 323
 * @deprecated Use pathfind.removeNavmeshBlockingObject() instead
 */
export declare function removeNavmeshBlockingObject(): void;
/**
 * No comment provided
 *
 * Hash: 0x0EAEB0DB4B132399 | Since: 323
 * @deprecated Use pathfind.doesNavmeshBlockingObjectExist() instead
 */
export declare function doesNavmeshBlockingObjectExist(): boolean;
/**
 * Returns CGameWorldHeightMap's maximum Z value at specified point (grid node).
 *
 * Hash: 0x29C24BFBED8AB8FB | Since: 323
 * @deprecated Use pathfind.getApproxHeightForPoint(x, y) instead
 */
export declare function getApproxHeightForPoint(x: number, y: number): number;
/**
 * Returns CGameWorldHeightMap's maximum Z among all grid nodes that intersect with the specified rectangle.
 *
 * Hash: 0x8ABE8608576D9CE3 | Since: 323
 * @deprecated Use pathfind.getApproxHeightForArea(x1, y1, x2, y2) instead
 */
export declare function getApproxHeightForArea(x1: number, y1: number, x2: number, y2: number): number;
/**
 * Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
 *
 * Hash: 0x336511A34F2E5185 | Since: 323
 * @deprecated Use pathfind.getApproxFloorForPoint(x, y) instead
 */
export declare function getApproxFloorForPoint(x: number, y: number): number;
/**
 * Returns CGameWorldHeightMap's minimum Z among all grid nodes that intersect with the specified rectangle.
 *
 * Hash: 0x3599D741C9AC6310 | Since: 323
 * @deprecated Use pathfind.getApproxFloorForArea(x1, y1, x2, y2) instead
 */
export declare function getApproxFloorForArea(x1: number, y1: number, x2: number, y2: number): number;
/**
 * Calculates the travel distance between a set of points.
 *
 * Doesn't seem to correlate with distance on gps sometimes.
 * This function returns the value 100000.0 over long distances, seems to be a failure mode result, potentially occurring when not all path nodes are loaded into pathfind.
 *
 * Hash: 0xADD95C7005C4A197 | Since: 323
 * @deprecated Use pathfind.calculateTravelDistanceBetweenPoints(x1, y1, z1, x2, y2, z2) instead
 */
export declare function calculateTravelDistanceBetweenPoints(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
/**
 * https://alloc8or.re/gta5/doc/enums/ePedType.txt
 *
 * Full list of peds by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/peds.json
 *
 * Hash: 0xD49F9B0955C367DE | Since: 323
 * @deprecated Use ped.create(pedType, modelHash, pos, heading, isNetwork, bScriptHostPed) instead
 */
export declare function createPed(pedType: number, modelHash: number | string, pos: Vector3, heading: number, isNetwork: boolean, bScriptHostPed: boolean): number;
/**
 * Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.
 *
 * Hash: 0x9614299DCB53E54B | Since: 323
 * @deprecated Use ped.deletePed(ped1) instead
 */
export declare function deletePed(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xEF29A16337FACADB | Since: 323
 * @deprecated Use ped.clone(ped1, isNetwork, bScriptHostPed, copyHeadBlendFlag) instead
 */
export declare function clonePed(ped1: number | Ped, isNetwork: boolean, bScriptHostPed: boolean, copyHeadBlendFlag: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0x668FD40BCBA5DE48 | Since: 463
 * @deprecated Use ped.cloneAlt(ped1, isNetwork, bScriptHostPed, copyHeadBlendFlag) instead
 */
export declare function clonePedAlt(ped1: number | Ped, isNetwork: boolean, bScriptHostPed: boolean, copyHeadBlendFlag: boolean): number;
/**
 * Copies ped's components and props to targetPed.
 *
 * Hash: 0xE952D6431689AD9A | Since: 323
 * @deprecated Use ped.cloneToTarget(ped1, targetPed) instead
 */
export declare function clonePedToTarget(ped1: number | Ped, targetPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x148B08C2D2ACB884 | Since: 463
 * @deprecated Use ped.cloneToTargetAlt(ped1, targetPed) instead
 */
export declare function clonePedToTargetAlt(ped1: number | Ped, targetPed: number | Ped): void;
/**
 * Gets a value indicating whether the specified ped is in the specified vehicle.
 *
 * If 'atGetIn' is false, the function will not return true until the ped is sitting in the vehicle and is about to close the door. If it's true, the function returns true the moment the ped starts to get onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, the function will not return true until the ped has descended down into the submersible and gotten into the seat, while if it's true, it'll return true the moment the hatch has been opened and the ped is about to descend into the submersible.
 *
 * Hash: 0xA3EE4A07279BB9DB | Since: 323
 * @deprecated Use ped.isInVehicle(ped1, vehicle, atGetIn) instead
 */
export declare function isPedInVehicle(ped1: number | Ped, vehicle: number | Vehicle, atGetIn: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x796D90EFB19AA332 | Since: 323
 * @deprecated Use ped.isInModel(ped1, modelHash) instead
 */
export declare function isPedInModel(ped1: number | Ped, modelHash: number | string): boolean;
/**
 * Gets a value indicating whether the specified ped is in any vehicle.
 *
 * If 'atGetIn' is false, the function will not return true until the ped is sitting in the vehicle and is about to close the door. If it's true, the function returns true the moment the ped starts to get onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, the function will not return true until the ped has descended down into the submersible and gotten into the seat, while if it's true, it'll return true the moment the hatch has been opened and the ped is about to descend into the submersible.
 *
 * Hash: 0x997ABD671D25CA0B | Since: 323
 * @deprecated Use ped.isInAnyVehicle(ped1, atGetIn) instead
 */
export declare function isPedInAnyVehicle(ped1: number | Ped, atGetIn: boolean): boolean;
/**
 * xyz - relative to the world origin.
 *
 * Hash: 0x16EC4839969F9F5E | Since: 323
 * @deprecated Use ped.isCopInArea3d(x1, y1, z1, x2, y2, z2) instead
 */
export declare function isCopPedInArea3d(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * Gets a value indicating whether this ped's health is below its injured threshold.
 *
 * The default threshold is 100.
 *
 * Hash: 0x84A2DD9AC37C35C1 | Since: 323
 * @deprecated Use ped.isInjured(ped1) instead
 */
export declare function isPedInjured(ped1: number | Ped): boolean;
/**
 * Returns whether the specified ped is hurt.
 *
 * Hash: 0x5983BB449D7FDB12 | Since: 323
 * @deprecated Use ped.isHurt(ped1) instead
 */
export declare function isPedHurt(ped1: number | Ped): boolean;
/**
 * Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.
 * If the handle is invalid, the function returns true.
 *
 * Hash: 0xD839450756ED5A80 | Since: 323
 * @deprecated Use ped.isFatallyInjured(ped1) instead
 */
export declare function isPedFatallyInjured(ped1: number | Ped): boolean;
/**
 * Seems to consistently return true if the ped is dead.
 *
 * p1 is always passed 1 in the scripts.
 *
 * I suggest to remove "OR_DYING" part, because it does not detect dying phase.
 *
 * That's what the devs call it, cry about it.
 *
 * lol
 *
 * Hash: 0x3317DEDB88C95038 | Since: 323
 * @deprecated Use ped.isDeadOrDying(ped1) instead
 */
export declare function isPedDeadOrDying(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE0A0AEC214B1FABA | Since: 323
 * @deprecated Use ped.isConversationDead(ped1) instead
 */
export declare function isConversationPedDead(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3998B1276A3300E5 | Since: 323
 * @deprecated Use ped.isAimingFromCover(ped1) instead
 */
export declare function isPedAimingFromCover(ped1: number | Ped): boolean;
/**
 * Returns whether the specified ped is reloading.
 *
 * Hash: 0x24B100C68C645951 | Since: 323
 * @deprecated Use ped.isReloading(ped1) instead
 */
export declare function isPedReloading(ped1: number | Ped): boolean;
/**
 * Returns true if the given ped has a valid pointer to CPlayerInfo in its CPed class. That's all.
 *
 * Hash: 0x12534C348C6CB68B | Since: 323
 * @deprecated Use ped.isAPlayer(ped1) instead
 */
export declare function isPedAPlayer(ped1: number | Ped): boolean;
/**
 * pedType: see CREATE_PED
 *
 * Full list of peds by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/peds.json
 *
 * Hash: 0x7DD959874C1FD534 | Since: 323
 * @deprecated Use ped.createInsideVehicle(vehicle, pedType, modelHash, seat, isNetwork, bScriptHostPed) instead
 */
export declare function createPedInsideVehicle(vehicle: number | Vehicle, pedType: number, modelHash: number | string, seat: number, isNetwork: boolean, bScriptHostPed: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0xAA5A7ECE2AA8FE70 | Since: 323
 * @deprecated Use ped.setDesiredHeading(ped1, heading) instead
 */
export declare function setPedDesiredHeading(ped1: number | Ped, heading: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFF287323B0E2C69A | Since: 323
 * @deprecated Use ped.forceAllHeadingValuesToAlign(ped1) instead
 */
export declare function forceAllHeadingValuesToAlign(ped1: number | Ped): void;
/**
 * angle is ped's view cone
 *
 * Hash: 0xD71649DB0A545AA3 | Since: 323
 * @deprecated Use ped.isFacingPed(ped1, otherPed, angle) instead
 */
export declare function isPedFacingPed(ped1: number | Ped, otherPed: number | Ped, angle: number): boolean;
/**
 * Notes: The function only returns true while the ped is:
 * A.) Swinging a random melee attack (including pistol-whipping)
 *
 * B.) Reacting to being hit by a melee attack (including pistol-whipping)
 *
 * C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter).
 *
 * You don't have to be holding the melee-targetting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds
 *
 * Hash: 0x4E209B2C1EAD5159 | Since: 323
 * @deprecated Use ped.isInMeleeCombat(ped1) instead
 */
export declare function isPedInMeleeCombat(ped1: number | Ped): boolean;
/**
 * Returns true if the ped doesn't do any movement. If the ped is being pushed forwards by using APPLY_FORCE_TO_ENTITY for example, the function returns false.
 *
 * Hash: 0x530944F6F4B8A214 | Since: 323
 * @deprecated Use ped.isStopped(ped1) instead
 */
export declare function isPedStopped(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7E9DFE24AC1E58EF | Since: 323
 * @deprecated Use ped.isShootingInArea(ped1, x1, y1, z1, x2, y2, z2) instead
 */
export declare function isPedShootingInArea(ped1: number | Ped, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA0D3D71EA1086C55 | Since: 323
 * @deprecated Use ped.isAnyShootingInArea(x1, y1, z1, x2, y2, z2) instead
 */
export declare function isAnyPedShootingInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * Returns whether the specified ped is shooting.
 *
 * Hash: 0x34616828CD07F1A1 | Since: 323
 * @deprecated Use ped.isShooting(ped1) instead
 */
export declare function isPedShooting(ped1: number | Ped): boolean;
/**
 * accuracy = 0-100, 100 being perfectly accurate
 *
 * Hash: 0x7AEFB85C1D49DEB6 | Since: 323
 * @deprecated Use ped.setAccuracy(ped1, accuracy) instead
 */
export declare function setPedAccuracy(ped1: number | Ped, accuracy: number): void;
/**
 * No comment provided
 *
 * Hash: 0x37F4AD56ECBC0CD6 | Since: 323
 * @deprecated Use ped.getAccuracy(ped1) instead
 */
export declare function getPedAccuracy(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x87DDEB611B329A9C | Since: 1103
 * @deprecated Use ped.setAmbientLawAccuracyModifier(multiplier) instead
 */
export declare function setAmbientLawPedAccuracyModifier(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC9D55B1A358A5BF7 | Since: 323
 * @deprecated Use ped.isModel(ped1, modelHash) instead
 */
export declare function isPedModel(ped1: number | Ped, modelHash: number | string): boolean;
/**
 * Forces the ped to fall back and kills it.
 *
 * It doesn't really explode the ped's head but it kills the ped
 *
 * Hash: 0x2D05CED3A38D0F3A | Since: 323
 * @deprecated Use ped.explodeHead(ped1, weaponHash) instead
 */
export declare function explodePedHead(ped1: number | Ped, weaponHash: number | string): void;
/**
 * Judging purely from a quick disassembly, if the ped is in a vehicle, the ped will be deleted immediately. If not, it'll be marked as no longer needed. - very elegant..
 *
 * Hash: 0xAC6D445B994DF95E | Since: 323
 * @deprecated Use ped.removeElegantly(ped1) instead
 */
export declare function removePedElegantly(ped1: number | Ped): void;
/**
 * Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.
 *
 * Hash: 0x5BA652A0CD14DF2F | Since: 323
 * @deprecated Use ped.addArmourTo(ped1, amount) instead
 */
export declare function addArmourToPed(ped1: number | Ped, amount: number): void;
/**
 * Sets the armor of the specified ped.
 *
 * ped: The Ped to set the armor of.
 * amount: A value between 0 and 100 indicating the value to set the Ped's armor to.
 *
 * Hash: 0xCEA04D83135264CC | Since: 323
 * @deprecated Use ped.setArmour(ped1, amount) instead
 */
export declare function setPedArmour(ped1: number | Ped, amount: number): void;
/**
 * Ped: The ped to warp.
 * vehicle: The vehicle to warp the ped into.
 * Seat_Index: [-1 is driver seat, -2 first free passenger seat]
 *
 * Moreinfo of Seat Index
 * DriverSeat = -1
 * Passenger = 0
 * Left Rear = 1
 * RightRear = 2
 *
 * Hash: 0xF75B0D629E1C063D | Since: 323
 * @deprecated Use ped.setIntoVehicle(ped1, vehicle, seatIndex) instead
 */
export declare function setPedIntoVehicle(ped1: number | Ped, vehicle: number | Vehicle, seatIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3C028C636A414ED9 | Since: 323
 * @deprecated Use ped.setAllowVehiclesOverride(ped1, toggle) instead
 */
export declare function setPedAllowVehiclesOverride(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3E8349C08E4B82E4 | Since: 323
 * @deprecated Use ped.canCreateRandom() instead
 */
export declare function canCreateRandomPed(): boolean;
/**
 * vb.net
 * Dim ped_handle As Integer
 * With Game.Player.Character
 * Dim pos As Vector3 = .Position + .ForwardVector * 3
 * ped_handle = Native.Function.Call(Of Integer)(Hash.CREATE_RANDOM_PED, pos.X, pos.Y, pos.Z)
 * End With
 *
 * Creates a Ped at the specified location, returns the Ped Handle.
 * Ped will not act until SET_PED_AS_NO_LONGER_NEEDED is called.
 *
 * Hash: 0xB4AC7D0CF06BFE8F | Since: 323
 * @deprecated Use ped.createRandom(pos) instead
 */
export declare function createRandomPed(pos: Vector3): number;
/**
 * No comment provided
 *
 * Hash: 0x9B62392B474F44A0 | Since: 323
 * @deprecated Use ped.createRandomAsDriver(vehicle, returnHandle) instead
 */
export declare function createRandomPedAsDriver(vehicle: number | Vehicle, returnHandle: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0xB8EB95E5B4E56978 | Since: 323
 * @deprecated Use ped.canCreateRandomDriver() instead
 */
export declare function canCreateRandomDriver(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEACEEDA81751915C | Since: 323
 * @deprecated Use ped.canCreateRandomBikeRider() instead
 */
export declare function canCreateRandomBikeRider(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9E8C908F41584ECD | Since: 323
 * @deprecated Use ped.setMoveAnimsBlendOut(ped1) instead
 */
export declare function setPedMoveAnimsBlendOut(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xC1670E958EEE24E5 | Since: 323
 * @deprecated Use ped.setCanBeDraggedOut(ped1, toggle) instead
 */
export declare function setPedCanBeDraggedOut(ped1: number | Ped, toggle: boolean): void;
/**
 * ntoggle was always false except in one instance (b678).
 *
 * The one time this is set to true seems to do with when you fail the mission.
 *
 * Hash: 0xF2BEBCDFAFDAA19E | Since: 323
 * @deprecated Use ped.setAllowHurtCombatForAllMissionPeds(toggle) instead
 */
export declare function setPedAllowHurtCombatForAllMissionPeds(toggle: boolean): void;
/**
 * Returns true/false if the ped is/isn't male.
 *
 * Hash: 0x6D9F5FAA7488BA46 | Since: 323
 * @deprecated Use ped.isMale(ped1) instead
 */
export declare function isPedMale(ped1: number | Ped): boolean;
/**
 * Returns true/false if the ped is/isn't humanoid.
 *
 * Hash: 0xB980061DA992779D | Since: 323
 * @deprecated Use ped.isHuman(ped1) instead
 */
export declare function isPedHuman(ped1: number | Ped): boolean;
/**
 * Gets the vehicle the specified Ped is in. Returns 0 if the ped is/was not in a vehicle.
 *
 * Hash: 0x9A9112A0FE9A4713 | Since: 323
 * @deprecated Use ped.getVehicleIsIn(ped1, includeEntering) instead
 */
export declare function getVehiclePedIsIn(ped1: number | Ped, includeEntering: boolean): number;
/**
 * Resets the value for the last vehicle driven by the Ped.
 *
 * Hash: 0xBB8DE8CF6A8DD8BB | Since: 323
 * @deprecated Use ped.resetLastVehicle(ped1) instead
 */
export declare function resetPedLastVehicle(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x95E3D6257B166CF2 | Since: 323
 * @deprecated Use ped.setDensityMultiplierThisFrame(multiplier) instead
 */
export declare function setPedDensityMultiplierThisFrame(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7A556143A1C03898 | Since: 323
 * @deprecated Use ped.setScenarioDensityMultiplierThisFrame() instead
 */
export declare function setScenarioPedDensityMultiplierThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x5A7F62FDA59759BD | Since: 323
 * @deprecated Use ped.suppressAmbientAggressiveCleanupThisFrame() instead
 */
export declare function suppressAmbientPedAggressiveCleanupThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x5086C7843552CF85 | Since: 323
 * @deprecated Use ped.setScriptedConversionCoordThisFrame(pos) instead
 */
export declare function setScriptedConversionCoordThisFrame(pos: Vector3): void;
/**
 * The distance between these points, is the diagonal of a box (remember it's 3D).
 *
 * Hash: 0xEE01041D559983EA | Since: 323
 * @deprecated Use ped.setNonCreationArea(x1, y1, z1, x2, y2, z2) instead
 */
export declare function setPedNonCreationArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2E05208086BA0651 | Since: 323
 * @deprecated Use ped.clearNonCreationArea() instead
 */
export declare function clearPedNonCreationArea(): void;
/**
 * No comment provided
 *
 * Hash: 0x4759CC730F947C81 | Since: 323
 * @deprecated Use ped.instantlyFillPopulation() instead
 */
export declare function instantlyFillPedPopulation(): void;
/**
 * `Same function call as PED::GET_MOUNT, aka just returns 0`
 *
 * Hash: 0x460BC76A0E10655E | Since: 323
 * @deprecated Use ped.isOnMount(ped1) instead
 */
export declare function isPedOnMount(ped1: number | Ped): boolean;
/**
 *
 * Function just returns 0
 * void __fastcall ped__get_mount(NativeContext *a1)
 * {
 * NativeContext *v1; // rbx@1
 *
 * v1 = a1;
 * GetAddressOfPedFromScriptHandle(a1->Args->Arg1);
 * v1->Returns->Item1= 0;
 * }
 *
 * Hash: 0xE7E11B8DCBED1058 | Since: 323
 * @deprecated Use ped.getMount(ped1) instead
 */
export declare function getMount(ped1: number | Ped): number;
/**
 * Gets a value indicating whether the specified ped is on top of any vehicle.
 *
 * Return 1 when ped is on vehicle.
 * Return 0 when ped is not on a vehicle.
 *
 *
 * Hash: 0x67722AEB798E5FAB | Since: 323
 * @deprecated Use ped.isOnVehicle(ped1) instead
 */
export declare function isPedOnVehicle(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEC5F66E459AF3BB2 | Since: 323
 * @deprecated Use ped.isOnSpecificVehicle(ped1, vehicle) instead
 */
export declare function isPedOnSpecificVehicle(ped1: number | Ped, vehicle: number | Vehicle): boolean;
/**
 * Maximum possible amount of money on MP is 2000. ~JX
 *
 * -----------------------------------------------------------------------------
 *
 * Maximum amount that a ped can theoretically have is 65535 (0xFFFF) since the amount is stored as an unsigned short (uint16_t) value.
 *
 * Hash: 0xA9C8960E8684C1B5 | Since: 323
 * @deprecated Use ped.setMoney(ped1, amount) instead
 */
export declare function setPedMoney(ped1: number | Ped, amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3F69145BBA87BAE7 | Since: 323
 * @deprecated Use ped.getMoney(ped1) instead
 */
export declare function getPedMoney(ped1: number | Ped): number;
/**
 * Related to Peds dropping pickup_health_snack; p0 is a value between [0.0, 1.0] that corresponds to drop rate
 *
 * Hash: 0xFF4803BC019852D9 | Since: 323
 * @deprecated Use ped.setHealthSnacksCarriedByAllNews() instead
 */
export declare function setHealthSnacksCarriedByAllNewPeds(): void;
/**
 * No comment provided
 *
 * Hash: 0x6B0E6172C9A4D902 | Since: 323
 * @deprecated Use ped.setAmbientsDropMoney() instead
 */
export declare function setAmbientPedsDropMoney(): void;
/**
 * No comment provided
 *
 * Hash: 0xC73EFFC5E043A8BA | Since: 3258
 * @deprecated Use ped.setBlockAmbientsFromDroppingWeaponsThisFrame() instead
 */
export declare function setBlockAmbientPedsFromDroppingWeaponsThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x9911F4A24485F653 | Since: 323
 * @deprecated Use ped.setBlockingOfNonTemporaryEventsForAmbientsThisFrame() instead
 */
export declare function setBlockingOfNonTemporaryEventsForAmbientPedsThisFrame(): void;
/**
 * Ped no longer takes critical damage modifiers if set to FALSE.
 * Example: Headshotting a player no longer one shots them. Instead they will take the same damage as a torso shot.
 *
 * Hash: 0xEBD76F2359F190AC | Since: 323
 * @deprecated Use ped.setSuffersCriticalHits(ped1, toggle) instead
 */
export declare function setPedSuffersCriticalHits(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xAFC976FD0580C7B3 | Since: 323
 * @deprecated Use ped.setUpperBodyDamageOnly(ped1, toggle) instead
 */
export declare function setPedUpperBodyDamageOnly(ped1: number | Ped, toggle: boolean): void;
/**
 * Detect if ped is sitting in the specified vehicle
 * [True/False]
 *
 * Hash: 0xA808AA1D79230FC2 | Since: 323
 * @deprecated Use ped.isSittingInVehicle(ped1, vehicle) instead
 */
export declare function isPedSittingInVehicle(ped1: number | Ped, vehicle: number | Vehicle): boolean;
/**
 * Detect if ped is in any vehicle
 * [True/False]
 *
 * Hash: 0x826AA586EDB9FEF8 | Since: 323
 * @deprecated Use ped.isSittingInAnyVehicle(ped1) instead
 */
export declare function isPedSittingInAnyVehicle(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x01FEE67DB37F59B2 | Since: 323
 * @deprecated Use ped.isOnFoot(ped1) instead
 */
export declare function isPedOnFoot(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x94495889E22C6479 | Since: 323
 * @deprecated Use ped.isOnAnyBike(ped1) instead
 */
export declare function isPedOnAnyBike(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC70B5FAE151982D8 | Since: 323
 * @deprecated Use ped.isPlantingBomb(ped1) instead
 */
export declare function isPedPlantingBomb(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCD5003B097200F36 | Since: 323
 * @deprecated Use ped.getDeadPickupCoords(ped1) instead
 */
export declare function getDeadPedPickupCoords(ped1: number | Ped): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x2E0E1C2B4F6CB339 | Since: 323
 * @deprecated Use ped.isInAnyBoat(ped1) instead
 */
export declare function isPedInAnyBoat(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFBFC01CCFB35D99E | Since: 323
 * @deprecated Use ped.isInAnySub(ped1) instead
 */
export declare function isPedInAnySub(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x298B91AE825E5705 | Since: 323
 * @deprecated Use ped.isInAnyHeli(ped1) instead
 */
export declare function isPedInAnyHeli(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5FFF4CFC74D8FB80 | Since: 323
 * @deprecated Use ped.isInAnyPlane(ped1) instead
 */
export declare function isPedInAnyPlane(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9134873537FA419C | Since: 323
 * @deprecated Use ped.isInFlyingVehicle(ped1) instead
 */
export declare function isPedInFlyingVehicle(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x56CEF0AC79073BDE | Since: 323
 * @deprecated Use ped.setDiesInWater(ped1, toggle) instead
 */
export declare function setPedDiesInWater(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x65671A4FB8218930 | Since: 2699
 * @deprecated Use ped.getDiesInWater(ped1) instead
 */
export declare function getPedDiesInWater(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD718A22995E2B4BC | Since: 323
 * @deprecated Use ped.setDiesInSinkingVehicle(ped1, toggle) instead
 */
export declare function setPedDiesInSinkingVehicle(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9483AF821605B1D8 | Since: 323
 * @deprecated Use ped.getArmour(ped1) instead
 */
export declare function getPedArmour(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xEDF4079F9D54C9A1 | Since: 323
 * @deprecated Use ped.setStayInVehicleWhenJacked(ped1, toggle) instead
 */
export declare function setPedStayInVehicleWhenJacked(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC7EF1BA83230BA07 | Since: 323
 * @deprecated Use ped.setCanBeShotInVehicle(ped1, toggle) instead
 */
export declare function setPedCanBeShotInVehicle(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD75960F6BD9EA49C | Since: 323
 * @deprecated Use ped.getLastDamageBone(ped1) instead
 */
export declare function getPedLastDamageBone(ped1: number | Ped): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x8EF6B7AC68E2F01B | Since: 323
 * @deprecated Use ped.clearLastDamageBone(ped1) instead
 */
export declare function clearPedLastDamageBone(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x1B1E2A40A65B8521 | Since: 323
 * @deprecated Use ped.setAiWeaponDamageModifier(value) instead
 */
export declare function setAiWeaponDamageModifier(value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEA16670E7BA4743C | Since: 323
 * @deprecated Use ped.resetAiWeaponDamageModifier() instead
 */
export declare function resetAiWeaponDamageModifier(): void;
/**
 * No comment provided
 *
 * Hash: 0x66460DEDDD417254 | Since: 323
 * @deprecated Use ped.setAiMeleeWeaponDamageModifier(modifier) instead
 */
export declare function setAiMeleeWeaponDamageModifier(modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x46E56A7CD1D63C3F | Since: 323
 * @deprecated Use ped.resetAiMeleeWeaponDamageModifier() instead
 */
export declare function resetAiMeleeWeaponDamageModifier(): void;
/**
 * No comment provided
 *
 * Hash: 0x2F3C3D9F50681DE4 | Since: 323
 * @deprecated Use ped.setTreatAsAmbientForDriverLockon(ped1) instead
 */
export declare function setTreatAsAmbientPedForDriverLockon(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x63F58F7C80513AAD | Since: 323
 * @deprecated Use ped.setCanBeTargetted(ped1, toggle) instead
 */
export declare function setPedCanBeTargetted(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBF1CA77833E58F2C | Since: 323
 * @deprecated Use ped.setCanBeTargettedByTeam(ped1, team, toggle) instead
 */
export declare function setPedCanBeTargettedByTeam(ped1: number | Ped, team: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x66B57B72E0836A76 | Since: 323
 * @deprecated Use ped.setCanBeTargettedByPlayer(ped1, player, toggle) instead
 */
export declare function setPedCanBeTargettedByPlayer(ped1: number | Ped, player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x061CB768363D6424 | Since: 323
 * @deprecated Use ped.setAllowLockonToIfFriendly(ped1, toggle) instead
 */
export declare function setAllowLockonToPedIfFriendly(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xFD325494792302D7 | Since: 323
 * @deprecated Use ped.setUseCameraHeadingForDesiredDirectionLockOnTest(ped1, toggle) instead
 */
export declare function setUseCameraHeadingForDesiredDirectionLockOnTest(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0BD04E29640C9C12 | Since: 323
 * @deprecated Use ped.isInAnyPoliceVehicle(ped1) instead
 */
export declare function isPedInAnyPoliceVehicle(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x16E42E800B472221 | Since: 323
 * @deprecated Use ped.forceToOpenParachute(ped1) instead
 */
export declare function forcePedToOpenParachute(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x7DCE8BDA0F1C1200 | Since: 323
 * @deprecated Use ped.isInParachuteFreeFall(ped1) instead
 */
export declare function isPedInParachuteFreeFall(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFB92A102F1C4DFA3 | Since: 323
 * @deprecated Use ped.isFalling(ped1) instead
 */
export declare function isPedFalling(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCEDABC5900A0BF97 | Since: 323
 * @deprecated Use ped.isJumping(ped1) instead
 */
export declare function isPedJumping(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x412F1364FA066CFB | Since: 573
 * @deprecated Use ped.isLanding() instead
 */
export declare function isPedLanding(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x451D05012CCEC234 | Since: 573
 * @deprecated Use ped.isDoingABeastJump() instead
 */
export declare function isPedDoingABeastJump(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x53E8CB4F48BFE623 | Since: 323
 * @deprecated Use ped.isClimbing(ped1) instead
 */
export declare function isPedClimbing(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x117C70D1F5730B5E | Since: 323
 * @deprecated Use ped.isVaulting(ped1) instead
 */
export declare function isPedVaulting(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5527B8246FEF9B11 | Since: 323
 * @deprecated Use ped.isDiving(ped1) instead
 */
export declare function isPedDiving(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x433DDFFE2044B636 | Since: 323
 * @deprecated Use ped.isJumpingOutOfVehicle(ped1) instead
 */
export declare function isPedJumpingOutOfVehicle(ped1: number | Ped): boolean;
/**
 * Returns true if the ped is currently opening a door (CTaskOpenDoor).
 *
 * Hash: 0x26AF0E8E30BD2A2C | Since: 323
 * @deprecated Use ped.isOpeningDoor(ped1) instead
 */
export declare function isPedOpeningDoor(ped1: number | Ped): boolean;
/**
 * Returns:
 *
 * -1: Normal
 * 0: Wearing parachute on back
 * 1: Parachute opening
 * 2: Parachute open
 * 3: Falling to doom (e.g. after exiting parachute)
 *
 * Normal means no parachute?
 *
 * Hash: 0x79CFD9827CC979B6 | Since: 323
 * @deprecated Use ped.getParachuteState(ped1) instead
 */
export declare function getPedParachuteState(ped1: number | Ped): number;
/**
 * -1: no landing
 * 0: landing on both feet
 * 1: stumbling
 * 2: rolling
 * 3: ragdoll
 *
 * Hash: 0x8B9F1FC6AE8166C0 | Since: 323
 * @deprecated Use ped.getParachuteLandingType(ped1) instead
 */
export declare function getPedParachuteLandingType(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x333FC8DB079B7186 | Since: 323
 * @deprecated Use ped.setParachuteTintIndex(ped1, tintIndex) instead
 */
export declare function setPedParachuteTintIndex(ped1: number | Ped, tintIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEAF5F7E5AE7C6C9D | Since: 323
 * @deprecated Use ped.getParachuteTintIndex(ped1) instead
 */
export declare function getPedParachuteTintIndex(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xE88DA0751C22A2AD | Since: 323
 * @deprecated Use ped.setReserveParachuteTintIndex(ped1) instead
 */
export declare function setPedReserveParachuteTintIndex(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8C4F3BF23B6237DB | Since: 323
 * @deprecated Use ped.createParachuteBagObject(ped1) instead
 */
export declare function createParachuteBagObject(ped1: number | Ped): number;
/**
 * This is the SET_CHAR_DUCKING from GTA IV, that makes Peds duck. This function does nothing in GTA V. It cannot set the ped as ducking in vehicles, and IS_PED_DUCKING will always return false.
 *
 * Hash: 0x030983CA930B692D | Since: 323
 * @deprecated Use ped.setDucking(ped1, toggle) instead
 */
export declare function setPedDucking(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD125AE748725C6BC | Since: 323
 * @deprecated Use ped.isDucking(ped1) instead
 */
export declare function isPedDucking(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6E575D6A898AB852 | Since: 323
 * @deprecated Use ped.isInAnyTaxi(ped1) instead
 */
export declare function isPedInAnyTaxi(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF107E836A70DCE05 | Since: 323
 * @deprecated Use ped.setIdRange(ped1, value) instead
 */
export declare function setPedIdRange(ped1: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x52D59AB61DDC05DD | Since: 323
 * @deprecated Use ped.setHighlyPerceptive(ped1, toggle) instead
 */
export declare function setPedHighlyPerceptive(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2F074C904D85129E | Since: 393
 * @deprecated Use ped.setCopPerceptionOverrides(seeingRange, seeingRangePeripheral, hearingRange, visualFieldMinAzimuthAngle, visualFieldMaxAzimuthAngle, fieldOfGazeMaxAngle) instead
 */
export declare function setCopPerceptionOverrides(seeingRange: number, seeingRangePeripheral: number, hearingRange: number, visualFieldMinAzimuthAngle: number, visualFieldMaxAzimuthAngle: number, fieldOfGazeMaxAngle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEC4B4B3B9908052A | Since: 323
 * @deprecated Use ped.setInjuredOnGroundBehaviour(ped1) instead
 */
export declare function setPedInjuredOnGroundBehaviour(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x733C87D4CE22BEA2 | Since: 323
 * @deprecated Use ped.disableInjuredOnGroundBehaviour(ped1) instead
 */
export declare function disablePedInjuredOnGroundBehaviour(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xF29CF591C4BF6CEE | Since: 323
 * @deprecated Use ped.setSeeingRange(ped1, value) instead
 */
export declare function setPedSeeingRange(ped1: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x33A8F7F7D5F7F33C | Since: 323
 * @deprecated Use ped.setHearingRange(ped1, value) instead
 */
export declare function setPedHearingRange(ped1: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2DB492222FB21E26 | Since: 323
 * @deprecated Use ped.setVisualFieldMinAngle(ped1, value) instead
 */
export declare function setPedVisualFieldMinAngle(ped1: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x70793BDCA1E854D4 | Since: 323
 * @deprecated Use ped.setVisualFieldMaxAngle(ped1, value) instead
 */
export declare function setPedVisualFieldMaxAngle(ped1: number | Ped, value: number): void;
/**
 * This native refers to the field of vision the ped has below them, starting at 0 degrees. The angle value should be negative.
 * -90f should let the ped see 90 degrees below them, for example.
 *
 * Hash: 0x7A276EB2C224D70F | Since: 323
 * @deprecated Use ped.setVisualFieldMinElevationAngle(ped1, angle) instead
 */
export declare function setPedVisualFieldMinElevationAngle(ped1: number | Ped, angle: number): void;
/**
 * This native refers to the field of vision the ped has above them, starting at 0 degrees. 90f would let the ped see enemies directly above of them.
 *
 * Hash: 0x78D0B67629D75856 | Since: 323
 * @deprecated Use ped.setVisualFieldMaxElevationAngle(ped1, angle) instead
 */
export declare function setPedVisualFieldMaxElevationAngle(ped1: number | Ped, angle: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9C74B0BC831B753A | Since: 323
 * @deprecated Use ped.setVisualFieldPeripheralRange(ped1, range) instead
 */
export declare function setPedVisualFieldPeripheralRange(ped1: number | Ped, range: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3B6405E8AB34A907 | Since: 323
 * @deprecated Use ped.setVisualFieldCenterAngle(ped1, angle) instead
 */
export declare function setPedVisualFieldCenterAngle(ped1: number | Ped, angle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEF2C71A32CAD5FBD | Since: 1493
 * @deprecated Use ped.getVisualFieldCenterAngle(ped1) instead
 */
export declare function getPedVisualFieldCenterAngle(ped1: number | Ped): number;
/**
 * p1 is usually 0 in the scripts. action is either 0 or a pointer to "DEFAULT_ACTION".
 *
 * Hash: 0x88CBB5CEB96B7BD2 | Since: 323
 * @deprecated Use ped.setStealthMovement(ped1, action) instead
 */
export declare function setPedStealthMovement(ped1: number | Ped, action: string): void;
/**
 * Returns whether the entity is in stealth mode
 *
 * Hash: 0x7C2AC9CA66575FBF | Since: 323
 * @deprecated Use ped.getStealthMovement(ped1) instead
 */
export declare function getPedStealthMovement(ped1: number | Ped): boolean;
/**
 * Creates a new ped group.
 * Groups can contain up to 8 peds.
 *
 * The parameter is unused.
 *
 * Returns a handle to the created group, or 0 if a group couldn't be created.
 *
 * Hash: 0x90370EBE0FEE1A3D | Since: 323
 * @deprecated Use ped.createGroup(unused) instead
 */
export declare function createGroup(unused: number): number;
/**
 * No comment provided
 *
 * Hash: 0x2A7819605465FBCE | Since: 323
 * @deprecated Use ped.setAsGroupLeader(ped1, groupId) instead
 */
export declare function setPedAsGroupLeader(ped1: number | Ped, groupId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9F3480FE65DB31B5 | Since: 323
 * @deprecated Use ped.setAsGroupMember(ped1, groupId) instead
 */
export declare function setPedAsGroupMember(ped1: number | Ped, groupId: number): void;
/**
 * This only will teleport the ped to the group leader if the group leader teleports (sets coords).
 *
 * Only works in singleplayer
 *
 * Hash: 0x2E2F4240B3F24647 | Since: 323
 * @deprecated Use ped.setCanTeleportToGroupLeader(pedHandle, groupHandle, toggle) instead
 */
export declare function setPedCanTeleportToGroupLeader(pedHandle: number | Ped, groupHandle: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8EB2F69076AF7053 | Since: 323
 * @deprecated Use ped.removeGroup(groupId) instead
 */
export declare function removeGroup(groupId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xED74007FFB146BC2 | Since: 323
 * @deprecated Use ped.removeFromGroup(ped1) instead
 */
export declare function removePedFromGroup(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x9BB01E3834671191 | Since: 323
 * @deprecated Use ped.isGroupMember(ped1, groupId) instead
 */
export declare function isPedGroupMember(ped1: number | Ped, groupId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1C86D8AEF8254B78 | Since: 323
 * @deprecated Use ped.isHangingOnToVehicle(ped1) instead
 */
export declare function isPedHangingOnToVehicle(ped1: number | Ped): boolean;
/**
 * Sets the range at which members will automatically leave the group.
 *
 * Hash: 0x4102C7858CFEE4E4 | Since: 323
 * @deprecated Use ped.setGroupSeparationRange(groupHandle, separationRange) instead
 */
export declare function setGroupSeparationRange(groupHandle: number, separationRange: number): void;
/**
 * Ped will stay on the ground after being stunned for at lest ms time. (in milliseconds)
 *
 * Hash: 0xFA0675AB151073FA | Since: 323
 * @deprecated Use ped.setMinGroundTimeForStungun(ped1, ms) instead
 */
export declare function setPedMinGroundTimeForStungun(ped1: number | Ped, ms: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD6A86331A537A7B9 | Since: 323
 * @deprecated Use ped.isProne(ped1) instead
 */
export declare function isPedProne(ped1: number | Ped): boolean;
/**
 * Checks to see if ped and target are in combat with eachother. Only goes one-way: if target is engaged in combat with ped but ped has not yet reacted, the function will return false until ped starts fighting back.
 *
 * `p1 is usually 0 in the scripts because it gets the ped id during the task sequence. For instance: PED::IS_PED_IN_COMBAT(l_42E[4\/\*14\*\/], PLAYER::PLAYER_PED_ID()) // armenian2.ct4: 43794`
 *
 * Hash: 0x4859F1FC66A6278E | Since: 323
 * @deprecated Use ped.isInCombat(ped1, target) instead
 */
export declare function isPedInCombat(ped1: number | Ped, target: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x32C27A11307B01CC | Since: 2372
 * @deprecated Use ped.getTargetFromCombatPed(ped1) instead
 */
export declare function getPedTargetFromCombatPed(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xEAD42DE3610D0721 | Since: 323
 * @deprecated Use ped.canInCombatSeeTarget(ped1, target) instead
 */
export declare function canPedInCombatSeeTarget(ped1: number | Ped, target: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB2C086CC1BF8F2BF | Since: 323
 * @deprecated Use ped.isDoingDriveby(ped1) instead
 */
export declare function isPedDoingDriveby(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4AE4FF911DFB61DA | Since: 323
 * @deprecated Use ped.isJacking(ped1) instead
 */
export declare function isPedJacking(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9A497FE2DF198913 | Since: 323
 * @deprecated Use ped.isBeingJacked(ped1) instead
 */
export declare function isPedBeingJacked(ped1: number | Ped): boolean;
/**
 * p1 is always 0
 *
 * Hash: 0x4FBACCE3B4138EE8 | Since: 323
 * @deprecated Use ped.isBeingStunned(ped1) instead
 */
export declare function isPedBeingStunned(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9B128DC36C1E04CF | Since: 323
 * @deprecated Use ped.getsJacker(ped1) instead
 */
export declare function getPedsJacker(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x5486A79D9FBD342D | Since: 323
 * @deprecated Use ped.getJackTarget(ped1) instead
 */
export declare function getJackTarget(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xBBCCE00B381F8482 | Since: 323
 * @deprecated Use ped.isFleeing(ped1) instead
 */
export declare function isPedFleeing(ped1: number | Ped): boolean;
/**
 * p1 is nearly always 0 in the scripts.
 *
 * Hash: 0x60DFD0691A170B88 | Since: 323
 * @deprecated Use ped.isInCover(ped1, exceptUseWeapon) instead
 */
export declare function isPedInCover(ped1: number | Ped, exceptUseWeapon: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x845333B3150583AB | Since: 323
 * @deprecated Use ped.isInCoverFacingLeft(ped1) instead
 */
export declare function isPedInCoverFacingLeft(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6A03BF943D767C93 | Since: 323
 * @deprecated Use ped.isInHighCover(ped1) instead
 */
export declare function isPedInHighCover(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9F65DBC537E59AD5 | Since: 323
 * @deprecated Use ped.isGoingIntoCover(ped1) instead
 */
export declare function isPedGoingIntoCover(ped1: number | Ped): boolean;
/**
 * i could be time. Only example in the decompiled scripts uses it as -1.
 *
 * Hash: 0xAAD6D1ACF08F4612 | Since: 323
 * @deprecated Use ped.setPinnedDown(ped1, pinned, i) instead
 */
export declare function setPedPinnedDown(ped1: number | Ped, pinned: boolean, i: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA32ABFEB2A03B306 | Since: 3095
 * @deprecated Use ped.hasClearLosToEntity(ped1, entity, pos) instead
 */
export declare function hasPedClearLosToEntity(ped1: number | Ped, entity: number | Entity, pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6F4C85ACD641BCD2 | Since: 323
 * @deprecated Use ped.getSeatIsTryingToEnter(ped1) instead
 */
export declare function getSeatPedIsTryingToEnter(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x814FA8BE5449445D | Since: 323
 * @deprecated Use ped.getVehicleIsTryingToEnter(ped1) instead
 */
export declare function getVehiclePedIsTryingToEnter(ped1: number | Ped): number;
/**
 * Returns the Entity (Ped, Vehicle, or ?Object?) that killed the 'ped'
 *
 * Is best to check if the Ped is dead before asking for its killer.
 *
 * Hash: 0x93C8B64DEB84728C | Since: 323
 * @deprecated Use ped.getSourceOfDeath(ped1) instead
 */
export declare function getPedSourceOfDeath(ped1: number | Ped): number;
/**
 * Returns the hash of the weapon/model/object that killed the ped.
 *
 * Hash: 0x16FFE42AB2D2DC59 | Since: 323
 * @deprecated Use ped.getCauseOfDeath(ped1) instead
 */
export declare function getPedCauseOfDeath(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x1E98817B311AE98A | Since: 323
 * @deprecated Use ped.getTimeOfDeath(ped1) instead
 */
export declare function getPedTimeOfDeath(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x5407B7288D0478B7 | Since: 323
 * @deprecated Use ped.countsInCombatWithTarget(ped1) instead
 */
export declare function countPedsInCombatWithTarget(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x336B3D200AB007CB | Since: 323
 * @deprecated Use ped.countsInCombatWithTargetWithinRadius(ped1, pos, radius) instead
 */
export declare function countPedsInCombatWithTargetWithinRadius(ped1: number | Ped, pos: Vector3, radius: number): number;
/**
 * No comment provided
 *
 * Hash: 0xADB3F206518799E8 | Since: 323
 * @deprecated Use ped.setRelationshipGroupDefaultHash(ped1, hash) instead
 */
export declare function setPedRelationshipGroupDefaultHash(ped1: number | Ped, hash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xC80A74AC829DDD92 | Since: 323
 * @deprecated Use ped.setRelationshipGroupHash(ped1, hash) instead
 */
export declare function setPedRelationshipGroupHash(ped1: number | Ped, hash: number | string): void;
/**
 * Sets the relationship between two groups. This should be called twice (once for each group).
 *
 * Relationship types:
 * 0 = Companion
 * 1 = Respect
 * 2 = Like
 * 3 = Neutral
 * 4 = Dislike
 * 5 = Hate
 * 255 = Pedestrians
 *
 * Example:
 * `PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);`
 * `PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);`
 *
 * Hash: 0xBF25EB89375A37AD | Since: 323
 * @deprecated Use ped.setRelationshipBetweenGroups(relationship, group1, group2) instead
 */
export declare function setRelationshipBetweenGroups(relationship: number, group1: number | string, group2: number | string): void;
/**
 * Clears the relationship between two groups. This should be called twice (once for each group).
 *
 * Relationship types:
 * 0 = Companion
 * 1 = Respect
 * 2 = Like
 * 3 = Neutral
 * 4 = Dislike
 * 5 = Hate
 * 255 = Pedestrians
 * (Credits: Inco)
 *
 * Example:
 * `PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);`
 * `PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);`
 *
 * Hash: 0x5E29243FB56FC6D4 | Since: 323
 * @deprecated Use ped.clearRelationshipBetweenGroups(relationship, group1, group2) instead
 */
export declare function clearRelationshipBetweenGroups(relationship: number, group1: number | string, group2: number | string): void;
/**
 * Can't select void. This function returns nothing. The hash of the created relationship group is output in the second parameter.
 *
 * Hash: 0xF372BC22FCB88606 | Since: 323
 * @deprecated Use ped.addRelationshipGroup(name) instead
 */
export declare function addRelationshipGroup(name: string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xB6BA2444AB393DA2 | Since: 323
 * @deprecated Use ped.removeRelationshipGroup(groupHash) instead
 */
export declare function removeRelationshipGroup(groupHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xCC6E3B6BB69501F1 | Since: 505
 * @deprecated Use ped.doesRelationshipGroupExist(groupHash) instead
 */
export declare function doesRelationshipGroupExist(groupHash: number | string): boolean;
/**
 * Gets the relationship between two peds. This should be called twice (once for each ped).
 *
 * Relationship types:
 * 0 = Companion
 * 1 = Respect
 * 2 = Like
 * 3 = Neutral
 * 4 = Dislike
 * 5 = Hate
 * 255 = Pedestrians
 * (Credits: Inco)
 *
 * Example:
 * `PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, l_1017, 0xA49E591C);`
 * `PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, 0xA49E591C, l_1017);`
 *
 * Hash: 0xEBA5AD3A0EAF7121 | Since: 323
 * @deprecated Use ped.getRelationshipBetweens(ped1, ped2) instead
 */
export declare function getRelationshipBetweenPeds(ped1: number | Ped, ped2: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x42FDD0F017B1E38E | Since: 323
 * @deprecated Use ped.getRelationshipGroupDefaultHash(ped1) instead
 */
export declare function getPedRelationshipGroupDefaultHash(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x7DBDD04862D95F04 | Since: 323
 * @deprecated Use ped.getRelationshipGroupHash(ped1) instead
 */
export declare function getPedRelationshipGroupHash(ped1: number | Ped): number;
/**
 * Gets the relationship between two groups. This should be called twice (once for each group).
 *
 * Relationship types:
 * 0 = Companion
 * 1 = Respect
 * 2 = Like
 * 3 = Neutral
 * 4 = Dislike
 * 5 = Hate
 * 255 = Pedestrians
 *
 * Example:
 * `PED::GET_RELATIONSHIP_BETWEEN_GROUPS(l_1017, 0xA49E591C);`
 * `PED::GET_RELATIONSHIP_BETWEEN_GROUPS(0xA49E591C, l_1017);`
 *
 * Hash: 0x9E6B70061662AE5C | Since: 323
 * @deprecated Use ped.getRelationshipBetweenGroups(group1, group2) instead
 */
export declare function getRelationshipBetweenGroups(group1: number | string, group2: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x5615E0C5EB2BC6E2 | Since: 877
 * @deprecated Use ped.setRelationshipGroupAffectsWantedLevel(group) instead
 */
export declare function setRelationshipGroupAffectsWantedLevel(group: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xAD27D957598E49E9 | Since: 1290
 * @deprecated Use ped.tellGroupsInAreaToAttack(ped1, hash) instead
 */
export declare function tellGroupPedsInAreaToAttack(ped1: number | Ped, hash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x4328652AE5769C71 | Since: 323
 * @deprecated Use ped.setCanBeTargetedWithoutLos(ped1, toggle) instead
 */
export declare function setPedCanBeTargetedWithoutLos(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x112942C6E708F70B | Since: 323
 * @deprecated Use ped.setToInformRespectedFriends(ped1, radius, maxFriends) instead
 */
export declare function setPedToInformRespectedFriends(ped1: number | Ped, radius: number, maxFriends: number): void;
/**
 * No comment provided
 *
 * Hash: 0x625B774D75C87068 | Since: 323
 * @deprecated Use ped.isRespondingToEvent(ped1, event) instead
 */
export declare function isPedRespondingToEvent(ped1: number | Ped, event: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBA656A3BB01BDEA3 | Since: 2189
 * @deprecated Use ped.getPosFromFiredEvent(ped1, eventType) instead
 */
export declare function getPosFromFiredEvent(ped1: number | Ped, eventType: number): [boolean, any];
/**
 * FIRING_PATTERN_BURST_FIRE = 0xD6FF6D61 ( 1073727030 )
 * FIRING_PATTERN_BURST_FIRE_IN_COVER = 0x026321F1 ( 40051185 )
 * FIRING_PATTERN_BURST_FIRE_DRIVEBY = 0xD31265F2 ( -753768974 )
 * FIRING_PATTERN_FROM_GROUND = 0x2264E5D6 ( 577037782 )
 * FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 0x7A845691 ( 2055493265 )
 * FIRING_PATTERN_FULL_AUTO = 0xC6EE6B4C ( -957453492 )
 * FIRING_PATTERN_SINGLE_SHOT = 0x5D60E4E0 ( 1566631136 )
 * FIRING_PATTERN_BURST_FIRE_PISTOL = 0xA018DB8A ( -1608983670 )
 * FIRING_PATTERN_BURST_FIRE_SMG = 0xD10DADEE ( 1863348768 )
 * FIRING_PATTERN_BURST_FIRE_RIFLE = 0x9C74B406 ( -1670073338 )
 * FIRING_PATTERN_BURST_FIRE_MG = 0xB573C5B4 ( -1250703948 )
 * FIRING_PATTERN_BURST_FIRE_PUMPSHOTGUN = 0x00BAC39B ( 12239771 )
 * FIRING_PATTERN_BURST_FIRE_HELI = 0x914E786F ( -1857128337 )
 * FIRING_PATTERN_BURST_FIRE_MICRO = 0x42EF03FD ( 1122960381 )
 * FIRING_PATTERN_SHORT_BURSTS = 0x1A92D7DF ( 445831135 )
 * FIRING_PATTERN_SLOW_FIRE_TANK = 0xE2CA3A71 ( -490063247 )
 *
 * Firing pattern info: https://pastebin.com/Px036isB
 *
 * Hash: 0x9AC577F5A12AD8A9 | Since: 323
 * @deprecated Use ped.setFiringPattern(ped1, patternHash) instead
 */
export declare function setPedFiringPattern(ped1: number | Ped, patternHash: number | string): void;
/**
 * shootRate 0-1000
 *
 * Hash: 0x614DA022990752DC | Since: 323
 * @deprecated Use ped.setShootRate(ped1, shootRate) instead
 */
export declare function setPedShootRate(ped1: number | Ped, shootRate: number): void;
/**
 * combatType can be between 0-14. See GET_COMBAT_FLOAT below for a list of possible parameters.
 *
 * Hash: 0xFF41B4B141ED981C | Since: 323
 * @deprecated Use ped.setCombatFloat(ped1, combatType) instead
 */
export declare function setCombatFloat(ped1: number | Ped, combatType: number): void;
/**
 * p0: Ped Handle
 * p1: int i | 0 <= i <= 27
 *
 * p1 probably refers to the attributes configured in combatbehavior.meta. There are 13. Example:
 *
 * <BlindFireChance value="0.1"/>
 * <WeaponShootRateModifier value="1.0"/>
 * <TimeBetweenBurstsInCover value="1.25"/>
 * <BurstDurationInCover value="2.0"/>
 * <TimeBetweenPeeks value="10.0"/>
 * <WeaponAccuracy value="0.18"/>
 * <FightProficiency value="0.8"/>
 * <StrafeWhenMovingChance value="1.0"/>
 * <WalkWhenStrafingChance value="0.0"/>
 * <AttackWindowDistanceForCover value="55.0"/>
 * <TimeToInvalidateInjuredTarget value="9.0"/>
 * <TriggerChargeTime_Near value="4.0"/>
 * <TriggerChargeTime_Far value="10.0"/>
 *
 * -------------Confirmed by editing combatbehavior.meta:
 * p1:
 * 0=BlindFireChance
 * 1=BurstDurationInCover
 * 3=TimeBetweenBurstsInCover
 * 4=TimeBetweenPeeks
 * 5=StrafeWhenMovingChance
 * 8=WalkWhenStrafingChance
 * 11=AttackWindowDistanceForCover
 * 12=TimeToInvalidateInjuredTarget
 * 16=OptimalCoverDistance
 *
 *
 * Hash: 0x52DFF8A10508090A | Since: 323
 * @deprecated Use ped.getCombatFloat(ped1) instead
 */
export declare function getCombatFloat(ped1: number | Ped): number;
/**
 * p1 may be a BOOL representing whether or not the group even exists
 *
 * Hash: 0x8DE69FE35CA09A45 | Since: 323
 * @deprecated Use ped.getGroupSize(groupID) instead
 */
export declare function getGroupSize(groupID: number): [any, number];
/**
 * No comment provided
 *
 * Hash: 0x7C6B0C22F9F40BBE | Since: 323
 * @deprecated Use ped.doesGroupExist(groupId) instead
 */
export declare function doesGroupExist(groupId: number): boolean;
/**
 * Returns the group id of which the specified ped is a member of.
 *
 * Hash: 0xF162E133B4E7A675 | Since: 323
 * @deprecated Use ped.getGroupIndex(ped1) instead
 */
export declare function getPedGroupIndex(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x5891CAC5D4ACFF74 | Since: 323
 * @deprecated Use ped.isInGroup(ped1) instead
 */
export declare function isPedInGroup(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6A3975DEA89F9A17 | Since: 323
 * @deprecated Use ped.getPlayerIsFollowing(ped1) instead
 */
export declare function getPlayerPedIsFollowing(ped1: number | Ped): number | string;
/**
 * 0: Default
 * 1: Circle Around Leader
 * 2: Alternative Circle Around Leader
 * 3: Line, with Leader at center
 *
 * Hash: 0xCE2F5FC3AF7E8C1E | Since: 323
 * @deprecated Use ped.setGroupFormation(groupId, formationType) instead
 */
export declare function setGroupFormation(groupId: number, formationType: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1D9D45004C28C916 | Since: 323
 * @deprecated Use ped.setGroupFormationSpacing(groupId, pos) instead
 */
export declare function setGroupFormationSpacing(groupId: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x63DAB4CCB3273205 | Since: 323
 * @deprecated Use ped.resetGroupFormationDefaultSpacing(groupHandle) instead
 */
export declare function resetGroupFormationDefaultSpacing(groupHandle: number): void;
/**
 * Gets ID of vehicle player using. It means it can get ID at any interaction with vehicle. Enter\exit for example. And that means it is faster than GET_VEHICLE_PED_IS_IN but less safe.
 *
 * Hash: 0x6094AD011A2EA87D | Since: 323
 * @deprecated Use ped.getVehicleIsUsing(ped1) instead
 */
export declare function getVehiclePedIsUsing(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xF92691AED837A5FC | Since: 323
 * @deprecated Use ped.getVehicleIsEntering(ped1) instead
 */
export declare function getVehiclePedIsEntering(ped1: number | Ped): number;
/**
 * enable or disable the gravity of a ped
 *
 * Examples:
 * `PED::SET_PED_GRAVITY(PLAYER::PLAYER_PED_ID(), 0x00000001);`
 * `PED::SET_PED_GRAVITY(Local_289[iVar0 \/\*20\*\/], 0x00000001);`
 *
 * Hash: 0x9FF447B6B6AD960A | Since: 323
 * @deprecated Use ped.setGravity(ped1, toggle) instead
 */
export declare function setPedGravity(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x100CD221F572F6E1 | Since: 3407
 * @deprecated Use ped.setSurvivesBeingOutOfWater(ped1, toggle) instead
 */
export declare function setPedSurvivesBeingOutOfWater(ped1: number | Ped, toggle: boolean): boolean;
/**
 * damages a ped with the given amount
 *
 * Hash: 0x697157CED63F18D4 | Since: 323
 * @deprecated Use ped.applyDamageTo(ped1, damageAmount, weaponType) instead
 */
export declare function applyDamageToPed(ped1: number | Ped, damageAmount: number, weaponType: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x36B77BB84687C318 | Since: 323
 * @deprecated Use ped.getTimeDamagedByWeapon(ped1, weaponHash) instead
 */
export declare function getTimePedDamagedByWeapon(ped1: number | Ped, weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xDA1F1B7BE1A8766F | Since: 323
 * @deprecated Use ped.setAllowedToDuck(ped1, toggle) instead
 */
export declare function setPedAllowedToDuck(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3DBFC55D5C9BB447 | Since: 323
 * @deprecated Use ped.setNeverLeavesGroup(ped1, toggle) instead
 */
export declare function setPedNeverLeavesGroup(ped1: number | Ped, toggle: boolean): void;
/**
 * https://alloc8or.re/gta5/doc/enums/ePedType.txt
 *
 * Hash: 0xFF059E1E4C01E63C | Since: 323
 * @deprecated Use ped.getType(ped1) instead
 */
export declare function getPedType(ped1: number | Ped): number;
/**
 * Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. SWAT and Army will still shoot at you. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.
 *
 * Hash: 0xBB03C38DD3FB7FFD | Since: 323
 * @deprecated Use ped.setAsCop(ped1, toggle) instead
 */
export declare function setPedAsCop(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB3352E018D6F89DF | Since: 2699
 * @deprecated Use ped.setHealthPendingLastDamageEventOverrideFlag(toggle) instead
 */
export declare function setPedHealthPendingLastDamageEventOverrideFlag(toggle: boolean): void;
/**
 * Sets the maximum health of a ped.
 *
 * Hash: 0xF5F6378C4F3419D3 | Since: 323
 * @deprecated Use ped.setMaxHealth(ped1, value) instead
 */
export declare function setPedMaxHealth(ped1: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4700A416E8324EF3 | Since: 323
 * @deprecated Use ped.getMaxHealth(ped1) instead
 */
export declare function getPedMaxHealth(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x43C851690662113D | Since: 323
 * @deprecated Use ped.setMaxTimeInWater(ped1, value) instead
 */
export declare function setPedMaxTimeInWater(ped1: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6BA428C528D9E522 | Since: 323
 * @deprecated Use ped.setMaxTimeUnderwater(ped1, value) instead
 */
export declare function setPedMaxTimeUnderwater(ped1: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2735233A786B1BEF | Since: 323
 * @deprecated Use ped.setCorpseRagdollFriction(ped1) instead
 */
export declare function setCorpseRagdollFriction(ped1: number | Ped): void;
/**
 * seatIndex must be <= 2
 *
 * Hash: 0x952F06BEECD775CC | Since: 323
 * @deprecated Use ped.setVehicleForcedSeatUsage(ped1, vehicle, seatIndex, flags) instead
 */
export declare function setPedVehicleForcedSeatUsage(ped1: number | Ped, vehicle: number | Vehicle, seatIndex: number, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE6CA85E7259CE16B | Since: 323
 * @deprecated Use ped.clearAllVehicleForcedSeatUsage(ped1) instead
 */
export declare function clearAllPedVehicleForcedSeatUsage(ped1: number | Ped): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0xB282749D5E028163 | Since: 877
 * @deprecated Use ped.setCanBeKnockedOffBike() instead
 */
export declare function setPedCanBeKnockedOffBike(): void;
/**
 * state: https://alloc8or.re/gta5/doc/enums/eKnockOffVehicle.txt
 *
 * Hash: 0x7A6535691B477C48 | Since: 323
 * @deprecated Use ped.setCanBeKnockedOffVehicle(ped1, state) instead
 */
export declare function setPedCanBeKnockedOffVehicle(ped1: number | Ped, state: number): void;
/**
 * No comment provided
 *
 * Hash: 0x51AC07A44D4F5B8A | Since: 323
 * @deprecated Use ped.canKnockOffVehicle(ped1) instead
 */
export declare function canKnockPedOffVehicle(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x45BBCBA77C29A841 | Since: 323
 * @deprecated Use ped.knockOffVehicle(ped1) instead
 */
export declare function knockPedOffVehicle(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x87052FE446E07247 | Since: 323
 * @deprecated Use ped.setCoordsNoGang(ped1, pos) instead
 */
export declare function setPedCoordsNoGang(ped1: number | Ped, pos: Vector3): void;
/**
 * from fm_mission_controller.c4 (variable names changed for clarity):
 *
 * `int groupID = PLAYER::GET_PLAYER_GROUP(PLAYER::PLAYER_ID());`
 * `PED::GET_GROUP_SIZE(group, &unused, &groupSize);`
 * if (groupSize >= 1) {
 * . . . . for (int memberNumber = 0; memberNumber < groupSize; memberNumber++) {
 * `. . . . . . . . Ped ped1 = PED::GET_PED_AS_GROUP_MEMBER(groupID, memberNumber);`
 * . . . . . . . . //and so on
 *
 * Hash: 0x51455483CF23ED97 | Since: 323
 * @deprecated Use ped.getAsGroupMember(groupID, memberNumber) instead
 */
export declare function getPedAsGroupMember(groupID: number, memberNumber: number): number;
/**
 * No comment provided
 *
 * Hash: 0x5CCE68DBD5FE93EC | Since: 323
 * @deprecated Use ped.getAsGroupLeader(groupID) instead
 */
export declare function getPedAsGroupLeader(groupID: number): number;
/**
 * No comment provided
 *
 * Hash: 0x971D38760FBC02EF | Since: 323
 * @deprecated Use ped.setKeepTask(ped1, toggle) instead
 */
export declare function setPedKeepTask(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x49E50BDB8BA4DAB2 | Since: 323
 * @deprecated Use ped.setAllowMinorReactionsAsMissionPed(ped1, toggle) instead
 */
export declare function setPedAllowMinorReactionsAsMissionPed(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9DE327631295B4C2 | Since: 323
 * @deprecated Use ped.isSwimming(ped1) instead
 */
export declare function isPedSwimming(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC024869A53992F34 | Since: 323
 * @deprecated Use ped.isSwimmingUnderWater(ped1) instead
 */
export declare function isPedSwimmingUnderWater(ped1: number | Ped): boolean;
/**
 * teleports ped to coords along with the vehicle ped is in
 *
 * Hash: 0x9AFEFF481A85AB2E | Since: 323
 * @deprecated Use ped.setCoordsKeepVehicle(ped1, pos) instead
 */
export declare function setPedCoordsKeepVehicle(ped1: number | Ped, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x2A30922C90C9B42C | Since: 323
 * @deprecated Use ped.setDiesInVehicle(ped1, toggle) instead
 */
export declare function setPedDiesInVehicle(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x102E68B2024D536D | Since: 323
 * @deprecated Use ped.setCreateRandomCops(toggle) instead
 */
export declare function setCreateRandomCops(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8A4986851C4EF6E7 | Since: 323
 * @deprecated Use ped.setCreateRandomCopsNotOnScenarios(toggle) instead
 */
export declare function setCreateRandomCopsNotOnScenarios(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x444CB7D7DBE6973D | Since: 323
 * @deprecated Use ped.setCreateRandomCopsOnScenarios(toggle) instead
 */
export declare function setCreateRandomCopsOnScenarios(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x5EE2CAFF7F17770D | Since: 323
 * @deprecated Use ped.canCreateRandomCops() instead
 */
export declare function canCreateRandomCops(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x02A0C9720B854BFA | Since: 323
 * @deprecated Use ped.setAsEnemy(ped1, toggle) instead
 */
export declare function setPedAsEnemy(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1CCE141467FF42A2 | Since: 323
 * @deprecated Use ped.setCanSmashGlass(ped1) instead
 */
export declare function setPedCanSmashGlass(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x6F972C1AB75A1ED0 | Since: 323
 * @deprecated Use ped.isInAnyTrain(ped1) instead
 */
export declare function isPedInAnyTrain(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBB062B2B5722478E | Since: 323
 * @deprecated Use ped.isGettingIntoAVehicle(ped1) instead
 */
export declare function isPedGettingIntoAVehicle(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x44D28D5DDFE5F68C | Since: 323
 * @deprecated Use ped.isTryingToEnterALockedVehicle(ped1) instead
 */
export declare function isPedTryingToEnterALockedVehicle(ped1: number | Ped): boolean;
/**
 * ped can not pull out a weapon when true
 *
 * Hash: 0xDF1AF8B5D56542FA | Since: 323
 * @deprecated Use ped.setEnableHandcuffs(ped1, toggle) instead
 */
export declare function setEnableHandcuffs(ped1: number | Ped, toggle: boolean): void;
/**
 * Used with SET_ENABLE_HANDCUFFS in decompiled scripts. From my observations, I have noticed that while being ragdolled you are not able to get up but you can still run. Your legs can also bend.
 *
 * Hash: 0xC52E0F855C58FC2E | Since: 323
 * @deprecated Use ped.setEnableBoundAnkles(ped1, toggle) instead
 */
export declare function setEnableBoundAnkles(ped1: number | Ped, toggle: boolean): void;
/**
 * Enables diving motion when underwater.
 *
 * Hash: 0xF99F62004024D506 | Since: 323
 * @deprecated Use ped.setEnableScuba(ped1, toggle) instead
 */
export declare function setEnableScuba(ped1: number | Ped, toggle: boolean): void;
/**
 * Setting ped to true allows the ped to shoot "friendlies".
 *
 * p2 set to true when toggle is also true seams to make peds permanently unable to aim at, even if you set p2 back to false.
 *
 * p1 = false & p2 = false for unable to aim at.
 * p1 = true & p2 = false for able to aim at.
 *
 * Hash: 0xB3B1CB349FF9C75D | Since: 323
 * @deprecated Use ped.setCanAttackFriendly(ped1, toggle) instead
 */
export declare function setCanAttackFriendly(ped1: number | Ped, toggle: boolean): void;
/**
 * Returns the ped's alertness (0-3).
 *
 * Values :
 *
 * 0 : Neutral
 * 1 : Heard something (gun shot, hit, etc)
 * 2 : Knows (the origin of the event)
 * 3 : Fully alerted (is facing the event?)
 *
 * If the Ped does not exist, returns -1.
 *
 * Hash: 0xF6AA118530443FD2 | Since: 323
 * @deprecated Use ped.getAlertness(ped1) instead
 */
export declare function getPedAlertness(ped1: number | Ped): number;
/**
 * value ranges from 0 to 3.
 *
 * Hash: 0xDBA71115ED9941A6 | Since: 323
 * @deprecated Use ped.setAlertness(ped1, value) instead
 */
export declare function setPedAlertness(ped1: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBC0ED94165A48BC2 | Since: 323
 * @deprecated Use ped.setGetOutUpsideDownVehicle(ped1, toggle) instead
 */
export declare function setPedGetOutUpsideDownVehicle(ped1: number | Ped, toggle: boolean): void;
/**
 * transitionSpeed is the time in seconds it takes to transition from one movement clipset to another.	ransitionSpeed is usually 1.0f
 *
 * List of movement clipsets:
 * Thanks to elsewhat for list.
 *
 * "ANIM_GROUP_MOVE_BALLISTIC"
 * "ANIM_GROUP_MOVE_LEMAR_ALLEY"
 * "clipset@move@trash_fast_turn"
 * "FEMALE_FAST_RUNNER"
 * "missfbi4prepp1_garbageman"
 * "move_characters@franklin@fire"
 * "move_characters@Jimmy@slow@"
 * "move_characters@michael@fire"
 * "move_f@flee@a"
 * "move_f@scared"
 * "move_f@sexy@a"
 * "move_heist_lester"
 * "move_injured_generic"
 * "move_lester_CaneUp"
 * "move_m@bag"
 * "MOVE_M@BAIL_BOND_NOT_TAZERED"
 * "MOVE_M@BAIL_BOND_TAZERED"
 * "move_m@brave"
 * "move_m@casual@d"
 * "move_m@drunk@moderatedrunk"
 * "MOVE_M@DRUNK@MODERATEDRUNK"
 * "MOVE_M@DRUNK@MODERATEDRUNK_HEAD_UP"
 * "MOVE_M@DRUNK@SLIGHTLYDRUNK"
 * "MOVE_M@DRUNK@VERYDRUNK"
 * "move_m@fire"
 * "move_m@gangster@var_e"
 * "move_m@gangster@var_f"
 * "move_m@gangster@var_i"
 * "move_m@JOG@"
 * "MOVE_M@PRISON_GAURD"
 * "MOVE_P_M_ONE"
 * "MOVE_P_M_ONE_BRIEFCASE"
 * "move_p_m_zero_janitor"
 * "move_p_m_zero_slow"
 * "move_ped_bucket"
 * "move_ped_crouched"
 * "move_ped_mop"
 * "MOVE_M@FEMME@"
 * "MOVE_F@FEMME@"
 * "MOVE_M@GANGSTER@NG"
 * "MOVE_F@GANGSTER@NG"
 * "MOVE_M@POSH@"
 * "MOVE_F@POSH@"
 * "MOVE_M@TOUGH_GUY@"
 * "MOVE_F@TOUGH_GUY@"
 *
 * ~ NotCrunchyTaco
 *
 * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
 *
 * Hash: 0xAF8A94EDE7712BEF | Since: 323
 * @deprecated Use ped.setMovementClipset(ped1, clipSet, transitionSpeed) instead
 */
export declare function setPedMovementClipset(ped1: number | Ped, clipSet: string, transitionSpeed: number): void;
/**
 * If p1 is 0.0, I believe you are back to normal.
 * If p1 is 1.0, it looks like you can only rotate the ped, not walk.
 *
 * Using the following code to reset back to normal
 * `PED::RESET_PED_MOVEMENT_CLIPSET(PLAYER::PLAYER_PED_ID(), 0.0);`
 *
 * Hash: 0xAA74EC0CB0AAEA2C | Since: 323
 * @deprecated Use ped.resetMovementClipset(ped1) instead
 */
export declare function resetPedMovementClipset(ped1: number | Ped): void;
/**
 * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
 *
 * Hash: 0x29A28F3F8CF6D854 | Since: 323
 * @deprecated Use ped.setStrafeClipset(ped1, clipSet) instead
 */
export declare function setPedStrafeClipset(ped1: number | Ped, clipSet: string): void;
/**
 * No comment provided
 *
 * Hash: 0x20510814175EA477 | Since: 323
 * @deprecated Use ped.resetStrafeClipset(ped1) instead
 */
export declare function resetPedStrafeClipset(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x2622E35B77D3ACA2 | Since: 323
 * @deprecated Use ped.setWeaponMovementClipset(ped1, clipSet) instead
 */
export declare function setPedWeaponMovementClipset(ped1: number | Ped, clipSet: string): void;
/**
 * No comment provided
 *
 * Hash: 0x97B0DB5B4AA74E77 | Since: 323
 * @deprecated Use ped.resetWeaponMovementClipset(ped1) instead
 */
export declare function resetPedWeaponMovementClipset(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xED34AB6C5CB36520 | Since: 323
 * @deprecated Use ped.setDriveByClipsetOverride(ped1, clipset) instead
 */
export declare function setPedDriveByClipsetOverride(ped1: number | Ped, clipset: string): void;
/**
 * No comment provided
 *
 * Hash: 0x4AFE3690D7E0B5AC | Since: 323
 * @deprecated Use ped.clearDriveByClipsetOverride(ped1) instead
 */
export declare function clearPedDriveByClipsetOverride(ped1: number | Ped): void;
/**
 * Found in the b617d scripts:
 * `PED::SET_PED_MOTION_IN_COVER_CLIPSET_OVERRIDE(v_7, "trevor_heist_cover_2h");`
 *
 * Hash: 0x9DBA107B4937F809 | Since: 323
 * @deprecated Use ped.setMotionInCoverClipsetOverride(ped1) instead
 */
export declare function setPedMotionInCoverClipsetOverride(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xC79196DCB36F6121 | Since: 323
 * @deprecated Use ped.clearMotionInCoverClipsetOverride(ped1) instead
 */
export declare function clearPedMotionInCoverClipsetOverride(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x80054D7FCC70EEC6 | Since: 323
 * @deprecated Use ped.clearFallUpperBodyClipsetOverride(ped1) instead
 */
export declare function clearPedFallUpperBodyClipsetOverride(ped1: number | Ped): void;
/**
 * `PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_PASSENGER"));`
 * `PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_RESTRICTED_PASSENGER"));`
 * `PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT"));`
 * `PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT_REAR"));`
 * `PED::SET_PED_IN_VEHICLE_CONTEXT(l_95, MISC::GET_HASH_KEY("MISS_FAMILY2_JIMMY_BICYCLE"));`
 * `PED::SET_PED_IN_VEHICLE_CONTEXT(num3, MISC::GET_HASH_KEY("MISSFBI2_MICHAEL_DRIVEBY"));`
 * `PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISS_ARMENIAN3_FRANKLIN_TENSE"));`
 * `PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISSFBI5_TREVOR_DRIVING"));`
 *
 * Hash: 0x530071295899A8C6 | Since: 323
 * @deprecated Use ped.setInVehicleContext(ped1, context) instead
 */
export declare function setPedInVehicleContext(ped1: number | Ped, context: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x22EF8FF8778030EB | Since: 323
 * @deprecated Use ped.resetInVehicleContext(ped1) instead
 */
export declare function resetPedInVehicleContext(ped1: number | Ped): void;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x6EC47A344923E1ED | Since: 323
 * @deprecated Use ped.isScriptedScenarioUsingConditionalAnim(ped1, animDict, anim) instead
 */
export declare function isScriptedScenarioPedUsingConditionalAnim(ped1: number | Ped, animDict: string, anim: string): boolean;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
 *
 * Hash: 0x6C60394CB4F75E9A | Since: 323
 * @deprecated Use ped.setAlternateWalkAnim(ped1, animDict, animName) instead
 */
export declare function setPedAlternateWalkAnim(ped1: number | Ped, animDict: string, animName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x8844BBFCE30AA9E9 | Since: 323
 * @deprecated Use ped.clearAlternateWalkAnim(ped1) instead
 */
export declare function clearPedAlternateWalkAnim(ped1: number | Ped): void;
/**
 * stance:
 * 0 = idle
 * 1 = walk
 * 2 = running
 *
 * p5 = usually set to true
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
 *
 * Hash: 0x90A43CC281FFAB46 | Since: 323
 * @deprecated Use ped.setAlternateMovementAnim(ped1, stance, animDictionary, animationName) instead
 */
export declare function setPedAlternateMovementAnim(ped1: number | Ped, stance: number, animDictionary: string, animationName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xD8D19675ED5FBDCE | Since: 323
 * @deprecated Use ped.clearAlternateMovementAnim(ped1, stance) instead
 */
export declare function clearPedAlternateMovementAnim(ped1: number | Ped, stance: number): void;
/**
 * From the scripts:
 * `PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),`
 * "ANIM_GROUP_GESTURE_MISS_FRA0");
 * `PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),`
 * "ANIM_GROUP_GESTURE_MISS_DocksSetup1");
 *
 * Hash: 0xDDF803377F94AAA8 | Since: 323
 * @deprecated Use ped.setGestureGroup(ped1, animGroupGesture) instead
 */
export declare function setPedGestureGroup(ped1: number | Ped, animGroupGesture: string): void;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0xBE22B26DD764C040 | Since: 323
 * @deprecated Use ped.getAnimInitialOffsetPosition(animDict, animName, pos, rot) instead
 */
export declare function getAnimInitialOffsetPosition(animDict: string, animName: string, pos: Vector3, rot: Vector3): Vector3;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x4B805E6046EE9E47 | Since: 323
 * @deprecated Use ped.getAnimInitialOffsetRotation(animDict, animName, pos, rot) instead
 */
export declare function getAnimInitialOffsetRotation(animDict: string, animName: string, pos: Vector3, rot: Vector3): Vector3;
/**
 * Ids
 * 0 - Head
 * 1 - Beard
 * 2 - Hair
 * 3 - Torso
 * 4 - Legs
 * 5 - Hands
 * 6 - Foot
 * 7 - ------
 * 8 - Accessories 1
 * 9 - Accessories 2
 * 10- Decals
 * 11 - Auxiliary parts for torso
 *
 * Hash: 0x67F3780DD425D4FC | Since: 323
 * @deprecated Use ped.getDrawableVariation(ped1, componentId) instead
 */
export declare function getPedDrawableVariation(ped1: number | Ped, componentId: number): number;
/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Hash: 0x27561561732A7842 | Since: 323
 * @deprecated Use ped.getNumberOfDrawableVariations(ped1, componentId) instead
 */
export declare function getNumberOfPedDrawableVariations(ped1: number | Ped, componentId: number): number;
/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Hash: 0x04A355E041E004E6 | Since: 323
 * @deprecated Use ped.getTextureVariation(ped1, componentId) instead
 */
export declare function getPedTextureVariation(ped1: number | Ped, componentId: number): number;
/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Hash: 0x8F7156A3142A6BAD | Since: 323
 * @deprecated Use ped.getNumberOfTextureVariations(ped1, componentId, drawableId) instead
 */
export declare function getNumberOfPedTextureVariations(ped1: number | Ped, componentId: number, drawableId: number): number;
/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Hash: 0x5FAF9754E789FB47 | Since: 323
 * @deprecated Use ped.getNumberOfPropDrawableVariations(ped1, propId) instead
 */
export declare function getNumberOfPedPropDrawableVariations(ped1: number | Ped, propId: number): number;
/**
 * Need to check behavior when drawableId = -1
 *
 * - Doofy.Ass
 * Why this function doesn't work and return nill value?
 * GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(PLAYER.PLAYER_PED_ID(), 0, 5)
 *
 * tick: scripts/addins/menu_execute.lua:51: attempt to call field 'GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS' (a nil value)
 *
 *
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Hash: 0xA6E7F1CEB523E171 | Since: 323
 * @deprecated Use ped.getNumberOfPropTextureVariations(ped1, propId, drawableId) instead
 */
export declare function getNumberOfPedPropTextureVariations(ped1: number | Ped, propId: number, drawableId: number): number;
/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Hash: 0xE3DD5F2A84B42281 | Since: 323
 * @deprecated Use ped.getPaletteVariation(ped1, componentId) instead
 */
export declare function getPedPaletteVariation(ped1: number | Ped, componentId: number): number;
/**
 * No comment provided
 *
 * Hash: 0x9E30E91FB03A2CAF | Since: 323
 * @deprecated Use ped.getMpOutfitDataFromMetadata() instead
 */
export declare function getMpOutfitDataFromMetadata(): [boolean, any, any];
/**
 * No comment provided
 *
 * Hash: 0x1E77FA7A62EE6C4C | Since: 323
 * @deprecated Use ped.getFmMaleShopApparelItemIndex() instead
 */
export declare function getFmMaleShopPedApparelItemIndex(): number;
/**
 * No comment provided
 *
 * Hash: 0xF033419D1B81FAE8 | Since: 323
 * @deprecated Use ped.getFmFemaleShopApparelItemIndex() instead
 */
export declare function getFmFemaleShopPedApparelItemIndex(): number;
/**
 * Checks if the component variation is valid, this works great for randomizing components using loops.
 *
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Full list of ped components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedComponentVariations.json
 *
 * Hash: 0xE825F6B6CEA7671D | Since: 323
 * @deprecated Use ped.isComponentVariationValid(ped1, componentId, drawableId, textureId) instead
 */
export declare function isPedComponentVariationValid(ped1: number | Ped, componentId: number, drawableId: number, textureId: number): boolean;
/**
 * paletteId: 0 to 3.
 *
 * componentId:
 * enum ePedVarComp
 * {
 * PV_COMP_INVALID = -1,
 * PV_COMP_HEAD,
 * PV_COMP_BERD,
 * PV_COMP_HAIR,
 * PV_COMP_UPPR,
 * PV_COMP_LOWR,
 * PV_COMP_HAND,
 * PV_COMP_FEET,
 * PV_COMP_TEEF,
 * PV_COMP_ACCS,
 * PV_COMP_TASK,
 * PV_COMP_DECL,
 * PV_COMP_JBIB,
 * PV_COMP_MAX
 * };
 *
 * Examples: https://gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Full list of ped components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedComponentVariations.json
 *
 * Hash: 0x262B14F48D29DE80 | Since: 323
 * @deprecated Use ped.setComponentVariation(ped1, componentId, drawableId, textureId, paletteId) instead
 */
export declare function setPedComponentVariation(ped1: number | Ped, componentId: number, drawableId: number, textureId: number, paletteId: number): void;
/**
 * p1 is always 0 in R* scripts.
 *
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Hash: 0xC8A9481A01E63C28 | Since: 323
 * @deprecated Use ped.setRandomComponentVariation(ped1) instead
 */
export declare function setPedRandomComponentVariation(ped1: number | Ped): void;
/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Hash: 0xC44AA05345C992C6 | Since: 323
 * @deprecated Use ped.setRandomProps(ped1) instead
 */
export declare function setPedRandomProps(ped1: number | Ped): void;
/**
 * Sets Ped Default Clothes
 *
 * Hash: 0x45EEE61580806D63 | Since: 323
 * @deprecated Use ped.setDefaultComponentVariation(ped1) instead
 */
export declare function setPedDefaultComponentVariation(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x137BBD05230DB22D | Since: 323
 * @deprecated Use ped.setBlendFromParents(ped1) instead
 */
export declare function setPedBlendFromParents(ped1: number | Ped): void;
/**
 * The "shape" parameters control the shape of the ped's face. The "skin" parameters control the skin tone. ShapeMix and skinMix control how much the first and second IDs contribute,(typically mother and father.) ThirdMix overrides the others in favor of the third IDs. IsParent is set for "children" of the player character's grandparents during old-gen character creation. It has unknown effect otherwise.
 *
 * The IDs start at zero and go Male Non-DLC, Female Non-DLC, Male DLC, and Female DLC.
 *
 * !!!Can someone add working example for this???
 *
 * try this:
 * headBlendData headData;
 * GET_PED_HEAD_BLEND_DATA(PLAYER_PED_ID(), &headData);
 *
 * SET_PED_HEAD_BLEND_DATA(PLAYER_PED_ID(), headData.shapeFirst, headData.shapeSecond, headData.shapeThird, headData.skinFirst, headData.skinSecond
 * , headData.skinThird, headData.shapeMix, headData.skinMix, headData.skinThird, 0);
 *
 *
 * For more info please refer to this topic.
 * gtaforums.com/topic/858970-all-gtao-face-ids-pedset-ped-head-blend-data-explained
 *
 * Hash: 0x9414E18B9434C2FE | Since: 323
 * @deprecated Use ped.setHeadBlendData(ped1, shapeFirstID, shapeSecondID, shapeThirdID, skinFirstID, skinSecondID, skinThirdID, shapeMix, skinMix, thirdMix, isParent) instead
 */
export declare function setPedHeadBlendData(ped1: number | Ped, shapeFirstID: number, shapeSecondID: number, shapeThirdID: number, skinFirstID: number, skinSecondID: number, skinThirdID: number, shapeMix: number, skinMix: number, thirdMix: number, isParent: boolean): void;
/**
 * The pointer is to a padded struct that matches the arguments to SET_PED_HEAD_BLEND_DATA(...). There are 4 bytes of padding after each field.
 * pass this struct in the second parameter
 * struct headBlendData
 * {
 * int shapeFirst;
 * int padding1;
 * int shapeSecond;
 * int padding2;
 * int shapeThird;
 * int padding3;
 * int skinFirst;
 * int padding4;
 * int skinSecond;
 * int padding5;
 * int skinThird;
 * int padding6;
 * float shapeMix;
 * int padding7;
 * float skinMix;
 * int padding8;
 * float thirdMix;
 * int padding9;
 * bool isParent;
 * };
 *
 * Hash: 0x2746BD9D88C5C5D0 | Since: 323
 * @deprecated Use ped.getHeadBlendData(ped1) instead
 */
export declare function getPedHeadBlendData(ped1: number | Ped): [boolean, any];
/**
 * See SET_PED_HEAD_BLEND_DATA().
 *
 * Hash: 0x723538F61C647C5A | Since: 323
 * @deprecated Use ped.updateHeadBlendData(ped1, shapeMix, skinMix, thirdMix) instead
 */
export declare function updatePedHeadBlendData(ped1: number | Ped, shapeMix: number, skinMix: number, thirdMix: number): void;
/**
 * Used for freemode (online) characters.
 *
 * For some reason, the scripts use a rounded float for the index.
 * Indexes:
 * 1. black
 * 2. very light blue/green
 * 3. dark blue
 * 4. brown
 * 5. darker brown
 * 6. light brown
 * 7. blue
 * 8. light blue
 * 9. pink
 * 10. yellow
 * 11. purple
 * 12. black
 * 13. dark green
 * 14. light brown
 * 15. yellow/black pattern
 * 16. light colored spiral pattern
 * 17. shiny red
 * 18. shiny half blue/half red
 * 19. half black/half light blue
 * 20. white/red perimter
 * 21. green snake
 * 22. red snake
 * 23. dark blue snake
 * 24. dark yellow
 * 25. bright yellow
 * 26. all black
 * 28. red small pupil
 * 29. devil blue/black
 * 30. white small pupil
 * 31. glossed over
 *
 * Hash: 0x50B56988B170AFDF | Since: 323
 * @deprecated Use ped.setHeadBlendEyeColor(ped1, index) instead
 */
export declare function setHeadBlendEyeColor(ped1: number | Ped, index: number): void;
/**
 * A getter for _SET_PED_EYE_COLOR. Returns -1 if fails to get.
 *
 * Hash: 0x76BBA2CEE66D47E9 | Since: 1011
 * @deprecated Use ped.getHeadBlendEyeColor(ped1) instead
 */
export declare function getHeadBlendEyeColor(ped1: number | Ped): number;
/**
 * OverlayID ranges from 0 to 12, index from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1, and opacity from 0.0 to 1.0.
 *
 * overlayID       Part                  Index, to disable
 * 0               Blemishes             0 - 23, 255
 * 1               Facial Hair           0 - 28, 255
 * 2               Eyebrows              0 - 33, 255
 * 3               Ageing                0 - 14, 255
 * 4               Makeup                0 - 74, 255
 * 5               Blush                 0 - 6, 255
 * 6               Complexion            0 - 11, 255
 * 7               Sun Damage            0 - 10, 255
 * 8               Lipstick              0 - 9, 255
 * 9               Moles/Freckles        0 - 17, 255
 * 10              Chest Hair            0 - 16, 255
 * 11              Body Blemishes        0 - 11, 255
 * 12              Add Body Blemishes    0 - 1, 255
 *
 * Hash: 0x48F44967FA05CC1E | Since: 323
 * @deprecated Use ped.setHeadOverlay(ped1, overlayID, index, opacity) instead
 */
export declare function setPedHeadOverlay(ped1: number | Ped, overlayID: number, index: number, opacity: number): void;
/**
 * Likely a char, if that overlay is not set, e.i. "None" option, returns 255;
 *
 * This might be the once removed native GET_PED_HEAD_OVERLAY.
 *
 * Hash: 0xA60EF3B6461A4D43 | Since: 323
 * @deprecated Use ped.getHeadOverlay(ped1, overlayID) instead
 */
export declare function getPedHeadOverlay(ped1: number | Ped, overlayID: number): number;
/**
 * No comment provided
 *
 * Hash: 0xCF1CE768BB43480E | Since: 323
 * @deprecated Use ped.getHeadOverlayNum(overlayID) instead
 */
export declare function getPedHeadOverlayNum(overlayID: number): number;
/**
 *
 *
 * ColorType is 1 for eyebrows, beards, and chest hair; 2 for blush and lipstick; and 0 otherwise, though not called in those cases.
 *
 * Called after SET_PED_HEAD_OVERLAY().
 *
 * Hash: 0x497BF74A7B9CB952 | Since: 323
 * @deprecated Use ped.setHeadOverlayTint(ped1, overlayID, colorType, colorID, secondColorID) instead
 */
export declare function setPedHeadOverlayTint(ped1: number | Ped, overlayID: number, colorType: number, colorID: number, secondColorID: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4CFFC65454C93A49 | Since: 323
 * @deprecated Use ped.setHairTint(ped1, colorID, highlightColorID) instead
 */
export declare function setPedHairTint(ped1: number | Ped, colorID: number, highlightColorID: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE5C0CF872C2AD150 | Since: 323
 * @deprecated Use ped.getNumHairTints() instead
 */
export declare function getNumPedHairTints(): number;
/**
 * No comment provided
 *
 * Hash: 0xD1F7CA1535D22818 | Since: 323
 * @deprecated Use ped.getNumMakeupTints() instead
 */
export declare function getNumPedMakeupTints(): number;
/**
 * Input: Haircolor index, value between 0 and 63 (inclusive).
 * Output: RGB values for the haircolor specified in the input.
 *
 * This is used with the hair color swatches scaleform.
 * Use `GET_PED_MAKEUP_TINT_COLOR` to get the makeup colors.
 *
 * Hash: 0x4852FC386E2E1BB5 | Since: 323
 * @deprecated Use ped.getHairTintColor(hairColorIndex) instead
 */
export declare function getPedHairTintColor(hairColorIndex: number): [number, number, number];
/**
 * Input: Makeup color index, value between 0 and 63 (inclusive).
 * Output: RGB values for the makeup color specified in the input.
 *
 * This is used with the makeup color swatches scaleform.
 * Use `GET_PED_HAIR_TINT_COLOR` to get the hair colors.
 *
 * Hash: 0x013E5CFC38CD5387 | Since: 323
 * @deprecated Use ped.getMakeupTintColor(makeupColorIndex) instead
 */
export declare function getPedMakeupTintColor(makeupColorIndex: number): [number, number, number];
/**
 * No comment provided
 *
 * Hash: 0xED6D8E27A43B8CDE | Since: 323
 * @deprecated Use ped.isHairTintForCreator(colorId) instead
 */
export declare function isPedHairTintForCreator(colorId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEA9960D07DADCF10 | Since: 323
 * @deprecated Use ped.getDefaultSecondaryTintForCreator(colorId) instead
 */
export declare function getDefaultSecondaryTintForCreator(colorId: number): number;
/**
 * No comment provided
 *
 * Hash: 0x3E802F11FBE27674 | Since: 323
 * @deprecated Use ped.isLipstickTintForCreator(colorId) instead
 */
export declare function isPedLipstickTintForCreator(colorId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF41B5D290C99A3D6 | Since: 323
 * @deprecated Use ped.isBlushTintForCreator(colorId) instead
 */
export declare function isPedBlushTintForCreator(colorId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE0D36E5D9E99CC21 | Since: 323
 * @deprecated Use ped.isHairTintForBarber(colorID) instead
 */
export declare function isPedHairTintForBarber(colorID: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAAA6A3698A69E048 | Since: 323
 * @deprecated Use ped.getDefaultSecondaryTintForBarber(colorID) instead
 */
export declare function getDefaultSecondaryTintForBarber(colorID: number): number;
/**
 * No comment provided
 *
 * Hash: 0x0525A2C2562F3CD4 | Since: 323
 * @deprecated Use ped.isLipstickTintForBarber(colorID) instead
 */
export declare function isPedLipstickTintForBarber(colorID: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x604E810189EE3A59 | Since: 323
 * @deprecated Use ped.isBlushTintForBarber(colorID) instead
 */
export declare function isPedBlushTintForBarber(colorID: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x09E7ECA981D9B210 | Since: 1290
 * @deprecated Use ped.isBlushFacepaintTintForBarber(colorId) instead
 */
export declare function isPedBlushFacepaintTintForBarber(colorId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC56FBF2F228E1DAC | Since: 323
 * @deprecated Use ped.getTintIndexForLastGenHairTexture(modelHash, drawableId, textureId) instead
 */
export declare function getTintIndexForLastGenHairTexture(modelHash: number | string, drawableId: number, textureId: number): number;
/**
 * Sets the various freemode face features, e.g. nose length, chin shape. Scale ranges from -1.0 to 1.0.
 *
 *
 *
 * 0 - Nose Width (Thin/Wide)
 *
 * 1 - Nose Peak (Up/Down)
 *
 * 2 - Nose Length (Long/Short)
 *
 * 3 - Nose Bone Curveness (Crooked/Curved)
 *
 * 4 - Nose Tip (Up/Down)
 *
 * 5 - Nose Bone Twist (Left/Right)
 *
 * 6 - Eyebrow (Up/Down)
 *
 * 7 - Eyebrow (In/Out)
 *
 * 8 - Cheek Bones (Up/Down)
 *
 * 9 - Cheek Sideways Bone Size (In/Out)
 *
 * 10 - Cheek Bones Width (Puffed/Gaunt)
 *
 * 11 - Eye Opening (Both) (Wide/Squinted)
 *
 * 12 - Lip Thickness (Both) (Fat/Thin)
 *
 * 13 - Jaw Bone Width (Narrow/Wide)
 *
 * 14 - Jaw Bone Shape (Round/Square)
 *
 * 15 - Chin Bone (Up/Down)
 *
 * 16 - Chin Bone Length (In/Out or Backward/Forward)
 *
 * 17 - Chin Bone Shape (Pointed/Square)
 *
 * 18 - Chin Hole (Chin Bum)
 *
 * 19 - Neck Thickness (Thin/Thick)
 *
 * Hash: 0x71A5C1DBA060049E | Since: 323
 * @deprecated Use ped.setMicroMorph(ped1, index, scale) instead
 */
export declare function setPedMicroMorph(ped1: number | Ped, index: number, scale: number): void;
/**
 * No comment provided
 *
 * Hash: 0x654CD0A825161131 | Since: 323
 * @deprecated Use ped.hasHeadBlendFinished(ped1) instead
 */
export declare function hasPedHeadBlendFinished(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4668D80430D6C299 | Since: 323
 * @deprecated Use ped.finalizeHeadBlend(ped1) instead
 */
export declare function finalizeHeadBlend(ped1: number | Ped): void;
/**
 * p4 seems to vary from 0 to 3.
 * Preview: https://gfycat.com/MaleRareAmazonparrot
 *
 * Hash: 0xCC9682B8951C5229 | Since: 323
 * @deprecated Use ped.setHeadBlendPaletteColor(ped1, r, g, b, id) instead
 */
export declare function setHeadBlendPaletteColor(ped1: number | Ped, r: number, g: number, b: number, id: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA21C118553BBDF02 | Since: 323
 * @deprecated Use ped.disableHeadBlendPaletteColor(ped1) instead
 */
export declare function disableHeadBlendPaletteColor(ped1: number | Ped): void;
/**
 * Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
 *
 * Used when calling SET_PED_HEAD_BLEND_DATA.
 *
 * Hash: 0x68D353AB88B97E0C | Since: 323
 * @deprecated Use ped.getHeadBlendFirstIndex(_type) instead
 */
export declare function getPedHeadBlendFirstIndex(_type: number): number;
/**
 * Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
 *
 * Hash: 0x5EF37013A6539C9D | Since: 323
 * @deprecated Use ped.getHeadBlendNumHeads(_type) instead
 */
export declare function getPedHeadBlendNumHeads(_type: number): number;
/**
 * from extreme3.c4
 * `PED::SET_PED_PRELOAD_VARIATION_DATA(PLAYER::PLAYER_PED_ID(), 8, PED::GET_PED_DRAWABLE_VARIATION(PLAYER::PLAYER_PED_ID(), 8), PED::GET_PED_TEXTURE_VARIATION(PLAYER::PLAYER_PED_ID(), 8));`
 *
 * p1 is probably componentId
 *
 * Hash: 0x39D55A620FCB6A3A | Since: 323
 * @deprecated Use ped.setPreloadVariationData(ped1, slot, drawableId, textureId) instead
 */
export declare function setPedPreloadVariationData(ped1: number | Ped, slot: number, drawableId: number, textureId: number): number;
/**
 * No comment provided
 *
 * Hash: 0x66680A92700F43DF | Since: 323
 * @deprecated Use ped.hasPreloadVariationDataFinished(ped1) instead
 */
export declare function hasPedPreloadVariationDataFinished(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5AAB586FFEC0FD96 | Since: 323
 * @deprecated Use ped.releasePreloadVariationData(ped1) instead
 */
export declare function releasePedPreloadVariationData(ped1: number | Ped): void;
/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Hash: 0x2B16A3BFF1FBCE49 | Since: 323
 * @deprecated Use ped.setPreloadPropData(ped1, componentId, drawableId, TextureId) instead
 */
export declare function setPedPreloadPropData(ped1: number | Ped, componentId: number, drawableId: number, TextureId: number): number;
/**
 * No comment provided
 *
 * Hash: 0x784002A632822099 | Since: 323
 * @deprecated Use ped.hasPreloadPropDataFinished(ped1) instead
 */
export declare function hasPedPreloadPropDataFinished(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF79F9DEF0AADE61A | Since: 323
 * @deprecated Use ped.releasePreloadPropData(ped1) instead
 */
export declare function releasePedPreloadPropData(ped1: number | Ped): void;
/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Hash: 0x898CC20EA75BACD8 | Since: 323
 * @deprecated Use ped.getPropIndex(ped1, componentId) instead
 */
export declare function getPedPropIndex(ped1: number | Ped, componentId: number): number;
/**
 * ComponentId can be set to various things based on what category you're wanting to set
 * enum PedPropsData
 * {
 * PED_PROP_HATS = 0,
 * PED_PROP_GLASSES = 1,
 * PED_PROP_EARS = 2,
 * PED_PROP_WATCHES = 3,
 * };
 * Usage: SET_PED_PROP_INDEX(playerPed, PED_PROP_HATS, GET_NUMBER_OF_PED_PROP_DRAWABLE_VARIATIONS(playerPed, PED_PROP_HATS), GET_NUMBER_OF_PED_PROP_TEXTURE_VARIATIONS(playerPed, PED_PROP_HATS, 0), TRUE);
 *
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Hash: 0x93376B65A266EB5F | Since: 323
 * @deprecated Use ped.setPropIndex(ped1, componentId, drawableId, TextureId, attach) instead
 */
export declare function setPedPropIndex(ped1: number | Ped, componentId: number, drawableId: number, TextureId: number, attach: boolean): void;
/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Hash: 0x6FD7816A36615F48 | Since: 323
 * @deprecated Use ped.knockOffProp(ped1) instead
 */
export declare function knockOffPedProp(ped1: number | Ped): void;
/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Hash: 0x0943E5B8E078E76E | Since: 323
 * @deprecated Use ped.clearProp(ped1, propId) instead
 */
export declare function clearPedProp(ped1: number | Ped, propId: number): void;
/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Hash: 0xCD8A7537A9B52F06 | Since: 323
 * @deprecated Use ped.clearAllProps(ped1) instead
 */
export declare function clearAllPedProps(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xAFF4710E2A0A6C12 | Since: 323
 * @deprecated Use ped.dropAmbientProp(ped1) instead
 */
export declare function dropAmbientProp(ped1: number | Ped): void;
/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Hash: 0xE131A28626F81AB2 | Since: 323
 * @deprecated Use ped.getPropTextureIndex(ped1, componentId) instead
 */
export declare function getPedPropTextureIndex(ped1: number | Ped, componentId: number): number;
/**
 * No comment provided
 *
 * Hash: 0x1280804F7CFD2D6C | Since: 323
 * @deprecated Use ped.clearParachutePackVariation(ped1) instead
 */
export declare function clearPedParachutePackVariation(ped1: number | Ped): void;
/**
 * This native sets a scuba mask for freemode models and an oxygen bottle for player_* models. It works on freemode and player_* models.
 *
 * Hash: 0x36C6984C3ED0C911 | Since: 323
 * @deprecated Use ped.setScubaGearVariation(ped1) instead
 */
export declare function setPedScubaGearVariation(ped1: number | Ped): void;
/**
 * Removes the scubagear (for mp male: component id: 8, drawableId: 123, textureId: any) from peds. Does not play the 'remove scuba gear' animation, but instantly removes it.
 *
 * Hash: 0xB50EB4CCB29704AC | Since: 323
 * @deprecated Use ped.clearScubaGearVariation(ped1) instead
 */
export declare function clearPedScubaGearVariation(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xFEC9A3B1820F3331 | Since: 323
 * @deprecated Use ped.isUsingScubaGearVariation() instead
 */
export declare function isUsingPedScubaGearVariation(): boolean;
/**
 * `works with TASK::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS to make a ped completely oblivious to all events going on around him`
 *
 * Hash: 0x9F8AA94D6D97DBF4 | Since: 323
 * @deprecated Use ped.setBlockingOfNonTemporaryEvents(ped1, toggle) instead
 */
export declare function setBlockingOfNonTemporaryEvents(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x4F5F651ACCC9C4CF | Since: 323
 * @deprecated Use ped.setBoundsOrientation(ped1, pos) instead
 */
export declare function setPedBoundsOrientation(ped1: number | Ped, pos: Vector3): void;
/**
 * `PED::REGISTER_TARGET(l_216, PLAYER::PLAYER_PED_ID()); from re_prisonbreak.txt.`
 *
 * l_216 = RECSBRobber1
 *
 * Hash: 0x2F25D9AEFA34FBA2 | Since: 323
 * @deprecated Use ped.registerTarget(ped1, target) instead
 */
export declare function registerTarget(ped1: number | Ped, target: number | Ped): void;
/**
 * Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).
 *
 * Hash: 0x9222F300BF8354FE | Since: 323
 * @deprecated Use ped.registerHatedTargetsAround(ped1, radius) instead
 */
export declare function registerHatedTargetsAroundPed(ped1: number | Ped, radius: number): void;
/**
 * Gets a random ped in the x/y/zRadius near the x/y/z coordinates passed.
 *
 * Ped Types:
 * Any = -1
 * Player = 1
 * Male = 4
 * Female = 5
 * Cop = 6
 * Human = 26
 * SWAT = 27
 * Animal = 28
 * Army = 29
 *
 * Hash: 0x876046A8E3A4B71C | Since: 323
 * @deprecated Use ped.getRandomAtCoord(pos, xRadius, yRadius, zRadius, pedType) instead
 */
export declare function getRandomPedAtCoord(pos: Vector3, xRadius: number, yRadius: number, zRadius: number, pedType: number): number;
/**
 * Gets the closest ped in a radius.
 *
 * Ped Types:
 * Any ped = -1
 * Player = 1
 * Male = 4
 * Female = 5
 * Cop = 6
 * Human = 26
 * SWAT = 27
 * Animal = 28
 * Army = 29
 *
 * ------------------
 * P4 P5 P7 P8
 * 1  0  x  x  = return nearest walking Ped
 * 1  x  0  x  = return nearest walking Ped
 * x  1  1  x  = return Ped you are using
 * 0  0  x  x  = no effect
 * 0  x  0  x  = no effect
 *
 * x = can be 1 or 0. Does not have any obvious changes.
 *
 * This function does not return ped who is:
 * 1. Standing still
 * 2. Driving
 * 3. Fleeing
 * 4. Attacking
 *
 * This function only work if the ped is:
 * 1. walking normally.
 * 2. waiting to cross a road.
 *
 * `Note: PED::GET_PED_NEARBY_PEDS works for more peds.`
 *
 * Hash: 0xC33AB876A77F8164 | Since: 323
 * @deprecated Use ped.getClosest(pos, radius, pedType) instead
 */
export declare function getClosestPed(pos: Vector3, radius: number, pedType: number): [boolean, number];
/**
 * Sets a value indicating whether scenario peds should be returned by the next call to a command that returns peds. Eg. GET_CLOSEST_PED.
 *
 * Hash: 0x14F19A8782C8071E | Since: 323
 * @deprecated Use ped.setScenariosToBeReturnedByNextCommand(value) instead
 */
export declare function setScenarioPedsToBeReturnedByNextCommand(value: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x03EA03AF85A85CB7 | Since: 323
 * @deprecated Use ped.getCanBeGrabbedByScript(ped1) instead
 */
export declare function getCanPedBeGrabbedByScript(ped1: number | Ped): boolean;
/**
 * Scripts use 0.2, 0.5 and 1.0. Value must be >= 0.0 && <= 1.0
 *
 * Hash: 0xDED5AF5A0EA4B297 | Since: 323
 * @deprecated Use ped.setDriverRacingModifier(driver, modifier) instead
 */
export declare function setDriverRacingModifier(driver: number | Ped, modifier: number): void;
/**
 * The function specifically verifies the value is equal to, or less than 1.0f. If it is greater than 1.0f, the function does nothing at all.
 *
 * Hash: 0xB195FFA8042FC5C3 | Since: 323
 * @deprecated Use ped.setDriverAbility(driver, ability) instead
 */
export declare function setDriverAbility(driver: number | Ped, ability: number): void;
/**
 * range 0.0f - 1.0f
 *
 * Hash: 0xA731F608CA104E3C | Since: 323
 * @deprecated Use ped.setDriverAggressiveness(driver, aggressiveness) instead
 */
export declare function setDriverAggressiveness(driver: number | Ped, aggressiveness: number): void;
/**
 * Prevents the ped from going limp.
 *
 * [Example: Can prevent peds from falling when standing on moving vehicles.]
 *
 * Hash: 0x128F79EDCECE4FD5 | Since: 323
 * @deprecated Use ped.canRagdoll(ped1) instead
 */
export declare function canPedRagdoll(ped1: number | Ped): boolean;
/**
 * p4/p5: Unused in TU27
 * Ragdoll Types:
 * **0**: CTaskNMRelax
 * **1**: CTaskNMScriptControl: Hardcoded not to work in networked environments.
 * **Else**: CTaskNMBalance
 * time1- Time(ms) Ped is in ragdoll mode; only applies to ragdoll types 0 and not 1.
 *
 * time2- Unknown time, in milliseconds
 *
 * ragdollType-
 * 0 : Normal ragdoll
 * 1 : Falls with stiff legs/body
 * 2 : Narrow leg stumble(may not fall)
 * 3 : Wide leg stumble(may not fall)
 *
 * p4, p5, p6- No idea. In R*'s scripts they are usually either "true, true, false" or "false, false, false".
 *
 *
 *
 *
 * EDIT 3/11/16: unclear what 'mircoseconds' mean-- a microsecond is 1000x a ms, so time2 must be 1000x time1?  more testing needed.  -sob
 *
 * Edit Mar 21, 2017: removed part about time2 being the microseconds version of time1. this just isn't correct. time2 is in milliseconds, and time1 and time2 don't seem to be connected in any way.
 *
 * Hash: 0xAE99FB955581844A | Since: 323
 * @deprecated Use ped.setToRagdoll(ped1, time1, time2, ragdollType) instead
 */
export declare function setPedToRagdoll(ped1: number | Ped, time1: number, time2: number, ragdollType: number): boolean;
/**
 * Return variable is never used in R*'s scripts.
 *
 * Not sure what p2 does. It seems like it would be a time judging by it's usage in R*'s scripts, but didn't seem to affect anything in my testings.
 *
 * enum eRagdollType
 * {
 * RD_MALE=0,
 * RD_FEMALE = 1,
 * RD_MALE_LARGE = 2,
 * RD_CUSTOM = 3,
 * }
 *
 * x, y, and z are coordinates, most likely to where the ped will fall.
 *
 * p8 to p13 are always 0f in R*'s scripts.
 *
 * (Simplified) Example of the usage of the function from R*'s scripts:
 * `ped::set_ped_to_ragdoll_with_fall(ped, 1500, 2000, 1, -entity::get_entity_forward_vector(ped), 1f, 0f, 0f, 0f, 0f, 0f, 0f);`
 *
 *
 * Hash: 0xD76632D99E4966C8 | Since: 323
 * @deprecated Use ped.setToRagdollWithFall(ped1, time, ragdollType, pos, velocity) instead
 */
export declare function setPedToRagdollWithFall(ped1: number | Ped, time: number, ragdollType: number, pos: Vector3, velocity: number): boolean;
/**
 * Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
 *
 * Hash: 0xF0A4F1BBF4FA7497 | Since: 323
 * @deprecated Use ped.setRagdollOnCollision(ped1, toggle) instead
 */
export declare function setPedRagdollOnCollision(ped1: number | Ped, toggle: boolean): void;
/**
 * If the ped handle passed through the parenthesis is in a ragdoll state this will return true.
 *
 * Hash: 0x47E4E977581C5B55 | Since: 323
 * @deprecated Use ped.isRagdoll(ped1) instead
 */
export declare function isPedRagdoll(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE3B6097CC25AA69E | Since: 323
 * @deprecated Use ped.isRunningRagdollTask(ped1) instead
 */
export declare function isPedRunningRagdollTask(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x01F6594B923B9251 | Since: 323
 * @deprecated Use ped.setRagdollForceFall(ped1) instead
 */
export declare function setPedRagdollForceFall(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x9FA4664CF62E47E8 | Since: 323
 * @deprecated Use ped.resetRagdollTimer(ped1) instead
 */
export declare function resetPedRagdollTimer(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xB128377056A54E2A | Since: 323
 * @deprecated Use ped.setCanRagdoll(ped1, toggle) instead
 */
export declare function setPedCanRagdoll(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD1871251F3B5ACD7 | Since: 323
 * @deprecated Use ped.isRunningMeleeTask(ped1) instead
 */
export declare function isPedRunningMeleeTask(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2AFE52F782F25775 | Since: 323
 * @deprecated Use ped.isRunningMobilePhoneTask(ped1) instead
 */
export declare function isPedRunningMobilePhoneTask(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA3F3564A5B3646C0 | Since: 323
 * @deprecated Use ped.isMobilePhoneToEar(ped1) instead
 */
export declare function isMobilePhoneToPedEar(ped1: number | Ped): boolean;
/**
 * Works for both player and peds,
 *
 * enum eRagdollBlockingFlags
 * {
 * RBF_BULLET_IMPACT = 0,
 * RBF_VEHICLE_IMPACT = 1,
 * RBF_FIRE = 2,
 * RBF_ELECTROCUTION = 3,
 * RBF_PLAYER_IMPACT = 4,
 * RBF_EXPLOSION = 5,0
 * RBF_IMPACT_OBJECT = 6,
 * RBF_MELEE = 7,
 * RBF_RUBBER_BULLET = 8,
 * RBF_FALLING = 9,
 * RBF_WATER_JET = 10,
 * RBF_DROWNING = 11,
 * _0x9F52E2C4 = 12,
 * RBF_PLAYER_BUMP = 13,
 * RBF_PLAYER_RAGDOLL_BUMP = 14,
 * RBF_PED_RAGDOLL_BUMP = 15,
 * RBF_VEHICLE_GRAB = 16,
 * RBF_SMOKE_GRENADE = 17,
 * };
 *
 *
 *
 * Hash: 0x26695EC767728D84 | Since: 323
 * @deprecated Use ped.setRagdollBlockingFlags(ped1, blockingFlag) instead
 */
export declare function setRagdollBlockingFlags(ped1: number | Ped, blockingFlag: number): void;
/**
 * See SET_RAGDOLL_BLOCKING_FLAGS for flags
 *
 * Hash: 0xD86D101FCFD00A4B | Since: 323
 * @deprecated Use ped.clearRagdollBlockingFlags(ped1, blockingFlag) instead
 */
export declare function clearRagdollBlockingFlags(ped1: number | Ped, blockingFlag: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC7F76DF27A5045A1 | Since: 323
 * @deprecated Use ped.setAngledDefensiveArea(ped1) instead
 */
export declare function setPedAngledDefensiveArea(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x9D3151A373974804 | Since: 323
 * @deprecated Use ped.setSphereDefensiveArea(ped1, pos, radius) instead
 */
export declare function setPedSphereDefensiveArea(ped1: number | Ped, pos: Vector3, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF9B8F91AAD3B953E | Since: 323
 * @deprecated Use ped.setDefensiveSphereAttachedToPed(ped1, target, xOffset, yOffset, zOffset, radius) instead
 */
export declare function setPedDefensiveSphereAttachedToPed(ped1: number | Ped, target: number | Ped, xOffset: number, yOffset: number, zOffset: number, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE4723DB6E736CCFF | Since: 323
 * @deprecated Use ped.setDefensiveSphereAttachedToVehicle(ped1, target, xOffset, yOffset, zOffset, radius) instead
 */
export declare function setPedDefensiveSphereAttachedToVehicle(ped1: number | Ped, target: number | Vehicle, xOffset: number, yOffset: number, zOffset: number, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4EF47FE21698A8B6 | Since: 323
 * @deprecated Use ped.setDefensiveAreaAttachedToPed(ped1, attachPed) instead
 */
export declare function setPedDefensiveAreaAttachedToPed(ped1: number | Ped, attachPed: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x413C6C763A4AFFAD | Since: 323
 * @deprecated Use ped.setDefensiveAreaDirection(ped1) instead
 */
export declare function setPedDefensiveAreaDirection(ped1: number | Ped): void;
/**
 * Ped will no longer get angry when you stay near him.
 *
 * Hash: 0x74D4E028107450A9 | Since: 323
 * @deprecated Use ped.removeDefensiveArea(ped1, toggle) instead
 */
export declare function removePedDefensiveArea(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3C06B8786DD94CD1 | Since: 323
 * @deprecated Use ped.getDefensiveAreaPosition(ped1) instead
 */
export declare function getPedDefensiveAreaPosition(ped1: number | Ped): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xBA63D9FE45412247 | Since: 323
 * @deprecated Use ped.isDefensiveAreaActive(ped1) instead
 */
export declare function isPedDefensiveAreaActive(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8421EB4DA7E391B9 | Since: 323
 * @deprecated Use ped.setPreferredCoverSet(ped1, itemSet) instead
 */
export declare function setPedPreferredCoverSet(ped1: number | Ped, itemSet: any): void;
/**
 * No comment provided
 *
 * Hash: 0xFDDB234CF74073D9 | Since: 323
 * @deprecated Use ped.removePreferredCoverSet(ped1) instead
 */
export declare function removePedPreferredCoverSet(ped1: number | Ped): void;
/**
 * It will revive/cure the injured ped. The condition is ped must not be dead.
 *
 * Upon setting and converting the health int, found, if health falls below 5, the ped will lay on the ground in pain(Maximum default health is 100).
 *
 * This function is well suited there.
 *
 * Hash: 0x8D8ACD8388CD99CE | Since: 323
 * @deprecated Use ped.reviveInjured(ped1) instead
 */
export declare function reviveInjuredPed(ped1: number | Ped): void;
/**
 * This function will simply bring the dead person back to life.
 *
 * Try not to use it alone, since using this function alone, will make peds fall through ground in hell(well for the most of the times).
 *
 * Instead, before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at.(For instance, Around 2 floats of Player's current position.)
 *
 * Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
 *
 * Hash: 0x71BC8E838B9C6035 | Since: 323
 * @deprecated Use ped.resurrect(ped1) instead
 */
export declare function resurrectPed(ped1: number | Ped): void;
/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 *
 * *untested but char *name could also be a hash for a localized string
 *
 * Hash: 0x98EFA132A4117BE1 | Since: 323
 * @deprecated Use ped.setNameDebug(ped1, name) instead
 */
export declare function setPedNameDebug(ped1: number | Ped, name: string): void;
/**
 * Gets the offset the specified ped has moved since the previous tick.
 *
 * If worldSpace is false, the returned offset is relative to the ped. That is, if the ped has moved 1 meter right and 5 meters forward, it'll return 1,5,0.
 *
 * If worldSpace is true, the returned offset is relative to the world. That is, if the ped has moved 1 meter on the X axis and 5 meters on the Y axis, it'll return 1,5,0.
 *
 * Hash: 0xE0AF41401ADF87E3 | Since: 323
 * @deprecated Use ped.getExtractedDisplacement(ped1, worldSpace) instead
 */
export declare function getPedExtractedDisplacement(ped1: number | Ped, worldSpace: boolean): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x5BA7919BED300023 | Since: 323
 * @deprecated Use ped.setDiesWhenInjured(ped1, toggle) instead
 */
export declare function setPedDiesWhenInjured(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x97A790315D3831FD | Since: 323
 * @deprecated Use ped.setEnableWeaponBlocking(ped1, toggle) instead
 */
export declare function setPedEnableWeaponBlocking(ped1: number | Ped, toggle: boolean): void;
/**
 * p1 was always 1 (true).
 *
 * Kicks the ped from the current vehicle and keeps the rendering-focus on this ped (also disables its collision). If doing this for your player ped, you'll still be able to drive the vehicle.
 *
 * Hash: 0xF9ACF4A08098EA25 | Since: 323
 * @deprecated Use ped.specialFunctionDoNotUse(ped1) instead
 */
export declare function specialFunctionDoNotUse(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x3AC1F7B898F30C05 | Since: 323
 * @deprecated Use ped.resetVisibleDamage(ped1) instead
 */
export declare function resetPedVisibleDamage(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x816F6981C60BF53B | Since: 323
 * @deprecated Use ped.applyBloodDamageByZone(ped1) instead
 */
export declare function applyPedBloodDamageByZone(ped1: number | Ped): void;
/**
 * woundTypes:
 * - soak_splat
 * - wound_sheet
 * - BulletSmall
 * - BulletLarge
 * - ShotgunSmall
 * - ShotgunSmallMonolithic
 * - ShotgunLarge
 * - ShotgunLargeMonolithic
 * - NonFatalHeadshot
 * - stab
 * - BasicSlash
 * - Scripted_Ped_Splash_Back
 * - BackSplash
 *
 * Hash: 0x83F7E01C7B769A26 | Since: 323
 * @deprecated Use ped.applyBlood(ped1, boneIndex, rot, woundType) instead
 */
export declare function applyPedBlood(ped1: number | Ped, boneIndex: number, rot: Vector3, woundType: string): void;
/**
 * No comment provided
 *
 * Hash: 0x3311E47B91EDCBBC | Since: 323
 * @deprecated Use ped.applyBloodByZone(ped1) instead
 */
export declare function applyPedBloodByZone(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xEF0D582CBF2D9B0F | Since: 323
 * @deprecated Use ped.applyBloodSpecific(ped1) instead
 */
export declare function applyPedBloodSpecific(ped1: number | Ped): void;
/**
 * enum eDamageZone
 * {
 * DZ_Torso = 0,
 * DZ_Head,
 * DZ_LeftArm,
 * DZ_RightArm,
 * DZ_LeftLeg,
 * DZ_RightLeg,
 * };
 *
 * Decal Names:
 * scar
 * blushing
 * cs_flush_anger
 * cs_flush_anger_face
 * bruise
 * bruise_large
 * herpes
 * ArmorBullet
 * basic_dirt_cloth
 * basic_dirt_skin
 * cs_trev1_dirt
 *
 * APPLY_PED_DAMAGE_DECAL(ped, 1, 0.5f, 0.513f, 0f, 1f, unk, 0, 0, "blushing");
 *
 * Hash: 0x397C38AA7B4A5F83 | Since: 323
 * @deprecated Use ped.applyDamageDecal(ped1, damageZone, xOffset, yOffset, heading, scale, alpha, variation, fadeIn, decalName) instead
 */
export declare function applyPedDamageDecal(ped1: number | Ped, damageZone: number, xOffset: number, yOffset: number, heading: number, scale: number, alpha: number, variation: number, fadeIn: boolean, decalName: string): void;
/**
 * Damage Packs:
 *
 * "SCR_TrevorTreeBang"
 * "HOSPITAL_0"
 * "HOSPITAL_1"
 * "HOSPITAL_2"
 * "HOSPITAL_3"
 * "HOSPITAL_4"
 * "HOSPITAL_5"
 * "HOSPITAL_6"
 * "HOSPITAL_7"
 * "HOSPITAL_8"
 * "HOSPITAL_9"
 * "SCR_Dumpster"
 * "BigHitByVehicle"
 * "SCR_Finale_Michael_Face"
 * "SCR_Franklin_finb"
 * "SCR_Finale_Michael"
 * "SCR_Franklin_finb2"
 * "Explosion_Med"
 * "SCR_Torture"
 * "SCR_TracySplash"
 * "Skin_Melee_0"
 *
 * Additional damage packs:
 *
 * gist.github.com/alexguirre/f3f47f75ddcf617f416f3c8a55ae2227
 * Full list of ped damage packs by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedDamagePacks.json
 *
 * Hash: 0x46DF918788CB093F | Since: 323
 * @deprecated Use ped.applyDamagePack(ped1, damagePack, damage, mult) instead
 */
export declare function applyPedDamagePack(ped1: number | Ped, damagePack: string, damage: number, mult: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8FE22675A5A45817 | Since: 323
 * @deprecated Use ped.clearBloodDamage(ped1) instead
 */
export declare function clearPedBloodDamage(ped1: number | Ped): void;
/**
 * Somehow related to changing ped's clothes.
 *
 * Hash: 0x56E3B78C5408D9F4 | Since: 323
 * @deprecated Use ped.clearBloodDamageByZone(ped1) instead
 */
export declare function clearPedBloodDamageByZone(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x62AB793144DE75DC | Since: 323
 * @deprecated Use ped.hideBloodDamageByZone(ped1) instead
 */
export declare function hidePedBloodDamageByZone(ped1: number | Ped): void;
/**
 * p1: from 0 to 5 in the b617d scripts.
 * p2: "blushing" and "ALL" found in the b617d scripts.
 *
 * Hash: 0x523C79AEEFCC4A2A | Since: 323
 * @deprecated Use ped.clearDamageDecalByZone(ped1) instead
 */
export declare function clearPedDamageDecalByZone(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x71EAB450D86954A1 | Since: 323
 * @deprecated Use ped.getDecorationsState(ped1) instead
 */
export declare function getPedDecorationsState(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x2B694AFCF64E6994 | Since: 323
 * @deprecated Use ped.markDecorationsAsClonedFromLocalPlayer(ped1) instead
 */
export declare function markPedDecorationsAsClonedFromLocalPlayer(ped1: number | Ped): void;
/**
 * It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.
 *
 * Hash: 0x9C720776DAA43E7E | Since: 323
 * @deprecated Use ped.clearWetness(ped1) instead
 */
export declare function clearPedWetness(ped1: number | Ped): void;
/**
 * It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.
 *
 *
 *
 * Hash: 0x44CB6447D2571AA0 | Since: 323
 * @deprecated Use ped.setWetnessHeight(ped1, height) instead
 */
export declare function setPedWetnessHeight(ped1: number | Ped, height: number): void;
/**
 * `combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function`
 *
 * Hash: 0xB5485E4907B53019 | Since: 323
 * @deprecated Use ped.setWetnessEnabledThisFrame(ped1) instead
 */
export declare function setPedWetnessEnabledThisFrame(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xAC0BB4D87777CAE2 | Since: 2802
 * @deprecated Use ped.setWetness(ped1, wetLevel) instead
 */
export declare function setPedWetness(ped1: number | Ped, wetLevel: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6585D955A68452A5 | Since: 323
 * @deprecated Use ped.clearEnvDirt(ped1) instead
 */
export declare function clearPedEnvDirt(ped1: number | Ped): void;
/**
 * Sweat is set to 100.0 or 0.0 in the decompiled scripts.
 *
 * Hash: 0x27B0405F59637D1F | Since: 323
 * @deprecated Use ped.setSweat(ped1, sweat) instead
 */
export declare function setPedSweat(ped1: number | Ped, sweat: number): void;
/**
 * Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.
 *
 * collection - PedDecorationCollection filename hash
 * overlay - Item name hash
 *
 * Example:
 * Entry inside "mpbeach_overlays.xml" -
 * <Item>
 * <uvPos x="0.500000" y="0.500000" />
 * <scale x="0.600000" y="0.500000" />
 * <rotation value="0.000000" />
 * <nameHash>FM_Hair_Fuzz</nameHash>
 * <txdHash>mp_hair_fuzz</txdHash>
 * <txtHash>mp_hair_fuzz</txtHash>
 * <zone>ZONE_HEAD</zone>
 * <type>TYPE_TATTOO</type>
 * <faction>FM</faction>
 * <garment>All</garment>
 * <gender>GENDER_DONTCARE</gender>
 * <award />
 * <awardLevel />
 * </Item>
 *
 * Code:
 * `PED::ADD_PED_DECORATION_FROM_HASHES(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("mpbeach_overlays"), MISC::GET_HASH_KEY("fm_hair_fuzz"))`
 *
 * Full list of ped overlays / decorations by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedOverlayCollections.json
 *
 * Hash: 0x5F5D1665E352A839 | Since: 323
 * @deprecated Use ped.addDecorationFromHashes(ped1, collection, overlay) instead
 */
export declare function addPedDecorationFromHashes(ped1: number | Ped, collection: number | string, overlay: number | string): void;
/**
 * Full list of ped overlays / decorations by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedOverlayCollections.json
 *
 * Hash: 0x5619BFA07CFD7833 | Since: 323
 * @deprecated Use ped.addDecorationFromHashesInCorona(ped1, collection, overlay) instead
 */
export declare function addPedDecorationFromHashesInCorona(ped1: number | Ped, collection: number | string, overlay: number | string): void;
/**
 * Returns the zoneID for the overlay if it is a member of collection.
 * enum ePedDecorationZone
 * {
 * ZONE_TORSO = 0,
 * ZONE_HEAD = 1,
 * ZONE_LEFT_ARM = 2,
 * ZONE_RIGHT_ARM = 3,
 * ZONE_LEFT_LEG = 4,
 * ZONE_RIGHT_LEG = 5,
 * ZONE_MEDALS = 6,
 * ZONE_INVALID = 7
 * };
 *
 * Full list of ped overlays / decorations by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/pedOverlayCollections.json
 *
 * Hash: 0x9FD452BFBE7A7A8B | Since: 323
 * @deprecated Use ped.getDecorationZoneFromHashes(collection, overlay) instead
 */
export declare function getPedDecorationZoneFromHashes(collection: number | string, overlay: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x0E5173C163976E38 | Since: 323
 * @deprecated Use ped.clearDecorations(ped1) instead
 */
export declare function clearPedDecorations(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xE3B27E70CEAB9F0C | Since: 323
 * @deprecated Use ped.clearDecorationsLeaveScars(ped1) instead
 */
export declare function clearPedDecorationsLeaveScars(ped1: number | Ped): void;
/**
 * Despite this function's name, it simply returns whether the specified handle is a Ped.
 *
 * Hash: 0x11B499C1E0FF8559 | Since: 323
 * @deprecated Use ped.wasSkeletonUpdated(ped1) instead
 */
export declare function wasPedSkeletonUpdated(ped1: number | Ped): boolean;
/**
 * Gets the position of the specified bone of the specified ped.
 *
 * ped: The ped to get the position of a bone from.
 * boneId: The ID of the bone to get the position from. This is NOT the index.
 * offsetX: The X-component of the offset to add to the position relative to the bone's rotation.
 * offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.
 * offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.
 *
 * Hash: 0x17C07FC640E86B4E | Since: 323
 * @deprecated Use ped.getBoneCoords(ped1, boneId, offsetX, offsetY, offsetZ) instead
 */
export declare function getPedBoneCoords(ped1: number | Ped, boneId: number, offsetX: number, offsetY: number, offsetZ: number): Vector3;
/**
 * Creates a new NaturalMotion message.
 *
 * startImmediately: If set to true, the character will perform the message the moment it receives it by GIVE_PED_NM_MESSAGE. If false, the Ped will get the message but won't perform it yet. While it's a boolean value, if negative, the message will not be initialized.
 * messageId: The ID of the NaturalMotion message.
 *
 * If a message already exists, this function does nothing. A message exists until the point it has been successfully dispatched by GIVE_PED_NM_MESSAGE.
 *
 * Hash: 0x418EF2A1BCE56685 | Since: 323
 * @deprecated Use ped.createNmMessage(startImmediately, messageId) instead
 */
export declare function createNmMessage(startImmediately: boolean, messageId: number): void;
/**
 * Sends the message that was created by a call to CREATE_NM_MESSAGE to the specified Ped.
 *
 * If a message hasn't been created already, this function does nothing.
 * If the Ped is not ragdolled with Euphoria enabled, this function does nothing.
 * The following call can be used to ragdoll the Ped with Euphoria enabled: SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
 *
 * Call order:
 * SET_PED_TO_RAGDOLL
 * CREATE_NM_MESSAGE
 * GIVE_PED_NM_MESSAGE
 *
 * Multiple messages can be chained. Eg. to make the ped stagger and swing his arms around, the following calls can be made:
 * SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
 * CREATE_NM_MESSAGE(true, 0); // stopAllBehaviours - Stop all other behaviours, in case the Ped is already doing some Euphoria stuff.
 * GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
 * CREATE_NM_MESSAGE(true, 1151); // staggerFall - Attempt to walk while falling.
 * GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
 * CREATE_NM_MESSAGE(true, 372); // armsWindmill - Swing arms around.
 * GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
 *
 * Hash: 0xB158DFCCC56E5C5B | Since: 323
 * @deprecated Use ped.giveNmMessage(ped1) instead
 */
export declare function givePedNmMessage(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x1B5C85C612E5256E | Since: 323
 * @deprecated Use ped.addScenarioBlockingArea(x1, y1, z1, x2, y2, z2) instead
 */
export declare function addScenarioBlockingArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
/**
 * No comment provided
 *
 * Hash: 0xD37401D78A929A49 | Since: 323
 * @deprecated Use ped.removeScenarioBlockingAreas() instead
 */
export declare function removeScenarioBlockingAreas(): void;
/**
 * No comment provided
 *
 * Hash: 0x31D16B74C6E29D66 | Since: 323
 * @deprecated Use ped.removeScenarioBlockingArea() instead
 */
export declare function removeScenarioBlockingArea(): void;
/**
 * No comment provided
 *
 * Hash: 0x28157D43CF600981 | Since: 323
 * @deprecated Use ped.setScenariosSpawnInSphereArea(pos, range) instead
 */
export declare function setScenarioPedsSpawnInSphereArea(pos: Vector3, range: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8A24B067D175A7BD | Since: 678
 * @deprecated Use ped.doesScenarioBlockingAreaExists(x1, y1, z1, x2, y2, z2) instead
 */
export declare function doesScenarioBlockingAreaExists(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * Full list of ped scenarios by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenariosCompact.json
 *
 * Hash: 0x1BF094736DD62C2E | Since: 323
 * @deprecated Use ped.isUsingScenario(ped1, scenario) instead
 */
export declare function isPedUsingScenario(ped1: number | Ped, scenario: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x57AB4A3080F85143 | Since: 323
 * @deprecated Use ped.isUsingAnyScenario(ped1) instead
 */
export declare function isPedUsingAnyScenario(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFE07FF6495D52E2A | Since: 323
 * @deprecated Use ped.setPanicExitScenario() instead
 */
export declare function setPedPanicExitScenario(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9A77DFD295E29B09 | Since: 323
 * @deprecated Use ped.toggleScenarioCowerInPlace(ped1, toggle) instead
 */
export declare function toggleScenarioPedCowerInPlace(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x25361A96E0F7E419 | Since: 323
 * @deprecated Use ped.triggerScenarioPanicexittoflee() instead
 */
export declare function triggerPedScenarioPanicexittoflee(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEC6935EBE0847B90 | Since: 323
 * @deprecated Use ped.setShouldPlayDirectedNormalScenarioExit() instead
 */
export declare function setPedShouldPlayDirectedNormalScenarioExit(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA3A9299C4F2ADB98 | Since: 323
 * @deprecated Use ped.setShouldPlayNormalScenarioExit(ped1) instead
 */
export declare function setPedShouldPlayNormalScenarioExit(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xF1C03A5352243A30 | Since: 323
 * @deprecated Use ped.setShouldPlayImmediateScenarioExit(ped1) instead
 */
export declare function setPedShouldPlayImmediateScenarioExit(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xEEED8FAFEC331A70 | Since: 323
 * @deprecated Use ped.setShouldPlayFleeScenarioExit(ped1) instead
 */
export declare function setPedShouldPlayFleeScenarioExit(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x425AECF167663F48 | Since: 323
 * @deprecated Use ped.setShouldIgnoreScenarioExitCollisionChecks(ped1) instead
 */
export declare function setPedShouldIgnoreScenarioExitCollisionChecks(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x5B6010B3CBC29095 | Since: 323
 * @deprecated Use ped.setShouldIgnoreScenarioNavChecks() instead
 */
export declare function setPedShouldIgnoreScenarioNavChecks(): void;
/**
 * No comment provided
 *
 * Hash: 0xCEDA60A74219D064 | Since: 323
 * @deprecated Use ped.setShouldProbeForScenarioExitsInOneFrame() instead
 */
export declare function setPedShouldProbeForScenarioExitsInOneFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0xC30BDAEE47256C13 | Since: 1868
 * @deprecated Use ped.isGesturing() instead
 */
export declare function isPedGesturing(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x007FDE5A7897E426 | Since: 2802
 * @deprecated Use ped.resetFacialIdleAnim(ped1) instead
 */
export declare function resetFacialIdleAnim(ped1: number | Ped): void;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0xE1E65CA8AC9C00ED | Since: 323
 * @deprecated Use ped.playFacialAnim(ped1, animName, animDict) instead
 */
export declare function playFacialAnim(ped1: number | Ped, animName: string, animDict: string): void;
/**
 * Clipsets:
 * facials@gen_female@base
 * facials@gen_male@base
 * facials@p_m_zero@base
 *
 * Typically followed with SET_FACIAL_IDLE_ANIM_OVERRIDE:
 * mood_drunk_1
 * mood_stressed_1
 * mood_happy_1
 * mood_talking_1
 *
 *
 * Hash: 0x5687C7F05B39E401 | Since: 1493
 * @deprecated Use ped.setFacialClipset(ped1, animDict) instead
 */
export declare function setFacialClipset(ped1: number | Ped, animDict: string): void;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0xFFC24B988B938B38 | Since: 323
 * @deprecated Use ped.setFacialIdleAnimOverride(ped1, animName, animDict) instead
 */
export declare function setFacialIdleAnimOverride(ped1: number | Ped, animName: string, animDict: string): void;
/**
 * No comment provided
 *
 * Hash: 0x726256CC1EEB182F | Since: 323
 * @deprecated Use ped.clearFacialIdleAnimOverride(ped1) instead
 */
export declare function clearFacialIdleAnimOverride(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xBAF20C5432058024 | Since: 323
 * @deprecated Use ped.setCanPlayGestureAnims(ped1, toggle) instead
 */
export declare function setPedCanPlayGestureAnims(ped1: number | Ped, toggle: boolean): void;
/**
 * p2 usually 0
 *
 * Hash: 0xF833DDBA3B104D43 | Since: 323
 * @deprecated Use ped.setCanPlayVisemeAnims(ped1, toggle) instead
 */
export declare function setPedCanPlayVisemeAnims(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x33A60D8BDD6E508C | Since: 323
 * @deprecated Use ped.setIsIgnoredByAutoOpenDoors(ped1) instead
 */
export declare function setPedIsIgnoredByAutoOpenDoors(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x6373D1349925A70E | Since: 323
 * @deprecated Use ped.setCanPlayAmbientAnims(ped1, toggle) instead
 */
export declare function setPedCanPlayAmbientAnims(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0EB0585D15254740 | Since: 323
 * @deprecated Use ped.setCanPlayAmbientBaseAnims(ped1, toggle) instead
 */
export declare function setPedCanPlayAmbientBaseAnims(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC2EE020F5FB4DB53 | Since: 323
 * @deprecated Use ped.triggerIdleAnimationOn(ped1) instead
 */
export declare function triggerIdleAnimationOnPed(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x6C3B4D6D13B4C841 | Since: 323
 * @deprecated Use ped.setCanArmIk(ped1, toggle) instead
 */
export declare function setPedCanArmIk(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC11C18092C5530DC | Since: 323
 * @deprecated Use ped.setCanHeadIk(ped1, toggle) instead
 */
export declare function setPedCanHeadIk(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x73518ECE2485412B | Since: 323
 * @deprecated Use ped.setCanLegIk(ped1, toggle) instead
 */
export declare function setPedCanLegIk(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF2B7106D37947CE0 | Since: 323
 * @deprecated Use ped.setCanTorsoIk(ped1, toggle) instead
 */
export declare function setPedCanTorsoIk(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF5846EDB26A98A24 | Since: 323
 * @deprecated Use ped.setCanTorsoReactIk(ped1) instead
 */
export declare function setPedCanTorsoReactIk(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x6647C5F6F5792496 | Since: 323
 * @deprecated Use ped.setCanTorsoVehicleIk(ped1) instead
 */
export declare function setPedCanTorsoVehicleIk(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xEC4686EC06434678 | Since: 323
 * @deprecated Use ped.setCanUseAutoConversationLookat(ped1, toggle) instead
 */
export declare function setPedCanUseAutoConversationLookat(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x5CD3CB88A7F8850D | Since: 323
 * @deprecated Use ped.isHeadtrackingPed(ped1, ped2) instead
 */
export declare function isPedHeadtrackingPed(ped1: number | Ped, ped2: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x813A0A7C9D2E831F | Since: 323
 * @deprecated Use ped.isHeadtrackingEntity(ped1, entity) instead
 */
export declare function isPedHeadtrackingEntity(ped1: number | Ped, entity: number | Entity): boolean;
/**
 * This is only called once in the scripts.
 *
 * sub_1CD9(&l_49, 0, getElem(3, &l_34, 4), "MICHAEL", 0, 1);
 * sub_1CA8("WORLD_HUMAN_SMOKING", 2);
 * `PED::SET_PED_PRIMARY_LOOKAT(getElem(3, &l_34, 4), PLAYER::PLAYER_PED_ID());`
 *
 * Hash: 0xCD17B554996A8D9E | Since: 323
 * @deprecated Use ped.setPrimaryLookat(ped1, lookAt) instead
 */
export declare function setPedPrimaryLookat(ped1: number | Ped, lookAt: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x78C4E9961DB3EB5B | Since: 323
 * @deprecated Use ped.setClothPinFrames() instead
 */
export declare function setPedClothPinFrames(): void;
/**
 * No comment provided
 *
 * Hash: 0x82A3D6D9CC2CB8E3 | Since: 323
 * @deprecated Use ped.setClothPackageIndex() instead
 */
export declare function setPedClothPackageIndex(): void;
/**
 * No comment provided
 *
 * Hash: 0xA660FAF550EB37E5 | Since: 323
 * @deprecated Use ped.setClothProne() instead
 */
export declare function setPedClothProne(): void;
/**
 * enum ePedConfigFlags
 * {
 * _CPED_CONFIG_FLAG_0xC63DE95E = 1,
 * CPED_CONFIG_FLAG_NoCriticalHits = 2,
 * CPED_CONFIG_FLAG_DrownsInWater = 3,
 * CPED_CONFIG_FLAG_DisableReticuleFixedLockon = 4,
 * _CPED_CONFIG_FLAG_0x37D196F4 = 5,
 * _CPED_CONFIG_FLAG_0xE2462399 = 6,
 * CPED_CONFIG_FLAG_UpperBodyDamageAnimsOnly = 7,
 * _CPED_CONFIG_FLAG_0xEDDEB838 = 8,
 * _CPED_CONFIG_FLAG_0xB398B6FD = 9,
 * _CPED_CONFIG_FLAG_0xF6664E68 = 10,
 * _CPED_CONFIG_FLAG_0xA05E7CA3 = 11,
 * _CPED_CONFIG_FLAG_0xCE394045 = 12,
 * CPED_CONFIG_FLAG_NeverLeavesGroup = 13,
 * _CPED_CONFIG_FLAG_0xCD8D1411 = 14,
 * _CPED_CONFIG_FLAG_0xB031F1A9 = 15,
 * _CPED_CONFIG_FLAG_0xFE65BEE3 = 16,
 * CPED_CONFIG_FLAG_BlockNonTemporaryEvents = 17,
 * _CPED_CONFIG_FLAG_0x380165BD = 18,
 * _CPED_CONFIG_FLAG_0x07C045C7 = 19,
 * _CPED_CONFIG_FLAG_0x583B5E2D = 20,
 * _CPED_CONFIG_FLAG_0x475EDA58 = 21,
 * _CPED_CONFIG_FLAG_0x8629D05B = 22,
 * _CPED_CONFIG_FLAG_0x1522968B = 23,
 * CPED_CONFIG_FLAG_IgnoreSeenMelee = 24,
 * _CPED_CONFIG_FLAG_0x4CC09C4B = 25,
 * _CPED_CONFIG_FLAG_0x034F3053 = 26,
 * _CPED_CONFIG_FLAG_0xD91BA7CC = 27,
 * _CPED_CONFIG_FLAG_0x5C8DC66E = 28,
 * CPED_CONFIG_FLAG_GetOutUndriveableVehicle = 29,
 * _CPED_CONFIG_FLAG_0x6580B9D2 = 30,
 * _CPED_CONFIG_FLAG_0x0EF7A297 = 31,
 * CPED_CONFIG_FLAG_WillFlyThruWindscreen = 32,
 * CPED_CONFIG_FLAG_DieWhenRagdoll = 33,
 * CPED_CONFIG_FLAG_HasHelmet = 34,
 * CPED_CONFIG_FLAG_UseHelmet = 35,
 * CPED_CONFIG_FLAG_DontTakeOffHelmet = 36,
 * _CPED_CONFIG_FLAG_0xB130D17B = 37,
 * _CPED_CONFIG_FLAG_0x5F071200 = 38,
 * CPED_CONFIG_FLAG_DisableEvasiveDives = 39,
 * _CPED_CONFIG_FLAG_0xC287AAFF = 40,
 * _CPED_CONFIG_FLAG_0x203328CC = 41,
 * CPED_CONFIG_FLAG_DontInfluenceWantedLevel = 42,
 * CPED_CONFIG_FLAG_DisablePlayerLockon = 43,
 * CPED_CONFIG_FLAG_DisableLockonToRandomPeds = 44,
 * CPED_CONFIG_FLAG_AllowLockonToFriendlyPlayers = 45,
 * _CPED_CONFIG_FLAG_0xDB115BFA = 46,
 * CPED_CONFIG_FLAG_PedBeingDeleted = 47,
 * CPED_CONFIG_FLAG_BlockWeaponSwitching = 48,
 * _CPED_CONFIG_FLAG_0xF8E99565 = 49,
 * _CPED_CONFIG_FLAG_0xDD17FEE6 = 50,
 * _CPED_CONFIG_FLAG_0x7ED9B2C9 = 51,
 * _CPED_CONFIG_FLAG_NoCollison = 52,
 * _CPED_CONFIG_FLAG_0x5A6C1F6E = 53,
 * _CPED_CONFIG_FLAG_0xD749FC41 = 54,
 * _CPED_CONFIG_FLAG_0x357F63F3 = 55,
 * _CPED_CONFIG_FLAG_0xC5E60961 = 56,
 * _CPED_CONFIG_FLAG_0x29275C3E = 57,
 * CPED_CONFIG_FLAG_IsFiring = 58,
 * CPED_CONFIG_FLAG_WasFiring = 59,
 * CPED_CONFIG_FLAG_IsStanding = 60,
 * CPED_CONFIG_FLAG_WasStanding = 61,
 * CPED_CONFIG_FLAG_InVehicle = 62,
 * CPED_CONFIG_FLAG_OnMount = 63,
 * CPED_CONFIG_FLAG_AttachedToVehicle = 64,
 * CPED_CONFIG_FLAG_IsSwimming = 65,
 * CPED_CONFIG_FLAG_WasSwimming = 66,
 * CPED_CONFIG_FLAG_IsSkiing = 67,
 * CPED_CONFIG_FLAG_IsSitting = 68,
 * CPED_CONFIG_FLAG_KilledByStealth = 69,
 * CPED_CONFIG_FLAG_KilledByTakedown = 70,
 * CPED_CONFIG_FLAG_Knockedout = 71,
 * _CPED_CONFIG_FLAG_0x3E3C4560 = 72,
 * _CPED_CONFIG_FLAG_0x2994C7B7 = 73,
 * _CPED_CONFIG_FLAG_0x6D59D275 = 74,
 * CPED_CONFIG_FLAG_UsingCoverPoint = 75,
 * CPED_CONFIG_FLAG_IsInTheAir = 76,
 * _CPED_CONFIG_FLAG_0x2D493FB7 = 77,
 * CPED_CONFIG_FLAG_IsAimingGun = 78,
 * _CPED_CONFIG_FLAG_0x14D69875 = 79,
 * _CPED_CONFIG_FLAG_0x40B05311 = 80,
 * _CPED_CONFIG_FLAG_0x8B230BC5 = 81,
 * _CPED_CONFIG_FLAG_0xC74E5842 = 82,
 * _CPED_CONFIG_FLAG_0x9EA86147 = 83,
 * _CPED_CONFIG_FLAG_0x674C746C = 84,
 * _CPED_CONFIG_FLAG_0x3E56A8C2 = 85,
 * _CPED_CONFIG_FLAG_0xC144A1EF = 86,
 * _CPED_CONFIG_FLAG_0x0548512D = 87,
 * _CPED_CONFIG_FLAG_0x31C93909 = 88,
 * _CPED_CONFIG_FLAG_0xA0269315 = 89,
 * _CPED_CONFIG_FLAG_0xD4D59D4D = 90,
 * _CPED_CONFIG_FLAG_0x411D4420 = 91,
 * _CPED_CONFIG_FLAG_0xDF4AEF0D = 92,
 * CPED_CONFIG_FLAG_ForcePedLoadCover = 93,
 * _CPED_CONFIG_FLAG_0x300E4CD3 = 94,
 * _CPED_CONFIG_FLAG_0xF1C5BF04 = 95,
 * _CPED_CONFIG_FLAG_0x89C2EF13 = 96,
 * CPED_CONFIG_FLAG_VaultFromCover = 97,
 * _CPED_CONFIG_FLAG_0x02A852C8 = 98,
 * _CPED_CONFIG_FLAG_0x3D9407F1 = 99,
 * _CPED_CONFIG_FLAG_IsDrunk = 100, // 0x319B4558
 * CPED_CONFIG_FLAG_ForcedAim = 101,
 * _CPED_CONFIG_FLAG_0xB942D71A = 102,
 * _CPED_CONFIG_FLAG_0xD26C55A8 = 103,
 * CPED_CONFIG_FLAG_OpenDoorArmIK = 104,
 * CPED_CONFIG_FLAG_ForceReload = 105,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromVehicleImpact = 106,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromBulletImpact = 107,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromExplosions = 108,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromFire = 109,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromElectrocution = 110,
 * _CPED_CONFIG_FLAG_0x83C0A4BF = 111,
 * _CPED_CONFIG_FLAG_0x0E0FAF8C = 112,
 * CPED_CONFIG_FLAG_KeepWeaponHolsteredUnlessFired = 113,
 * _CPED_CONFIG_FLAG_0x43B80B79 = 114,
 * _CPED_CONFIG_FLAG_0x0D2A9309 = 115,
 * CPED_CONFIG_FLAG_GetOutBurningVehicle = 116,
 * CPED_CONFIG_FLAG_BumpedByPlayer = 117,
 * CPED_CONFIG_FLAG_RunFromFiresAndExplosions = 118,
 * CPED_CONFIG_FLAG_TreatAsPlayerDuringTargeting = 119,
 * CPED_CONFIG_FLAG_IsHandCuffed = 120,
 * CPED_CONFIG_FLAG_IsAnkleCuffed = 121,
 * CPED_CONFIG_FLAG_DisableMelee = 122,
 * CPED_CONFIG_FLAG_DisableUnarmedDrivebys = 123,
 * CPED_CONFIG_FLAG_JustGetsPulledOutWhenElectrocuted = 124,
 * _CPED_CONFIG_FLAG_0x5FED6BFD = 125,
 * CPED_CONFIG_FLAG_WillNotHotwireLawEnforcementVehicle = 126,
 * CPED_CONFIG_FLAG_WillCommandeerRatherThanJack = 127,
 * CPED_CONFIG_FLAG_CanBeAgitated = 128,
 * CPED_CONFIG_FLAG_ForcePedToFaceLeftInCover = 129,
 * CPED_CONFIG_FLAG_ForcePedToFaceRightInCover = 130,
 * CPED_CONFIG_FLAG_BlockPedFromTurningInCover = 131,
 * CPED_CONFIG_FLAG_KeepRelationshipGroupAfterCleanUp = 132,
 * CPED_CONFIG_FLAG_ForcePedToBeDragged = 133,
 * CPED_CONFIG_FLAG_PreventPedFromReactingToBeingJacked = 134,
 * CPED_CONFIG_FLAG_IsScuba = 135,
 * CPED_CONFIG_FLAG_WillArrestRatherThanJack = 136,
 * CPED_CONFIG_FLAG_RemoveDeadExtraFarAway = 137,
 * CPED_CONFIG_FLAG_RidingTrain = 138,
 * CPED_CONFIG_FLAG_ArrestResult = 139,
 * CPED_CONFIG_FLAG_CanAttackFriendly = 140,
 * CPED_CONFIG_FLAG_WillJackAnyPlayer = 141,
 * _CPED_CONFIG_FLAG_0x6901E731 = 142,
 * _CPED_CONFIG_FLAG_0x9EC9BF6C = 143,
 * CPED_CONFIG_FLAG_WillJackWantedPlayersRatherThanStealCar = 144,
 * CPED_CONFIG_FLAG_ShootingAnimFlag = 145,
 * CPED_CONFIG_FLAG_DisableLadderClimbing = 146,
 * CPED_CONFIG_FLAG_StairsDetected = 147,
 * CPED_CONFIG_FLAG_SlopeDetected = 148,
 * _CPED_CONFIG_FLAG_0x1A15670B = 149,
 * CPED_CONFIG_FLAG_CowerInsteadOfFlee = 150,
 * CPED_CONFIG_FLAG_CanActivateRagdollWhenVehicleUpsideDown = 151,
 * CPED_CONFIG_FLAG_AlwaysRespondToCriesForHelp = 152,
 * CPED_CONFIG_FLAG_DisableBloodPoolCreation = 153,
 * CPED_CONFIG_FLAG_ShouldFixIfNoCollision = 154,
 * CPED_CONFIG_FLAG_CanPerformArrest = 155,
 * CPED_CONFIG_FLAG_CanPerformUncuff = 156,
 * CPED_CONFIG_FLAG_CanBeArrested = 157,
 * _CPED_CONFIG_FLAG_0xF7960FF5 = 158,
 * CPED_CONFIG_FLAG_PlayerPreferFrontSeatMP = 159,
 * _CPED_CONFIG_FLAG_0x0C6C3099 = 160,
 * _CPED_CONFIG_FLAG_0x645F927A = 161,
 * _CPED_CONFIG_FLAG_0xA86549B9 = 162,
 * _CPED_CONFIG_FLAG_0x8AAF337A = 163,
 * _CPED_CONFIG_FLAG_0x13BAA6E7 = 164,
 * _CPED_CONFIG_FLAG_0x5FB9D1F5 = 165,
 * CPED_CONFIG_FLAG_IsInjured = 166,
 * CPED_CONFIG_FLAG_DontEnterVehiclesInPlayersGroup = 167,
 * _CPED_CONFIG_FLAG_0xD8072639 = 168,
 * CPED_CONFIG_FLAG_PreventAllMeleeTaunts = 169,
 * CPED_CONFIG_FLAG_ForceDirectEntry = 170,
 * CPED_CONFIG_FLAG_AlwaysSeeApproachingVehicles = 171,
 * CPED_CONFIG_FLAG_CanDiveAwayFromApproachingVehicles = 172,
 * CPED_CONFIG_FLAG_AllowPlayerToInterruptVehicleEntryExit = 173,
 * CPED_CONFIG_FLAG_OnlyAttackLawIfPlayerIsWanted = 174,
 * _CPED_CONFIG_FLAG_0x90008BFA = 175,
 * _CPED_CONFIG_FLAG_0x07C7A910 = 176,
 * CPED_CONFIG_FLAG_PedsJackingMeDontGetIn = 177,
 * _CPED_CONFIG_FLAG_0xCE4E8BE2 = 178,
 * CPED_CONFIG_FLAG_PedIgnoresAnimInterruptEvents = 179,
 * CPED_CONFIG_FLAG_IsInCustody = 180,
 * CPED_CONFIG_FLAG_ForceStandardBumpReactionThresholds = 181,
 * CPED_CONFIG_FLAG_LawWillOnlyAttackIfPlayerIsWanted = 182,
 * CPED_CONFIG_FLAG_IsAgitated = 183,
 * CPED_CONFIG_FLAG_PreventAutoShuffleToDriversSeat = 184,
 * CPED_CONFIG_FLAG_UseKinematicModeWhenStationary = 185,
 * CPED_CONFIG_FLAG_EnableWeaponBlocking = 186,
 * CPED_CONFIG_FLAG_HasHurtStarted = 187,
 * CPED_CONFIG_FLAG_DisableHurt = 188,
 * CPED_CONFIG_FLAG_PlayerIsWeird = 189,
 * _CPED_CONFIG_FLAG_0x32FC208B = 190,
 * _CPED_CONFIG_FLAG_0x0C296E5A = 191,
 * _CPED_CONFIG_FLAG_0xE63B73EC = 192,
 * CPED_CONFIG_FLAG_DoNothingWhenOnFootByDefault = 193,
 * CPED_CONFIG_FLAG_UsingScenario = 194,
 * CPED_CONFIG_FLAG_VisibleOnScreen = 195,
 * _CPED_CONFIG_FLAG_0xD88C58A1 = 196,
 * _CPED_CONFIG_FLAG_0x5A3DCF43 = 197,
 * _CPED_CONFIG_FLAG_0xEA02B420 = 198,
 * CPED_CONFIG_FLAG_DontActivateRagdollOnVehicleCollisionWhenDead = 199,
 * CPED_CONFIG_FLAG_HasBeenInArmedCombat = 200,
 * _CPED_CONFIG_FLAG_0x5E6466F6 = 201,
 * CPED_CONFIG_FLAG_Avoidance_Ignore_All = 202,
 * CPED_CONFIG_FLAG_Avoidance_Ignored_by_All = 203,
 * CPED_CONFIG_FLAG_Avoidance_Ignore_Group1 = 204,
 * CPED_CONFIG_FLAG_Avoidance_Member_of_Group1 = 205,
 * CPED_CONFIG_FLAG_ForcedToUseSpecificGroupSeatIndex = 206,
 * _CPED_CONFIG_FLAG_0x415B26B9 = 207,
 * CPED_CONFIG_FLAG_DisableExplosionReactions = 208,
 * CPED_CONFIG_FLAG_DodgedPlayer = 209,
 * CPED_CONFIG_FLAG_WaitingForPlayerControlInterrupt = 210,
 * CPED_CONFIG_FLAG_ForcedToStayInCover = 211,
 * CPED_CONFIG_FLAG_GeneratesSoundEvents = 212,
 * CPED_CONFIG_FLAG_ListensToSoundEvents = 213,
 * CPED_CONFIG_FLAG_AllowToBeTargetedInAVehicle = 214,
 * CPED_CONFIG_FLAG_WaitForDirectEntryPointToBeFreeWhenExiting = 215,
 * CPED_CONFIG_FLAG_OnlyRequireOnePressToExitVehicle = 216,
 * CPED_CONFIG_FLAG_ForceExitToSkyDive = 217,
 * _CPED_CONFIG_FLAG_0x3C7DF9DF = 218,
 * _CPED_CONFIG_FLAG_0x848FFEF2 = 219,
 * CPED_CONFIG_FLAG_DontEnterLeadersVehicle = 220,
 * CPED_CONFIG_FLAG_DisableExitToSkyDive = 221,
 * _CPED_CONFIG_FLAG_0x84F722FA = 222,
 * _CPED_CONFIG_FLAG_Shrink = 223, // 0xD1B87B1F
 * _CPED_CONFIG_FLAG_0x728AA918 = 224,
 * CPED_CONFIG_FLAG_DisablePotentialToBeWalkedIntoResponse = 225,
 * CPED_CONFIG_FLAG_DisablePedAvoidance = 226,
 * CPED_CONFIG_FLAG_ForceRagdollUponDeath = 227,
 * _CPED_CONFIG_FLAG_0x1EA7225F = 228,
 * CPED_CONFIG_FLAG_DisablePanicInVehicle = 229,
 * CPED_CONFIG_FLAG_AllowedToDetachTrailer = 230,
 * _CPED_CONFIG_FLAG_0xFC3E572D = 231,
 * _CPED_CONFIG_FLAG_0x08E9F9CF = 232,
 * _CPED_CONFIG_FLAG_0x2D3BA52D = 233,
 * _CPED_CONFIG_FLAG_0xFD2F53EA = 234,
 * _CPED_CONFIG_FLAG_0x31A1B03B = 235,
 * CPED_CONFIG_FLAG_IsHoldingProp = 236,
 * CPED_CONFIG_FLAG_BlocksPathingWhenDead = 237,
 * _CPED_CONFIG_FLAG_0xCE57C9A3 = 238,
 * _CPED_CONFIG_FLAG_0x26149198 = 239,
 * CPED_CONFIG_FLAG_ForceSkinCharacterCloth = 240,
 * CPED_CONFIG_FLAG_LeaveEngineOnWhenExitingVehicles = 241,
 * CPED_CONFIG_FLAG_PhoneDisableTextingAnimations = 242,
 * CPED_CONFIG_FLAG_PhoneDisableTalkingAnimations = 243,
 * CPED_CONFIG_FLAG_PhoneDisableCameraAnimations = 244,
 * CPED_CONFIG_FLAG_DisableBlindFiringInShotReactions = 245,
 * CPED_CONFIG_FLAG_AllowNearbyCoverUsage = 246,
 * _CPED_CONFIG_FLAG_0x0C754ACA = 247,
 * CPED_CONFIG_FLAG_CanPlayInCarIdles = 248,
 * CPED_CONFIG_FLAG_CanAttackNonWantedPlayerAsLaw = 249,
 * CPED_CONFIG_FLAG_WillTakeDamageWhenVehicleCrashes = 250,
 * CPED_CONFIG_FLAG_AICanDrivePlayerAsRearPassenger = 251,
 * CPED_CONFIG_FLAG_PlayerCanJackFriendlyPlayers = 252,
 * CPED_CONFIG_FLAG_OnStairs = 253,
 * _CPED_CONFIG_FLAG_0xE1A2F73F = 254,
 * CPED_CONFIG_FLAG_AIDriverAllowFriendlyPassengerSeatEntry = 255,
 * _CPED_CONFIG_FLAG_0xF1EB20A9 = 256,
 * CPED_CONFIG_FLAG_AllowMissionPedToUseInjuredMovement = 257,
 * _CPED_CONFIG_FLAG_0x329DCF1A = 258,
 * _CPED_CONFIG_FLAG_0x8D90DD1B = 259,
 * _CPED_CONFIG_FLAG_0xB8A292B7 = 260,
 * CPED_CONFIG_FLAG_PreventUsingLowerPrioritySeats = 261,
 * _CPED_CONFIG_FLAG_0x2AF558F0 = 262,
 * _CPED_CONFIG_FLAG_0x82251455 = 263,
 * _CPED_CONFIG_FLAG_0x30CF498B = 264,
 * _CPED_CONFIG_FLAG_0xE1CD50AF = 265,
 * _CPED_CONFIG_FLAG_0x72E4AE48 = 266,
 * _CPED_CONFIG_FLAG_0xC2657EA1 = 267,
 * CPED_CONFIG_FLAG_TeleportToLeaderVehicle = 268,
 * CPED_CONFIG_FLAG_Avoidance_Ignore_WeirdPedBuffer = 269,
 * CPED_CONFIG_FLAG_OnStairSlope = 270,
 * _CPED_CONFIG_FLAG_0xA0897933 = 271,
 * CPED_CONFIG_FLAG_DontBlipCop = 272,
 * CPED_CONFIG_FLAG_ClimbedShiftedFence = 273,
 * _CPED_CONFIG_FLAG_0xF7823618 = 274,
 * CPED_CONFIG_FLAG_KillWhenTrapped = 275,
 * CPED_CONFIG_FLAG_EdgeDetected = 276,
 * _CPED_CONFIG_FLAG_0x92B67896 = 277,
 * _CPED_CONFIG_FLAG_0xCAD677C9 = 278,
 * CPED_CONFIG_FLAG_AvoidTearGas = 279,
 * _CPED_CONFIG_FLAG_0x5276AC7B = 280,
 * CPED_CONFIG_FLAG_DisableGoToWritheWhenInjured = 281,
 * CPED_CONFIG_FLAG_OnlyUseForcedSeatWhenEnteringHeliInGroup = 282,
 * _CPED_CONFIG_FLAG_0x9139724D = 283,
 * _CPED_CONFIG_FLAG_0xA1457461 = 284,
 * CPED_CONFIG_FLAG_DisableWeirdPedEvents = 285,
 * CPED_CONFIG_FLAG_ShouldChargeNow = 286,
 * CPED_CONFIG_FLAG_RagdollingOnBoat = 287,
 * CPED_CONFIG_FLAG_HasBrandishedWeapon = 288,
 * _CPED_CONFIG_FLAG_0x1B9EE8A1 = 289,
 * _CPED_CONFIG_FLAG_0xF3F5758C = 290,
 * _CPED_CONFIG_FLAG_0x2A9307F1 = 291,
 * _CPED_CONFIG_FLAG_FreezePosition = 292, // 0x7403D216
 * _CPED_CONFIG_FLAG_0xA06A3C6C = 293,
 * CPED_CONFIG_FLAG_DisableShockingEvents = 294,
 * _CPED_CONFIG_FLAG_0xF8DA25A5 = 295,
 * CPED_CONFIG_FLAG_NeverReactToPedOnRoof = 296,
 * _CPED_CONFIG_FLAG_0xB31F1187 = 297,
 * _CPED_CONFIG_FLAG_0x84315402 = 298,
 * CPED_CONFIG_FLAG_DisableShockingDrivingOnPavementEvents = 299,
 * _CPED_CONFIG_FLAG_0xC7829B67 = 300,
 * CPED_CONFIG_FLAG_DisablePedConstraints = 301,
 * CPED_CONFIG_FLAG_ForceInitialPeekInCover = 302,
 * _CPED_CONFIG_FLAG_0x2ADA871B = 303,
 * _CPED_CONFIG_FLAG_0x47BC8A58 = 304,
 * CPED_CONFIG_FLAG_DisableJumpingFromVehiclesAfterLeader = 305,
 * _CPED_CONFIG_FLAG_0x4A133C50 = 306,
 * _CPED_CONFIG_FLAG_0xC58099C3 = 307,
 * _CPED_CONFIG_FLAG_0xF3D76D41 = 308,
 * _CPED_CONFIG_FLAG_0xB0EEE9F2 = 309,
 * CPED_CONFIG_FLAG_IsInCluster = 310,
 * CPED_CONFIG_FLAG_ShoutToGroupOnPlayerMelee = 311,
 * CPED_CONFIG_FLAG_IgnoredByAutoOpenDoors = 312,
 * _CPED_CONFIG_FLAG_0xD4136C22 = 313,
 * CPED_CONFIG_FLAG_ForceIgnoreMeleeActiveCombatant = 314,
 * CPED_CONFIG_FLAG_CheckLoSForSoundEvents = 315,
 * _CPED_CONFIG_FLAG_0xD5C98277 = 316,
 * CPED_CONFIG_FLAG_CanSayFollowedByPlayerAudio = 317,
 * CPED_CONFIG_FLAG_ActivateRagdollFromMinorPlayerContact = 318,
 * _CPED_CONFIG_FLAG_0xD8BE1D54 = 319,
 * CPED_CONFIG_FLAG_ForcePoseCharacterCloth = 320,
 * CPED_CONFIG_FLAG_HasClothCollisionBounds = 321,
 * CPED_CONFIG_FLAG_HasHighHeels = 322,
 * _CPED_CONFIG_FLAG_0x86B01E54 = 323,
 * CPED_CONFIG_FLAG_DontBehaveLikeLaw = 324,
 * _CPED_CONFIG_FLAG_0xC03B736C = 325, // SpawnedAtScenario?
 * CPED_CONFIG_FLAG_DisablePoliceInvestigatingBody = 326,
 * CPED_CONFIG_FLAG_DisableWritheShootFromGround = 327,
 * CPED_CONFIG_FLAG_LowerPriorityOfWarpSeats = 328,
 * CPED_CONFIG_FLAG_DisableTalkTo = 329,
 * CPED_CONFIG_FLAG_DontBlip = 330,
 * CPED_CONFIG_FLAG_IsSwitchingWeapon = 331,
 * CPED_CONFIG_FLAG_IgnoreLegIkRestrictions = 332,
 * _CPED_CONFIG_FLAG_0x150468FD = 333,
 * _CPED_CONFIG_FLAG_0x914EBD6B = 334,
 * _CPED_CONFIG_FLAG_0x79AF3B6D = 335,
 * _CPED_CONFIG_FLAG_0x75C7A632 = 336,
 * _CPED_CONFIG_FLAG_0x52D530E2 = 337,
 * _CPED_CONFIG_FLAG_0xDB2A90E0 = 338,
 * CPED_CONFIG_FLAG_AllowTaskDoNothingTimeslicing = 339,
 * _CPED_CONFIG_FLAG_0x12ADB567 = 340,
 * _CPED_CONFIG_FLAG_0x105C8518 = 341,
 * CPED_CONFIG_FLAG_NotAllowedToJackAnyPlayers = 342,
 * _CPED_CONFIG_FLAG_0xED152C3E = 343,
 * _CPED_CONFIG_FLAG_0xA0EFE6A8 = 344,
 * CPED_CONFIG_FLAG_AlwaysLeaveTrainUponArrival = 345,
 * _CPED_CONFIG_FLAG_0xCDDFE830 = 346,
 * CPED_CONFIG_FLAG_OnlyWritheFromWeaponDamage = 347,
 * CPED_CONFIG_FLAG_UseSloMoBloodVfx = 348,
 * CPED_CONFIG_FLAG_EquipJetpack = 349,
 * CPED_CONFIG_FLAG_PreventDraggedOutOfCarThreatResponse = 350,
 * _CPED_CONFIG_FLAG_0xE13D1F7C = 351,
 * _CPED_CONFIG_FLAG_0x40E25FB9 = 352,
 * _CPED_CONFIG_FLAG_0x930629D9 = 353,
 * _CPED_CONFIG_FLAG_0xECCF0C7F = 354,
 * _CPED_CONFIG_FLAG_0xB6E9613B = 355,
 * CPED_CONFIG_FLAG_ForceDeepSurfaceCheck = 356,
 * CPED_CONFIG_FLAG_DisableDeepSurfaceAnims = 357,
 * CPED_CONFIG_FLAG_DontBlipNotSynced = 358,
 * CPED_CONFIG_FLAG_IsDuckingInVehicle = 359,
 * CPED_CONFIG_FLAG_PreventAutoShuffleToTurretSeat = 360,
 * CPED_CONFIG_FLAG_DisableEventInteriorStatusCheck = 361,
 * CPED_CONFIG_FLAG_HasReserveParachute = 362,
 * CPED_CONFIG_FLAG_UseReserveParachute = 363,
 * CPED_CONFIG_FLAG_TreatDislikeAsHateWhenInCombat = 364,
 * CPED_CONFIG_FLAG_OnlyUpdateTargetWantedIfSeen = 365,
 * CPED_CONFIG_FLAG_AllowAutoShuffleToDriversSeat = 366,
 * _CPED_CONFIG_FLAG_0xD7E07D37 = 367,
 * _CPED_CONFIG_FLAG_0x03C4FD24 = 368,
 * _CPED_CONFIG_FLAG_0x7675789A = 369,
 * _CPED_CONFIG_FLAG_0xB7288A88 = 370,
 * _CPED_CONFIG_FLAG_0xC06B6291 = 371,
 * CPED_CONFIG_FLAG_PreventReactingToSilencedCloneBullets = 372,
 * CPED_CONFIG_FLAG_DisableInjuredCryForHelpEvents = 373,
 * CPED_CONFIG_FLAG_NeverLeaveTrain = 374,
 * CPED_CONFIG_FLAG_DontDropJetpackOnDeath = 375,
 * _CPED_CONFIG_FLAG_0x147F1FFB = 376,
 * _CPED_CONFIG_FLAG_0x4376DD79 = 377,
 * _CPED_CONFIG_FLAG_0xCD3DB518 = 378,
 * _CPED_CONFIG_FLAG_0xFE4BA4B6 = 379,
 * CPED_CONFIG_FLAG_DisableAutoEquipHelmetsInBikes = 380,
 * _CPED_CONFIG_FLAG_0xBCD816CD = 381,
 * _CPED_CONFIG_FLAG_0xCF02DD69 = 382,
 * _CPED_CONFIG_FLAG_0xF73AFA2E = 383,
 * _CPED_CONFIG_FLAG_0x80B9A9D0 = 384,
 * _CPED_CONFIG_FLAG_0xF601F7EE = 385,
 * _CPED_CONFIG_FLAG_0xA91350FC = 386,
 * _CPED_CONFIG_FLAG_0x3AB23B96 = 387,
 * CPED_CONFIG_FLAG_IsClimbingLadder = 388,
 * CPED_CONFIG_FLAG_HasBareFeet = 389,
 * CPED_CONFIG_FLAG_UNUSED_REPLACE_ME_2 = 390,
 * CPED_CONFIG_FLAG_GoOnWithoutVehicleIfItIsUnableToGetBackToRoad = 391,
 * CPED_CONFIG_FLAG_BlockDroppingHealthSnacksOnDeath = 392,
 * _CPED_CONFIG_FLAG_0xC11D3E8F = 393,
 * CPED_CONFIG_FLAG_ForceThreatResponseToNonFriendToFriendMeleeActions = 394,
 * CPED_CONFIG_FLAG_DontRespondToRandomPedsDamage = 395,
 * CPED_CONFIG_FLAG_AllowContinuousThreatResponseWantedLevelUpdates = 396,
 * CPED_CONFIG_FLAG_KeepTargetLossResponseOnCleanup = 397,
 * CPED_CONFIG_FLAG_PlayersDontDragMeOutOfCar = 398,
 * CPED_CONFIG_FLAG_BroadcastRepondedToThreatWhenGoingToPointShooting = 399,
 * CPED_CONFIG_FLAG_IgnorePedTypeForIsFriendlyWith = 400,
 * CPED_CONFIG_FLAG_TreatNonFriendlyAsHateWhenInCombat = 401,
 * CPED_CONFIG_FLAG_DontLeaveVehicleIfLeaderNotInVehicle = 402,
 * _CPED_CONFIG_FLAG_0x5E5B9591 = 403,
 * CPED_CONFIG_FLAG_AllowMeleeReactionIfMeleeProofIsOn = 404,
 * _CPED_CONFIG_FLAG_0x77840177 = 405,
 * _CPED_CONFIG_FLAG_0x1C7ACAC4 = 406,
 * CPED_CONFIG_FLAG_UseNormalExplosionDamageWhenBlownUpInVehicle = 407,
 * CPED_CONFIG_FLAG_DisableHomingMissileLockForVehiclePedInside = 408,
 * CPED_CONFIG_FLAG_DisableTakeOffScubaGear = 409,
 * CPED_CONFIG_FLAG_IgnoreMeleeFistWeaponDamageMult = 410,
 * CPED_CONFIG_FLAG_LawPedsCanFleeFromNonWantedPlayer = 411,
 * CPED_CONFIG_FLAG_ForceBlipSecurityPedsIfPlayerIsWanted = 412,
 * CPED_CONFIG_FLAG_IsHolsteringWeapon = 413,
 * CPED_CONFIG_FLAG_UseGoToPointForScenarioNavigation = 414,
 * CPED_CONFIG_FLAG_DontClearLocalPassengersWantedLevel = 415,
 * CPED_CONFIG_FLAG_BlockAutoSwapOnWeaponPickups = 416,
 * CPED_CONFIG_FLAG_ThisPedIsATargetPriorityForAI = 417,
 * CPED_CONFIG_FLAG_IsSwitchingHelmetVisor = 418,
 * CPED_CONFIG_FLAG_ForceHelmetVisorSwitch = 419,
 * _CPED_CONFIG_FLAG_0xCFF5F6DE = 420,
 * CPED_CONFIG_FLAG_UseOverrideFootstepPtFx = 421,
 * CPED_CONFIG_FLAG_DisableVehicleCombat = 422,
 * _CPED_CONFIG_FLAG_0xFE401D26 = 423,
 * CPED_CONFIG_FLAG_FallsLikeAircraft = 424,
 * _CPED_CONFIG_FLAG_0x2B42AE82 = 425,
 * CPED_CONFIG_FLAG_UseLockpickVehicleEntryAnimations = 426,
 * CPED_CONFIG_FLAG_IgnoreInteriorCheckForSprinting = 427,
 * CPED_CONFIG_FLAG_SwatHeliSpawnWithinLastSpottedLocation = 428,
 * CPED_CONFIG_FLAG_DisableStartEngine = 429,
 * CPED_CONFIG_FLAG_IgnoreBeingOnFire = 430,
 * CPED_CONFIG_FLAG_DisableTurretOrRearSeatPreference = 431,
 * CPED_CONFIG_FLAG_DisableWantedHelicopterSpawning = 432,
 * CPED_CONFIG_FLAG_UseTargetPerceptionForCreatingAimedAtEvents = 433,
 * CPED_CONFIG_FLAG_DisableHomingMissileLockon = 434,
 * CPED_CONFIG_FLAG_ForceIgnoreMaxMeleeActiveSupportCombatants = 435,
 * CPED_CONFIG_FLAG_StayInDefensiveAreaWhenInVehicle = 436,
 * CPED_CONFIG_FLAG_DontShoutTargetPosition = 437,
 * CPED_CONFIG_FLAG_DisableHelmetArmor = 438,
 * _CPED_CONFIG_FLAG_0xCB7F3A1E = 439,
 * _CPED_CONFIG_FLAG_0x50178878 = 440,
 * CPED_CONFIG_FLAG_PreventVehExitDueToInvalidWeapon = 441,
 * CPED_CONFIG_FLAG_IgnoreNetSessionFriendlyFireCheckForAllowDamage = 442,
 * CPED_CONFIG_FLAG_DontLeaveCombatIfTargetPlayerIsAttackedByPolice = 443,
 * CPED_CONFIG_FLAG_CheckLockedBeforeWarp = 444,
 * CPED_CONFIG_FLAG_DontShuffleInVehicleToMakeRoom = 445,
 * CPED_CONFIG_FLAG_GiveWeaponOnGetup = 446,
 * CPED_CONFIG_FLAG_DontHitVehicleWithProjectiles = 447,
 * CPED_CONFIG_FLAG_DisableForcedEntryForOpenVehiclesFromTryLockedDoor = 448,
 * CPED_CONFIG_FLAG_FiresDummyRockets = 449,
 * CPED_CONFIG_FLAG_PedIsArresting = 450,
 * CPED_CONFIG_FLAG_IsDecoyPed = 451,
 * CPED_CONFIG_FLAG_HasEstablishedDecoy = 452,
 * CPED_CONFIG_FLAG_BlockDispatchedHelicoptersFromLanding = 453,
 * CPED_CONFIG_FLAG_DontCryForHelpOnStun = 454,
 * _CPED_CONFIG_FLAG_0xB68D3EAB = 455,
 * CPED_CONFIG_FLAG_CanBeIncapacitated = 456,
 * _CPED_CONFIG_FLAG_0x4BD5EBAD = 457,
 * CPED_CONFIG_FLAG_DontChangeTargetFromMelee = 458,
 * };
 *
 * Hash: 0x1913FE4CBF41C463 | Since: 323
 * @deprecated Use ped.setConfigFlag(ped1, flagId, value) instead
 */
export declare function setPedConfigFlag(ped1: number | Ped, flagId: number, value: boolean): void;
/**
 * `PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 240, 1);`
 * Known values:
 * PRF_PreventGoingIntoStillInVehicleState = 236 *(fanatic2.c)*
 *
 * Hash: 0xC1E8A365BF3B29F2 | Since: 323
 * @deprecated Use ped.setResetFlag(ped1, flagId, doReset) instead
 */
export declare function setPedResetFlag(ped1: number | Ped, flagId: number, doReset: boolean): void;
/**
 * See SET_PED_CONFIG_FLAG
 *
 * Hash: 0x7EE53118C892B513 | Since: 323
 * @deprecated Use ped.getConfigFlag(ped1, flagId) instead
 */
export declare function getPedConfigFlag(ped1: number | Ped, flagId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAF9E59B1B1FBF2A0 | Since: 323
 * @deprecated Use ped.getResetFlag(ped1, flagId) instead
 */
export declare function getPedResetFlag(ped1: number | Ped, flagId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0BDDB8D9EC6BCF3C | Since: 323
 * @deprecated Use ped.setGroupMemberPassengerIndex(ped1, index) instead
 */
export declare function setPedGroupMemberPassengerIndex(ped1: number | Ped, index: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6B7A646C242A7059 | Since: 323
 * @deprecated Use ped.setCanEvasiveDive(ped1, toggle) instead
 */
export declare function setPedCanEvasiveDive(ped1: number | Ped, toggle: boolean): void;
/**
 * Presumably returns the Entity that the Ped is currently diving out of the way of.
 *
 * var num3;
 * `if (PED::IS_PED_EVASIVE_DIVING(A_0, &num3) != 0)`
 * `if (ENTITY::IS_ENTITY_A_VEHICLE(num3) != 0)`
 *
 * Hash: 0x414641C26E105898 | Since: 323
 * @deprecated Use ped.isEvasiveDiving(ped1) instead
 */
export declare function isPedEvasiveDiving(ped1: number | Ped): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x96A05E4FB321B1BA | Since: 323
 * @deprecated Use ped.setShootsAtCoord(ped1, pos, toggle) instead
 */
export declare function setPedShootsAtCoord(ped1: number | Ped, pos: Vector3, toggle: boolean): void;
/**
 * Full list of peds by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/peds.json
 *
 * Hash: 0xE163A4BCE4DE6F11 | Since: 323
 * @deprecated Use ped.setModelIsSuppressed(modelHash, toggle) instead
 */
export declare function setPedModelIsSuppressed(modelHash: number | string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB47BD05FA66B40CF | Since: 323
 * @deprecated Use ped.stopAnyModelBeingSuppressed() instead
 */
export declare function stopAnyPedModelBeingSuppressed(): void;
/**
 * No comment provided
 *
 * Hash: 0x638C03B0F9878F57 | Since: 323
 * @deprecated Use ped.setCanBeTargetedWhenInjured(ped1, toggle) instead
 */
export declare function setPedCanBeTargetedWhenInjured(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7FB17BA2E7DECA5B | Since: 323
 * @deprecated Use ped.setGeneratesDeadBodyEvents(ped1, toggle) instead
 */
export declare function setPedGeneratesDeadBodyEvents(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE43A13C9E4CCCBCF | Since: 323
 * @deprecated Use ped.blockFromGeneratingDeadBodyEventsWhenDead(ped1, toggle) instead
 */
export declare function blockPedFromGeneratingDeadBodyEventsWhenDead(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3E9679C1DFCF422C | Since: 877
 * @deprecated Use ped.setWillOnlyAttackWantedPlayer() instead
 */
export declare function setPedWillOnlyAttackWantedPlayer(): void;
/**
 * No comment provided
 *
 * Hash: 0xDF993EE5E90ABA25 | Since: 323
 * @deprecated Use ped.setCanRagdollFromPlayerImpact(ped1, toggle) instead
 */
export declare function setPedCanRagdollFromPlayerImpact(ped1: number | Ped, toggle: boolean): void;
/**
 * PoliceMotorcycleHelmet   1024
 * RegularMotorcycleHelmet   4096
 * FiremanHelmet 16384
 * PilotHeadset  32768
 * PilotHelmet   65536
 * --
 * p2 is generally 4096 or 16384 in the scripts. p1 varies between 1 and 0.
 *
 * Hash: 0x54C7C4A94367717E | Since: 323
 * @deprecated Use ped.giveHelmet(ped1, cannotRemove, helmetFlag, textureIndex) instead
 */
export declare function givePedHelmet(ped1: number | Ped, cannotRemove: boolean, helmetFlag: number, textureIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA7B2458D0AD6DED8 | Since: 323
 * @deprecated Use ped.removeHelmet(ped1, instantly) instead
 */
export declare function removePedHelmet(ped1: number | Ped, instantly: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x14590DDBEDB1EC85 | Since: 323
 * @deprecated Use ped.isTakingOffHelmet(ped1) instead
 */
export declare function isPedTakingOffHelmet(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x560A43136EB58105 | Since: 323
 * @deprecated Use ped.setHelmet(ped1, canWearHelmet) instead
 */
export declare function setPedHelmet(ped1: number | Ped, canWearHelmet: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC0E78D5C2CE3EB25 | Since: 323
 * @deprecated Use ped.setHelmetFlag(ped1, helmetFlag) instead
 */
export declare function setPedHelmetFlag(ped1: number | Ped, helmetFlag: number): void;
/**
 * List of component/props ID
 * gtaxscripting.blogspot.com/2016/04/gta-v-peds-component-and-props.html
 *
 * Hash: 0x26D83693ED99291C | Since: 323
 * @deprecated Use ped.setHelmetPropIndex(ped1, propIndex) instead
 */
export declare function setPedHelmetPropIndex(ped1: number | Ped, propIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3F7325574E41B44D | Since: 791
 * @deprecated Use ped.setHelmetVisorPropIndices(ped1) instead
 */
export declare function setPedHelmetVisorPropIndices(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xB9496CE47546DB2C | Since: 791
 * @deprecated Use ped.isHelmetVisorUp(ped1) instead
 */
export declare function isPedHelmetVisorUp(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF1550C4BD22582E2 | Since: 323
 * @deprecated Use ped.setHelmetTextureIndex(ped1, textureIndex) instead
 */
export declare function setPedHelmetTextureIndex(ped1: number | Ped, textureIndex: number): void;
/**
 * Returns true if the ped passed through the parenthesis is wearing a helmet.
 *
 * Hash: 0xF33BDFE19B309B19 | Since: 323
 * @deprecated Use ped.isWearingHelmet(ped1) instead
 */
export declare function isPedWearingHelmet(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x687C0B594907D2E8 | Since: 323
 * @deprecated Use ped.clearStoredHatProp(ped1) instead
 */
export declare function clearPedStoredHatProp(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x451294E859ECC018 | Since: 323
 * @deprecated Use ped.getHelmetStoredHatPropIndex(ped1) instead
 */
export declare function getPedHelmetStoredHatPropIndex(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x9D728C1E12BF5518 | Since: 323
 * @deprecated Use ped.getHelmetStoredHatTexIndex(ped1) instead
 */
export declare function getPedHelmetStoredHatTexIndex(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xF2385935BFFD4D92 | Since: 323
 * @deprecated Use ped.isCurrentHeadPropAHelmet() instead
 */
export declare function isCurrentHeadPropAHelmet(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x332B562EEDA62399 | Since: 323
 * @deprecated Use ped.setToLoadCover(ped1, toggle) instead
 */
export declare function setPedToLoadCover(ped1: number | Ped, toggle: boolean): void;
/**
 * It simply makes the said ped to cower behind cover object(wall, desk, car)
 *
 * Peds flee attributes must be set to not to flee, first. Else, most of the peds, will just flee from gunshot sounds or any other panic situations.
 *
 * Hash: 0xCB7553CDCEF4A735 | Since: 323
 * @deprecated Use ped.setCanCowerInCover(ped1, toggle) instead
 */
export declare function setPedCanCowerInCover(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC514825C507E3736 | Since: 323
 * @deprecated Use ped.setCanPeekInCover(ped1, toggle) instead
 */
export declare function setPedCanPeekInCover(ped1: number | Ped, toggle: boolean): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0x94D94BF1A75AED3D | Since: 323
 * @deprecated Use ped.setPlaysHeadOnHornAnimWhenDiesInVehicle(ped1, toggle) instead
 */
export declare function setPedPlaysHeadOnHornAnimWhenDiesInVehicle(ped1: number | Ped, toggle: boolean): void;
/**
 * "IK" stands for "Inverse kinematics." I assume this has something to do with how the ped uses his legs to balance. In the scripts, the second parameter is always an int with a value of 2, 0, or sometimes 1
 *
 * Hash: 0xC396F5B86FF9FEBD | Since: 323
 * @deprecated Use ped.setLegIkMode(ped1, mode) instead
 */
export declare function setPedLegIkMode(ped1: number | Ped, mode: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0A986918B102B448 | Since: 323
 * @deprecated Use ped.setMotionBlur(ped1, toggle) instead
 */
export declare function setPedMotionBlur(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xED7F7EFE9FABF340 | Since: 323
 * @deprecated Use ped.setCanSwitchWeapon(ped1, toggle) instead
 */
export declare function setPedCanSwitchWeapon(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEEB64139BA29A7CF | Since: 323
 * @deprecated Use ped.setDiesInstantlyInWater(ped1, toggle) instead
 */
export declare function setPedDiesInstantlyInWater(ped1: number | Ped, toggle: boolean): void;
/**
 * Only appears in lamar1 script.
 *
 * Hash: 0x1A330D297AAC6BC1 | Since: 323
 * @deprecated Use ped.setLadderClimbInputState(ped1) instead
 */
export declare function setLadderClimbInputState(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xC158D28142A34608 | Since: 323
 * @deprecated Use ped.stopWeaponFiringWhenDropped(ped1) instead
 */
export declare function stopPedWeaponFiringWhenDropped(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x5917BBA32D06C230 | Since: 323
 * @deprecated Use ped.setScriptedAnimSeatOffset(ped1) instead
 */
export declare function setScriptedAnimSeatOffset(ped1: number | Ped): void;
/**
 * enum eCombatMovement // 0x4F456B61
 * {
 * CM_Stationary,
 * CM_Defensive,
 * CM_WillAdvance,
 * CM_WillRetreat
 * };
 *
 * Hash: 0x4D9CA1009AFBD057 | Since: 323
 * @deprecated Use ped.setCombatMovement(ped1, combatMovement) instead
 */
export declare function setPedCombatMovement(ped1: number | Ped, combatMovement: number): void;
/**
 * See SET_PED_COMBAT_MOVEMENT
 *
 * Hash: 0xDEA92412FCAEB3F5 | Since: 323
 * @deprecated Use ped.getCombatMovement(ped1) instead
 */
export declare function getPedCombatMovement(ped1: number | Ped): number;
/**
 * enum eCombatAbility // 0xE793438C
 * {
 * CA_Poor,
 * CA_Average,
 * CA_Professional,
 * CA_NumTypes
 * };
 *
 * Hash: 0xC7622C0D36B2FDA8 | Since: 323
 * @deprecated Use ped.setCombatAbility(ped1, abilityLevel) instead
 */
export declare function setPedCombatAbility(ped1: number | Ped, abilityLevel: number): void;
/**
 * enum eCombatRange // 0xB69160F5
 * {
 * CR_Near,
 * CR_Medium,
 * CR_Far,
 * CR_VeryFar,
 * CR_NumRanges
 * };
 *
 * Hash: 0x3C606747B23E497B | Since: 323
 * @deprecated Use ped.setCombatRange(ped1, combatRange) instead
 */
export declare function setPedCombatRange(ped1: number | Ped, combatRange: number): void;
/**
 * See SET_PED_COMBAT_RANGE
 *
 * Hash: 0xF9D9F7F2DB8E2FA0 | Since: 323
 * @deprecated Use ped.getCombatRange(ped1) instead
 */
export declare function getPedCombatRange(ped1: number | Ped): number;
/**
 * enum eCombatAttributes // 0x0E8E7201
 * {
 * BF_CanUseCover = 0,
 * BF_CanUseVehicles = 1,
 * BF_CanDoDrivebys = 2,
 * BF_CanLeaveVehicle = 3,
 * BF_CanUseDynamicStrafeDecisions = 4,
 * BF_AlwaysFight = 5,
 * BF_0x66BB9FCC = 6,
 * BF_0x6837DA41 = 7,
 * BF_0xB4A13A5A = 8,
 * BF_0xEE326AAD = 9,
 * BF_0x7DF2CCFA = 10,
 * BF_0x0036D422 = 11,
 * BF_BlindFireWhenInCover = 12,
 * BF_Aggressive = 13,
 * BF_CanInvestigate = 14,
 * BF_HasRadio = 15,
 * BF_0x6BDE28D1 = 16,
 * BF_AlwaysFlee = 17,
 * BF_0x7852797D = 18,
 * BF_0x33497B95 = 19,
 * BF_CanTauntInVehicle = 20,
 * BF_CanChaseTargetOnFoot = 21,
 * BF_WillDragInjuredPedsToSafety = 22,
 * BF_0xCD7168B8 = 23,
 * BF_UseProximityFiringRate = 24,
 * BF_0x48F914F8 = 25,
 * BF_0x2EA543D0 = 26,
 * BF_PerfectAccuracy = 27,
 * BF_CanUseFrustratedAdvance = 28,
 * BF_0x3D131AC1 = 29,
 * BF_0x3AD95F27 = 30,
 * BF_MaintainMinDistanceToTarget = 31,
 * BF_0xEAD68AD2 = 32,
 * BF_0xA206C2E0 = 33,
 * BF_CanUsePeekingVariations = 34,
 * BF_0xA5715184 = 35,
 * BF_0xD5265533 = 36,
 * BF_0x2B84C2BF = 37,
 * BF_DisableBulletReactions = 38,
 * BF_CanBust = 39,
 * BF_0xAA525726 = 40,
 * BF_CanCommandeerVehicles = 41,
 * BF_CanFlank = 42,
 * BF_SwitchToAdvanceIfCantFindCover = 43,
 * BF_SwitchToDefensiveIfInCover = 44,
 * BF_0xEB4786A0 = 45,
 * BF_CanFightArmedPedsWhenNotArmed = 46,
 * BF_0xA08E9402 = 47,
 * BF_0x952EAD7D = 48,
 * BF_UseEnemyAccuracyScaling = 49,
 * BF_CanCharge = 50,
 * BF_0xDA8C2BD3 = 51,
 * BF_0x6562F017 = 52,
 * BF_0xA2C3D53B = 53,
 * BF_AlwaysEquipBestWeapon = 54,
 * BF_CanSeeUnderwaterPeds = 55,
 * BF_0xF619486B = 56,
 * BF_0x61EB63A3 = 57,
 * BF_DisableFleeFromCombat = 58,
 * BF_0x8976D12B = 59,
 * BF_CanThrowSmokeGrenade = 60,
 * BF_NonMissionPedsFleeFromThisPedUnlessArmed = 61,
 * BF_0x5452A10C = 62,
 * BF_FleesFromInvincibleOpponents = 63,
 * BF_DisableBlockFromPursueDuringVehicleChase = 64,
 * BF_DisableSpinOutDuringVehicleChase = 65,
 * BF_DisableCruiseInFrontDuringBlockDuringVehicleChase = 66,
 * BF_0x0B404731 = 67,
 * BF_DisableReactToBuddyShot = 68,
 * BF_0x7FFD6AEB = 69,
 * BF_0x51F4AEF8 = 70,
 * BF_PermitChargeBeyondDefensiveArea = 71,
 * BF_0x63E0A8E2 = 72,
 * BF_0xDF974436 = 73,
 * BF_0x556C080B = 74,
 * BF_0xA4D50035 = 75,
 * BF_SetDisableShoutTargetPositionOnCombatStart = 76,
 * BF_DisableRespondedToThreatBroadcast = 77,
 * BF_0xCBB01765 = 78,
 * BF_0x4F862ED4 = 79,
 * BF_0xEF9C7C40 = 80,
 * BF_0xE51B494F = 81,
 * BF_0x054D0199 = 82,
 * BF_0xD36BCE94 = 83,
 * BF_0xFB11F690 = 84,
 * BF_0xD208A9AD = 85,
 * BF_AllowDogFighting = 86,
 * BF_0x07A6E531 = 87,
 * BF_0x34F9317B = 88,
 * BF_0x4240F5A9 = 89,
 * BF_0xEE129DBD = 90,
 * BF_0x053AEAD9 = 91
 * };
 *
 * Hash: 0x9F7794730795E019 | Since: 323
 * @deprecated Use ped.setCombatAttributes(ped1, attributeId, enabled) instead
 */
export declare function setPedCombatAttributes(ped1: number | Ped, attributeId: number, enabled: boolean): void;
/**
 * enum eTargetLossResponseType
 * {
 * TLR_ExitTask,
 * TLR_NeverLoseTarget,
 * TLR_SearchForTarget
 * };
 *
 * Hash: 0x0703B9079823DA4A | Since: 323
 * @deprecated Use ped.setTargetLossResponse(ped1, responseType) instead
 */
export declare function setPedTargetLossResponse(ped1: number | Ped, responseType: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDCCA191DF9980FD7 | Since: 323
 * @deprecated Use ped.isPerformingMeleeAction(ped1) instead
 */
export declare function isPedPerformingMeleeAction(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFD4CCDBCC59941B7 | Since: 323
 * @deprecated Use ped.isPerformingStealthKill(ped1) instead
 */
export declare function isPedPerformingStealthKill(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEBD0EDBA5BE957CF | Since: 323
 * @deprecated Use ped.isPerformingACounterAttack(ped1) instead
 */
export declare function isPedPerformingACounterAttack(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x863B23EFDE9C5DF2 | Since: 323
 * @deprecated Use ped.isBeingStealthKilled(ped1) instead
 */
export declare function isPedBeingStealthKilled(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x18A3E9EE1297FD39 | Since: 323
 * @deprecated Use ped.getMeleeTargetFor(ped1) instead
 */
export declare function getMeleeTargetForPed(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xF9800AA1A771B000 | Since: 323
 * @deprecated Use ped.wasKilledByStealth(ped1) instead
 */
export declare function wasPedKilledByStealth(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7F08E26039C7347C | Since: 323
 * @deprecated Use ped.wasKilledByTakedown(ped1) instead
 */
export declare function wasPedKilledByTakedown(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x61767F73EACEED21 | Since: 323
 * @deprecated Use ped.wasKnockedOut(ped1) instead
 */
export declare function wasPedKnockedOut(ped1: number | Ped): boolean;
/**
 * bit 1 (0x2) = use vehicle
 * bit 15 (0x8000) = force cower
 *
 * Hash: 0x70A2D1137C8ED7C9 | Since: 323
 * @deprecated Use ped.setFleeAttributes(ped1, attributeFlags, enable) instead
 */
export declare function setPedFleeAttributes(ped1: number | Ped, attributeFlags: number, enable: boolean): void;
/**
 * p1: Only "CODE_HUMAN_STAND_COWER" found in the b617d scripts.
 *
 * Hash: 0xA549131166868ED3 | Since: 323
 * @deprecated Use ped.setCowerHash(ped1) instead
 */
export declare function setPedCowerHash(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x2016C603D6B8987C | Since: 323
 * @deprecated Use ped.setSteersAroundDeadBodies(ped1, toggle) instead
 */
export declare function setPedSteersAroundDeadBodies(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x46F2193B3AD1D891 | Since: 323
 * @deprecated Use ped.setSteersAroundPeds(ped1, toggle) instead
 */
export declare function setPedSteersAroundPeds(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1509C089ADC208BF | Since: 323
 * @deprecated Use ped.setSteersAroundObjects(ped1, toggle) instead
 */
export declare function setPedSteersAroundObjects(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEB6FB9D48DDE23EC | Since: 323
 * @deprecated Use ped.setSteersAroundVehicles(ped1, toggle) instead
 */
export declare function setPedSteersAroundVehicles(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA9B61A329BFDCBEA | Since: 323
 * @deprecated Use ped.setIsAvoidedByOthers() instead
 */
export declare function setPedIsAvoidedByOthers(): void;
/**
 * No comment provided
 *
 * Hash: 0x570389D1C3DE3C6B | Since: 323
 * @deprecated Use ped.setIncreasedAvoidanceRadius(ped1) instead
 */
export declare function setPedIncreasedAvoidanceRadius(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x576594E8D64375E2 | Since: 323
 * @deprecated Use ped.setBlocksPathingWhenDead(ped1, toggle) instead
 */
export declare function setPedBlocksPathingWhenDead(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA52D5247A4227E14 | Since: 323
 * @deprecated Use ped.setNoTimeDelayBeforeShot() instead
 */
export declare function setPedNoTimeDelayBeforeShot(): void;
/**
 * No comment provided
 *
 * Hash: 0x083961498679DC9F | Since: 323
 * @deprecated Use ped.isAnyNearPoint(pos, radius) instead
 */
export declare function isAnyPedNearPoint(pos: Vector3, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2208438012482A1A | Since: 323
 * @deprecated Use ped.forceAiAndAnimationUpdate(ped1) instead
 */
export declare function forcePedAiAndAnimationUpdate(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xFCF37A457CB96DC0 | Since: 323
 * @deprecated Use ped.isHeadingTowardsPosition(ped1, pos) instead
 */
export declare function isPedHeadingTowardsPosition(ped1: number | Ped, pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7D7A2E43E74E2EB8 | Since: 323
 * @deprecated Use ped.requestVisibilityTracking(ped1) instead
 */
export declare function requestPedVisibilityTracking(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x2BC338A7B21F4608 | Since: 323
 * @deprecated Use ped.requestVehicleVisibilityTracking(ped1) instead
 */
export declare function requestPedVehicleVisibilityTracking(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xCD018C591F94CB43 | Since: 323
 * @deprecated Use ped.requestRestrictedVehicleVisibilityTracking(ped1) instead
 */
export declare function requestPedRestrictedVehicleVisibilityTracking(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x75BA1CB3B7D40CAF | Since: 323
 * @deprecated Use ped.requestUseSmallBboxVisibilityTracking(ped1) instead
 */
export declare function requestPedUseSmallBboxVisibilityTracking(ped1: number | Ped): void;
/**
 * returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.
 *
 *
 * Target needs to be tracked.. won't work otherwise.
 *
 * Hash: 0x91C8E617F64188AC | Since: 323
 * @deprecated Use ped.isTrackedVisible(ped1) instead
 */
export declare function isTrackedPedVisible(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x511F1A683387C7E2 | Since: 323
 * @deprecated Use ped.getTrackedPixelcount(ped1) instead
 */
export declare function getTrackedPedPixelcount(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x4C5E1F087CD10BB7 | Since: 323
 * @deprecated Use ped.isTracked(ped1) instead
 */
export declare function isPedTracked(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8507BCB710FA6DC0 | Since: 323
 * @deprecated Use ped.hasReceivedEvent(ped1, eventId) instead
 */
export declare function hasPedReceivedEvent(ped1: number | Ped, eventId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6CD5A433374D4CFB | Since: 323
 * @deprecated Use ped.canSeeHatedPed(ped1, ped2) instead
 */
export declare function canPedSeeHatedPed(ped1: number | Ped, ped2: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9C6A6C19B6C0C496 | Since: 323
 * @deprecated Use ped.canShuffleToOrFromTurretSeat(ped1) instead
 */
export declare function canPedShuffleToOrFromTurretSeat(ped1: number | Ped): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x2DFC81C9B9608549 | Since: 944
 * @deprecated Use ped.canShuffleToOrFromExtraSeat(ped1) instead
 */
export declare function canPedShuffleToOrFromExtraSeat(ped1: number | Ped): [boolean, number];
/**
 * no bone= -1
 *
 * boneIds:
 * SKEL_ROOT = 0x0,
 * SKEL_Pelvis = 0x2e28,
 * SKEL_L_Thigh = 0xe39f,
 * SKEL_L_Calf = 0xf9bb,
 * SKEL_L_Foot = 0x3779,
 * SKEL_L_Toe0 = 0x83c,
 * IK_L_Foot = 0xfedd,
 * PH_L_Foot = 0xe175,
 * MH_L_Knee = 0xb3fe,
 * SKEL_R_Thigh = 0xca72,
 * SKEL_R_Calf = 0x9000,
 * SKEL_R_Foot = 0xcc4d,
 * SKEL_R_Toe0 = 0x512d,
 * IK_R_Foot = 0x8aae,
 * PH_R_Foot = 0x60e6,
 * MH_R_Knee = 0x3fcf,
 * RB_L_ThighRoll = 0x5c57,
 * RB_R_ThighRoll = 0x192a,
 * SKEL_Spine_Root = 0xe0fd,
 * SKEL_Spine0 = 0x5c01,
 * SKEL_Spine1 = 0x60f0,
 * SKEL_Spine2 = 0x60f1,
 * SKEL_Spine3 = 0x60f2,
 * SKEL_L_Clavicle = 0xfcd9,
 * SKEL_L_UpperArm = 0xb1c5,
 * SKEL_L_Forearm = 0xeeeb,
 * SKEL_L_Hand = 0x49d9,
 * SKEL_L_Finger00 = 0x67f2,
 * SKEL_L_Finger01 = 0xff9,
 * SKEL_L_Finger02 = 0xffa,
 * SKEL_L_Finger10 = 0x67f3,
 * SKEL_L_Finger11 = 0x1049,
 * SKEL_L_Finger12 = 0x104a,
 * SKEL_L_Finger20 = 0x67f4,
 * SKEL_L_Finger21 = 0x1059,
 * SKEL_L_Finger22 = 0x105a,
 * SKEL_L_Finger30 = 0x67f5,
 * SKEL_L_Finger31 = 0x1029,
 * SKEL_L_Finger32 = 0x102a,
 * SKEL_L_Finger40 = 0x67f6,
 * SKEL_L_Finger41 = 0x1039,
 * SKEL_L_Finger42 = 0x103a,
 * PH_L_Hand = 0xeb95,
 * IK_L_Hand = 0x8cbd,
 * RB_L_ForeArmRoll = 0xee4f,
 * RB_L_ArmRoll = 0x1470,
 * MH_L_Elbow = 0x58b7,
 * SKEL_R_Clavicle = 0x29d2,
 * SKEL_R_UpperArm = 0x9d4d,
 * SKEL_R_Forearm = 0x6e5c,
 * SKEL_R_Hand = 0xdead,
 * SKEL_R_Finger00 = 0xe5f2,
 * SKEL_R_Finger01 = 0xfa10,
 * SKEL_R_Finger02 = 0xfa11,
 * SKEL_R_Finger10 = 0xe5f3,
 * SKEL_R_Finger11 = 0xfa60,
 * SKEL_R_Finger12 = 0xfa61,
 * SKEL_R_Finger20 = 0xe5f4,
 * SKEL_R_Finger21 = 0xfa70,
 * SKEL_R_Finger22 = 0xfa71,
 * SKEL_R_Finger30 = 0xe5f5,
 * SKEL_R_Finger31 = 0xfa40,
 * SKEL_R_Finger32 = 0xfa41,
 * SKEL_R_Finger40 = 0xe5f6,
 * SKEL_R_Finger41 = 0xfa50,
 * SKEL_R_Finger42 = 0xfa51,
 * PH_R_Hand = 0x6f06,
 * IK_R_Hand = 0x188e,
 * RB_R_ForeArmRoll = 0xab22,
 * RB_R_ArmRoll = 0x90ff,
 * MH_R_Elbow = 0xbb0,
 * SKEL_Neck_1 = 0x9995,
 * SKEL_Head = 0x796e,
 * IK_Head = 0x322c,
 * FACIAL_facialRoot = 0xfe2c,
 * FB_L_Brow_Out_000 = 0xe3db,
 * FB_L_Lid_Upper_000 = 0xb2b6,
 * FB_L_Eye_000 = 0x62ac,
 * FB_L_CheekBone_000 = 0x542e,
 * FB_L_Lip_Corner_000 = 0x74ac,
 * FB_R_Lid_Upper_000 = 0xaa10,
 * FB_R_Eye_000 = 0x6b52,
 * FB_R_CheekBone_000 = 0x4b88,
 * FB_R_Brow_Out_000 = 0x54c,
 * FB_R_Lip_Corner_000 = 0x2ba6,
 * FB_Brow_Centre_000 = 0x9149,
 * FB_UpperLipRoot_000 = 0x4ed2,
 * FB_UpperLip_000 = 0xf18f,
 * FB_L_Lip_Top_000 = 0x4f37,
 * FB_R_Lip_Top_000 = 0x4537,
 * FB_Jaw_000 = 0xb4a0,
 * FB_LowerLipRoot_000 = 0x4324,
 * FB_LowerLip_000 = 0x508f,
 * FB_L_Lip_Bot_000 = 0xb93b,
 * FB_R_Lip_Bot_000 = 0xc33b,
 * FB_Tongue_000 = 0xb987,
 * RB_Neck_1 = 0x8b93,
 * IK_Root = 0xdd1c
 *
 * Hash: 0x3F428D08BE5AAE31 | Since: 323
 * @deprecated Use ped.getBoneIndex(ped1, boneId) instead
 */
export declare function getPedBoneIndex(ped1: number | Ped, boneId: number): number;
/**
 * No comment provided
 *
 * Hash: 0x2057EF813397A772 | Since: 323
 * @deprecated Use ped.getRagdollBoneIndex(ped1, bone) instead
 */
export declare function getPedRagdollBoneIndex(ped1: number | Ped, bone: number): number;
/**
 * Values look to be between 0.0 and 1.0
 * From decompiled scripts: 0.0, 0.6, 0.65, 0.8, 1.0
 *
 * You are correct, just looked in IDA it breaks from the function if it's less than 0.0f or greater than 1.0f.
 *
 * Hash: 0xBF29516833893561 | Since: 323
 * @deprecated Use ped.setEnveffScale(ped1, value) instead
 */
export declare function setPedEnveffScale(ped1: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9C14D30395A51A3C | Since: 323
 * @deprecated Use ped.getEnveffScale(ped1) instead
 */
export declare function getPedEnveffScale(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xD2C5AA0C0E8D0F1E | Since: 323
 * @deprecated Use ped.setEnableEnveffScale(ped1, toggle) instead
 */
export declare function setEnablePedEnveffScale(ped1: number | Ped, toggle: boolean): void;
/**
 * In agency_heist3b.c4, its like this 90% of the time:
 *
 * `PED::SET_PED_ENVEFF_CPV_ADD(ped, 0.099);`
 * `PED::SET_PED_ENVEFF_SCALE(ped, 1.0);`
 * `PED::SET_PED_ENVEFF_CPV_ADD(ped, 87, 81, 68);`
 * `PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);`
 *
 * and its like this 10% of the time:
 *
 * `PED::SET_PED_ENVEFF_CPV_ADD(ped, 0.2);`
 * `PED::SET_PED_ENVEFF_SCALE(ped, 0.65);`
 * `PED::SET_PED_ENVEFF_COLOR_MODULATOR(ped, 74, 69, 60);`
 * `PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);`
 *
 * Hash: 0x110F526AB784111F | Since: 323
 * @deprecated Use ped.setEnveffCpvAdd(ped1) instead
 */
export declare function setPedEnveffCpvAdd(ped1: number | Ped): void;
/**
 * Something related to the environmental effects natives.
 * In the "agency_heist3b" script, p1 - p3 are always under 100 - usually they are {87, 81, 68}. If SET_PED_ENVEFF_SCALE is set to 0.65 (instead of the usual 1.0), they use {74, 69, 60}
 *
 * Hash: 0xD69411AA0CEBF9E9 | Since: 323
 * @deprecated Use ped.setEnveffColorModulator(ped1) instead
 */
export declare function setPedEnveffColorModulator(ped1: number | Ped): void;
/**
 * intensity: 0.0f - 1.0f
 *
 * This native sets the emissive intensity for the given ped. It is used for different 'glow' levels on illuminated clothing.
 *
 * Hash: 0x4E90D746056E273D | Since: 944
 * @deprecated Use ped.setEmissiveScale(ped1, intensity) instead
 */
export declare function setPedEmissiveScale(ped1: number | Ped, intensity: number): void;
/**
 * Use 0x4E90D746056E273D to set the illuminated clothing glow intensity for a specific ped.
 * Returns a float between 0.0 and 1.0 representing the current illuminated clothing glow intensity.
 *
 * Hash: 0x1461B28A06717D68 | Since: 944
 * @deprecated Use ped.getEmissiveScale(ped1) instead
 */
export declare function getPedEmissiveScale(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x81AA517FBBA05D39 | Since: 944
 * @deprecated Use ped.isShaderReady(ped1) instead
 */
export declare function isPedShaderReady(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE906EC930F5FE7C8 | Since: 791
 * @deprecated Use ped.setEnableCrewEmblem(ped1, toggle) instead
 */
export declare function setPedEnableCrewEmblem(ped1: number | Ped, toggle: boolean): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0x1216E0BFA72CC703 | Since: 323
 * @deprecated Use ped.requestRagdollBoundsUpdate() instead
 */
export declare function requestRagdollBoundsUpdate(): void;
/**
 * Enable/disable ped shadow (ambient occlusion). https://gfycat.com/thankfulesteemedgecko
 *
 * Hash: 0x2B5AA717A181FB4C | Since: 323
 * @deprecated Use ped.setAoBlobRendering(ped1, toggle) instead
 */
export declare function setPedAoBlobRendering(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB8B52E498014F5B0 | Since: 323
 * @deprecated Use ped.isSheltered(ped1) instead
 */
export declare function isPedSheltered(ped1: number | Ped): boolean;
/**
 * p6 always 2 (but it doesnt seem to matter...)
 *
 * roll and pitch 0
 * yaw to Ped.rotation
 *
 * Hash: 0x8C18E0F9080ADD73 | Since: 323
 * @deprecated Use ped.createSynchronizedScene(pos, roll, pitch, yaw) instead
 */
export declare function createSynchronizedScene(pos: Vector3, roll: number, pitch: number, yaw: number): number;
/**
 * No comment provided
 *
 * Hash: 0x62EC273D00187DCA | Since: 323
 * @deprecated Use ped.createSynchronizedSceneAtMapObject(pos, radius, _object) instead
 */
export declare function createSynchronizedSceneAtMapObject(pos: Vector3, radius: number, _object: number | string): number;
/**
 * Returns true if a synchronized scene is running
 *
 * Hash: 0x25D39B935A038A26 | Since: 323
 * @deprecated Use ped.isSynchronizedSceneRunning(sceneId) instead
 */
export declare function isSynchronizedSceneRunning(sceneId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6ACF6B7225801CD7 | Since: 323
 * @deprecated Use ped.setSynchronizedSceneOrigin(sceneID, pos, roll, pitch, yaw) instead
 */
export declare function setSynchronizedSceneOrigin(sceneID: number, pos: Vector3, roll: number, pitch: number, yaw: number): void;
/**
 * No comment provided
 *
 * Hash: 0x734292F4F0ABF6D0 | Since: 323
 * @deprecated Use ped.setSynchronizedScenePhase(sceneID, phase) instead
 */
export declare function setSynchronizedScenePhase(sceneID: number, phase: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE4A310B1D7FA73CC | Since: 323
 * @deprecated Use ped.getSynchronizedScenePhase(sceneID) instead
 */
export declare function getSynchronizedScenePhase(sceneID: number): number;
/**
 * No comment provided
 *
 * Hash: 0xB6C49F8A5E295A5D | Since: 323
 * @deprecated Use ped.setSynchronizedSceneRate(sceneID, rate) instead
 */
export declare function setSynchronizedSceneRate(sceneID: number, rate: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD80932D577274D40 | Since: 323
 * @deprecated Use ped.getSynchronizedSceneRate(sceneID) instead
 */
export declare function getSynchronizedSceneRate(sceneID: number): number;
/**
 * No comment provided
 *
 * Hash: 0xD9A897A4C6C2974F | Since: 323
 * @deprecated Use ped.setSynchronizedSceneLoo(sceneID, toggle) instead
 */
export declare function setSynchronizedSceneLooped(sceneID: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x62522002E0C391BA | Since: 323
 * @deprecated Use ped.isSynchronizedSceneLoo(sceneID) instead
 */
export declare function isSynchronizedSceneLooped(sceneID: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x394B9CD12435C981 | Since: 323
 * @deprecated Use ped.setSynchronizedSceneHoldLastFrame(sceneID, toggle) instead
 */
export declare function setSynchronizedSceneHoldLastFrame(sceneID: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7F2F4F13AC5257EF | Since: 323
 * @deprecated Use ped.isSynchronizedSceneHoldLastFrame(sceneID) instead
 */
export declare function isSynchronizedSceneHoldLastFrame(sceneID: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x272E4723B56A3B96 | Since: 323
 * @deprecated Use ped.attachSynchronizedSceneToEntity(sceneID, entity, boneIndex) instead
 */
export declare function attachSynchronizedSceneToEntity(sceneID: number, entity: number | Entity, boneIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6D38F1F04CBB37EA | Since: 323
 * @deprecated Use ped.detachSynchronizedScene(sceneID) instead
 */
export declare function detachSynchronizedScene(sceneID: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCD9CC7E200A52A6F | Since: 323
 * @deprecated Use ped.takeOwnershipOfSynchronizedScene(scene) instead
 */
export declare function takeOwnershipOfSynchronizedScene(scene: number): void;
/**
 * Regarding p2, p3 and p4: Most common is 0, 0, 0); followed by 0, 1, 0); and 1, 1, 0); in R* scripts. p4 is very rarely something other than 0.
 *
 * enum eMotionState // 0x92A659FE
 * {
 * MotionState_None = 0xEE717723,
 * MotionState_Idle = 0x9072A713,
 * MotionState_Walk = 0xD827C3DB,
 * MotionState_Run = 0xFFF7E7A4,
 * MotionState_Sprint = 0xBD8817DB,
 * MotionState_Crouch_Idle = 0x43FB099E,
 * MotionState_Crouch_Walk = 0x08C31A98,
 * MotionState_Crouch_Run = 0x3593CF09,
 * MotionState_DoNothing = 0x0EC17E58,
 * MotionState_AnimatedVelocity = 0x551AAC43,
 * MotionState_InVehicle = 0x94D9D58D,
 * MotionState_Aiming = 0x3F67C6AF,
 * MotionState_Diving_Idle = 0x4848CDED,
 * MotionState_Diving_Swim = 0x916E828C,
 * MotionState_Swimming_TreadWater = 0xD1BF11C7,
 * MotionState_Dead = 0x0DBB071C,
 * MotionState_Stealth_Idle = 0x422D7A25,
 * MotionState_Stealth_Walk = 0x042AB6A2,
 * MotionState_Stealth_Run = 0xFB0B79E1,
 * MotionState_Parachuting = 0xBAC0F10B,
 * MotionState_ActionMode_Idle = 0xDA40A0DC,
 * MotionState_ActionMode_Walk = 0xD2905EA7,
 * MotionState_ActionMode_Run = 0x31BADE14,
 * MotionState_Jetpack = 0x535E6A5E
 * };
 *
 * Hash: 0xF28965D04F570DCA | Since: 323
 * @deprecated Use ped.forceMotionState(ped1, motionStateHash) instead
 */
export declare function forcePedMotionState(ped1: number | Ped, motionStateHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF60165E1D2C5370B | Since: 323
 * @deprecated Use ped.getCurrentMoveBlendRatio(ped1) instead
 */
export declare function getPedCurrentMoveBlendRatio(ped1: number | Ped): [boolean, number, number];
/**
 * No comment provided
 *
 * Hash: 0x433083750C5E064A | Since: 323
 * @deprecated Use ped.setMaxMoveBlendRatio(ped1, value) instead
 */
export declare function setPedMaxMoveBlendRatio(ped1: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x01A898D26E2333DD | Since: 323
 * @deprecated Use ped.setMinMoveBlendRatio(ped1, value) instead
 */
export declare function setPedMinMoveBlendRatio(ped1: number | Ped, value: number): void;
/**
 * Min: 0.00
 * Max: 10.00
 *
 * Can be used in combo with fast run cheat.
 *
 * When value is set to 10.00:
 * Sprinting without fast run cheat: 66 m/s
 * Sprinting with fast run cheat: 77 m/s
 *
 * Needs to be looped!
 *
 * Note: According to IDA for the Xbox360 xex, when they check bgt they seem to have the min to 0.0f, but the max set to 1.15f not 10.0f.
 *
 * Hash: 0x085BF80FA50A39D1 | Since: 323
 * @deprecated Use ped.setMoveRateOverride(ped1, value) instead
 */
export declare function setPedMoveRateOverride(ped1: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0B3E35AC043707D9 | Since: 573
 * @deprecated Use ped.setMoveRateInWaterOverride(ped1) instead
 */
export declare function setPedMoveRateInWaterOverride(ped1: number | Ped): void;
/**
 * Checks if the specified sexiness flag is set
 *
 * enum eSexinessFlags
 * {
 * SF_JEER_AT_HOT_PED = 0,
 * SF_HURRIEDFEMALES_SEXY = 1,
 * SF_HOT_PERSON = 2,
 * };
 *
 * Hash: 0x46B05BCAE43856B0 | Since: 323
 * @deprecated Use ped.hasSexinessFlagSet(ped1, sexinessFlag) instead
 */
export declare function pedHasSexinessFlagSet(ped1: number | Ped, sexinessFlag: number): boolean;
/**
 * Returns size of array, passed into the second variable.
 *
 * See below for usage information.
 *
 * This function actually requires a struct, where the first value is the maximum number of elements to return.  Here is a sample of how I was able to get it to work correctly, without yet knowing the struct format.
 *
 * //Setup the array
 * const int numElements = 10;
 * const int arrSize = numElements * 2 + 2;
 * Any veh[arrSize];
 * //0 index is the size of the array
 * veh[0] = numElements;
 *
 * `int count = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), veh);`
 *
 * if (veh != NULL)
 * {
 * //Simple loop to go through results
 * for (int i = 0; i < count; i++)
 * {
 * int offsettedID = i * 2 + 2;
 * //Make sure it exists
 * `if (veh[offsettedID] != NULL && ENTITY::DOES_ENTITY_EXIST(veh[offsettedID]))`
 * {
 * //Do something
 * }
 * }
 * }
 *
 * Hash: 0xCFF869CBFA210D82 | Since: 323
 * @deprecated Use ped.getNearbyVehicles(ped1) instead
 */
export declare function getPedNearbyVehicles(ped1: number | Ped): [number, any];
/**
 * sizeAndPeds - is a pointer to an array. The array is filled with peds found nearby the ped supplied to the first argument.
 * ignore - ped type to ignore
 *
 * Return value is the number of peds found and added to the array passed.
 *
 * -----------------------------------
 *
 * To make this work in most menu bases at least in C++ do it like so,
 *
 * Formatted Example: https://pastebin.com/D8an9wwp
 *
 * -----------------------------------
 *
 * Example: gtaforums.com/topic/789788-function-args-to-pedget-ped-nearby-peds/?p=1067386687
 *
 * Hash: 0x23F8F5FC7E8C4A6B | Since: 323
 * @deprecated Use ped.getNearbyPeds(ped1, ignore) instead
 */
export declare function getPedNearbyPeds(ped1: number | Ped, ignore: number): [number, any];
/**
 * No comment provided
 *
 * Hash: 0x7350823473013C02 | Since: 323
 * @deprecated Use ped.haveAllStreamingRequestsCompleted(ped1) instead
 */
export declare function haveAllStreamingRequestsCompleted(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x00E73468D085F745 | Since: 323
 * @deprecated Use ped.isUsingActionMode(ped1) instead
 */
export declare function isPedUsingActionMode(ped1: number | Ped): boolean;
/**
 * p2 is usually -1 in the scripts. action is either 0 or "DEFAULT_ACTION".
 *
 * Hash: 0xD75ACCF5E0FB5367 | Since: 323
 * @deprecated Use ped.setUsingActionMode(ped1, action) instead
 */
export declare function setPedUsingActionMode(ped1: number | Ped, action: string): void;
/**
 * name: "MP_FEMALE_ACTION" found multiple times in the b617d scripts.
 *
 * Hash: 0x781DE8FA214E87D2 | Since: 323
 * @deprecated Use ped.setMovementModeOverride(ped1, name) instead
 */
export declare function setMovementModeOverride(ped1: number | Ped, name: string): void;
/**
 * Overrides the ped's collision capsule radius for the current tick.
 * Must be called every tick to be effective.
 *
 * Setting this to 0.001 will allow warping through some objects.
 *
 * Hash: 0x364DF566EC833DE2 | Since: 323
 * @deprecated Use ped.setCapsule(ped1, value) instead
 */
export declare function setPedCapsule(ped1: number | Ped, value: number): void;
/**
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
 *
 * Hash: 0x4462658788425076 | Since: 323
 * @deprecated Use ped.registerheadshot(ped1) instead
 */
export declare function registerPedheadshot(ped1: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0xBA8805A1108A2515 | Since: 877
 * @deprecated Use ped.registerheadshotHires(ped1) instead
 */
export declare function registerPedheadshotHires(ped1: number | Ped): number;
/**
 * Similar to REGISTER_PEDHEADSHOT but creates a transparent background instead of black. Example: https://i.imgur.com/iHz8ztn.png
 *
 * Hash: 0x953563CE563143AF | Since: 323
 * @deprecated Use ped.registerheadshotTransparent(ped1) instead
 */
export declare function registerPedheadshotTransparent(ped1: number | Ped): number;
/**
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
 *
 * Hash: 0x96B1361D9B24C2FF | Since: 323
 * @deprecated Use ped.unregisterheadshot(id) instead
 */
export declare function unregisterPedheadshot(id: number): void;
/**
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
 *
 * Hash: 0xA0A9668F158129A2 | Since: 323
 * @deprecated Use ped.isheadshotValid(id) instead
 */
export declare function isPedheadshotValid(id: number): boolean;
/**
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
 *
 * Hash: 0x7085228842B13A67 | Since: 323
 * @deprecated Use ped.isheadshotReady(id) instead
 */
export declare function isPedheadshotReady(id: number): boolean;
/**
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
 *
 * Hash: 0xDB4EACD4AD0A5D6B | Since: 323
 * @deprecated Use ped.getheadshotTxdString(id) instead
 */
export declare function getPedheadshotTxdString(id: number): string;
/**
 * No comment provided
 *
 * Hash: 0xF0DAEF2F545BEE25 | Since: 323
 * @deprecated Use ped.requestheadshotImgUpload(id) instead
 */
export declare function requestPedheadshotImgUpload(id: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5D517B27CF6ECD04 | Since: 323
 * @deprecated Use ped.releaseheadshotImgUpload(id) instead
 */
export declare function releasePedheadshotImgUpload(id: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEBB376779A760AA8 | Since: 323
 * @deprecated Use ped.isheadshotImgUploadAvailable() instead
 */
export declare function isPedheadshotImgUploadAvailable(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x876928DDDFCCC9CD | Since: 323
 * @deprecated Use ped.hasheadshotImgUploadFailed() instead
 */
export declare function hasPedheadshotImgUploadFailed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE8A169E666CBC541 | Since: 323
 * @deprecated Use ped.hasheadshotImgUploadSucceeded() instead
 */
export declare function hasPedheadshotImgUploadSucceeded(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC1F6EBF9A3D55538 | Since: 323
 * @deprecated Use ped.setHeatscaleOverride(ped1, heatScale) instead
 */
export declare function setPedHeatscaleOverride(ped1: number | Ped, heatScale: number): void;
/**
 * No comment provided
 *
 * Hash: 0x600048C60D5C2C51 | Since: 323
 * @deprecated Use ped.disableHeatscaleOverride(ped1) instead
 */
export declare function disablePedHeatscaleOverride(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x2DF9038C90AD5264 | Since: 323
 * @deprecated Use ped.spawnpointsStartSearch(interiorFlags, scale, duration) instead
 */
export declare function spawnpointsStartSearch(interiorFlags: number, scale: number, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB2AFF10216DEFA2F | Since: 323
 * @deprecated Use ped.spawnpointsStartSearchInAngledArea(x1, y1, z1, x2, y2, z2, width, interiorFlags, scale, duration) instead
 */
export declare function spawnpointsStartSearchInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, interiorFlags: number, scale: number, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFEE4A5459472A9F8 | Since: 323
 * @deprecated Use ped.spawnpointsCancelSearch() instead
 */
export declare function spawnpointsCancelSearch(): void;
/**
 * No comment provided
 *
 * Hash: 0x3C67506996001F5E | Since: 323
 * @deprecated Use ped.spawnpointsIsSearchActive() instead
 */
export declare function spawnpointsIsSearchActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA586FBEB32A53DBB | Since: 323
 * @deprecated Use ped.spawnpointsIsSearchComplete() instead
 */
export declare function spawnpointsIsSearchComplete(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF445DE8DA80A1792 | Since: 323
 * @deprecated Use ped.spawnpointsIsSearchFailed() instead
 */
export declare function spawnpointsIsSearchFailed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA635C11B8C44AFC2 | Since: 323
 * @deprecated Use ped.spawnpointsGetNumSearchResults() instead
 */
export declare function spawnpointsGetNumSearchResults(): number;
/**
 * No comment provided
 *
 * Hash: 0x280C7E3AC7F56E90 | Since: 323
 * @deprecated Use ped.spawnpointsGetSearchResult(randomInt) instead
 */
export declare function spawnpointsGetSearchResult(randomInt: number): [number, number, number];
/**
 * No comment provided
 *
 * Hash: 0xB782F8238512BAD5 | Since: 323
 * @deprecated Use ped.spawnpointsGetSearchResultFlags() instead
 */
export declare function spawnpointsGetSearchResultFlags(): number;
/**
 * No comment provided
 *
 * Hash: 0xC32779C16FCEECD9 | Since: 323
 * @deprecated Use ped.setIkTarget(ped1, ikIndex, entityLookAt, boneLookAt, offsetX, offsetY, offsetZ, blendInDuration, blendOutDuration) instead
 */
export declare function setIkTarget(ped1: number | Ped, ikIndex: number, entityLookAt: number | Entity, boneLookAt: number, offsetX: number, offsetY: number, offsetZ: number, blendInDuration: number, blendOutDuration: number): void;
/**
 * No comment provided
 *
 * Hash: 0xED3C76ADFA6D07C4 | Since: 323
 * @deprecated Use ped.forceInstantLegIkSetup(ped1) instead
 */
export declare function forceInstantLegIkSetup(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x290E2780BB7AA598 | Since: 323
 * @deprecated Use ped.requestActionModeAsset(asset) instead
 */
export declare function requestActionModeAsset(asset: string): void;
/**
 * No comment provided
 *
 * Hash: 0xE4B5F4BF2CB24E65 | Since: 323
 * @deprecated Use ped.hasActionModeAssetLoaded(asset) instead
 */
export declare function hasActionModeAssetLoaded(asset: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x13E940F88470FA51 | Since: 323
 * @deprecated Use ped.removeActionModeAsset(asset) instead
 */
export declare function removeActionModeAsset(asset: string): void;
/**
 * No comment provided
 *
 * Hash: 0x2A0A62FCDEE16D4F | Since: 323
 * @deprecated Use ped.requestStealthModeAsset(asset) instead
 */
export declare function requestStealthModeAsset(asset: string): void;
/**
 * No comment provided
 *
 * Hash: 0xE977FC5B08AF3441 | Since: 323
 * @deprecated Use ped.hasStealthModeAssetLoaded(asset) instead
 */
export declare function hasStealthModeAssetLoaded(asset: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9219857D21F0E842 | Since: 323
 * @deprecated Use ped.removeStealthModeAsset(asset) instead
 */
export declare function removeStealthModeAsset(asset: string): void;
/**
 * No comment provided
 *
 * Hash: 0xDC2C5C242AAC342B | Since: 323
 * @deprecated Use ped.setLodMultiplier(ped1, multiplier) instead
 */
export declare function setPedLodMultiplier(ped1: number | Ped, multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE861D0B05C7662B8 | Since: 323
 * @deprecated Use ped.setCanLosePropsOnDamage(ped1, toggle) instead
 */
export declare function setPedCanLosePropsOnDamage(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x129466ED55140F8D | Since: 323
 * @deprecated Use ped.setForceFootstepUpdate(ped1, toggle) instead
 */
export declare function setForceFootstepUpdate(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCB968B53FC7F916D | Since: 323
 * @deprecated Use ped.setForceStepType(ped1, _type) instead
 */
export declare function setForceStepType(ped1: number | Ped, _type: number): void;
/**
 * No comment provided
 *
 * Hash: 0x68772DB2B2526F9F | Since: 323
 * @deprecated Use ped.isAnyHostileNearPoint(ped1, pos, radius) instead
 */
export declare function isAnyHostilePedNearPoint(ped1: number | Ped, pos: Vector3, radius: number): boolean;
/**
 * Toggles config flag CPED_CONFIG_FLAG_CanPlayInCarIdles.
 *
 * Hash: 0x820E9892A77E97CD | Since: 877
 * @deprecated Use ped.setCanPlayInCarIdles(ped1, toggle) instead
 */
export declare function setPedCanPlayInCarIdles(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x06087579E7AA85A9 | Since: 323
 * @deprecated Use ped.isTargetInPerceptionArea(ped1, targetPed) instead
 */
export declare function isTargetPedInPerceptionArea(ped1: number | Ped, targetPed: number | Ped): boolean;
/**
 * Min and max are usually 100.0 and 200.0
 *
 * Hash: 0xD8C3BE3EE94CAF2D | Since: 323
 * @deprecated Use ped.setPopControlSphereThisFrame(pos, min, max) instead
 */
export declare function setPopControlSphereThisFrame(pos: Vector3, min: number, max: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD33DAA36272177C4 | Since: 323
 * @deprecated Use ped.forceZeroMassInCollisions(ped1) instead
 */
export declare function forceZeroMassInCollisions(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x711794453CFD692B | Since: 463
 * @deprecated Use ped.setDisableHighFallDeath(ped1, toggle) instead
 */
export declare function setDisableHighFallDeath(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x83A169EABCDB10A2 | Since: 323
 * @deprecated Use ped.setPhonePaletteIdx() instead
 */
export declare function setPedPhonePaletteIdx(): void;
/**
 * No comment provided
 *
 * Hash: 0x288DF530C92DAD6F | Since: 323
 * @deprecated Use ped.setSteerBias(ped1, value) instead
 */
export declare function setPedSteerBias(ped1: number | Ped, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3795688A307E1EB6 | Since: 505
 * @deprecated Use ped.isSwitchingWeapon(Ped1) instead
 */
export declare function isPedSwitchingWeapon(Ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0F62619393661D6E | Since: 877
 * @deprecated Use ped.setTreatedAsFriendly() instead
 */
export declare function setPedTreatedAsFriendly(): void;
/**
 * No comment provided
 *
 * Hash: 0xDFE68C4B787E1BFB | Since: 1180
 * @deprecated Use ped.setDisableMapCollision(ped1) instead
 */
export declare function setDisablePedMapCollision(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xEE2476B9EE4A094F | Since: 1493
 * @deprecated Use ped.enableMpLight(ped1, toggle) instead
 */
export declare function enableMpLight(ped1: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x88274C11CF0D866D | Since: 1493
 * @deprecated Use ped.getMpLightEnabled(ped1) instead
 */
export declare function getMpLightEnabled(ped1: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x637822DC2AFEEBF8 | Since: 1493
 * @deprecated Use ped.clearCoverPointFor(ped1) instead
 */
export declare function clearCoverPointForPed(ped1: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xFAB944D4D481ACCB | Since: 1734
 * @deprecated Use ped.setAllowStuntJumpCamera(ped1, toggle) instead
 */
export declare function setAllowStuntJumpCamera(ped1: number | Ped, toggle: boolean): void;
/**
 * Creates a rope at the specific position, that extends in the specified direction when not attached to any entities.
 * __
 *
 * Add_Rope(pos.x,pos.y,pos.z,0.0,0.0,0.0,20.0,4,20.0,1.0,0.0,false,false,false,5.0,false,NULL)
 *
 * When attached, Position<vector> does not matter
 * When attached, Angle<vector> does not matter
 *
 * Rope Type:
 * 4 and bellow is a thick rope
 * 5 and up are small metal wires
 * 0 crashes the game
 *
 * Max_length - Rope is forced to this length, generally best to keep this the same as your rope length.
 *
 * windingSpeed - Speed the Rope is being winded, using native START_ROPE_WINDING. Set positive for winding and negative for unwinding.
 *
 * Rigid - If max length is zero, and this is set to false the rope will become rigid (it will force a specific distance, what ever length is, between the objects).
 *
 * breakable - Whether or not shooting the rope will break it.
 *
 * unkPtr - unknown ptr, always 0 in orig scripts
 * __
 *
 * Lengths can be calculated like so:
 *
 * float distance = abs(x1 - x2) + abs(y1 - y2) + abs(z1 - z2); // Rope length
 *
 *
 * NOTES:
 *
 * Rope does NOT interact with anything you attach it to, in some cases it make interact with the world AFTER it breaks (seems to occur if you set the type to -1).
 *
 * Rope will sometimes contract and fall to the ground like you'd expect it to, but since it doesn't interact with the world the effect is just jaring.
 *
 * Hash: 0xE832D760399EB220 | Since: 323
 * @deprecated Use physics.addRope(pos, rot, length, ropeType, maxLength, minLength, windingSpeed, rigid, breakWhenShot) instead
 */
export declare function addRope(pos: Vector3, rot: Vector3, length: number, ropeType: number, maxLength: number, minLength: number, windingSpeed: number, rigid: boolean, breakWhenShot: boolean): [number, any];
/**
 * No comment provided
 *
 * Hash: 0x52B4829281364649 | Since: 323
 * @deprecated Use physics.deleteRope(ropeId) instead
 */
export declare function deleteRope(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAA5D6B1888E4DB20 | Since: 323
 * @deprecated Use physics.deleteChildRope(ropeId) instead
 */
export declare function deleteChildRope(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFD5448BE3111ED96 | Since: 323
 * @deprecated Use physics.doesRopeExist() instead
 */
export declare function doesRopeExist(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xA1AE736541B0FCA3 | Since: 1868
 * @deprecated Use physics.ropeDrawEnabled() instead
 */
export declare function ropeDrawEnabled(): number;
/**
 * No comment provided
 *
 * Hash: 0xF159A63806BB5BA8 | Since: 323
 * @deprecated Use physics.ropeDrawShadowEnabled(toggle) instead
 */
export declare function ropeDrawShadowEnabled(toggle: boolean): number;
/**
 * Rope presets can be found in the gamefiles. One example is "ropeFamily3", it is NOT a hash but rather a string.
 *
 * Hash: 0xCBB203C04D1ABD27 | Since: 323
 * @deprecated Use physics.loadRopeData(ropeId, rope_preset) instead
 */
export declare function loadRopeData(ropeId: number, rope_preset: string): void;
/**
 * No comment provided
 *
 * Hash: 0x2B320CF14146B69A | Since: 323
 * @deprecated Use physics.pinRopeVertex(ropeId, vertex, pos) instead
 */
export declare function pinRopeVertex(ropeId: number, vertex: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x4B5AE2EEE4A8F180 | Since: 323
 * @deprecated Use physics.unpinRopeVertex(ropeId, vertex) instead
 */
export declare function unpinRopeVertex(ropeId: number, vertex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3655F544CD30F0B5 | Since: 323
 * @deprecated Use physics.getRopeVertexCount(ropeId) instead
 */
export declare function getRopeVertexCount(ropeId: number): number;
/**
 * Attaches entity 1 to entity 2.
 *
 * Hash: 0x3D95EC8B6D940AC3 | Since: 323
 * @deprecated Use physics.attachEntitiesToRope(ropeId, ent1, ent2, ent1_x, ent1_y, ent1_z, ent2_x, ent2_y, ent2_z, length) instead
 */
export declare function attachEntitiesToRope(ropeId: number, ent1: number | Entity, ent2: number | Entity, ent1_x: number, ent1_y: number, ent1_z: number, ent2_x: number, ent2_y: number, ent2_z: number, length: number): [any, any];
/**
 * The position supplied can be anywhere, and the entity should anchor relative to that point from it's origin.
 *
 * Hash: 0x4B490A6832559A65 | Since: 323
 * @deprecated Use physics.attachRopeToEntity(ropeId, entity, pos) instead
 */
export declare function attachRopeToEntity(ropeId: number, entity: number | Entity, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xBCF3026912A8647D | Since: 323
 * @deprecated Use physics.detachRopeFromEntity(ropeId, entity) instead
 */
export declare function detachRopeFromEntity(ropeId: number, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xC8D667EE52114ABA | Since: 323
 * @deprecated Use physics.ropeSetUpdatePinverts(ropeId) instead
 */
export declare function ropeSetUpdatePinverts(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDC57A637A20006ED | Since: 323
 * @deprecated Use physics.ropeSetUpdateOrder(ropeId) instead
 */
export declare function ropeSetUpdateOrder(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x36CCB9BE67B970FD | Since: 323
 * @deprecated Use physics.ropeSetSmoothReelin(ropeId) instead
 */
export declare function ropeSetSmoothReelin(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x84DE3B5FB3E666F0 | Since: 323
 * @deprecated Use physics.isRopeAttachedAtBothEnds() instead
 */
export declare function isRopeAttachedAtBothEnds(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x21BB0FBD3E217C2D | Since: 323
 * @deprecated Use physics.getRopeLastVertexCoord(ropeId) instead
 */
export declare function getRopeLastVertexCoord(ropeId: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xEA61CA8E80F09E4D | Since: 323
 * @deprecated Use physics.getRopeVertexCoord(ropeId, vertex) instead
 */
export declare function getRopeVertexCoord(ropeId: number, vertex: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x1461C72C889E343E | Since: 323
 * @deprecated Use physics.startRopeWinding(ropeId) instead
 */
export declare function startRopeWinding(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCB2D4AB84A19AA7C | Since: 323
 * @deprecated Use physics.stopRopeWinding(ropeId) instead
 */
export declare function stopRopeWinding(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x538D1179EC1AA9A9 | Since: 323
 * @deprecated Use physics.startRopeUnwindingFront(ropeId) instead
 */
export declare function startRopeUnwindingFront(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFFF3A50779EFBBB3 | Since: 323
 * @deprecated Use physics.stopRopeUnwindingFront(ropeId) instead
 */
export declare function stopRopeUnwindingFront(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5389D48EFA2F079A | Since: 323
 * @deprecated Use physics.ropeConvertToSimple(ropeId) instead
 */
export declare function ropeConvertToSimple(ropeId: number): void;
/**
 * Loads rope textures for all ropes in the current scene.
 *
 * Hash: 0x9B9039DBF2D258C1 | Since: 323
 * @deprecated Use physics.ropeLoadTextures() instead
 */
export declare function ropeLoadTextures(): void;
/**
 * No comment provided
 *
 * Hash: 0xF2D0E6A75CC05597 | Since: 323
 * @deprecated Use physics.ropeAreTexturesLoaded() instead
 */
export declare function ropeAreTexturesLoaded(): boolean;
/**
 * Unloads rope textures for all ropes in the current scene.
 *
 * Hash: 0x6CE36C35C1AC8163 | Since: 323
 * @deprecated Use physics.ropeUnloadTextures() instead
 */
export declare function ropeUnloadTextures(): void;
/**
 * No comment provided
 *
 * Hash: 0x271C9D3ACA5D6409 | Since: 323
 * @deprecated Use physics.doesScriptOwnRope(ropeId) instead
 */
export declare function doesScriptOwnRope(ropeId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBC0CE682D4D05650 | Since: 323
 * @deprecated Use physics.ropeAttachVirtualBoundGeom(ropeId) instead
 */
export declare function ropeAttachVirtualBoundGeom(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB1B6216CA2E7B55E | Since: 323
 * @deprecated Use physics.ropeChangeScriptOwner() instead
 */
export declare function ropeChangeScriptOwner(): void;
/**
 * No comment provided
 *
 * Hash: 0xB743F735C03D7810 | Since: 323
 * @deprecated Use physics.ropeSetRefframevelocityColliderorder(ropeId) instead
 */
export declare function ropeSetRefframevelocityColliderorder(ropeId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x73040398DFF9A4A6 | Since: 323
 * @deprecated Use physics.ropeGetDistanceBetweenEnds(ropeId) instead
 */
export declare function ropeGetDistanceBetweenEnds(ropeId: number): number;
/**
 * Forces a rope to a certain length.
 *
 * Hash: 0xD009F759A723DB1B | Since: 323
 * @deprecated Use physics.ropeForceLength(ropeId, length) instead
 */
export declare function ropeForceLength(ropeId: number, length: number): void;
/**
 * Reset a rope to a certain length.
 *
 * Hash: 0xC16DE94D9BEA14A0 | Since: 323
 * @deprecated Use physics.ropeResetLength(ropeId, length) instead
 */
export declare function ropeResetLength(ropeId: number, length: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE37F721824571784 | Since: 323
 * @deprecated Use physics.applyImpulseToCloth(pos, vecX, vecY, vecZ, impulse) instead
 */
export declare function applyImpulseToCloth(pos: Vector3, vecX: number, vecY: number, vecZ: number, impulse: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEEA3B200A6FEB65B | Since: 323
 * @deprecated Use physics.setDamping(entity, vertex, value) instead
 */
export declare function setDamping(entity: number | Entity, vertex: number, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8C520A929415BCD2 | Since: 3407
 * @deprecated Use physics.getDamping(entity, _type) instead
 */
export declare function getDamping(entity: number | Entity, _type: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x710311ADF0E20730 | Since: 323
 * @deprecated Use physics.activate(entity) instead
 */
export declare function activatePhysics(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0xD8FA3908D7B86904 | Since: 323
 * @deprecated Use physics.setCgoffset(entity, pos) instead
 */
export declare function setCgoffset(entity: number | Entity, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x8214A4B5A7A33612 | Since: 323
 * @deprecated Use physics.getCgoffset(entity) instead
 */
export declare function getCgoffset(entity: number | Entity): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xBE520D9761FF811F | Since: 323
 * @deprecated Use physics.setCgAtBoundcenter(entity) instead
 */
export declare function setCgAtBoundcenter(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x2E648D16F6E308F3 | Since: 323
 * @deprecated Use physics.breakEntityGlass(entity) instead
 */
export declare function breakEntityGlass(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x0C112765300C7E1E | Since: 505
 * @deprecated Use physics.getIsEntityAFrag(_object) instead
 */
export declare function getIsEntityAFrag(_object: number | Object): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5CEC1A84620E7D5B | Since: 323
 * @deprecated Use physics.setDisableBreaking(_object, toggle) instead
 */
export declare function setDisableBreaking(_object: number | Object, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCC6E963682533882 | Since: 323
 * @deprecated Use physics.resetDisableBreaking(_object) instead
 */
export declare function resetDisableBreaking(_object: number | Object): void;
/**
 * No comment provided
 *
 * Hash: 0x01BA3AED21C16CFB | Since: 323
 * @deprecated Use physics.setDisableFragDamage(_object, toggle) instead
 */
export declare function setDisableFragDamage(_object: number | Object, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x15F944730C832252 | Since: 463
 * @deprecated Use physics.setUseKinematic(entity, toggle) instead
 */
export declare function setUseKinematicPhysics(entity: number | Entity, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9EBD751E5787BAF2 | Since: 791
 * @deprecated Use physics.setInStuntMode() instead
 */
export declare function setInStuntMode(): void;
/**
 * Related to the lower-end of a vehicles fTractionCurve, e.g., from standing starts and acceleration from low/zero speeds.
 *
 * Hash: 0xAA6A6098851C396F | Since: 1604
 * @deprecated Use physics.setInArenaMode(toggle) instead
 */
export declare function setInArenaMode(toggle: boolean): void;
/**
 * Gets the ped for a specified player index.
 *
 * Hash: 0x43A66C31C68491C0 | Since: 323
 * @deprecated Use player.getPed(player1) instead
 */
export declare function getPlayerPed(player1: number | string | Player): number;
/**
 * `Does the same like PLAYER::GET_PLAYER_PED`
 *
 * Hash: 0x50FAC3A3E030A6E1 | Since: 323
 * @deprecated Use player.getPedScriptIndex(player1) instead
 */
export declare function getPlayerPedScriptIndex(player1: number | string | Player): number;
/**
 * Set the model for a specific Player. Be aware that this will destroy the current Ped for the Player and create a new one, any reference to the old ped should be reset
 * Make sure to request the model first and wait until it has loaded.
 *
 * Hash: 0x00A1CADD00108836 | Since: 323
 * @deprecated Use player.setModel(player1, model) instead
 */
export declare function setPlayerModel(player1: number | string | Player, model: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x048189FAC643DEEE | Since: 323
 * @deprecated Use player.changePed(player1, ped, resetDamage) instead
 */
export declare function changePlayerPed(player1: number | string | Player, ped: number | Ped, resetDamage: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE902EF951DCE178F | Since: 323
 * @deprecated Use player.getRgbColour(player1) instead
 */
export declare function getPlayerRgbColour(player1: number | string | Player): [number, number, number];
/**
 * Gets the number of players in the current session.
 * If not multiplayer, always returns 1.
 *
 * Hash: 0x407C7F91DDB46C16 | Since: 323
 * @deprecated Use player.getNumberOfs() instead
 */
export declare function getNumberOfPlayers(): number;
/**
 * Gets the player's team.
 * Does nothing in singleplayer.
 *
 * Hash: 0x37039302F4E0A008 | Since: 323
 * @deprecated Use player.getTeam(player1) instead
 */
export declare function getPlayerTeam(player1: number | string | Player): number;
/**
 * Set player team on deathmatch and last team standing..
 *
 * Hash: 0x0299FA38396A4940 | Since: 323
 * @deprecated Use player.setTeam(player1, team) instead
 */
export declare function setPlayerTeam(player1: number | string | Player, team: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1FC200409F10E6F1 | Since: 1180
 * @deprecated Use player.getNumberOfsInTeam(team) instead
 */
export declare function getNumberOfPlayersInTeam(team: number): number;
/**
 * No comment provided
 *
 * Hash: 0x6D0DE6A7B5DA71F8 | Since: 323
 * @deprecated Use player.getName(player1) instead
 */
export declare function getPlayerName(player1: number | string | Player): string;
/**
 * Remnant from GTA IV. Does nothing in GTA V.
 *
 * Hash: 0x085DEB493BE80812 | Since: 323
 * @deprecated Use player.getWantedLevelRadius(player1) instead
 */
export declare function getWantedLevelRadius(player1: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x0C92BA89F1AF26F8 | Since: 323
 * @deprecated Use player.getWantedCentrePosition(player1) instead
 */
export declare function getPlayerWantedCentrePosition(player1: number | string | Player): Vector3;
/**
 * # Predominant call signatures
 * `PLAYER::SET_PLAYER_WANTED_CENTRE_POSITION(PLAYER::PLAYER_ID(), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1));`
 *
 * # Parameter value ranges
 * `P0: PLAYER::PLAYER_ID()`
 * `P1: ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)`
 * P2: Not set by any call
 *
 * Hash: 0x520E541A97A13354 | Since: 323
 * @deprecated Use player.setWantedCentrePosition(player1) instead
 */
export declare function setPlayerWantedCentrePosition(player1: number | string | Player): Vector3;
/**
 * Drft
 *
 * Hash: 0xFDD179EAF45B556C | Since: 323
 * @deprecated Use player.getWantedLevelThreshold(wantedLevel) instead
 */
export declare function getWantedLevelThreshold(wantedLevel: number): number;
/**
 * Call SET_PLAYER_WANTED_LEVEL_NOW for immediate effect
 *
 * wantedLevel is an integer value representing 0 to 5 stars even though the game supports the 6th wanted level but no police will appear since no definitions are present for it in the game files
 *
 * disableNoMission-  Disables When Off Mission- appears to always be false
 *
 *
 * Hash: 0x39FF19C64EF7DA5B | Since: 323
 * @deprecated Use player.setWantedLevel(player1, wantedLevel, disableNoMission) instead
 */
export declare function setPlayerWantedLevel(player1: number | string | Player, wantedLevel: number, disableNoMission: boolean): void;
/**
 * p2 is always false in R* scripts
 *
 * Hash: 0x340E61DE7F471565 | Since: 323
 * @deprecated Use player.setWantedLevelNoDrop(player1, wantedLevel) instead
 */
export declare function setPlayerWantedLevelNoDrop(player1: number | string | Player, wantedLevel: number): void;
/**
 * Forces any pending wanted level to be applied to the specified player immediately.
 *
 * Call SET_PLAYER_WANTED_LEVEL with the desired wanted level, followed by SET_PLAYER_WANTED_LEVEL_NOW.
 *
 * Second parameter is unknown (always false).
 *
 * Hash: 0xE0A7D1E497FFCD6F | Since: 323
 * @deprecated Use player.setWantedLevelNow(player1) instead
 */
export declare function setPlayerWantedLevelNow(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xAFAF86043E5874E9 | Since: 323
 * @deprecated Use player.areFlashingStarsAboutToDrop(player1) instead
 */
export declare function arePlayerFlashingStarsAboutToDrop(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0A6EB355EE14A2DB | Since: 323
 * @deprecated Use player.areStarsGreyedOut(player1) instead
 */
export declare function arePlayerStarsGreyedOut(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7E07C78925D5FD96 | Since: 372
 * @deprecated Use player.isWantedAndHasBeenSeenByCops(player1) instead
 */
export declare function isWantedAndHasBeenSeenByCops(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDB172424876553F4 | Since: 323
 * @deprecated Use player.setDispatchCopsFor(player1, toggle) instead
 */
export declare function setDispatchCopsForPlayer(player1: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x238DB2A2C23EE9EF | Since: 323
 * @deprecated Use player.isWantedLevelGreater(player1, wantedLevel) instead
 */
export declare function isPlayerWantedLevelGreater(player1: number | string | Player, wantedLevel: number): boolean;
/**
 * `This executes at the same as speed as PLAYER::SET_PLAYER_WANTED_LEVEL(player, 0, false);`
 *
 * `PLAYER::GET_PLAYER_WANTED_LEVEL(player); executes in less than half the time. Which means that it's worth first checking if the wanted level needs to be cleared before clearing. However, this is mostly about good code practice and can important in other situations. The difference in time in this example is negligible.`
 *
 * Hash: 0xB302540597885499 | Since: 323
 * @deprecated Use player.clearWantedLevel(player1) instead
 */
export declare function clearPlayerWantedLevel(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x424D4687FA1E5652 | Since: 323
 * @deprecated Use player.isDead(player1) instead
 */
export declare function isPlayerDead(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFA1E2BF8B10598F9 | Since: 323
 * @deprecated Use player.isPressingHorn(player1) instead
 */
export declare function isPlayerPressingHorn(player1: number | string | Player): boolean;
/**
 * Flags:
 * SPC_AMBIENT_SCRIPT = (1 << 1),
 * SPC_CLEAR_TASKS = (1 << 2),
 * SPC_REMOVE_FIRES = (1 << 3),
 * SPC_REMOVE_EXPLOSIONS = (1 << 4),
 * SPC_REMOVE_PROJECTILES = (1 << 5),
 * SPC_DEACTIVATE_GADGETS = (1 << 6),
 * SPC_REENABLE_CONTROL_ON_DEATH = (1 << 7),
 * SPC_LEAVE_CAMERA_CONTROL_ON = (1 << 8),
 * SPC_ALLOW_PLAYER_DAMAGE = (1 << 9),
 * SPC_DONT_STOP_OTHER_CARS_AROUND_PLAYER = (1 << 10),
 * SPC_PREVENT_EVERYBODY_BACKOFF = (1 << 11),
 * SPC_ALLOW_PAD_SHAKE = (1 << 12)
 *
 * See: https://alloc8or.re/gta5/doc/enums/eSetPlayerControlFlag.txt
 *
 * Hash: 0x8D32347D6D4C40A2 | Since: 323
 * @deprecated Use player.setControl(player1, bHasControl, flags) instead
 */
export declare function setPlayerControl(player1: number | string | Player, bHasControl: boolean, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE28E54788CE8F12D | Since: 323
 * @deprecated Use player.getWantedLevel(player1) instead
 */
export declare function getPlayerWantedLevel(player1: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xAA5F02DB48D704B9 | Since: 323
 * @deprecated Use player.setMaxWantedLevel(maxWantedLevel) instead
 */
export declare function setMaxWantedLevel(maxWantedLevel: number): void;
/**
 * If toggle is set to false:
 * The police won't be shown on the (mini)map
 *
 * If toggle is set to true:
 * The police will be shown on the (mini)map
 *
 * Hash: 0x43286D561B72B8BF | Since: 323
 * @deprecated Use player.setPoliceRadarBlips(toggle) instead
 */
export declare function setPoliceRadarBlips(toggle: boolean): void;
/**
 * The player will be ignored by the police if toggle is set to true
 *
 * Hash: 0x32C62AA929C2DA6A | Since: 323
 * @deprecated Use player.setPoliceIgnore(player1, toggle) instead
 */
export declare function setPoliceIgnorePlayer(player1: number | string | Player, toggle: boolean): void;
/**
 * Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.
 *
 * Hash: 0x5E9564D8246B909A | Since: 323
 * @deprecated Use player.isPlaying(player1) instead
 */
export declare function isPlayerPlaying(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8EEDA153AD141BA4 | Since: 323
 * @deprecated Use player.setEveryoneIgnore(player1, toggle) instead
 */
export declare function setEveryoneIgnorePlayer(player1: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x056E0FE8534C2949 | Since: 323
 * @deprecated Use player.setAllRandomPedsFlee(player1, toggle) instead
 */
export declare function setAllRandomPedsFlee(player1: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x471D2FF42A94B4F2 | Since: 323
 * @deprecated Use player.setAllRandomPedsFleeThisFrame(player1) instead
 */
export declare function setAllRandomPedsFleeThisFrame(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xDE45D1A1EF45EE61 | Since: 323
 * @deprecated Use player.setAllNeutralRandomPedsFlee(player1, toggle) instead
 */
export declare function setAllNeutralRandomPedsFlee(player1: number | string | Player, toggle: boolean): void;
/**
 * - This is called after SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME
 *
 *
 * Hash: 0xC3376F42B1FACCC6 | Since: 323
 * @deprecated Use player.setAllNeutralRandomPedsFleeThisFrame(player1) instead
 */
export declare function setAllNeutralRandomPedsFleeThisFrame(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xFAC75988A7D078D3 | Since: 463
 * @deprecated Use player.setLawPedsCanAttackNonWantedThisFrame(player1) instead
 */
export declare function setLawPedsCanAttackNonWantedPlayerThisFrame(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x596976B02B6B5700 | Since: 323
 * @deprecated Use player.setIgnoreLowPriorityShockingEvents(player1, toggle) instead
 */
export declare function setIgnoreLowPriorityShockingEvents(player1: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x020E5F00CDA207BA | Since: 323
 * @deprecated Use player.setWantedLevelMultiplier(multiplier) instead
 */
export declare function setWantedLevelMultiplier(multiplier: number): void;
/**
 * Max value is 1.0
 *
 * Hash: 0x9B0BB33B04405E7A | Since: 323
 * @deprecated Use player.setWantedLevelDifficulty(player1, difficulty) instead
 */
export declare function setWantedLevelDifficulty(player1: number | string | Player, difficulty: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB9D0DD990DC141DD | Since: 323
 * @deprecated Use player.resetWantedLevelDifficulty(player1) instead
 */
export declare function resetWantedLevelDifficulty(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xA72200F51875FEA4 | Since: 2372
 * @deprecated Use player.getWantedLevelTimeToEscape() instead
 */
export declare function getWantedLevelTimeToEscape(): number;
/**
 * No comment provided
 *
 * Hash: 0x49B856B1360C47C7 | Since: 2060
 * @deprecated Use player.setWantedLevelHiddenEscapeTime(player1, wantedLevel, lossTime) instead
 */
export declare function setWantedLevelHiddenEscapeTime(player1: number | string | Player, wantedLevel: number, lossTime: number): void;
/**
 * No comment provided
 *
 * Hash: 0x823EC8E82BA45986 | Since: 2060
 * @deprecated Use player.resetWantedLevelHiddenEscapeTime(player1) instead
 */
export declare function resetWantedLevelHiddenEscapeTime(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xBF9BD71691857E48 | Since: 323
 * @deprecated Use player.startFiringAmnesty(duration) instead
 */
export declare function startFiringAmnesty(duration: number): void;
/**
 * `PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(), 37, PLAYER::GET_WANTED_LEVEL_THRESHOLD(1));`
 *
 * From am_armybase.ysc.c4:
 *
 * `PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(4), 36, PLAYER::GET_WANTED_LEVEL_THRESHOLD(4));`
 *
 * -----
 *
 * This was taken from the GTAV.exe v1.334. The function is called sub_140592CE8. For a full decompilation of the function, see here: https://pastebin.com/09qSMsN7
 *
 * -----
 * crimeType:
 * 1: Firearms possession
 * 2: Person running a red light ("5-0-5")
 * 3: Reckless driver
 * 4: Speeding vehicle (a "5-10")
 * 5: Traffic violation (a "5-0-5")
 * 6: Motorcycle rider without a helmet
 * 7: Vehicle theft (a "5-0-3")
 * 8: Grand Theft Auto
 * 9: ???
 * 10: ???
 * 11: Assault on a civilian (a "2-40")
 * 12: Assault on an officer
 * 13: Assault with a deadly weapon (a "2-45")
 * 14: Officer shot (a "2-45")
 * 15: Pedestrian struck by a vehicle
 * 16: Officer struck by a vehicle
 * 17: Helicopter down (an "AC"?)
 * 18: Civilian on fire (a "2-40")
 * 19: Officer set on fire (a "10-99")
 * 20: Car on fire
 * 21: Air unit down (an "AC"?)
 * 22: An explosion (a "9-96")
 * 23: A stabbing (a "2-45") (also something else I couldn't understand)
 * 24: Officer stabbed (also something else I couldn't understand)
 * 25: Attack on a vehicle ("MDV"?)
 * 26: Damage to property
 * 27: Suspect threatening officer with a firearm
 * 28: Shots fired
 * 29: ???
 * 30: ???
 * 31: ???
 * 32: ???
 * 33: ???
 * 34: A "2-45"
 * 35: ???
 * 36: A "9-25"
 * 37: ???
 * 38: ???
 * 39: ???
 * 40: ???
 * 41: ???
 * 42: ???
 * 43: Possible disturbance
 * 44: Civilian in need of assistance
 * 45: ???
 * 46: ???
 *
 * Hash: 0xE9B09589827545E7 | Since: 323
 * @deprecated Use player.reportCrime(player1, crimeType, wantedLvlThresh) instead
 */
export declare function reportCrime(player1: number | string | Player, crimeType: number, wantedLvlThresh: number): void;
/**
 * crimeType: see REPORT_CRIME
 *
 * Hash: 0x9A987297ED8BD838 | Since: 323
 * @deprecated Use player.suppressCrimeThisFrame(player1, crimeType) instead
 */
export declare function suppressCrimeThisFrame(player1: number | string | Player, crimeType: number): void;
/**
 * This native is used in both singleplayer and multiplayer scripts.
 *
 * Always used like this in scripts
 * `PLAYER::UPDATE_WANTED_POSITION_THIS_FRAME(PLAYER::PLAYER_ID());`
 *
 * Hash: 0xBC9490CA15AEA8FB | Since: 323
 * @deprecated Use player.updateWantedPositionThisFrame(player1) instead
 */
export declare function updateWantedPositionThisFrame(player1: number | string | Player): void;
/**
 * This has been found in use in the decompiled files.
 *
 * Hash: 0x4669B3ED80F24B4E | Since: 323
 * @deprecated Use player.suppressLosingWantedLevelIfHiddenThisFrame(player1) instead
 */
export declare function suppressLosingWantedLevelIfHiddenThisFrame(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x2F41A3BAE005E5FA | Since: 372
 * @deprecated Use player.allowEvasionHudIfDisablingHiddenEvasionThisFrame(player1) instead
 */
export declare function allowEvasionHudIfDisablingHiddenEvasionThisFrame(player1: number | string | Player): void;
/**
 * This has been found in use in the decompiled files.
 *
 * Hash: 0xAD73CE5A09E42D12 | Since: 323
 * @deprecated Use player.forceStartHiddenEvasion(player1) instead
 */
export declare function forceStartHiddenEvasion(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x36F1B38855F2A8DF | Since: 323
 * @deprecated Use player.suppressWitnessesCallingPoliceThisFrame(player1) instead
 */
export declare function suppressWitnessesCallingPoliceThisFrame(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xDC64D2C53493ED12 | Since: 323
 * @deprecated Use player.reportPoliceSpotted(player1) instead
 */
export declare function reportPoliceSpottedPlayer(player1: number | string | Player): void;
/**
 * `PLAYER::SET_LAW_RESPONSE_DELAY_OVERRIDE(rPtr((&l_122) + 71)); // Found in decompilation`
 *
 * <strong></strong>
 *
 * In "am_hold_up.ysc" used once:
 *
 * `l_8d._f47 = MISC::GET_RANDOM_FLOAT_IN_RANGE(18.0, 28.0);`
 * `PLAYER::SET_LAW_RESPONSE_DELAY_OVERRIDE((l_8d._f47));`
 *
 * Hash: 0xB45EFF719D8427A6 | Since: 323
 * @deprecated Use player.setLawResponseDelayOverride() instead
 */
export declare function setLawResponseDelayOverride(): void;
/**
 * No comment provided
 *
 * Hash: 0x0032A6DBA562C518 | Since: 323
 * @deprecated Use player.resetLawResponseDelayOverride() instead
 */
export declare function resetLawResponseDelayOverride(): void;
/**
 * No comment provided
 *
 * Hash: 0xDE7465A27D403C06 | Since: 323
 * @deprecated Use player.canStartMission(player1) instead
 */
export declare function canPlayerStartMission(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x908CBECC2CAA3690 | Since: 323
 * @deprecated Use player.isReadyForCutscene(player1) instead
 */
export declare function isPlayerReadyForCutscene(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7912F7FC4F6264B6 | Since: 323
 * @deprecated Use player.isTargettingEntity(player1, entity) instead
 */
export declare function isPlayerTargettingEntity(player1: number | string | Player, entity: number | Entity): boolean;
/**
 * Assigns the handle of locked-on melee target to *entity that you pass it.
 * Returns false if no entity found.
 *
 * Hash: 0x13EDE1A5DBF797C9 | Since: 323
 * @deprecated Use player.getTargetEntity(player1) instead
 */
export declare function getPlayerTargetEntity(player1: number | string | Player): [boolean, number];
/**
 * Gets a value indicating whether the specified player is currently aiming freely.
 *
 * Hash: 0x2E397FD2ECD37C87 | Since: 323
 * @deprecated Use player.isFreeAiming(player1) instead
 */
export declare function isPlayerFreeAiming(player1: number | string | Player): boolean;
/**
 * Gets a value indicating whether the specified player is currently aiming freely at the specified entity.
 *
 * Hash: 0x3C06B5C839B38F7B | Since: 323
 * @deprecated Use player.isFreeAimingAtEntity(player1, entity) instead
 */
export declare function isPlayerFreeAimingAtEntity(player1: number | string | Player, entity: number | Entity): boolean;
/**
 * Returns TRUE if it found an entity in your crosshair within range of your weapon. Assigns the handle of the target to the *entity that you pass it.
 * Returns false if no entity found.
 *
 * Hash: 0x2975C866E6713290 | Since: 323
 * @deprecated Use player.getEntityIsFreeAimingAt(player1) instead
 */
export declare function getEntityPlayerIsFreeAimingAt(player1: number | string | Player): [boolean, number];
/**
 * Affects the range of auto aim target.
 *
 * Hash: 0x29961D490E5814FD | Since: 323
 * @deprecated Use player.setLockonRangeOverride(player1, range) instead
 */
export declare function setPlayerLockonRangeOverride(player1: number | string | Player, range: number): void;
/**
 * Set whether this player should be able to do drive-bys.
 *
 * "A drive-by is when a ped is aiming/shooting from vehicle. This includes middle finger taunts. By setting this value to false I confirm the player is unable to do all that. Tested on tick."
 *
 *
 * Hash: 0x6E8834B52EC20C77 | Since: 323
 * @deprecated Use player.setCanDoDriveBy(player1, toggle) instead
 */
export declare function setPlayerCanDoDriveBy(player1: number | string | Player, toggle: boolean): void;
/**
 * Sets whether this player can be hassled by gangs.
 *
 * Hash: 0xD5E460AD7020A246 | Since: 323
 * @deprecated Use player.setCanBeHassledByGangs(player1, toggle) instead
 */
export declare function setPlayerCanBeHassledByGangs(player1: number | string | Player, toggle: boolean): void;
/**
 * Sets whether this player can take cover.
 *
 * Hash: 0xD465A8599DFF6814 | Since: 323
 * @deprecated Use player.setCanUseCover(player1, toggle) instead
 */
export declare function setPlayerCanUseCover(player1: number | string | Player, toggle: boolean): void;
/**
 * Gets the maximum wanted level the player can get.
 * Ranges from 0 to 5.
 *
 * Hash: 0x462E0DB9B137DC5F | Since: 323
 * @deprecated Use player.getMaxWantedLevel() instead
 */
export declare function getMaxWantedLevel(): number;
/**
 * No comment provided
 *
 * Hash: 0x78CFE51896B6B8A4 | Since: 323
 * @deprecated Use player.isTargettingAnything(player1) instead
 */
export declare function isPlayerTargettingAnything(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA01B8075D8B92DF4 | Since: 323
 * @deprecated Use player.setSprint(player1, toggle) instead
 */
export declare function setPlayerSprint(player1: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA6F312FCCE9C1DFE | Since: 323
 * @deprecated Use player.resetStamina(player1) instead
 */
export declare function resetPlayerStamina(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xA352C1B864CAFD33 | Since: 323
 * @deprecated Use player.restoreStamina(player1) instead
 */
export declare function restorePlayerStamina(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x3F9F16F8E65A7ED7 | Since: 323
 * @deprecated Use player.getSprintStaminaRemaining(player1) instead
 */
export declare function getPlayerSprintStaminaRemaining(player1: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x1885BC9B108B4C99 | Since: 323
 * @deprecated Use player.getSprintTimeRemaining(player1) instead
 */
export declare function getPlayerSprintTimeRemaining(player1: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xA1FCF8E6AF40B731 | Since: 323
 * @deprecated Use player.getUnderwaterTimeRemaining(player1) instead
 */
export declare function getPlayerUnderwaterTimeRemaining(player1: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xA0D3E4F7AAFB7E78 | Since: 757
 * @deprecated Use player.setUnderwaterBreathPercentRemaining(player1, time) instead
 */
export declare function setPlayerUnderwaterBreathPercentRemaining(player1: number | string | Player, time: number): number;
/**
 * Returns the group ID the player is member of.
 *
 * Hash: 0x0D127585F77030AF | Since: 323
 * @deprecated Use player.getGroup(player1) instead
 */
export declare function getPlayerGroup(player1: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x92659B4CE1863CB3 | Since: 323
 * @deprecated Use player.getMaxArmour(player1) instead
 */
export declare function getPlayerMaxArmour(player1: number | string | Player): number;
/**
 * Can the player control himself, used to disable controls for player for things like a cutscene.
 *
 * ---
 *
 * You can't disable controls with this, use SET_PLAYER_CONTROL(...) for this.
 *
 * Hash: 0x49C32D60007AFA47 | Since: 323
 * @deprecated Use player.isControlOn(player1) instead
 */
export declare function isPlayerControlOn(player1: number | string | Player): boolean;
/**
 * Returns true when the player is not able to control the cam i.e. when running a benchmark test, switching the player or viewing a cutscene.
 *
 * Note: I am not 100% sure if the native actually checks if the cam control is disabled but it seems promising.
 *
 * Hash: 0x7C814D2FB49F40C0 | Since: 323
 * @deprecated Use player.getAreCameraControlsDisabled() instead
 */
export declare function getAreCameraControlsDisabled(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8A876A65283DD7D7 | Since: 323
 * @deprecated Use player.isScriptControlOn(player1) instead
 */
export declare function isPlayerScriptControlOn(player1: number | string | Player): boolean;
/**
 * Returns TRUE if the player ('s ped) is climbing at the moment.
 *
 * Hash: 0x95E8F73DC65EFB9C | Since: 323
 * @deprecated Use player.isClimbing(player1) instead
 */
export declare function isPlayerClimbing(player1: number | string | Player): boolean;
/**
 * Return true while player is being arrested / busted.
 *
 * If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)
 *
 * If atArresting is set to 0, this function will return 1 only when the busted screen is shown.
 *
 * Hash: 0x388A47C51ABDAC8E | Since: 323
 * @deprecated Use player.isBeingArrested(player1, atArresting) instead
 */
export declare function isPlayerBeingArrested(player1: number | string | Player, atArresting: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2D03E13C460760D6 | Since: 323
 * @deprecated Use player.resetArrestState(player1) instead
 */
export declare function resetPlayerArrestState(player1: number | string | Player): void;
/**
 * Alternative: GET_VEHICLE_PED_IS_IN(PLAYER_PED_ID(), 1);
 *
 * Hash: 0xB6997A7EB3F5C8C0 | Since: 323
 * @deprecated Use player.getsLastVehicle() instead
 */
export declare function getPlayersLastVehicle(): number;
/**
 * Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT
 *
 * Hash: 0xA5EDC40EF369B48D | Since: 323
 * @deprecated Use player.getIndex() instead
 */
export declare function getPlayerIndex(): number | string;
/**
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 *
 * Hash: 0x41BD2A6B006AF756 | Since: 323
 * @deprecated Use player.intToindex(value) instead
 */
export declare function intToPlayerindex(value: number): number | string;
/**
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 * --------------------------------------------------------
 * `if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(i)))`
 *
 *
 * Hash: 0x9EC6603812C24710 | Since: 323
 * @deprecated Use player.intToParticipantindex(value) instead
 */
export declare function intToParticipantindex(value: number): number;
/**
 * No comment provided
 *
 * Hash: 0x5D35ECF3A81A0EE0 | Since: 323
 * @deprecated Use player.getTimeSinceHitVehicle(player1) instead
 */
export declare function getTimeSincePlayerHitVehicle(player1: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xE36A25322DC35F42 | Since: 323
 * @deprecated Use player.getTimeSinceHitPed(player1) instead
 */
export declare function getTimeSincePlayerHitPed(player1: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xD559D2BE9E37853B | Since: 323
 * @deprecated Use player.getTimeSinceDroveOnPavement(player1) instead
 */
export declare function getTimeSincePlayerDroveOnPavement(player1: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xDB89591E290D9182 | Since: 323
 * @deprecated Use player.getTimeSinceDroveAgainstTraffic(player1) instead
 */
export declare function getTimeSincePlayerDroveAgainstTraffic(player1: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xDCCFD3F106C36AB4 | Since: 323
 * @deprecated Use player.isFreeForAmbientTask(player1) instead
 */
export declare function isPlayerFreeForAmbientTask(player1: number | string | Player): boolean;
/**
 * This returns YOUR 'identity' as a Player type.
 *
 * Always returns 0 in story mode.
 *
 * Hash: 0x4F8644AF03D0E0D6 | Since: 323
 * @deprecated Use player.id() instead
 */
export declare function playerId(): number | string;
/**
 * Returns current player ped
 *
 * Hash: 0xD80958FC74E988A6 | Since: 323
 * @deprecated Use player.pedId() instead
 */
export declare function playerPedId(): number;
/**
 * Does exactly the same thing as PLAYER_ID()
 *
 * Hash: 0xEE68096F9F37341E | Since: 323
 * @deprecated Use player.networkIdToInt() instead
 */
export declare function networkPlayerIdToInt(): number;
/**
 * No comment provided
 *
 * Hash: 0xC968670BFACE42D9 | Since: 323
 * @deprecated Use player.hasForceCleanupOccurred(cleanupFlags) instead
 */
export declare function hasForceCleanupOccurred(cleanupFlags: number): boolean;
/**
 * used with 1,2,8,64,128 in the scripts
 *
 * Hash: 0xBC8983F38F78ED51 | Since: 323
 * @deprecated Use player.forceCleanup(cleanupFlags) instead
 */
export declare function forceCleanup(cleanupFlags: number): void;
/**
 * `PLAYER::FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME("pb_prostitute", 1); // Found in decompilation`
 *
 * Hash: 0x4C68DDDDF0097317 | Since: 323
 * @deprecated Use player.forceCleanupForAllThreadsWithThisName(name, cleanupFlags) instead
 */
export declare function forceCleanupForAllThreadsWithThisName(name: string, cleanupFlags: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF745B37630DF176B | Since: 323
 * @deprecated Use player.forceCleanupForThreadWithThisId(id, cleanupFlags) instead
 */
export declare function forceCleanupForThreadWithThisId(id: number, cleanupFlags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9A41CF4674A12272 | Since: 323
 * @deprecated Use player.getCauseOfMostRecentForceCleanup() instead
 */
export declare function getCauseOfMostRecentForceCleanup(): number;
/**
 * No comment provided
 *
 * Hash: 0x8026FF78F208978A | Since: 323
 * @deprecated Use player.setMayOnlyEnterThisVehicle(player1, vehicle) instead
 */
export declare function setPlayerMayOnlyEnterThisVehicle(player1: number | string | Player, vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x1DE37BBF9E9CC14A | Since: 323
 * @deprecated Use player.setMayNotEnterAnyVehicle(player1) instead
 */
export declare function setPlayerMayNotEnterAnyVehicle(player1: number | string | Player): void;
/**
 * 1 - Welcome to Los Santos
 * 2 - A Friendship Resurrected
 * 3 - A Fair Day's Pay
 * 4 - The Moment of Truth
 * 5 - To Live or Die in Los Santos
 * 6 - Diamond Hard
 * 7 - Subversive
 * 8 - Blitzed
 * 9 - Small Town, Big Job
 * 10 - The Government Gimps
 * 11 - The Big One!
 * 12 - Solid Gold, Baby!
 * 13 - Career Criminal
 * 14 - San Andreas Sightseer
 * 15 - All's Fare in Love and War
 * 16 - TP Industries Arms Race
 * 17 - Multi-Disciplined
 * 18 - From Beyond the Stars
 * 19 - A Mystery, Solved
 * 20 - Waste Management
 * 21 - Red Mist
 * 22 - Show Off
 * 23 - Kifflom!
 * 24 - Three Man Army
 * 25 - Out of Your Depth
 * 26 - Altruist Acolyte
 * 27 - A Lot of Cheddar
 * 28 - Trading Pure Alpha
 * 29 - Pimp My Sidearm
 * 30 - Wanted: Alive Or Alive
 * 31 - Los Santos Customs
 * 32 - Close Shave
 * 33 - Off the Plane
 * 34 - Three-Bit Gangster
 * 35 - Making Moves
 * 36 - Above the Law
 * 37 - Numero Uno
 * 38 - The Midnight Club
 * 39 - Unnatural Selection
 * 40 - Backseat Driver
 * 41 - Run Like The Wind
 * 42 - Clean Sweep
 * 43 - Decorated
 * 44 - Stick Up Kid
 * 45 - Enjoy Your Stay
 * 46 - Crew Cut
 * 47 - Full Refund
 * 48 - Dialling Digits
 * 49 - American Dream
 * 50 - A New Perspective
 * 51 - Be Prepared
 * 52 - In the Name of Science
 * 53 - Dead Presidents
 * 54 - Parole Day
 * 55 - Shot Caller
 * 56 - Four Way
 * 57 - Live a Little
 * 58 - Can't Touch This
 * 59 - Mastermind
 * 60 - Vinewood Visionary
 * 61 - Majestic
 * 62 - Humans of Los Santos
 * 63 - First Time Director
 * 64 - Animal Lover
 * 65 - Ensemble Piece
 * 66 - Cult Movie
 * 67 - Location Scout
 * 68 - Method Actor
 * 69 - Cryptozoologist
 * 70 - Getting Started
 * 71 - The Data Breaches
 * 72 - The Bogdan Problem
 * 73 - The Doomsday Scenario
 * 74 - A World Worth Saving
 * 75 - Orbital Obliteration
 * 76 - Elitist
 * 77 - Masterminds
 *
 * Hash: 0xBEC7076D64130195 | Since: 323
 * @deprecated Use player.giveAchievementTo(achievementId) instead
 */
export declare function giveAchievementToPlayer(achievementId: number): boolean;
/**
 * For Steam.
 * Does nothing and always returns false in the retail version of the game.
 *
 * Hash: 0xC2AFFFDABBDC2C5C | Since: 323
 * @deprecated Use player.setAchievementProgress(achievementId, progress) instead
 */
export declare function setAchievementProgress(achievementId: number, progress: number): boolean;
/**
 * For Steam.
 * Always returns 0 in retail version of the game.
 *
 * Hash: 0x1C186837D0619335 | Since: 323
 * @deprecated Use player.getAchievementProgress(achievementId) instead
 */
export declare function getAchievementProgress(achievementId: number): number;
/**
 * See GIVE_ACHIEVEMENT_TO_PLAYER
 *
 * Hash: 0x867365E111A3B6EB | Since: 323
 * @deprecated Use player.hasAchievementBeenPassed(achievementId) instead
 */
export declare function hasAchievementBeenPassed(achievementId: number): boolean;
/**
 * Returns TRUE if the game is in online mode and FALSE if in offline mode.
 *
 * This is an alias for NETWORK_IS_SIGNED_ONLINE.
 *
 * Hash: 0xF25D331DC2627BBC | Since: 323
 * @deprecated Use player.isOnline() instead
 */
export declare function isPlayerOnline(): boolean;
/**
 * this function is hard-coded to always return 0.
 *
 * Hash: 0x74556E1420867ECA | Since: 323
 * @deprecated Use player.isLoggingInNp() instead
 */
export declare function isPlayerLoggingInNp(): boolean;
/**
 * Purpose of the BOOL currently unknown.
 * Both, true and false, work
 *
 * Hash: 0x94DD7888C10A979E | Since: 323
 * @deprecated Use player.displaySystemSigninUi() instead
 */
export declare function displaySystemSigninUi(): void;
/**
 * No comment provided
 *
 * Hash: 0x5D511E3867C87139 | Since: 323
 * @deprecated Use player.isSystemUiBeingDisplayed() instead
 */
export declare function isSystemUiBeingDisplayed(): boolean;
/**
 * Simply sets you as invincible (Health will not deplete).
 *
 * Use 0x733A643B5B0C53C1 instead if you want Ragdoll enabled, which is equal to:
 * *(DWORD *)(playerPedAddress + 0x188) |= (1 << 9);
 *
 * Hash: 0x239528EACDC3E7DE | Since: 323
 * @deprecated Use player.setInvincible(player1, toggle) instead
 */
export declare function setPlayerInvincible(player1: number | string | Player, toggle: boolean): void;
/**
 * Returns the Player's Invincible status.
 *
 * This function will always return false if 0x733A643B5B0C53C1 is used to set the invincibility status. To always get the correct result, use this:
 *
 * bool IsPlayerInvincible(Player player)
 * {
 * auto addr = getScriptHandleBaseAddress(GET_PLAYER_PED(player));
 *
 * if (addr)
 * {
 * DWORD flag = *(DWORD *)(addr + 0x188);
 * return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);
 * }
 *
 * return false;
 * }
 *
 *
 *
 * Hash: 0xB721981B2B939E07 | Since: 323
 * @deprecated Use player.getInvincible(player1) instead
 */
export declare function getPlayerInvincible(player1: number | string | Player): boolean;
/**
 * Always returns false.
 *
 * Hash: 0xDCC07526B8EC45AF | Since: 1868
 * @deprecated Use player.getDebugInvincible(player1) instead
 */
export declare function getPlayerDebugInvincible(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6BC97F4F4BB3C04B | Since: 463
 * @deprecated Use player.setInvincibleButHasReactions(player1, toggle) instead
 */
export declare function setPlayerInvincibleButHasReactions(player1: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCAC57395B151135F | Since: 323
 * @deprecated Use player.setCanCollectDroppedMoney(player1) instead
 */
export declare function setPlayerCanCollectDroppedMoney(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xF3AC26D3CC576528 | Since: 323
 * @deprecated Use player.removeHelmet(player1) instead
 */
export declare function removePlayerHelmet(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x3C49C870E66F0A28 | Since: 323
 * @deprecated Use player.giveRagdollControl(player1, toggle) instead
 */
export declare function givePlayerRagdollControl(player1: number | string | Player, toggle: boolean): void;
/**
 * Example from fm_mission_controler.ysc.c4:
 *
 * `PLAYER::SET_PLAYER_LOCKON(PLAYER::PLAYER_ID(), 1);`
 *
 * All other decompiled scripts using this seem to be using the player id as the first parameter, so I feel the need to confirm it as so.
 *
 * No need to confirm it says PLAYER_ID() so it uses PLAYER_ID() lol.
 *
 * Hash: 0x5C8B2F450EE4328E | Since: 323
 * @deprecated Use player.setLockon(player1, toggle) instead
 */
export declare function setPlayerLockon(player1: number | string | Player, toggle: boolean): void;
/**
 * Sets your targeting mode.
 * 0 = Assisted Aim - Full
 * 1 = Assisted Aim - Partial
 * 2 = Free Aim - Assisted
 * 3 = Free Aim
 *
 * Hash: 0xB1906895227793F3 | Since: 323
 * @deprecated Use player.setTargetingMode(targetMode) instead
 */
export declare function setPlayerTargetingMode(targetMode: number): void;
/**
 * No comment provided
 *
 * Hash: 0x875BDD898B99C8CE | Since: 3570
 * @deprecated Use player.getTargetingMode() instead
 */
export declare function getPlayerTargetingMode(): number;
/**
 * No comment provided
 *
 * Hash: 0x5702B917B99DB1CD | Since: 323
 * @deprecated Use player.setTargetLevel(targetLevel) instead
 */
export declare function setPlayerTargetLevel(targetLevel: number): void;
/**
 * Returns profile setting 237.
 *
 * Hash: 0xB9CF1F793A9F1BF1 | Since: 323
 * @deprecated Use player.getIsUsingFpsThirdPersonCover() instead
 */
export declare function getIsUsingFpsThirdPersonCover(): boolean;
/**
 * Returns profile setting 243.
 *
 * Hash: 0xCB645E85E97EA48B | Since: 372
 * @deprecated Use player.getIsUsingHoodCamera() instead
 */
export declare function getIsUsingHoodCamera(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF0B67A4DE6AB5F98 | Since: 323
 * @deprecated Use player.clearHasDamagedAtLeastOnePed(player1) instead
 */
export declare function clearPlayerHasDamagedAtLeastOnePed(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x20CE80B0C2BF4ACC | Since: 323
 * @deprecated Use player.hasDamagedAtLeastOnePed(player1) instead
 */
export declare function hasPlayerDamagedAtLeastOnePed(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4AACB96203D11A31 | Since: 323
 * @deprecated Use player.clearHasDamagedAtLeastOneNonAnimalPed(player1) instead
 */
export declare function clearPlayerHasDamagedAtLeastOneNonAnimalPed(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xE4B90F367BD81752 | Since: 323
 * @deprecated Use player.hasDamagedAtLeastOneNonAnimalPed(player1) instead
 */
export declare function hasPlayerDamagedAtLeastOneNonAnimalPed(player1: number | string | Player): boolean;
/**
 * This can be between 1.0f - 14.9f
 *
 * You can change the max in IDA from 15.0. I say 15.0 as the function blrs if what you input is greater than or equal to 15.0 hence why it's 14.9 max default.
 *
 *
 *
 * Hash: 0xCA7DC8329F0A1E9E | Since: 323
 * @deprecated Use player.setAirDragMultiplierForsVehicle(player1, multiplier) instead
 */
export declare function setAirDragMultiplierForPlayersVehicle(player1: number | string | Player, multiplier: number): void;
/**
 * Swim speed multiplier.
 * Multiplier goes up to 1.49
 *
 * Just call it one time, it is not required to be called once every tick. - Note copied from below native.
 *
 * Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and RUN_SPRINT below. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.
 *
 * Hash: 0xA91C6F0FF7D16A13 | Since: 323
 * @deprecated Use player.setSwimMultiplierFor(player1, multiplier) instead
 */
export declare function setSwimMultiplierForPlayer(player1: number | string | Player, multiplier: number): void;
/**
 * Multiplier goes up to 1.49 any value above will be completely overruled by the game and the multiplier will not take effect, this can be edited in memory however.
 *
 * Just call it one time, it is not required to be called once every tick.
 *
 * Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and SWIM above. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.
 *
 * Hash: 0x6DB47AA77FD94E09 | Since: 323
 * @deprecated Use player.setRunSprintMultiplierFor(player1, multiplier) instead
 */
export declare function setRunSprintMultiplierForPlayer(player1: number | string | Player, multiplier: number): void;
/**
 * Returns the time since the character was arrested in (ms) milliseconds.
 *
 * example
 *
 * var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_ARREST();
 *
 * UI.DrawSubtitle(time.ToString());
 *
 * if player has not been arrested, the int returned will be -1.
 *
 * Hash: 0x5063F92F07C2A316 | Since: 323
 * @deprecated Use player.getTimeSinceLastArrest() instead
 */
export declare function getTimeSinceLastArrest(): number;
/**
 * Returns the time since the character died in (ms) milliseconds.
 *
 * example
 *
 * var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_DEATH();
 *
 * UI.DrawSubtitle(time.ToString());
 *
 * if player has not died, the int returned will be -1.
 *
 * Hash: 0xC7034807558DDFCA | Since: 323
 * @deprecated Use player.getTimeSinceLastDeath() instead
 */
export declare function getTimeSinceLastDeath(): number;
/**
 * No comment provided
 *
 * Hash: 0xAEBF081FFC0A0E5E | Since: 323
 * @deprecated Use player.assistedMovementCloseRoute() instead
 */
export declare function assistedMovementCloseRoute(): void;
/**
 * No comment provided
 *
 * Hash: 0x8621390F0CDCFE1F | Since: 323
 * @deprecated Use player.assistedMovementFlushRoute() instead
 */
export declare function assistedMovementFlushRoute(): void;
/**
 * No comment provided
 *
 * Hash: 0x0FEE4F80AC44A726 | Since: 323
 * @deprecated Use player.setForcedAim(player1, toggle) instead
 */
export declare function setPlayerForcedAim(player1: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x75E7D505F2B15902 | Since: 323
 * @deprecated Use player.setForcedZoom(player1, toggle) instead
 */
export declare function setPlayerForcedZoom(player1: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7651BC64AE59E128 | Since: 323
 * @deprecated Use player.setForceSkipAimIntro(player1, toggle) instead
 */
export declare function setPlayerForceSkipAimIntro(player1: number | string | Player, toggle: boolean): void;
/**
 * Inhibits the player from using any method of combat including melee and firearms.
 *
 * NOTE: Only disables the firing for one frame
 *
 * Hash: 0x5E6CC07646BBEAB8 | Since: 323
 * @deprecated Use player.disableFiring(player1, toggle) instead
 */
export declare function disablePlayerFiring(player1: number | string | Player, toggle: boolean): void;
/**
 * Used only once in R* scripts (freemode.ysc).
 *
 * Hash: 0xB885852C39CC265D | Since: 323
 * @deprecated Use player.disableThrowGrenadeWhileUsingGun() instead
 */
export declare function disablePlayerThrowGrenadeWhileUsingGun(): void;
/**
 * No comment provided
 *
 * Hash: 0x2E8AABFA40A84F8C | Since: 323
 * @deprecated Use player.setDisableAmbientMeleeMove(player1, toggle) instead
 */
export declare function setDisableAmbientMeleeMove(player1: number | string | Player, toggle: boolean): void;
/**
 * `Default is 100. Use player id and not ped id. For instance: PLAYER::SET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID(), 100); // main_persistent.ct4`
 *
 * Hash: 0x77DFCCF5948B8C71 | Since: 323
 * @deprecated Use player.setMaxArmour(player1, value) instead
 */
export declare function setPlayerMaxArmour(player1: number | string | Player, value: number): void;
/**
 * p1 is always 0 in the scripts
 *
 * Hash: 0x821FDC827D6F4090 | Since: 678
 * @deprecated Use player.specialAbilityActivate(player1) instead
 */
export declare function specialAbilityActivate(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xB214D570EAD7F81A | Since: 678
 * @deprecated Use player.setSpecialAbilityMp(player1) instead
 */
export declare function setSpecialAbilityMp(player1: number | string | Player): void;
/**
 * p1 is always 0 in the scripts
 *
 * Hash: 0x17F7471EACA78290 | Since: 678
 * @deprecated Use player.specialAbilityDeactivateMp(player1) instead
 */
export declare function specialAbilityDeactivateMp(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xD6A953C6D1492057 | Since: 323
 * @deprecated Use player.specialAbilityDeactivate(player1) instead
 */
export declare function specialAbilityDeactivate(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x9CB5CE07A3968D5A | Since: 323
 * @deprecated Use player.specialAbilityDeactivateFast(player1) instead
 */
export declare function specialAbilityDeactivateFast(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x375F0E738F861A94 | Since: 323
 * @deprecated Use player.specialAbilityReset(player1) instead
 */
export declare function specialAbilityReset(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xC9A763D8FE87436A | Since: 323
 * @deprecated Use player.specialAbilityChargeOnMissionFailed(player1) instead
 */
export declare function specialAbilityChargeOnMissionFailed(player1: number | string | Player): void;
/**
 * Every occurrence of p1 & p2 were both true.
 *
 * Hash: 0x2E7B9B683481687D | Since: 323
 * @deprecated Use player.specialAbilityChargeSmall(player1) instead
 */
export declare function specialAbilityChargeSmall(player1: number | string | Player): void;
/**
 * Only 1 match. Both p1 & p2 were true.
 *
 * Hash: 0xF113E3AA9BC54613 | Since: 323
 * @deprecated Use player.specialAbilityChargeMedium(player1) instead
 */
export declare function specialAbilityChargeMedium(player1: number | string | Player): void;
/**
 * 2 matches. p1 was always true.
 *
 * Hash: 0xF733F45FA4497D93 | Since: 323
 * @deprecated Use player.specialAbilityChargeLarge(player1) instead
 */
export declare function specialAbilityChargeLarge(player1: number | string | Player): void;
/**
 * p1 appears to always be 1 (only comes up twice)
 *
 * Hash: 0xED481732DFF7E997 | Since: 323
 * @deprecated Use player.specialAbilityChargeContinuous(player1, p1) instead
 */
export declare function specialAbilityChargeContinuous(player1: number | string | Player, p1: number | Ped): void;
/**
 * p1 appears as 5, 10, 15, 25, or 30. p2 is always true.
 *
 * Hash: 0xB7B0870EB531D08D | Since: 323
 * @deprecated Use player.specialAbilityChargeAbsolute(player1) instead
 */
export declare function specialAbilityChargeAbsolute(player1: number | string | Player): void;
/**
 *
 * normalizedValue is from 0.0 - 1.0
 * p2 is always 1
 *
 * Hash: 0xA0696A65F009EE18 | Since: 323
 * @deprecated Use player.specialAbilityChargeNormalized(player1, normalizedValue) instead
 */
export declare function specialAbilityChargeNormalized(player1: number | string | Player, normalizedValue: number): void;
/**
 * Also known as _RECHARGE_SPECIAL_ABILITY
 *
 * Hash: 0x3DACA8DDC6FD4980 | Since: 323
 * @deprecated Use player.specialAbilityFillMeter(player1) instead
 */
export declare function specialAbilityFillMeter(player1: number | string | Player): void;
/**
 * p1 was always true.
 *
 * Hash: 0x1D506DBBBC51E64B | Since: 323
 * @deprecated Use player.specialAbilityDepleteMeter(player1) instead
 */
export declare function specialAbilityDepleteMeter(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x6A09D0D590A47D13 | Since: 323
 * @deprecated Use player.specialAbilityLock(playerModel) instead
 */
export declare function specialAbilityLock(playerModel: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xF145F3BE2EFA9A3B | Since: 323
 * @deprecated Use player.specialAbilityUnlock(playerModel) instead
 */
export declare function specialAbilityUnlock(playerModel: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xC6017F6A6CDFA694 | Since: 323
 * @deprecated Use player.isSpecialAbilityUnlocked(playerModel) instead
 */
export declare function isSpecialAbilityUnlocked(playerModel: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3E5F7FC85D854E15 | Since: 323
 * @deprecated Use player.isSpecialAbilityActive(player1) instead
 */
export declare function isSpecialAbilityActive(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x05A1FE504B7F2587 | Since: 323
 * @deprecated Use player.isSpecialAbilityMeterFull(player1) instead
 */
export declare function isSpecialAbilityMeterFull(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x181EC197DAEFE121 | Since: 323
 * @deprecated Use player.enableSpecialAbility(player1, toggle) instead
 */
export declare function enableSpecialAbility(player1: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB1D200FE26AEF3CB | Since: 323
 * @deprecated Use player.isSpecialAbilityEnabled(player1) instead
 */
export declare function isSpecialAbilityEnabled(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA49C426ED0CA4AB7 | Since: 323
 * @deprecated Use player.setSpecialAbilityMultiplier(multiplier) instead
 */
export declare function setSpecialAbilityMultiplier(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFFEE8FA29AB9A18E | Since: 323
 * @deprecated Use player.updateSpecialAbilityFromStat(player1) instead
 */
export declare function updateSpecialAbilityFromStat(player1: number | string | Player): void;
/**
 * Appears once in "re_dealgonewrong"
 *
 * Hash: 0x5FC472C501CCADB3 | Since: 323
 * @deprecated Use player.getIsDrivingOnHighway(player1) instead
 */
export declare function getIsPlayerDrivingOnHighway(player1: number | string | Player): boolean;
/**
 * Only 1 occurrence. p1 was 2.
 *
 * Hash: 0xF10B44FD479D69F3 | Since: 323
 * @deprecated Use player.getIsDrivingWreckless(player1) instead
 */
export declare function getIsPlayerDrivingWreckless(player1: number | string | Player): boolean;
/**
 * 2 occurrences in agency_heist3a. p1 was 0.7f then 0.4f.
 *
 * Hash: 0xDD2620B7B9D16FF1 | Since: 323
 * @deprecated Use player.getIsMoppingAreaFreeInFrontOf(player1) instead
 */
export declare function getIsMoppingAreaFreeInFrontOfPlayer(player1: number | string | Player): boolean;
/**
 * `findCollisionLand`: This teleports the player to land when set to true and will not consider the Z coordinate parameter provided by you. It will automatically put the Z coordinate so that you don't fall from sky.
 *
 * Hash: 0xAD15F075A4DA0FDE | Since: 323
 * @deprecated Use player.startTeleport(player1, pos, heading, findCollisionLand) instead
 */
export declare function startPlayerTeleport(player1: number | string | Player, pos: Vector3, heading: number, findCollisionLand: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE23D5873C2394C61 | Since: 323
 * @deprecated Use player.updateTeleport(player1) instead
 */
export declare function updatePlayerTeleport(player1: number | string | Player): boolean;
/**
 * Disables the player's teleportation
 *
 * Hash: 0xC449EDED9D73009C | Since: 323
 * @deprecated Use player.stopTeleport() instead
 */
export declare function stopPlayerTeleport(): void;
/**
 * No comment provided
 *
 * Hash: 0x02B15662D7F8886F | Since: 323
 * @deprecated Use player.isTeleportActive() instead
 */
export declare function isPlayerTeleportActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2F395D61F3A1F877 | Since: 323
 * @deprecated Use player.getCurrentStealthNoise(player1) instead
 */
export declare function getPlayerCurrentStealthNoise(player1: number | string | Player): number;
/**
 * `regenRate`: The recharge multiplier, a value between 0.0 and 1.0.
 * Use 1.0 to reset it back to normal
 *
 * Hash: 0x5DB660B38DD98A31 | Since: 323
 * @deprecated Use player.setHealthRechargeMultiplier(player1, regenRate) instead
 */
export declare function setPlayerHealthRechargeMultiplier(player1: number | string | Player, regenRate: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8BC515BAE4AAF8FF | Since: 617
 * @deprecated Use player.getHealthRechargeMaxPercent(player1) instead
 */
export declare function getPlayerHealthRechargeMaxPercent(player1: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0xC388A0F065F5BC34 | Since: 573
 * @deprecated Use player.setHealthRechargeMaxPercent(player1, limit) instead
 */
export declare function setPlayerHealthRechargeMaxPercent(player1: number | string | Player, limit: number): void;
/**
 * Needs to be called every frame.
 *
 * Hash: 0xBCB06442F7E52666 | Since: 2802
 * @deprecated Use player.disableHealthRecharge(player1) instead
 */
export declare function disablePlayerHealthRecharge(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xEFD79FA81DFBA9CB | Since: 573
 * @deprecated Use player.setFallDistanceToTriggerRagdollOverride(player1) instead
 */
export declare function setPlayerFallDistanceToTriggerRagdollOverride(player1: number | string | Player): void;
/**
 * This modifies the damage value of your weapon. Whether it is a multiplier or base damage is unknown.
 *
 * Based on tests, it is unlikely to be a multiplier.
 *
 * modifier's min value is 0.1
 *
 * Hash: 0xCE07B9F7817AADA3 | Since: 323
 * @deprecated Use player.setWeaponDamageModifier(player1, modifier) instead
 */
export declare function setPlayerWeaponDamageModifier(player1: number | string | Player, modifier: number): void;
/**
 * modifier's min value is 0.1
 *
 * Hash: 0x2D83BC011CA14A3C | Since: 323
 * @deprecated Use player.setWeaponDefenseModifier(player1, modifier) instead
 */
export declare function setPlayerWeaponDefenseModifier(player1: number | string | Player, modifier: number): void;
/**
 * modifier's min value is 0.1
 *
 * Hash: 0xBCFDE9EDE4CF27DC | Since: 944
 * @deprecated Use player.setWeaponMinigunDefenseModifier(player1, modifier) instead
 */
export declare function setPlayerWeaponMinigunDefenseModifier(player1: number | string | Player, modifier: number): void;
/**
 * modifier's min value is 0.1
 *
 * Hash: 0x4A3DC7ECCC321032 | Since: 323
 * @deprecated Use player.setMeleeWeaponDamageModifier(player1, modifier) instead
 */
export declare function setPlayerMeleeWeaponDamageModifier(player1: number | string | Player, modifier: number): void;
/**
 * modifier's min value is 0.1
 *
 * Hash: 0xAE540335B4ABC4E2 | Since: 323
 * @deprecated Use player.setMeleeWeaponDefenseModifier(player1, modifier) instead
 */
export declare function setPlayerMeleeWeaponDefenseModifier(player1: number | string | Player, modifier: number): void;
/**
 * modifier's min value is 0.1
 *
 * Hash: 0xA50E117CDDF82F0C | Since: 323
 * @deprecated Use player.setVehicleDamageModifier(player1, modifier) instead
 */
export declare function setPlayerVehicleDamageModifier(player1: number | string | Player, modifier: number): void;
/**
 * modifier's min value is 0.1
 *
 * Hash: 0x4C60E6EFDAFF2462 | Since: 323
 * @deprecated Use player.setVehicleDefenseModifier(player1, modifier) instead
 */
export declare function setPlayerVehicleDefenseModifier(player1: number | string | Player, modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8D768602ADEF2245 | Since: 463
 * @deprecated Use player.setMaxExplosiveDamage(player1) instead
 */
export declare function setPlayerMaxExplosiveDamage(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xD821056B9ACF8052 | Since: 1011
 * @deprecated Use player.setExplosiveDamageModifier(player1) instead
 */
export declare function setPlayerExplosiveDamageModifier(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x31E90B8873A4CD3B | Since: 617
 * @deprecated Use player.setWeaponTakedownDefenseModifier(player1) instead
 */
export declare function setPlayerWeaponTakedownDefenseModifier(player1: number | string | Player): void;
/**
 * Tints:
 * None = -1,
 * Rainbow = 0,
 * Red = 1,
 * SeasideStripes = 2,
 * WidowMaker = 3,
 * Patriot = 4,
 * Blue = 5,
 * Black = 6,
 * Hornet = 7,
 * AirFocce = 8,
 * Desert = 9,
 * Shadow = 10,
 * HighAltitude = 11,
 * Airbone = 12,
 * Sunrise = 13,
 *
 *
 * Hash: 0xA3D0E54541D9A5E5 | Since: 323
 * @deprecated Use player.setParachuteTintIndex(player1, tintIndex) instead
 */
export declare function setPlayerParachuteTintIndex(player1: number | string | Player, tintIndex: number): void;
/**
 * Tints:
 * None = -1,
 * Rainbow = 0,
 * Red = 1,
 * SeasideStripes = 2,
 * WidowMaker = 3,
 * Patriot = 4,
 * Blue = 5,
 * Black = 6,
 * Hornet = 7,
 * AirFocce = 8,
 * Desert = 9,
 * Shadow = 10,
 * HighAltitude = 11,
 * Airbone = 12,
 * Sunrise = 13,
 *
 * Hash: 0x75D3F7A1B0D9B145 | Since: 323
 * @deprecated Use player.getParachuteTintIndex(player1) instead
 */
export declare function getPlayerParachuteTintIndex(player1: number | string | Player): number;
/**
 * Tints:
 * None = -1,
 * Rainbow = 0,
 * Red = 1,
 * SeasideStripes = 2,
 * WidowMaker = 3,
 * Patriot = 4,
 * Blue = 5,
 * Black = 6,
 * Hornet = 7,
 * AirFocce = 8,
 * Desert = 9,
 * Shadow = 10,
 * HighAltitude = 11,
 * Airbone = 12,
 * Sunrise = 13,
 *
 * Hash: 0xAF04C87F5DC1DF38 | Since: 323
 * @deprecated Use player.setReserveParachuteTintIndex(player1, index) instead
 */
export declare function setPlayerReserveParachuteTintIndex(player1: number | string | Player, index: number): void;
/**
 * Tints:
 * None = -1,
 * Rainbow = 0,
 * Red = 1,
 * SeasideStripes = 2,
 * WidowMaker = 3,
 * Patriot = 4,
 * Blue = 5,
 * Black = 6,
 * Hornet = 7,
 * AirFocce = 8,
 * Desert = 9,
 * Shadow = 10,
 * HighAltitude = 11,
 * Airbone = 12,
 * Sunrise = 13,
 *
 * Hash: 0xD5A016BC3C09CF40 | Since: 323
 * @deprecated Use player.getReserveParachuteTintIndex(player1) instead
 */
export declare function getPlayerReserveParachuteTintIndex(player1: number | string | Player): number;
/**
 * tints 0- 13
 * 0 - unkown
 * 1 - unkown
 * 2 - unkown
 * 3 - unkown
 * 4 - unkown
 *
 * Hash: 0x93B0FB27C9A04060 | Since: 323
 * @deprecated Use player.setParachutePackTintIndex(player1, tintIndex) instead
 */
export declare function setPlayerParachutePackTintIndex(player1: number | string | Player, tintIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6E9C742F340CE5A2 | Since: 323
 * @deprecated Use player.getParachutePackTintIndex(player1) instead
 */
export declare function getPlayerParachutePackTintIndex(player1: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x7DDAB28D31FAC363 | Since: 323
 * @deprecated Use player.setHasReserveParachute(player1) instead
 */
export declare function setPlayerHasReserveParachute(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x5DDFE2FF727F3CA3 | Since: 323
 * @deprecated Use player.getHasReserveParachute(player1) instead
 */
export declare function getPlayerHasReserveParachute(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF401B182DBA8AF53 | Since: 323
 * @deprecated Use player.setCanLeaveParachuteSmokeTrail(player1, enabled) instead
 */
export declare function setPlayerCanLeaveParachuteSmokeTrail(player1: number | string | Player, enabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8217FD371A4625CF | Since: 323
 * @deprecated Use player.setParachuteSmokeTrailColor(player1, r, g, b) instead
 */
export declare function setPlayerParachuteSmokeTrailColor(player1: number | string | Player, r: number, g: number, b: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEF56DBABD3CD4887 | Since: 323
 * @deprecated Use player.getParachuteSmokeTrailColor(player1) instead
 */
export declare function getPlayerParachuteSmokeTrailColor(player1: number | string | Player): [number, number, number];
/**
 * No comment provided
 *
 * Hash: 0x11D5F725F0E780E0 | Since: 323
 * @deprecated Use player.setPhonePaletteIdx(player1, idx) instead
 */
export declare function setPlayerPhonePaletteIdx(player1: number | string | Player, idx: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDB89EF50FF25FCE9 | Since: 323
 * @deprecated Use player.setNoiseMultiplier(player1, multiplier) instead
 */
export declare function setPlayerNoiseMultiplier(player1: number | string | Player, multiplier: number): void;
/**
 * Values around 1.0f to 2.0f used in game scripts.
 *
 * Hash: 0xB2C1A29588A9F47C | Since: 323
 * @deprecated Use player.setSneakingNoiseMultiplier(player1, multiplier) instead
 */
export declare function setPlayerSneakingNoiseMultiplier(player1: number | string | Player, multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF297383AA91DCA29 | Since: 323
 * @deprecated Use player.canPedHear(player1, ped) instead
 */
export declare function canPedHearPlayer(player1: number | string | Player, ped: number | Ped): boolean;
/**
 * This is to make the player walk without accepting input from INPUT.
 *
 * gaitType is in increments of 100s. 2000, 500, 300, 200, etc.
 *
 * p4 is always 1 and p5 is always 0.
 *
 * C# Example :
 *
 * Function.Call(Hash.SIMULATE_PLAYER_INPUT_GAIT, Game.Player, 1.0f, 100, 1.0f, 1, 0); //Player will go forward for 100ms
 *
 * Hash: 0x477D5D63E63ECA5D | Since: 323
 * @deprecated Use player.simulateInputGait(player1, amount, gaitType, speed) instead
 */
export declare function simulatePlayerInputGait(player1: number | string | Player, amount: number, gaitType: number, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x19531C47A2ABD691 | Since: 323
 * @deprecated Use player.resetInputGait(player1) instead
 */
export declare function resetPlayerInputGait(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x9F343285A00B4BB6 | Since: 323
 * @deprecated Use player.setAutoGiveParachuteWhenEnterPlane(player1, toggle) instead
 */
export declare function setAutoGiveParachuteWhenEnterPlane(player1: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD2B315B6689D537D | Since: 323
 * @deprecated Use player.setAutoGiveScubaGearWhenExitVehicle(player1, toggle) instead
 */
export declare function setAutoGiveScubaGearWhenExitVehicle(player1: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x4E9021C1FCDD507A | Since: 323
 * @deprecated Use player.setStealthPerceptionModifier(player1, value) instead
 */
export declare function setPlayerStealthPerceptionModifier(player1: number | string | Player, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x690A61A6D13583F6 | Since: 323
 * @deprecated Use player.isRemoteInNonClonedVehicle(player1) instead
 */
export declare function isRemotePlayerInNonClonedVehicle(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9EDD76E87D5D51BA | Since: 323
 * @deprecated Use player.increaseJumpSuppressionRange(player1) instead
 */
export declare function increasePlayerJumpSuppressionRange(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xC54C95DA968EC5B5 | Since: 323
 * @deprecated Use player.setSimulateAiming(player1, toggle) instead
 */
export declare function setPlayerSimulateAiming(player1: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x749FADDF97DFE930 | Since: 323
 * @deprecated Use player.setClothPinFrames(player1) instead
 */
export declare function setPlayerClothPinFrames(player1: number | string | Player): void;
/**
 * Every occurrence was either 0 or 2.
 *
 * Hash: 0x9F7BBA2EA6372500 | Since: 323
 * @deprecated Use player.setClothPackageIndex(index) instead
 */
export declare function setPlayerClothPackageIndex(index: number): void;
/**
 * 6 matches across 4 scripts. 5 occurrences were 240. The other was 255.
 *
 * Hash: 0x14D913B777DFF5DA | Since: 323
 * @deprecated Use player.setClothLockCounter(value) instead
 */
export declare function setPlayerClothLockCounter(value: number): void;
/**
 * Only 1 match. ob_sofa_michael.
 *
 * `PLAYER::PLAYER_ATTACH_VIRTUAL_BOUND(-804.5928f, 173.1801f, 71.68436f, 0f, 0f, 0.590625f, 1f, 0.7f);1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;`
 *
 * Hash: 0xED51733DC73AED51 | Since: 323
 * @deprecated Use player.attachVirtualBound() instead
 */
export declare function playerAttachVirtualBound(): void;
/**
 * 1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
 *
 * Hash: 0x1DD5897E2FA6E7C9 | Since: 323
 * @deprecated Use player.detachVirtualBound() instead
 */
export declare function playerDetachVirtualBound(): void;
/**
 * No comment provided
 *
 * Hash: 0xD705740BB0A1CF4C | Since: 323
 * @deprecated Use player.hasBeenSpottedInStolenVehicle(player1) instead
 */
export declare function hasPlayerBeenSpottedInStolenVehicle(player1: number | string | Player): boolean;
/**
 * Returns true if an unk value is greater than 0.0f
 *
 * Hash: 0x38D28DA81E4E9BF9 | Since: 323
 * @deprecated Use player.isBattleAware(player1) instead
 */
export declare function isPlayerBattleAware(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBC0753C9CA14B506 | Since: 323
 * @deprecated Use player.getReceivedBattleEventRecently(player1) instead
 */
export declare function getPlayerReceivedBattleEventRecently(player1: number | string | Player): boolean;
/**
 * Appears only 3 times in the scripts, more specifically in michael1.ysc
 *
 * -
 * This can be used to prevent dying if you are "out of the world"
 *
 * Hash: 0x5006D96C995A5827 | Since: 323
 * @deprecated Use player.extendWorldBoundaryFor(pos) instead
 */
export declare function extendWorldBoundaryForPlayer(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xDA1DF03D5A315F4E | Since: 323
 * @deprecated Use player.resetWorldBoundaryFor() instead
 */
export declare function resetWorldBoundaryForPlayer(): void;
/**
 * Returns true if the player is riding a train.
 *
 * Hash: 0x4EC12697209F2196 | Since: 323
 * @deprecated Use player.isRidingTrain(player1) instead
 */
export declare function isPlayerRidingTrain(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD55DDFB47991A294 | Since: 323
 * @deprecated Use player.hasLeftTheWorld(player1) instead
 */
export declare function hasPlayerLeftTheWorld(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFF300C7649724A0B | Since: 323
 * @deprecated Use player.setLeavePedBehind(player1, toggle) instead
 */
export declare function setPlayerLeavePedBehind(player1: number | string | Player, toggle: boolean): void;
/**
 * p1 was always 5.
 * p4 was always false.
 *
 * Hash: 0xD9284A8C0D48352C | Since: 323
 * @deprecated Use player.setParachuteVariationOverride(player1) instead
 */
export declare function setPlayerParachuteVariationOverride(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x0F4CC924CF8C7B21 | Since: 323
 * @deprecated Use player.clearParachuteVariationOverride(player1) instead
 */
export declare function clearPlayerParachuteVariationOverride(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x977DB4641F6FC3DB | Since: 323
 * @deprecated Use player.setParachuteModelOverride(player1, model) instead
 */
export declare function setPlayerParachuteModelOverride(player1: number | string | Player, model: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x0764486AEDE748DB | Since: 2372
 * @deprecated Use player.setReserveParachuteModelOverride(player1, model) instead
 */
export declare function setPlayerReserveParachuteModelOverride(player1: number | string | Player, model: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xC219887CA3E65C41 | Since: 2372
 * @deprecated Use player.getParachuteModelOverride(player1) instead
 */
export declare function getPlayerParachuteModelOverride(player1: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x37FAAA68DCA9D08D | Since: 2372
 * @deprecated Use player.getReserveParachuteModelOverride(player1) instead
 */
export declare function getPlayerReserveParachuteModelOverride(player1: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x8753997EB5F6EE3F | Since: 323
 * @deprecated Use player.clearParachuteModelOverride(player1) instead
 */
export declare function clearPlayerParachuteModelOverride(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x290D248E25815AE8 | Since: 2372
 * @deprecated Use player.clearReserveParachuteModelOverride(player1) instead
 */
export declare function clearPlayerReserveParachuteModelOverride(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xDC80A4C2F18A2B64 | Since: 323
 * @deprecated Use player.setParachutePackModelOverride(player1, model) instead
 */
export declare function setPlayerParachutePackModelOverride(player1: number | string | Player, model: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x10C54E4389C12B42 | Since: 323
 * @deprecated Use player.clearParachutePackModelOverride(player1) instead
 */
export declare function clearPlayerParachutePackModelOverride(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0xC142BE3BB9CE125F | Since: 323
 * @deprecated Use player.disableVehicleRewards(player1) instead
 */
export declare function disablePlayerVehicleRewards(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x2F7CEB6520288061 | Since: 323
 * @deprecated Use player.setSpectatedVehicleRadioOverride() instead
 */
export declare function setPlayerSpectatedVehicleRadioOverride(): void;
/**
 * No comment provided
 *
 * Hash: 0x5DC40A8869C22141 | Since: 323
 * @deprecated Use player.setBluetoothState(player1, state) instead
 */
export declare function setPlayerBluetoothState(player1: number | string | Player, state: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x65FAEE425DE637B0 | Since: 323
 * @deprecated Use player.isBluetoothEnable(player1) instead
 */
export declare function isPlayerBluetoothEnable(player1: number | string | Player): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5501B7A5CDB79D37 | Since: 323
 * @deprecated Use player.disableCameraViewModeCycle(player1) instead
 */
export declare function disableCameraViewModeCycle(player1: number | string | Player): void;
/**
 * No comment provided
 *
 * Hash: 0x56105E599CAB0EFA | Since: 323
 * @deprecated Use player.getFakeWantedLevel(player1) instead
 */
export declare function getPlayerFakeWantedLevel(player1: number | string | Player): number;
/**
 * No comment provided
 *
 * Hash: 0x55FCC0C390620314 | Since: 573
 * @deprecated Use player.setCanDamagePlayer(player1, player2, toggle) instead
 */
export declare function setPlayerCanDamagePlayer(player1: number | string | Player, player2: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2382AB11450AE7BA | Since: 877
 * @deprecated Use player.setApplyWaypointOf(player1, hudColor) instead
 */
export declare function setApplyWaypointOfPlayer(player1: number | string | Player, hudColor: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6E4361FF3E8CD7CA | Since: 1011
 * @deprecated Use player.isVehicleWeaponToggledToNonHoming() instead
 */
export declare function isPlayerVehicleWeaponToggledToNonHoming(): boolean;
/**
 * Unsets playerPed+330 if the current weapon has certain flags.
 *
 * Hash: 0x237440E46D918649 | Since: 1290
 * @deprecated Use player.setVehicleWeaponToNonHoming() instead
 */
export declare function setPlayerVehicleWeaponToNonHoming(): void;
/**
 * No comment provided
 *
 * Hash: 0xEE4EBDD2593BA844 | Since: 1180
 * @deprecated Use player.setHomingDisabledForAllVehicleWeapons() instead
 */
export declare function setPlayerHomingDisabledForAllVehicleWeapons(): void;
/**
 * No comment provided
 *
 * Hash: 0x9097EB6D4BB9A12A | Since: 1868
 * @deprecated Use player.addTargetableEntity(player1, entity) instead
 */
export declare function addPlayerTargetableEntity(player1: number | string | Player, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x9F260BFB59ADBCA3 | Since: 1868
 * @deprecated Use player.removeTargetableEntity(player1, entity) instead
 */
export declare function removePlayerTargetableEntity(player1: number | string | Player, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x7BAE68775557AE0B | Since: 1290
 * @deprecated Use player.setPreviousVariationData(player1) instead
 */
export declare function setPlayerPreviousVariationData(player1: number | string | Player): void;
/**
 * Resets values set by SET_SCRIPT_FIRE_POSITION
 *
 * Hash: 0x7148E0F43D11F0D9 | Since: 1604
 * @deprecated Use player.removeScriptFirePosition() instead
 */
export declare function removeScriptFirePosition(): void;
/**
 * No comment provided
 *
 * Hash: 0x70A382ADEC069DD3 | Since: 1604
 * @deprecated Use player.setScriptFirePosition(coordX, coordY, coordZ) instead
 */
export declare function setScriptFirePosition(coordX: number, coordY: number, coordZ: number): void;
/**
 * No comment provided
 *
 * Hash: 0x48621C9FCA3EBD28 | Since: 323
 * @deprecated Use recording.replayStartEvent() instead
 */
export declare function replayStartEvent(): void;
/**
 * No comment provided
 *
 * Hash: 0x81CBAE94390F9F89 | Since: 323
 * @deprecated Use recording.replayStopEvent() instead
 */
export declare function replayStopEvent(): void;
/**
 * No comment provided
 *
 * Hash: 0x13B350B8AD0EEE10 | Since: 323
 * @deprecated Use recording.replayCancelEvent() instead
 */
export declare function replayCancelEvent(): void;
/**
 * No comment provided
 *
 * Hash: 0x293220DA1B46CEBC | Since: 323
 * @deprecated Use recording.replayRecordBackForTime() instead
 */
export declare function replayRecordBackForTime(): void;
/**
 * -This function appears to be deprecated/ unused. Tracing the call internally leads to a _nullsub -
 *
 * first one seems to be a string of a mission name, second one seems to be a bool/toggle
 *
 * p1 was always 0.
 *
 *
 * Hash: 0x208784099002BC30 | Since: 323
 * @deprecated Use recording.replayCheckForEventThisFrame(missionNameLabel) instead
 */
export declare function replayCheckForEventThisFrame(missionNameLabel: string): void;
/**
 * This disable the recording feature and has to be called every frame.
 *
 * Hash: 0xEB2D525B57F42B40 | Since: 323
 * @deprecated Use recording.replayPreventThisFrame() instead
 */
export declare function replayPreventRecordingThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0xF854439EFBB3B583 | Since: 323
 * @deprecated Use recording.replayResetEventInfo() instead
 */
export declare function replayResetEventInfo(): void;
/**
 * This will disable the ability to make camera changes in R* Editor.
 *
 * Hash: 0xAF66DCEE6609B148 | Since: 323
 * @deprecated Use recording.replayDisableCameraMovementThisFrame() instead
 */
export declare function replayDisableCameraMovementThisFrame(): void;
/**
 * Does nothing (it's a nullsub).
 *
 * Hash: 0x66972397E0757E7A | Since: 323
 * @deprecated Use recording.recordGreatestMoment() instead
 */
export declare function recordGreatestMoment(): void;
/**
 * Starts recording a replay.
 * If mode is 0, turns on action replay.
 * If mode is 1, starts recording.
 * If already recording a replay, does nothing.
 *
 * Hash: 0xC3AC2FFF9612AC81 | Since: 323
 * @deprecated Use recording.startReplay(mode) instead
 */
export declare function startReplayRecording(mode: number): void;
/**
 * Stops recording and saves the recorded clip.
 *
 * Hash: 0x071A5197D6AFC8B3 | Since: 323
 * @deprecated Use recording.stopReplay() instead
 */
export declare function stopReplayRecording(): void;
/**
 * Stops recording and discards the recorded clip.
 *
 * Hash: 0x88BB3507ED41A240 | Since: 323
 * @deprecated Use recording.cancelReplay() instead
 */
export declare function cancelReplayRecording(): void;
/**
 * No comment provided
 *
 * Hash: 0x644546EC5287471B | Since: 323
 * @deprecated Use recording.saveReplay() instead
 */
export declare function saveReplayRecording(): boolean;
/**
 * Checks if you're recording, returns TRUE when you start recording (F1) or turn on action replay (F2)
 *
 * mov al, cs:g_bIsRecordingGameplay // byte_141DD0CD0 in b944
 * retn
 *
 * Hash: 0x1897CA71995A90B4 | Since: 323
 * @deprecated Use recording.isReplay() instead
 */
export declare function isReplayRecording(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDF4B952F7D381B95 | Since: 323
 * @deprecated Use recording.isReplayInitialized() instead
 */
export declare function isReplayInitialized(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4282E08174868BE3 | Since: 323
 * @deprecated Use recording.isReplayAvailable() instead
 */
export declare function isReplayAvailable(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x33D47E85B476ABCD | Since: 323
 * @deprecated Use recording.isReplayRecordSpaceAvailable() instead
 */
export declare function isReplayRecordSpaceAvailable(): boolean;
/**
 * Does nothing (it's a nullsub).
 *
 * Hash: 0x7E2BD3EF6C205F09 | Since: 323
 * @deprecated Use replay.registerEffectForEditor() instead
 */
export declare function registerEffectForReplayEditor(): void;
/**
 * Returns a bool if interior rendering is disabled, if yes, all "normal" rendered interiors are invisible
 *
 * Hash: 0x95AB8B5C992C7B58 | Since: 323
 * @deprecated Use replay.systemHasRequestedAScriptCleanup() instead
 */
export declare function replaySystemHasRequestedAScriptCleanup(): boolean;
/**
 * Disables some other rendering (internal)
 *
 * Hash: 0x5AD3932DAEB1E5D3 | Since: 323
 * @deprecated Use replay.setScriptsHaveCleanedUpForSystem() instead
 */
export declare function setScriptsHaveCleanedUpForReplaySystem(): void;
/**
 * No comment provided
 *
 * Hash: 0xE058175F8EAFE79A | Since: 323
 * @deprecated Use replay.setSystemPausedForSave() instead
 */
export declare function setReplaySystemPausedForSave(): void;
/**
 * Sets (almost, not sure) all Rockstar Editor values (bIsRecording etc) to 0.
 *
 * Hash: 0x3353D13F09307691 | Since: 323
 * @deprecated Use replay.controlShutdown() instead
 */
export declare function replayControlShutdown(): void;
/**
 * Please note that you will need to call DO_SCREEN_FADE_IN after exiting the Rockstar Editor when you call this.
 *
 * Hash: 0x49DA8145672B2725 | Since: 323
 * @deprecated Use replay.activateRockstarEditor() instead
 */
export declare function activateRockstarEditor(): void;
/**
 * No comment provided
 *
 * Hash: 0x84B418E93894AC1C | Since: 2372
 * @deprecated Use savemigration.isMpEnabled() instead
 */
export declare function savemigrationIsMpEnabled(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x85F41F9225D08C72 | Since: 2612
 * @deprecated Use savemigration.mpRequestAccounts() instead
 */
export declare function savemigrationMpRequestAccounts(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC8CB5999919EA2CA | Since: 2612
 * @deprecated Use savemigration.mpGetAccountsStatus() instead
 */
export declare function savemigrationMpGetAccountsStatus(): number;
/**
 * No comment provided
 *
 * Hash: 0x77A16200E18E0C55 | Since: 2612
 * @deprecated Use savemigration.mpNumAccounts() instead
 */
export declare function savemigrationMpNumAccounts(): number;
/**
 * No comment provided
 *
 * Hash: 0xFCE2747EEF1D05FC | Since: 2612
 * @deprecated Use savemigration.mpGetAccount() instead
 */
export declare function savemigrationMpGetAccount(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xE5E9746A66359F9D | Since: 2372
 * @deprecated Use savemigration.mpRequestStatus() instead
 */
export declare function savemigrationMpRequestStatus(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x690B76BD2763E068 | Since: 2372
 * @deprecated Use savemigration.mpGetStatus() instead
 */
export declare function savemigrationMpGetStatus(): number;
/**
 * No comment provided
 *
 * Hash: 0x6EB5F71AA68F2E8E | Since: 323
 * @deprecated Use script.request(scriptName) instead
 */
export declare function requestScript(scriptName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xC90D2DCACD56184C | Since: 323
 * @deprecated Use script.setAsNoLongerNeeded(scriptName) instead
 */
export declare function setScriptAsNoLongerNeeded(scriptName: string): void;
/**
 * Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
 *
 * Hash: 0xE6CC9F3BA0FB9EF1 | Since: 323
 * @deprecated Use script.hasLoaded(scriptName) instead
 */
export declare function hasScriptLoaded(scriptName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFC04745FBE67C19A | Since: 323
 * @deprecated Use script.doesExist(scriptName) instead
 */
export declare function doesScriptExist(scriptName: string): boolean;
/**
 * formerly _REQUEST_STREAMED_SCRIPT
 *
 * Hash: 0xD62A67D26D9653E6 | Since: 323
 * @deprecated Use script.requestWithNameHash(scriptHash) instead
 */
export declare function requestScriptWithNameHash(scriptHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xC5BC038960E9DB27 | Since: 323
 * @deprecated Use script.setWithNameHashAsNoLongerNeeded(scriptHash) instead
 */
export declare function setScriptWithNameHashAsNoLongerNeeded(scriptHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x5F0F0C783EB16C04 | Since: 323
 * @deprecated Use script.hasWithNameHashLoaded(scriptHash) instead
 */
export declare function hasScriptWithNameHashLoaded(scriptHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF86AA3C56BA31381 | Since: 323
 * @deprecated Use script.doesWithNameHashExist(scriptHash) instead
 */
export declare function doesScriptWithNameHashExist(scriptHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC8B189ED9138BCD4 | Since: 323
 * @deprecated Use script.terminateThread(threadId) instead
 */
export declare function terminateThread(threadId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x46E9AE36D8FA6417 | Since: 323
 * @deprecated Use script.isThreadActive(threadId) instead
 */
export declare function isThreadActive(threadId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x05A42BA9FC8DA96B | Since: 323
 * @deprecated Use script.getNameOfWithThisId(threadId) instead
 */
export declare function getNameOfScriptWithThisId(threadId: number): string;
/**
 * Starts a new iteration of the current threads.
 * Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
 *
 * Hash: 0xDADFADA5A20143A8 | Since: 323
 * @deprecated Use script.threadIteratorReset() instead
 */
export declare function scriptThreadIteratorReset(): void;
/**
 * If the function returns 0, the end of the iteration has been reached.
 *
 * Hash: 0x30B4FA1C82DD4B9F | Since: 323
 * @deprecated Use script.threadIteratorGetNextThreadId() instead
 */
export declare function scriptThreadIteratorGetNextThreadId(): number;
/**
 * No comment provided
 *
 * Hash: 0xC30338E8088E2E21 | Since: 323
 * @deprecated Use script.getIdOfThisThread() instead
 */
export declare function getIdOfThisThread(): number;
/**
 * No comment provided
 *
 * Hash: 0x1090044AD1DA76FA | Since: 323
 * @deprecated Use script.terminateThisThread() instead
 */
export declare function terminateThisThread(): void;
/**
 * Gets the number of instances of the specified script is currently running.
 *
 * Actually returns numRefs - 1.
 * if (program)
 * `v3 = rage::scrProgram::GetNumRefs(program) - 1;`
 * return v3;
 *
 * Hash: 0x2C83A9DA6BFFC4F9 | Since: 323
 * @deprecated Use script.getNumberOfThreadsRunningTheWithThisHash(scriptHash) instead
 */
export declare function getNumberOfThreadsRunningTheScriptWithThisHash(scriptHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x442E0A7EDE4A738A | Since: 323
 * @deprecated Use script.getThisName() instead
 */
export declare function getThisScriptName(): string;
/**
 * No comment provided
 *
 * Hash: 0x8A1C8B1738FFE87E | Since: 323
 * @deprecated Use script.getHashOfThisName() instead
 */
export declare function getHashOfThisScriptName(): number;
/**
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 *
 * Hash: 0x5F92A689A06620AA | Since: 323
 * @deprecated Use script.getNumberOfEvents(eventGroup) instead
 */
export declare function getNumberOfEvents(eventGroup: number): number;
/**
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 *
 * Hash: 0x936E6168A9BCEDB5 | Since: 323
 * @deprecated Use script.getEventExists(eventGroup, eventIndex) instead
 */
export declare function getEventExists(eventGroup: number, eventIndex: number): boolean;
/**
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 *
 * Hash: 0xD8F66A3A60C62153 | Since: 323
 * @deprecated Use script.getEventAtIndex(eventGroup, eventIndex) instead
 */
export declare function getEventAtIndex(eventGroup: number, eventIndex: number): number;
/**
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 *
 * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
 *
 * Hash: 0x2902843FCD2B2D79 | Since: 323
 * @deprecated Use script.getEventData(eventGroup, eventIndex, eventDataSize) instead
 */
export declare function getEventData(eventGroup: number, eventIndex: number, eventDataSize: number): [boolean, any];
/**
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 *
 * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
 *
 * playerBits (also known as playersToBroadcastTo) is a bitset that indicates which players this event should be sent to. In order to send the event to specific players only, use (1 << playerIndex). Set all bits if it should be broadcast to all players.
 *
 * Hash: 0x5AE99C571D5BBE5D | Since: 323
 * @deprecated Use script.triggerEvent(eventGroup, eventDataSize, playerBits) instead
 */
export declare function triggerScriptEvent(eventGroup: number, eventDataSize: number, playerBits: number): any;
/**
 * No comment provided
 *
 * Hash: 0x078EBE9809CCD637 | Since: 323
 * @deprecated Use script.shutdownLoadingScreen() instead
 */
export declare function shutdownLoadingScreen(): void;
/**
 * No comment provided
 *
 * Hash: 0x5262CC1995D07E09 | Since: 323
 * @deprecated Use script.setNoLoadingScreen(toggle) instead
 */
export declare function setNoLoadingScreen(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x18C1270EA7F199BC | Since: 323
 * @deprecated Use script.getNoLoadingScreen() instead
 */
export declare function getNoLoadingScreen(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB1577667C3708F9B | Since: 323
 * @deprecated Use script.commitToLoadingscreenSelction() instead
 */
export declare function commitToLoadingscreenSelction(): void;
/**
 * Returns true if bit 0 in GtaThread+0x154 is set.
 *
 * Hash: 0x836B62713E0534CA | Since: 323
 * @deprecated Use script.bgIsExitflagSet() instead
 */
export declare function bgIsExitflagSet(): boolean;
/**
 * Sets bit 1 in GtaThread+0x154
 *
 * Hash: 0x760910B49D2B98EA | Since: 323
 * @deprecated Use script.bgSetExitflagResponse() instead
 */
export declare function bgSetExitflagResponse(): void;
/**
 * Hashed version of BG_START_CONTEXT.
 *
 * Hash: 0x75B18E49607874C7 | Since: 323
 * @deprecated Use script.bgStartContextHash(contextHash) instead
 */
export declare function bgStartContextHash(contextHash: number | string): void;
/**
 * Hashed version of BG_END_CONTEXT.
 *
 * Hash: 0x107E5CC7CA942BC1 | Since: 323
 * @deprecated Use script.bgEndContextHash(contextHash) instead
 */
export declare function bgEndContextHash(contextHash: number | string): void;
/**
 * Inserts the given context into the background scripts context map.
 *
 * Hash: 0x9D5A25BADB742ACD | Since: 323
 * @deprecated Use script.bgStartContext(contextName) instead
 */
export declare function bgStartContext(contextName: string): void;
/**
 * Deletes the given context from the background scripts context map.
 *
 * Hash: 0xDC2BACD920D0A0DD | Since: 323
 * @deprecated Use script.bgEndContext(contextName) instead
 */
export declare function bgEndContext(contextName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x0F6F1EBBC4E1D5E6 | Since: 323
 * @deprecated Use script.bgDoesLaunchParamExist(scriptIndex) instead
 */
export declare function bgDoesLaunchParamExist(scriptIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x22E21FBCFC88C149 | Since: 323
 * @deprecated Use script.bgGetLaunchParamValue(scriptIndex) instead
 */
export declare function bgGetLaunchParamValue(scriptIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0x829CD22E043A2577 | Since: 323
 * @deprecated Use script.bgGetIdFromNameHash(p0) instead
 */
export declare function bgGetScriptIdFromNameHash(p0: number | string): number;
/**
 * New variant of SEND_TU_SCRIPT_EVENT that automatically initializes the event data header.
 * See TRIGGER_SCRIPT_EVENT for more info.
 *
 * Hash: 0x71A6F836422FDD2B | Since: 3095
 * @deprecated Use script.sendTuEventNew(eventGroup, eventDataSize, playerBits, eventType) instead
 */
export declare function sendTuScriptEventNew(eventGroup: number, eventDataSize: number, playerBits: number, eventType: number | string): any;
/**
 * Registers a protected variable that will be checked for modifications by the anticheat
 *
 * Hash: 0x40EB1EFD921822BC | Since: 2545
 * @deprecated Use security.registerScriptVariable() instead
 */
export declare function registerScriptVariable(): any;
/**
 * No comment provided
 *
 * Hash: 0x340A36A700E99699 | Since: 2545
 * @deprecated Use security.unregisterScriptVariable() instead
 */
export declare function unregisterScriptVariable(): any;
/**
 * No comment provided
 *
 * Hash: 0x8E580AB902917360 | Since: 2545
 * @deprecated Use security.forceCheckScriptVariables() instead
 */
export declare function forceCheckScriptVariables(): void;
/**
 * Asynchronously starts a line-of-sight (raycast) world probe shape test.
 *
 * Use the handle with 0x3D87450E15D98694 or 0x65287525D951F6BE until it returns 0 or 2.
 *
 * p8 is a bit mask with bits 1, 2 and/or 4, relating to collider types; 4 should usually be used.
 *
 * Hash: 0x7EE9F5D83DD4F90E | Since: 323
 * @deprecated Use shapetest.startLosProbe(x1, y1, z1, x2, y2, z2, flags, entity) instead
 */
export declare function startShapeTestLosProbe(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, entity: number | Entity): number;
/**
 * Does the same as 0x7EE9F5D83DD4F90E, except blocking until the shape test completes.
 *
 * Hash: 0x377906D8A31E5586 | Since: 323
 * @deprecated Use shapetest.startExpensiveSynchronousLosProbe(x1, y1, z1, x2, y2, z2, flags, entity) instead
 */
export declare function startExpensiveSynchronousShapeTestLosProbe(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x052837721A854EC7 | Since: 323
 * @deprecated Use shapetest.startBoundingBox(entity, flags1, flags2) instead
 */
export declare function startShapeTestBoundingBox(entity: number | Entity, flags1: number, flags2: number): number;
/**
 * No comment provided
 *
 * Hash: 0xFE466162C4401D18 | Since: 323
 * @deprecated Use shapetest.startBox(pos, dimX, dimY, dimZ, rot, flags, entity) instead
 */
export declare function startShapeTestBox(pos: Vector3, dimX: number, dimY: number, dimZ: number, rot: Vector3, flags: number, entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x37181417CE7C8900 | Since: 323
 * @deprecated Use shapetest.startBound(entity, flags1, flags2) instead
 */
export declare function startShapeTestBound(entity: number | Entity, flags1: number, flags2: number): number;
/**
 * Raycast from point to point, where the ray has a radius.
 *
 * flags:
 * vehicles=10
 * peds =12
 *
 * Iterating through flags yields many ped / vehicle/ object combinations
 *
 * p9 = 7, but no idea what it does
 *
 * Entity is an entity to ignore
 *
 * Hash: 0x28579D1B8F8AAC80 | Since: 323
 * @deprecated Use shapetest.startCapsule(x1, y1, z1, x2, y2, z2, radius, flags, entity) instead
 */
export declare function startShapeTestCapsule(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0xE6AC6C45FBE83004 | Since: 323
 * @deprecated Use shapetest.startSweptSphere(x1, y1, z1, x2, y2, z2, radius, flags, entity) instead
 */
export declare function startShapeTestSweptSphere(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entity: number | Entity): number;
/**
 * Returns a ShapeTest handle that can be used with GET_SHAPE_TEST_RESULT.
 *
 * In its only usage in game scripts its called with flag set to 511, entity to player_ped_id and flag2 set to 7
 *
 * Hash: 0xFF6BE494C7987F34 | Since: 323
 * @deprecated Use shapetest.startMouseCursorLosProbe(flag, entity, flag2) instead
 */
export declare function startShapeTestMouseCursorLosProbe(flag: number, entity: number | Entity, flag2: number): [number, Vector3, Vector3];
/**
 * Returns the result of a shape test: 0 if the handle is invalid, 1 if the shape test is still pending, or 2 if the shape test has completed, and the handle should be invalidated.
 *
 * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
 *
 * Hash: 0x3D87450E15D98694 | Since: 323
 * @deprecated Use shapetest.getResult(shapeTestHandle) instead
 */
export declare function getShapeTestResult(shapeTestHandle: number): [number, boolean, Vector3, Vector3, number];
/**
 * Returns the result of a shape test, also returning the material of any touched surface.
 *
 * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
 *
 * Unless the return value is 2, the other return values are undefined.
 *
 * Hash: 0x65287525D951F6BE | Since: 323
 * @deprecated Use shapetest.getResultIncludingMaterial(shapeTestHandle) instead
 */
export declare function getShapeTestResultIncludingMaterial(shapeTestHandle: number): [number, boolean, Vector3, Vector3, number, number];
/**
 * Invalidates the entity handle passed by removing the fwScriptGuid from the entity. This should be used when receiving an ambient entity from shape testing natives, but can also be used for other natives returning an 'irrelevant' entity handle.
 *
 * Hash: 0x2B3334BCA57CD799 | Since: 323
 * @deprecated Use shapetest.releaseScriptGuidFromEntity(entityHit) instead
 */
export declare function releaseScriptGuidFromEntity(entityHit: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x03A93FF1A2CA0864 | Since: 323
 * @deprecated Use socialclub.scInboxGetTotalNumMessages() instead
 */
export declare function scInboxGetTotalNumMessages(): number;
/**
 * No comment provided
 *
 * Hash: 0xBB8EA16ECBC976C4 | Since: 323
 * @deprecated Use socialclub.scInboxGetMessageTypeAtIndex(msgIndex) instead
 */
export declare function scInboxGetMessageTypeAtIndex(msgIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0x93028F1DB42BFD08 | Since: 323
 * @deprecated Use socialclub.scInboxGetMessageIsReadAtIndex(msgIndex) instead
 */
export declare function scInboxGetMessageIsReadAtIndex(msgIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2C015348CF19CA1D | Since: 323
 * @deprecated Use socialclub.scInboxSetMessageAsReadAtIndex(msgIndex) instead
 */
export declare function scInboxSetMessageAsReadAtIndex(msgIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA00EFE4082C4056E | Since: 323
 * @deprecated Use socialclub.scInboxMessageGetDataInt(context) instead
 */
export declare function scInboxMessageGetDataInt(context: string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xFFE5C16F402D851D | Since: 323
 * @deprecated Use socialclub.scInboxMessageGetDataBool() instead
 */
export declare function scInboxMessageGetDataBool(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7572EF42FC6A9B6D | Since: 323
 * @deprecated Use socialclub.scInboxMessageGetDataString(context) instead
 */
export declare function scInboxMessageGetDataString(context: string): [boolean, string];
/**
 * No comment provided
 *
 * Hash: 0x9A2C8064B6C1E41A | Since: 323
 * @deprecated Use socialclub.scInboxMessageDoApply() instead
 */
export declare function scInboxMessageDoApply(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF3E31D16CBDCB304 | Since: 323
 * @deprecated Use socialclub.scInboxMessageGetRawTypeAtIndex() instead
 */
export declare function scInboxMessageGetRawTypeAtIndex(): string;
/**
 * No comment provided
 *
 * Hash: 0xDA024BDBD600F44A | Since: 323
 * @deprecated Use socialclub.scInboxMessagePushGamerT0RecipList() instead
 */
export declare function scInboxMessagePushGamerT0RecipList(): any;
/**
 * No comment provided
 *
 * Hash: 0xA68D3D229F4F3B06 | Since: 323
 * @deprecated Use socialclub.scInboxSendUgcstatupdateToRecipList() instead
 */
export declare function scInboxSendUgcstatupdateToRecipList(): any;
/**
 * No comment provided
 *
 * Hash: 0x69D82604A1A5A254 | Since: 323
 * @deprecated Use socialclub.scInboxMessageGetUgcdata() instead
 */
export declare function scInboxMessageGetUgcdata(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x87E0052F08BD64E6 | Since: 323
 * @deprecated Use socialclub.scInboxGetBountyDataAtIndex(index) instead
 */
export declare function scInboxGetBountyDataAtIndex(index: number): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x040ADDCBAFA1018A | Since: 323
 * @deprecated Use socialclub.scEmailRetrieveEmails(offset, limit) instead
 */
export declare function scEmailRetrieveEmails(offset: number, limit: number): void;
/**
 * No comment provided
 *
 * Hash: 0x16DA8172459434AA | Since: 323
 * @deprecated Use socialclub.scEmailGetRetrievalStatus() instead
 */
export declare function scEmailGetRetrievalStatus(): number;
/**
 * No comment provided
 *
 * Hash: 0x7DB18CA8CAD5B098 | Since: 505
 * @deprecated Use socialclub.scEmailGetNumRetrievedEmails() instead
 */
export declare function scEmailGetNumRetrievedEmails(): number;
/**
 * No comment provided
 *
 * Hash: 0x4737980E8A283806 | Since: 323
 * @deprecated Use socialclub.scEmailGetEmailAtIndex() instead
 */
export declare function scEmailGetEmailAtIndex(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x69AA35F3F391CDBA | Since: 3258
 * @deprecated Use socialclub.scEmailMarketingEmailOpened(index, _type) instead
 */
export declare function scEmailMarketingEmailOpened(index: number, _type: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x44ACA259D67651DB | Since: 323
 * @deprecated Use socialclub.scEmailDeleteEmails() instead
 */
export declare function scEmailDeleteEmails(): any;
/**
 * No comment provided
 *
 * Hash: 0x2330C12A7A605D16 | Since: 323
 * @deprecated Use socialclub.scEmailMessagePushGamerToRecipList() instead
 */
export declare function scEmailMessagePushGamerToRecipList(): any;
/**
 * No comment provided
 *
 * Hash: 0x55DF6DB45179236E | Since: 323
 * @deprecated Use socialclub.scEmailMessageClearRecipList() instead
 */
export declare function scEmailMessageClearRecipList(): void;
/**
 * No comment provided
 *
 * Hash: 0x116FB94DC4B79F17 | Since: 323
 * @deprecated Use socialclub.scEmailSendEmail() instead
 */
export declare function scEmailSendEmail(): void;
/**
 * No comment provided
 *
 * Hash: 0x07DBD622D9533857 | Since: 505
 * @deprecated Use socialclub.scEmailSetCurrentEmailTag() instead
 */
export declare function scEmailSetCurrentEmailTag(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBFA0A56A817C6C7D | Since: 323
 * @deprecated Use socialclub.scCacheNewRockstarMsgs(toggle) instead
 */
export declare function scCacheNewRockstarMsgs(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBC1CC91205EC8D6E | Since: 323
 * @deprecated Use socialclub.scHasNewRockstarMsg() instead
 */
export declare function scHasNewRockstarMsg(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDF649C4E9AFDD788 | Since: 323
 * @deprecated Use socialclub.scGetNewRockstarMsg() instead
 */
export declare function scGetNewRockstarMsg(): string;
/**
 * No comment provided
 *
 * Hash: 0x1F1E9682483697C7 | Since: 323
 * @deprecated Use socialclub.scPresenceAttrSetInt(attrHash, value) instead
 */
export declare function scPresenceAttrSetInt(attrHash: number | string, value: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC4C4575F62534A24 | Since: 323
 * @deprecated Use socialclub.scPresenceAttrSetFloat(attrHash, value) instead
 */
export declare function scPresenceAttrSetFloat(attrHash: number | string, value: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x287F1F75D2803595 | Since: 323
 * @deprecated Use socialclub.scPresenceAttrSetString(attrHash, value) instead
 */
export declare function scPresenceAttrSetString(attrHash: number | string, value: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x487912FD248EFDDF | Since: 323
 * @deprecated Use socialclub.scPresenceSetActivityRating() instead
 */
export declare function scPresenceSetActivityRating(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC85A7127E7AD02AA | Since: 323
 * @deprecated Use socialclub.scGamerdataGetInt(name) instead
 */
export declare function scGamerdataGetInt(name: string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xA770C8EEC6FB2AC5 | Since: 323
 * @deprecated Use socialclub.scGamerdataGetFloat(name) instead
 */
export declare function scGamerdataGetFloat(name: string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x8416FE4E4629D7D7 | Since: 323
 * @deprecated Use socialclub.scGamerdataGetBool(name) instead
 */
export declare function scGamerdataGetBool(name: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7FFCBFEE44ECFABF | Since: 323
 * @deprecated Use socialclub.scGamerdataGetString(name) instead
 */
export declare function scGamerdataGetString(name: string): [boolean, string];
/**
 * No comment provided
 *
 * Hash: 0x2D874D4AE612A65F | Since: 323
 * @deprecated Use socialclub.scGamerdataGetActiveXpBonus() instead
 */
export declare function scGamerdataGetActiveXpBonus(): [boolean, number];
/**
 * Starts a task to check an entered string for profanity on the ROS/Social Club services.
 *
 * See also: 1753344C770358AE, 82E4A58BABC15AE7.
 *
 * Hash: 0x75632C5ECD7ED843 | Since: 323
 * @deprecated Use socialclub.scProfanityCheckString(_string) instead
 */
export declare function scProfanityCheckString(_string: string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xEB2BF817463DFA28 | Since: 678
 * @deprecated Use socialclub.scProfanityCheckStringUgc(_string) instead
 */
export declare function scProfanityCheckStringUgc(_string: string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x1753344C770358AE | Since: 323
 * @deprecated Use socialclub.scProfanityGetCheckIsValid(token) instead
 */
export declare function scProfanityGetCheckIsValid(token: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x82E4A58BABC15AE7 | Since: 323
 * @deprecated Use socialclub.scProfanityGetCheckIsPending(token) instead
 */
export declare function scProfanityGetCheckIsPending(token: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x85535ACF97FC0969 | Since: 323
 * @deprecated Use socialclub.scProfanityGetStringPassed(token) instead
 */
export declare function scProfanityGetStringPassed(token: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x930DE22F07B1CCE3 | Since: 323
 * @deprecated Use socialclub.scProfanityGetStringStatus(token) instead
 */
export declare function scProfanityGetStringStatus(token: number): number;
/**
 * Retrieves the profane part of the string with max size of 128.
 * Returns true if profane term was retrieved.
 *
 * Hash: 0x75CC8931A11128C9 | Since: 3258
 * @deprecated Use socialclub.scProfanityGetProfaneWord(token) instead
 */
export declare function scProfanityGetProfaneWord(token: number): [boolean, string];
/**
 * No comment provided
 *
 * Hash: 0xF6BAAAF762E1BF40 | Since: 323
 * @deprecated Use socialclub.scLicenseplateCheckString() instead
 */
export declare function scLicenseplateCheckString(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xF22CA0FD74B80E7A | Since: 323
 * @deprecated Use socialclub.scLicenseplateGetCheckIsValid() instead
 */
export declare function scLicenseplateGetCheckIsValid(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9237E334F6E43156 | Since: 323
 * @deprecated Use socialclub.scLicenseplateGetCheckIsPending() instead
 */
export declare function scLicenseplateGetCheckIsPending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x700569DBA175A77C | Since: 323
 * @deprecated Use socialclub.scLicenseplateGetCount(token) instead
 */
export declare function scLicenseplateGetCount(token: number): number;
/**
 * No comment provided
 *
 * Hash: 0x1D4446A62D35B0D0 | Since: 323
 * @deprecated Use socialclub.scLicenseplateGetPlate(token, plateIndex) instead
 */
export declare function scLicenseplateGetPlate(token: number, plateIndex: number): string;
/**
 * No comment provided
 *
 * Hash: 0x2E89990DDFF670C3 | Since: 323
 * @deprecated Use socialclub.scLicenseplateGetPlateData(token, plateIndex) instead
 */
export declare function scLicenseplateGetPlateData(token: number, plateIndex: number): string;
/**
 * No comment provided
 *
 * Hash: 0xD0EE05FE193646EA | Since: 323
 * @deprecated Use socialclub.scLicenseplateSetPlateData(oldPlateText, newPlateText) instead
 */
export declare function scLicenseplateSetPlateData(oldPlateText: string, newPlateText: string): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x1989C6E6F67E76A8 | Since: 323
 * @deprecated Use socialclub.scLicenseplateAdd(plateText) instead
 */
export declare function scLicenseplateAdd(plateText: string): [boolean, any, number];
/**
 * No comment provided
 *
 * Hash: 0x07C61676E5BB52CD | Since: 323
 * @deprecated Use socialclub.scLicenseplateGetAddIsPending(token) instead
 */
export declare function scLicenseplateGetAddIsPending(token: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8147FFF6A718E1AD | Since: 323
 * @deprecated Use socialclub.scLicenseplateGetAddStatus(token) instead
 */
export declare function scLicenseplateGetAddStatus(token: number): number;
/**
 * No comment provided
 *
 * Hash: 0x0F73393BAC7E6730 | Since: 323
 * @deprecated Use socialclub.scLicenseplateIsvalid(plateText) instead
 */
export declare function scLicenseplateIsvalid(plateText: string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xD302E99EDF0449CF | Since: 323
 * @deprecated Use socialclub.scLicenseplateGetIsvalidIsPending(token) instead
 */
export declare function scLicenseplateGetIsvalidIsPending(token: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5C4EBFFA98BDB41C | Since: 323
 * @deprecated Use socialclub.scLicenseplateGetIsvalidStatus(token) instead
 */
export declare function scLicenseplateGetIsvalidStatus(token: number): number;
/**
 * No comment provided
 *
 * Hash: 0xFF8F3A92B75ED67A | Since: 323
 * @deprecated Use socialclub.scCommunityEventIsActive() instead
 */
export declare function scCommunityEventIsActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4ED9C8D6DA297639 | Since: 323
 * @deprecated Use socialclub.scCommunityEventGetEventId() instead
 */
export declare function scCommunityEventGetEventId(): number;
/**
 * No comment provided
 *
 * Hash: 0x710BCDA8071EDED1 | Since: 323
 * @deprecated Use socialclub.scCommunityEventGetExtraDataInt() instead
 */
export declare function scCommunityEventGetExtraDataInt(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x50A8A36201DBF83E | Since: 323
 * @deprecated Use socialclub.scCommunityEventGetExtraDataFloat() instead
 */
export declare function scCommunityEventGetExtraDataFloat(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x9DE5D2F723575ED0 | Since: 323
 * @deprecated Use socialclub.scCommunityEventGetExtraDataString() instead
 */
export declare function scCommunityEventGetExtraDataString(): [boolean, string];
/**
 * No comment provided
 *
 * Hash: 0xC2C97EA97711D1AE | Since: 323
 * @deprecated Use socialclub.scCommunityEventGetDisplayName() instead
 */
export declare function scCommunityEventGetDisplayName(): [boolean, string];
/**
 * No comment provided
 *
 * Hash: 0x450819D8CF90C416 | Since: 323
 * @deprecated Use socialclub.scCommunityEventIsActiveForType() instead
 */
export declare function scCommunityEventIsActiveForType(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4A7D6E727F941747 | Since: 323
 * @deprecated Use socialclub.scCommunityEventGetEventIdForType() instead
 */
export declare function scCommunityEventGetEventIdForType(): number;
/**
 * No comment provided
 *
 * Hash: 0xE75A4A2E5E316D86 | Since: 323
 * @deprecated Use socialclub.scCommunityEventGetExtraDataIntForType() instead
 */
export declare function scCommunityEventGetExtraDataIntForType(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x2570E26BE63964E3 | Since: 323
 * @deprecated Use socialclub.scCommunityEventGetExtraDataFloatForType() instead
 */
export declare function scCommunityEventGetExtraDataFloatForType(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x1D12A56FC95BE92E | Since: 323
 * @deprecated Use socialclub.scCommunityEventGetExtraDataStringForType() instead
 */
export declare function scCommunityEventGetExtraDataStringForType(): [boolean, string];
/**
 * No comment provided
 *
 * Hash: 0x33DF47CC0642061B | Since: 323
 * @deprecated Use socialclub.scCommunityEventGetDisplayNameForType() instead
 */
export declare function scCommunityEventGetDisplayNameForType(): [boolean, string];
/**
 * No comment provided
 *
 * Hash: 0xA468E0BE12B12C70 | Since: 323
 * @deprecated Use socialclub.scCommunityEventIsActiveById() instead
 */
export declare function scCommunityEventIsActiveById(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8CC469AB4D349B7C | Since: 323
 * @deprecated Use socialclub.scCommunityEventGetExtraDataIntById() instead
 */
export declare function scCommunityEventGetExtraDataIntById(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xC5A35C73B68F3C49 | Since: 323
 * @deprecated Use socialclub.scCommunityEventGetExtraDataFloatById() instead
 */
export declare function scCommunityEventGetExtraDataFloatById(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x699E4A5C8C893A18 | Since: 323
 * @deprecated Use socialclub.scCommunityEventGetExtraDataStringById() instead
 */
export declare function scCommunityEventGetExtraDataStringById(): [boolean, string];
/**
 * No comment provided
 *
 * Hash: 0x19853B5B17D77BCA | Since: 323
 * @deprecated Use socialclub.scCommunityEventGetDisplayNameById() instead
 */
export declare function scCommunityEventGetDisplayNameById(): [boolean, string];
/**
 * No comment provided
 *
 * Hash: 0x6BFB12CE158E3DD4 | Since: 323
 * @deprecated Use socialclub.scTransitionNewsShow() instead
 */
export declare function scTransitionNewsShow(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xFE4C1D0D3B9CC17E | Since: 323
 * @deprecated Use socialclub.scTransitionNewsShowTimed() instead
 */
export declare function scTransitionNewsShowTimed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD8122C407663B995 | Since: 323
 * @deprecated Use socialclub.scTransitionNewsShowNextItem() instead
 */
export declare function scTransitionNewsShowNextItem(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3001BEF2FECA3680 | Since: 323
 * @deprecated Use socialclub.scTransitionNewsHasExtraDataTu() instead
 */
export declare function scTransitionNewsHasExtraDataTu(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x92DA6E70EF249BD1 | Since: 323
 * @deprecated Use socialclub.scTransitionNewsGetExtraDataIntTu() instead
 */
export declare function scTransitionNewsGetExtraDataIntTu(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x675721C9F644D161 | Since: 323
 * @deprecated Use socialclub.scTransitionNewsEnd() instead
 */
export declare function scTransitionNewsEnd(): void;
/**
 * No comment provided
 *
 * Hash: 0xE4F6E8D07A2F0F51 | Since: 1290
 * @deprecated Use socialclub.scPauseNewsInitStarterPack() instead
 */
export declare function scPauseNewsInitStarterPack(): boolean;
/**
 * Fills some 0x30 sized struct
 *
 * Hash: 0x8A4416C0DB05FA66 | Since: 1290
 * @deprecated Use socialclub.scPauseNewsGetPendingStory() instead
 */
export declare function scPauseNewsGetPendingStory(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEA95C0853A27888E | Since: 1290
 * @deprecated Use socialclub.scPauseNewsShutdown() instead
 */
export declare function scPauseNewsShutdown(): void;
/**
 * Returns the nickname of the logged-in Rockstar Social Club account.
 *
 * Hash: 0x198D161F458ECC7F | Since: 323
 * @deprecated Use socialclub.scAccountInfoGetNickname() instead
 */
export declare function scAccountInfoGetNickname(): string;
/**
 * No comment provided
 *
 * Hash: 0x225798743970412B | Since: 323
 * @deprecated Use socialclub.scAchievementInfoStatus() instead
 */
export declare function scAchievementInfoStatus(): [boolean, number];
/**
 * Same as HAS_ACHIEVEMENT_BEEN_PASSED
 *
 * Hash: 0x418DC16FAE452C1C | Since: 323
 * @deprecated Use socialclub.scHasAchievementBeenPassed(achievementId) instead
 */
export declare function scHasAchievementBeenPassed(achievementId: number): boolean;
/**
 * Example:
 *
 * for (v_2 = 0; v_2 <= 4; v_2 += 1) {
 * `STATS::STAT_CLEAR_SLOT_FOR_RELOAD(v_2);`
 * }
 *
 * Hash: 0xEB0A72181D4AA4AD | Since: 323
 * @deprecated Use stats.statClearSlotForReload(statSlot) instead
 */
export declare function statClearSlotForReload(statSlot: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA651443F437B1CE6 | Since: 323
 * @deprecated Use stats.statLoad(statSlot) instead
 */
export declare function statLoad(statSlot: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE07BCA305B82D2FD | Since: 323
 * @deprecated Use stats.ave() instead
 */
export declare function statSave(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5688585E6D563CD8 | Since: 323
 * @deprecated Use stats.etOpenSavetypeInJob() instead
 */
export declare function statSetOpenSavetypeInJob(): void;
/**
 * No comment provided
 *
 * Hash: 0xA1750FFAFA181661 | Since: 323
 * @deprecated Use stats.statLoadPending(statSlot) instead
 */
export declare function statLoadPending(statSlot: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7D3A583856F2C5AC | Since: 323
 * @deprecated Use stats.avePending() instead
 */
export declare function statSavePending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBBB6AD006F1BBEA3 | Since: 323
 * @deprecated Use stats.avePendingOrRequested() instead
 */
export declare function statSavePendingOrRequested(): boolean;
/**
 * p0 is characterSlot? seems range from 0 to 2
 *
 * Hash: 0x49A49BED12794D70 | Since: 323
 * @deprecated Use stats.statDeleteSlot() instead
 */
export declare function statDeleteSlot(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0D0A9F0E7BD91E3C | Since: 323
 * @deprecated Use stats.lotIsLoaded(statSlot) instead
 */
export declare function statSlotIsLoaded(statSlot: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7F2C4CDF2E82DF4C | Since: 323
 * @deprecated Use stats.statCloudSlotLoadFailed() instead
 */
export declare function statCloudSlotLoadFailed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE496A53BA5F50A56 | Since: 323
 * @deprecated Use stats.statCloudSlotLoadFailedCode() instead
 */
export declare function statCloudSlotLoadFailedCode(): number;
/**
 * No comment provided
 *
 * Hash: 0xF434A10BA01C37D0 | Since: 323
 * @deprecated Use stats.etBlockSaves(toggle) instead
 */
export declare function statSetBlockSaves(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6A7F19756F1A9016 | Since: 2060
 * @deprecated Use stats.statGetBlockSaves() instead
 */
export declare function statGetBlockSaves(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7E6946F68A38B74F | Since: 323
 * @deprecated Use stats.statCloudSlotSaveFailed() instead
 */
export declare function statCloudSlotSaveFailed(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA8733668D1047B51 | Since: 323
 * @deprecated Use stats.statClearPendingSaves() instead
 */
export declare function statClearPendingSaves(): void;
/**
 * No comment provided
 *
 * Hash: 0xECB41AC6AB754401 | Since: 323
 * @deprecated Use stats.statLoadDirtyReadDetected() instead
 */
export declare function statLoadDirtyReadDetected(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9B4BD21D69B1E609 | Since: 323
 * @deprecated Use stats.statClearDirtyReadDetected() instead
 */
export declare function statClearDirtyReadDetected(): void;
/**
 * No comment provided
 *
 * Hash: 0xC0E0D686DDFC6EAE | Since: 323
 * @deprecated Use stats.statGetLoadSafeToProgressToMpFromSp() instead
 */
export declare function statGetLoadSafeToProgressToMpFromSp(): boolean;
/**
 * Returns stat hash based on dataType, statIndex/statId and characterSlot. Related to CStatsMpCharacterMappingData
 *
 * Hash: 0xD69CE161FE614531 | Since: 2944
 * @deprecated Use stats.getStatHashForCharacterStat(dataType, statIndex, charSlot) instead
 */
export declare function getStatHashForCharacterStat(dataType: number, statIndex: number, charSlot: number): number;
/**
 * Example:
 * `STATS::STAT_SET_INT(MISC::GET_HASH_KEY("MPPLY_KILLS_PLAYERS"), 1337, true);`
 *
 * Hash: 0xB3271D7AB655B441 | Since: 323
 * @deprecated Use stats.etInt(statName, value, save) instead
 */
export declare function statSetInt(statName: number | string, value: number, save: boolean): boolean;
/**
 * Example:
 * `STATS::STAT_SET_FLOAT(MISC::GET_HASH_KEY("MP0_WEAPON_ACCURACY"), 66.6f, true);`
 *
 * Hash: 0x4851997F37FE9B3C | Since: 323
 * @deprecated Use stats.etFloat(statName, value, save) instead
 */
export declare function statSetFloat(statName: number | string, value: number, save: boolean): boolean;
/**
 * Example:
 * `STATS::STAT_SET_BOOL(MISC::GET_HASH_KEY("MPPLY_MELEECHLENGECOMPLETED"), trur, true);`
 *
 * Hash: 0x4B33C4243DE0C432 | Since: 323
 * @deprecated Use stats.etBool(statName, value, save) instead
 */
export declare function statSetBool(statName: number | string, value: boolean, save: boolean): boolean;
/**
 * The following values have been found in the decompiled scripts:
 * "RC_ABI1"
 * "RC_ABI2"
 * "RC_BA1"
 * "RC_BA2"
 * "RC_BA3"
 * "RC_BA3A"
 * "RC_BA3C"
 * "RC_BA4"
 * "RC_DRE1"
 * "RC_EPS1"
 * "RC_EPS2"
 * "RC_EPS3"
 * "RC_EPS4"
 * "RC_EPS5"
 * "RC_EPS6"
 * "RC_EPS7"
 * "RC_EPS8"
 * "RC_EXT1"
 * "RC_EXT2"
 * "RC_EXT3"
 * "RC_EXT4"
 * "RC_FAN1"
 * "RC_FAN2"
 * "RC_FAN3"
 * "RC_HAO1"
 * "RC_HUN1"
 * "RC_HUN2"
 * "RC_JOS1"
 * "RC_JOS2"
 * "RC_JOS3"
 * "RC_JOS4"
 * "RC_MAU1"
 * "RC_MIN1"
 * "RC_MIN2"
 * "RC_MIN3"
 * "RC_MRS1"
 * "RC_MRS2"
 * "RC_NI1"
 * "RC_NI1A"
 * "RC_NI1B"
 * "RC_NI1C"
 * "RC_NI1D"
 * "RC_NI2"
 * "RC_NI3"
 * "RC_OME1"
 * "RC_OME2"
 * "RC_PA1"
 * "RC_PA2"
 * "RC_PA3"
 * "RC_PA3A"
 * "RC_PA3B"
 * "RC_PA4"
 * "RC_RAM1"
 * "RC_RAM2"
 * "RC_RAM3"
 * "RC_RAM4"
 * "RC_RAM5"
 * "RC_SAS1"
 * "RC_TON1"
 * "RC_TON2"
 * "RC_TON3"
 * "RC_TON4"
 * "RC_TON5"
 *
 * Hash: 0x17695002FD8B2AE0 | Since: 323
 * @deprecated Use stats.etGxtLabel(statName, value, save) instead
 */
export declare function statSetGxtLabel(statName: number | string, value: string, save: boolean): boolean;
/**
 * 'value' is a structure to a structure, 'numFields' is how many fields there are in said structure (usually 7).
 *
 * The structure looks like this:
 *
 * int year
 * int month
 * int day
 * int hour
 * int minute
 * int second
 * int millisecond
 *
 * `The decompiled scripts use TIME::GET_POSIX_TIME to fill this structure.`
 *
 * Hash: 0x2C29BFB64F4FCBE4 | Since: 323
 * @deprecated Use stats.etDate(statName, numFields, save) instead
 */
export declare function statSetDate(statName: number | string, numFields: number, save: boolean): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xA87B2335D12531D7 | Since: 323
 * @deprecated Use stats.etString(statName, value, save) instead
 */
export declare function statSetString(statName: number | string, value: string, save: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDB283FDE680FE72E | Since: 323
 * @deprecated Use stats.etPos(statName, pos, save) instead
 */
export declare function statSetPos(statName: number | string, pos: Vector3, save: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x7BBB1B54583ED410 | Since: 323
 * @deprecated Use stats.etMaskedInt(statName, save) instead
 */
export declare function statSetMaskedInt(statName: number | string, save: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8CDDF1E452BABE11 | Since: 323
 * @deprecated Use stats.etUserId(statName, value, save) instead
 */
export declare function statSetUserId(statName: number | string, value: string, save: boolean): boolean;
/**
 * p1 always true.
 *
 * Hash: 0xC2F84B7F9C4D0C61 | Since: 323
 * @deprecated Use stats.etCurrentPosixTime(statName) instead
 */
export declare function statSetCurrentPosixTime(statName: number | string): boolean;
/**
 * p2 appears to always be -1
 *
 *
 * Hash: 0x767FBC2AC802EF3D | Since: 323
 * @deprecated Use stats.statGetInt(statHash) instead
 */
export declare function statGetInt(statHash: number | string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xD7AE6C9C9C6AC54C | Since: 323
 * @deprecated Use stats.statGetFloat(statHash) instead
 */
export declare function statGetFloat(statHash: number | string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x11B5E6D2AE73F48E | Since: 323
 * @deprecated Use stats.statGetBool(statHash) instead
 */
export declare function statGetBool(statHash: number | string): [boolean, boolean];
/**
 * p3 is probably characterSlot or BOOL save, always -1
 *
 * Hash: 0x8B0FACEFC36C824B | Since: 323
 * @deprecated Use stats.statGetDate(statHash, numFields) instead
 */
export declare function statGetDate(statHash: number | string, numFields: number): [boolean, any];
/**
 * p1 is always -1 in the script files
 *
 * Hash: 0xE50384ACC2C3DB74 | Since: 323
 * @deprecated Use stats.statGetString(statHash) instead
 */
export declare function statGetString(statHash: number | string): string;
/**
 * p3 is probably characterSlot or BOOL save, always -1
 *
 * Hash: 0x350F82CCB186AA1B | Since: 323
 * @deprecated Use stats.statGetPos(statName) instead
 */
export declare function statGetPos(statName: number | string): [boolean, number, number, number];
/**
 * p4 is probably characterSlot or BOOL save
 *
 * Hash: 0x655185A06D9EEAAB | Since: 323
 * @deprecated Use stats.statGetMaskedInt(statHash) instead
 */
export declare function statGetMaskedInt(statHash: number | string): [boolean, number];
/**
 * Returns the rockstar ID (user id) value of a given stat. Returns "STAT_UNKNOWN" if the statHash is invalid or the stat has no userId
 *
 * Hash: 0x2365C388E393BBE2 | Since: 323
 * @deprecated Use stats.statGetUserId(statHash) instead
 */
export declare function statGetUserId(statHash: number | string): string;
/**
 * No comment provided
 *
 * Hash: 0x5473D4195058B2E4 | Since: 323
 * @deprecated Use stats.statGetLicensePlate(statName) instead
 */
export declare function statGetLicensePlate(statName: number | string): string;
/**
 * No comment provided
 *
 * Hash: 0x69FF13266D7296DA | Since: 323
 * @deprecated Use stats.etLicensePlate(statName, str) instead
 */
export declare function statSetLicensePlate(statName: number | string, str: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9B5A68C6489E9909 | Since: 323
 * @deprecated Use stats.statIncrement(statName, value) instead
 */
export declare function statIncrement(statName: number | string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5A556B229A169402 | Since: 323
 * @deprecated Use stats.statCommunityStartSynch() instead
 */
export declare function statCommunityStartSynch(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB1D2BB1E1631F5B1 | Since: 323
 * @deprecated Use stats.statCommunitySynchIsPending() instead
 */
export declare function statCommunitySynchIsPending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBED9F5693F34ED17 | Since: 323
 * @deprecated Use stats.statCommunityGetHistory(statName) instead
 */
export declare function statCommunityGetHistory(statName: number | string): [boolean, number];
/**
 * p0 seems to range from 0 to 7
 *
 * Hash: 0x26D7399B9587FE89 | Since: 323
 * @deprecated Use stats.statResetAllOnlineCharacter() instead
 */
export declare function statResetAllOnlineCharacterStats(): void;
/**
 * p0 seems to range from 0 to 7
 *
 * Hash: 0xA78B8FA58200DA56 | Since: 323
 * @deprecated Use stats.statLocalResetAllOnlineCharacter() instead
 */
export declare function statLocalResetAllOnlineCharacterStats(): void;
/**
 * No comment provided
 *
 * Hash: 0xE0E854F5280FB769 | Since: 323
 * @deprecated Use stats.statGetNumberOfDays(statName) instead
 */
export declare function statGetNumberOfDays(statName: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xF2D4B2FE415AAFC3 | Since: 323
 * @deprecated Use stats.statGetNumberOfHours(statName) instead
 */
export declare function statGetNumberOfHours(statName: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x7583B4BE4C5A41B5 | Since: 323
 * @deprecated Use stats.statGetNumberOfMinutes(statName) instead
 */
export declare function statGetNumberOfMinutes(statName: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x2CE056FF3723F00B | Since: 323
 * @deprecated Use stats.statGetNumberOfSeconds(statName) instead
 */
export declare function statGetNumberOfSeconds(statName: number | string): number;
/**
 * Does not take effect immediately, unfortunately.
 *
 * profileSetting seems to only be 936, 937 and 938 in scripts
 *
 * Hash: 0x68F01422BE1D838F | Since: 323
 * @deprecated Use stats.etProfileSettingValue(profileSetting, value) instead
 */
export declare function statSetProfileSettingValue(profileSetting: number, value: number): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0xC01D2470F22CDE5A | Since: 2372
 * @deprecated Use stats.completedCharacterCreation() instead
 */
export declare function statsCompletedCharacterCreation(): void;
/**
 * Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_MASKED_INT"?
 *
 * Hash: 0x94F12ABF9C79E339 | Since: 323
 * @deprecated Use stats.packedStatGetIntStatIndex() instead
 */
export declare function packedStatGetIntStatIndex(): number;
/**
 * No comment provided
 *
 * Hash: 0x61E111E323419E07 | Since: 323
 * @deprecated Use stats.getPackedIntStatKey(index, spStat, charStat, character) instead
 */
export declare function getPackedIntStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
/**
 * No comment provided
 *
 * Hash: 0xD16C2AD6B8E32854 | Since: 323
 * @deprecated Use stats.getPackedTuIntStatKey(index, spStat, charStat, character) instead
 */
export declare function getPackedTuIntStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
/**
 * Needs more research. Gets the stat name of a masked int?
 *
 * section - values used in the decompiled scripts:
 * "_NGPSTAT_INT"
 * "_MP_NGPSTAT_INT"
 * "_MP_LRPSTAT_INT"
 * "_MP_APAPSTAT_INT"
 * "_MP_LR2PSTAT_INT"
 * "_MP_BIKEPSTAT_INT"
 * "_MP_IMPEXPPSTAT_INT"
 * "_MP_GUNRPSTAT_INT"
 * "_NGDLCPSTAT_INT"
 * "_MP_NGDLCPSTAT_INT"
 * "_DLCSMUGCHARPSTAT_INT"
 * "_GANGOPSPSTAT_INT"
 * "_BUSINESSBATPSTAT_INT"
 * "_ARENAWARSPSTAT_INT"
 * "_CASINOPSTAT_INT"
 * "_CASINOHSTPSTAT_INT"
 *
 * Hash: 0x2B4CDCA6F07FF3DA | Since: 323
 * @deprecated Use stats.getPackedNgIntStatKey(index, spStat, charStat, character, section) instead
 */
export declare function getPackedNgIntStatKey(index: number, spStat: boolean, charStat: boolean, character: number, section: string): number;
/**
 * No comment provided
 *
 * Hash: 0xDA7EBFC49AE3F1B0 | Since: 2545
 * @deprecated Use stats.getPackedStatBoolCode(index, characterSlot) instead
 */
export declare function getPackedStatBoolCode(index: number, characterSlot: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0BC900A6FE73770C | Since: 2545
 * @deprecated Use stats.getPackedStatIntCode(index, characterSlot) instead
 */
export declare function getPackedStatIntCode(index: number, characterSlot: number): number;
/**
 * No comment provided
 *
 * Hash: 0xDB8A58AEAA67CD07 | Since: 2545
 * @deprecated Use stats.setPackedStatBoolCode(index, value, characterSlot) instead
 */
export declare function setPackedStatBoolCode(index: number, value: boolean, characterSlot: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1581503AE529CD2E | Since: 2545
 * @deprecated Use stats.setPackedStatIntCode(index, value, characterSlot) instead
 */
export declare function setPackedStatIntCode(index: number, value: number, characterSlot: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5009DFD741329729 | Since: 323
 * @deprecated Use stats.playBackgroundScriptAction(action, value) instead
 */
export declare function playstatsBackgroundScriptAction(action: string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE6A27CDA42887F93 | Since: 2944
 * @deprecated Use stats.playFlowLow(pos, action) instead
 */
export declare function playstatsFlowLow(pos: Vector3, action: string): void;
/**
 * No comment provided
 *
 * Hash: 0xC4493521BAA12CCE | Since: 3095
 * @deprecated Use stats.playFlowMedium(pos, action) instead
 */
export declare function playstatsFlowMedium(pos: Vector3, action: string): void;
/**
 * No comment provided
 *
 * Hash: 0xCFB0E9C3456319EA | Since: 3258
 * @deprecated Use stats.playFlowHigh(pos, action) instead
 */
export declare function playstatsFlowHigh(pos: Vector3, action: string): void;
/**
 * No comment provided
 *
 * Hash: 0x93054C88E6AA7C44 | Since: 323
 * @deprecated Use stats.playNpcInvite() instead
 */
export declare function playstatsNpcInvite(): void;
/**
 * No comment provided
 *
 * Hash: 0x46F917F6B4128FE4 | Since: 323
 * @deprecated Use stats.playAwardXp(amount, _type, category) instead
 */
export declare function playstatsAwardXp(amount: number, _type: number | string, category: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xC7F2DE41D102BFB4 | Since: 323
 * @deprecated Use stats.playRankUp(rank) instead
 */
export declare function playstatsRankUp(rank: number): void;
/**
 * No comment provided
 *
 * Hash: 0x098760C7461724CD | Since: 323
 * @deprecated Use stats.playStartedSessionInOfflinemode() instead
 */
export declare function playstatsStartedSessionInOfflinemode(): void;
/**
 * No comment provided
 *
 * Hash: 0xA071E0ED98F91286 | Since: 323
 * @deprecated Use stats.playActivityDone(activityId) instead
 */
export declare function playstatsActivityDone(activityId: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC5BE134EC7BA96A0 | Since: 323
 * @deprecated Use stats.playLeaveJobChain() instead
 */
export declare function playstatsLeaveJobChain(): void;
/**
 * No comment provided
 *
 * Hash: 0xC19A2925C34D2231 | Since: 323
 * @deprecated Use stats.playMissionStarted() instead
 */
export declare function playstatsMissionStarted(): void;
/**
 * No comment provided
 *
 * Hash: 0x7C4BB33A8CED7324 | Since: 323
 * @deprecated Use stats.playMissionOver() instead
 */
export declare function playstatsMissionOver(): void;
/**
 * No comment provided
 *
 * Hash: 0xC900596A63978C1D | Since: 323
 * @deprecated Use stats.playMissionCheckpoint() instead
 */
export declare function playstatsMissionCheckpoint(): void;
/**
 * No comment provided
 *
 * Hash: 0x71862B1D855F32E1 | Since: 323
 * @deprecated Use stats.playRandomMissionDone(name) instead
 */
export declare function playstatsRandomMissionDone(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0x121FB4DDDC2D5291 | Since: 323
 * @deprecated Use stats.playRosBet(amount, act, player, cm) instead
 */
export declare function playstatsRosBet(amount: number, act: number, player: number | string | Player, cm: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9C375C315099DDE4 | Since: 323
 * @deprecated Use stats.playRaceCheckpoint(p0) instead
 */
export declare function playstatsRaceCheckpoint(p0: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x6DEE77AFF8C21BD1 | Since: 323
 * @deprecated Use stats.playCreateMatchHistoryId2() instead
 */
export declare function playstatsCreateMatchHistoryId2(): [boolean, number, number];
/**
 * No comment provided
 *
 * Hash: 0xBC80E22DED931E3D | Since: 323
 * @deprecated Use stats.playMatchStarted() instead
 */
export declare function playstatsMatchStarted(): void;
/**
 * No comment provided
 *
 * Hash: 0x176852ACAAC173D1 | Since: 323
 * @deprecated Use stats.playShopItem() instead
 */
export declare function playstatsShopItem(): void;
/**
 * No comment provided
 *
 * Hash: 0x1CAE5D2E3F9A07F0 | Since: 323
 * @deprecated Use stats.playCrateDropMissionDone() instead
 */
export declare function playstatsCrateDropMissionDone(): void;
/**
 * No comment provided
 *
 * Hash: 0xAFC7E5E075A96F46 | Since: 323
 * @deprecated Use stats.playCrateCreated() instead
 */
export declare function playstatsCrateCreated(): void;
/**
 * No comment provided
 *
 * Hash: 0xCB00196B31C39EB1 | Since: 323
 * @deprecated Use stats.playHoldUpMissionDone() instead
 */
export declare function playstatsHoldUpMissionDone(): void;
/**
 * No comment provided
 *
 * Hash: 0x2B69F5074C894811 | Since: 323
 * @deprecated Use stats.playImportExportMissionDone() instead
 */
export declare function playstatsImportExportMissionDone(): void;
/**
 * No comment provided
 *
 * Hash: 0xADDD1C754E2E2914 | Since: 323
 * @deprecated Use stats.playRaceToPointMissionDone() instead
 */
export declare function playstatsRaceToPointMissionDone(): void;
/**
 * No comment provided
 *
 * Hash: 0x79AB33F0FBFAC40C | Since: 323
 * @deprecated Use stats.playAcquiredHiddenPackage() instead
 */
export declare function playstatsAcquiredHiddenPackage(): void;
/**
 * No comment provided
 *
 * Hash: 0xDDF24D535060F811 | Since: 323
 * @deprecated Use stats.playWebsiteVisited(scaleformHash) instead
 */
export declare function playstatsWebsiteVisited(scaleformHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x0F71DE29AB2258F1 | Since: 323
 * @deprecated Use stats.playFriendActivity() instead
 */
export declare function playstatsFriendActivity(): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0x69DEA3E9DB727B4C | Since: 323
 * @deprecated Use stats.playOddjobDone(totalTimeMs) instead
 */
export declare function playstatsOddjobDone(totalTimeMs: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBA739D6D5A05D6E7 | Since: 323
 * @deprecated Use stats.playPropChange(p0) instead
 */
export declare function playstatsPropChange(p0: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x34B973047A2268B9 | Since: 323
 * @deprecated Use stats.playClothChange(p0) instead
 */
export declare function playstatsClothChange(p0: number | Ped): void;
/**
 * This is a typo made by R*. It's supposed to be called PLAYSTATS_WEAPON_MOD_CHANGE.
 *
 * Hash: 0xE95C8A1875A02CA4 | Since: 323
 * @deprecated Use stats.playWeaponModeChange(weaponHash, componentHashTo, componentHashFrom) instead
 */
export declare function playstatsWeaponModeChange(weaponHash: number | string, componentHashTo: number | string, componentHashFrom: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x6058665D72302D3F | Since: 323
 * @deprecated Use stats.playCheatApplied(cheat) instead
 */
export declare function playstatsCheatApplied(cheat: string): void;
/**
 * No comment provided
 *
 * Hash: 0xF8C54A461C3E11DC | Since: 323
 * @deprecated Use stats.playJobActivityEnd() instead
 */
export declare function playstatsJobActivityEnd(): [any, any, any, any];
/**
 * No comment provided
 *
 * Hash: 0xF5BB8DAC426A52C0 | Since: 323
 * @deprecated Use stats.playJobBend() instead
 */
export declare function playstatsJobBend(): [any, any, any, any];
/**
 * No comment provided
 *
 * Hash: 0xA736CF7FB7C5BFF4 | Since: 323
 * @deprecated Use stats.playJobLtsEnd() instead
 */
export declare function playstatsJobLtsEnd(): [any, any, any, any];
/**
 * No comment provided
 *
 * Hash: 0x14E0B2D1AD1044E0 | Since: 323
 * @deprecated Use stats.playJobLtsRoundEnd() instead
 */
export declare function playstatsJobLtsRoundEnd(): [any, any, any, any];
/**
 * No comment provided
 *
 * Hash: 0x90D0622866E80445 | Since: 323
 * @deprecated Use stats.playQuickfixTool(element, item) instead
 */
export declare function playstatsQuickfixTool(element: number, item: string): void;
/**
 * No comment provided
 *
 * Hash: 0x5DA3A8DE8CB6226F | Since: 323
 * @deprecated Use stats.playIdleKick(msStoodIdle) instead
 */
export declare function playstatsIdleKick(msStoodIdle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD1032E482629049E | Since: 323
 * @deprecated Use stats.playSetJoinType(joinType) instead
 */
export declare function playstatsSetJoinType(joinType: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF4FF020A08BC8863 | Since: 323
 * @deprecated Use stats.playHeistSaveCheat(hash) instead
 */
export declare function playstatsHeistSaveCheat(hash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x46326E13DA4E0546 | Since: 323
 * @deprecated Use stats.playAppendDirectorMetric() instead
 */
export declare function playstatsAppendDirectorMetric(): any;
/**
 * No comment provided
 *
 * Hash: 0x47B32F5611E6E483 | Since: 463
 * @deprecated Use stats.playAwardBadSport(id) instead
 */
export declare function playstatsAwardBadSport(id: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9572BD4DD6B72122 | Since: 1180
 * @deprecated Use stats.playPegasusAsPersonalAircraft(modelHash) instead
 */
export declare function playstatsPegasusAsPersonalAircraft(modelHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xF96E9EA876D9DC92 | Since: 2802
 * @deprecated Use stats.playShopmenuNav() instead
 */
export declare function playstatsShopmenuNav(): void;
/**
 * No comment provided
 *
 * Hash: 0x6A60E43998228229 | Since: 463
 * @deprecated Use stats.playFmEventChallenges() instead
 */
export declare function playstatsFmEventChallenges(): void;
/**
 * No comment provided
 *
 * Hash: 0xBFAFDB5FAAA5C5AB | Since: 463
 * @deprecated Use stats.playFmEventVehicletarget() instead
 */
export declare function playstatsFmEventVehicletarget(): void;
/**
 * No comment provided
 *
 * Hash: 0x8C9D11605E59D955 | Since: 463
 * @deprecated Use stats.playFmEventUrbanwarfare() instead
 */
export declare function playstatsFmEventUrbanwarfare(): void;
/**
 * No comment provided
 *
 * Hash: 0x3DE3AA516FB126A4 | Since: 463
 * @deprecated Use stats.playFmEventCheckpointcollection() instead
 */
export declare function playstatsFmEventCheckpointcollection(): void;
/**
 * No comment provided
 *
 * Hash: 0xBAA2F0490E146BE8 | Since: 463
 * @deprecated Use stats.playFmEventAtob() instead
 */
export declare function playstatsFmEventAtob(): void;
/**
 * No comment provided
 *
 * Hash: 0x1A7CE7CD3E653485 | Since: 463
 * @deprecated Use stats.playFmEventPennedin() instead
 */
export declare function playstatsFmEventPennedin(): void;
/**
 * No comment provided
 *
 * Hash: 0x419615486BBF1956 | Since: 463
 * @deprecated Use stats.playFmEventPasstheparcel() instead
 */
export declare function playstatsFmEventPasstheparcel(): void;
/**
 * No comment provided
 *
 * Hash: 0x84DFC579C2FC214C | Since: 463
 * @deprecated Use stats.playFmEventHotproperty() instead
 */
export declare function playstatsFmEventHotproperty(): void;
/**
 * No comment provided
 *
 * Hash: 0x0A9C7F36E5D7B683 | Since: 463
 * @deprecated Use stats.playFmEventDeaddrop() instead
 */
export declare function playstatsFmEventDeaddrop(): void;
/**
 * No comment provided
 *
 * Hash: 0x164C5FF663790845 | Since: 463
 * @deprecated Use stats.playFmEventKingofthecastle() instead
 */
export declare function playstatsFmEventKingofthecastle(): void;
/**
 * No comment provided
 *
 * Hash: 0xEDBF6C9B0D2C65C8 | Since: 463
 * @deprecated Use stats.playFmEventCriminaldamage() instead
 */
export declare function playstatsFmEventCriminaldamage(): void;
/**
 * No comment provided
 *
 * Hash: 0x6551B1F7F6CD46EA | Since: 463
 * @deprecated Use stats.playFmEventCompetitiveurbanwarfare() instead
 */
export declare function playstatsFmEventCompetitiveurbanwarfare(): void;
/**
 * No comment provided
 *
 * Hash: 0x2CD90358F67D0AA8 | Since: 463
 * @deprecated Use stats.playFmEventHuntbeast() instead
 */
export declare function playstatsFmEventHuntbeast(): void;
/**
 * No comment provided
 *
 * Hash: 0x203B381133817079 | Since: 393
 * @deprecated Use stats.playPimenuHideOptions() instead
 */
export declare function playstatsPimenuHideOptions(): any;
/**
 * Known text types: NAME_YACHT, NAME_ORG_OFFICE
 *
 * Hash: 0xAA434D7D0A89A95C | Since: 3258
 * @deprecated Use stats.playNamedUserContent(isBoss, bossType, bossId1, bossId2, textType, textString, textSource) instead
 */
export declare function playstatsNamedUserContent(isBoss: boolean, bossType: number, bossId1: number, bossId2: number, textType: number, textString: string, textSource: number): void;
/**
 * No comment provided
 *
 * Hash: 0x117B45156D7EFF2E | Since: 323
 * @deprecated Use stats.leaderboardsGetNumberOfColumns() instead
 */
export declare function leaderboardsGetNumberOfColumns(): number;
/**
 * No comment provided
 *
 * Hash: 0xC4B5467A1886EA7E | Since: 323
 * @deprecated Use stats.leaderboardsGetColumnId() instead
 */
export declare function leaderboardsGetColumnId(): number;
/**
 * No comment provided
 *
 * Hash: 0xBF4FEF46DB7894D3 | Since: 323
 * @deprecated Use stats.leaderboardsGetColumnType() instead
 */
export declare function leaderboardsGetColumnType(): number;
/**
 * No comment provided
 *
 * Hash: 0xA34CB6E6F0DF4A0B | Since: 323
 * @deprecated Use stats.leaderboardsReadClearAll() instead
 */
export declare function leaderboardsReadClearAll(): number;
/**
 * No comment provided
 *
 * Hash: 0x7CCE5C737A665701 | Since: 323
 * @deprecated Use stats.leaderboardsReadClear() instead
 */
export declare function leaderboardsReadClear(): number;
/**
 * No comment provided
 *
 * Hash: 0xAC392C8483342AC2 | Since: 323
 * @deprecated Use stats.leaderboardsReadPending() instead
 */
export declare function leaderboardsReadPending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA31FD15197B192BD | Since: 323
 * @deprecated Use stats.leaderboardsReadAnyPending() instead
 */
export declare function leaderboardsReadAnyPending(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2FB19228983E832C | Since: 323
 * @deprecated Use stats.leaderboardsReadSuccessful() instead
 */
export declare function leaderboardsReadSuccessful(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x918B101666F9CB83 | Since: 323
 * @deprecated Use stats.leaderboards2ReadFriendsByRow() instead
 */
export declare function leaderboards2ReadFriendsByRow(): [boolean, any, any];
/**
 * No comment provided
 *
 * Hash: 0xC30713A383BFBF0E | Since: 323
 * @deprecated Use stats.leaderboards2ReadByHandle() instead
 */
export declare function leaderboards2ReadByHandle(): [boolean, any, any];
/**
 * No comment provided
 *
 * Hash: 0xBA2C7DB0C129449A | Since: 323
 * @deprecated Use stats.leaderboards2ReadByRank() instead
 */
export declare function leaderboards2ReadByRank(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x5CE587FB5A42C8C4 | Since: 323
 * @deprecated Use stats.leaderboards2ReadByRadius() instead
 */
export declare function leaderboards2ReadByRadius(): [boolean, any, any];
/**
 * No comment provided
 *
 * Hash: 0x7EEC7E4F6984A16A | Since: 323
 * @deprecated Use stats.leaderboards2ReadByScoreInt() instead
 */
export declare function leaderboards2ReadByScoreInt(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xE662C8B759D08F3C | Since: 323
 * @deprecated Use stats.leaderboards2ReadByScoreFloat() instead
 */
export declare function leaderboards2ReadByScoreFloat(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xC38DC1E90D22547C | Since: 323
 * @deprecated Use stats.leaderboards2ReadRankPrediction() instead
 */
export declare function leaderboards2ReadRankPrediction(): [boolean, any, any, any];
/**
 * No comment provided
 *
 * Hash: 0xF1AE5DCDBFCA2721 | Since: 323
 * @deprecated Use stats.leaderboards2ReadByPlaform(gamerHandleCsv, platformName) instead
 */
export declare function leaderboards2ReadByPlaform(gamerHandleCsv: string, platformName: string): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xA0F93D5465B3094D | Since: 323
 * @deprecated Use stats.leaderboards2ReadGetRowDataStart() instead
 */
export declare function leaderboards2ReadGetRowDataStart(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x71B008056E5692D6 | Since: 323
 * @deprecated Use stats.leaderboards2ReadGetRowDataEnd() instead
 */
export declare function leaderboards2ReadGetRowDataEnd(): void;
/**
 * No comment provided
 *
 * Hash: 0x34770B9CE0E03B91 | Since: 323
 * @deprecated Use stats.leaderboards2ReadGetRowDataInfo() instead
 */
export declare function leaderboards2ReadGetRowDataInfo(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x88578F6EC36B4A3A | Since: 323
 * @deprecated Use stats.leaderboards2ReadGetRowDataInt() instead
 */
export declare function leaderboards2ReadGetRowDataInt(): number;
/**
 * No comment provided
 *
 * Hash: 0x38491439B6BA7F7D | Since: 323
 * @deprecated Use stats.leaderboards2ReadGetRowDataFloat() instead
 */
export declare function leaderboards2ReadGetRowDataFloat(): number;
/**
 * No comment provided
 *
 * Hash: 0xAE2206545888AE49 | Since: 323
 * @deprecated Use stats.leaderboards2WriteData() instead
 */
export declare function leaderboards2WriteData(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x0BCA1D2C47B0D269 | Since: 323
 * @deprecated Use stats.leaderboardsWriteAddColumn() instead
 */
export declare function leaderboardsWriteAddColumn(): void;
/**
 * No comment provided
 *
 * Hash: 0x2E65248609523599 | Since: 323
 * @deprecated Use stats.leaderboardsWriteAddColumnLong() instead
 */
export declare function leaderboardsWriteAddColumnLong(): void;
/**
 * No comment provided
 *
 * Hash: 0xB9BB18E2C40142ED | Since: 323
 * @deprecated Use stats.leaderboardsCacheDataRow() instead
 */
export declare function leaderboardsCacheDataRow(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xD4B02A6B476E1FDC | Since: 323
 * @deprecated Use stats.leaderboardsClearCacheData() instead
 */
export declare function leaderboardsClearCacheData(): void;
/**
 * No comment provided
 *
 * Hash: 0x8EC74CEB042E7CFF | Since: 323
 * @deprecated Use stats.leaderboardsClearCacheDataId() instead
 */
export declare function leaderboardsClearCacheDataId(): void;
/**
 * No comment provided
 *
 * Hash: 0x9C51349BE6CDFE2C | Since: 323
 * @deprecated Use stats.leaderboardsGetCacheExists() instead
 */
export declare function leaderboardsGetCacheExists(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF04C1C27DA35F6C8 | Since: 323
 * @deprecated Use stats.leaderboardsGetCacheTime() instead
 */
export declare function leaderboardsGetCacheTime(): number;
/**
 * No comment provided
 *
 * Hash: 0x58A651CD201D89AD | Since: 323
 * @deprecated Use stats.leaderboardsGetCacheNumberOfRows() instead
 */
export declare function leaderboardsGetCacheNumberOfRows(): number;
/**
 * No comment provided
 *
 * Hash: 0x9120E8DBA3D69273 | Since: 323
 * @deprecated Use stats.leaderboardsGetCacheDataRow() instead
 */
export declare function leaderboardsGetCacheDataRow(): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0x11FF1C80276097ED | Since: 323
 * @deprecated Use stats.presenceEventUpdatestatInt(statHash, value) instead
 */
export declare function presenceEventUpdatestatInt(statHash: number | string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x30A6614C1F7799B8 | Since: 323
 * @deprecated Use stats.presenceEventUpdatestatFloat(statHash, value) instead
 */
export declare function presenceEventUpdatestatFloat(statHash: number | string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6483C25849031C4F | Since: 323
 * @deprecated Use stats.presenceEventUpdatestatIntWithString(statHash, value, _string) instead
 */
export declare function presenceEventUpdatestatIntWithString(statHash: number | string, value: number, _string: string): void;
/**
 * No comment provided
 *
 * Hash: 0x5EAD2BF6484852E4 | Since: 323
 * @deprecated Use stats.getPlayerHasDrivenAllVehicles() instead
 */
export declare function getPlayerHasDrivenAllVehicles(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC141B8917E0017EC | Since: 323
 * @deprecated Use stats.setHasPostedAllVehiclesDriven() instead
 */
export declare function setHasPostedAllVehiclesDriven(): void;
/**
 * No comment provided
 *
 * Hash: 0xB475F27C6A994D65 | Since: 323
 * @deprecated Use stats.setProfileSettingPrologueComplete() instead
 */
export declare function setProfileSettingPrologueComplete(): void;
/**
 * Sets profile setting 939
 *
 * Hash: 0xC67E2DA1CBE759E2 | Since: 1734
 * @deprecated Use stats.setProfileSettingSpChopMissionComplete() instead
 */
export declare function setProfileSettingSpChopMissionComplete(): void;
/**
 * Sets profile setting 933
 *
 * Hash: 0xF1A1803D3476F215 | Since: 323
 * @deprecated Use stats.setProfileSettingCreatorRacesDone(value) instead
 */
export declare function setProfileSettingCreatorRacesDone(value: number): void;
/**
 * Sets profile setting 934
 *
 * Hash: 0x38BAAA5DD4C9D19F | Since: 323
 * @deprecated Use stats.setProfileSettingCreatorDmDone(value) instead
 */
export declare function setProfileSettingCreatorDmDone(value: number): void;
/**
 * Sets profile setting 935
 *
 * Hash: 0x55384438FC55AD8E | Since: 323
 * @deprecated Use stats.setProfileSettingCreatorCtfDone(value) instead
 */
export declare function setProfileSettingCreatorCtfDone(value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x723C1CE13FBFDB67 | Since: 323
 * @deprecated Use stats.setJobActivityIdStarted(characterSlot) instead
 */
export declare function setJobActivityIdStarted(characterSlot: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0D01D20616FC73FB | Since: 323
 * @deprecated Use stats.setFreemodePrologueDone(characterSlot) instead
 */
export declare function setFreemodePrologueDone(characterSlot: number): void;
/**
 * Sets profile setting 940 and 941
 *
 * Hash: 0x79D310A861697CC9 | Since: 2699
 * @deprecated Use stats.setFreemodeStrandProgressionStatus(profileSetting, settingValue) instead
 */
export declare function setFreemodeStrandProgressionStatus(profileSetting: number, settingValue: number): void;
/**
 * No comment provided
 *
 * Hash: 0x428EAF89E24F6C36 | Since: 323
 * @deprecated Use stats.statNetworkIncrementOnSuicide() instead
 */
export declare function statNetworkIncrementOnSuicide(): void;
/**
 * No comment provided
 *
 * Hash: 0x047CBED6F6F8B63C | Since: 323
 * @deprecated Use stats.etCheatIsActive() instead
 */
export declare function statSetCheatIsActive(): void;
/**
 * No comment provided
 *
 * Hash: 0xC980E62E33DF1D5C | Since: 323
 * @deprecated Use stats.leaderboards2WriteDataForEventType() instead
 */
export declare function leaderboards2WriteDataForEventType(): [boolean, any, any];
/**
 * No comment provided
 *
 * Hash: 0x6F361B8889A792A3 | Since: 323
 * @deprecated Use stats.forceCloudMpDownloadAndOverwriteLocalSave() instead
 */
export declare function forceCloudMpStatsDownloadAndOverwriteLocalSave(): void;
/**
 * No comment provided
 *
 * Hash: 0xC847B43F369AC0B5 | Since: 323
 * @deprecated Use stats.statMigrateClearForRestart() instead
 */
export declare function statMigrateClearForRestart(): void;
/**
 * platformName must be one of the following: ps3, xbox360, ps4, xboxone
 *
 * Hash: 0xA5C80D8E768A9E66 | Since: 323
 * @deprecated Use stats.statMigrateSavegameStart(platformName) instead
 */
export declare function statMigrateSavegameStart(platformName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9A62EC95AE10E011 | Since: 323
 * @deprecated Use stats.statMigrateSavegameGetStatus() instead
 */
export declare function statMigrateSavegameGetStatus(): number;
/**
 * No comment provided
 *
 * Hash: 0x4C89FE2BDEB3F169 | Since: 323
 * @deprecated Use stats.statMigrateCheckAlreadyDone() instead
 */
export declare function statMigrateCheckAlreadyDone(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC6E0E2616A7576BB | Since: 323
 * @deprecated Use stats.statMigrateCheckStart() instead
 */
export declare function statMigrateCheckStart(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5BD5F255321C4AAF | Since: 323
 * @deprecated Use stats.statMigrateCheckGetIsPlatformAvailable() instead
 */
export declare function statMigrateCheckGetIsPlatformAvailable(): number;
/**
 * No comment provided
 *
 * Hash: 0xDEAAF77EB3687E97 | Since: 323
 * @deprecated Use stats.statMigrateCheckGetPlatformStatus() instead
 */
export declare function statMigrateCheckGetPlatformStatus(): [number, any];
/**
 * No comment provided
 *
 * Hash: 0x886913BBEACA68C1 | Since: 323
 * @deprecated Use stats.statGetSaveMigrationStatus() instead
 */
export declare function statGetSaveMigrationStatus(): [number, any];
/**
 * No comment provided
 *
 * Hash: 0x4FEF53183C3C6414 | Since: 323
 * @deprecated Use stats.aveMigrationCancelPendingOperation() instead
 */
export declare function statSaveMigrationCancelPendingOperation(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x567384DFA67029E6 | Since: 323
 * @deprecated Use stats.statGetCancelSaveMigrationStatus() instead
 */
export declare function statGetCancelSaveMigrationStatus(): number;
/**
 * No comment provided
 *
 * Hash: 0x3270F67EED31FBC1 | Since: 323
 * @deprecated Use stats.aveMigrationConsumeContent(contentId, srcPlatform, srcGamerHandle) instead
 */
export declare function statSaveMigrationConsumeContent(contentId: number | string, srcPlatform: string, srcGamerHandle: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCE5AA445ABA8DEE0 | Since: 323
 * @deprecated Use stats.statGetSaveMigrationConsumeContentStatus() instead
 */
export declare function statGetSaveMigrationConsumeContentStatus(): [number, number];
/**
 * No comment provided
 *
 * Hash: 0x98E2BC1CA26287C3 | Since: 323
 * @deprecated Use stats.statEnableTracking() instead
 */
export declare function statEnableStatsTracking(): void;
/**
 * Prevents updates to CStatsMgr (e.g., STAT_SET_* natives)
 *
 * Hash: 0x629526ABA383BCAA | Since: 323
 * @deprecated Use stats.statDisableTracking() instead
 */
export declare function statDisableStatsTracking(): void;
/**
 * No comment provided
 *
 * Hash: 0xBE3DB208333D9844 | Since: 463
 * @deprecated Use stats.statIsTrackingEnabled() instead
 */
export declare function statIsStatsTrackingEnabled(): boolean;
/**
 * enum StatTrackingType
 * {
 * LongestWheelie = 1,
 * LongestStoppie = 2,
 * NoCrashes = 3,
 * HighestSpeed = 4,
 * _MostFlips = 5,
 * _LongestSpin = 6,
 * _HighestJumpReached = 7,
 * LongestJump = 8,
 * _NearMissesNoCrash = 9,
 * LongestFallSurvived = 10,
 * LowestParachute = 11,
 * ReverseDriving = 12,
 * LongestFreefall = 13,
 * VehiclesStolen = 14,
 * _SomeCFireEventCount = 15,
 * _Unk16 = 16,
 * _LowFlyingTime = 17,
 * LowFlying = 18,
 * _InvertedFlyingTime = 19,
 * InvertedFlying = 20,
 * _PlaneSpinCount = 21,
 * MeleeKills = 22, // Players
 * _LongestSniperKill = 23,
 * SniperSkills = 24, // Players
 * DrivebyKills = 25, // Players
 * HeadshotKills = 26, // Players
 * LongestBail = 27,
 * _TotalRammedByCar = 28,
 * NearMissesPrecise = 29,
 * _FreefallTime = 30,
 * Unk31 = 31,
 * }
 *
 * enum StatTrackingValueType
 * {
 * Total,
 * Max,
 * Min
 * }
 *
 * Hash: 0x33D72899E24C3365 | Since: 463
 * @deprecated Use stats.tartRecordStat(statType, valueType) instead
 */
export declare function statStartRecordStat(statType: number, valueType: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA761D4AC6115623D | Since: 463
 * @deprecated Use stats.topRecordStat() instead
 */
export declare function statStopRecordStat(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF11F01D98113536A | Since: 463
 * @deprecated Use stats.statGetRecordedValue() instead
 */
export declare function statGetRecordedValue(): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x8B9CDBD6C566C38C | Since: 944
 * @deprecated Use stats.statIsRecordingStat() instead
 */
export declare function statIsRecordingStat(): boolean;
/**
 * Perform the most near misses with other vehicles in a land vehicle without crashing
 *
 * Hash: 0xE8853FBCE7D8D0D6 | Since: 463
 * @deprecated Use stats.statGetCurrentNearMissNocrashPrecise() instead
 */
export declare function statGetCurrentNearMissNocrashPrecise(): number;
/**
 * Perform the longest wheelie on a motorcycle
 *
 * Hash: 0xA943FD1722E11EFD | Since: 463
 * @deprecated Use stats.statGetCurrentRearWheelDistance() instead
 */
export declare function statGetCurrentRearWheelDistance(): number;
/**
 * Perform the longest stoppie on a motorcycle
 *
 * Hash: 0x84A810B375E69C0E | Since: 463
 * @deprecated Use stats.statGetCurrentFrontWheelDistance() instead
 */
export declare function statGetCurrentFrontWheelDistance(): number;
/**
 * Perform the longest jump in a land vehicle
 *
 * Hash: 0x9EC8858184CD253A | Since: 463
 * @deprecated Use stats.statGetCurrentJumpDistance() instead
 */
export declare function statGetCurrentJumpDistance(): number;
/**
 * Drive the furthest distance in a land vehicle without crashing
 *
 * Hash: 0xBA9749CC94C1FD85 | Since: 463
 * @deprecated Use stats.statGetCurrentDriveNocrashDistance() instead
 */
export declare function statGetCurrentDriveNocrashDistance(): number;
/**
 * Achieve the highest speed in a land vehicle
 *
 * Hash: 0x55A8BECAF28A4EB7 | Since: 463
 * @deprecated Use stats.statGetCurrentSpeed() instead
 */
export declare function statGetCurrentSpeed(): number;
/**
 * Reverse the longest distance without crashing
 *
 * Hash: 0x32CAC93C9DE73D32 | Since: 463
 * @deprecated Use stats.statGetCurrentDrivingReverseDistance() instead
 */
export declare function statGetCurrentDrivingReverseDistance(): number;
/**
 * Fall the longest distance with a parachute before opening it
 *
 * Hash: 0xAFF47709F1D5DCCE | Since: 463
 * @deprecated Use stats.statGetCurrentSkydivingDistance() instead
 */
export declare function statGetCurrentSkydivingDistance(): number;
/**
 * Fly low to the ground for the longest distance
 *
 * Hash: 0x6E0A5253375C4584 | Since: 463
 * @deprecated Use stats.statGetChallengeFlyingDist() instead
 */
export declare function statGetChallengeFlyingDist(): number;
/**
 * No comment provided
 *
 * Hash: 0x1A8EA222F9C67DBB | Since: 463
 * @deprecated Use stats.statGetFlyingAltitude() instead
 */
export declare function statGetFlyingAltitude(): [boolean, number];
/**
 * Or non-flyable area
 *
 * Hash: 0xF9F2922717B819EC | Since: 505
 * @deprecated Use stats.statIsPlayerVehicleAboveOcean() instead
 */
export declare function statIsPlayerVehicleAboveOcean(): boolean;
/**
 * Travel the furthest distance when bailing from a vehicle
 *
 * Hash: 0x0B8B7F74BF061C6D | Since: 463
 * @deprecated Use stats.statGetVehicleBailDistance() instead
 */
export declare function statGetVehicleBailDistance(): number;
/**
 * This function is hard-coded to always return 1.
 *
 * Hash: 0xB3DA2606774A8E2D | Since: 323
 * @deprecated Use stats.statRollbackSaveMigration() instead
 */
export declare function statRollbackSaveMigration(): boolean;
/**
 * Sets profile setting 866
 *
 * Hash: 0xDAC073C7901F9E15 | Since: 323
 * @deprecated Use stats.setHasSpecialeditionContent(value) instead
 */
export declare function setHasSpecialeditionContent(value: number): void;
/**
 * Sets profile setting 501
 *
 * Hash: 0xF6792800AC95350D | Since: 323
 * @deprecated Use stats.setSaveMigrationTransactionIdWarning(transactionId) instead
 */
export declare function setSaveMigrationTransactionIdWarning(transactionId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6BC0ACD0673ACEBE | Since: 573
 * @deprecated Use stats.getBossGoonUuid(characterSlot) instead
 */
export declare function getBossGoonUuid(characterSlot: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8D8ADB562F09A245 | Since: 573
 * @deprecated Use stats.playBwBossonbossdeathmatch() instead
 */
export declare function playstatsBwBossonbossdeathmatch(): void;
/**
 * No comment provided
 *
 * Hash: 0xD1A1EE3B4FA8E760 | Since: 573
 * @deprecated Use stats.playBwYatchattack() instead
 */
export declare function playstatsBwYatchattack(): void;
/**
 * No comment provided
 *
 * Hash: 0x88087EE1F28024AE | Since: 573
 * @deprecated Use stats.playBwHuntTheBoss() instead
 */
export declare function playstatsBwHuntTheBoss(): void;
/**
 * No comment provided
 *
 * Hash: 0xFCC228E07217FCAC | Since: 573
 * @deprecated Use stats.playBwSightseer() instead
 */
export declare function playstatsBwSightseer(): void;
/**
 * No comment provided
 *
 * Hash: 0x678F86D8FC040BDB | Since: 573
 * @deprecated Use stats.playBwAssault() instead
 */
export declare function playstatsBwAssault(): void;
/**
 * No comment provided
 *
 * Hash: 0xA6F54BB2FFCA35EA | Since: 573
 * @deprecated Use stats.playBwBellyOfTheBeast() instead
 */
export declare function playstatsBwBellyOfTheBeast(): void;
/**
 * No comment provided
 *
 * Hash: 0x5FF2C33B13A02A11 | Since: 757
 * @deprecated Use stats.playBwHeadHunter() instead
 */
export declare function playstatsBwHeadHunter(): void;
/**
 * No comment provided
 *
 * Hash: 0x282B6739644F4347 | Since: 757
 * @deprecated Use stats.playBwFragileGoods() instead
 */
export declare function playstatsBwFragileGoods(): void;
/**
 * No comment provided
 *
 * Hash: 0xF06A6F41CB445443 | Since: 757
 * @deprecated Use stats.playBwAirFreight() instead
 */
export declare function playstatsBwAirFreight(): void;
/**
 * No comment provided
 *
 * Hash: 0x7B18DA61F6BAE9D5 | Since: 573
 * @deprecated Use stats.playBcCarJacking() instead
 */
export declare function playstatsBcCarJacking(): void;
/**
 * No comment provided
 *
 * Hash: 0x06EAF70AE066441E | Since: 573
 * @deprecated Use stats.playBcSmashAndGrab() instead
 */
export declare function playstatsBcSmashAndGrab(): void;
/**
 * No comment provided
 *
 * Hash: 0x14EDA9EE27BD1626 | Since: 573
 * @deprecated Use stats.playBcProtectionRacket() instead
 */
export declare function playstatsBcProtectionRacket(): void;
/**
 * No comment provided
 *
 * Hash: 0x930F504203F561C9 | Since: 573
 * @deprecated Use stats.playBcMostWanted() instead
 */
export declare function playstatsBcMostWanted(): void;
/**
 * No comment provided
 *
 * Hash: 0xE3261D791EB44ACB | Since: 573
 * @deprecated Use stats.playBcFindersKeepers() instead
 */
export declare function playstatsBcFindersKeepers(): void;
/**
 * No comment provided
 *
 * Hash: 0x73001E34F85137F8 | Since: 573
 * @deprecated Use stats.playBcPointToPoint() instead
 */
export declare function playstatsBcPointToPoint(): void;
/**
 * No comment provided
 *
 * Hash: 0x53CAE13E9B426993 | Since: 757
 * @deprecated Use stats.playBcCashing() instead
 */
export declare function playstatsBcCashing(): void;
/**
 * No comment provided
 *
 * Hash: 0x7D36291161859389 | Since: 757
 * @deprecated Use stats.playBcSalvage() instead
 */
export declare function playstatsBcSalvage(): void;
/**
 * No comment provided
 *
 * Hash: 0xBE509B0A3693DE8B | Since: 757
 * @deprecated Use stats.playSpentPiCustomLoadout(amount) instead
 */
export declare function playstatsSpentPiCustomLoadout(amount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD6781E42755531F7 | Since: 757
 * @deprecated Use stats.playBuyContrabandMission() instead
 */
export declare function playstatsBuyContrabandMission(): any;
/**
 * No comment provided
 *
 * Hash: 0xC729991A9065376E | Since: 757
 * @deprecated Use stats.playSellContrabandMission() instead
 */
export declare function playstatsSellContrabandMission(): any;
/**
 * No comment provided
 *
 * Hash: 0x2605663BD4F23B5D | Since: 757
 * @deprecated Use stats.playDefendContrabandMission() instead
 */
export declare function playstatsDefendContrabandMission(): any;
/**
 * No comment provided
 *
 * Hash: 0x04D90BA8207ADA2D | Since: 757
 * @deprecated Use stats.playRecoverContrabandMission() instead
 */
export declare function playstatsRecoverContrabandMission(): any;
/**
 * No comment provided
 *
 * Hash: 0x60EEDC12AF66E846 | Since: 757
 * @deprecated Use stats.playHitContrabandDestroyLimit() instead
 */
export declare function playstatsHitContrabandDestroyLimit(): void;
/**
 * No comment provided
 *
 * Hash: 0x3EBEAC6C3F81F6BD | Since: 573
 * @deprecated Use stats.startBeingBoss() instead
 */
export declare function startBeingBoss(): void;
/**
 * No comment provided
 *
 * Hash: 0x96E6D5150DBF1C09 | Since: 573
 * @deprecated Use stats.startBeingGoon() instead
 */
export declare function startBeingGoon(): void;
/**
 * No comment provided
 *
 * Hash: 0xA3C53804BDB68ED2 | Since: 573
 * @deprecated Use stats.endBeingBoss() instead
 */
export declare function endBeingBoss(): void;
/**
 * No comment provided
 *
 * Hash: 0x6BCCF9948492FD85 | Since: 573
 * @deprecated Use stats.endBeingGoon() instead
 */
export declare function endBeingGoon(): void;
/**
 * No comment provided
 *
 * Hash: 0x792271AB35C356A4 | Since: 573
 * @deprecated Use stats.hiredLimo() instead
 */
export declare function hiredLimo(): void;
/**
 * No comment provided
 *
 * Hash: 0xCEA553E35C2246E1 | Since: 573
 * @deprecated Use stats.orderBossVehicle(vehicleHash) instead
 */
export declare function orderBossVehicle(vehicleHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xD1C9B92BDD3F151D | Since: 573
 * @deprecated Use stats.changeUniform() instead
 */
export declare function changeUniform(): void;
/**
 * No comment provided
 *
 * Hash: 0x44919CC079BB60BF | Since: 573
 * @deprecated Use stats.changeGoonLookingForWork() instead
 */
export declare function changeGoonLookingForWork(): void;
/**
 * No comment provided
 *
 * Hash: 0x7033EEFD9B28088E | Since: 678
 * @deprecated Use stats.sendMetricGhostingToPlayer() instead
 */
export declare function sendMetricGhostingToPlayer(): void;
/**
 * No comment provided
 *
 * Hash: 0xAA525DFF66BB82F5 | Since: 757
 * @deprecated Use stats.sendMetricVipPoach() instead
 */
export declare function sendMetricVipPoach(): void;
/**
 * No comment provided
 *
 * Hash: 0x015B03EE1C43E6EC | Since: 757
 * @deprecated Use stats.sendMetricPunishBodyguard() instead
 */
export declare function sendMetricPunishBodyguard(): void;
/**
 * Allows CEventNetworkStuntPerformed to be triggered.
 *
 * Hash: 0x928DBFB892638EF3 | Since: 791
 * @deprecated Use stats.playStartTrackingStunts() instead
 */
export declare function playstatsStartTrackingStunts(): void;
/**
 * Disallows CEventNetworkStuntPerformed to be triggered.
 *
 * Hash: 0x8A800DACCC0DA55D | Since: 791
 * @deprecated Use stats.playStopTrackingStunts() instead
 */
export declare function playstatsStopTrackingStunts(): void;
/**
 * No comment provided
 *
 * Hash: 0xBF371CD2B64212FD | Since: 877
 * @deprecated Use stats.playMissionEnded() instead
 */
export declare function playstatsMissionEnded(): void;
/**
 * No comment provided
 *
 * Hash: 0x7D8BA05688AD64C7 | Since: 944
 * @deprecated Use stats.playImpexpMissionEnded() instead
 */
export declare function playstatsImpexpMissionEnded(): void;
/**
 * No comment provided
 *
 * Hash: 0x0B565B0AAE56A0E8 | Since: 877
 * @deprecated Use stats.playChangeMcRole(role) instead
 */
export declare function playstatsChangeMcRole(role: number): void;
/**
 * No comment provided
 *
 * Hash: 0x28ECB8AC2F607DB2 | Since: 877
 * @deprecated Use stats.playChangeMcOutfit() instead
 */
export declare function playstatsChangeMcOutfit(): void;
/**
 * No comment provided
 *
 * Hash: 0x0A50D2604E05CB94 | Since: 877
 * @deprecated Use stats.playSwitchMcEmblem() instead
 */
export declare function playstatsSwitchMcEmblem(): void;
/**
 * No comment provided
 *
 * Hash: 0xCC25A4553DFBF9EA | Since: 877
 * @deprecated Use stats.playMcRequestBike() instead
 */
export declare function playstatsMcRequestBike(): void;
/**
 * No comment provided
 *
 * Hash: 0xF534D94DFA2EAD26 | Since: 877
 * @deprecated Use stats.playMcKilledRivalMcMember() instead
 */
export declare function playstatsMcKilledRivalMcMember(): void;
/**
 * No comment provided
 *
 * Hash: 0xD558BEC0BBA7E8D2 | Since: 877
 * @deprecated Use stats.playAbandonedMc() instead
 */
export declare function playstatsAbandonedMc(): void;
/**
 * No comment provided
 *
 * Hash: 0x501478855A6074CE | Since: 877
 * @deprecated Use stats.playEarnedMcPoints() instead
 */
export declare function playstatsEarnedMcPoints(): void;
/**
 * No comment provided
 *
 * Hash: 0x03C2EEBB04B3FB72 | Since: 877
 * @deprecated Use stats.playMcFormationEnds() instead
 */
export declare function playstatsMcFormationEnds(): void;
/**
 * No comment provided
 *
 * Hash: 0x8989CBD7B4E82534 | Since: 877
 * @deprecated Use stats.playMcClubhouseActivity() instead
 */
export declare function playstatsMcClubhouseActivity(): void;
/**
 * No comment provided
 *
 * Hash: 0x27AA1C973CACFE63 | Since: 944
 * @deprecated Use stats.playRivalBehavior() instead
 */
export declare function playstatsRivalBehavior(): void;
/**
 * No comment provided
 *
 * Hash: 0xB7257BA2550EA10A | Since: 877
 * @deprecated Use stats.playCopyRankIntoNewSlot() instead
 */
export declare function playstatsCopyRankIntoNewSlot(): void;
/**
 * No comment provided
 *
 * Hash: 0x848B66100EE33B05 | Since: 1011
 * @deprecated Use stats.playDupeDetected() instead
 */
export declare function playstatsDupeDetected(): any;
/**
 * No comment provided
 *
 * Hash: 0x516FC96EB88EEFE5 | Since: 1011
 * @deprecated Use stats.playBanAlert() instead
 */
export declare function playstatsBanAlert(): void;
/**
 * No comment provided
 *
 * Hash: 0x0EACDF8487D5155A | Since: 1103
 * @deprecated Use stats.playGunrunningMissionEnded() instead
 */
export declare function playstatsGunrunningMissionEnded(): any;
/**
 * No comment provided
 *
 * Hash: 0xDAF80797FC534BEC | Since: 1103
 * @deprecated Use stats.playGunrunningRnd() instead
 */
export declare function playstatsGunrunningRnd(): void;
/**
 * No comment provided
 *
 * Hash: 0x316DB59CD14C1774 | Since: 1493
 * @deprecated Use stats.playBusinessBattleEnded() instead
 */
export declare function playstatsBusinessBattleEnded(): void;
/**
 * No comment provided
 *
 * Hash: 0x2D7A9B577E72385E | Since: 1493
 * @deprecated Use stats.playWarehouseMissionEnded() instead
 */
export declare function playstatsWarehouseMissionEnded(): void;
/**
 * No comment provided
 *
 * Hash: 0x830C3A44EB3F2CF9 | Since: 1493
 * @deprecated Use stats.playNightclubMissionEnded() instead
 */
export declare function playstatsNightclubMissionEnded(): void;
/**
 * No comment provided
 *
 * Hash: 0xB26F670685631727 | Since: 1493
 * @deprecated Use stats.playDjUsage() instead
 */
export declare function playstatsDjUsage(): void;
/**
 * No comment provided
 *
 * Hash: 0xC14BD9F5337219B2 | Since: 1493
 * @deprecated Use stats.playMinigameUsage() instead
 */
export declare function playstatsMinigameUsage(): void;
/**
 * No comment provided
 *
 * Hash: 0x35E39E5570358630 | Since: 1493
 * @deprecated Use stats.playStoneHatchetEnded() instead
 */
export declare function playstatsStoneHatchetEnded(): any;
/**
 * No comment provided
 *
 * Hash: 0x320C35147D5B5DDD | Since: 1180
 * @deprecated Use stats.playSmugglerMissionEnded() instead
 */
export declare function playstatsSmugglerMissionEnded(): any;
/**
 * No comment provided
 *
 * Hash: 0xD8AFB345A9C5CCBB | Since: 1290
 * @deprecated Use stats.playFmHeistPrepEnded() instead
 */
export declare function playstatsFmHeistPrepEnded(): any;
/**
 * No comment provided
 *
 * Hash: 0x1E1497D0D2108115 | Since: 1290
 * @deprecated Use stats.playInstancedHeistEnded() instead
 */
export declare function playstatsInstancedHeistEnded(): any;
/**
 * No comment provided
 *
 * Hash: 0x0BC254FF3A911501 | Since: 1290
 * @deprecated Use stats.playDarCheckpoint() instead
 */
export declare function playstatsDarCheckpoint(): any;
/**
 * No comment provided
 *
 * Hash: 0x878FF156D36E9956 | Since: 1290
 * @deprecated Use stats.playEnterSessionPack() instead
 */
export declare function playstatsEnterSessionPack(): any;
/**
 * No comment provided
 *
 * Hash: 0x66C7BB2416ED3FCE | Since: 1493
 * @deprecated Use stats.playDroneUsage() instead
 */
export declare function playstatsDroneUsage(): void;
/**
 * No comment provided
 *
 * Hash: 0x6731DE84A38BFAD0 | Since: 1604
 * @deprecated Use stats.playSpinWheel() instead
 */
export declare function playstatsSpinWheel(): void;
/**
 * No comment provided
 *
 * Hash: 0x6F4F599753F8200A | Since: 1604
 * @deprecated Use stats.playArenaWarsSpectator() instead
 */
export declare function playstatsArenaWarsSpectator(): void;
/**
 * No comment provided
 *
 * Hash: 0xB479D9F0D48A1BC5 | Since: 1604
 * @deprecated Use stats.playArenaWarsEnded() instead
 */
export declare function playstatsArenaWarsEnded(): any;
/**
 * No comment provided
 *
 * Hash: 0x35EEC6C2BC821A71 | Since: 1734
 * @deprecated Use stats.playSwitchPassiveMode() instead
 */
export declare function playstatsSwitchPassiveMode(): void;
/**
 * No comment provided
 *
 * Hash: 0xCD0A8A9338681CF2 | Since: 1734
 * @deprecated Use stats.playCollectiblePickedUp(objectHash, moneyAmount, rpAmount, chipsAmount) instead
 */
export declare function playstatsCollectiblePickedUp(objectHash: number | string, moneyAmount: number, rpAmount: number, chipsAmount: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFCCCAC2BD3C1F180 | Since: 1734
 * @deprecated Use stats.playCasinoStoryMissionEnded() instead
 */
export declare function playstatsCasinoStoryMissionEnded(): void;
/**
 * No comment provided
 *
 * Hash: 0x0999F3F090EC5012 | Since: 1734
 * @deprecated Use stats.playCasinoChip() instead
 */
export declare function playstatsCasinoChip(): void;
/**
 * No comment provided
 *
 * Hash: 0x95101C443A84E7F1 | Since: 1734
 * @deprecated Use stats.playCasinoRoulette() instead
 */
export declare function playstatsCasinoRoulette(): void;
/**
 * No comment provided
 *
 * Hash: 0x3EAE97309727E7AD | Since: 1734
 * @deprecated Use stats.playCasinoBlackjack() instead
 */
export declare function playstatsCasinoBlackjack(): void;
/**
 * No comment provided
 *
 * Hash: 0xF740FB339D471C35 | Since: 1734
 * @deprecated Use stats.playCasinoThreeCardPoker() instead
 */
export declare function playstatsCasinoThreeCardPoker(): void;
/**
 * No comment provided
 *
 * Hash: 0xEF5EC67D392B830A | Since: 1734
 * @deprecated Use stats.playCasinoSlotMachine() instead
 */
export declare function playstatsCasinoSlotMachine(): void;
/**
 * No comment provided
 *
 * Hash: 0x049F059625058A86 | Since: 1734
 * @deprecated Use stats.playCasinoInsideTrack() instead
 */
export declare function playstatsCasinoInsideTrack(): void;
/**
 * No comment provided
 *
 * Hash: 0x0C432C1435F5E4FA | Since: 1734
 * @deprecated Use stats.playCasinoLuckySeven() instead
 */
export declare function playstatsCasinoLuckySeven(): void;
/**
 * No comment provided
 *
 * Hash: 0x6572ABA3DE1197FC | Since: 1734
 * @deprecated Use stats.playCasinoRouletteLight() instead
 */
export declare function playstatsCasinoRouletteLight(): void;
/**
 * No comment provided
 *
 * Hash: 0xD5451C7BF151EB6F | Since: 1734
 * @deprecated Use stats.playCasinoBlackjackLight() instead
 */
export declare function playstatsCasinoBlackjackLight(): void;
/**
 * No comment provided
 *
 * Hash: 0xC9001364B4388F22 | Since: 1734
 * @deprecated Use stats.playCasinoThreeCardPokerLight() instead
 */
export declare function playstatsCasinoThreeCardPokerLight(): void;
/**
 * No comment provided
 *
 * Hash: 0xE60054A0FAE8227F | Since: 1734
 * @deprecated Use stats.playCasinoSlotMachineLight() instead
 */
export declare function playstatsCasinoSlotMachineLight(): void;
/**
 * No comment provided
 *
 * Hash: 0x23A3CBCD50D54E47 | Since: 1734
 * @deprecated Use stats.playCasinoInsideTrackLight() instead
 */
export declare function playstatsCasinoInsideTrackLight(): void;
/**
 * No comment provided
 *
 * Hash: 0x533A7D1EA58DF958 | Since: 1734
 * @deprecated Use stats.playArcadeGame() instead
 */
export declare function playstatsArcadeGame(): void;
/**
 * No comment provided
 *
 * Hash: 0x4FCDBD3F0A813C25 | Since: 1868
 * @deprecated Use stats.playArcadeLoveMatch() instead
 */
export declare function playstatsArcadeLoveMatch(): void;
/**
 * No comment provided
 *
 * Hash: 0x1A0D4A6C336B7BC5 | Since: 1734
 * @deprecated Use stats.playFreemodeCasinoMissionEnded() instead
 */
export declare function playstatsFreemodeCasinoMissionEnded(): any;
/**
 * No comment provided
 *
 * Hash: 0xDFBD93BF2943E29B | Since: 1868
 * @deprecated Use stats.playHeist3Drone() instead
 */
export declare function playstatsHeist3Drone(): void;
/**
 * No comment provided
 *
 * Hash: 0x92FC0EEDFAC04A14 | Since: 1868
 * @deprecated Use stats.playHeist3Hack() instead
 */
export declare function playstatsHeist3Hack(): void;
/**
 * No comment provided
 *
 * Hash: 0x0077F15613D36993 | Since: 1868
 * @deprecated Use stats.playNpcPhone() instead
 */
export declare function playstatsNpcPhone(): any;
/**
 * No comment provided
 *
 * Hash: 0xF9096193DF1F99D4 | Since: 1868
 * @deprecated Use stats.playArcadeCabinet() instead
 */
export declare function playstatsArcadeCabinet(): void;
/**
 * No comment provided
 *
 * Hash: 0x2E0259BABC27A327 | Since: 1868
 * @deprecated Use stats.playHeist3Finale() instead
 */
export declare function playstatsHeist3Finale(): void;
/**
 * No comment provided
 *
 * Hash: 0x53C31853EC9531FF | Since: 1868
 * @deprecated Use stats.playHeist3Prep() instead
 */
export declare function playstatsHeist3Prep(): void;
/**
 * No comment provided
 *
 * Hash: 0x810B5FCC52EC7FF0 | Since: 1868
 * @deprecated Use stats.playMasterControl() instead
 */
export declare function playstatsMasterControl(): void;
/**
 * No comment provided
 *
 * Hash: 0x5BF29846C6527C54 | Since: 1868
 * @deprecated Use stats.playQuitMode() instead
 */
export declare function playstatsQuitMode(): void;
/**
 * No comment provided
 *
 * Hash: 0xC03FAB2C2F92289B | Since: 1868
 * @deprecated Use stats.playMissionVote() instead
 */
export declare function playstatsMissionVote(): void;
/**
 * No comment provided
 *
 * Hash: 0x5CDAED54B34B0ED0 | Since: 1868
 * @deprecated Use stats.playNjvsVote() instead
 */
export declare function playstatsNjvsVote(): void;
/**
 * No comment provided
 *
 * Hash: 0x01D8B04D02F1217F | Since: 3570
 * @deprecated Use stats.playDeathInfo(victimPed, killerPed, mentalState, revengeKill, victimKvK, killerKvK) instead
 */
export declare function playstatsDeathInfo(victimPed: number | Ped, killerPed: number | Ped, mentalState: number, revengeKill: boolean, victimKvK: number, killerKvK: number): void;
/**
 * No comment provided
 *
 * Hash: 0x46A70777BE6CEAB9 | Since: 2545
 * @deprecated Use stats.playFmMissionEnd() instead
 */
export declare function playstatsFmMissionEnd(): void;
/**
 * No comment provided
 *
 * Hash: 0xDFCDB14317A9B361 | Since: 2189
 * @deprecated Use stats.playHeist4Prep() instead
 */
export declare function playstatsHeist4Prep(): void;
/**
 * No comment provided
 *
 * Hash: 0xC1E963C58664B556 | Since: 2189
 * @deprecated Use stats.playHeist4Finale() instead
 */
export declare function playstatsHeist4Finale(): void;
/**
 * No comment provided
 *
 * Hash: 0x2FA3173480008493 | Since: 2189
 * @deprecated Use stats.playHeist4Hack() instead
 */
export declare function playstatsHeist4Hack(): void;
/**
 * No comment provided
 *
 * Hash: 0xD4367D310F079DB0 | Since: 2189
 * @deprecated Use stats.playSubWeap() instead
 */
export declare function playstatsSubWeap(): void;
/**
 * No comment provided
 *
 * Hash: 0x4DC416F246A41FC8 | Since: 2189
 * @deprecated Use stats.playFastTrvl() instead
 */
export declare function playstatsFastTrvl(): void;
/**
 * No comment provided
 *
 * Hash: 0x2818FF6638CB09DE | Since: 2189
 * @deprecated Use stats.playHubEntry() instead
 */
export declare function playstatsHubEntry(): void;
/**
 * No comment provided
 *
 * Hash: 0xD6CA58B3B53A0F22 | Since: 2189
 * @deprecated Use stats.playDjMissionEnded() instead
 */
export declare function playstatsDjMissionEnded(): void;
/**
 * No comment provided
 *
 * Hash: 0x1A67DFBF1F5C3835 | Since: 2372
 * @deprecated Use stats.playRobberyPrep() instead
 */
export declare function playstatsRobberyPrep(): void;
/**
 * No comment provided
 *
 * Hash: 0xBBA55BE9AAAABF44 | Since: 2372
 * @deprecated Use stats.playRobberyFinale() instead
 */
export declare function playstatsRobberyFinale(): void;
/**
 * No comment provided
 *
 * Hash: 0xFA5B74BAB8A7EF99 | Since: 2372
 * @deprecated Use stats.playExtraEvent() instead
 */
export declare function playstatsExtraEvent(): void;
/**
 * No comment provided
 *
 * Hash: 0xFF14D6FEEC507BBE | Since: 2372
 * @deprecated Use stats.playCarclubPoints() instead
 */
export declare function playstatsCarclubPoints(): void;
/**
 * No comment provided
 *
 * Hash: 0x1187CB58D7F3BED7 | Since: 2372
 * @deprecated Use stats.playCarclubChallenge() instead
 */
export declare function playstatsCarclubChallenge(): void;
/**
 * No comment provided
 *
 * Hash: 0x69C922B677621428 | Since: 2372
 * @deprecated Use stats.playCarclubPrize(vehicleModel) instead
 */
export declare function playstatsCarclubPrize(vehicleModel: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x70F52471E758EBAE | Since: 2545
 * @deprecated Use stats.playAwardNav() instead
 */
export declare function playstatsAwardNav(): void;
/**
 * No comment provided
 *
 * Hash: 0x7E5EED10B11CEDBA | Since: 3407
 * @deprecated Use stats.playInitMultiplayer() instead
 */
export declare function playstatsInitMultiplayer(): void;
/**
 * No comment provided
 *
 * Hash: 0xFEA3F7E83C0610FA | Since: 2545
 * @deprecated Use stats.playInstMissionEnd() instead
 */
export declare function playstatsInstMissionEnd(): void;
/**
 * No comment provided
 *
 * Hash: 0x5A46ACE5C4661132 | Since: 2545
 * @deprecated Use stats.playHubExit() instead
 */
export declare function playstatsHubExit(): void;
/**
 * No comment provided
 *
 * Hash: 0x10A691F5756416D0 | Since: 2944
 * @deprecated Use stats.playVehDel(bossId1, bossId2, bossType, vehicleID, reason) instead
 */
export declare function playstatsVehDel(bossId1: number, bossId2: number, bossType: number, vehicleID: number, reason: number): void;
/**
 * No comment provided
 *
 * Hash: 0x887DAD63CF5B7908 | Since: 2699
 * @deprecated Use stats.playInventory() instead
 */
export declare function playstatsInventory(): void;
/**
 * No comment provided
 *
 * Hash: 0x8A23D1324F6B2BAC | Since: 2802
 * @deprecated Use stats.playAcidMissionEnd() instead
 */
export declare function playstatsAcidMissionEnd(): void;
/**
 * No comment provided
 *
 * Hash: 0xCEACCF0550FDC5BA | Since: 2802
 * @deprecated Use stats.playAcidRnd() instead
 */
export declare function playstatsAcidRnd(): void;
/**
 * No comment provided
 *
 * Hash: 0xEC9553A178E8F1D1 | Since: 2802
 * @deprecated Use stats.playIdle() instead
 */
export declare function playstatsIdle(): void;
/**
 * No comment provided
 *
 * Hash: 0x48FAC5DC7AC6EA99 | Since: 2802
 * @deprecated Use stats.playPlayerStyle() instead
 */
export declare function playstatsPlayerStyle(): void;
/**
 * No comment provided
 *
 * Hash: 0x7EA06F970F999394 | Since: 2944
 * @deprecated Use stats.playRandomEvent() instead
 */
export declare function playstatsRandomEvent(): void;
/**
 * No comment provided
 *
 * Hash: 0x5649CA22AF74E019 | Since: 3095
 * @deprecated Use stats.playAlert() instead
 */
export declare function playstatsAlert(): any;
/**
 * No comment provided
 *
 * Hash: 0xBD642335A732F1A8 | Since: 2944
 * @deprecated Use stats.playAttritionStageEnd() instead
 */
export declare function playstatsAttritionStageEnd(): void;
/**
 * No comment provided
 *
 * Hash: 0x961D4157B9B428DB | Since: 2944
 * @deprecated Use stats.playShowroomNav(entity) instead
 */
export declare function playstatsShowroomNav(entity: number | string): void;
/**
 * Data struct contains various tunables related to test drives at Simeons Showroom or Luxury Showcase.
 *
 * Hash: 0x151D6C04C9E2742F | Since: 2944
 * @deprecated Use stats.playShowroomOverview() instead
 */
export declare function playstatsShowroomOverview(): any;
/**
 * No comment provided
 *
 * Hash: 0xE6D323A5E9EFFB76 | Since: 3258
 * @deprecated Use stats.playPimenuNav() instead
 */
export declare function playstatsPimenuNav(): any;
/**
 * No comment provided
 *
 * Hash: 0xBEB0D930B3CCE4D5 | Since: 3258
 * @deprecated Use stats.playRecoverVehicle() instead
 */
export declare function playstatsRecoverVehicle(): any;
/**
 * No comment provided
 *
 * Hash: 0x574A7808450E141C | Since: 3570
 * @deprecated Use stats.playScriptEventFpom() instead
 */
export declare function playstatsScriptEventFpom(): any;
/**
 * No comment provided
 *
 * Hash: 0xBD6E84632DD4CB3F | Since: 323
 * @deprecated Use streaming.loadAllObjectsNow() instead
 */
export declare function loadAllObjectsNow(): void;
/**
 * No comment provided
 *
 * Hash: 0x4448EB75B4904BDB | Since: 323
 * @deprecated Use streaming.loadScene(pos) instead
 */
export declare function loadScene(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xC4582015556D1C46 | Since: 323
 * @deprecated Use streaming.networkUpdateLoadScene() instead
 */
export declare function networkUpdateLoadScene(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x41CA5A33160EA4AB | Since: 323
 * @deprecated Use streaming.isNetworkLoadingScene() instead
 */
export declare function isNetworkLoadingScene(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE37B76C387BE28ED | Since: 323
 * @deprecated Use streaming.setInteriorActive(interiorID, toggle) instead
 */
export declare function setInteriorActive(interiorID: number, toggle: boolean): void;
/**
 * Request a model to be loaded into memory.
 *
 *
 * Hash: 0x963D27A58DF860AC | Since: 323
 * @deprecated Use streaming.requestModel(model) instead
 */
export declare function requestModel(model: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xA0261AEF7ACFC51E | Since: 323
 * @deprecated Use streaming.requestMenuPedModel(model) instead
 */
export declare function requestMenuPedModel(model: number | string): void;
/**
 * Checks if the specified model has loaded into memory.
 *
 * Hash: 0x98A4EB5D89A0C952 | Since: 323
 * @deprecated Use streaming.hasModelLoaded(model) instead
 */
export declare function hasModelLoaded(model: number | string): boolean;
/**
 * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "V_FIB01_cur_elev");`
 * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");`
 * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "V_Office_gnd_lifts");`
 * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "limbo");`
 * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "v_fib01_jan_elev");`
 * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");`
 *
 * Hash: 0x8A7A40100EDFEC58 | Since: 323
 * @deprecated Use streaming.requestModelsInRoom(interior, roomName) instead
 */
export declare function requestModelsInRoom(interior: number, roomName: string): void;
/**
 * Unloads model from memory
 *
 * Hash: 0xE532F5D78798DAAB | Since: 323
 * @deprecated Use streaming.setModelAsNoLongerNeeded(model) instead
 */
export declare function setModelAsNoLongerNeeded(model: number | string): void;
/**
 * Check if model is in cdimage(rpf)
 *
 * Hash: 0x35B9E0803292B641 | Since: 323
 * @deprecated Use streaming.isModelInCdimage(model) instead
 */
export declare function isModelInCdimage(model: number | string): boolean;
/**
 * Returns whether the specified model exists in the game.
 *
 * Hash: 0xC0296A2EDF545E92 | Since: 323
 * @deprecated Use streaming.isModelValid(model) instead
 */
export declare function isModelValid(model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x75816577FEA6DAD5 | Since: 1103
 * @deprecated Use streaming.isModelAPed(model) instead
 */
export declare function isModelAPed(model: number | string): boolean;
/**
 * Returns whether the specified model represents a vehicle.
 *
 * Hash: 0x19AAC8F07BFEC53E | Since: 323
 * @deprecated Use streaming.isModelAVehicle(model) instead
 */
export declare function isModelAVehicle(model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x07503F7948F491A7 | Since: 323
 * @deprecated Use streaming.requestCollisionAtCoord(pos) instead
 */
export declare function requestCollisionAtCoord(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x923CB32A3B874FCB | Since: 323
 * @deprecated Use streaming.requestCollisionForModel(model) instead
 */
export declare function requestCollisionForModel(model: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x22CCA434E368F03A | Since: 323
 * @deprecated Use streaming.hasCollisionForModelLoaded(model) instead
 */
export declare function hasCollisionForModelLoaded(model: number | string): boolean;
/**
 * Alias of REQUEST_COLLISION_AT_COORD.
 *
 * Hash: 0xC9156DC11411A9EA | Since: 323
 * @deprecated Use streaming.requestAdditionalCollisionAtCoord(pos) instead
 */
export declare function requestAdditionalCollisionAtCoord(pos: Vector3): void;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x2DA49C3B79856961 | Since: 323
 * @deprecated Use streaming.doesAnimDictExist(animDict) instead
 */
export declare function doesAnimDictExist(animDict: string): boolean;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0xD3BD40951412FEF6 | Since: 323
 * @deprecated Use streaming.requestAnimDict(animDict) instead
 */
export declare function requestAnimDict(animDict: string): void;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0xD031A9162D01088C | Since: 323
 * @deprecated Use streaming.hasAnimDictLoaded(animDict) instead
 */
export declare function hasAnimDictLoaded(animDict: string): boolean;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0xF66A602F829E2A06 | Since: 323
 * @deprecated Use streaming.removeAnimDict(animDict) instead
 */
export declare function removeAnimDict(animDict: string): void;
/**
 * Starts loading the specified animation set. An animation set provides movement animations for a ped. See SET_PED_MOVEMENT_CLIPSET.
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
 *
 * Hash: 0x6EA47DAE7FAD0EED | Since: 323
 * @deprecated Use streaming.requestAnimSet(animSet) instead
 */
export declare function requestAnimSet(animSet: string): void;
/**
 * Gets whether the specified animation set has finished loading. An animation set provides movement animations for a ped. See SET_PED_MOVEMENT_CLIPSET.
 *
 * Animation set and clip set are synonymous.
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
 *
 * Hash: 0xC4EA073D86FB29B0 | Since: 323
 * @deprecated Use streaming.hasAnimSetLoaded(animSet) instead
 */
export declare function hasAnimSetLoaded(animSet: string): boolean;
/**
 * Unloads the specified animation set. An animation set provides movement animations for a ped. See SET_PED_MOVEMENT_CLIPSET.
 *
 * Animation set and clip set are synonymous.
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
 *
 * Hash: 0x16350528F93024B3 | Since: 323
 * @deprecated Use streaming.removeAnimSet(animSet) instead
 */
export declare function removeAnimSet(animSet: string): void;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
 *
 * Hash: 0xD2A71E1A77418A49 | Since: 323
 * @deprecated Use streaming.requestClipSet(clipSet) instead
 */
export declare function requestClipSet(clipSet: string): void;
/**
 * Alias for HAS_ANIM_SET_LOADED.
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
 *
 * Hash: 0x318234F4F3738AF3 | Since: 323
 * @deprecated Use streaming.hasClipSetLoaded(clipSet) instead
 */
export declare function hasClipSetLoaded(clipSet: string): boolean;
/**
 * Alias for REMOVE_ANIM_SET.
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Full list of movement clipsets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/movementClipsetsCompact.json
 *
 * Hash: 0x01F73A131C18CD94 | Since: 323
 * @deprecated Use streaming.removeClipSet(clipSet) instead
 */
export declare function removeClipSet(clipSet: string): void;
/**
 * Exemple: REQUEST_IPL("TrevorsTrailerTrash");
 *
 * Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
 *
 * Hash: 0x41B4893843BBDB74 | Since: 323
 * @deprecated Use streaming.requestIpl(iplName) instead
 */
export declare function requestIpl(iplName: string): void;
/**
 * Removes an IPL from the map.
 *
 * Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
 *
 * Example:
 * C#:
 * Function.Call(Hash.REMOVE_IPL, "trevorstrailertidy");
 *
 * C++:
 * `STREAMING::REMOVE_IPL("trevorstrailertidy");`
 *
 * iplName = Name of IPL you want to remove.
 *
 * Hash: 0xEE6C5AD3ECE0A82D | Since: 323
 * @deprecated Use streaming.removeIpl(iplName) instead
 */
export declare function removeIpl(iplName: string): void;
/**
 * Full list of IPLs and interior entity sets by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/ipls.json
 *
 * Hash: 0x88A741E44A2B3495 | Since: 323
 * @deprecated Use streaming.isIplActive(iplName) instead
 */
export declare function isIplActive(iplName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6E0C692677008888 | Since: 323
 * @deprecated Use streaming.setStreaming(toggle) instead
 */
export declare function setStreaming(toggle: boolean): void;
/**
 * 0 - default
 * 1 - HeistIsland
 *
 * Hash: 0x7E3F55ED251B76D3 | Since: 2189
 * @deprecated Use streaming.loadGlobalWaterFile(waterType) instead
 */
export declare function loadGlobalWaterFile(waterType: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF741BD853611592D | Since: 2189
 * @deprecated Use streaming.getGlobalWaterFile() instead
 */
export declare function getGlobalWaterFile(): number;
/**
 * No comment provided
 *
 * Hash: 0x717CD6E6FAEBBEDC | Since: 323
 * @deprecated Use streaming.setGamePausesFor(toggle) instead
 */
export declare function setGamePausesForStreaming(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x77B5F9A36BF96710 | Since: 323
 * @deprecated Use streaming.setReducePedModelBudget(toggle) instead
 */
export declare function setReducePedModelBudget(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x80C527893080CCF3 | Since: 323
 * @deprecated Use streaming.setReduceVehicleModelBudget(toggle) instead
 */
export declare function setReduceVehicleModelBudget(toggle: boolean): void;
/**
 * This is a NOP function. It does nothing at all.
 *
 * Hash: 0x42CBE54462D92634 | Since: 323
 * @deprecated Use streaming.setDitchPoliceModels(toggle) instead
 */
export declare function setDitchPoliceModels(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x4060057271CEBC89 | Since: 323
 * @deprecated Use streaming.getNumberOfRequests() instead
 */
export declare function getNumberOfStreamingRequests(): number;
/**
 * maps script name (thread + 0xD0) by lookup via scriptfx.dat - does nothing when script name is empty
 *
 * Hash: 0x944955FB2A3935C8 | Since: 323
 * @deprecated Use streaming.requestPtfxAsset() instead
 */
export declare function requestPtfxAsset(): void;
/**
 * No comment provided
 *
 * Hash: 0xCA7D9B86ECA7481B | Since: 323
 * @deprecated Use streaming.hasPtfxAssetLoaded() instead
 */
export declare function hasPtfxAssetLoaded(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x88C6814073DD4A73 | Since: 323
 * @deprecated Use streaming.removePtfxAsset() instead
 */
export declare function removePtfxAsset(): void;
/**
 * From the b678d decompiled scripts:
 *
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("core_snow");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("fm_mission_controler");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("proj_xmas_firework");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_apartment_mp");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_biolab_heist");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_fireworks");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_parachute");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_wheelsmoke");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_cig_plane");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_creator");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_tankbattle");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_ornate_heist");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_prison_break_heist_station");`
 *
 * Hash: 0xB80D8756B4668AB6 | Since: 323
 * @deprecated Use streaming.requestNamedPtfxAsset(fxName) instead
 */
export declare function requestNamedPtfxAsset(fxName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x8702416E512EC454 | Since: 323
 * @deprecated Use streaming.hasNamedPtfxAssetLoaded(fxName) instead
 */
export declare function hasNamedPtfxAssetLoaded(fxName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5F61EBBE1A00F96D | Since: 323
 * @deprecated Use streaming.removeNamedPtfxAsset(fxName) instead
 */
export declare function removeNamedPtfxAsset(fxName: string): void;
/**
 * No comment provided
 *
 * Hash: 0xCB9E1EB3BE2AF4E9 | Since: 323
 * @deprecated Use streaming.setVehiclePopulationBudget() instead
 */
export declare function setVehiclePopulationBudget(): void;
/**
 * Control how many new (ambient?) peds will spawn in the game world.
 * Range for p0 seems to be 0-3, where 0 is none and 3 is the normal level.
 *
 * Hash: 0x8C95333CFC3340F3 | Since: 323
 * @deprecated Use streaming.setPedPopulationBudget() instead
 */
export declare function setPedPopulationBudget(): void;
/**
 * No comment provided
 *
 * Hash: 0x31B73D1EA9F01DA2 | Since: 323
 * @deprecated Use streaming.clearFocus() instead
 */
export declare function clearFocus(): void;
/**
 * Override the area where the camera will render the terrain.
 * p3, p4 and p5 are usually set to 0.0
 *
 *
 * Hash: 0xBB7454BAFF08FE25 | Since: 323
 * @deprecated Use streaming.setFocusPosAndVel(pos, offsetX, offsetY, offsetZ) instead
 */
export declare function setFocusPosAndVel(pos: Vector3, offsetX: number, offsetY: number, offsetZ: number): void;
/**
 * It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.
 *
 * Hash: 0x198F77705FA0931D | Since: 323
 * @deprecated Use streaming.setFocusEntity(entity) instead
 */
export declare function setFocusEntity(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x2DDFF3FB9075D747 | Since: 323
 * @deprecated Use streaming.isEntityFocus(entity) instead
 */
export declare function isEntityFocus(entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0811381EF5062FEC | Since: 323
 * @deprecated Use streaming.setRestoreFocusEntity(p0) instead
 */
export declare function setRestoreFocusEntity(p0: number | Entity): void;
/**
 * Possible p0 values:
 *
 * "prologue"
 * "Prologue_Main"
 *
 * Hash: 0xAF12610C644A35C9 | Since: 323
 * @deprecated Use streaming.setMapdatacullboxEnabled(name, toggle) instead
 */
export declare function setMapdatacullboxEnabled(name: string, toggle: boolean): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * Hash: 0x4E52E752C76E7E7A | Since: 323
 * @deprecated Use streaming.setAllMapdataCulled() instead
 */
export declare function setAllMapdataCulled(): void;
/**
 * Always returns zero.
 *
 * Hash: 0x219C7B8D53E429FD | Since: 323
 * @deprecated Use streaming.streamvolCreateSphere(pos, rad) instead
 */
export declare function streamvolCreateSphere(pos: Vector3, rad: number): number;
/**
 * Always returns zero.
 *
 * Hash: 0x1F3F018BC3AFA77C | Since: 323
 * @deprecated Use streaming.streamvolCreateFrustum() instead
 */
export declare function streamvolCreateFrustum(): number;
/**
 * Always returns zero.
 *
 * Hash: 0x0AD9710CEE2F590F | Since: 323
 * @deprecated Use streaming.streamvolCreateLine() instead
 */
export declare function streamvolCreateLine(): number;
/**
 * No comment provided
 *
 * Hash: 0x1EE7D8DF4425F053 | Since: 323
 * @deprecated Use streaming.streamvolDelete(unused) instead
 */
export declare function streamvolDelete(unused: any): void;
/**
 * No comment provided
 *
 * Hash: 0x7D41E9D2D17C5B2D | Since: 323
 * @deprecated Use streaming.streamvolHasLoaded(unused) instead
 */
export declare function streamvolHasLoaded(unused: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0x07C313F94746702C | Since: 323
 * @deprecated Use streaming.streamvolIsValid(unused) instead
 */
export declare function streamvolIsValid(unused: any): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBC9823AB80A3DCAC | Since: 323
 * @deprecated Use streaming.isStreamvolActive() instead
 */
export declare function isStreamvolActive(): boolean;
/**
 * `radius` value is usually between `3f` and `7000f` in original 1868 scripts.
 * `p7` is 0, 1, 2, 3 or 4 used in decompiled scripts, 0 is by far the most common.
 * Returns True if success, used only 7 times in decompiled scripts of 1868
 *
 * Hash: 0x212A8D0D2BABFAC2 | Since: 323
 * @deprecated Use streaming.newLoadSceneStart(pos, offsetX, offsetY, offsetZ, radius) instead
 */
export declare function newLoadSceneStart(pos: Vector3, offsetX: number, offsetY: number, offsetZ: number, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xACCFB4ACF53551B0 | Since: 323
 * @deprecated Use streaming.newLoadSceneStartSphere(pos, radius) instead
 */
export declare function newLoadSceneStartSphere(pos: Vector3, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC197616D221FF4A4 | Since: 323
 * @deprecated Use streaming.newLoadSceneStop() instead
 */
export declare function newLoadSceneStop(): void;
/**
 * No comment provided
 *
 * Hash: 0xA41A05B6CB741B85 | Since: 323
 * @deprecated Use streaming.isNewLoadSceneActive() instead
 */
export declare function isNewLoadSceneActive(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x01B8247A7A8B9AD1 | Since: 323
 * @deprecated Use streaming.isNewLoadSceneLoaded() instead
 */
export declare function isNewLoadSceneLoaded(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x71E7B2E657449AAD | Since: 323
 * @deprecated Use streaming.isSafeToStartPlayerSwitch() instead
 */
export declare function isSafeToStartPlayerSwitch(): boolean;
/**
 * // this enum comes directly from R* so don't edit this
 * enum ePlayerSwitchTypes
 * {
 * SWITCH_TYPE_AUTO,
 * SWITCH_TYPE_LONG,
 * SWITCH_TYPE_MEDIUM,
 * SWITCH_TYPE_SHORT
 * };
 *
 * Use GET_IDEAL_PLAYER_SWITCH_TYPE for the best switch type.
 *
 * ----------------------------------------------------
 *
 * Examples from the decompiled scripts:
 *
 * `STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 0, 3);`
 * `STREAMING::START_PLAYER_SWITCH(l_832._f3, PLAYER::PLAYER_PED_ID(), 2050, 3);`
 * `STREAMING::START_PLAYER_SWITCH(PLAYER::PLAYER_PED_ID(), l_832._f3, 1024, 3);`
 * `STREAMING::START_PLAYER_SWITCH(g_141F27, PLAYER::PLAYER_PED_ID(), 513, v_14);`
 *
 * Note: DO NOT, use SWITCH_TYPE_LONG with flag 513. It leaves you stuck in the clouds. You'll have to call STOP_PLAYER_SWITCH() to return to your ped.
 *
 * Flag 8 w/ SWITCH_TYPE_LONG will zoom out 3 steps, then zoom in 2/3 steps and stop on the 3rd and just hang there.
 * Flag 8 w/ SWITCH_TYPE_MEDIUM will zoom out 1 step, and just hang there.
 *
 * Hash: 0xFAA23F2CBA159D67 | Since: 323
 * @deprecated Use streaming.startPlayerSwitch(_from, to, flags, switchType) instead
 */
export declare function startPlayerSwitch(_from: number | Ped, to: number | Ped, flags: number, switchType: number): void;
/**
 * No comment provided
 *
 * Hash: 0x95C0A5BBDC189AA1 | Since: 323
 * @deprecated Use streaming.stopPlayerSwitch() instead
 */
export declare function stopPlayerSwitch(): void;
/**
 * Returns true if the player is currently switching, false otherwise.
 * (When the camera is in the sky moving from Trevor to Franklin for example)
 *
 * Hash: 0xD9D2CFFF49FAB35F | Since: 323
 * @deprecated Use streaming.isPlayerSwitchInProgress() instead
 */
export declare function isPlayerSwitchInProgress(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB3C94A90D9FC9E62 | Since: 323
 * @deprecated Use streaming.getPlayerSwitchType() instead
 */
export declare function getPlayerSwitchType(): number;
/**
 * x1, y1, z1 -- Coords of your ped model
 * x2, y2, z2 -- Coords of the ped you want to switch to
 *
 * Hash: 0xB5D7B26B45720E05 | Since: 323
 * @deprecated Use streaming.getIdealPlayerSwitchType(x1, y1, z1, x2, y2, z2) instead
 */
export declare function getIdealPlayerSwitchType(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
/**
 * No comment provided
 *
 * Hash: 0x470555300D10B2A5 | Since: 323
 * @deprecated Use streaming.getPlayerSwitchState() instead
 */
export declare function getPlayerSwitchState(): number;
/**
 * No comment provided
 *
 * Hash: 0x20F898A5D9782800 | Since: 323
 * @deprecated Use streaming.getPlayerShortSwitchState() instead
 */
export declare function getPlayerShortSwitchState(): number;
/**
 * No comment provided
 *
 * Hash: 0x5F2013F8BC24EE69 | Since: 323
 * @deprecated Use streaming.setPlayerShortSwitchStyle() instead
 */
export declare function setPlayerShortSwitchStyle(): void;
/**
 * No comment provided
 *
 * Hash: 0x78C0D93253149435 | Since: 323
 * @deprecated Use streaming.getPlayerSwitchJumpCutIndex() instead
 */
export declare function getPlayerSwitchJumpCutIndex(): number;
/**
 * No comment provided
 *
 * Hash: 0xC208B673CE446B61 | Since: 323
 * @deprecated Use streaming.setPlayerSwitchOutro(cameraCoordX, cameraCoordY, cameraCoordZ, camRotationX, camRotationY, camRotationZ, camFov, camFarClip, rotationOrder) instead
 */
export declare function setPlayerSwitchOutro(cameraCoordX: number, cameraCoordY: number, cameraCoordZ: number, camRotationX: number, camRotationY: number, camRotationZ: number, camFov: number, camFarClip: number, rotationOrder: number): void;
/**
 * All names can be found in playerswitchestablishingshots.meta
 *
 * Hash: 0x0FDE9DBFC0A6BC65 | Since: 323
 * @deprecated Use streaming.setPlayerSwitchEstablishingShot(name) instead
 */
export declare function setPlayerSwitchEstablishingShot(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0x43D1680C6D19A8E9 | Since: 323
 * @deprecated Use streaming.allowPlayerSwitchPan() instead
 */
export declare function allowPlayerSwitchPan(): void;
/**
 * No comment provided
 *
 * Hash: 0x74DE2E8739086740 | Since: 323
 * @deprecated Use streaming.allowPlayerSwitchOutro() instead
 */
export declare function allowPlayerSwitchOutro(): void;
/**
 * No comment provided
 *
 * Hash: 0x8E2A065ABDAE6994 | Since: 323
 * @deprecated Use streaming.allowPlayerSwitchAscent() instead
 */
export declare function allowPlayerSwitchAscent(): void;
/**
 * No comment provided
 *
 * Hash: 0xAD5FDF34B81BFE79 | Since: 323
 * @deprecated Use streaming.allowPlayerSwitchDescent() instead
 */
export declare function allowPlayerSwitchDescent(): void;
/**
 * No comment provided
 *
 * Hash: 0xDFA80CB25D0A19B3 | Since: 323
 * @deprecated Use streaming.isSwitchReadyForDescent() instead
 */
export declare function isSwitchReadyForDescent(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD4793DFF3AF2ABCD | Since: 323
 * @deprecated Use streaming.enableSwitchPauseBeforeDescent() instead
 */
export declare function enableSwitchPauseBeforeDescent(): void;
/**
 * No comment provided
 *
 * Hash: 0xBD605B8E0E18B3BB | Since: 323
 * @deprecated Use streaming.disableSwitchOutroFx() instead
 */
export declare function disableSwitchOutroFx(): void;
/**
 * doesn't act normally when used on mount chilliad
 * Flags is a bitflag:
 * 2^n - Enabled Functionality:
 * 0 - Skip camera rotate up
 * 3 - Wait for SET_PLAYER_SWITCH_ESTABLISHING_SHOT / hang at last step. You will still need to run 0x74DE2E8739086740 to exit "properly" and then STOP_PLAYER_SWITCH
 * 6 - Invert Switch Direction (false = out, true = in)
 * 8 - Hang above ped
 *
 * switchType: 0 - 3
 * 0: 1 step towards ped
 * 1: 3 steps out from ped
 * 2: 1 step out from ped
 * 3: 1 step towards ped
 *
 * Hash: 0xAAB3200ED59016BC | Since: 323
 * @deprecated Use streaming.switchToMultiFirstpart(ped, flags, switchType) instead
 */
export declare function switchToMultiFirstpart(ped: number | Ped, flags: number, switchType: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD8295AF639FD9CB8 | Since: 323
 * @deprecated Use streaming.switchToMultiSecondpart(ped) instead
 */
export declare function switchToMultiSecondpart(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x933BBEEB8C61B5F4 | Since: 323
 * @deprecated Use streaming.isSwitchToMultiFirstpartFinished() instead
 */
export declare function isSwitchToMultiFirstpartFinished(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x08C2D6C52A3104BB | Since: 323
 * @deprecated Use streaming.getPlayerSwitchInterpOutDuration() instead
 */
export declare function getPlayerSwitchInterpOutDuration(): number;
/**
 * No comment provided
 *
 * Hash: 0x5B48A06DD0E792A5 | Since: 323
 * @deprecated Use streaming.getPlayerSwitchInterpOutCurrentTime() instead
 */
export declare function getPlayerSwitchInterpOutCurrentTime(): number;
/**
 * No comment provided
 *
 * Hash: 0x5B74EA8CFD5E3E7E | Since: 323
 * @deprecated Use streaming.isSwitchSkippingDescent() instead
 */
export declare function isSwitchSkippingDescent(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1E9057A74FD73E23 | Since: 323
 * @deprecated Use streaming.setSceneTracksCamPosThisFrame() instead
 */
export declare function setSceneStreamingTracksCamPosThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x0C15B0E443B2349D | Since: 323
 * @deprecated Use streaming.getLodscale() instead
 */
export declare function getLodscale(): number;
/**
 * This allows you to override "extended distance scaling" setting. Needs to be called each frame.
 * Max scaling seems to be 200.0, normal is 1.0
 * See https://gfycat.com/DetailedHauntingIncatern
 *
 * Hash: 0xA76359FC80B2438E | Since: 323
 * @deprecated Use streaming.overrideLodscaleThisFrame(scaling) instead
 */
export declare function overrideLodscaleThisFrame(scaling: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBED8CA5FF5E04113 | Since: 323
 * @deprecated Use streaming.remapLodscaleRangeThisFrame() instead
 */
export declare function remapLodscaleRangeThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x472397322E92A856 | Since: 323
 * @deprecated Use streaming.suppressHdMapThisFrame() instead
 */
export declare function suppressHdMapStreamingThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x40AEFD1A244741F2 | Since: 323
 * @deprecated Use streaming.setRenderHdOnly(toggle) instead
 */
export declare function setRenderHdOnly(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x03F1A106BDA7DD3E | Since: 323
 * @deprecated Use streaming.forceAllowTimeBasedFadingThisFrame() instead
 */
export declare function forceAllowTimeBasedFadingThisFrame(): void;
/**
 * No comment provided
 *
 * Hash: 0x95A7DABDDBB78AE7 | Since: 323
 * @deprecated Use streaming.iplGroupSwapStart(iplName1, iplName2) instead
 */
export declare function iplGroupSwapStart(iplName1: string, iplName2: string): void;
/**
 * No comment provided
 *
 * Hash: 0x63EB2B972A218CAC | Since: 323
 * @deprecated Use streaming.iplGroupSwapCancel() instead
 */
export declare function iplGroupSwapCancel(): void;
/**
 * No comment provided
 *
 * Hash: 0xFB199266061F820A | Since: 323
 * @deprecated Use streaming.iplGroupSwapIsReady() instead
 */
export declare function iplGroupSwapIsReady(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF4A0DADB70F57FA6 | Since: 323
 * @deprecated Use streaming.iplGroupSwapFinish() instead
 */
export declare function iplGroupSwapFinish(): void;
/**
 * No comment provided
 *
 * Hash: 0x5068F488DDB54DD8 | Since: 323
 * @deprecated Use streaming.iplGroupSwapIsActive() instead
 */
export declare function iplGroupSwapIsActive(): boolean;
/**
 * This native is used to attribute the SRL that BEGIN_SRL is going to load. This is usually used for 'in-game' cinematics (not cutscenes but camera stuff) instead of SET_FOCUS_POS_AND_VEL because it loads a specific area of the map which is pretty useful when the camera moves from distant areas.
 * For instance, GTA:O opening cutscene.
 * https://pastebin.com/2EeKVeLA : a list of SRL found in srllist.meta
 * https://pastebin.com/zd9XYUWY here is the content of a SRL file opened with codewalker.
 *
 * Hash: 0x3D245789CE12982C | Since: 323
 * @deprecated Use streaming.prefetchSrl(srl) instead
 */
export declare function prefetchSrl(srl: string): void;
/**
 * Returns true when the srl from BEGIN_SRL is loaded.
 *
 * Hash: 0xD0263801A4C5B0BB | Since: 323
 * @deprecated Use streaming.isSrlLoaded() instead
 */
export declare function isSrlLoaded(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9BADDC94EF83B823 | Since: 323
 * @deprecated Use streaming.beginSrl() instead
 */
export declare function beginSrl(): void;
/**
 * Clear the current srl and stop rendering the area selected by PREFETCH_SRL and started with BEGIN_SRL.
 *
 * Hash: 0x0A41540E63C9EE17 | Since: 323
 * @deprecated Use streaming.endSrl() instead
 */
export declare function endSrl(): void;
/**
 * No comment provided
 *
 * Hash: 0xA74A541C6884E7B8 | Since: 323
 * @deprecated Use streaming.setSrlTime() instead
 */
export declare function setSrlTime(): void;
/**
 * No comment provided
 *
 * Hash: 0xEF39EE20C537E98C | Since: 323
 * @deprecated Use streaming.setSrlPostCutsceneCamera() instead
 */
export declare function setSrlPostCutsceneCamera(): void;
/**
 * No comment provided
 *
 * Hash: 0xBEB2D9A1D9A8F55A | Since: 323
 * @deprecated Use streaming.setSrlReadaheadTimes() instead
 */
export declare function setSrlReadaheadTimes(): void;
/**
 * No comment provided
 *
 * Hash: 0x20C6C7E4EB082A7F | Since: 323
 * @deprecated Use streaming.setSrlLongJumpMode() instead
 */
export declare function setSrlLongJumpMode(): void;
/**
 * No comment provided
 *
 * Hash: 0xF8155A7F03DDFC8E | Since: 323
 * @deprecated Use streaming.setSrlForcePrestream() instead
 */
export declare function setSrlForcePrestream(): void;
/**
 * No comment provided
 *
 * Hash: 0xB85F26619073E775 | Since: 323
 * @deprecated Use streaming.setHdArea(pos, radius) instead
 */
export declare function setHdArea(pos: Vector3, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCE58B1CFB9290813 | Since: 323
 * @deprecated Use streaming.clearHdArea() instead
 */
export declare function clearHdArea(): void;
/**
 * No comment provided
 *
 * Hash: 0xB5A4DB34FE89B88A | Since: 323
 * @deprecated Use streaming.initCreatorBudget() instead
 */
export declare function initCreatorBudget(): void;
/**
 * No comment provided
 *
 * Hash: 0xCCE26000E9A6FAD7 | Since: 323
 * @deprecated Use streaming.shutdownCreatorBudget() instead
 */
export declare function shutdownCreatorBudget(): void;
/**
 * No comment provided
 *
 * Hash: 0x0BC3144DEB678666 | Since: 323
 * @deprecated Use streaming.addModelToCreatorBudget(modelHash) instead
 */
export declare function addModelToCreatorBudget(modelHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF086AD9354FAC3A3 | Since: 323
 * @deprecated Use streaming.removeModelFromCreatorBudget(modelHash) instead
 */
export declare function removeModelFromCreatorBudget(modelHash: number | string): void;
/**
 * 0.0 = no memory used
 * 1.0 = all memory used
 *
 * Maximum model memory (as defined in common\data\missioncreatordata.meta) is 100 MiB
 *
 * Hash: 0x3D3D8B3BE5A83D35 | Since: 323
 * @deprecated Use streaming.getUsedCreatorBudget() instead
 */
export declare function getUsedCreatorBudget(): number;
/**
 * Enables the specified island. For more information, see islandhopper.meta
 *
 * Hash: 0x9A9D1BA639675CF1 | Since: 2189
 * @deprecated Use streaming.setIslandEnabled(name, toggle) instead
 */
export declare function setIslandEnabled(name: string, toggle: boolean): void;
/**
 * Stand still (?)
 *
 * Hash: 0xE73A266DB0CA9042 | Since: 323
 * @deprecated Use task.pause(ped, ms) instead
 */
export declare function taskPause(ped: number | Ped, ms: number): void;
/**
 * Makes the specified ped stand still for (time) milliseconds.
 *
 * Hash: 0x919BE13EED931959 | Since: 323
 * @deprecated Use task.standStill(ped, time) instead
 */
export declare function taskStandStill(ped: number | Ped, time: number): void;
/**
 * Definition is wrong. This has 4 parameters (Not sure when they were added. v350 has 2, v678 has 4).
 *
 * v350: Ped ped, bool unused
 * v678: Ped ped, bool unused, bool flag1, bool flag2
 *
 * flag1 = super jump, flag2 = do nothing if flag1 is false and doubles super jump height if flag1 is true.
 *
 * Hash: 0x0AE4086104E067B1 | Since: 323
 * @deprecated Use task.jump(ped, usePlayerLaunchForce, doSuperJump, useFullSuperJumpForce) instead
 */
export declare function taskJump(ped: number | Ped, usePlayerLaunchForce: boolean, doSuperJump: boolean, useFullSuperJumpForce: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3EB1FE9E8E908E15 | Since: 323
 * @deprecated Use task.cower(ped, duration) instead
 */
export declare function taskCower(ped: number | Ped, duration: number): void;
/**
 * In the scripts, p3 was always -1.
 *
 * p3 seems to be duration or timeout of turn animation.
 * Also facingPed can be 0 or -1 so ped will just raise hands up.
 *
 * Hash: 0xF2EAB31979A7F910 | Since: 323
 * @deprecated Use task.handsUp(ped, duration, facingPed, timeToFacePed, flags) instead
 */
export declare function taskHandsUp(ped: number | Ped, duration: number, facingPed: number | Ped, timeToFacePed: number, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA98FCAFD7893C834 | Since: 323
 * @deprecated Use task.updateHandsUpDuration(ped, duration) instead
 */
export declare function updateTaskHandsUpDuration(ped: number | Ped, duration: number): void;
/**
 * The given ped will try to open the nearest door to 'seat'.
 * Example: telling the ped to open the door for the driver seat does not necessarily mean it will open the driver door, it may choose to open the passenger door instead if that one is closer.
 *
 * Hash: 0x965791A9A488A062 | Since: 323
 * @deprecated Use task.openVehicleDoor(ped, vehicle, timeOut, seat, speed) instead
 */
export declare function taskOpenVehicleDoor(ped: number | Ped, vehicle: number | Vehicle, timeOut: number, seat: number, speed: number): void;
/**
 * speed 1.0 = walk, 2.0 = run
 * p5 1 = normal, 3 = teleport to vehicle, 16 = teleport directly into vehicle
 * p6 is always 0
 *
 * Usage of seat
 * -1 = driver
 * 0 = passenger
 * 1 = left back seat
 * 2 = right back seat
 * 3 = outside left
 * 4 = outside right
 *
 * Hash: 0xC20E50AA46D09CA8 | Since: 323
 * @deprecated Use task.enterVehicle(ped, vehicle, timeout, seat, speed, flag, overrideEntryClipsetName) instead
 */
export declare function taskEnterVehicle(ped: number | Ped, vehicle: number | Vehicle, timeout: number, seat: number, speed: number, flag: number, overrideEntryClipsetName: string): void;
/**
 * Flags from decompiled scripts:
 * 0 = normal exit and closes door.
 * 1 = normal exit and closes door.
 * 16 = teleports outside, door kept closed.
 * 64 = normal exit and closes door, maybe a bit slower animation than 0.
 * 256 = normal exit but does not close the door.
 * 4160 = ped is throwing himself out, even when the vehicle is still.
 * 262144 = ped moves to passenger seat first, then exits normally
 *
 * Others to be tried out: 320, 512, 131072.
 *
 * Hash: 0xD3DBCE61A490BE02 | Since: 323
 * @deprecated Use task.leaveVehicle(ped, vehicle, flags) instead
 */
export declare function taskLeaveVehicle(ped: number | Ped, vehicle: number | Vehicle, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9C00E77AF14B2DFF | Since: 323
 * @deprecated Use task.getOffBoat(ped, boat) instead
 */
export declare function taskGetOffBoat(ped: number | Ped, boat: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x601736CFE536B0A0 | Since: 323
 * @deprecated Use task.skyDive(ped, instant) instead
 */
export declare function taskSkyDive(ped: number | Ped, instant: boolean): void;
/**
 * Second parameter is unused.
 *
 * second parameter was for jetpack in the early stages of gta and the hard coded code is now removed
 *
 * Hash: 0xD2F1C53C97EE81AB | Since: 323
 * @deprecated Use task.parachute(ped, giveParachuteItem, instant) instead
 */
export declare function taskParachute(ped: number | Ped, giveParachuteItem: boolean, instant: boolean): void;
/**
 * `makes ped parachute to coords x y z. Works well with PATHFIND::GET_SAFE_COORD_FOR_PED`
 *
 * Hash: 0xB33E291AFA6BD03A | Since: 323
 * @deprecated Use task.parachuteToTarget(ped, pos) instead
 */
export declare function taskParachuteToTarget(ped: number | Ped, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xC313379AF0FCEDA7 | Since: 323
 * @deprecated Use task.setParachuteTarget(ped, pos) instead
 */
export declare function setParachuteTaskTarget(ped: number | Ped, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x0729BAC1B8C64317 | Since: 323
 * @deprecated Use task.setParachuteThrust(ped, thrust) instead
 */
export declare function setParachuteTaskThrust(ped: number | Ped, thrust: number): void;
/**
 * minHeightAboveGround: the minimum height above ground the heli must be at before the ped can start rappelling
 *
 * Only appears twice in the scripts.
 *
 * `TASK::TASK_RAPPEL_FROM_HELI(PLAYER::PLAYER_PED_ID(), 10.0f);`
 * `TASK::TASK_RAPPEL_FROM_HELI(a_0, 10.0f);`
 *
 * Hash: 0x09693B0312F91649 | Since: 323
 * @deprecated Use task.rappelFromHeli(ped, minHeightAboveGround) instead
 */
export declare function taskRappelFromHeli(ped: number | Ped, minHeightAboveGround: number): void;
/**
 * info about driving modes: https://gtaforums.com/topic/822314-guide-driving-styles/
 *
 * Hash: 0xE2A2AA2F659D77A7 | Since: 323
 * @deprecated Use task.vehicleDriveToCoord(ped, vehicle, pos, speed, vehicleModel, drivingMode, stopRange, straightLineDistance) instead
 */
export declare function taskVehicleDriveToCoord(ped: number | Ped, vehicle: number | Vehicle, pos: Vector3, speed: number, vehicleModel: number | string, drivingMode: number, stopRange: number, straightLineDistance: number): void;
/**
 * No comment provided
 *
 * Hash: 0x158BB33F920D360C | Since: 323
 * @deprecated Use task.vehicleDriveToCoordLongrange(ped, vehicle, pos, speed, driveMode, stopRange) instead
 */
export declare function taskVehicleDriveToCoordLongrange(ped: number | Ped, vehicle: number | Vehicle, pos: Vector3, speed: number, driveMode: number, stopRange: number): void;
/**
 * No comment provided
 *
 * Hash: 0x480142959D337D00 | Since: 323
 * @deprecated Use task.vehicleDriveWander(ped, vehicle, speed, drivingStyle) instead
 */
export declare function taskVehicleDriveWander(ped: number | Ped, vehicle: number | Vehicle, speed: number, drivingStyle: number): void;
/**
 * p6 always -1
 * p7 always 10.0
 * p8 always 1
 *
 * Hash: 0x304AE42E357B8C7E | Since: 323
 * @deprecated Use task.followToOffsetOfEntity(ped, entity, offsetX, offsetY, offsetZ, movementSpeed, timeout, stoppingRange, persistFollowing) instead
 */
export declare function taskFollowToOffsetOfEntity(ped: number | Ped, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, movementSpeed: number, timeout: number, stoppingRange: number, persistFollowing: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD76B57B44F1E6F8B | Since: 323
 * @deprecated Use task.goStraightToCoord(ped, pos, speed, timeout, targetHeading, distanceToSlide) instead
 */
export declare function taskGoStraightToCoord(ped: number | Ped, pos: Vector3, speed: number, timeout: number, targetHeading: number, distanceToSlide: number): void;
/**
 * No comment provided
 *
 * Hash: 0x61E360B7E040D12E | Since: 323
 * @deprecated Use task.goStraightToCoordRelativeToEntity(ped, entity, pos, moveBlendRatio, time) instead
 */
export declare function taskGoStraightToCoordRelativeToEntity(ped: number | Ped, entity: number | Entity, pos: Vector3, moveBlendRatio: number, time: number): void;
/**
 * Makes the specified ped achieve the specified heading.
 *
 * pedHandle: The handle of the ped to assign the task to.
 * heading: The desired heading.
 * timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is cancelled, and the ped will stay at the heading it managed to reach in the time.
 *
 * Hash: 0x93B93A37987F1F3D | Since: 323
 * @deprecated Use task.achieveHeading(ped, heading, timeout) instead
 */
export declare function taskAchieveHeading(ped: number | Ped, heading: number, timeout: number): void;
/**
 * MulleKD19: Clears the current point route. Call this before TASK_EXTEND_ROUTE and TASK_FOLLOW_POINT_ROUTE.
 *
 * Hash: 0x841142A1376E9006 | Since: 323
 * @deprecated Use task.flushRoute() instead
 */
export declare function taskFlushRoute(): void;
/**
 * MulleKD19: Adds a new point to the current point route. Call TASK_FLUSH_ROUTE before the first call to this. Call TASK_FOLLOW_POINT_ROUTE to make the Ped go the route.
 *
 * A maximum of 8 points can be added.
 *
 * Hash: 0x1E7889778264843A | Since: 323
 * @deprecated Use task.extendRoute(pos) instead
 */
export declare function taskExtendRoute(pos: Vector3): void;
/**
 * MulleKD19: Makes the ped go on the created point route.
 *
 * ped: The ped to give the task to.
 * speed: The speed to move at in m/s.
 * int: Unknown. Can be 0, 1, 2 or 3.
 *
 * Example:
 * TASK_FLUSH_ROUTE();
 * TASK_EXTEND_ROUTE(0f, 0f, 70f);
 * TASK_EXTEND_ROUTE(10f, 0f, 70f);
 * TASK_EXTEND_ROUTE(10f, 10f, 70f);
 * TASK_FOLLOW_POINT_ROUTE(GET_PLAYER_PED(), 1f, 0);
 *
 * Hash: 0x595583281858626E | Since: 323
 * @deprecated Use task.followPointRoute(ped, speed, mode) instead
 */
export declare function taskFollowPointRoute(ped: number | Ped, speed: number, mode: number): void;
/**
 * The entity will move towards the target until time is over (duration) or get in target's range (distance). p5 and p6 are unknown, but you could leave p5 = 1073741824 or 100 or even 0 (didn't see any difference but on the decompiled scripts, they use 1073741824 mostly) and p6 = 0
 *
 * Note: I've only tested it on entity -> ped and target -> vehicle. It could work differently on other entities, didn't try it yet.
 *
 * `Example: TASK::TASK_GO_TO_ENTITY(pedHandle, vehicleHandle, 5000, 4.0, 100, 1073741824, 0)`
 *
 * Ped will run towards the vehicle for 5 seconds and stop when time is over or when he gets 4 meters(?) around the vehicle (with duration = -1, the task duration will be ignored).
 *
 * enum EGOTO_ENTITY_SCRIPT_FLAGS
 * {
 * EGOTO_ENTITY_NEVER_SLOW_FOR_PATH_LENGTH = 0x01,
 * };
 *
 * Hash: 0x6A071245EB0D1882 | Since: 323
 * @deprecated Use task.goToEntity(entity, target, duration, distance, moveBlendRatio, slowDownDistance, flags) instead
 */
export declare function taskGoToEntity(entity: number | Entity, target: number | Entity, duration: number, distance: number, moveBlendRatio: number, slowDownDistance: number, flags: number): void;
/**
 * Makes the specified ped flee the specified distance from the specified position.
 *
 * Hash: 0x94587F17E9C365D5 | Since: 323
 * @deprecated Use task.smartFleeCoord(ped, pos, distance, time, preferPavements, quitIfOutOfRange) instead
 */
export declare function taskSmartFleeCoord(ped: number | Ped, pos: Vector3, distance: number, time: number, preferPavements: boolean, quitIfOutOfRange: boolean): void;
/**
 * Makes a ped run away from another ped (fleeTarget).
 *
 * distance = ped will flee this distance.
 * fleeTime = ped will flee for this amount of time, set to "-1" to flee forever
 *
 * Hash: 0x22B0D0E37CCB840D | Since: 323
 * @deprecated Use task.smartFleePed(ped, fleeTarget, safeDistance, fleeTime, preferPavements, updateToNearestHatedPed) instead
 */
export declare function taskSmartFleePed(ped: number | Ped, fleeTarget: number | Ped, safeDistance: number, fleeTime: number, preferPavements: boolean, updateToNearestHatedPed: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x72C896464915D1B1 | Since: 323
 * @deprecated Use task.reactAndFleePed(ped, fleeTarget) instead
 */
export declare function taskReactAndFleePed(ped: number | Ped, fleeTarget: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x452419CBD838065B | Since: 323
 * @deprecated Use task.shockingEventReact(ped, eventHandle) instead
 */
export declare function taskShockingEventReact(ped: number | Ped, eventHandle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE054346CA3A0F315 | Since: 323
 * @deprecated Use task.wanderInArea(ped, pos, radius, minimalLength, timeBetweenWalks) instead
 */
export declare function taskWanderInArea(ped: number | Ped, pos: Vector3, radius: number, minimalLength: number, timeBetweenWalks: number): void;
/**
 * Makes ped walk around the area.
 *
 * set p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration.
 *
 * Hash: 0xBB9CE077274F6A1B | Since: 323
 * @deprecated Use task.wanderStandard(ped, heading, flags) instead
 */
export declare function taskWanderStandard(ped: number | Ped, heading: number, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6919A2F136426098 | Since: 1868
 * @deprecated Use task.wanderSpecific(ped, conditionalAnimGroupStr, conditionalAnimStr, heading) instead
 */
export declare function taskWanderSpecific(ped: number | Ped, conditionalAnimGroupStr: string, conditionalAnimStr: string, heading: number): void;
/**
 * Modes:
 * 0 - ignore heading
 * 1 - park forward
 * 2 - park backwards
 *
 * Depending on the angle of approach, the vehicle can park at the specified heading or at its exact opposite (-180) angle.
 *
 * Radius seems to define how close the vehicle has to be -after parking- to the position for this task considered completed. If the value is too small, the vehicle will try to park again until it's exactly where it should be. 20.0 Works well but lower values don't, like the radius is measured in centimeters or something.
 *
 * Hash: 0x0F3E34E968EA374E | Since: 323
 * @deprecated Use task.vehiclePark(ped, vehicle, pos, heading, mode, radius, keepEngineOn) instead
 */
export declare function taskVehiclePark(ped: number | Ped, vehicle: number | Vehicle, pos: Vector3, heading: number, mode: number, radius: number, keepEngineOn: boolean): void;
/**
 * known "killTypes" are: "AR_stealth_kill_knife" and "AR_stealth_kill_a".
 *
 * Hash: 0xAA5DC05579D60BD9 | Since: 323
 * @deprecated Use task.stealthKill(killer, target, stealthKillActionResultHash, desiredMoveBlendRatio, stealthFlags) instead
 */
export declare function taskStealthKill(killer: number | Ped, target: number | Ped, stealthKillActionResultHash: number | string, desiredMoveBlendRatio: number, stealthFlags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x965FEC691D55E9BF | Since: 323
 * @deprecated Use task.plantBomb(ped, pos, heading) instead
 */
export declare function taskPlantBomb(ped: number | Ped, pos: Vector3, heading: number): void;
/**
 * No comment provided
 *
 * Hash: 0x60A19CF85FF4CEFA | Since: 3407
 * @deprecated Use task.sharkCircleCoord(ped, pos, moveBlendRatio, radius) instead
 */
export declare function taskSharkCircleCoord(ped: number | Ped, pos: Vector3, moveBlendRatio: number, radius: number): void;
/**
 * If no timeout, set timeout to -1.
 *
 * Hash: 0x15D3A79D4E44B913 | Since: 323
 * @deprecated Use task.followNavMeshToCoord(ped, pos, moveBlendRatio, time, targetRadius, flags, targetHeading) instead
 */
export declare function taskFollowNavMeshToCoord(ped: number | Ped, pos: Vector3, moveBlendRatio: number, time: number, targetRadius: number, flags: number, targetHeading: number): void;
/**
 * No comment provided
 *
 * Hash: 0x17F58B88D085DBAC | Since: 323
 * @deprecated Use task.followNavMeshToCoordAdvanced(ped, pos, moveBlendRatio, time, targetRadius, flags, slideToCoordHeading, maxSlopeNavigable, clampMaxSearchDistance, targetHeading) instead
 */
export declare function taskFollowNavMeshToCoordAdvanced(ped: number | Ped, pos: Vector3, moveBlendRatio: number, time: number, targetRadius: number, flags: number, slideToCoordHeading: number, maxSlopeNavigable: number, clampMaxSearchDistance: number, targetHeading: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8E06A6FE76C9EFF4 | Since: 323
 * @deprecated Use task.setPedPathCanUseClimbovers(ped, Toggle) instead
 */
export declare function setPedPathCanUseClimbovers(ped: number | Ped, Toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x77A5B103C87F476E | Since: 323
 * @deprecated Use task.setPedPathCanUseLadders(ped, Toggle) instead
 */
export declare function setPedPathCanUseLadders(ped: number | Ped, Toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE361C5C71C431A4F | Since: 323
 * @deprecated Use task.setPedPathCanDropFromHeight(ped, Toggle) instead
 */
export declare function setPedPathCanDropFromHeight(ped: number | Ped, Toggle: boolean): void;
/**
 * Default modifier is 1.0, minimum is 0.0 and maximum is 10.0.
 *
 * Hash: 0x88E32DB8C1A4AA4B | Since: 323
 * @deprecated Use task.setPedPathClimbCostModifier(ped, modifier) instead
 */
export declare function setPedPathClimbCostModifier(ped: number | Ped, modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF35425A4204367EC | Since: 323
 * @deprecated Use task.setPedPathMayEnterWater(ped, mayEnterWater) instead
 */
export declare function setPedPathMayEnterWater(ped: number | Ped, mayEnterWater: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x38FE1EC73743793C | Since: 323
 * @deprecated Use task.setPedPathPreferToAvoidWater(ped, avoidWater) instead
 */
export declare function setPedPathPreferToAvoidWater(ped: number | Ped, avoidWater: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x4455517B28441E60 | Since: 323
 * @deprecated Use task.setPedPathAvoidFire(ped, avoidFire) instead
 */
export declare function setPedPathAvoidFire(ped: number | Ped, avoidFire: boolean): void;
/**
 * Needs to be looped! And yes, it does work and is not a hash collision.
 * Birds will try to reach the given height.
 *
 * Hash: 0x6C6B148586F934F7 | Since: 323
 * @deprecated Use task.setGlobalMinBirdFlightHeight(height) instead
 */
export declare function setGlobalMinBirdFlightHeight(height: number): void;
/**
 * Looks like the last parameter returns true if the path has been calculated, while the first returns the remaining distance to the end of the path.
 * Return value of native is the same as GET_NAVMESH_ROUTE_RESULT
 * Looks like the native returns an int for the path's state:
 * 1 - ???
 * 2 - ???
 * 3 - Finished Generating
 *
 * Hash: 0xC6F5C0BCDC74D62D | Since: 323
 * @deprecated Use task.getNavmeshRouteDistanceRemaining(ped) instead
 */
export declare function getNavmeshRouteDistanceRemaining(ped: number | Ped): [number, number, boolean];
/**
 * See GET_NAVMESH_ROUTE_DISTANCE_REMAINING for more details.
 *
 * Hash: 0x632E831F382A0FA8 | Since: 323
 * @deprecated Use task.getNavmeshRouteResult(ped) instead
 */
export declare function getNavmeshRouteResult(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x3E38E28A1D80DDF6 | Since: 323
 * @deprecated Use task.isControlledVehicleUnableToGetToRoad(ped) instead
 */
export declare function isControlledVehicleUnableToGetToRoad(ped: number | Ped): boolean;
/**
 * example from fm_mission_controller
 *
 * `TASK::TASK_GO_TO_COORD_ANY_MEANS(l_649, sub_f7e86(-1, 0), 1.0, 0, 0, 786603, 0xbf800000);`
 *
 *
 * Hash: 0x5BC448CB78FA3E88 | Since: 323
 * @deprecated Use task.goToCoordAnyMeans(ped, pos, moveBlendRatio, vehicle, useLongRangeVehiclePathing, drivingFlags, maxRangeToShootTargets) instead
 */
export declare function taskGoToCoordAnyMeans(ped: number | Ped, pos: Vector3, moveBlendRatio: number, vehicle: number | Vehicle, useLongRangeVehiclePathing: boolean, drivingFlags: number, maxRangeToShootTargets: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1DD45F9ECFDB1BC9 | Since: 323
 * @deprecated Use task.goToCoordAnyMeansExtraParams(ped, pos, moveBlendRatio, vehicle, useLongRangeVehiclePathing, drivingFlags, maxRangeToShootTargets, extraVehToTargetDistToPreferVehicle, driveStraightLineDistance, extraFlags, warpTimerMS) instead
 */
export declare function taskGoToCoordAnyMeansExtraParams(ped: number | Ped, pos: Vector3, moveBlendRatio: number, vehicle: number | Vehicle, useLongRangeVehiclePathing: boolean, drivingFlags: number, maxRangeToShootTargets: number, extraVehToTargetDistToPreferVehicle: number, driveStraightLineDistance: number, extraFlags: number, warpTimerMS: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB8ECD61F531A7B02 | Since: 323
 * @deprecated Use task.goToCoordAnyMeansExtraParamsWithCruiseSpeed(ped, pos, moveBlendRatio, vehicle, useLongRangeVehiclePathing, drivingFlags, maxRangeToShootTargets, extraVehToTargetDistToPreferVehicle, driveStraightLineDistance, extraFlags, cruiseSpeed, targetArriveDist) instead
 */
export declare function taskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(ped: number | Ped, pos: Vector3, moveBlendRatio: number, vehicle: number | Vehicle, useLongRangeVehiclePathing: boolean, drivingFlags: number, maxRangeToShootTargets: number, extraVehToTargetDistToPreferVehicle: number, driveStraightLineDistance: number, extraFlags: number, cruiseSpeed: number, targetArriveDist: number): void;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * float speed > normal speed is 8.0f
 * ----------------------
 *
 * float speedMultiplier > multiply the playback speed
 * ----------------------
 *
 * int duration: time in millisecond
 * ----------------------
 * -1 _ _ _ _ _ _ _> Default (see flag)
 * 0 _ _ _ _ _ _ _ > Not play at all
 * Small value _ _ > Slow down animation speed
 * Other _ _ _ _ _ > freeze player control until specific time (ms) has
 * _ _ _ _ _ _ _ _ _ passed. (No effect if flag is set to be
 * _ _ _ _ _ _ _ _ _ controllable.)
 *
 * int flag:
 * ----------------------
 * enum eAnimationFlags
 * {
 * ANIM_FLAG_NORMAL = 0,
 * ANIM_FLAG_REPEAT = 1,
 * ANIM_FLAG_STOP_LAST_FRAME = 2,
 * ANIM_FLAG_UPPERBODY = 16,
 * ANIM_FLAG_ENABLE_PLAYER_CONTROL = 32,
 * ANIM_FLAG_CANCELABLE = 120,
 * };
 * Odd number : loop infinitely
 * Even number : Freeze at last frame
 * Multiple of 4: Freeze at last frame but controllable
 *
 * 01 to 15 > Full body
 * 10 to 31 > Upper body
 * 32 to 47 > Full body > Controllable
 * 48 to 63 > Upper body > Controllable
 * ...
 * 001 to 255 > Normal
 * 256 to 511 > Garbled
 * ...
 *
 * playbackRate:
 *
 * values are between 0.0 and 1.0
 *
 *
 * lockX:
 *
 * 0 in most cases 1 for rcmepsilonism8 and rcmpaparazzo_3
 * > 1 for mini@sprunk
 *
 *
 * lockY:
 *
 * 0 in most cases
 * 1 for missfam5_yoga, missfra1mcs_2_crew_react
 *
 *
 * lockZ:
 *
 * 0 for single player
 * Can be 1 but only for MP
 *
 * Hash: 0xEA47FE3719165B94 | Since: 323
 * @deprecated Use task.playAnim(ped, animDictionary, animationName, blendInSpeed, blendOutSpeed, duration, flag, playbackRate, lockX, lockY, lockZ) instead
 */
export declare function taskPlayAnim(ped: number | Ped, animDictionary: string, animationName: string, blendInSpeed: number, blendOutSpeed: number, duration: number, flag: number, playbackRate: number, lockX: boolean, lockY: boolean, lockZ: boolean): void;
/**
 * It's similar to TASK_PLAY_ANIM, except the first 6 floats let you specify the initial position and rotation of the task. (Ped gets teleported to the position).
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x83CDB10EA29B370B | Since: 323
 * @deprecated Use task.playAnimAdvanced(ped, animDict, animName, pos, rot, animEnterSpeed, animExitSpeed, duration, flag, animTime, rotOrder, ikFlags) instead
 */
export declare function taskPlayAnimAdvanced(ped: number | Ped, animDict: string, animName: string, pos: Vector3, rot: Vector3, animEnterSpeed: number, animExitSpeed: number, duration: number, flag: any, animTime: number, rotOrder: number, ikFlags: number): void;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x97FF36A1D40EA00A | Since: 323
 * @deprecated Use task.stopAnim(entity, animDictionary, animationName, blendDelta) instead
 */
export declare function stopAnimTask(entity: number | Entity, animDictionary: string, animationName: string, blendDelta: number): void;
/**
 * From fm_mission_controller.c:
 * reserve_network_mission_objects(get_num_reserved_mission_objects(0) + 1);
 * vVar28 = {0.094f, 0.02f, -0.005f};
 * vVar29 = {-92.24f, 63.64f, 150.24f};
 * func_253(&uVar30, joaat("prop_ld_case_01"), Global_1592429.imm_34757[iParam1 <268>], 1, 1, 0, 1);
 * set_entity_lod_dist(net_to_ent(uVar30), 500);
 * attach_entity_to_entity(net_to_ent(uVar30), iParam0, get_ped_bone_index(iParam0, 28422), vVar28, vVar29, 1, 0, 0, 0, 2, 1);
 * Var31.imm_4 = 1065353216;
 * Var31.imm_5 = 1065353216;
 * Var31.imm_9 = 1065353216;
 * Var31.imm_10 = 1065353216;
 * Var31.imm_14 = 1065353216;
 * Var31.imm_15 = 1065353216;
 * Var31.imm_17 = 1040187392;
 * Var31.imm_18 = 1040187392;
 * Var31.imm_19 = -1;
 * Var32.imm_4 = 1065353216;
 * Var32.imm_5 = 1065353216;
 * Var32.imm_9 = 1065353216;
 * Var32.imm_10 = 1065353216;
 * Var32.imm_14 = 1065353216;
 * Var32.imm_15 = 1065353216;
 * Var32.imm_17 = 1040187392;
 * Var32.imm_18 = 1040187392;
 * Var32.imm_19 = -1;
 * Var31 = 1;
 * Var31.imm_1 = "weapons@misc@jerrycan@mp_male";
 * Var31.imm_2 = "idle";
 * Var31.imm_20 = 1048633;
 * Var31.imm_4 = 0.5f;
 * Var31.imm_16 = get_hash_key("BONEMASK_ARMONLY_R");
 * task_scripted_animation(iParam0, &Var31, &Var32, &Var32, 0f, 0.25f);
 * set_model_as_no_longer_needed(joaat("prop_ld_case_01"));
 * remove_anim_dict("anim@heists@biolab@");
 *
 * Hash: 0x126EF75F1E17ABE5 | Since: 323
 * @deprecated Use task.scriptedAnimation(ped, blendInDelta, blendOutDelta) instead
 */
export declare function taskScriptedAnimation(ped: number | Ped, blendInDelta: number, blendOutDelta: number): [number, number, number];
/**
 * No comment provided
 *
 * Hash: 0x77A1EEC547E7FCF1 | Since: 323
 * @deprecated Use task.playEntityScriptedAnim(entity, blendInDelta, blendOutDelta) instead
 */
export declare function playEntityScriptedAnim(entity: number | Entity, blendInDelta: number, blendOutDelta: number): [number, number, number];
/**
 * Looks like p1 may be a flag, still need to do some research, though.
 *
 * Hash: 0xEE08C992D238C5D1 | Since: 323
 * @deprecated Use task.stopAnimPlayback(entity, priority, secondary) instead
 */
export declare function stopAnimPlayback(entity: number | Entity, priority: number, secondary: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x207F1A47C0342F48 | Since: 323
 * @deprecated Use task.setAnimWeight(entity, weight, priority, index, secondary) instead
 */
export declare function setAnimWeight(entity: number | Entity, weight: number, priority: number, index: number, secondary: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDDF3CB5A0A4C0B49 | Since: 2372
 * @deprecated Use task.setAnimPhase(entity, phase, priority, secondary) instead
 */
export declare function setAnimPhase(entity: number | Entity, phase: number, priority: number, secondary: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x032D49C5E359C847 | Since: 323
 * @deprecated Use task.setAnimRate(entity, rate, priority, secondary) instead
 */
export declare function setAnimRate(entity: number | Entity, rate: number, priority: number, secondary: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x70033C3CC29A1FF4 | Since: 323
 * @deprecated Use task.setAnimLooped(entity, looped, priority, secondary) instead
 */
export declare function setAnimLooped(entity: number | Entity, looped: boolean, priority: number, secondary: boolean): void;
/**
 * Example from the scripts:
 * `TASK::TASK_PLAY_PHONE_GESTURE_ANIMATION(PLAYER::PLAYER_PED_ID(), v_3, v_2, v_4, 0.25, 0.25, 0, 0);`
 *
 * =========================================================
 * ^^ No offense, but Idk how that would really help anyone.
 *
 * As for the animDict & animation, they're both store in a global in all 5 scripts. So if anyone would be so kind as to read that global and comment what strings they use. Thanks.
 *
 * Known boneMaskTypes'
 * "BONEMASK_HEADONLY"
 * "BONEMASK_HEAD_NECK_AND_ARMS"
 * "BONEMASK_HEAD_NECK_AND_L_ARM"
 * "BONEMASK_HEAD_NECK_AND_R_ARM"
 *
 * p4 known args - 0.0f, 0.5f, 0.25f
 * p5 known args - 0.0f, 0.25f
 * p6 known args - 1 if a global if check is passed.
 * p7 known args - 1 if a global if check is passed.
 *
 * The values found above, I found within the 5 scripts this is ever called in. (fmmc_launcher, fm_deathmatch_controller, fm_impromptu_dm_controller, fm_mission_controller, and freemode).
 * =========================================================
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x8FBB6758B3B3E9EC | Since: 323
 * @deprecated Use task.playPhoneGestureAnimation(ped, animDict, animation, boneMaskType, blendInDuration, blendOutDuration, isLooping, holdLastFrame) instead
 */
export declare function taskPlayPhoneGestureAnimation(ped: number | Ped, animDict: string, animation: string, boneMaskType: string, blendInDuration: number, blendOutDuration: number, isLooping: boolean, holdLastFrame: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3FA00D4F4641BFAE | Since: 323
 * @deprecated Use task.stopPhoneGestureAnimation(ped, blendOutOverride) instead
 */
export declare function taskStopPhoneGestureAnimation(ped: number | Ped, blendOutOverride: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB8EBB1E9D3588C10 | Since: 323
 * @deprecated Use task.isPlayingPhoneGestureAnim(ped) instead
 */
export declare function isPlayingPhoneGestureAnim(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x47619ABE8B268C60 | Since: 323
 * @deprecated Use task.getPhoneGestureAnimCurrentTime(ped) instead
 */
export declare function getPhoneGestureAnimCurrentTime(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x1EE0F68A7C25DEC6 | Since: 323
 * @deprecated Use task.getPhoneGestureAnimTotalTime(ped) instead
 */
export declare function getPhoneGestureAnimTotalTime(ped: number | Ped): number;
/**
 * Most probably plays a specific animation on vehicle. For example getting chop out of van etc...
 *
 * Here's how its used -
 *
 * `TASK::TASK_VEHICLE_PLAY_ANIM(l_325, "rcmnigel1b", "idle_speedo");`
 *
 * `TASK::TASK_VEHICLE_PLAY_ANIM(l_556[0\/\*1\*\/], "missfra0_chop_drhome", "InCar_GetOutofBack_Speedo");`
 *
 * FYI : Speedo is the name of van in which chop was put in the mission.
 *
 * Hash: 0x69F5C3BD0F3EBD89 | Since: 323
 * @deprecated Use task.vehiclePlayAnim(vehicle, animationSet, animationName) instead
 */
export declare function taskVehiclePlayAnim(vehicle: number | Vehicle, animationSet: string, animationName: string): void;
/**
 * enum eScriptLookatFlags
 * {
 * SLF_SLOW_TURN_RATE            = 1,    // turn the head toward the target slowly
 * SLF_FAST_TURN_RATE            = 2,    // turn the head toward the target quickly
 * SLF_EXTEND_YAW_LIMIT        = 4,    // wide yaw head limits
 * SLF_EXTEND_PITCH_LIMIT        = 8,    // wide pitch head limit
 * SLF_WIDEST_YAW_LIMIT        = 16,   // widest yaw head limit
 * SLF_WIDEST_PITCH_LIMIT        = 32,   // widest pitch head limit
 * SLF_NARROW_YAW_LIMIT        = 64,   // narrow yaw head limits
 * SLF_NARROW_PITCH_LIMIT        = 128,  // narrow pitch head limit
 * SLF_NARROWEST_YAW_LIMIT        = 256,  // narrowest yaw head limit
 * SLF_NARROWEST_PITCH_LIMIT    = 512,  // narrowest pitch head limit
 * SLF_USE_TORSO                = 1024, // use the torso aswell as the neck and head (currently disabled)
 * SLF_WHILE_NOT_IN_FOV        = 2048, // keep tracking the target even if they are not in the hard coded FOV
 * SLF_USE_CAMERA_FOCUS        = 4096, // use the camera as the target
 * SLF_USE_EYES_ONLY            = 8192, // only track the target with the eyes
 * SLF_USE_LOOK_DIR            = 16384, // use information in look dir DOF
 * SLF_FROM_SCRIPT                = 32768, // internal use only
 * SLF_USE_REF_DIR_ABSOLUTE    = 65536  // use absolute reference direction mode for solver
 * };
 *
 * Hash: 0x6FA46612594F7973 | Since: 323
 * @deprecated Use task.lookAtCoord(entity, pos, duration, flags, priority) instead
 */
export declare function taskLookAtCoord(entity: number | Entity, pos: Vector3, duration: number, flags: number, priority: number): void;
/**
 * For flags, please refer to TASK_LOOK_AT_COORD.
 *
 * Hash: 0x69F4BE8C8CC4796C | Since: 323
 * @deprecated Use task.lookAtEntity(ped, lookAt, duration, flags, priority) instead
 */
export declare function taskLookAtEntity(ped: number | Ped, lookAt: number | Entity, duration: number, flags: number, priority: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0F804F1DB19B9689 | Since: 323
 * @deprecated Use task.clearLookAt(ped) instead
 */
export declare function taskClearLookAt(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xE8854A4326B9E12B | Since: 323
 * @deprecated Use task.openSequence() instead
 */
export declare function openSequenceTask(): number;
/**
 * No comment provided
 *
 * Hash: 0x39E72BC99E6360CB | Since: 323
 * @deprecated Use task.closeSequence(taskSequenceId) instead
 */
export declare function closeSequenceTask(taskSequenceId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5ABA3986D90D8A3B | Since: 323
 * @deprecated Use task.performSequence(ped, taskSequenceId) instead
 */
export declare function taskPerformSequence(ped: number | Ped, taskSequenceId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8C33220C8D78CA0D | Since: 944
 * @deprecated Use task.performSequenceLocally(ped, taskSequenceId) instead
 */
export declare function taskPerformSequenceLocally(ped: number | Ped, taskSequenceId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3841422E9C488D8C | Since: 323
 * @deprecated Use task.clearSequence() instead
 */
export declare function clearSequenceTask(): number;
/**
 * No comment provided
 *
 * Hash: 0x58C70CF3A41E4AE7 | Since: 323
 * @deprecated Use task.setSequenceToRepeat(taskSequenceId, repeat) instead
 */
export declare function setSequenceToRepeat(taskSequenceId: number, repeat: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF5D1F489147CB683 | Since: 3570
 * @deprecated Use task.setSequencePreventMigration(taskSequenceId) instead
 */
export declare function setSequencePreventMigration(taskSequenceId: number): void;
/**
 * returned values:
 * 0 to 7 = task that's currently in progress, 0 meaning the first one.
 * -1 no task sequence in progress.
 *
 * Hash: 0x00A9010CFE1E3533 | Since: 323
 * @deprecated Use task.getSequenceProgress(ped) instead
 */
export declare function getSequenceProgress(ped: number | Ped): number;
/**
 * Task index enum: https://alloc8or.re/gta5/doc/enums/eTaskTypeIndex.txt
 *
 * Hash: 0xB0760331C7AA4155 | Since: 323
 * @deprecated Use task.getIsActive(ped, taskIndex) instead
 */
export declare function getIsTaskActive(ped: number | Ped, taskIndex: number): boolean;
/**
 * Gets the status of a script-assigned task.
 * taskHash: https://alloc8or.re/gta5/doc/enums/eScriptTaskHash.txt
 *
 * Hash: 0x77F1BEB8863288D5 | Since: 323
 * @deprecated Use task.getScriptStatus(ped, taskHash) instead
 */
export declare function getScriptTaskStatus(ped: number | Ped, taskHash: number | string): number;
/**
 * https://alloc8or.re/gta5/doc/enums/eVehicleMissionType.txt
 *
 * Hash: 0x534AEBA6E5ED4CAB | Since: 323
 * @deprecated Use task.getActiveVehicleMissionType(vehicle) instead
 */
export declare function getActiveVehicleMissionType(vehicle: number | Vehicle): number;
/**
 * Flags are the same flags used in TASK_LEAVE_VEHICLE
 *
 * Hash: 0x504D54DF3F6F2247 | Since: 323
 * @deprecated Use task.leaveAnyVehicle(ped, delayTime, flags) instead
 */
export declare function taskLeaveAnyVehicle(ped: number | Ped, delayTime: number, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7A192BE16D373D00 | Since: 323
 * @deprecated Use task.aimGunScripted(ped, scriptTask, disableBlockingClip, instantBlendToAim) instead
 */
export declare function taskAimGunScripted(ped: number | Ped, scriptTask: number | string, disableBlockingClip: boolean, instantBlendToAim: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8605AF0DE8B3A5AC | Since: 323
 * @deprecated Use task.aimGunScriptedWithTarget(ped, target, pos, gunTaskType, disableBlockingClip, forceAim) instead
 */
export declare function taskAimGunScriptedWithTarget(ped: number | Ped, target: number | Ped, pos: Vector3, gunTaskType: number, disableBlockingClip: boolean, forceAim: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9724FB59A3E72AD0 | Since: 323
 * @deprecated Use task.updateAimGunScriptedTarget(ped, target, pos, disableBlockingClip) instead
 */
export declare function updateTaskAimGunScriptedTarget(ped: number | Ped, target: number | Ped, pos: Vector3, disableBlockingClip: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3A8CADC7D37AACC5 | Since: 323
 * @deprecated Use task.getClipSetForScriptedGun(gunTaskType) instead
 */
export declare function getClipSetForScriptedGunTask(gunTaskType: number): string;
/**
 * duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
 *
 * Hash: 0x9B53BB6E8943AF53 | Since: 323
 * @deprecated Use task.aimGunAtEntity(ped, entity, duration, instantBlendToAim) instead
 */
export declare function taskAimGunAtEntity(ped: number | Ped, entity: number | Entity, duration: number, instantBlendToAim: boolean): void;
/**
 * duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
 *
 * Hash: 0x5AD23D40115353AC | Since: 323
 * @deprecated Use task.turnPedToFaceEntity(ped, entity, duration) instead
 */
export declare function taskTurnPedToFaceEntity(ped: number | Ped, entity: number | Entity, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6671F3EEC681BDA1 | Since: 323
 * @deprecated Use task.aimGunAtCoord(ped, pos, time, instantBlendToAim, playAnimIntro) instead
 */
export declare function taskAimGunAtCoord(ped: number | Ped, pos: Vector3, time: number, instantBlendToAim: boolean, playAnimIntro: boolean): void;
/**
 * Firing Pattern Hash Information: https://pastebin.com/Px036isB
 *
 * Hash: 0x46A6CC01E0826106 | Since: 323
 * @deprecated Use task.shootAtCoord(ped, pos, duration, firingPattern) instead
 */
export declare function taskShootAtCoord(ped: number | Ped, pos: Vector3, duration: number, firingPattern: number | string): void;
/**
 * Makes the specified ped shuffle to the next vehicle seat.
 * The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.
 *
 * Hash: 0x7AA80209BDA643EB | Since: 323
 * @deprecated Use task.shuffleToNextVehicleSeat(ped, vehicle, useAlternateShuffle) instead
 */
export declare function taskShuffleToNextVehicleSeat(ped: number | Ped, vehicle: number | Vehicle, useAlternateShuffle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE1EF3C1216AFF2CD | Since: 323
 * @deprecated Use task.clearPeds(ped) instead
 */
export declare function clearPedTasks(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xF6DC48E56BE1243A | Since: 3407
 * @deprecated Use task.clearPedScriptIfRunningThreatResponseNonTempTask(ped) instead
 */
export declare function clearPedScriptTaskIfRunningThreatResponseNonTempTask(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x176CECF6F920D707 | Since: 323
 * @deprecated Use task.clearPedSecondary(ped) instead
 */
export declare function clearPedSecondaryTask(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x7F93691AB4B92272 | Since: 323
 * @deprecated Use task.everyoneLeaveVehicle(vehicle) instead
 */
export declare function taskEveryoneLeaveVehicle(vehicle: number | Vehicle): void;
/**
 * enum ESEEK_ENTITY_OFFSET_FLAGS
 * {
 * ESEEK_OFFSET_ORIENTATES_WITH_ENTITY = 0x01,
 * ESEEK_KEEP_TO_PAVEMENTS = 0x02
 * };
 *
 * Hash: 0xE39B4FF4FDEBDE27 | Since: 323
 * @deprecated Use task.gotoEntityOffset(ped, entity, time, seekRadius, seekAngleDeg, moveBlendRatio, gotoEntityOffsetFlags) instead
 */
export declare function taskGotoEntityOffset(ped: number | Ped, entity: number | Entity, time: number, seekRadius: number, seekAngleDeg: number, moveBlendRatio: number, gotoEntityOffsetFlags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x338E7EF52B6095A9 | Since: 323
 * @deprecated Use task.gotoEntityOffsetXy(ped, entity, duration, targetRadius, offsetX, offsetY, moveBlendRatio, gotoEntityOffsetFlags) instead
 */
export declare function taskGotoEntityOffsetXy(ped: number | Ped, entity: number | Entity, duration: number, targetRadius: number, offsetX: number, offsetY: number, moveBlendRatio: number, gotoEntityOffsetFlags: number): void;
/**
 * duration in milliseconds
 *
 * Hash: 0x1DDA930A0AC38571 | Since: 323
 * @deprecated Use task.turnPedToFaceCoord(ped, pos, duration) instead
 */
export declare function taskTurnPedToFaceCoord(ped: number | Ped, pos: Vector3, duration: number): void;
/**
 * '1 - brake
 * '3 - brake + reverse
 * '4 - turn left 90 + braking
 * '5 - turn right 90 + braking
 * '6 - brake strong (handbrake?) until time ends
 * '7 - turn left + accelerate
 * '8 - turn right + accelerate
 * '9 - weak acceleration
 * '10 - turn left + restore wheel pos to center in the end
 * '11 - turn right + restore wheel pos to center in the end
 * '13 - turn left + go reverse
 * '14 - turn left + go reverse
 * '16 - crash the game after like 2 seconds :)
 * '17 - keep actual state, game crashed after few tries
 * '18 - game crash
 * '19 - strong brake + turn left/right
 * '20 - weak brake + turn left then turn right
 * '21 - weak brake + turn right then turn left
 * '22 - brake + reverse
 * '23 - accelerate fast
 * '24 - brake
 * '25 - brake turning left then when almost stopping it turns left more
 * '26 - brake turning right then when almost stopping it turns right more
 * '27 - brake until car stop or until time ends
 * '28 - brake + strong reverse acceleration
 * '30 - performs a burnout (brake until stop + brake and accelerate)
 * '31 - accelerate + handbrake
 * '32 - accelerate very strong
 *
 * Seems to be this:
 * Works on NPCs, but overrides their current task. If inside a task sequence (and not being the last task), "time" will work, otherwise the task will be performed forever until tasked with something else
 *
 * Hash: 0xC429DCEEB339E129 | Since: 323
 * @deprecated Use task.vehicleTempAction(driver, vehicle, action, time) instead
 */
export declare function taskVehicleTempAction(driver: number | Ped, vehicle: number | Vehicle, action: number, time: number): void;
/**
 * missionType: https://alloc8or.re/gta5/doc/enums/eVehicleMissionType.txt
 *
 * Hash: 0x659427E0EF36BCDE | Since: 323
 * @deprecated Use task.vehicleMission(driver, vehicle, vehicleTarget, missionType, cruiseSpeed, drivingStyle, targetReached, straightLineDistance, DriveAgainstTraffic) instead
 */
export declare function taskVehicleMission(driver: number | Ped, vehicle: number | Vehicle, vehicleTarget: number | Vehicle, missionType: number, cruiseSpeed: number, drivingStyle: number, targetReached: number, straightLineDistance: number, DriveAgainstTraffic: boolean): void;
/**
 * See TASK_VEHICLE_MISSION
 *
 * Hash: 0x9454528DF15D657A | Since: 323
 * @deprecated Use task.vehicleMissionPedTarget(ped, vehicle, pedTarget, missionType, maxSpeed, drivingStyle, minDistance, straightLineDistance, DriveAgainstTraffic) instead
 */
export declare function taskVehicleMissionPedTarget(ped: number | Ped, vehicle: number | Vehicle, pedTarget: number | Ped, missionType: number, maxSpeed: number, drivingStyle: number, minDistance: number, straightLineDistance: number, DriveAgainstTraffic: boolean): void;
/**
 * See TASK_VEHICLE_MISSION
 *
 * Hash: 0xF0AF20AA7731F8C3 | Since: 323
 * @deprecated Use task.vehicleMissionCoorsTarget(ped, vehicle, pos, mission, cruiseSpeed, drivingStyle, targetReached, straightLineDistance, DriveAgainstTraffic) instead
 */
export declare function taskVehicleMissionCoorsTarget(ped: number | Ped, vehicle: number | Vehicle, pos: Vector3, mission: number, cruiseSpeed: number, drivingStyle: number, targetReached: number, straightLineDistance: number, DriveAgainstTraffic: boolean): void;
/**
 * Makes a ped follow the targetVehicle with <minDistance> in between.
 *
 * note: minDistance is ignored if drivingstyle is avoiding traffic, but Rushed is fine.
 *
 * Mode: The mode defines the relative position to the targetVehicle. The ped will try to position its vehicle there.
 * -1 = behind
 * 0 = ahead
 * 1 = left
 * 2 = right
 * 3 = back left
 * 4 = back right
 *
 * if the target is closer than noRoadsDistance, the driver will ignore pathing/roads and follow you directly.
 *
 * Driving Styles guide: gtaforums.com/topic/822314-guide-driving-styles/
 *
 * Hash: 0x0FA6E4B75F302400 | Since: 323
 * @deprecated Use task.vehicleEscort(ped, vehicle, targetVehicle, mode, speed, drivingStyle, minDistance, minHeightAboveTerrain, noRoadsDistance) instead
 */
export declare function taskVehicleEscort(ped: number | Ped, vehicle: number | Vehicle, targetVehicle: number | Vehicle, mode: number, speed: number, drivingStyle: number, minDistance: number, minHeightAboveTerrain: number, noRoadsDistance: number): void;
/**
 * Makes a ped in a vehicle follow an entity (ped, vehicle, etc.)
 *
 * drivingStyle: http://gtaforums.com/topic/822314-guide-driving-styles/
 *
 * Hash: 0xFC545A9F0626E3B6 | Since: 323
 * @deprecated Use task.vehicleFollow(driver, vehicle, targetEntity, speed, drivingStyle, minDistance) instead
 */
export declare function taskVehicleFollow(driver: number | Ped, vehicle: number | Vehicle, targetEntity: number | Entity, speed: number, drivingStyle: number, minDistance: number): void;
/**
 * chases targetEnt fast and aggressively
 * --
 * Makes ped (needs to be in vehicle) chase targetEnt.
 *
 * Hash: 0x3C08A8E30363B353 | Since: 323
 * @deprecated Use task.vehicleChase(driver, targetEnt) instead
 */
export declare function taskVehicleChase(driver: number | Ped, targetEnt: number | Entity): void;
/**
 * pilot, vehicle and altitude are rather self-explanatory.
 *
 * p4: is unused variable in the function.
 *
 * entityToFollow: you can provide a Vehicle entity or a Ped entity, the heli will protect them.
 *
 * 'targetSpeed':  The pilot will dip the nose AS MUCH AS POSSIBLE so as to reach this value AS FAST AS POSSIBLE.  As such, you'll want to modulate it as opposed to calling it via a hard-wired, constant #.
 *
 * 'radius' isn't just "stop within radius of X of target" like with ground vehicles.  In this case, the pilot will fly an entire circle around 'radius' and continue to do so.
 *
 * NOT CONFIRMED:  p7 appears to be a FlyingStyle enum.  Still investigating it as of this writing, but playing around with values here appears to result in different -behavior- as opposed to offsetting coordinates, altitude, target speed, etc.
 *
 * NOTE: If the pilot finds enemies, it will engage them until it kills them, but will return to protect the ped/vehicle given shortly thereafter.
 *
 * Hash: 0x1E09C32048FEFD1C | Since: 323
 * @deprecated Use task.vehicleHeliProtect(pilot, vehicle, entityToFollow, targetSpeed, drivingFlags, radius, altitude, heliFlags) instead
 */
export declare function taskVehicleHeliProtect(pilot: number | Ped, vehicle: number | Vehicle, entityToFollow: number | Entity, targetSpeed: number, drivingFlags: number, radius: number, altitude: number, heliFlags: number): void;
/**
 * Flag 8: Medium-aggressive boxing tactic with a bit of PIT
 * Flag 1: Aggressive ramming of suspect
 * Flag 2: Ram attempts
 * Flag 32: Stay back from suspect, no tactical contact. Convoy-like.
 * Flag 16: Ramming, seems to be slightly less aggressive than 1-2.
 *
 * Hash: 0xCC665AAC360D31E7 | Since: 323
 * @deprecated Use task.setVehicleChaseBehaviorFlag(ped, flag, _set) instead
 */
export declare function setTaskVehicleChaseBehaviorFlag(ped: number | Ped, flag: number, _set: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x639B642FACBE4EDD | Since: 323
 * @deprecated Use task.setVehicleChaseIdealPursuitDistance(ped, distance) instead
 */
export declare function setTaskVehicleChaseIdealPursuitDistance(ped: number | Ped, distance: number): void;
/**
 * Ped pilot should be in a heli.
 * EntityToFollow can be a vehicle or Ped.
 *
 * x,y,z appear to be how close to the EntityToFollow the heli should be. Scripts use 0.0, 0.0, 80.0. Then the heli tries to position itself 80 units above the EntityToFollow. If you reduce it to -5.0, it tries to go below (if the EntityToFollow is a heli or plane)
 *
 *
 * NOTE: If the pilot finds enemies, it will engage them, then remain there idle, not continuing to chase the Entity given.
 *
 * Hash: 0xAC83B1DB38D0ADA0 | Since: 323
 * @deprecated Use task.heliChase(pilot, entityToFollow, pos) instead
 */
export declare function taskHeliChase(pilot: number | Ped, entityToFollow: number | Entity, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x2D2386F273FF7A25 | Since: 323
 * @deprecated Use task.planeChase(pilot, entityToFollow, pos) instead
 */
export declare function taskPlaneChase(pilot: number | Ped, entityToFollow: number | Entity, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xBF19721FA34D32C0 | Since: 323
 * @deprecated Use task.planeLand(pilot, plane, runwayStartX, runwayStartY, runwayStartZ, runwayEndX, runwayEndY, runwayEndZ) instead
 */
export declare function taskPlaneLand(pilot: number | Ped, plane: number | Vehicle, runwayStartX: number, runwayStartY: number, runwayStartZ: number, runwayEndX: number, runwayEndY: number, runwayEndZ: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6100B3CEFD43452E | Since: 2189
 * @deprecated Use task.clearDefaultPrimary(ped) instead
 */
export declare function clearDefaultPrimaryTask(ped: number | Ped): void;
/**
 * This native is very useful when switching the player to a ped inside a vehicle that has a task assigned prior to the player switch.
 * It is necessary to clear the ped's tasks AND call this native with the vehicle the player is switching into in order to allow the player to control the vehicle after the player switches.
 *
 * Hash: 0xDBBC7A2432524127 | Since: 1290
 * @deprecated Use task.clearPrimaryVehicle(vehicle) instead
 */
export declare function clearPrimaryVehicleTask(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x53DDC75BC3AC0A90 | Since: 1290
 * @deprecated Use task.clearVehicleCrash(vehicle) instead
 */
export declare function clearVehicleCrashTask(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xF7F9DCCA89E7505B | Since: 1290
 * @deprecated Use task.planeGotoPreciseVtol(ped, vehicle, pos, flightHeight, minHeightAboveTerrain, useDesiredOrientation, desiredOrientation, autopilot) instead
 */
export declare function taskPlaneGotoPreciseVtol(ped: number | Ped, vehicle: number | Vehicle, pos: Vector3, flightHeight: number, minHeightAboveTerrain: number, useDesiredOrientation: boolean, desiredOrientation: number, autopilot: boolean): void;
/**
 * Used in am_vehicle_spawn.ysc and am_mp_submarine.ysc.
 *
 * p0 is always 0, p5 is always 1
 *
 * p1 is the vehicle handle of the submarine. Submarine must have a driver, but the ped handle is not passed to the native.
 *
 * Speed can be set by calling SET_DRIVE_TASK_CRUISE_SPEED after
 *
 * Hash: 0xC22B40579A498CA4 | Since: 2189
 * @deprecated Use task.submarineGotoAndStop(ped, submarine, pos, autopilot) instead
 */
export declare function taskSubmarineGotoAndStop(ped: number | Ped, submarine: number | Vehicle, pos: Vector3, autopilot: boolean): void;
/**
 * Must have targetVehicle, targetPed, OR destination X/Y/Z set
 * Will follow targeted vehicle/ped, or fly to destination
 * Set whichever is not being used to 0
 *
 *
 * Mission mode type:
 * - 4, 7: Forces heli to snap to the heading if set, flies to destination or tracks specified entity (mode 4 only works for coordinates, 7 works for coordinates OR ped/vehicle)
 * - 6: Attacks the target ped/vehicle with mounted weapons. If radius is set, will maintain that distance from target.
 * - 8: Makes the heli flee from the ped/vehicle/coordinate
 * - 9: Circles around target ped/vehicle, snaps to angle if set. Behavior flag (last parameter) of 2048 switches from counter-clockwise to clockwise circling. Does not work with coordinate destination.
 * - 10, 11: Follows ped/vehicle target and imitates target heading. Only works with ped/vehicle target, not coord target
 * - 19: Heli lands at specified coordinate, ignores heading (lands facing whatever direction it is facing when the task is started)
 * - 20: Makes the heli land when near target ped. It won't resume chasing.
 * - 21: Emulates a helicopter crash
 * - 23: makes the heli circle erratically around ped
 *
 *
 * Heli will fly at maxSpeed (up to actual maximum speed defined by the model's handling config)
 * You can use SET_DRIVE_TASK_CRUISE_SPEED to modulate the speed based on distance to the target without having to re-invoke the task native. Setting to 8.0 when close to the destination results in a much smoother approach.
 *
 * If minHeight and maxHeight are set, heli will fly between those specified elevations, relative to ground level and any obstructions/buildings below. You can specify -1 for either if you only want to specify one. Usually it is easiest to leave maxHeight at -1, and specify a reasonable minHeight to ensure clearance over any obstacles. Note this MUST be passed as an INT, not a FLOAT.
 *
 * Radius affects how closely the heli will follow tracked ped/vehicle, and when circling (mission type 9) sets the radius (in meters) that it will circle the target from
 *
 * Heading is -1.0 for default behavior, which will point the nose of the helicopter towards the destination. Set a heading and the heli will lock to that direction when near its destination/target, but may still turn towards the destination when flying at higher speed from a further distance.
 *
 * Behavior Flags is a bitwise value that modifies the AI behavior. Not clear what all flags do, but here are some guesses/notes:
 * 1: Forces heading to face E
 * 2: Unknown
 * 4: Tight circles around coordinate destination
 * 8: Unknown
 * 16: Circles around coordinate destination facing towards destination
 * 32: Flys to normally, then lands at coordinate destination and stays on the ground (using mission type 4)
 * 64: Ignores obstacles when flying, will follow at specified minHeight above ground level but will not avoid buildings, vehicles, etc.
 * 128: Unknown
 * 256: Unknown
 * 512: Unknown
 * 1024: Unknown
 * 2048: Reverses direction of circling (mission type 9) to clockwise
 * 4096: Hugs closer to the ground, maintains minHeight from ground generally, but barely clears buildings and dips down more between buildings instead of taking a more efficient/safe route
 * 8192: Unknown
 *
 * Unk3 is a float value, you may see -1082130432 for this value in decompiled native scripts, this is the equivalent to -1.0f. Seems to affect acceleration/aggressiveness, but not sure exactly how it works. Higher value seems to result in lower acceleration/less aggressive flying. Almost always -1.0 in native scripts, occasionally 20.0 or 50.0. Setting to 400.0 seems to work well for making the pilot not overshoot the destination when using coordinate destination.
 *
 * Notes updated by PNWParksFan, May 2021
 *
 *
 * Hash: 0xDAD029E187A2BEB4 | Since: 323
 * @deprecated Use task.heliMission(pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, maxSpeed, radius, targetHeading, maxHeight, minHeight, slowDownDistance, behaviorFlags) instead
 */
export declare function taskHeliMission(pilot: number | Ped, aircraft: number | Vehicle, targetVehicle: number | Vehicle, targetPed: number | Ped, destinationX: number, destinationY: number, destinationZ: number, missionFlag: number, maxSpeed: number, radius: number, targetHeading: number, maxHeight: number, minHeight: number, slowDownDistance: number, behaviorFlags: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB385523325077210 | Since: 1290
 * @deprecated Use task.heliEscortHeli(pilot, heli1, heli2, offsetX, offsetY, offsetZ) instead
 */
export declare function taskHeliEscortHeli(pilot: number | Ped, heli1: number | Vehicle, heli2: number | Vehicle, offsetX: number, offsetY: number, offsetZ: number): void;
/**
 * EXAMPLE USAGE:
 *
 * Fly around target (Precautiously, keeps high altitude):
 * Function.Call(Hash.TASK_PLANE_MISSION, pilot, selectedAirplane, 0, 0, Target.X, Target.Y, Target.Z, 4, 100f, 0f, 90f, 0, 200f);
 *
 * Fly around target (Dangerously, keeps VERY low altitude):
 * Function.Call(Hash.TASK_PLANE_MISSION, pilot, selectedAirplane, 0, 0, Target.X, Target.Y, Target.Z, 4, 100f, 0f, 90f, 0, -500f);
 *
 * Fly directly into target:
 * Function.Call(Hash.TASK_PLANE_MISSION, pilot, selectedAirplane, 0, 0, Target.X, Target.Y, Target.Z, 4, 100f, 0f, 90f, 0, -5000f);
 *
 * EXPANDED INFORMATION FOR ADVANCED USAGE (custom pilot)
 *
 * 'physicsSpeed': (THIS IS NOT YOUR ORDINARY SPEED PARAMETER: READ!!)
 * Think of this -first- as a radius value, not a true speed value.  The ACTUAL effective speed of the plane will be that of the maximum speed permissible to successfully fly in a -circle- with a radius of 'physicsSpeed'.  This also means that the plane must complete a circle before it can begin its "bombing run", its straight line pass towards the target.  p9 appears to influence the angle at which a "bombing run" begins, although I can't confirm yet.
 *
 * VERY IMPORTANT: A "bombing run" will only occur if a plane can successfully determine a possible navigable route (the slower the value of 'physicsSpeed', the more precise the pilot can be due to less influence of physics on flightpath).  Otherwise, the pilot will continue to patrol around Destination (be it a dynamic Entity position vector or a fixed world coordinate vector.)
 *
 * 0 = Plane's physics are almost entirely frozen, plane appears to "orbit" around precise destination point
 * 1-299 = Blend of "frozen, small radius" vs. normal vs. "accelerated, hyperfast, large radius"
 * 300+ =  Vehicle behaves entirely like a normal gameplay plane.
 *
 * 'patrolBlend' (The lower the value, the more the Destination is treated as a "fly AT" rather than a "fly AROUND point".)
 *
 * Scenario: Destination is an Entity on ground level, wide open field
 * -5000 = Pilot kamikazes directly into Entity
 * -1000 = Pilot flies extremely low -around- Entity, very prone to crashing
 * -200 = Pilot flies lower than average around Entity.
 * 0 = Pilot flies around Entity, normal altitude
 * 200 = Pilot flies an extra eighty units or so higher than 0 while flying around Destination (this doesn't seem to correlate directly into distance units.)
 *
 * -- Valid mission types found in the exe: --
 *
 * 0 = None
 * 1 = Unk
 * 2 = CTaskVehicleRam
 * 3 = CTaskVehicleBlock
 * 4 = CTaskVehicleGoToPlane
 * 5 = CTaskVehicleStop
 * 6 = CTaskVehicleAttack
 * 7 = CTaskVehicleFollow
 * 8 = CTaskVehicleFleeAirborne
 * 9= CTaskVehicleCircle
 * 10 = CTaskVehicleEscort
 * 15 = CTaskVehicleFollowRecording
 * 16 = CTaskVehiclePoliceBehaviour
 * 17 = CTaskVehicleCrash
 *
 * Hash: 0x23703CD154E83B88 | Since: 323
 * @deprecated Use task.planeMission(pilot, aircraft, targetVehicle, targetPed, destinationX, destinationY, destinationZ, missionFlag, angularDrag, targetReached, targetHeading, maxZ, minZ, precise) instead
 */
export declare function taskPlaneMission(pilot: number | Ped, aircraft: number | Vehicle, targetVehicle: number | Vehicle, targetPed: number | Ped, destinationX: number, destinationY: number, destinationZ: number, missionFlag: number, angularDrag: number, targetReached: number, targetHeading: number, maxZ: number, minZ: number, precise: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x92C360B5F15D2302 | Since: 1103
 * @deprecated Use task.planeTaxi(pilot, aircraft, pos, cruiseSpeed, targetReached) instead
 */
export declare function taskPlaneTaxi(pilot: number | Ped, aircraft: number | Vehicle, pos: Vector3, cruiseSpeed: number, targetReached: number): void;
/**
 * `You need to call PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS after TASK_BOAT_MISSION in order for the task to execute.`
 *
 * Working example
 * `float vehicleMaxSpeed = VEHICLE::GET_VEHICLE_ESTIMATED_MAX_SPEED(ENTITY::GET_ENTITY_MODEL(pedVehicle));`
 * `TASK::TASK_BOAT_MISSION(pedDriver, pedVehicle, 0, 0, waypointCoord.x, waypointCoord.y, waypointCoord.z, 4, vehicleMaxSpeed, 786469, -1.0, 7);`
 * `PED::SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(pedDriver, 1);`
 *
 * P8 appears to be driving style flag - see gtaforums.com/topic/822314-guide-driving-styles/ for documentation
 *
 * Hash: 0x15C86013127CE63F | Since: 323
 * @deprecated Use task.boatMission(pedDriver, vehicle, targetVehicle, targetPed, pos, mission, maxSpeed, drivingStyle, targetReached, boatFlags) instead
 */
export declare function taskBoatMission(pedDriver: number | Ped, vehicle: number | Vehicle, targetVehicle: number | Vehicle, targetPed: number | Ped, pos: Vector3, mission: number, maxSpeed: number, drivingStyle: number, targetReached: number, boatFlags: any): void;
/**
 * Example:
 *
 * `TASK::TASK_DRIVE_BY(l_467[1\/\*22\*\/], PLAYER::PLAYER_PED_ID(), 0, 0.0, 0.0, 2.0, 300.0, 100, 0, ${firing_pattern_burst_fire_driveby});`
 *
 *
 *
 *
 * Needs working example. Doesn't seem to do anything.
 *
 * I marked p2 as targetVehicle as all these shooting related tasks seem to have that in common.
 * I marked p6 as distanceToShoot as if you think of GTA's Logic with the native SET_VEHICLE_SHOOT natives, it won't shoot till it gets within a certain distance of the target.
 * I marked p7 as pedAccuracy as it seems it's mostly 100 (Completely Accurate), 75, 90, etc. Although this could be the ammo count within the gun, but I highly doubt it. I will change this comment once I find out if it's ammo count or not.
 *
 * Hash: 0x2F8AF0E82773A171 | Since: 323
 * @deprecated Use task.driveBy(driverPed, targetPed, targetVehicle, targetX, targetY, targetZ, distanceToShoot, pedAccuracy, pushUnderneathDrivingTaskIfDriving, firingPattern) instead
 */
export declare function taskDriveBy(driverPed: number | Ped, targetPed: number | Ped, targetVehicle: number | Vehicle, targetX: number, targetY: number, targetZ: number, distanceToShoot: number, pedAccuracy: number, pushUnderneathDrivingTaskIfDriving: boolean, firingPattern: number | string): void;
/**
 * For p1 & p2 (Ped, Vehicle). I could be wrong, as the only time this native is called in scripts is once and both are 0, but I assume this native will work like SET_MOUNTED_WEAPON_TARGET in which has the same exact amount of parameters and the 1st and last 3 parameters are right and the same for both natives.
 *
 * Hash: 0xE5B302114D8162EE | Since: 323
 * @deprecated Use task.setDrivebyTarget(shootingPed, targetPed, targetVehicle, pos) instead
 */
export declare function setDrivebyTaskTarget(shootingPed: number | Ped, targetPed: number | Ped, targetVehicle: number | Vehicle, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xC35B5CDB2824CF69 | Since: 323
 * @deprecated Use task.clearDrivebyUnderneathDrivingTask(ped) instead
 */
export declare function clearDrivebyTaskUnderneathDrivingTask(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8785E6E40C7A8818 | Since: 323
 * @deprecated Use task.isDrivebyUnderneathDrivingTask(ped) instead
 */
export declare function isDrivebyTaskUnderneathDrivingTask(ped: number | Ped): boolean;
/**
 * Forces the ped to use the mounted weapon.
 * Returns false if task is not possible.
 *
 * Hash: 0xDCFE42068FE0135A | Since: 323
 * @deprecated Use task.controlMountedWeapon(ped) instead
 */
export declare function controlMountedWeapon(ped: number | Ped): boolean;
/**
 * Note: Look in decompiled scripts and the times that p1 and p2 aren't 0. They are filled with vars. If you look through out that script what other natives those vars are used in, you can tell p1 is a ped and p2 is a vehicle. Which most likely means if you want the mounted weapon to target a ped set targetVehicle to 0 or vice-versa.
 *
 * Hash: 0xCCD892192C6D2BB9 | Since: 323
 * @deprecated Use task.setMountedWeaponTarget(shootingPed, targetPed, targetVehicle, pos, taskMode, ignoreTargetVehDeadCheck) instead
 */
export declare function setMountedWeaponTarget(shootingPed: number | Ped, targetPed: number | Ped, targetVehicle: number | Vehicle, pos: Vector3, taskMode: number, ignoreTargetVehDeadCheck: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA320EF046186FA3B | Since: 323
 * @deprecated Use task.isMountedWeaponUnderneathDrivingTask(ped) instead
 */
export declare function isMountedWeaponTaskUnderneathDrivingTask(ped: number | Ped): boolean;
/**
 * Actually has 3 params, not 2.
 *
 * p0: Ped
 * p1: int (or bool?)
 * p2: int
 *
 * Hash: 0xBD2A8EC3AF4DE7DB | Since: 323
 * @deprecated Use task.useMobilePhone(ped, usePhone, desiredPhoneMode) instead
 */
export declare function taskUseMobilePhone(ped: number | Ped, usePhone: boolean, desiredPhoneMode: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5EE02954A14C69DB | Since: 323
 * @deprecated Use task.useMobilePhoneTimed(ped, duration) instead
 */
export declare function taskUseMobilePhoneTimed(ped: number | Ped, duration: number): void;
/**
 * p2 tend to be 16, 17 or 1
 * p3 to p7 tend to be 0.0
 *
 * Hash: 0x8C338E0263E4FD19 | Since: 323
 * @deprecated Use task.chatToPed(ped, target, flags, goToLocationX, goToLocationY, goToLocationZ, headingDegs, idleTime) instead
 */
export declare function taskChatToPed(ped: number | Ped, target: number | Ped, flags: number, goToLocationX: number, goToLocationY: number, goToLocationZ: number, headingDegs: number, idleTime: number): void;
/**
 * Seat Numbers
 * -------------------------------
 * Driver = -1
 * Any = -2
 * Left-Rear = 1
 * Right-Front = 0
 * Right-Rear = 2
 * Extra seats = 3-14(This may differ from vehicle type e.g. Firetruck Rear Stand, Ambulance Rear)
 *
 * Hash: 0x9A7D091411C5F684 | Since: 323
 * @deprecated Use task.warpPedIntoVehicle(ped, vehicle, seat) instead
 */
export declare function taskWarpPedIntoVehicle(ped: number | Ped, vehicle: number | Vehicle, seat: number): void;
/**
 * //this part of the code is to determine at which entity the player is aiming, for example if you want to create a mod where you give orders to peds
 * Entity aimedentity;
 * `Player player = PLAYER::PLAYER_ID();`
 * `PLAYER::_GET_AIMED_ENTITY(player, &aimedentity);`
 *
 * //bg is an array of peds
 * `TASK::TASK_SHOOT_AT_ENTITY(bg[i], aimedentity, 5000, MISC::GET_HASH_KEY("FIRING_PATTERN_FULL_AUTO"));`
 *
 * in practical usage, getting the entity the player is aiming at and then task the peds to shoot at the entity, at a button press event would be better.
 *
 * Firing Pattern Hash Information: https://pastebin.com/Px036isB
 *
 * Hash: 0x08DA95E8298AE772 | Since: 323
 * @deprecated Use task.shootAtEntity(entity, target, duration, firingPattern) instead
 */
export declare function taskShootAtEntity(entity: number | Entity, target: number | Entity, duration: number, firingPattern: number | string): void;
/**
 * Climbs or vaults the nearest thing.
 * usePlayerLaunchForce is unused.
 *
 * Hash: 0x89D9FCC2435112F1 | Since: 323
 * @deprecated Use task.climb(ped, usePlayerLaunchForce) instead
 */
export declare function taskClimb(ped: number | Ped, usePlayerLaunchForce: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB6C987F9285A3814 | Since: 323
 * @deprecated Use task.climbLadder(ped, fast) instead
 */
export declare function taskClimbLadder(ped: number | Ped, fast: boolean): void;
/**
 * Attaches a ped to a rope and allows player control to rappel down a wall. Disables all collisions while on the rope.
 * p10: Usually 1 in the scripts, clipSet: Clipset to use for the task, minZ: Minimum Z that the player can descend to, ropeHandle: Rope to attach this task to created with ADD_ROPE
 *
 * Hash: 0xEAF66ACDDC794793 | Since: 1868
 * @deprecated Use task.rappelDownWallUsingClipsetOverride(ped, x1, y1, z1, x2, y2, z2, minZ, ropeHandle, clipSet) instead
 */
export declare function taskRappelDownWallUsingClipsetOverride(ped: number | Ped, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, minZ: number, ropeHandle: number, clipSet: string): void;
/**
 * No comment provided
 *
 * Hash: 0x9D252648778160DF | Since: 1868
 * @deprecated Use task.getRappelDownWallState(ped) instead
 */
export declare function getTaskRappelDownWallState(ped: number | Ped): number;
/**
 * Immediately stops the pedestrian from whatever it's doing. They stop fighting, animations, etc. they forget what they were doing.
 *
 * Hash: 0xAAA34F8A7CB32098 | Since: 323
 * @deprecated Use task.clearPedsImmediately(ped) instead
 */
export declare function clearPedTasksImmediately(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x89221B16730234F0 | Since: 323
 * @deprecated Use task.performSequenceFromProgress(ped, taskIndex, progress1, progress2) instead
 */
export declare function taskPerformSequenceFromProgress(ped: number | Ped, taskIndex: number, progress1: number, progress2: number): void;
/**
 * This native does absolutely nothing, just a nullsub
 *
 * R* Comment:
 * SET_NEXT_DESIRED_MOVE_STATE - Function is deprecated - do not use anymore
 *
 * Hash: 0xF1B9F16E89E2C93A | Since: 323
 * @deprecated Use task.setNextDesiredMoveState(nextMoveState) instead
 */
export declare function setNextDesiredMoveState(nextMoveState: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1E982AC8716912C5 | Since: 323
 * @deprecated Use task.setPedDesiredMoveBlendRatio(ped, newMoveBlendRatio) instead
 */
export declare function setPedDesiredMoveBlendRatio(ped: number | Ped, newMoveBlendRatio: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8517D4A6CA8513ED | Since: 323
 * @deprecated Use task.getPedDesiredMoveBlendRatio(ped) instead
 */
export declare function getPedDesiredMoveBlendRatio(ped: number | Ped): number;
/**
 * eg
 *
 * `TASK::TASK_GOTO_ENTITY_AIMING(v_2, PLAYER::PLAYER_PED_ID(), 5.0, 25.0);`
 *
 * ped = Ped you want to perform this task.
 * target = the Entity they should aim at.
 * distanceToStopAt = distance from the target, where the ped should stop to aim.
 * StartAimingDist = distance where the ped should start to aim.
 *
 * Hash: 0xA9DA48FAB8A76C12 | Since: 323
 * @deprecated Use task.gotoEntityAiming(ped, target, distanceToStopAt, StartAimingDist) instead
 */
export declare function taskGotoEntityAiming(ped: number | Ped, target: number | Entity, distanceToStopAt: number, StartAimingDist: number): void;
/**
 * p1 is always GET_HASH_KEY("empty") in scripts, for the rare times this is used
 *
 * Hash: 0xEB8517DDA73720DA | Since: 323
 * @deprecated Use task.setDecisionMaker(ped, decisionMakerId) instead
 */
export declare function taskSetDecisionMaker(ped: number | Ped, decisionMakerId: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x933C06518B52A9A4 | Since: 323
 * @deprecated Use task.setSphereDefensiveArea(ped, pos, radius) instead
 */
export declare function taskSetSphereDefensiveArea(ped: number | Ped, pos: Vector3, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0x95A6C46A31D1917D | Since: 323
 * @deprecated Use task.clearDefensiveArea(ped) instead
 */
export declare function taskClearDefensiveArea(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xD04FE6765D990A06 | Since: 323
 * @deprecated Use task.pedSlideToCoord(ped, pos, heading, speed) instead
 */
export declare function taskPedSlideToCoord(ped: number | Ped, pos: Vector3, heading: number, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5A4A6A6D3DC64F52 | Since: 323
 * @deprecated Use task.pedSlideToCoordHdgRate(ped, pos, heading, speed, headingChangeRate) instead
 */
export declare function taskPedSlideToCoordHdgRate(ped: number | Ped, pos: Vector3, heading: number, speed: number, headingChangeRate: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD5C12A75C7B9497F | Since: 323
 * @deprecated Use task.addCoverPoint(pos, direction, usage, height, arc, isPriority) instead
 */
export declare function addCoverPoint(pos: Vector3, direction: number, usage: number, height: number, arc: number, isPriority: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0xAE287C923D891715 | Since: 323
 * @deprecated Use task.removeCoverPoint(coverpoint) instead
 */
export declare function removeCoverPoint(coverpoint: number): void;
/**
 * Checks if there is a cover point at position
 *
 * Hash: 0xA98B8E3C088E5A31 | Since: 323
 * @deprecated Use task.doesScriptedCoverPointExistAtCoords(pos) instead
 */
export declare function doesScriptedCoverPointExistAtCoords(pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0x594A1028FC2A3E85 | Since: 323
 * @deprecated Use task.getScriptedCoverPointCoords(coverpoint) instead
 */
export declare function getScriptedCoverPointCoords(coverpoint: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x28B7B9BFDAF274AA | Since: 2545
 * @deprecated Use task.addScriptedCoverArea(pos, radius) instead
 */
export declare function addScriptedCoverArea(pos: Vector3, radius: number): void;
/**
 * Makes the specified ped attack the target ped.
 * p2 should be 0
 * p3 should be 16
 *
 * Hash: 0xF166E48407BAC484 | Since: 323
 * @deprecated Use task.combatPed(ped, targetPed, combatFlags, threatResponseFlags) instead
 */
export declare function taskCombatPed(ped: number | Ped, targetPed: number | Ped, combatFlags: number, threatResponseFlags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x944F30DCB7096BDE | Since: 323
 * @deprecated Use task.combatPedTimed(ped, target, time, flags) instead
 */
export declare function taskCombatPedTimed(ped: number | Ped, target: number | Ped, time: number, flags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x75AC2B60386D89F2 | Since: 323
 * @deprecated Use task.seekCoverFromPos(ped, pos, duration, allowPeekingAndFiring) instead
 */
export declare function taskSeekCoverFromPos(ped: number | Ped, pos: Vector3, duration: number, allowPeekingAndFiring: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x84D32B3BEC531324 | Since: 323
 * @deprecated Use task.seekCoverFromPed(ped, target, duration, allowPeekingAndFiring) instead
 */
export declare function taskSeekCoverFromPed(ped: number | Ped, target: number | Ped, duration: number, allowPeekingAndFiring: boolean): void;
/**
 * p5 is always -1
 *
 * Hash: 0xD43D95C7A869447F | Since: 323
 * @deprecated Use task.seekCoverToCoverPoint(ped, coverpoint, pos, time, allowPeekingAndFiring) instead
 */
export declare function taskSeekCoverToCoverPoint(ped: number | Ped, coverpoint: number, pos: Vector3, time: number, allowPeekingAndFiring: boolean): void;
/**
 * p8 causes the ped to take the shortest route to the cover position. It may have something to do with navmesh or pathfinding mechanics.
 *
 * from michael2:
 * `TASK::TASK_SEEK_COVER_TO_COORDS(ped, 967.5164794921875, -2121.603515625, 30.479299545288086, 978.94677734375, -2125.84130859375, 29.4752, -1, 1);`
 *
 *
 * appears to be shorter variation
 * from michael3:
 * `TASK::TASK_SEEK_COVER_TO_COORDS(ped, -2231.011474609375, 263.6326599121094, 173.60195922851562, -1, 0);`
 *
 * Hash: 0x39246A6958EF072C | Since: 323
 * @deprecated Use task.seekCoverToCoords(ped, x1, y1, z1, x2, y2, z2, timeout, shortRoute) instead
 */
export declare function taskSeekCoverToCoords(ped: number | Ped, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, timeout: number, shortRoute: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x4172393E6BE1FECE | Since: 323
 * @deprecated Use task.putPedDirectlyIntoCover(ped, pos, time, allowPeekingAndFiring, blendInDuration, forceInitialFacingDirection, forceFaceLeft, identifier, doEntry) instead
 */
export declare function taskPutPedDirectlyIntoCover(ped: number | Ped, pos: Vector3, time: number, allowPeekingAndFiring: boolean, blendInDuration: number, forceInitialFacingDirection: boolean, forceFaceLeft: boolean, identifier: number, doEntry: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6E01E9E8D89F8276 | Since: 2545
 * @deprecated Use task.warpPedDirectlyIntoCover(ped, time, allowPeekingAndFiring, forceInitialFacingDirection, forceFaceLeft, identifier) instead
 */
export declare function taskWarpPedDirectlyIntoCover(ped: number | Ped, time: number, allowPeekingAndFiring: boolean, forceInitialFacingDirection: boolean, forceFaceLeft: boolean, identifier: number): void;
/**
 * p1 is 1, 2, or 3 in scripts
 *
 * Hash: 0x79B258E397854D29 | Since: 323
 * @deprecated Use task.exitCover(ped, exitType, pos) instead
 */
export declare function taskExitCover(ped: number | Ped, exitType: number, pos: Vector3): void;
/**
 * from armenian3.c4
 *
 * `TASK::TASK_PUT_PED_DIRECTLY_INTO_MELEE(PlayerPed, armenianPed, 0.0, -1.0, 0.0, 0);`
 *
 *
 * Hash: 0x1C6CD14A876FFE39 | Since: 323
 * @deprecated Use task.putPedDirectlyIntoMelee(ped, meleeTarget, blendInDuration, timeInMelee, strafePhaseSync, aiCombatFlags) instead
 */
export declare function taskPutPedDirectlyIntoMelee(ped: number | Ped, meleeTarget: number | Ped, blendInDuration: number, timeInMelee: number, strafePhaseSync: number, aiCombatFlags: number): void;
/**
 * used in sequence task
 *
 * both parameters seems to be always 0
 *
 * Hash: 0xAC96609B9995EDF8 | Since: 323
 * @deprecated Use task.toggleDuck(ped, toggleType) instead
 */
export declare function taskToggleDuck(ped: number | Ped, toggleType: number): void;
/**
 * From re_prisonvanbreak:
 *
 * `TASK::TASK_GUARD_CURRENT_POSITION(l_DD, 35.0, 35.0, 1);`
 *
 * Hash: 0x4A58A47A72E3FCB4 | Since: 323
 * @deprecated Use task.guardCurrentPosition(ped, maxPatrolProximity, defensiveAreaRadius, setDefensiveArea) instead
 */
export declare function taskGuardCurrentPosition(ped: number | Ped, maxPatrolProximity: number, defensiveAreaRadius: number, setDefensiveArea: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD2A207EEBDF9889B | Since: 323
 * @deprecated Use task.guardAssignedDefensiveArea(ped, pos, heading, maxPatrolProximity, timer) instead
 */
export declare function taskGuardAssignedDefensiveArea(ped: number | Ped, pos: Vector3, heading: number, maxPatrolProximity: number, timer: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC946FE14BE0EB5E2 | Since: 323
 * @deprecated Use task.guardSphereDefensiveArea(ped, defendPositionX, defendPositionY, defendPositionZ, heading, maxPatrolProximity, time, pos, defensiveAreaRadius) instead
 */
export declare function taskGuardSphereDefensiveArea(ped: number | Ped, defendPositionX: number, defendPositionY: number, defendPositionZ: number, heading: number, maxPatrolProximity: number, time: number, pos: Vector3, defensiveAreaRadius: number): void;
/**
 * scenarioName example: "WORLD_HUMAN_GUARD_STAND"
 *
 * Hash: 0xAE032F8BBA959E90 | Since: 323
 * @deprecated Use task.standGuard(ped, pos, heading, scenarioName) instead
 */
export declare function taskStandGuard(ped: number | Ped, pos: Vector3, heading: number, scenarioName: string): void;
/**
 * No comment provided
 *
 * Hash: 0x5C9B84BD7D31D908 | Since: 323
 * @deprecated Use task.setDriveCruiseSpeed(driver, cruiseSpeed) instead
 */
export declare function setDriveTaskCruiseSpeed(driver: number | Ped, cruiseSpeed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x404A5AA9B9F0B746 | Since: 323
 * @deprecated Use task.setDriveMaxCruiseSpeed(ped, speed, updateBaseTask) instead
 */
export declare function setDriveTaskMaxCruiseSpeed(ped: number | Ped, speed: number, updateBaseTask: boolean): void;
/**
 * This native is used to set the driving style for specific ped.
 *
 * Driving styles id seems to be:
 * 786468
 * 262144
 * 786469
 *
 * http://gtaforums.com/topic/822314-guide-driving-styles/
 *
 * Hash: 0xDACE1BE37D88AF67 | Since: 323
 * @deprecated Use task.setDriveDrivingStyle(ped, drivingStyle) instead
 */
export declare function setDriveTaskDrivingStyle(ped: number | Ped, drivingStyle: number): void;
/**
 * No comment provided
 *
 * Hash: 0x45C597097DD7CB81 | Since: 323
 * @deprecated Use task.addCoverBlockingArea(startX, startY, startZ, endX, endY, endZ, blockObjects, blockVehicles, blockMap, blockPlayer) instead
 */
export declare function addCoverBlockingArea(startX: number, startY: number, startZ: number, endX: number, endY: number, endZ: number, blockObjects: boolean, blockVehicles: boolean, blockMap: boolean, blockPlayer: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDB6708C0B46F56D8 | Since: 323
 * @deprecated Use task.removeAllCoverBlockingAreas() instead
 */
export declare function removeAllCoverBlockingAreas(): void;
/**
 * No comment provided
 *
 * Hash: 0xFA83CA6776038F64 | Since: 1493
 * @deprecated Use task.removeCoverBlockingAreasAtPosition(pos) instead
 */
export declare function removeCoverBlockingAreasAtPosition(pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x1F351CF1C6475734 | Since: 505
 * @deprecated Use task.removeSpecificCoverBlockingAreas(startX, startY, startZ, endX, endY, endZ, blockObjects, blockVehicles, blockMap, blockPlayer) instead
 */
export declare function removeSpecificCoverBlockingAreas(startX: number, startY: number, startZ: number, endX: number, endY: number, endZ: number, blockObjects: boolean, blockVehicles: boolean, blockMap: boolean, blockPlayer: boolean): void;
/**
 * Plays a scenario on a Ped at their current location.
 *
 * unkDelay - Usually 0 or -1, doesn't seem to have any effect. Might be a delay between sequences.
 * playEnterAnim - Plays the "Enter" anim if true, otherwise plays the "Exit" anim. Scenarios that don't have any "Enter" anims won't play if this is set to true.
 *
 * ----
 *
 * From "am_hold_up.ysc.c4" at line 339:
 *
 * `TASK::TASK_START_SCENARIO_IN_PLACE(NETWORK::NET_TO_PED(l_8D._f4), sub_adf(), 0, 1);`
 *
 * I'm unsure of what the last two parameters are, however sub_adf() randomly returns 1 of 3 scenarios, those being:
 * WORLD_HUMAN_SMOKING
 * WORLD_HUMAN_HANG_OUT_STREET
 * WORLD_HUMAN_STAND_MOBILE
 *
 * This makes sense, as these are what I commonly see when going by a liquor store.
 * -------------------------
 * List of scenarioNames: https://pastebin.com/6mrYTdQv
 * (^ Thank you so fucking much for this)
 *
 * Also these:
 * WORLD_FISH_FLEE
 * DRIVE
 * WORLD_HUMAN_HIKER
 * WORLD_VEHICLE_ATTRACTOR
 * WORLD_VEHICLE_BICYCLE_MOUNTAIN
 * WORLD_VEHICLE_BIKE_OFF_ROAD_RACE
 * WORLD_VEHICLE_BIKER
 * WORLD_VEHICLE_CONSTRUCTION_PASSENGERS
 * WORLD_VEHICLE_CONSTRUCTION_SOLO
 * WORLD_VEHICLE_DRIVE_PASSENGERS
 * WORLD_VEHICLE_DRIVE_SOLO
 * WORLD_VEHICLE_EMPTY
 * WORLD_VEHICLE_PARK_PARALLEL
 * WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN
 * WORLD_VEHICLE_POLICE_BIKE
 * WORLD_VEHICLE_POLICE_CAR
 * WORLD_VEHICLE_POLICE_NEXT_TO_CAR
 * WORLD_VEHICLE_SALTON_DIRT_BIKE
 * WORLD_VEHICLE_TRUCK_LOGS
 *
 * Full list of ped scenarios by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenariosCompact.json
 *
 * Hash: 0x142A02425FF02BD9 | Since: 323
 * @deprecated Use task.startScenarioInPlace(ped, scenarioName, unkDelay, playEnterAnim) instead
 */
export declare function taskStartScenarioInPlace(ped: number | Ped, scenarioName: string, unkDelay: number, playEnterAnim: boolean): void;
/**
 * Full list of ped scenarios by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenariosCompact.json
 *
 * `Also a few more listed at TASK::TASK_START_SCENARIO_IN_PLACE just above.`
 * ---------------
 * The first parameter in every scenario has always been a Ped of some sort. The second like TASK_START_SCENARIO_IN_PLACE is the name of the scenario.
 *
 * The next 4 parameters were harder to decipher. After viewing "hairdo_shop_mp.ysc.c4", and being confused from seeing the case in other scripts, they passed the first three of the arguments as one array from a function, and it looked like it was obviously x, y, and z.
 *
 * I haven't seen the sixth parameter go to or over 360, making me believe that it is rotation, but I really can't confirm anything.
 *
 * I have no idea what the last 3 parameters are, but I'll try to find out.
 *
 * -going on the last 3 parameters, they appear to always be "0, 0, 1"
 *
 * p6 -1 also used in scrips
 *
 * p7 used for sitting scenarios
 *
 * p8 teleports ped to position
 *
 * Hash: 0xFA4EFC79F69D4F07 | Since: 323
 * @deprecated Use task.startScenarioAtPosition(ped, scenarioName, pos, heading, duration, sittingScenario, teleport) instead
 */
export declare function taskStartScenarioAtPosition(ped: number | Ped, scenarioName: string, pos: Vector3, heading: number, duration: number, sittingScenario: boolean, teleport: boolean): void;
/**
 * Updated variables
 *
 * `An alternative to TASK::TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP. Makes the ped walk to the scenario instead.`
 *
 * Hash: 0x277F471BA9DB000B | Since: 323
 * @deprecated Use task.useNearestScenarioToCoord(ped, pos, distance, duration) instead
 */
export declare function taskUseNearestScenarioToCoord(ped: number | Ped, pos: Vector3, distance: number, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x58E2E0F23F6B76C3 | Since: 323
 * @deprecated Use task.useNearestScenarioToCoordWarp(ped, pos, radius, timeToLeave) instead
 */
export declare function taskUseNearestScenarioToCoordWarp(ped: number | Ped, pos: Vector3, radius: number, timeToLeave: number): void;
/**
 * p5 is always 0 in scripts
 *
 * Hash: 0x9FDA1B3D7E7028B3 | Since: 323
 * @deprecated Use task.useNearestScenarioChainToCoord(ped, pos, maxRange, timeToLeave) instead
 */
export declare function taskUseNearestScenarioChainToCoord(ped: number | Ped, pos: Vector3, maxRange: number, timeToLeave: number): void;
/**
 * p5 is always -1 or 0 in scripts
 *
 * Hash: 0x97A28E63F0BA5631 | Since: 323
 * @deprecated Use task.useNearestScenarioChainToCoordWarp(ped, pos, radius, timeToLeave) instead
 */
export declare function taskUseNearestScenarioChainToCoordWarp(ped: number | Ped, pos: Vector3, radius: number, timeToLeave: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5A59271FFADD33C1 | Since: 323
 * @deprecated Use task.doesScenarioExistInArea(pos, radius, mustBeFree) instead
 */
export declare function doesScenarioExistInArea(pos: Vector3, radius: number, mustBeFree: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0A9D0C2A3BBC86C1 | Since: 323
 * @deprecated Use task.doesScenarioOfTypeExistInArea(pos, scenarioName, radius, mustBeFree) instead
 */
export declare function doesScenarioOfTypeExistInArea(pos: Vector3, scenarioName: string, radius: number, mustBeFree: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x788756D73AC2E07C | Since: 323
 * @deprecated Use task.isScenarioOccupied(pos, maxRange, onlyUsersActuallyAtScenario) instead
 */
export declare function isScenarioOccupied(pos: Vector3, maxRange: number, onlyUsersActuallyAtScenario: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x295E3CCEC879CCD7 | Since: 323
 * @deprecated Use task.pedHasUseScenario(ped) instead
 */
export declare function pedHasUseScenarioTask(ped: number | Ped): boolean;
/**
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0x748040460F8DF5DC | Since: 323
 * @deprecated Use task.playAnimOnRunningScenario(ped, animDict, animName) instead
 */
export declare function playAnimOnRunningScenario(ped: number | Ped, animDict: string, animName: string): void;
/**
 * Full list of scenario groups used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenarioGroupNames.json
 * Occurrences in the b617d scripts:
 *
 * "ARMY_GUARD",
 * "ARMY_HELI",
 * "Cinema_Downtown",
 * "Cinema_Morningwood",
 * "Cinema_Textile",
 * "City_Banks",
 * "Countryside_Banks",
 * "DEALERSHIP",
 * "GRAPESEED_PLANES",
 * "KORTZ_SECURITY",
 * "LOST_BIKERS",
 * "LSA_Planes",
 * "LSA_Planes",
 * "MP_POLICE",
 * "Observatory_Bikers",
 * "POLICE_POUND1",
 * "POLICE_POUND2",
 * "POLICE_POUND3",
 * "POLICE_POUND4",
 * "POLICE_POUND5"
 * "QUARRY",
 * "SANDY_PLANES",
 * "SCRAP_SECURITY",
 * "SEW_MACHINE",
 * "SOLOMON_GATE",
 * "Triathlon_1_Start",
 * "Triathlon_2_Start",
 * "Triathlon_3_Start"
 *
 * Sometimes used with IS_SCENARIO_GROUP_ENABLED:
 * `if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") && (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {`
 * `else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {`
 *
 *
 * Hash: 0xF9034C136C9E00D3 | Since: 323
 * @deprecated Use task.doesScenarioGroupExist(scenarioGroup) instead
 */
export declare function doesScenarioGroupExist(scenarioGroup: string): boolean;
/**
 * Full list of scenario groups used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenarioGroupNames.json
 * Occurrences in the b617d scripts:
 *
 * "ARMY_GUARD",
 * "ARMY_HELI",
 * "BLIMP",
 * "Cinema_Downtown",
 * "Cinema_Morningwood",
 * "Cinema_Textile",
 * "City_Banks",
 * "Countryside_Banks",
 * "DEALERSHIP",
 * "KORTZ_SECURITY",
 * "LSA_Planes",
 * "MP_POLICE",
 * "Observatory_Bikers",
 * "POLICE_POUND1",
 * "POLICE_POUND2",
 * "POLICE_POUND3",
 * "POLICE_POUND4",
 * "POLICE_POUND5",
 * "Rampage1",
 * "SANDY_PLANES",
 * "SCRAP_SECURITY",
 * "SEW_MACHINE",
 * "SOLOMON_GATE"
 *
 * Sometimes used with DOES_SCENARIO_GROUP_EXIST:
 * `if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") &&   (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {`
 * `else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {`
 *
 * Hash: 0x367A09DED4E05B99 | Since: 323
 * @deprecated Use task.isScenarioGroupEnabled(scenarioGroup) instead
 */
export declare function isScenarioGroupEnabled(scenarioGroup: string): boolean;
/**
 * Full list of scenario groups used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenarioGroupNames.json
 * Occurrences in the b617d scripts: https://pastebin.com/Tvg2PRHU
 *
 * Hash: 0x02C8E5B49848664E | Since: 323
 * @deprecated Use task.setScenarioGroupEnabled(scenarioGroup, enabled) instead
 */
export declare function setScenarioGroupEnabled(scenarioGroup: string, enabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDD902D0349AFAD3A | Since: 323
 * @deprecated Use task.resetScenarioGroupsEnabled() instead
 */
export declare function resetScenarioGroupsEnabled(): void;
/**
 * Full list of scenario groups used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenarioGroupNames.json
 * Groups found in the scripts used with this native:
 *
 * "AMMUNATION",
 * "QUARRY",
 * "Triathlon_1",
 * "Triathlon_2",
 * "Triathlon_3"
 *
 * Hash: 0x535E97E1F7FC0C6A | Since: 323
 * @deprecated Use task.setExclusiveScenarioGroup(scenarioGroup) instead
 */
export declare function setExclusiveScenarioGroup(scenarioGroup: string): void;
/**
 * No comment provided
 *
 * Hash: 0x4202BBCB8684563D | Since: 323
 * @deprecated Use task.resetExclusiveScenarioGroup() instead
 */
export declare function resetExclusiveScenarioGroup(): void;
/**
 * Full list of scenario types used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenariosCompact.json
 * Occurrences in the b617d scripts:
 * "PROP_HUMAN_SEAT_CHAIR",
 * "WORLD_HUMAN_DRINKING",
 * "WORLD_HUMAN_HANG_OUT_STREET",
 * "WORLD_HUMAN_SMOKING",
 * "WORLD_MOUNTAIN_LION_WANDER",
 * "WORLD_HUMAN_DRINKING"
 *
 * `Sometimes used together with MISC::IS_STRING_NULL_OR_EMPTY in the scripts.`
 *
 * `scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.`
 *
 *
 * Hash: 0x3A815DB3EA088722 | Since: 323
 * @deprecated Use task.isScenarioTypeEnabled(scenarioType) instead
 */
export declare function isScenarioTypeEnabled(scenarioType: string): boolean;
/**
 * Full list of scenario types used in scripts by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/scenariosCompact.json
 * seems to enable/disable specific scenario-types from happening in the game world.
 *
 * Here are some scenario types from the scripts:
 * "WORLD_MOUNTAIN_LION_REST"
 * "WORLD_MOUNTAIN_LION_WANDER"
 * "DRIVE"
 * "WORLD_VEHICLE_POLICE_BIKE"
 * "WORLD_VEHICLE_POLICE_CAR"
 * "WORLD_VEHICLE_POLICE_NEXT_TO_CAR"
 * "WORLD_VEHICLE_DRIVE_SOLO"
 * "WORLD_VEHICLE_BIKER"
 * "WORLD_VEHICLE_DRIVE_PASSENGERS"
 * "WORLD_VEHICLE_SALTON_DIRT_BIKE"
 * "WORLD_VEHICLE_BICYCLE_MOUNTAIN"
 * "PROP_HUMAN_SEAT_CHAIR"
 * "WORLD_VEHICLE_ATTRACTOR"
 * "WORLD_HUMAN_LEANING"
 * "WORLD_HUMAN_HANG_OUT_STREET"
 * "WORLD_HUMAN_DRINKING"
 * "WORLD_HUMAN_SMOKING"
 * "WORLD_HUMAN_GUARD_STAND"
 * "WORLD_HUMAN_CLIPBOARD"
 * "WORLD_HUMAN_HIKER"
 * "WORLD_VEHICLE_EMPTY"
 * "WORLD_VEHICLE_BIKE_OFF_ROAD_RACE"
 * "WORLD_HUMAN_PAPARAZZI"
 * "WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN"
 * "WORLD_VEHICLE_PARK_PARALLEL"
 * "WORLD_VEHICLE_CONSTRUCTION_SOLO"
 * "WORLD_VEHICLE_CONSTRUCTION_PASSENGERS"
 * "WORLD_VEHICLE_TRUCK_LOGS"
 *
 * `scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.`
 *
 * Hash: 0xEB47EC4E34FB7EE1 | Since: 323
 * @deprecated Use task.setScenarioTypeEnabled(scenarioType, toggle) instead
 */
export declare function setScenarioTypeEnabled(scenarioType: string, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0D40EE2A7F2B2D6D | Since: 323
 * @deprecated Use task.resetScenarioTypesEnabled() instead
 */
export declare function resetScenarioTypesEnabled(): void;
/**
 * No comment provided
 *
 * Hash: 0xAA135F9482C82CC3 | Since: 323
 * @deprecated Use task.isPedActiveInScenario(ped) instead
 */
export declare function isPedActiveInScenario(ped: number | Ped): boolean;
/**
 * Used only once (am_mp_property_int)
 *
 * ped was PLAYER_PED_ID()
 *
 * Related to CTaskAmbientClips.
 *
 * Hash: 0x621C6E4729388E41 | Since: 323
 * @deprecated Use task.isPedPlayingBaseClipInScenario(ped) instead
 */
export declare function isPedPlayingBaseClipInScenario(ped: number | Ped): boolean;
/**
 * Appears only in fm_mission_controller and used only 3 times.
 *
 * ped was always PLAYER_PED_ID()
 * p1 was always true
 * p2 was always true
 *
 * Hash: 0x8FD89A6240813FD0 | Since: 323
 * @deprecated Use task.setPedCanPlayAmbientIdles(ped, blockIdleClips, removeIdleClipIfPlaying) instead
 */
export declare function setPedCanPlayAmbientIdles(ped: number | Ped, blockIdleClips: boolean, removeIdleClipIfPlaying: boolean): void;
/**
 * Despite its name, it only attacks ONE hated target. The one closest to the specified position.
 *
 * Hash: 0x4CF5F55DAC3280A0 | Since: 323
 * @deprecated Use task.combatHatedTargetsInArea(ped, pos, radius, combatFlags) instead
 */
export declare function taskCombatHatedTargetsInArea(ped: number | Ped, pos: Vector3, radius: number, combatFlags: number): void;
/**
 * Despite its name, it only attacks ONE hated target. The one closest hated target.
 *
 * p2 seems to be always 0
 *
 * Hash: 0x7BF835BB9E2698C8 | Since: 323
 * @deprecated Use task.combatHatedTargetsAroundPed(ped, radius, combatFlags) instead
 */
export declare function taskCombatHatedTargetsAroundPed(ped: number | Ped, radius: number, combatFlags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2BBA30B854534A0C | Since: 323
 * @deprecated Use task.combatHatedTargetsAroundPedTimed(ped, radius, time, combatFlags) instead
 */
export declare function taskCombatHatedTargetsAroundPedTimed(ped: number | Ped, radius: number, time: number, combatFlags: number): void;
/**
 * In every case of this native, I've only seen the first parameter passed as 0, although I believe it's a Ped after seeing tasks around it using 0. That's because it's used in a Sequence Task.
 *
 * The last 3 parameters are definitely coordinates after seeing them passed in other scripts, and even being used straight from the player's coordinates.
 * ---
 * It seems that - in the decompiled scripts - this native was used on a ped who was in a vehicle to throw a projectile out the window at the player. This is something any ped will naturally do if they have a throwable and they are doing driveby-combat (although not very accurately).
 * It is possible, however, that this is how SWAT throws smoke grenades at the player when in cover.
 * ----------------------------------------------------
 * The first comment is right it definately is the ped as if you look in script finale_heist2b.c line 59628 in Xbox Scripts atleast you will see task_throw_projectile and the first param is Local_559[2 <14>] if you look above it a little bit line 59622 give_weapon_to_ped uses the same exact param Local_559[2 <14>] and we all know the first param of that native is ped. So it guaranteed has to be ped. 0 just may mean to use your ped by default for some reason.
 *
 * Hash: 0x7285951DBF6B5A51 | Since: 323
 * @deprecated Use task.throwProjectile(ped, pos, ignoreCollisionEntityIndex, createInvincibleProjectile) instead
 */
export declare function taskThrowProjectile(ped: number | Ped, pos: Vector3, ignoreCollisionEntityIndex: number, createInvincibleProjectile: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA21C51255B205245 | Since: 323
 * @deprecated Use task.swapWeapon(ped, drawWeapon) instead
 */
export declare function taskSwapWeapon(ped: number | Ped, drawWeapon: boolean): void;
/**
 * The 2nd param (drawWeapon) is not implemented.
 *
 * -----------------------------------------------------------------------
 *
 * The only occurrence I found in a R* script ("assassin_construction.ysc.c4"):
 *
 * `if (((v_3 < v_4) && (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), 0x6a67a5cc) != 1)) && (v_5 > v_3)) {`
 * `TASK::TASK_RELOAD_WEAPON(PLAYER::PLAYER_PED_ID(), 1);`
 * }
 *
 * Hash: 0x62D2916F56B9CD2D | Since: 323
 * @deprecated Use task.reloadWeapon(ped, drawWeapon) instead
 */
export declare function taskReloadWeapon(ped: number | Ped, drawWeapon: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2A74E1D5F2F00EEC | Since: 323
 * @deprecated Use task.isPedGettingUp(ped) instead
 */
export declare function isPedGettingUp(ped: number | Ped): boolean;
/**
 * EX: Function.Call(Ped1, Ped2, Time, 0);
 *
 * The last parameter is always 0 for some reason I do not know. The first parameter is the pedestrian who will writhe to the pedestrian in the other parameter. The third paremeter is how long until the Writhe task ends. When the task ends, the ped will die. If set to -1, he will not die automatically, and the task will continue until something causes it to end. This can be being touched by an entity, being shot, explosion, going into ragdoll, having task cleared. Anything that ends the current task will kill the ped at this point.
 *
 *
 *
 * Third parameter does not appear to be time. The last parameter is not implemented (It's not used, regardless of value).
 *
 * Hash: 0xCDDC2B77CE54AC6E | Since: 323
 * @deprecated Use task.writhe(ped, target, minFireLoops, startState, forceShootOnGround, shootFromGroundTimer) instead
 */
export declare function taskWrithe(ped: number | Ped, target: number | Ped, minFireLoops: number, startState: number, forceShootOnGround: boolean, shootFromGroundTimer: number): void;
/**
 * This native checks if a ped is on the ground, in pain from a (gunshot) wound.
 * Returns `true` if the ped is in writhe, `false` otherwise.
 *
 * Hash: 0xDEB6D52126E7D640 | Since: 323
 * @deprecated Use task.isPedInWrithe(ped) instead
 */
export declare function isPedInWrithe(ped: number | Ped): boolean;
/**
 * patrolRoutes found in the b617d scripts:
 * "miss_Ass0",
 * "miss_Ass1",
 * "miss_Ass2",
 * "miss_Ass3",
 * "miss_Ass4",
 * "miss_Ass5",
 * "miss_Ass6",
 * "MISS_PATROL_6",
 * "MISS_PATROL_7",
 * "MISS_PATROL_8",
 * "MISS_PATROL_9",
 * "miss_Tower_01",
 * "miss_Tower_02",
 * "miss_Tower_03",
 * "miss_Tower_04",
 * "miss_Tower_05",
 * "miss_Tower_06",
 * "miss_Tower_07",
 * "miss_Tower_08",
 * "miss_Tower_10"
 *
 * Hash: 0xA36BFB5EE89F3D82 | Since: 323
 * @deprecated Use task.openPatrolRoute(patrolRoute) instead
 */
export declare function openPatrolRoute(patrolRoute: string): void;
/**
 * No comment provided
 *
 * Hash: 0xB043ECA801B8CBC1 | Since: 323
 * @deprecated Use task.closePatrolRoute() instead
 */
export declare function closePatrolRoute(): void;
/**
 * Example:
 * `TASK::ADD_PATROL_ROUTE_NODE(2, "WORLD_HUMAN_GUARD_STAND", -193.4915, -2378.864990234375, 10.9719, -193.4915, -2378.864990234375, 10.9719, 3000);`
 *
 * p0 is between 0 and 4 in the scripts.
 *
 * p1 is "WORLD_HUMAN_GUARD_STAND" or "StandGuard".
 *
 * p2, p3 and p4 is only one parameter sometimes in the scripts. Most likely a Vector3 hence p2, p3 and p4 are coordinates.
 * Examples:
 * `TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_739[7\/\*3\*\/], 0.0, 0.0, 0.0, 0);`
 *
 * `TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_B0[17\/\*44\*\/]._f3, l_B0[17\/\*44\*\/]._f3, 2000);`
 *
 * p5, p6 and p7 are for example set to: 1599.0406494140625, 2713.392578125, 44.4309.
 *
 * `p8 is an int, often random set to for example: MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000).`
 *
 * Hash: 0x8EDF950167586B7C | Since: 323
 * @deprecated Use task.addPatrolRouteNode(nodeId, nodeType, pos, headingX, headingY, headingZ, duration) instead
 */
export declare function addPatrolRouteNode(nodeId: number, nodeType: string, pos: Vector3, headingX: number, headingY: number, headingZ: number, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0x23083260DEC3A551 | Since: 323
 * @deprecated Use task.addPatrolRouteLink(nodeId1, nodeId2) instead
 */
export declare function addPatrolRouteLink(nodeId1: number, nodeId2: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAF8A443CCC8018DC | Since: 323
 * @deprecated Use task.createPatrolRoute() instead
 */
export declare function createPatrolRoute(): void;
/**
 * From the b617d scripts:
 *
 * `TASK::DELETE_PATROL_ROUTE("miss_merc0");`
 * `TASK::DELETE_PATROL_ROUTE("miss_merc1");`
 * `TASK::DELETE_PATROL_ROUTE("miss_merc2");`
 * `TASK::DELETE_PATROL_ROUTE("miss_dock");`
 *
 * Hash: 0x7767DD9D65E91319 | Since: 323
 * @deprecated Use task.deletePatrolRoute(patrolRoute) instead
 */
export declare function deletePatrolRoute(patrolRoute: string): void;
/**
 * No comment provided
 *
 * Hash: 0x52F734CEBE20DFBA | Since: 2545
 * @deprecated Use task.getPatrolInfo(ped) instead
 */
export declare function getPatrolTaskInfo(ped: number | Ped): [boolean, number, number];
/**
 * After looking at some scripts the second parameter seems to be an id of some kind. Here are some I found from some R* scripts:
 *
 * "miss_Tower_01" (this went from 01 - 10)
 * "miss_Ass0" (0, 4, 6, 3)
 * "MISS_PATROL_8"
 *
 * I think they're patrol routes, but I'm not sure. And I believe the 3rd parameter is a BOOL, but I can't confirm other than only seeing 0 and 1 being passed.
 *
 *
 * As far as I can see the patrol routes names such as "miss_Ass0" have been defined earlier in the scripts. This leads me to believe we can defined our own new patrol routes by following the same approach.
 * From the scripts
 *
 * `TASK::OPEN_PATROL_ROUTE("miss_Ass0");`
 * `TASK::ADD_PATROL_ROUTE_NODE(0, "WORLD_HUMAN_GUARD_STAND", l_738[0\/\*3\*\/], -139.4076690673828, -993.4732055664062, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));`
 * `TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_738[1\/\*3\*\/], -116.1391830444336, -987.4984130859375, 26.38541030883789, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));`
 * `TASK::ADD_PATROL_ROUTE_NODE(2, "WORLD_HUMAN_GUARD_STAND", l_738[2\/\*3\*\/], -128.46847534179688, -979.0340576171875, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));`
 * `TASK::ADD_PATROL_ROUTE_LINK(0, 1);`
 * `TASK::ADD_PATROL_ROUTE_LINK(1, 2);`
 * `TASK::ADD_PATROL_ROUTE_LINK(2, 0);`
 * `TASK::CLOSE_PATROL_ROUTE();`
 * `TASK::CREATE_PATROL_ROUTE();`
 *
 *
 *
 * Hash: 0xBDA5DF49D080FE4E | Since: 323
 * @deprecated Use task.patrol(ped, patrolRouteName, alertState, canChatToPeds, useHeadLookAt) instead
 */
export declare function taskPatrol(ped: number | Ped, patrolRouteName: string, alertState: number, canChatToPeds: boolean, useHeadLookAt: boolean): void;
/**
 * Makes the ped run to take cover
 *
 * Hash: 0xE5DA8615A6180789 | Since: 323
 * @deprecated Use task.stayInCover(ped) instead
 */
export declare function taskStayInCover(ped: number | Ped): void;
/**
 * x, y, z: offset in world coords from some entity.
 *
 * Hash: 0x5CF0D8F9BBA0DD75 | Since: 323
 * @deprecated Use task.addVehicleSubAttackCoord(ped, pos) instead
 */
export declare function addVehicleSubtaskAttackCoord(ped: number | Ped, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x85F462BADC7DA47F | Since: 323
 * @deprecated Use task.addVehicleSubAttackPed(ped, target) instead
 */
export declare function addVehicleSubtaskAttackPed(ped: number | Ped, target: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x10AB107B887214D8 | Since: 323
 * @deprecated Use task.vehicleShootAtPed(ped, target, fireTolerance) instead
 */
export declare function taskVehicleShootAtPed(ped: number | Ped, target: number | Ped, fireTolerance: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE41885592B08B097 | Since: 323
 * @deprecated Use task.vehicleAimAtPed(ped, target) instead
 */
export declare function taskVehicleAimAtPed(ped: number | Ped, target: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x5190796ED39C9B6D | Since: 323
 * @deprecated Use task.vehicleShootAtCoord(ped, pos, fireTolerance) instead
 */
export declare function taskVehicleShootAtCoord(ped: number | Ped, pos: Vector3, fireTolerance: number): void;
/**
 * No comment provided
 *
 * Hash: 0x447C1E9EF844BC0F | Since: 323
 * @deprecated Use task.vehicleAimAtCoord(ped, pos) instead
 */
export declare function taskVehicleAimAtCoord(ped: number | Ped, pos: Vector3): void;
/**
 * Differs from TASK_VEHICLE_DRIVE_TO_COORDS in that it will pick the shortest possible road route without taking one-way streets and other "road laws" into consideration.
 *
 * WARNING:
 * A behaviorFlag value of 0 will result in a clunky, stupid driver!
 *
 * Recommended settings:
 * speed = 30.0f,
 * behaviorFlag = 156,
 * stoppingRange = 5.0f;
 *
 * If you simply want to have your driver move to a fixed location, call it only once, or, when necessary in the event of interruption.
 *
 * If using this to continually follow a Ped who is on foot:  You will need to run this in a tick loop.  Call it in with the Ped's updated coordinates every 20 ticks or so and you will have one hell of a smart, fast-reacting NPC driver -- provided he doesn't get stuck.  If your update frequency is too fast, the Ped may not have enough time to figure his way out of being stuck, and thus, remain stuck.  One way around this would be to implement an "anti-stuck" mechanism, which allows the driver to realize he's stuck, temporarily pause the tick, unstuck, then resume the tick.
 *
 * EDIT:  This is being discussed in more detail at http://gtaforums.com/topic/818504-any-idea-on-how-to-make-peds-clever-and-insanely-fast-c/
 *
 * Hash: 0x195AEEB13CEFE2EE | Since: 323
 * @deprecated Use task.vehicleGotoNavmesh(ped, vehicle, pos, speed, behaviorFlag, stoppingRange) instead
 */
export declare function taskVehicleGotoNavmesh(ped: number | Ped, vehicle: number | Vehicle, pos: Vector3, speed: number, behaviorFlag: number, stoppingRange: number): void;
/**
 * movement_speed: mostly 2f, but also 1/1.2f, etc.
 * p8: always false
 * p9: 2f
 * p10: 0.5f
 * p11: true
 * p12: 0 / 512 / 513, etc.
 * p13: 0
 * firing_pattern: ${firing_pattern_full_auto}, 0xC6EE6B4C
 *
 * Hash: 0x11315AB3385B8AC0 | Since: 323
 * @deprecated Use task.goToCoordWhileAimingAtCoord(ped, pos, aimAtX, aimAtY, aimAtZ, moveBlendRatio, shoot, targetRadius, slowDistance, useNavMesh, navFlags, instantBlendToAim, firingPattern) instead
 */
export declare function taskGoToCoordWhileAimingAtCoord(ped: number | Ped, pos: Vector3, aimAtX: number, aimAtY: number, aimAtZ: number, moveBlendRatio: number, shoot: boolean, targetRadius: number, slowDistance: number, useNavMesh: boolean, navFlags: number, instantBlendToAim: boolean, firingPattern: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0xB2A16444EAD9AE47 | Since: 323
 * @deprecated Use task.goToCoordWhileAimingAtEntity(ped, pos, aimAtID, moveBlendRatio, shoot, targetRadius, slowDistance, useNavMesh, navFlags, instantBlendToAim, firingPattern, time) instead
 */
export declare function taskGoToCoordWhileAimingAtEntity(ped: number | Ped, pos: Vector3, aimAtID: number | Entity, moveBlendRatio: number, shoot: boolean, targetRadius: number, slowDistance: number, useNavMesh: boolean, navFlags: number, instantBlendToAim: boolean, firingPattern: number | string, time: number): void;
/**
 * The ped will walk or run towards goToLocation, aiming towards goToLocation or focusLocation (depending on the aimingFlag) and shooting if shootAtEnemies = true to any enemy in his path.
 *
 * If the ped is closer than noRoadsDistance, the ped will ignore pathing/navmesh and go towards goToLocation directly. This could cause the ped to get stuck behind tall walls if the goToLocation is on the other side. To avoid this, use 0.0f and the ped will always use pathing/navmesh to reach his destination.
 *
 * If the speed is set to 0.0f, the ped will just stand there while aiming, if set to 1.0f he will walk while aiming, 2.0f will run while aiming.
 *
 * The ped will stop aiming when he is closer than distanceToStopAt to goToLocation.
 *
 * I still can't figure out what unkTrue is used for. I don't notice any difference if I set it to false but in the decompiled scripts is always true.
 *
 * I think that unkFlag, like the driving styles, could be a flag that "work as a list of 32 bits converted to a decimal integer. Each bit acts as a flag, and enables or disables a function". What leads me to this conclusion is the fact that in the decompiled scripts, unkFlag takes values like: 0, 1, 5 (101 in binary) and 4097 (4096 + 1 or 1000000000001 in binary). For now, I don't know what behavior enable or disable this possible flag so I leave it at 0.
 *
 * Note: After some testing, using unkFlag = 16 (0x10) enables the use of sidewalks while moving towards goToLocation.
 *
 * The aimingFlag takes 2 values: 0 to aim at the focusLocation, 1 to aim at where the ped is heading (goToLocation).
 *
 * Example:
 *
 * enum AimFlag
 * {
 * AimAtFocusLocation,
 * AimAtGoToLocation
 * };
 *
 * Vector3 goToLocation1 = { 996.2867f, 0, -2143.044f, 0, 28.4763f, 0 }; // remember the padding.
 *
 * Vector3 goToLocation2 = { 990.2867f, 0, -2140.044f, 0, 28.4763f, 0 }; // remember the padding.
 *
 * Vector3 focusLocation = { 994.3478f, 0, -2136.118f, 0, 29.2463f, 0 }; // the coord z should be a little higher, around +1.0f to avoid aiming at the ground
 *
 * // 1st example
 * `TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation1.x, goToLocation1.y, goToLocation1.z, focusLocation.x, focusLocation.y, focusLocation.z, 2.0f \/\*run\*\/, true \/\*shoot\*\/, 3.0f \/\*stop at\*\/, 0.0f \/\*noRoadsDistance\*\/, true \/\*always true\*\/, 0 \/\*possible flag\*\/, AimFlag::AimAtGoToLocation, -957453492 \/\*FullAuto pattern\*\/);`
 *
 * // 2nd example
 * `TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation2.x, goToLocation2.y, goToLocation2.z, focusLocation.x, focusLocation.y, focusLocation.z, 1.0f \/\*walk\*\/, false \/\*don't shoot\*\/, 3.0f \/\*stop at\*\/, 0.0f \/\*noRoadsDistance\*\/, true \/\*always true\*\/, 0 \/\*possible flag\*\/, AimFlag::AimAtFocusLocation, -957453492 \/\*FullAuto pattern\*\/);`
 *
 *
 * 1st example: The ped (pedhandle) will run towards goToLocation1. While running and aiming towards goToLocation1, the ped will shoot on sight to any enemy in his path, using "FullAuto" firing pattern. The ped will stop once he is closer than distanceToStopAt to goToLocation1.
 *
 * 2nd example: The ped will walk towards goToLocation2. This time, while walking towards goToLocation2 and aiming at focusLocation, the ped will point his weapon on sight to any enemy in his path without shooting. The ped will stop once he is closer than distanceToStopAt to goToLocation2.
 *
 * Hash: 0xA55547801EB331FC | Since: 323
 * @deprecated Use task.goToCoordAndAimAtHatedEntitiesNearCoord(pedHandle, goToLocationX, goToLocationY, goToLocationZ, focusLocationX, focusLocationY, focusLocationZ, speed, shootAtEnemies, distanceToStopAt, noRoadsDistance, useNavMesh, navFlags, taskFlags, firingPattern) instead
 */
export declare function taskGoToCoordAndAimAtHatedEntitiesNearCoord(pedHandle: number | Ped, goToLocationX: number, goToLocationY: number, goToLocationZ: number, focusLocationX: number, focusLocationY: number, focusLocationZ: number, speed: number, shootAtEnemies: boolean, distanceToStopAt: number, noRoadsDistance: number, useNavMesh: boolean, navFlags: number, taskFlags: number, firingPattern: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x04701832B739DCE5 | Since: 323
 * @deprecated Use task.goToEntityWhileAimingAtCoord(ped, entity, aimX, aimY, aimZ, moveBlendRatio, shoot, targetRadius, slowDistance, useNavMesh, instantBlendToAim, firingPattern) instead
 */
export declare function taskGoToEntityWhileAimingAtCoord(ped: number | Ped, entity: number | Entity, aimX: number, aimY: number, aimZ: number, moveBlendRatio: number, shoot: boolean, targetRadius: number, slowDistance: number, useNavMesh: boolean, instantBlendToAim: boolean, firingPattern: number | string): void;
/**
 * shootatEntity:
 * If true, peds will shoot at Entity till it is dead.
 * If false, peds will just walk till they reach the entity and will cease shooting.
 *
 * Hash: 0x97465886D35210E9 | Since: 323
 * @deprecated Use task.goToEntityWhileAimingAtEntity(ped, entityToWalkTo, entityToAimAt, speed, shootatEntity, targetRadius, slowDistance, useNavMesh, instantBlendToAim, firingPattern) instead
 */
export declare function taskGoToEntityWhileAimingAtEntity(ped: number | Ped, entityToWalkTo: number | Entity, entityToAimAt: number | Entity, speed: number, shootatEntity: boolean, targetRadius: number, slowDistance: number, useNavMesh: boolean, instantBlendToAim: boolean, firingPattern: number | string): void;
/**
 * Makes the ped ragdoll like when falling from a great height
 *
 * Hash: 0x8C825BDC7741D37C | Since: 323
 * @deprecated Use task.setHighFall(ped, minTime, maxTime, entryType) instead
 */
export declare function setHighFallTask(ped: number | Ped, minTime: number, maxTime: number, entryType: number): void;
/**
 * Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
 * For a full list of the points, see here: goo.gl/wIH0vn
 *
 * Max number of loaded recordings is 32.
 *
 * Hash: 0x9EEFB62EB27B5792 | Since: 323
 * @deprecated Use task.requestWaypointRecording(name) instead
 */
export declare function requestWaypointRecording(name: string): void;
/**
 * Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
 *
 * Hash: 0xCB4E8BE8A0063C5D | Since: 323
 * @deprecated Use task.getIsWaypointRecordingLoaded(name) instead
 */
export declare function getIsWaypointRecordingLoaded(name: string): boolean;
/**
 * Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
 *
 * Hash: 0xFF1B8B4AA1C25DC8 | Since: 323
 * @deprecated Use task.removeWaypointRecording(name) instead
 */
export declare function removeWaypointRecording(name: string): void;
/**
 * Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
 * For a full list of the points, see here: goo.gl/wIH0vn
 *
 * Hash: 0x5343532C01A07234 | Since: 323
 * @deprecated Use task.waypointRecordingGetNumPoints(name) instead
 */
export declare function waypointRecordingGetNumPoints(name: string): [boolean, number];
/**
 * Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
 * For a full list of the points, see here: goo.gl/wIH0vn
 *
 * Hash: 0x2FB897405C90B361 | Since: 323
 * @deprecated Use task.waypointRecordingGetCoord(name, point) instead
 */
export declare function waypointRecordingGetCoord(name: string, point: number): [boolean, Vector3];
/**
 * Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
 *
 * Hash: 0x005622AEBC33ACA9 | Since: 323
 * @deprecated Use task.waypointRecordingGetSpeedAtPoint(name, point) instead
 */
export declare function waypointRecordingGetSpeedAtPoint(name: string, point: number): number;
/**
 * Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
 * For a full list of the points, see here: goo.gl/wIH0vn
 *
 * Hash: 0xB629A298081F876F | Since: 323
 * @deprecated Use task.waypointRecordingGetClosestWaypoint(name, pos) instead
 */
export declare function waypointRecordingGetClosestWaypoint(name: string, pos: Vector3): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x0759591819534F7B | Since: 323
 * @deprecated Use task.followWaypointRecording(ped, name) instead
 */
export declare function taskFollowWaypointRecording(ped: number | Ped, name: string): void;
/**
 * No comment provided
 *
 * Hash: 0xE03B3F2D3DC59B64 | Since: 323
 * @deprecated Use task.isWaypointPlaybackGoingOnForPed(ped) instead
 */
export declare function isWaypointPlaybackGoingOnForPed(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2720AAA75001E094 | Since: 323
 * @deprecated Use task.getPedWaypointProgress(ped) instead
 */
export declare function getPedWaypointProgress(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x686ECCD99D4E61BB | Since: 3570
 * @deprecated Use task.setPedWaypointProgress(ped, progress) instead
 */
export declare function setPedWaypointProgress(ped: number | Ped, progress: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE6A877C64CAF1BC5 | Since: 323
 * @deprecated Use task.getPedWaypointDistance() instead
 */
export declare function getPedWaypointDistance(): number;
/**
 * No comment provided
 *
 * Hash: 0xED98E10B0AFCE4B4 | Since: 323
 * @deprecated Use task.setPedWaypointRouteOffset(ped, pos) instead
 */
export declare function setPedWaypointRouteOffset(ped: number | Ped, pos: Vector3): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA5B769058763E497 | Since: 323
 * @deprecated Use task.getWaypointDistanceAlongRoute(name, point) instead
 */
export declare function getWaypointDistanceAlongRoute(name: string, point: number): number;
/**
 * No comment provided
 *
 * Hash: 0x701375A7D43F01CB | Since: 323
 * @deprecated Use task.waypointPlaybackGetIsPaused() instead
 */
export declare function waypointPlaybackGetIsPaused(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0F342546AA06FED5 | Since: 323
 * @deprecated Use task.waypointPlaybackPause() instead
 */
export declare function waypointPlaybackPause(): void;
/**
 * No comment provided
 *
 * Hash: 0x244F70C84C547D2D | Since: 323
 * @deprecated Use task.waypointPlaybackResume() instead
 */
export declare function waypointPlaybackResume(): void;
/**
 * No comment provided
 *
 * Hash: 0x7D7D2B47FA788E85 | Since: 323
 * @deprecated Use task.waypointPlaybackOverrideSpeed() instead
 */
export declare function waypointPlaybackOverrideSpeed(): void;
/**
 * No comment provided
 *
 * Hash: 0x6599D834B12D0800 | Since: 323
 * @deprecated Use task.waypointPlaybackUseDefaultSpeed() instead
 */
export declare function waypointPlaybackUseDefaultSpeed(): void;
/**
 * No comment provided
 *
 * Hash: 0x5A353B8E6B1095B5 | Since: 323
 * @deprecated Use task.useWaypointRecordingAsAssistedMovementRoute(name) instead
 */
export declare function useWaypointRecordingAsAssistedMovementRoute(name: string): void;
/**
 * No comment provided
 *
 * Hash: 0x20E330937C399D29 | Since: 323
 * @deprecated Use task.waypointPlaybackStartAimingAtPed(ped, target) instead
 */
export declare function waypointPlaybackStartAimingAtPed(ped: number | Ped, target: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x8968400D900ED8B3 | Since: 323
 * @deprecated Use task.waypointPlaybackStartAimingAtCoord(ped, pos) instead
 */
export declare function waypointPlaybackStartAimingAtCoord(ped: number | Ped, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xE70BA7B90F8390DC | Since: 323
 * @deprecated Use task.waypointPlaybackStartShootingAtPed(ped, ped2) instead
 */
export declare function waypointPlaybackStartShootingAtPed(ped: number | Ped, ped2: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x057A25CFCC9DB671 | Since: 323
 * @deprecated Use task.waypointPlaybackStartShootingAtCoord(ped, pos, firingPattern) instead
 */
export declare function waypointPlaybackStartShootingAtCoord(ped: number | Ped, pos: Vector3, firingPattern: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x47EFA040EBB8E2EA | Since: 323
 * @deprecated Use task.waypointPlaybackStopAimingOrShooting(ped) instead
 */
export declare function waypointPlaybackStopAimingOrShooting(ped: number | Ped): void;
/**
 * Routes: "1_FIBStairs", "2_FIBStairs", "3_FIBStairs", "4_FIBStairs", "5_FIBStairs", "5_TowardsFire", "6a_FIBStairs", "7_FIBStairs", "8_FIBStairs", "Aprtmnt_1", "AssAfterLift", "ATM_1", "coroner2", "coroner_stairs", "f5_jimmy1", "fame1", "family5b", "family5c", "Family5d", "family5d", "FIB_Glass1", "FIB_Glass2", "FIB_Glass3", "finaBroute1A", "finalb1st", "finalB1sta", "finalbround", "finalbroute2", "Hairdresser1", "jan_foyet_ft_door", "Jo_3", "Lemar1", "Lemar2", "mansion_1", "Mansion_1", "pols_1", "pols_2", "pols_3", "pols_4", "pols_5", "pols_6", "pols_7", "pols_8", "Pro_S1", "Pro_S1a", "Pro_S2", "Towards_case", "trev_steps", "tunrs1", "tunrs2", "tunrs3", "Wave01457s"
 *
 * Hash: 0x817268968605947A | Since: 323
 * @deprecated Use task.assistedMovementRequestRoute(route) instead
 */
export declare function assistedMovementRequestRoute(route: string): void;
/**
 * No comment provided
 *
 * Hash: 0x3548536485DD792B | Since: 323
 * @deprecated Use task.assistedMovementRemoveRoute(route) instead
 */
export declare function assistedMovementRemoveRoute(route: string): void;
/**
 * No comment provided
 *
 * Hash: 0x60F9A4393A21F741 | Since: 323
 * @deprecated Use task.assistedMovementIsRouteLoaded(route) instead
 */
export declare function assistedMovementIsRouteLoaded(route: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD5002D78B7162E1B | Since: 323
 * @deprecated Use task.assistedMovementSetRouteProperties(route, props) instead
 */
export declare function assistedMovementSetRouteProperties(route: string, props: number): void;
/**
 * No comment provided
 *
 * Hash: 0x13945951E16EF912 | Since: 323
 * @deprecated Use task.assistedMovementOverrideLoadDistanceThisFrame(dist) instead
 */
export declare function assistedMovementOverrideLoadDistanceThisFrame(dist: number): void;
/**
 *
 *
 * p2 = Waypoint recording string (found in update\update.rpf\x64\levels\gta5\waypointrec.rpf
 * p3 = 786468
 * p4 = 0
 * p5 = 16
 * p6 = -1 (angle?)
 * p7/8/9 = usually v3.zero
 * p10 = bool (repeat?)
 * p11 = 1073741824
 *
 * Full list of waypoint recordings by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/waypointRecordings.json
 *
 * Hash: 0x3123FAA6DB1CF7ED | Since: 323
 * @deprecated Use task.vehicleFollowWaypointRecording(ped, vehicle, WPRecording) instead
 */
export declare function taskVehicleFollowWaypointRecording(ped: number | Ped, vehicle: number | Vehicle, WPRecording: string): void;
/**
 * No comment provided
 *
 * Hash: 0xF5134943EA29868C | Since: 323
 * @deprecated Use task.isWaypointPlaybackGoingOnForVehicle(vehicle) instead
 */
export declare function isWaypointPlaybackGoingOnForVehicle(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x9824CFF8FC66E159 | Since: 323
 * @deprecated Use task.getVehicleWaypointProgress(vehicle) instead
 */
export declare function getVehicleWaypointProgress(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x416B62AC8B9E5BBD | Since: 323
 * @deprecated Use task.getVehicleWaypointTargetPoint(vehicle) instead
 */
export declare function getVehicleWaypointTargetPoint(vehicle: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x8A4E6AC373666BC5 | Since: 323
 * @deprecated Use task.vehicleWaypointPlaybackPause(vehicle) instead
 */
export declare function vehicleWaypointPlaybackPause(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xE435D3539EFDCD1B | Since: 3570
 * @deprecated Use task.vehicleWaypointPlaybackGetIsPaused(vehicle) instead
 */
export declare function vehicleWaypointPlaybackGetIsPaused(vehicle: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDC04FCAA7839D492 | Since: 323
 * @deprecated Use task.vehicleWaypointPlaybackResume(vehicle) instead
 */
export declare function vehicleWaypointPlaybackResume(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x5CEB25A7D2848963 | Since: 323
 * @deprecated Use task.vehicleWaypointPlaybackUseDefaultSpeed(vehicle) instead
 */
export declare function vehicleWaypointPlaybackUseDefaultSpeed(vehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x121F0593E0A431D7 | Since: 323
 * @deprecated Use task.vehicleWaypointPlaybackOverrideSpeed(vehicle, speed) instead
 */
export declare function vehicleWaypointPlaybackOverrideSpeed(vehicle: number | Vehicle, speed: number): void;
/**
 * I cant believe I have to define this, this is one of the best natives.
 *
 * It makes the ped ignore basically all shocking events around it. Occasionally the ped may comment or gesture, but other than that they just continue their daily activities. This includes shooting and wounding the ped. And - most importantly - they do not flee.
 *
 * Since it is a task, every time the native is called the ped will stop for a moment.
 *
 * Hash: 0x90D2156198831D69 | Since: 323
 * @deprecated Use task.setBlockingOfNonTemporaryEvents(ped, toggle) instead
 */
export declare function taskSetBlockingOfNonTemporaryEvents(ped: number | Ped, toggle: boolean): void;
/**
 * p2 always false
 *
 * [30/03/2017] ins1de :
 *
 * See FORCE_PED_MOTION_STATE
 *
 * Hash: 0x4F056E1AFFEF17AB | Since: 323
 * @deprecated Use task.forceMotionState(ped, state, forceRestart) instead
 */
export declare function taskForceMotionState(ped: number | Ped, state: number | string, forceRestart: boolean): void;
/**
 * Example:
 * `TASK::TASK_MOVE_NETWORK_BY_NAME(PLAYER::PLAYER_PED_ID(), "arm_wrestling_sweep_paired_a_rev3", 0.0f, true, "mini@arm_wrestling", 0);`
 *
 * Hash: 0x2D537BA194896636 | Since: 323
 * @deprecated Use task.moveNetworkByName(ped, task1, multiplier, allowOverrideCloneUpdate, animDict, flags) instead
 */
export declare function taskMoveNetworkByName(ped: number | Ped, task1: string, multiplier: number, allowOverrideCloneUpdate: boolean, animDict: string, flags: number): void;
/**
 * Example:
 * `TASK::TASK_MOVE_NETWORK_ADVANCED_BY_NAME(PLAYER::PLAYER_PED_ID(), "minigame_tattoo_michael_parts", 324.13f, 181.29f, 102.6f, 0.0f, 0.0f, 22.32f, 2, 0, false, 0, 0);`
 *
 * Hash: 0xD5B35BEA41919ACB | Since: 323
 * @deprecated Use task.moveNetworkAdvancedByName(ped, network, pos, rot, rotOrder, blendDuration, allowOverrideCloneUpdate, animDict, flags) instead
 */
export declare function taskMoveNetworkAdvancedByName(ped: number | Ped, network: string, pos: Vector3, rot: Vector3, rotOrder: number, blendDuration: number, allowOverrideCloneUpdate: boolean, animDict: string, flags: number): void;
/**
 * Used only once in the scripts (am_mp_nightclub)
 *
 * Hash: 0x3D45B0B355C5E0C9 | Since: 1493
 * @deprecated Use task.moveNetworkByNameWithInitParams(ped, network, blendDuration, allowOverrideCloneUpdate, animDict, flags) instead
 */
export declare function taskMoveNetworkByNameWithInitParams(ped: number | Ped, network: string, blendDuration: number, allowOverrideCloneUpdate: boolean, animDict: string, flags: number): number;
/**
 * No comment provided
 *
 * Hash: 0x29682E2CCF21E9B5 | Since: 1868
 * @deprecated Use task.moveNetworkAdvancedByNameWithInitParams(ped, network, pos, rot, rotOrder, blendDuration, allowOverrideCloneUpdate, dictionary, flags) instead
 */
export declare function taskMoveNetworkAdvancedByNameWithInitParams(ped: number | Ped, network: string, pos: Vector3, rot: Vector3, rotOrder: number, blendDuration: number, allowOverrideCloneUpdate: boolean, dictionary: string, flags: number): number;
/**
 * No comment provided
 *
 * Hash: 0x921CE12C489C4C41 | Since: 323
 * @deprecated Use task.isMoveNetworkActive(ped) instead
 */
export declare function isTaskMoveNetworkActive(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x30ED88D5E0C56A37 | Since: 323
 * @deprecated Use task.isMoveNetworkReadyForTransition(ped) instead
 */
export declare function isTaskMoveNetworkReadyForTransition(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD01015C7316AE176 | Since: 323
 * @deprecated Use task.requestMoveNetworkStateTransition(ped, name) instead
 */
export declare function requestTaskMoveNetworkStateTransition(ped: number | Ped, name: string): boolean;
/**
 * Used only once in the scripts (fm_mission_controller) like so:
 *
 * `TASK::SET_EXPECTED_CLONE_NEXT_TASK_MOVE_NETWORK_STATE(iLocal_3160, "Cutting");`
 *
 * Hash: 0xAB13A5565480B6D9 | Since: 323
 * @deprecated Use task.setExpectedCloneNextMoveNetworkState(ped, state) instead
 */
export declare function setExpectedCloneNextTaskMoveNetworkState(ped: number | Ped, state: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x717E4D1F2048376D | Since: 323
 * @deprecated Use task.getMoveNetworkState(ped) instead
 */
export declare function getTaskMoveNetworkState(ped: number | Ped): string;
/**
 * No comment provided
 *
 * Hash: 0x8423541E8B3A1589 | Since: 1493
 * @deprecated Use task.setMoveNetworkAnimSet(ped, clipSet, variableClipSet) instead
 */
export declare function setTaskMoveNetworkAnimSet(ped: number | Ped, clipSet: number | string, variableClipSet: number | string): void;
/**
 * signalName - "Phase", "Wobble", "x_axis","y_axis","introphase","speed".
 * p2 - From what i can see it goes up to 1f (maybe).
 *
 * `Example: TASK::SET_TASK_MOVE_NETWORK_SIGNAL_FLOAT(PLAYER::PLAYER_PED_ID(), "Phase", 0.5);`
 *
 * Hash: 0xD5BB4025AE449A4E | Since: 323
 * @deprecated Use task.setMoveNetworkSignalFloat(ped, signalName, value) instead
 */
export declare function setTaskMoveNetworkSignalFloat(ped: number | Ped, signalName: string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x373EF409B82697A3 | Since: 1493
 * @deprecated Use task.setMoveNetworkSignalLocalFloat(ped, signalName, value) instead
 */
export declare function setTaskMoveNetworkSignalLocalFloat(ped: number | Ped, signalName: string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8634CEF2522D987B | Since: 1493
 * @deprecated Use task.setMoveNetworkSignalFloatLerpRate(ped, signalName, value) instead
 */
export declare function setTaskMoveNetworkSignalFloatLerpRate(ped: number | Ped, signalName: string, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB0A6CFD2C69C1088 | Since: 323
 * @deprecated Use task.setMoveNetworkSignalBool(ped, signalName, value) instead
 */
export declare function setTaskMoveNetworkSignalBool(ped: number | Ped, signalName: string, value: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x44AB0B3AFECCE242 | Since: 1493
 * @deprecated Use task.getMoveNetworkSignalFloat(ped, signalName) instead
 */
export declare function getTaskMoveNetworkSignalFloat(ped: number | Ped, signalName: string): number;
/**
 * No comment provided
 *
 * Hash: 0xA7FFBA498E4AAF67 | Since: 323
 * @deprecated Use task.getMoveNetworkSignalBool(ped, signalName) instead
 */
export declare function getTaskMoveNetworkSignalBool(ped: number | Ped, signalName: string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB4F47213DF45A64C | Since: 323
 * @deprecated Use task.getMoveNetworkEvent(ped, eventName) instead
 */
export declare function getTaskMoveNetworkEvent(ped: number | Ped, eventName: string): boolean;
/**
 * Doesn't actually return anything.
 *
 * Hash: 0x0FFB3C758E8C07B9 | Since: 2060
 * @deprecated Use task.setMoveNetworkEnableCollisionOnNetworkCloneWhenFixed(ped, enable) instead
 */
export declare function setTaskMoveNetworkEnableCollisionOnNetworkCloneWhenFixed(ped: number | Ped, enable: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x32F6EEF031F943DC | Since: 3095
 * @deprecated Use task.setScriptEnableCollisionOnNetworkCloneWhenFixed(ped, enable) instead
 */
export declare function setScriptTaskEnableCollisionOnNetworkCloneWhenFixed(ped: number | Ped, enable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0EFE4834A2F40563 | Since: 3570
 * @deprecated Use task.setAmbientPedEnableCollisionOnNetworkCloneWhenFixed(ped, enable) instead
 */
export declare function setAmbientPedEnableCollisionOnNetworkCloneWhenFixed(ped: number | Ped, enable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x349CE7B56DAFD95C | Since: 323
 * @deprecated Use task.isMoveBlendRatioStill(ped) instead
 */
export declare function isMoveBlendRatioStill(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF133BBBE91E1691F | Since: 323
 * @deprecated Use task.isMoveBlendRatioWalking(ped) instead
 */
export declare function isMoveBlendRatioWalking(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD4D8636C0199A939 | Since: 323
 * @deprecated Use task.isMoveBlendRatioRunning(ped) instead
 */
export declare function isMoveBlendRatioRunning(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x24A2AD74FA9814E2 | Since: 323
 * @deprecated Use task.isMoveBlendRatioSprinting(ped) instead
 */
export declare function isMoveBlendRatioSprinting(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAC29253EEF8F0180 | Since: 323
 * @deprecated Use task.isPedStill(ped) instead
 */
export declare function isPedStill(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDE4C184B2B9B071A | Since: 323
 * @deprecated Use task.isPedWalking(ped) instead
 */
export declare function isPedWalking(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC5286FFC176F28A2 | Since: 323
 * @deprecated Use task.isPedRunning(ped) instead
 */
export declare function isPedRunning(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x57E457CD2C0FC168 | Since: 323
 * @deprecated Use task.isPedSprinting(ped) instead
 */
export declare function isPedSprinting(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE45B7F222DE47E09 | Since: 323
 * @deprecated Use task.isPedStrafing(ped) instead
 */
export declare function isPedStrafing(ped: number | Ped): boolean;
/**
 * `TASK::TASK_SYNCHRONIZED_SCENE(ped, scene, "creatures@rottweiler@in_vehicle@std_car", "get_in", 1000.0, -8.0, 4, 0, 0x447a0000, 0);`
 *
 * Full list of animation dictionaries and anims by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/animDictsCompact.json
 *
 * Hash: 0xEEA929141F699854 | Since: 323
 * @deprecated Use task.synchronizedScene(ped, scene, animDictionary, animationName, blendIn, blendOut, flags, ragdollBlockingFlags, moverBlendDelta, ikFlags) instead
 */
export declare function taskSynchronizedScene(ped: number | Ped, scene: number, animDictionary: string, animationName: string, blendIn: number, blendOut: number, flags: number, ragdollBlockingFlags: number, moverBlendDelta: number, ikFlags: number): void;
/**
 * No comment provided
 *
 * Hash: 0x19D1B791CB3670FE | Since: 877
 * @deprecated Use task.agitatedActionConfrontResponse(ped, ped2) instead
 */
export declare function taskAgitatedActionConfrontResponse(ped: number | Ped, ped2: number | Ped): void;
/**
 * This function is called on peds in vehicles.
 *
 * anim: animation name
 * p2, p3, p4: "sweep_low", "sweep_med" or "sweep_high"
 * p5: no idea what it does but is usually -1
 *
 * Hash: 0x2047C02158D6405A | Since: 323
 * @deprecated Use task.sweepAimEntity(ped, animDict, lowAnimName, medAnimName, hiAnimName, runtime, targetEntity, turnRate, blendInDuration) instead
 */
export declare function taskSweepAimEntity(ped: number | Ped, animDict: string, lowAnimName: string, medAnimName: string, hiAnimName: string, runtime: number, targetEntity: number | Entity, turnRate: number, blendInDuration: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE4973DBDBE6E44B3 | Since: 323
 * @deprecated Use task.updateSweepAimEntity(ped, entity) instead
 */
export declare function updateTaskSweepAimEntity(ped: number | Ped, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x7AFE8FDC10BC07D2 | Since: 323
 * @deprecated Use task.sweepAimPosition(ped, animDict, lowAnimName, medAnimName, hiAnimName, runtime, pos, turnRate, blendInDuration) instead
 */
export declare function taskSweepAimPosition(ped: number | Ped, animDict: string, lowAnimName: string, medAnimName: string, hiAnimName: string, runtime: number, pos: Vector3, turnRate: number, blendInDuration: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBB106883F5201FC4 | Since: 323
 * @deprecated Use task.updateSweepAimPosition(ped, pos) instead
 */
export declare function updateTaskSweepAimPosition(ped: number | Ped, pos: Vector3): void;
/**
 * Example from "me_amanda1.ysc.c4":
 * `TASK::TASK_ARREST_PED(l_19F \/\* This is a Ped \*\/ , PLAYER::PLAYER_PED_ID());`
 *
 * Example from "armenian1.ysc.c4":
 * `if (!PED::IS_PED_INJURED(l_B18[0\/\*1\*\/])) {`
 * `TASK::TASK_ARREST_PED(l_B18[0\/\*1\*\/], PLAYER::PLAYER_PED_ID());`
 * }
 *
 * I would love to have time to experiment to see if a player Ped can arrest another Ped. Might make for a good cop mod.
 *
 *
 * Looks like only the player can be arrested this way. Peds react and try to arrest you if you task them, but the player charater doesn't do anything if tasked to arrest another ped.
 *
 * Hash: 0xF3B9A78A178572B1 | Since: 323
 * @deprecated Use task.arrestPed(ped, target) instead
 */
export declare function taskArrestPed(ped: number | Ped, target: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x3DC52677769B4AE0 | Since: 323
 * @deprecated Use task.isPedRunningArrest(ped) instead
 */
export declare function isPedRunningArrestTask(ped: number | Ped): boolean;
/**
 * This function is hard-coded to always return 0.
 *
 * Hash: 0x90A09F3A45FED688 | Since: 323
 * @deprecated Use task.isPedBeingArrested(ped) instead
 */
export declare function isPedBeingArrested(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x67406F2C8F87FC4F | Since: 323
 * @deprecated Use task.uncuffPed(ped) instead
 */
export declare function uncuffPed(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0x74E559B3BC910685 | Since: 323
 * @deprecated Use task.isPedCuffed(ped) instead
 */
export declare function isPedCuffed(ped: number | Ped): boolean;
/**
 * p7 when set to true allows you to spawn vehicles under -100 z.
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0xAF35D0D2583051B0 | Since: 323
 * @deprecated Use vehicle.create(modelHash, pos, heading, isNetwork, bScriptHostVeh) instead
 */
export declare function createVehicle(modelHash: number | string, pos: Vector3, heading: number, isNetwork: boolean, bScriptHostVeh: boolean): number;
/**
 * Deletes a vehicle.
 * The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
 *
 * eg how to use:
 * SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
 * DELETE_VEHICLE(&vehicle);
 *
 * Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.
 *
 * Hash: 0xEA386986E786A54F | Since: 323
 * @deprecated Use vehicle.deleteVehicle(vehicle1) instead
 */
export declare function deleteVehicle(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x7D6F9A3EF26136A0 | Since: 323
 * @deprecated Use vehicle.setAllowHomingMissleLockon(vehicle1, toggle) instead
 */
export declare function setVehicleAllowHomingMissleLockon(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1DDA078D12879EEE | Since: 463
 * @deprecated Use vehicle.setAllowHomingMissleLockonSynced(vehicle1, canBeLockedOn) instead
 */
export declare function setVehicleAllowHomingMissleLockonSynced(vehicle1: number | Vehicle, canBeLockedOn: boolean): void;
/**
 * Makes the vehicle accept no passengers.
 *
 * Hash: 0x5D14D4154BFE7B2C | Since: 323
 * @deprecated Use vehicle.setAllowNoPassengersLockon(veh, toggle) instead
 */
export declare function setVehicleAllowNoPassengersLockon(veh: number | Vehicle, toggle: boolean): void;
/**
 * Returns a value depending on the lock-on state of vehicle weapons.
 * 0: not locked on
 * 1: locking on
 * 2: locked on
 *
 * Hash: 0xE6B0E8CFC3633BF0 | Since: 323
 * @deprecated Use vehicle.getHomingLockonState(vehicle1) instead
 */
export declare function getVehicleHomingLockonState(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x6EAAEFC76ACC311F | Since: 757
 * @deprecated Use vehicle.getHomingLockedontoState() instead
 */
export declare function getVehicleHomingLockedontoState(): number;
/**
 * No comment provided
 *
 * Hash: 0x407DC5E97DB1A4D3 | Since: 1493
 * @deprecated Use vehicle.setHomingLockedontoState() instead
 */
export declare function setVehicleHomingLockedontoState(): void;
/**
 * No comment provided
 *
 * Hash: 0x423E8DE37D934D89 | Since: 323
 * @deprecated Use vehicle.isModel(vehicle1, model) instead
 */
export declare function isVehicleModel(vehicle1: number | Vehicle, model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF6086BC836400876 | Since: 323
 * @deprecated Use vehicle.doesScriptGeneratorExist(vehicleGenerator) instead
 */
export declare function doesScriptVehicleGeneratorExist(vehicleGenerator: number): boolean;
/**
 * Creates a script vehicle generator at the given coordinates. Most parameters after the model hash are unknown.
 *
 * Parameters:
 * x/y/z - Generator position
 * heading - Generator heading
 * p4 - Unknown (always 5.0)
 * p5 - Unknown (always 3.0)
 * modelHash - Vehicle model hash
 * p7/8/9/10 - Unknown (always -1)
 * p11 - Unknown (usually TRUE, only one instance of FALSE)
 * p12/13 - Unknown (always FALSE)
 * p14 - Unknown (usally FALSE, only two instances of TRUE)
 * p15 - Unknown (always TRUE)
 * p16 - Unknown (always -1)
 *
 * Vector3 coords = GET_ENTITY_COORDS(PLAYER_PED_ID(), 0);    CREATE_SCRIPT_VEHICLE_GENERATOR(coords.x, coords.y, coords.z, 1.0f, 5.0f, 3.0f, GET_HASH_KEY("adder"), -1. -1, -1, -1, -1, true, false, false, false, true, -1);
 *
 * Hash: 0x9DEF883114668116 | Since: 323
 * @deprecated Use vehicle.createScriptGenerator(pos, heading, modelHash) instead
 */
export declare function createScriptVehicleGenerator(pos: Vector3, heading: number, modelHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x22102C9ABFCF125D | Since: 323
 * @deprecated Use vehicle.deleteScriptGenerator(vehicleGenerator) instead
 */
export declare function deleteScriptVehicleGenerator(vehicleGenerator: number): void;
/**
 * Only called once in the decompiled scripts. Presumably activates the specified generator.
 *
 * Hash: 0xD9D620E0AC6DC4B0 | Since: 323
 * @deprecated Use vehicle.setScriptGenerator(vehicleGenerator, enabled) instead
 */
export declare function setScriptVehicleGenerator(vehicleGenerator: number, enabled: boolean): void;
/**
 * When p6 is true, vehicle generators are active.
 * p7 seems to always be true in story mode scripts, but it's sometimes false in online scripts.
 *
 * Hash: 0xC12321827687FE4D | Since: 323
 * @deprecated Use vehicle.setAllGeneratorsActiveInArea(x1, y1, z1, x2, y2, z2, toggle) instead
 */
export declare function setAllVehicleGeneratorsActiveInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x34AD89078831A4BC | Since: 323
 * @deprecated Use vehicle.setAllGeneratorsActive() instead
 */
export declare function setAllVehicleGeneratorsActive(): void;
/**
 * No comment provided
 *
 * Hash: 0x608207E7A8FB787C | Since: 323
 * @deprecated Use vehicle.setAllLowPriorityGeneratorsActive(active) instead
 */
export declare function setAllLowPriorityVehicleGeneratorsActive(active: boolean): void;
/**
 * Related to car generators & CPlayerSwitchMgrLong
 *
 * Hash: 0x9A75585FB2E54FAD | Since: 323
 * @deprecated Use vehicle.setGeneratorAreaOfInterest(pos, radius) instead
 */
export declare function setVehicleGeneratorAreaOfInterest(pos: Vector3, radius: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0A436B8643716D14 | Since: 323
 * @deprecated Use vehicle.clearGeneratorAreaOfInterest() instead
 */
export declare function clearVehicleGeneratorAreaOfInterest(): void;
/**
 * Sets a vehicle on the ground on all wheels.  Returns whether or not the operation was successful.
 *
 * sfink: This has an additional param(Vehicle vehicle, float p1) which is always set to 5.0f in the b944 scripts.
 *
 * Hash: 0x49733E92263139D1 | Since: 323
 * @deprecated Use vehicle.setOnGroundProperly(vehicle1) instead
 */
export declare function setVehicleOnGroundProperly(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE023E8AC4EF7C117 | Since: 323
 * @deprecated Use vehicle.setUseCutsceneWheelCompression(p0) instead
 */
export declare function setVehicleUseCutsceneWheelCompression(p0: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB497F06B288DCFDF | Since: 323
 * @deprecated Use vehicle.isStuckOnRoof(vehicle1) instead
 */
export declare function isVehicleStuckOnRoof(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB72E26D81006005B | Since: 323
 * @deprecated Use vehicle.addUpsidedownCheck(vehicle1) instead
 */
export declare function addVehicleUpsidedownCheck(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xC53EB42A499A7E90 | Since: 323
 * @deprecated Use vehicle.removeUpsidedownCheck(vehicle1) instead
 */
export declare function removeVehicleUpsidedownCheck(vehicle1: number | Vehicle): void;
/**
 * Returns true if the vehicle's current speed is less than, or equal to 0.0025f.
 *
 * For some vehicles it returns true if the current speed is <= 0.00039999999.
 *
 * Hash: 0x5721B434AD84D57A | Since: 323
 * @deprecated Use vehicle.isStopped(vehicle1) instead
 */
export declare function isVehicleStopped(vehicle1: number | Vehicle): boolean;
/**
 * Gets the number of passengers.
 *
 * This native was modified in b2545 to take two additional parameters, allowing you to include the driver or exclude dead passengers.
 *
 * To keep it working like before b2545, set includeDriver to false and includeDeadOccupants to true.
 *
 * Hash: 0x24CB2137731FFE89 | Since: 323
 * @deprecated Use vehicle.getNumberOfPassengers(vehicle1, includeDriver, includeDeadOccupants) instead
 */
export declare function getVehicleNumberOfPassengers(vehicle1: number | Vehicle, includeDriver: boolean, includeDeadOccupants: boolean): number;
/**
 * No comment provided
 *
 * Hash: 0xA7C4F2C6E744A550 | Since: 323
 * @deprecated Use vehicle.getMaxNumberOfPassengers(vehicle1) instead
 */
export declare function getVehicleMaxNumberOfPassengers(vehicle1: number | Vehicle): number;
/**
 * Returns max number of passengers (including the driver) for the specified vehicle model.
 *
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0x2AD93716F184EDA4 | Since: 323
 * @deprecated Use vehicle.getModelNumberOfSeats(modelHash) instead
 */
export declare function getVehicleModelNumberOfSeats(modelHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xF7F203E31F96F6A1 | Since: 323
 * @deprecated Use vehicle.isSeatWarpOnly(vehicle1, seatIndex) instead
 */
export declare function isSeatWarpOnly(vehicle1: number | Vehicle, seatIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE33FFA906CE74880 | Since: 323
 * @deprecated Use vehicle.isTurretSeat(vehicle1, seatIndex) instead
 */
export declare function isTurretSeat(vehicle1: number | Vehicle, seatIndex: number): boolean;
/**
 * Returns true if the vehicle has the FLAG_ALLOWS_RAPPEL flag set.
 *
 * Hash: 0x4E417C547182C84D | Since: 757
 * @deprecated Use vehicle.doesAllowRappel(vehicle1) instead
 */
export declare function doesVehicleAllowRappel(vehicle1: number | Vehicle): boolean;
/**
 * Use this native inside a looped function.
 * Values:
 * - `0.0` = no vehicles on streets
 * - `1.0` = normal vehicles on streets
 *
 * Hash: 0x245A6883D966D537 | Since: 323
 * @deprecated Use vehicle.setDensityMultiplierThisFrame(multiplier) instead
 */
export declare function setVehicleDensityMultiplierThisFrame(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB3B3359379FE77D3 | Since: 323
 * @deprecated Use vehicle.setRandomDensityMultiplierThisFrame(multiplier) instead
 */
export declare function setRandomVehicleDensityMultiplierThisFrame(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xEAE6DCC7EEE3DB1D | Since: 323
 * @deprecated Use vehicle.setParkedDensityMultiplierThisFrame(multiplier) instead
 */
export declare function setParkedVehicleDensityMultiplierThisFrame(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD4B8E3D1917BC86B | Since: 323
 * @deprecated Use vehicle.setDisableRandomTrainsThisFrame(toggle) instead
 */
export declare function setDisableRandomTrainsThisFrame(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x90B6DA738A9A25DA | Since: 323
 * @deprecated Use vehicle.setAmbientRangeMultiplierThisFrame(value) instead
 */
export declare function setAmbientVehicleRangeMultiplierThisFrame(value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x26324F33423F3CC3 | Since: 323
 * @deprecated Use vehicle.setFarDraws(toggle) instead
 */
export declare function setFarDrawVehicles(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xCAA15F13EBD417FF | Since: 323
 * @deprecated Use vehicle.setNumberOfParkeds(value) instead
 */
export declare function setNumberOfParkedVehicles(value: number): void;
/**
 * enum eVehicleLockState
 * {
 * VEHICLELOCK_NONE,
 * VEHICLELOCK_UNLOCKED,
 * VEHICLELOCK_LOCKED,
 * VEHICLELOCK_LOCKOUT_PLAYER_ONLY,
 * VEHICLELOCK_LOCKED_PLAYER_INSIDE,
 * VEHICLELOCK_LOCKED_INITIALLY,
 * VEHICLELOCK_FORCE_SHUT_DOORS,
 * VEHICLELOCK_LOCKED_BUT_CAN_BE_DAMAGED,
 * VEHICLELOCK_LOCKED_BUT_BOOT_UNLOCKED,
 * VEHICLELOCK_LOCKED_NO_PASSENGERS,
 * VEHICLELOCK_CANNOT_ENTER
 * };
 *
 * Hash: 0xB664292EAECF7FA6 | Since: 323
 * @deprecated Use vehicle.setDoorsLocked(vehicle1, doorLockStatus) instead
 */
export declare function setVehicleDoorsLocked(vehicle1: number | Vehicle, doorLockStatus: number): void;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0xBE70724027F85BCD | Since: 323
 * @deprecated Use vehicle.setIndividualDoorsLocked(vehicle1, doorId, doorLockStatus) instead
 */
export declare function setVehicleIndividualDoorsLocked(vehicle1: number | Vehicle, doorId: number, doorLockStatus: number): void;
/**
 * If set to true, prevents vehicle sirens from having sound, leaving only the lights.
 *
 * Hash: 0xD8050E0EB60CF274 | Since: 323
 * @deprecated Use vehicle.setHasMutedSirens(vehicle1, toggle) instead
 */
export declare function setVehicleHasMutedSirens(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x517AAF684BB50CD1 | Since: 323
 * @deprecated Use vehicle.setDoorsLockedForPlayer(vehicle1, player, toggle) instead
 */
export declare function setVehicleDoorsLockedForPlayer(vehicle1: number | Vehicle, player: number | string | Player, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF6AF6CB341349015 | Since: 323
 * @deprecated Use vehicle.getDoorsLockedForPlayer(vehicle1, player) instead
 */
export declare function getVehicleDoorsLockedForPlayer(vehicle1: number | Vehicle, player: number | string | Player): boolean;
/**
 * After some analysis, I've decided that these are what the parameters are.
 *
 * We can see this being used in R* scripts such as "am_mp_property_int.ysc.c4":
 * `l_11A1 = PED::GET_VEHICLE_PED_IS_IN(PLAYER::PLAYER_PED_ID(), 1);`
 * ...
 * `VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(l_11A1, 1);`
 *
 * Hash: 0xA2F80B8D040727CC | Since: 323
 * @deprecated Use vehicle.setDoorsLockedForAllPlayers(vehicle1, toggle) instead
 */
export declare function setVehicleDoorsLockedForAllPlayers(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9737A37136F07E75 | Since: 323
 * @deprecated Use vehicle.setDoorsLockedForNonScriptPlayers(vehicle1, toggle) instead
 */
export declare function setVehicleDoorsLockedForNonScriptPlayers(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB81F6D4A8F5EEBA8 | Since: 323
 * @deprecated Use vehicle.setDoorsLockedForTeam(vehicle1, team, toggle) instead
 */
export declare function setVehicleDoorsLockedForTeam(vehicle1: number | Vehicle, team: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x203B527D1B77904C | Since: 1365
 * @deprecated Use vehicle.setDoorsLockedForAllTeams(vehicle1, toggle) instead
 */
export declare function setVehicleDoorsLockedForAllTeams(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x76D26A22750E849E | Since: 1103
 * @deprecated Use vehicle.setDontTerminateTaskWhenAchieved(vehicle1) instead
 */
export declare function setVehicleDontTerminateTaskWhenAchieved(vehicle1: number | Vehicle): void;
/**
 * 0.0f = engine rev minimum
 * 1.0f = engine rev limit
 *
 * Hash: 0x5AE614ECA5FDD423 | Since: 3095
 * @deprecated Use vehicle.setMaxLaunchEngineRevs(vehicle1, modifier) instead
 */
export declare function setVehicleMaxLaunchEngineRevs(vehicle1: number | Vehicle, modifier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x92D96892FC06AF22 | Since: 3095
 * @deprecated Use vehicle.getThrottle(vehicle1) instead
 */
export declare function getVehicleThrottle(vehicle1: number | Vehicle): number;
/**
 * Explodes a selected vehicle.
 *
 * Vehicle vehicle = Vehicle you want to explode.
 * BOOL isAudible = If explosion makes a sound.
 * BOOL isInvisible = If the explosion is invisible or not.
 *
 * First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.
 *
 * Hash: 0xBA71116ADF5B514C | Since: 323
 * @deprecated Use vehicle.explode(vehicle1, isAudible, isInvisible) instead
 */
export declare function explodeVehicle(vehicle1: number | Vehicle, isAudible: boolean, isInvisible: boolean): void;
/**
 * Tested on the player's current vehicle. Unless you kill the driver, the vehicle doesn't loose control, however, if enabled, explodeOnImpact is still active. The moment you crash, boom.
 *
 * Hash: 0xF19D095E42D430CC | Since: 323
 * @deprecated Use vehicle.setOutOfControl(vehicle1, killDriver, explodeOnImpact) instead
 */
export declare function setVehicleOutOfControl(vehicle1: number | Vehicle, killDriver: boolean, explodeOnImpact: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2E0A74E1002380B1 | Since: 323
 * @deprecated Use vehicle.setTimedExplosion(vehicle1, ped, toggle) instead
 */
export declare function setVehicleTimedExplosion(vehicle1: number | Vehicle, ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x99AD4CCCB128CBC9 | Since: 323
 * @deprecated Use vehicle.addPhoneExplosiveDevice(vehicle1) instead
 */
export declare function addVehiclePhoneExplosiveDevice(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xAA3F739ABDDCF21F | Since: 463
 * @deprecated Use vehicle.clearPhoneExplosiveDevice() instead
 */
export declare function clearVehiclePhoneExplosiveDevice(): void;
/**
 * No comment provided
 *
 * Hash: 0x6ADAABD3068C5235 | Since: 323
 * @deprecated Use vehicle.hasPhoneExplosiveDevice() instead
 */
export declare function hasVehiclePhoneExplosiveDevice(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEF49CF0270307CBE | Since: 323
 * @deprecated Use vehicle.detonatePhoneExplosiveDevice() instead
 */
export declare function detonateVehiclePhoneExplosiveDevice(): void;
/**
 * No comment provided
 *
 * Hash: 0x6B407F2525E93644 | Since: 2944
 * @deprecated Use vehicle.haveRearDoorsBeenBlownOpenByStickybomb(vehicle1) instead
 */
export declare function haveVehicleRearDoorsBeenBlownOpenByStickybomb(vehicle1: number | Vehicle): boolean;
/**
 * This is not tested - it's just an assumption.
 * - Nac
 *
 * Doesn't seem to work.  I'll try with an int instead. --JT
 *
 * Read the scripts, im dumpass.
 *
 * `if (!VEHICLE::IS_TAXI_LIGHT_ON(l_115)) {`
 * `VEHICLE::SET_TAXI_LIGHTS(l_115, 1);`
 * }
 *
 * Hash: 0x598803E85E8448D9 | Since: 323
 * @deprecated Use vehicle.setTaxiLights(vehicle1, state) instead
 */
export declare function setTaxiLights(vehicle1: number | Vehicle, state: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x7504C0F113AB50FC | Since: 323
 * @deprecated Use vehicle.isTaxiLightOn(vehicle1) instead
 */
export declare function isTaxiLightOn(vehicle1: number | Vehicle): boolean;
/**
 * garageName example "Michael - Beverly Hills"
 *
 * Full list of garages by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/garages.json
 *
 * Hash: 0xCEE4490CD57BB3C2 | Since: 323
 * @deprecated Use vehicle.isInGarageArea(garageName, vehicle1) instead
 */
export declare function isVehicleInGarageArea(garageName: string, vehicle1: number | Vehicle): boolean;
/**
 * colorPrimary & colorSecondary are the paint index for the vehicle.
 * For a list of valid paint indexes, view: https://pastebin.com/pwHci0xK
 * -------------------------------------------------------------------------
 * Note: minimum color index is 0, maximum color index is (numColorIndices - 1)
 *
 * Full list of vehicle colors by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleColors.json
 *
 * Hash: 0x4F1D4BE3A7F24601 | Since: 323
 * @deprecated Use vehicle.setColours(vehicle1, colorPrimary, colorSecondary) instead
 */
export declare function setVehicleColours(vehicle1: number | Vehicle, colorPrimary: number, colorSecondary: number): void;
/**
 * It switch to highbeam when p1 is set to true.
 *
 * Hash: 0x8B7FD87F0DDB421E | Since: 323
 * @deprecated Use vehicle.setFullbeam(vehicle1, toggle) instead
 */
export declare function setVehicleFullbeam(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * p1 (toggle) was always 1 (true) except in one case in the b678 scripts.
 *
 * Hash: 0x07116E24E9D1929D | Since: 323
 * @deprecated Use vehicle.setIsRacing(vehicle1, toggle) instead
 */
export declare function setVehicleIsRacing(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
 *
 * Hash: 0x7141766F91D15BEA | Since: 323
 * @deprecated Use vehicle.setCustomPrimaryColour(vehicle1, r, g, b) instead
 */
export declare function setVehicleCustomPrimaryColour(vehicle1: number | Vehicle, r: number, g: number, b: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB64CF2CCA9D95F52 | Since: 323
 * @deprecated Use vehicle.getCustomPrimaryColour(vehicle1) instead
 */
export declare function getVehicleCustomPrimaryColour(vehicle1: number | Vehicle): [number, number, number];
/**
 * No comment provided
 *
 * Hash: 0x55E1D2758F34E437 | Since: 323
 * @deprecated Use vehicle.clearCustomPrimaryColour(vehicle1) instead
 */
export declare function clearVehicleCustomPrimaryColour(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xF095C0405307B21B | Since: 323
 * @deprecated Use vehicle.getIsPrimaryColourCustom(vehicle1) instead
 */
export declare function getIsVehiclePrimaryColourCustom(vehicle1: number | Vehicle): boolean;
/**
 * p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
 *
 * Hash: 0x36CED73BFED89754 | Since: 323
 * @deprecated Use vehicle.setCustomSecondaryColour(vehicle1, r, g, b) instead
 */
export declare function setVehicleCustomSecondaryColour(vehicle1: number | Vehicle, r: number, g: number, b: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8389CD56CA8072DC | Since: 323
 * @deprecated Use vehicle.getCustomSecondaryColour(vehicle1) instead
 */
export declare function getVehicleCustomSecondaryColour(vehicle1: number | Vehicle): [number, number, number];
/**
 * No comment provided
 *
 * Hash: 0x5FFBDEEC3E8E2009 | Since: 323
 * @deprecated Use vehicle.clearCustomSecondaryColour(vehicle1) instead
 */
export declare function clearVehicleCustomSecondaryColour(vehicle1: number | Vehicle): void;
/**
 * Check if Vehicle Secondary is avaliable for customize
 *
 * Hash: 0x910A32E7AAD2656C | Since: 323
 * @deprecated Use vehicle.getIsSecondaryColourCustom(vehicle1) instead
 */
export declare function getIsVehicleSecondaryColourCustom(vehicle1: number | Vehicle): boolean;
/**
 * The parameter fade is a value from 0-1, where 0 is fresh paint.
 *
 * Hash: 0x3AFDC536C3D01674 | Since: 323
 * @deprecated Use vehicle.setEnveffScale(vehicle1, fade) instead
 */
export declare function setVehicleEnveffScale(vehicle1: number | Vehicle, fade: number): void;
/**
 * The result is a value from 0-1, where 0 is fresh paint.
 *
 * Hash: 0xA82819CAC9C4C403 | Since: 323
 * @deprecated Use vehicle.getEnveffScale(vehicle1) instead
 */
export declare function getVehicleEnveffScale(vehicle1: number | Vehicle): number;
/**
 * Hardcoded to not work in multiplayer.
 *
 * Hash: 0x52BBA29D5EC69356 | Since: 323
 * @deprecated Use vehicle.setCanRespray(vehicle1, state) instead
 */
export declare function setCanResprayVehicle(vehicle1: number | Vehicle, state: boolean): void;
/**
 * Used for GTAO CEO/Associate spawned vehicles.
 *
 * Hash: 0xAB31EF4DE6800CE9 | Since: 573
 * @deprecated Use vehicle.setGoonBoss(vehicle1, toggle) instead
 */
export declare function setGoonBossVehicle(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1B212B26DD3C04DF | Since: 757
 * @deprecated Use vehicle.setOpenRearDoorsOnExplosion(vehicle1, toggle) instead
 */
export declare function setOpenRearDoorsOnExplosion(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x33506883545AC0DF | Since: 323
 * @deprecated Use vehicle.forceSubmarineSurfaceMode(vehicle1, toggle) instead
 */
export declare function forceSubmarineSurfaceMode(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC67DB108A9ADE3BE | Since: 2189
 * @deprecated Use vehicle.forceSubmarineNeurtalBuoyancy() instead
 */
export declare function forceSubmarineNeurtalBuoyancy(): void;
/**
 * No comment provided
 *
 * Hash: 0xC59872A5134879C7 | Since: 323
 * @deprecated Use vehicle.setSubmarineCrushDepths(vehicle1, depth1, depth2, depth3) instead
 */
export declare function setSubmarineCrushDepths(vehicle1: number | Vehicle, depth1: number, depth2: number, depth3: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3E71D0B300B7AA79 | Since: 2189
 * @deprecated Use vehicle.getSubmarineIsUnderDesignDepth(submarine) instead
 */
export declare function getSubmarineIsUnderDesignDepth(submarine: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x093D6DDCA5B8FBAE | Since: 2189
 * @deprecated Use vehicle.getSubmarineNumberOfAirLeaks(submarine) instead
 */
export declare function getSubmarineNumberOfAirLeaks(submarine: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xED5EDE9E676643C9 | Since: 944
 * @deprecated Use vehicle.setBoatIgnoreLandProbes() instead
 */
export declare function setBoatIgnoreLandProbes(): void;
/**
 * Use the vehicle bounds (instead of viewport) when deciding if a vehicle is sufficiently above the water (waterheight.dat), bypassing wave simulation checks
 *
 * Hash: 0x85FC953F6C6CBDE1 | Since: 2802
 * @deprecated Use vehicle.setBoundsAffectWaterProbes(vehicle1, toggle) instead
 */
export declare function setBoundsAffectWaterProbes(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x75DBEC174AEEAD10 | Since: 323
 * @deprecated Use vehicle.setBoatAnchor(vehicle1, toggle) instead
 */
export declare function setBoatAnchor(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x26C10ECBDA5D043B | Since: 323
 * @deprecated Use vehicle.canAnchorBoatHere(vehicle1) instead
 */
export declare function canAnchorBoatHere(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x24F4121D07579880 | Since: 678
 * @deprecated Use vehicle.canAnchorBoatHereIgnorePlayers(vehicle1) instead
 */
export declare function canAnchorBoatHereIgnorePlayers(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE3EBAAE484798530 | Since: 323
 * @deprecated Use vehicle.setBoatRemainsAnchoredWhilePlayerIsDriver(vehicle1, toggle) instead
 */
export declare function setBoatRemainsAnchoredWhilePlayerIsDriver(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No observed effect.
 *
 * Hash: 0xB28B1FE5BFADD7F5 | Since: 323
 * @deprecated Use vehicle.setForceLowLodAnchorMode(vehicle1) instead
 */
export declare function setForceLowLodAnchorMode(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xE842A9398079BD82 | Since: 323
 * @deprecated Use vehicle.setBoatLowLodAnchorDistance(vehicle1, value) instead
 */
export declare function setBoatLowLodAnchorDistance(vehicle1: number | Vehicle, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB0AD1238A709B1A2 | Since: 573
 * @deprecated Use vehicle.isBoatAnchored(vehicle1) instead
 */
export declare function isBoatAnchored(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8F719973E1445BA2 | Since: 323
 * @deprecated Use vehicle.setBoatSinksWhenWrecked(vehicle1, toggle) instead
 */
export declare function setBoatSinksWhenWrecked(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBD32E46AA95C1DD2 | Since: 757
 * @deprecated Use vehicle.setBoatWrecked(vehicle1) instead
 */
export declare function setBoatWrecked(vehicle1: number | Vehicle): void;
/**
 * Activate siren on vehicle (Only works if the vehicle has a siren).
 *
 * Hash: 0xF4924635A19EB37D | Since: 323
 * @deprecated Use vehicle.setSiren(vehicle1, toggle) instead
 */
export declare function setVehicleSiren(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x4C9BF537BE2634B2 | Since: 323
 * @deprecated Use vehicle.isSirenOn(vehicle1) instead
 */
export declare function isVehicleSirenOn(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB5CC40FBCB586380 | Since: 323
 * @deprecated Use vehicle.isSirenAudioOn(vehicle1) instead
 */
export declare function isVehicleSirenAudioOn(vehicle1: number | Vehicle): boolean;
/**
 * If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives
 *
 * Hash: 0x3E8C8727991A8A0B | Since: 323
 * @deprecated Use vehicle.setStrong(vehicle1, toggle) instead
 */
export declare function setVehicleStrong(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8386BFB614D06749 | Since: 323
 * @deprecated Use vehicle.removeStuckCheck(vehicle1) instead
 */
export declare function removeVehicleStuckCheck(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xA19435F193E081AC | Since: 323
 * @deprecated Use vehicle.getColours(vehicle1) instead
 */
export declare function getVehicleColours(vehicle1: number | Vehicle): [number, number];
/**
 * Check if a vehicle seat is free.
 *
 * seatIndex  = -1 being the driver seat.
 * Use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 for last seat index.
 * isTaskRunning = on true the function returns already false while a task on the target seat is running (TASK_ENTER_VEHICLE/TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT) - on false only when a ped is finally sitting in the seat.
 *
 * Hash: 0x22AC59A870E6A669 | Since: 323
 * @deprecated Use vehicle.isSeatFree(vehicle1, seatIndex, isTaskRunning) instead
 */
export declare function isVehicleSeatFree(vehicle1: number | Vehicle, seatIndex: number, isTaskRunning: boolean): boolean;
/**
 * If there is no ped in the seat, and the game considers the vehicle as ambient population, this will create a random occupant ped in the seat, which may be cleaned up by the game fairly soon if not marked as script-owned mission entity.
 *
 * Seat indexes:
 * -1 = Driver
 * 0 = Front Right Passenger
 * 1 = Back Left Passenger
 * 2 = Back Right Passenger
 * 3 = Further Back Left Passenger (vehicles > 4 seats)
 * 4 = Further Back Right Passenger (vehicles > 4 seats)
 * etc.
 *
 * If p2 is true it uses a different GetOccupant function.
 *
 * Hash: 0xBB40DD2270B65366 | Since: 323
 * @deprecated Use vehicle.getPedInSeat(vehicle1, seatIndex) instead
 */
export declare function getPedInVehicleSeat(vehicle1: number | Vehicle, seatIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0x83F969AA1EE2A664 | Since: 323
 * @deprecated Use vehicle.getLastPedInSeat(vehicle1, seatIndex) instead
 */
export declare function getLastPedInVehicleSeat(vehicle1: number | Vehicle, seatIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0xB91B4C20085BD12F | Since: 323
 * @deprecated Use vehicle.getLightsState(vehicle1) instead
 */
export declare function getVehicleLightsState(vehicle1: number | Vehicle): [boolean, boolean, boolean];
/**
 * wheelID used for 4 wheelers seem to be (0, 1, 4, 5)
 * completely - is to check if tire completely gone from rim.
 *
 * '0 = wheel_lf / bike, plane or jet front
 * '1 = wheel_rf
 * '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
 * '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
 * '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
 * '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
 * '45 = 6 wheels trailer mid wheel left
 * '47 = 6 wheels trailer mid wheel right
 *
 * Hash: 0xBA291848A0815CA9 | Since: 323
 * @deprecated Use vehicle.isTyreBurst(vehicle1, wheelID, completely) instead
 */
export declare function isVehicleTyreBurst(vehicle1: number | Vehicle, wheelID: number, completely: boolean): boolean;
/**
 * SCALE: Setting the speed to 30 would result in a speed of roughly 60mph, according to speedometer.
 *
 * Speed is in meters per second
 * You can convert meters/s to mph here:
 * http://www.calculateme.com/Speed/MetersperSecond/ToMilesperHour.htm
 *
 * Hash: 0xAB54A438726D25D5 | Since: 323
 * @deprecated Use vehicle.setForwardSpeed(vehicle1, speed) instead
 */
export declare function setVehicleForwardSpeed(vehicle1: number | Vehicle, speed: number): void;
/**
 * Seems to be identical to SET_VEHICLE_FORWARD_SPEED
 *
 * Hash: 0x6501129C9E0FFA05 | Since: 877
 * @deprecated Use vehicle.setForwardSpeedXy(vehicle1, speed) instead
 */
export declare function setVehicleForwardSpeedXy(vehicle1: number | Vehicle, speed: number): void;
/**
 * This native makes the vehicle stop immediately, as happens when we enter a MP garage.
 *
 * . distance defines how far it will travel until stopping. Garage doors use 3.0.
 *
 * . If killEngine is set to 1, you cannot resume driving the vehicle once it stops. This looks like is a bitmapped integer.
 *
 * Hash: 0x260BE8F09E326A20 | Since: 323
 * @deprecated Use vehicle.bringToHalt(vehicle1, distance, duration) instead
 */
export declare function bringVehicleToHalt(vehicle1: number | Vehicle, distance: number, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDCE97BDF8A0EABC8 | Since: 1103
 * @deprecated Use vehicle.setSteerForBuildings(vehicle1) instead
 */
export declare function setVehicleSteerForBuildings(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x9849DE24FCF23CCC | Since: 1604
 * @deprecated Use vehicle.setCausesSwerving(vehicle1, toggle) instead
 */
export declare function setVehicleCausesSwerving(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8664170EF165C4A6 | Since: 2189
 * @deprecated Use vehicle.setIgnorePlanesSmallPitchChange() instead
 */
export declare function setIgnorePlanesSmallPitchChange(): void;
/**
 * Stops CTaskBringVehicleToHalt
 *
 * Hash: 0x7C06330BFDDA182E | Since: 1103
 * @deprecated Use vehicle.stopBringingToHalt(vehicle1) instead
 */
export declare function stopBringingVehicleToHalt(vehicle1: number | Vehicle): void;
/**
 * Returns true if vehicle is halted by BRING_VEHICLE_TO_HALT
 *
 * Hash: 0xC69BB1D832A710EF | Since: 1493
 * @deprecated Use vehicle.isBeingBroughtToHalt(vehicle1) instead
 */
export declare function isVehicleBeingBroughtToHalt(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x923A293361DF44E5 | Since: 2802
 * @deprecated Use vehicle.lowerForkliftForks(forklift) instead
 */
export declare function lowerForkliftForks(forklift: number | Vehicle): void;
/**
 * 0.0 = Lowest 1.0 = Highest. This is best to be used if you wanna pick-up a car since un-realistically on GTA V forklifts can't pick up much of anything due to vehicle mass. If you put this under a car then set it above 0.0 to a 'lifted-value' it will raise the car with no issue lol
 *
 * Hash: 0x37EBBF3117BD6A25 | Since: 323
 * @deprecated Use vehicle.setForkliftForkHeight(vehicle1, height) instead
 */
export declare function setForkliftForkHeight(vehicle1: number | Vehicle, height: number): void;
/**
 * No comment provided
 *
 * Hash: 0x57715966069157AD | Since: 323
 * @deprecated Use vehicle.isEntityAttachedToHandlerFrame(vehicle1, entity) instead
 */
export declare function isEntityAttachedToHandlerFrame(vehicle1: number | Vehicle, entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x62CA17B74C435651 | Since: 323
 * @deprecated Use vehicle.isAnyEntityAttachedToHandlerFrame(vehicle1) instead
 */
export declare function isAnyEntityAttachedToHandlerFrame(vehicle1: number | Vehicle): boolean;
/**
 * Finds the vehicle that is carrying this entity with a handler frame.
 * The model of the entity must be prop_contr_03b_ld or the function will return 0.
 *
 * Hash: 0x375E7FC44F21C8AB | Since: 323
 * @deprecated Use vehicle.findHandlerContainerIsAttachedTo(entity) instead
 */
export declare function findHandlerVehicleContainerIsAttachedTo(entity: number | Entity): number;
/**
 * No comment provided
 *
 * Hash: 0x89D630CF5EA96D23 | Since: 323
 * @deprecated Use vehicle.isHandlerFrameLinedUpWithContainer(vehicle1, entity) instead
 */
export declare function isHandlerFrameLinedUpWithContainer(vehicle1: number | Vehicle, entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0x6A98C2ECF57FA5D4 | Since: 323
 * @deprecated Use vehicle.attachContainerToHandlerFrameWhenLinedUp(vehicle1, entity) instead
 */
export declare function attachContainerToHandlerFrameWhenLinedUp(vehicle1: number | Vehicle, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x7C0043FDFF6436BC | Since: 323
 * @deprecated Use vehicle.detachContainerFromHandlerFrame(vehicle1) instead
 */
export declare function detachContainerFromHandlerFrame(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x8AA9180DE2FEDD45 | Since: 323
 * @deprecated Use vehicle.setDisableHeightMapAvoidance(vehicle1) instead
 */
export declare function setVehicleDisableHeightMapAvoidance(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xBAFB99B304BC52A7 | Since: 3407
 * @deprecated Use vehicle.setPlaneAvoidsOthers(vehicle1, toggle) instead
 */
export declare function setPlaneAvoidsOthers(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0A6A279F3AA4FD70 | Since: 323
 * @deprecated Use vehicle.setBoatDisableAvoidance(vehicle1) instead
 */
export declare function setBoatDisableAvoidance(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x634148744F385576 | Since: 323
 * @deprecated Use vehicle.isHeliLandingAreaBlocked(vehicle1) instead
 */
export declare function isHeliLandingAreaBlocked(vehicle1: number | Vehicle): boolean;
/**
 * Used on helicopters and blimps during the CTaskVehicleLand task. Sets a value on the task to 10f
 *
 * Hash: 0x107A473D7A6647A9 | Since: 1290
 * @deprecated Use vehicle.setShortSlowdownForLanding(vehicle1) instead
 */
export declare function setShortSlowdownForLanding(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xE6F13851780394DA | Since: 323
 * @deprecated Use vehicle.setHeliTurbulenceScalar(vehicle1) instead
 */
export declare function setHeliTurbulenceScalar(vehicle1: number | Vehicle): void;
/**
 * Initially used in Max Payne 3, that's why we know the name.
 *
 * Hash: 0xFC40CBF7B90CA77C | Since: 877
 * @deprecated Use vehicle.setCarBootOpen(vehicle1) instead
 */
export declare function setCarBootOpen(vehicle1: number | Vehicle): void;
/**
 * `"To burst tyres VEHICLE::SET_VEHICLE_TYRE_BURST(vehicle, 0, true, 1000.0)`
 * to burst all tyres type it 8 times where p1 = 0 to 7.
 *
 * p3 seems to be how much damage it has taken. 0 doesn't deflate them, 1000 completely deflates them.
 *
 * '0 = wheel_lf / bike, plane or jet front
 * '1 = wheel_rf
 * '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
 * '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
 * '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
 * '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
 * '45 = 6 wheels trailer mid wheel left
 * '47 = 6 wheels trailer mid wheel right
 *
 * Hash: 0xEC6A202EE4960385 | Since: 323
 * @deprecated Use vehicle.setTyreBurst(vehicle1, index, onRim) instead
 */
export declare function setVehicleTyreBurst(vehicle1: number | Vehicle, index: number, onRim: boolean): void;
/**
 * Closes all doors of a vehicle:
 *
 * Hash: 0x781B3D62BB013EF5 | Since: 323
 * @deprecated Use vehicle.setDoorsShut(vehicle1, closeInstantly) instead
 */
export declare function setVehicleDoorsShut(vehicle1: number | Vehicle, closeInstantly: boolean): void;
/**
 * Allows you to toggle bulletproof tires.
 *
 * Hash: 0xEB9DC3C7D8596C46 | Since: 323
 * @deprecated Use vehicle.setTyresCanBurst(vehicle1, toggle) instead
 */
export declare function setVehicleTyresCanBurst(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x678B9BB8C3F58FEB | Since: 323
 * @deprecated Use vehicle.getTyresCanBurst(vehicle1) instead
 */
export declare function getVehicleTyresCanBurst(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x29B18B4FD460CA8F | Since: 323
 * @deprecated Use vehicle.setWheelsCanBreak(vehicle1, enabled) instead
 */
export declare function setVehicleWheelsCanBreak(vehicle1: number | Vehicle, enabled: boolean): void;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0x7C65DAC73C35C862 | Since: 323
 * @deprecated Use vehicle.setDoorOpen(vehicle1, doorId, loose, openInstantly) instead
 */
export declare function setVehicleDoorOpen(vehicle1: number | Vehicle, doorId: number, loose: boolean, openInstantly: boolean): void;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Usually used alongside other vehicle door natives.
 *
 * Hash: 0x3B458DDB57038F08 | Since: 877
 * @deprecated Use vehicle.setDoorAutoLock(vehicle1, doorId, toggle) instead
 */
export declare function setVehicleDoorAutoLock(vehicle1: number | Vehicle, doorId: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA247F9EF01D8082E | Since: 1103
 * @deprecated Use vehicle.setFleeingsUseSwitchedOffNodes() instead
 */
export declare function setFleeingVehiclesUseSwitchedOffNodes(): void;
/**
 * windowIndex:
 * 0 = Front Right Window
 * 1 = Front Left Window
 * 2 = Back Right Window
 * 3 = Back Left Window
 * 4 = Unknown
 * 5 = Unknown
 * 6 = Windscreen
 * 7 = Rear Windscreen
 *
 * Hash: 0xA711568EEDB43069 | Since: 323
 * @deprecated Use vehicle.removeWindow(vehicle1, windowIndex) instead
 */
export declare function removeVehicleWindow(vehicle1: number | Vehicle, windowIndex: number): void;
/**
 * Roll down all the windows of the vehicle passed through the first parameter.
 *
 * Hash: 0x85796B0549DDE156 | Since: 323
 * @deprecated Use vehicle.rollDownWindows(vehicle1) instead
 */
export declare function rollDownWindows(vehicle1: number | Vehicle): void;
/**
 * windowIndex:
 * 0 = Front Left Window
 * 1 = Front Right Window
 * 2 = Rear Left Window
 * 3 = Rear Right Window
 * 4 = Front Windscreen
 * 5 = Rear Windscreen
 * 6 = Mid Left
 * 7 = Mid Right
 * 8 = Invalid
 *
 * Hash: 0x7AD9E6CE657D69E3 | Since: 323
 * @deprecated Use vehicle.rollDownWindow(vehicle1, windowIndex) instead
 */
export declare function rollDownWindow(vehicle1: number | Vehicle, windowIndex: number): void;
/**
 * windowIndex:
 * 0 = Front Left Window
 * 1 = Front Right Window
 * 2 = Rear Left Window
 * 3 = Rear Right Window
 * 4 = Front Windscreen
 * 5 = Rear Windscreen
 * 6 = Mid Left
 * 7 = Mid Right
 * 8 = Invalid
 *
 * Hash: 0x602E548F46E24D59 | Since: 323
 * @deprecated Use vehicle.rollUpWindow(vehicle1, windowIndex) instead
 */
export declare function rollUpWindow(vehicle1: number | Vehicle, windowIndex: number): void;
/**
 * windowIndex:
 * 0 = Front Left Window
 * 1 = Front Right Window
 * 2 = Rear Left Window
 * 3 = Rear Right Window
 * 4 = Front Windscreen
 * 5 = Rear Windscreen
 * 6 = Mid Left
 * 7 = Mid Right
 * 8 = Invalid
 *
 * Hash: 0x9E5B5E4D2CCD2259 | Since: 323
 * @deprecated Use vehicle.smashWindow(vehicle1, windowIndex) instead
 */
export declare function smashVehicleWindow(vehicle1: number | Vehicle, windowIndex: number): void;
/**
 * windowIndex:
 * 0 = Front Left Window
 * 1 = Front Right Window
 * 2 = Rear Left Window
 * 3 = Rear Right Window
 * 4 = Front Windscreen
 * 5 = Rear Windscreen
 * 6 = Mid Left
 * 7 = Mid Right
 * 8 = Invalid
 *
 * Additional information: FIX_VEHICLE_WINDOW (0x140D0BB88) references an array of bone vehicle indices (0x141D4B3E0) { 2Ah, 2Bh, 2Ch, 2Dh, 2Eh, 2Fh, 28h, 29h } that correspond to: window_lf, window_rf, window_lr, window_rr, window_lm, window_rm, windscreen, windscreen_r. This array is used by most vehwindow natives.
 *
 * Also, this function is coded to not work on vehicles of type: CBike, Bmx, CBoat, CTrain, and CSubmarine.
 *
 * Hash: 0x772282EBEB95E682 | Since: 323
 * @deprecated Use vehicle.fixWindow(vehicle1, windowIndex) instead
 */
export declare function fixVehicleWindow(vehicle1: number | Vehicle, windowIndex: number): void;
/**
 * Detaches the vehicle's windscreen.
 * For further information, see : gtaforums.com/topic/859570-glass/#entry1068894566
 *
 * Hash: 0x6D645D59FB5F5AD3 | Since: 323
 * @deprecated Use vehicle.popOutWindscreen(vehicle1) instead
 */
export declare function popOutVehicleWindscreen(vehicle1: number | Vehicle): void;
/**
 * Pops off the "roof" bone in the direction of the specified offset from the vehicle.
 *
 * Hash: 0xE38CB9D7D39FDBCC | Since: 323
 * @deprecated Use vehicle.popOffRoofWithImpulse(vehicle1, pos) instead
 */
export declare function popOffVehicleRoofWithImpulse(vehicle1: number | Vehicle, pos: Vector3): void;
/**
 * set's if the vehicle has lights or not.
 * not an on off toggle.
 * p1 = 0 ;vehicle normal lights, off then lowbeams, then highbeams
 * p1 = 1 ;vehicle doesn't have lights, always off
 * p1 = 2 ;vehicle has always on lights
 * p1 = 3 ;or even larger like 4,5,... normal lights like =1
 * note1: when using =2 on day it's lowbeam,highbeam
 * but at night it's lowbeam,lowbeam,highbeam
 * note2: when using =0 it's affected by day or night for highbeams don't exist in daytime.
 *
 * Hash: 0x34E710FF01247C5A | Since: 323
 * @deprecated Use vehicle.setLights(vehicle1, state) instead
 */
export declare function setVehicleLights(vehicle1: number | Vehicle, state: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC45C27EF50F36ADC | Since: 323
 * @deprecated Use vehicle.setUsePlayerLightSettings(vehicle1, toggle) instead
 */
export declare function setVehicleUsePlayerLightSettings(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * p1 can be either 0, 1 or 2.
 *
 * Determines how vehicle lights behave when toggled.
 *
 * 0 = Default (Lights can be toggled between off, normal and high beams)
 * 1 = Lights Disabled (Lights are fully disabled, cannot be toggled)
 * 2 = Always On (Lights can be toggled between normal and high beams)
 *
 * Hash: 0x1FD09E7390A74D54 | Since: 323
 * @deprecated Use vehicle.setHeadlightShadows(vehicle1) instead
 */
export declare function setVehicleHeadlightShadows(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xCDE5E70C1DDB954C | Since: 323
 * @deprecated Use vehicle.setAlarm(vehicle1, state) instead
 */
export declare function setVehicleAlarm(vehicle1: number | Vehicle, state: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB8FF7AB45305C345 | Since: 323
 * @deprecated Use vehicle.startAlarm(vehicle1) instead
 */
export declare function startVehicleAlarm(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x4319E335B71FFF34 | Since: 323
 * @deprecated Use vehicle.isAlarmActivated(vehicle1) instead
 */
export declare function isVehicleAlarmActivated(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBC2042F090AF6AD3 | Since: 323
 * @deprecated Use vehicle.setInteriorlight(vehicle1, toggle) instead
 */
export declare function setVehicleInteriorlight(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Sets some bit of vehicle
 *
 * Hash: 0x8821196D91FA2DE5 | Since: 1290
 * @deprecated Use vehicle.setForceInteriorlight(vehicle1, toggle) instead
 */
export declare function setVehicleForceInteriorlight(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * multiplier = brightness of head lights.
 * this value isn't capped afaik.
 *
 * multiplier = 0.0 no lights
 * multiplier = 1.0 default game value
 *
 *
 * Hash: 0xB385454F8791F57C | Since: 323
 * @deprecated Use vehicle.setLightMultiplier(vehicle1, multiplier) instead
 */
export declare function setVehicleLightMultiplier(vehicle1: number | Vehicle, multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3C7D42D58F770B54 | Since: 323
 * @deprecated Use vehicle.attachToTrailer(vehicle1, trailer, radius) instead
 */
export declare function attachVehicleToTrailer(vehicle1: number | Vehicle, trailer: number | Vehicle, radius: number): void;
/**
 * This is the proper way of attaching vehicles to the car carrier, it's what Rockstar uses. Video Demo: https://www.youtube.com/watch?v=2lVEIzf7bgo
 *
 * Hash: 0x16B5E274BDE402F8 | Since: 323
 * @deprecated Use vehicle.attachOnToTrailer(vehicle1, trailer, offsetX, offsetY, offsetZ, coordsX, coordsY, coordsZ, rotationX, rotationY, rotationZ, disableCollisions) instead
 */
export declare function attachVehicleOnToTrailer(vehicle1: number | Vehicle, trailer: number | Vehicle, offsetX: number, offsetY: number, offsetZ: number, coordsX: number, coordsY: number, coordsZ: number, rotationX: number, rotationY: number, rotationZ: number, disableCollisions: number): void;
/**
 * No comment provided
 *
 * Hash: 0x374706271354CB18 | Since: 323
 * @deprecated Use vehicle.stabiliseEntityAttachedToHeli(vehicle1, entity) instead
 */
export declare function stabiliseEntityAttachedToHeli(vehicle1: number | Vehicle, entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x90532EDF0D2BDD86 | Since: 323
 * @deprecated Use vehicle.detachFromTrailer(vehicle1) instead
 */
export declare function detachVehicleFromTrailer(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xE7CF3C4F9F489F0C | Since: 323
 * @deprecated Use vehicle.isAttachedToTrailer(vehicle1) instead
 */
export declare function isVehicleAttachedToTrailer(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2A8F319B392E7B3F | Since: 323
 * @deprecated Use vehicle.setTrailerInverseMassScale(vehicle1) instead
 */
export declare function setTrailerInverseMassScale(vehicle1: number | Vehicle): void;
/**
 * in the decompiled scripts, seems to be always called on the vehicle right after being attached to a trailer.
 *
 * Hash: 0x95CF53B3D687F9FA | Since: 323
 * @deprecated Use vehicle.setTrailerLegsRaised(vehicle1) instead
 */
export declare function setTrailerLegsRaised(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x878C75C09FBDB942 | Since: 1103
 * @deprecated Use vehicle.setTrailerLegsLowered(vehicle1) instead
 */
export declare function setTrailerLegsLowered(vehicle1: number | Vehicle): void;
/**
 * tyreIndex = 0 to 4 on normal vehicles
 *
 * '0 = wheel_lf / bike, plane or jet front
 * '1 = wheel_rf
 * '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
 * '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
 * '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
 * '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
 * '45 = 6 wheels trailer mid wheel left
 * '47 = 6 wheels trailer mid wheel right
 *
 * Hash: 0x6E13FC662B882D1D | Since: 323
 * @deprecated Use vehicle.setTyreFixed(vehicle1, tyreIndex) instead
 */
export declare function setVehicleTyreFixed(vehicle1: number | Vehicle, tyreIndex: number): void;
/**
 * Sets a vehicle's license plate text.  8 chars maximum.
 *
 * Example:
 * `Ped playerPed = PLAYER::PLAYER_PED_ID();`
 * `Vehicle veh = PED::GET_VEHICLE_PED_IS_USING(playerPed);`
 * char *plateText = "KING";
 * `VEHICLE::SET_VEHICLE_NUMBER_PLATE_TEXT(veh, plateText);`
 *
 * Hash: 0x95A88F0B409CDA47 | Since: 323
 * @deprecated Use vehicle.setNumberPlateText(vehicle1, plateText) instead
 */
export declare function setVehicleNumberPlateText(vehicle1: number | Vehicle, plateText: string): void;
/**
 * Returns the license plate text from a vehicle. 8 chars maximum.
 *
 * Hash: 0x7CE1CCB9B293020E | Since: 323
 * @deprecated Use vehicle.getNumberPlateText(vehicle1) instead
 */
export declare function getVehicleNumberPlateText(vehicle1: number | Vehicle): string;
/**
 * Returns the number of *types* of licence plates, enumerated below in SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX.
 *
 * Hash: 0x4C4D6B2644F458CB | Since: 323
 * @deprecated Use vehicle.getNumberOfNumberPlates() instead
 */
export declare function getNumberOfVehicleNumberPlates(): number;
/**
 * Plates:
 * Blue/White - 0
 * Yellow/black - 1
 * Yellow/Blue - 2
 * Blue/White2 - 3
 * Blue/White3 - 4
 * Yankton - 5
 *
 * Hash: 0x9088EB5A43FFB0A1 | Since: 323
 * @deprecated Use vehicle.setNumberPlateTextIndex(vehicle1, plateIndex) instead
 */
export declare function setVehicleNumberPlateTextIndex(vehicle1: number | Vehicle, plateIndex: number): void;
/**
 * Returns the PlateType of a vehicle
 * Blue_on_White_1 = 3,
 * Blue_on_White_2 = 0,
 * Blue_on_White_3 = 4,
 * Yellow_on_Blue = 2,
 * Yellow_on_Black = 1,
 * North_Yankton = 5,
 *
 * Hash: 0xF11BC2DD9A3E7195 | Since: 323
 * @deprecated Use vehicle.getNumberPlateTextIndex(vehicle1) instead
 */
export declare function getVehicleNumberPlateTextIndex(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x80D9F74197EA47D9 | Since: 323
 * @deprecated Use vehicle.setRandomTrains(toggle) instead
 */
export declare function setRandomTrains(toggle: boolean): void;
/**
 * Train models HAVE TO be loaded (requested) before you use this.
 * For variation 15 - request:
 *
 * freight
 * freightcar
 * freightgrain
 * freightcont1
 * freightcont2
 * freighttrailer
 *
 *
 *
 * Hash: 0x63C6CCA8E68AE8C8 | Since: 323
 * @deprecated Use vehicle.createMissionTrain(variation, pos, direction) instead
 */
export declare function createMissionTrain(variation: number, pos: Vector3, direction: boolean): number;
/**
 * Toggles whether ambient trains can spawn on the specified track or not
 *
 * `trackId` is the internal id of the train track to switch.
 * `state` is whether ambient trains can spawn or not
 *
 * trackIds
 * 0 (`trains1.dat`) Main track around SA
 * 1 (`trains2.dat`) Davis Quartz Quarry branch
 * 2 (`trains3.dat`) Second track alongside live track along Roy Lewenstein Blv.
 * 3 (`trains4.dat`) Metro track circuit
 * 4 (`trains5.dat`) Branch in Mirror Park Railyard
 * 5 (`trains6.dat`) Branch in Mirror Park Railyard
 * 6 (`trains7.dat`) LS branch to Mirror Park Railyard
 * 7 (`trains8.dat`) Overground part of metro track along Forum Dr.
 * 8 (`trains9.dat`) Branch to Mirror Park Railyard
 * 9 (`trains10.dat`) Yankton train
 * 10 (`trains11.dat`) Part of metro track near mission row
 * 11 (`trains12.dat`) Yankton prologue mission train
 * Full list of all train tracks + track nodes by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/traintracks.json
 *
 * Hash: 0xFD813BB7DB977F20 | Since: 323
 * @deprecated Use vehicle.switchTrainTrack(trackId, state) instead
 */
export declare function switchTrainTrack(trackId: number, state: boolean): void;
/**
 * Only called once inside main_persitant with the parameters p0 = 0, p1 = 120000
 *
 * trackIndex: 0 - 26
 * Full list of all train tracks + track nodes by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/traintracks.json
 *
 * Hash: 0x21973BBF8D17EDFA | Since: 323
 * @deprecated Use vehicle.setTrainTrackSpawnFrequency(trackIndex, frequency) instead
 */
export declare function setTrainTrackSpawnFrequency(trackIndex: number, frequency: number): void;
/**
 * No comment provided
 *
 * Hash: 0x2310A8F9421EBF43 | Since: 2372
 * @deprecated Use vehicle.allowTrainToBeRemovedByPopulation() instead
 */
export declare function allowTrainToBeRemovedByPopulation(): void;
/**
 * No comment provided
 *
 * Hash: 0x736A718577F39C7D | Since: 323
 * @deprecated Use vehicle.deleteAllTrains() instead
 */
export declare function deleteAllTrains(): void;
/**
 * No comment provided
 *
 * Hash: 0xAA0BC91BE0B796E3 | Since: 323
 * @deprecated Use vehicle.setTrainSpeed(train, speed) instead
 */
export declare function setTrainSpeed(train: number | Vehicle, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x16469284DB8C62B5 | Since: 323
 * @deprecated Use vehicle.setTrainCruiseSpeed(train, speed) instead
 */
export declare function setTrainCruiseSpeed(train: number | Vehicle, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x84436EC293B1415F | Since: 323
 * @deprecated Use vehicle.setRandomBoats(toggle) instead
 */
export declare function setRandomBoats(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDA5E12F728DB30CA | Since: 2372
 * @deprecated Use vehicle.setRandomBoatsMp(toggle) instead
 */
export declare function setRandomBoatsMp(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2AFD795EEAC8D30D | Since: 323
 * @deprecated Use vehicle.setGarbageTrucks(toggle) instead
 */
export declare function setGarbageTrucks(toggle: boolean): void;
/**
 * Maximum amount of vehicles with vehicle stuck check appears to be 16.
 *
 * Hash: 0x57E4C39DE5EE8470 | Since: 323
 * @deprecated Use vehicle.doesHaveStuckVehicleCheck(vehicle1) instead
 */
export declare function doesVehicleHaveStuckVehicleCheck(vehicle1: number | Vehicle): boolean;
/**
 * See REQUEST_VEHICLE_RECORDING
 *
 * Hash: 0x21543C612379DB3C | Since: 323
 * @deprecated Use vehicle.getRecordingId(recording, script) instead
 */
export declare function getVehicleRecordingId(recording: number, script: string): number;
/**
 * Request the vehicle recording defined by the lowercase format string "%s%03d.yvr". For example, REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER") corresponds to fbis1uber001.yvr.
 * For all vehicle recording/playback natives, "script" is a common prefix that usually corresponds to the script/mission the recording is used in, "recording" is its int suffix, and "id" (e.g., in native GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID) corresponds to a unique identifier within the recording streaming module.
 * Note that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins.
 *
 * Hash: 0xAF514CABE74CBF15 | Since: 323
 * @deprecated Use vehicle.requestRecording(recording, script) instead
 */
export declare function requestVehicleRecording(recording: number, script: string): void;
/**
 * See REQUEST_VEHICLE_RECORDING
 *
 * Hash: 0x300D614A4C785FC4 | Since: 323
 * @deprecated Use vehicle.hasRecordingBeenLoaded(recording, script) instead
 */
export declare function hasVehicleRecordingBeenLoaded(recording: number, script: string): boolean;
/**
 * See REQUEST_VEHICLE_RECORDING
 *
 * Hash: 0xF1160ACCF98A3FC8 | Since: 323
 * @deprecated Use vehicle.removeRecording(recording, script) instead
 */
export declare function removeVehicleRecording(recording: number, script: string): void;
/**
 * No comment provided
 *
 * Hash: 0x92523B76657A517D | Since: 323
 * @deprecated Use vehicle.getPositionOfRecordingIdAtTime(id, time) instead
 */
export declare function getPositionOfVehicleRecordingIdAtTime(id: number, time: number): Vector3;
/**
 * This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.
 *
 * See REQUEST_VEHICLE_RECORDING
 *
 * Hash: 0xD242728AA6F0FBA2 | Since: 323
 * @deprecated Use vehicle.getPositionOfRecordingAtTime(recording, time, script) instead
 */
export declare function getPositionOfVehicleRecordingAtTime(recording: number, time: number, script: string): Vector3;
/**
 * No comment provided
 *
 * Hash: 0xF0F2103EFAF8CBA7 | Since: 323
 * @deprecated Use vehicle.getRotationOfRecordingIdAtTime(id, time) instead
 */
export declare function getRotationOfVehicleRecordingIdAtTime(id: number, time: number): Vector3;
/**
 * This native does no interpolation between pathpoints. The same rotation will be returned for all times up to the next pathpoint in the recording.
 *
 * See REQUEST_VEHICLE_RECORDING
 *
 * Hash: 0x2058206FBE79A8AD | Since: 323
 * @deprecated Use vehicle.getRotationOfRecordingAtTime(recording, time, script) instead
 */
export declare function getRotationOfVehicleRecordingAtTime(recording: number, time: number, script: string): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x102D125411A7B6E6 | Since: 323
 * @deprecated Use vehicle.getTotalDurationOfRecordingId(id) instead
 */
export declare function getTotalDurationOfVehicleRecordingId(id: number): number;
/**
 * See REQUEST_VEHICLE_RECORDING
 *
 * Hash: 0x0E48D1C262390950 | Since: 323
 * @deprecated Use vehicle.getTotalDurationOfRecording(recording, script) instead
 */
export declare function getTotalDurationOfVehicleRecording(recording: number, script: string): number;
/**
 * Distance traveled in the vehicles current recording.
 *
 * Hash: 0x2DACD605FC681475 | Since: 323
 * @deprecated Use vehicle.getPositionInRecording(vehicle1) instead
 */
export declare function getPositionInRecording(vehicle1: number | Vehicle): number;
/**
 * Can be used with GET_TOTAL_DURATION_OF_VEHICLE_RECORDING{_ID} to compute a percentage.
 *
 * Hash: 0x5746F3A7AB7FE544 | Since: 323
 * @deprecated Use vehicle.getTimePositionInRecording(vehicle1) instead
 */
export declare function getTimePositionInRecording(vehicle1: number | Vehicle): number;
/**
 * `p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).`
 *
 * See REQUEST_VEHICLE_RECORDING
 *
 * Hash: 0x3F878F92B3A7A071 | Since: 323
 * @deprecated Use vehicle.startPlaybackRecorded(vehicle1, recording, script) instead
 */
export declare function startPlaybackRecordedVehicle(vehicle1: number | Vehicle, recording: number, script: string): void;
/**
 * flags requires further research, e.g., 0x4/0x8 are related to the AI driving task and 0x20 is internally set and interacts with dynamic entity components.
 *
 * time, often zero and capped at 500, is related to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER
 *
 * Hash: 0x7D80FD645D4DA346 | Since: 323
 * @deprecated Use vehicle.startPlaybackRecordedWithFlags(vehicle1, recording, script, flags, time, drivingStyle) instead
 */
export declare function startPlaybackRecordedVehicleWithFlags(vehicle1: number | Vehicle, recording: number, script: string, flags: number, time: number, drivingStyle: number): void;
/**
 * Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
 *
 * Hash: 0x1F2E4E06DEA8992B | Since: 323
 * @deprecated Use vehicle.forcePlaybackRecordedUpdate(vehicle1) instead
 */
export declare function forcePlaybackRecordedVehicleUpdate(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x54833611C17ABDEA | Since: 323
 * @deprecated Use vehicle.stopPlaybackRecorded(vehicle1) instead
 */
export declare function stopPlaybackRecordedVehicle(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x632A689BF42301B1 | Since: 323
 * @deprecated Use vehicle.pausePlaybackRecorded(vehicle1) instead
 */
export declare function pausePlaybackRecordedVehicle(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x8879EE09268305D5 | Since: 323
 * @deprecated Use vehicle.unpausePlaybackRecorded(vehicle1) instead
 */
export declare function unpausePlaybackRecordedVehicle(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x1C8A4C2C19E68EEC | Since: 323
 * @deprecated Use vehicle.isPlaybackGoingOnFor(vehicle1) instead
 */
export declare function isPlaybackGoingOnForVehicle(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAEA8FD591FAD4106 | Since: 323
 * @deprecated Use vehicle.isPlaybackUsingAiGoingOnFor(vehicle1) instead
 */
export declare function isPlaybackUsingAiGoingOnForVehicle(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x42BC05C27A946054 | Since: 323
 * @deprecated Use vehicle.getCurrentPlaybackFor(vehicle1) instead
 */
export declare function getCurrentPlaybackForVehicle(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xAB8E2EDA0C0A5883 | Since: 323
 * @deprecated Use vehicle.skipToEndAndStopPlaybackRecorded(vehicle1) instead
 */
export declare function skipToEndAndStopPlaybackRecordedVehicle(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x6683AB880E427778 | Since: 323
 * @deprecated Use vehicle.setPlaybackSpeed(vehicle1, speed) instead
 */
export declare function setPlaybackSpeed(vehicle1: number | Vehicle, speed: number): void;
/**
 * AI abides by the provided driving style (e.g., stopping at red lights or waiting behind traffic) while executing the specificed vehicle recording.
 *
 * FORCE_PLAYBACK_RECORDED_VEHICLE_UPDATE is a related native that deals with the AI physics for such recordings.
 *
 * Hash: 0x29DE5FA52D00428C | Since: 323
 * @deprecated Use vehicle.startPlaybackRecordedUsingAi(vehicle1, recording, script, speed, drivingStyle) instead
 */
export declare function startPlaybackRecordedVehicleUsingAi(vehicle1: number | Vehicle, recording: number, script: string, speed: number, drivingStyle: number): void;
/**
 * SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)
 *
 * Hash: 0x9438F7AD68771A20 | Since: 323
 * @deprecated Use vehicle.skipTimeInPlaybackRecorded(vehicle1, time) instead
 */
export declare function skipTimeInPlaybackRecordedVehicle(vehicle1: number | Vehicle, time: number): void;
/**
 * Identical to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER with 0 as arguments for p1 and p3.
 *
 * Hash: 0xA549C3B37EA28131 | Since: 323
 * @deprecated Use vehicle.setPlaybackToUseAi(vehicle1, drivingStyle) instead
 */
export declare function setPlaybackToUseAi(vehicle1: number | Vehicle, drivingStyle: number): void;
/**
 * Time is number of milliseconds before reverting, zero for indefinitely.
 *
 * Hash: 0x6E63860BBB190730 | Since: 323
 * @deprecated Use vehicle.setPlaybackToUseAiTryToRevertBackLater(vehicle1, time, drivingStyle) instead
 */
export declare function setPlaybackToUseAiTryToRevertBackLater(vehicle1: number | Vehicle, time: number, drivingStyle: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5845066D8A1EA7F7 | Since: 323
 * @deprecated Use vehicle.setAdditionalRotationForRecordedPlayback(vehicle1, pos) instead
 */
export declare function setAdditionalRotationForRecordedVehiclePlayback(vehicle1: number | Vehicle, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x796A877E459B99EA | Since: 323
 * @deprecated Use vehicle.setPositionOffsetForRecordedPlayback(vehicle1, pos) instead
 */
export declare function setPositionOffsetForRecordedVehiclePlayback(vehicle1: number | Vehicle, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xFAF2A78061FD9EF4 | Since: 323
 * @deprecated Use vehicle.setGlobalPositionOffsetForRecordedPlayback(vehicle1, pos) instead
 */
export declare function setGlobalPositionOffsetForRecordedVehiclePlayback(vehicle1: number | Vehicle, pos: Vector3): void;
/**
 * A vehicle recording playback flag only used in jewelry_heist
 *
 * Hash: 0x063AE2B2CC273588 | Since: 323
 * @deprecated Use vehicle.setShouldLerpFromAiToFullRecording(vehicle1) instead
 */
export declare function setShouldLerpFromAiToFullRecording(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x786A4EB67B01BF0B | Since: 323
 * @deprecated Use vehicle.explodeInCutscene(vehicle1) instead
 */
export declare function explodeVehicleInCutscene(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x2FA9923062DD396C | Since: 323
 * @deprecated Use vehicle.addStuckCheckWithWarp() instead
 */
export declare function addVehicleStuckCheckWithWarp(): void;
/**
 * Makes the vehicle stop spawning naturally in traffic. Here's an essential example:
 *
 * `VEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(MISC::GET_HASH_KEY("taco"), true);`
 *
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0x0FC2D89AC25A5814 | Since: 323
 * @deprecated Use vehicle.setModelIsSuppressed(model, suppressed) instead
 */
export declare function setVehicleModelIsSuppressed(model: number | string, suppressed: boolean): void;
/**
 * Gets a random vehicle in a sphere at the specified position, of the specified radius.
 *
 * x: The X-component of the position of the sphere.
 * y: The Y-component of the position of the sphere.
 * z: The Z-component of the position of the sphere.
 * radius: The radius of the sphere. Max is 9999.9004.
 * modelHash: The vehicle model to limit the selection to. Pass 0 for any model.
 * flags: The bitwise flags that modifies the behaviour of this function.
 *
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0x386F6CE5BAF6091C | Since: 323
 * @deprecated Use vehicle.getRandomInSphere(pos, radius, modelHash, flags) instead
 */
export declare function getRandomVehicleInSphere(pos: Vector3, radius: number, modelHash: number | string, flags: number): number;
/**
 * No comment provided
 *
 * Hash: 0xC5574E0AEB86BA68 | Since: 323
 * @deprecated Use vehicle.getRandomFrontBumperInSphere() instead
 */
export declare function getRandomVehicleFrontBumperInSphere(): number;
/**
 * No comment provided
 *
 * Hash: 0xB50807EABE20A8DC | Since: 323
 * @deprecated Use vehicle.getRandomBackBumperInSphere() instead
 */
export declare function getRandomVehicleBackBumperInSphere(): number;
/**
 * Example usage
 * `VEHICLE::GET_CLOSEST_VEHICLE(x, y, z, radius, hash, unknown leave at 70)`
 *
 * x, y, z: Position to get closest vehicle to.
 * radius: Max radius to get a vehicle.
 * modelHash: Limit to vehicles with this model. 0 for any.
 * flags: The bitwise flags altering the function's behaviour.
 *
 * Does not return police cars or helicopters.
 *
 * It seems to return police cars for me, does not seem to return helicopters, planes or boats for some reason
 *
 * Only returns non police cars and motorbikes with the flag set to 70 and modelHash to 0. ModelHash seems to always be 0 when not a modelHash in the scripts, as stated above.
 *
 * These flags were found in the b617d scripts: 0,2,4,6,7,23,127,260,2146,2175,12294,16384,16386,20503,32768,67590,67711,98309,100359.
 * Converted to binary, each bit probably represents a flag as explained regarding another native here: gtaforums.com/topic/822314-guide-driving-styles
 *
 * Conversion of found flags to binary: https://pastebin.com/kghNFkRi
 *
 * At exactly 16384 which is 0100000000000000 in binary and 4000 in hexadecimal only planes are returned.
 *
 * `It's probably more convenient to use worldGetAllVehicles(int *arr, int arrSize) and check the shortest distance yourself and sort if you want by checking the vehicle type with for example VEHICLE::IS_THIS_MODEL_A_BOAT`
 *
 * -------------------------------------------------------------------------
 *
 * Conclusion: This native is not worth trying to use. Use something like this instead: https://pastebin.com/xiFdXa7h
 *
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0xF73EB622C4F1689B | Since: 323
 * @deprecated Use vehicle.getClosest(pos, radius, modelHash, flags) instead
 */
export declare function getClosestVehicle(pos: Vector3, radius: number, modelHash: number | string, flags: number): number;
/**
 * Corrected p1. it's basically the 'carriage/trailer number'. So if the train has 3 trailers you'd call the native once with a var or 3 times with 1, 2, 3.
 *
 * Hash: 0x08AAFD0814722BC3 | Since: 323
 * @deprecated Use vehicle.getTrainCarriage(train, trailerNumber) instead
 */
export declare function getTrainCarriage(train: number | Vehicle, trailerNumber: number): number;
/**
 * No comment provided
 *
 * Hash: 0xAD464F2E18836BFC | Since: 2372
 * @deprecated Use vehicle.isMissionTrain(train) instead
 */
export declare function isMissionTrain(train: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5B76B14AE875C795 | Since: 323
 * @deprecated Use vehicle.deleteMissionTrain(train) instead
 */
export declare function deleteMissionTrain(train: number | Vehicle): void;
/**
 * p1 is always 0
 *
 * Hash: 0xBBE7648349B49BE8 | Since: 323
 * @deprecated Use vehicle.setMissionTrainAsNoLongerNeeded(train) instead
 */
export declare function setMissionTrainAsNoLongerNeeded(train: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x591CA673AA6AB736 | Since: 323
 * @deprecated Use vehicle.setMissionTrainCoords(train, pos) instead
 */
export declare function setMissionTrainCoords(train: number | Vehicle, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x45A9187928F4B9E3 | Since: 323
 * @deprecated Use vehicle.isThisModelABoat(model) instead
 */
export declare function isThisModelABoat(model: number | string): boolean;
/**
 * Checks if model is a boat, then checks for FLAG_IS_JETSKI.
 *
 * Hash: 0x9537097412CF75FE | Since: 323
 * @deprecated Use vehicle.isThisModelAJetski(model) instead
 */
export declare function isThisModelAJetski(model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA0948AB42D7BA0DE | Since: 323
 * @deprecated Use vehicle.isThisModelAPlane(model) instead
 */
export declare function isThisModelAPlane(model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xDCE4334788AF94EA | Since: 323
 * @deprecated Use vehicle.isThisModelAHeli(model) instead
 */
export declare function isThisModelAHeli(model: number | string): boolean;
/**
 * To check if the model is an amphibious car, use IS_THIS_MODEL_AN_AMPHIBIOUS_CAR.
 *
 * Hash: 0x7F6DB52EEFC96DF8 | Since: 323
 * @deprecated Use vehicle.isThisModelACar(model) instead
 */
export declare function isThisModelACar(model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAB935175B22E822B | Since: 323
 * @deprecated Use vehicle.isThisModelATrain(model) instead
 */
export declare function isThisModelATrain(model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB50C0B0CEDC6CE84 | Since: 323
 * @deprecated Use vehicle.isThisModelABike(model) instead
 */
export declare function isThisModelABike(model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBF94DD42F63BDED2 | Since: 323
 * @deprecated Use vehicle.isThisModelABicycle(model) instead
 */
export declare function isThisModelABicycle(model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x39DAC362EE65FA28 | Since: 323
 * @deprecated Use vehicle.isThisModelAQuadbike(model) instead
 */
export declare function isThisModelAQuadbike(model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x633F6F44A537EBB6 | Since: 944
 * @deprecated Use vehicle.isThisModelAnAmphibiousCar(model) instead
 */
export declare function isThisModelAnAmphibiousCar(model: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA1A9FC1C76A6730D | Since: 1103
 * @deprecated Use vehicle.isThisModelAnAmphibiousQuadbike(model) instead
 */
export declare function isThisModelAnAmphibiousQuadbike(model: number | string): boolean;
/**
 * Equivalent of SET_HELI_BLADES_SPEED(vehicleHandle, 1.0f);
 *
 * Hash: 0xA178472EBB8AE60D | Since: 323
 * @deprecated Use vehicle.setHeliBladesFullSpeed(vehicle1) instead
 */
export declare function setHeliBladesFullSpeed(vehicle1: number | Vehicle): void;
/**
 * Sets the speed of the helicopter blades in percentage of the full speed.
 *
 * vehicleHandle: The helicopter.
 * speed: The speed in percentage, 0.0f being 0% and 1.0f being 100%.
 *
 * Hash: 0xFD280B4D7F3ABC4D | Since: 323
 * @deprecated Use vehicle.setHeliBladesSpeed(vehicle1, speed) instead
 */
export declare function setHeliBladesSpeed(vehicle1: number | Vehicle, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x99CAD8E7AFDB60FA | Since: 323
 * @deprecated Use vehicle.forceSubThrottleForTime(vehicle1) instead
 */
export declare function forceSubThrottleForTime(vehicle1: number | Vehicle): void;
/**
 * This has not yet been tested - it's just an assumption of what the types could be.
 *
 * Hash: 0x3750146A28097A82 | Since: 323
 * @deprecated Use vehicle.setCanBeTargetted(vehicle1, state) instead
 */
export declare function setVehicleCanBeTargetted(vehicle1: number | Vehicle, state: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDBC631F109350B8C | Since: 323
 * @deprecated Use vehicle.setDontAllowPlayerToEnterIfLockedForPlayer(vehicle1) instead
 */
export declare function setDontAllowPlayerToEnterVehicleIfLockedForPlayer(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x4C7028F78FFD3681 | Since: 323
 * @deprecated Use vehicle.setCanBeVisiblyDamaged(vehicle1, state) instead
 */
export declare function setVehicleCanBeVisiblyDamaged(vehicle1: number | Vehicle, state: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1AA8A837D2169D94 | Since: 323
 * @deprecated Use vehicle.setHasUnbreakableLights(vehicle1, toggle) instead
 */
export declare function setVehicleHasUnbreakableLights(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2311DD7159F00582 | Since: 323
 * @deprecated Use vehicle.setRespectsLocksWhenHasDriver(vehicle1) instead
 */
export declare function setVehicleRespectsLocksWhenHasDriver(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x065D03A9D6B2C6B5 | Since: 463
 * @deprecated Use vehicle.setCanEjectPassengersIfLocked() instead
 */
export declare function setVehicleCanEjectPassengersIfLocked(): void;
/**
 * Dirt level does not become greater than 15.0
 *
 * Hash: 0x8F17BC8BA08DA62B | Since: 323
 * @deprecated Use vehicle.getDirtLevel(vehicle1) instead
 */
export declare function getVehicleDirtLevel(vehicle1: number | Vehicle): number;
/**
 * You can't use values greater than 15.0
 * Also, R* does (float)(rand() % 15) to get a random dirt level when generating a vehicle.
 *
 * Hash: 0x79D3B596FE44EE8B | Since: 323
 * @deprecated Use vehicle.setDirtLevel(vehicle1, dirtLevel) instead
 */
export declare function setVehicleDirtLevel(vehicle1: number | Vehicle, dirtLevel: number): void;
/**
 * Appears to return true if the vehicle has any damage, including cosmetically.
 *
 * Hash: 0xBCDC5017D3CE1E9E | Since: 323
 * @deprecated Use vehicle.getDoesHaveDamageDecals(vehicle1) instead
 */
export declare function getDoesVehicleHaveDamageDecals(vehicle1: number | Vehicle): boolean;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0x3E933CFF7B111C22 | Since: 323
 * @deprecated Use vehicle.isDoorFullyOpen(vehicle1, doorId) instead
 */
export declare function isVehicleDoorFullyOpen(vehicle1: number | Vehicle, doorId: number): boolean;
/**
 * Starts or stops the engine on the specified vehicle.
 *
 * vehicle: The vehicle to start or stop the engine on.
 * value: true to turn the vehicle on; false to turn it off.
 * instantly: if true, the vehicle will be set to the state immediately; otherwise, the current driver will physically turn on or off the engine.
 * disableAutoStart: If true, the system will prevent the engine from starting when the player got into it.
 *
 * Hash: 0x2497C4717C8B881E | Since: 323
 * @deprecated Use vehicle.setEngineOn(vehicle1, value, instantly, disableAutoStart) instead
 */
export declare function setVehicleEngineOn(vehicle1: number | Vehicle, value: boolean, instantly: boolean, disableAutoStart: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8ABA6AF54B942B95 | Since: 323
 * @deprecated Use vehicle.setUndriveable(vehicle1, toggle) instead
 */
export declare function setVehicleUndriveable(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x5AFEEDD9BB2899D7 | Since: 323
 * @deprecated Use vehicle.setProvidesCover(vehicle1, toggle) instead
 */
export declare function setVehicleProvidesCover(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0xF2BFA0430F0A0FCB | Since: 323
 * @deprecated Use vehicle.setDoorControl(vehicle1, doorId, speed, angle) instead
 */
export declare function setVehicleDoorControl(vehicle1: number | Vehicle, doorId: number, speed: number, angle: number): void;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0xA5A9653A8D2CAF48 | Since: 323
 * @deprecated Use vehicle.setDoorLatched(vehicle1, doorId) instead
 */
export declare function setVehicleDoorLatched(vehicle1: number | Vehicle, doorId: number): void;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0xFE3F9C29F7B32BD5 | Since: 323
 * @deprecated Use vehicle.getDoorAngleRatio(vehicle1, doorId) instead
 */
export declare function getVehicleDoorAngleRatio(vehicle1: number | Vehicle, doorId: number): number;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0x218297BF0CFD853B | Since: 323
 * @deprecated Use vehicle.getPedUsingDoor(vehicle1, doord) instead
 */
export declare function getPedUsingVehicleDoor(vehicle1: number | Vehicle, doord: number): number;
/**
 * enum eDoorId
 * {
 * VEH_EXT_DOOR_INVALID_ID = -1,
 * VEH_EXT_DOOR_DSIDE_F,
 * VEH_EXT_DOOR_DSIDE_R,
 * VEH_EXT_DOOR_PSIDE_F,
 * VEH_EXT_DOOR_PSIDE_R,
 * VEH_EXT_BONNET,
 * VEH_EXT_BOOT
 * };
 *
 * Hash: 0x93D9BD300D7789E5 | Since: 323
 * @deprecated Use vehicle.setDoorShut(vehicle1, doorId, closeInstantly) instead
 */
export declare function setVehicleDoorShut(vehicle1: number | Vehicle, doorId: number, closeInstantly: boolean): void;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0xD4D4F6A4AB575A33 | Since: 323
 * @deprecated Use vehicle.setDoorBroken(vehicle1, doorId, deleteDoor) instead
 */
export declare function setVehicleDoorBroken(vehicle1: number | Vehicle, doorId: number, deleteDoor: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x59BF8C3D52C92F66 | Since: 323
 * @deprecated Use vehicle.setCanBreak(vehicle1, toggle) instead
 */
export declare function setVehicleCanBreak(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8AC862B0B32C5B80 | Since: 323
 * @deprecated Use vehicle.doesHaveRoof(vehicle1) instead
 */
export declare function doesVehicleHaveRoof(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC4B3347BD68BD609 | Since: 573
 * @deprecated Use vehicle.setRemoveAggressiveCarjackMission() instead
 */
export declare function setVehicleRemoveAggressiveCarjackMission(): void;
/**
 * No comment provided
 *
 * Hash: 0xD3301660A57C9272 | Since: 757
 * @deprecated Use vehicle.setAvoidPlayerVehicleRiotVanMission() instead
 */
export declare function setVehicleAvoidPlayerVehicleRiotVanMission(): void;
/**
 * No comment provided
 *
 * Hash: 0xB9562064627FF9DB | Since: 573
 * @deprecated Use vehicle.setCarjackMissionRemovalParameters() instead
 */
export declare function setCarjackMissionRemovalParameters(): void;
/**
 * Returns true if MF_IS_BIG (strModelFlags 0x8) handling model flag is set.
 *
 * Hash: 0x9F243D3919F442FE | Since: 323
 * @deprecated Use vehicle.isBig(vehicle1) instead
 */
export declare function isBigVehicle(vehicle1: number | Vehicle): boolean;
/**
 * Returns the total amount of color combinations found in the vehicle's carvariations.meta entry.
 *
 * Hash: 0x3B963160CD65D41E | Since: 323
 * @deprecated Use vehicle.getNumberOfColours(vehicle1) instead
 */
export declare function getNumberOfVehicleColours(vehicle1: number | Vehicle): number;
/**
 * Sets the selected vehicle's colors to the specified index of the color combination found in the vehicle's carvariations.meta entry.
 *
 * Hash: 0x33E8CD3322E2FE31 | Since: 323
 * @deprecated Use vehicle.setColourCombination(vehicle1, colorCombination) instead
 */
export declare function setVehicleColourCombination(vehicle1: number | Vehicle, colorCombination: number): void;
/**
 * Returns the index of the color combination found in the vehicle's carvariations.meta entry.
 *
 * Hash: 0x6A842D197F845D56 | Since: 323
 * @deprecated Use vehicle.getColourCombination(vehicle1) instead
 */
export declare function getVehicleColourCombination(vehicle1: number | Vehicle): number;
/**
 * `color`: is the paint index for the vehicle.
 * Paint index goes from 0 to 12.
 * Be aware that it only works on xenon lights. Example: https://i.imgur.com/yV3cpG9.png
 * Full list of all vehicle xenon lights by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleColors.json
 *
 * Hash: 0xE41033B25D003A07 | Since: 1604
 * @deprecated Use vehicle.setXenonLightColorIndex(vehicle1, colorIndex) instead
 */
export declare function setVehicleXenonLightColorIndex(vehicle1: number | Vehicle, colorIndex: number): void;
/**
 * Returns the headlight color index from the vehicle. Value between 0, 12.
 * Use SET_VEHICLE_XENON_LIGHT_COLOR_INDEX to set the headlights color for the vehicle.
 * Must enable xenon headlights before it'll take affect.
 *
 * Returns an int, value between 0-12 or 255 if no color is set.
 *
 * Hash: 0x3DFF319A831E0CDB | Since: 1604
 * @deprecated Use vehicle.getXenonLightColorIndex(vehicle1) instead
 */
export declare function getVehicleXenonLightColorIndex(vehicle1: number | Vehicle): number;
/**
 * Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.
 *
 * Hash: 0x31B927BBC44156CD | Since: 323
 * @deprecated Use vehicle.setIsConsideredByPlayer(vehicle1, toggle) instead
 */
export declare function setVehicleIsConsideredByPlayer(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBE5C1255A1830FF5 | Since: 323
 * @deprecated Use vehicle.setWillForceOtherVehiclesToStop(vehicle1, toggle) instead
 */
export declare function setVehicleWillForceOtherVehiclesToStop(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9BECD4B9FEF3F8A6 | Since: 323
 * @deprecated Use vehicle.setActAsIfHasSirenOn(vehicle1) instead
 */
export declare function setVehicleActAsIfHasSirenOn(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x88BC673CA9E0AE99 | Since: 323
 * @deprecated Use vehicle.setUseMoreRestrictiveSpawnChecks(vehicle1) instead
 */
export declare function setVehicleUseMoreRestrictiveSpawnChecks(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xE851E480B814D4BA | Since: 323
 * @deprecated Use vehicle.setMayBeUsedByGotoPointAnyMeans(vehicle1) instead
 */
export declare function setVehicleMayBeUsedByGotoPointAnyMeans(vehicle1: number | Vehicle): void;
/**
 * Not present in the retail version! It's just a nullsub.
 *
 * p0 always true (except in one case)
 * successIndicator: 0 if success, -1 if failed
 *
 * Hash: 0x055BF0AC0C34F4FD | Since: 323
 * @deprecated Use vehicle.getRandomModelInMemory() instead
 */
export declare function getRandomVehicleModelInMemory(): [number, number];
/**
 * enum VehicleLockStatus = {
 * None = 0,
 * Unlocked = 1,
 * Locked = 2,
 * LockedForPlayer = 3,
 * StickPlayerInside = 4, -- Doesn't allow players to exit the vehicle with the exit vehicle key.
 * CanBeBrokenInto = 7, -- Can be broken into the car. If the glass is broken, the value will be set to 1
 * CanBeBrokenIntoPersist = 8, -- Can be broken into persist
 * CannotBeTriedToEnter = 10, -- Cannot be tried to enter (Nothing happens when you press the vehicle enter key).
 * }
 *
 * Hash: 0x25BC98A59C2EA962 | Since: 323
 * @deprecated Use vehicle.getDoorLockStatus(vehicle1) instead
 */
export declare function getVehicleDoorLockStatus(vehicle1: number | Vehicle): number;
/**
 * Returns vehicle door lock state previously set with SET_VEHICLE_INDIVIDUAL_DOORS_LOCKED
 *
 * Hash: 0xCA4AC3EAAE46EC7B | Since: 1103
 * @deprecated Use vehicle.getIndividualDoorLockStatus(vehicle1, doorId) instead
 */
export declare function getVehicleIndividualDoorLockStatus(vehicle1: number | Vehicle, doorId: number): number;
/**
 * doorID starts at 0, not seeming to skip any numbers. Four door vehicles intuitively range from 0 to 3.
 *
 * Hash: 0xB8E181E559464527 | Since: 323
 * @deprecated Use vehicle.isDoorDamaged(veh, doorID) instead
 */
export declare function isVehicleDoorDamaged(veh: number | Vehicle, doorID: number): boolean;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0x2FA133A4A9D37ED8 | Since: 323
 * @deprecated Use vehicle.setDoorAllowedToBeBrokenOff(vehicle1, doorId, isBreakable) instead
 */
export declare function setDoorAllowedToBeBrokenOff(vehicle1: number | Vehicle, doorId: number, isBreakable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x27B926779DEB502D | Since: 323
 * @deprecated Use vehicle.isBumperBouncing(vehicle1, frontBumper) instead
 */
export declare function isVehicleBumperBouncing(vehicle1: number | Vehicle, frontBumper: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x468056A6BB6F3846 | Since: 323
 * @deprecated Use vehicle.isBumperBrokenOff(vehicle1, frontBumper) instead
 */
export declare function isVehicleBumperBrokenOff(vehicle1: number | Vehicle, frontBumper: boolean): boolean;
/**
 * Usage:
 *
 * public bool isCopInRange(Vector3 Location, float Range)
 * {
 * return Function.Call<bool>(Hash.IS_COP_PED_IN_AREA_3D, Location.X - Range, Location.Y - Range, Location.Z - Range, Location.X + Range, Location.Y + Range, Location.Z + Range);
 * }
 *
 * Hash: 0x7EEF65D5F153E26A | Since: 323
 * @deprecated Use vehicle.isCopInArea3d(x1, x2, y1, y2, z1, z2) instead
 */
export declare function isCopVehicleInArea3d(x1: number, x2: number, y1: number, y2: number, z1: number, z2: number): boolean;
/**
 * Public Function isVehicleOnAllWheels(vh As Vehicle) As Boolean
 * Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_ON_ALL_WHEELS, vh)
 * End Function
 *
 *
 * Hash: 0xB104CD1BABF302E2 | Since: 323
 * @deprecated Use vehicle.isOnAllWheels(vehicle1) instead
 */
export declare function isVehicleOnAllWheels(vehicle1: number | Vehicle): boolean;
/**
 * Returns `nMonetaryValue` from handling.meta for specific model.
 *
 * Hash: 0x5873C14A52D74236 | Since: 463
 * @deprecated Use vehicle.getModelValue(vehicleModel) instead
 */
export declare function getVehicleModelValue(vehicleModel: number | string): number;
/**
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0x28D37D4F71AC5C58 | Since: 323
 * @deprecated Use vehicle.getLayoutHash(vehicle1) instead
 */
export declare function getVehicleLayoutHash(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xA01BC64DD4BFBBAC | Since: 323
 * @deprecated Use vehicle.getInClipsetHashForSeat(vehicle1) instead
 */
export declare function getInVehicleClipsetHashForSeat(vehicle1: number | Vehicle): number;
/**
 * Makes the train all jumbled up and derailed as it moves on the tracks (though that wont stop it from its normal operations)
 *
 * Hash: 0x317B11A312DF5534 | Since: 323
 * @deprecated Use vehicle.setRenderTrainAsDerailed(train, toggle) instead
 */
export declare function setRenderTrainAsDerailed(train: number | Vehicle, toggle: boolean): void;
/**
 * They use the same color indexs as SET_VEHICLE_COLOURS.
 *
 * Hash: 0x2036F561ADD12E33 | Since: 323
 * @deprecated Use vehicle.setExtraColours(vehicle1, pearlescentColor, wheelColor) instead
 */
export declare function setVehicleExtraColours(vehicle1: number | Vehicle, pearlescentColor: number, wheelColor: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3BC4245933A166F7 | Since: 323
 * @deprecated Use vehicle.getExtraColours(vehicle1) instead
 */
export declare function getVehicleExtraColours(vehicle1: number | Vehicle): [number, number];
/**
 * No comment provided
 *
 * Hash: 0xF40DD601A65F7F19 | Since: 505
 * @deprecated Use vehicle.setExtraColour5(vehicle1, color) instead
 */
export declare function setVehicleExtraColour5(vehicle1: number | Vehicle, color: number): void;
/**
 * No comment provided
 *
 * Hash: 0x7D1464D472D32136 | Since: 505
 * @deprecated Use vehicle.getExtraColour5(vehicle1) instead
 */
export declare function getVehicleExtraColour5(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x6089CDF6A57F326C | Since: 505
 * @deprecated Use vehicle.setExtraColour6(vehicle1, color) instead
 */
export declare function setVehicleExtraColour6(vehicle1: number | Vehicle, color: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB7635E80A5C31BFF | Since: 505
 * @deprecated Use vehicle.getExtraColour6(vehicle1) instead
 */
export declare function getVehicleExtraColour6(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x0F87E938BDF29D66 | Since: 323
 * @deprecated Use vehicle.stopAllGarageActivity() instead
 */
export declare function stopAllGarageActivity(): void;
/**
 * This fixes a vehicle.
 * If the vehicle's engine's broken then you cannot fix it with this native.
 *
 * Hash: 0x115722B1B9C14C1C | Since: 323
 * @deprecated Use vehicle.setFixed(vehicle1) instead
 */
export declare function setVehicleFixed(vehicle1: number | Vehicle): void;
/**
 * This fixes the deformation of a vehicle but the vehicle health doesn't improve
 *
 * Hash: 0x953DA1E1B12C0491 | Since: 323
 * @deprecated Use vehicle.setDeformationFixed(vehicle1) instead
 */
export declare function setVehicleDeformationFixed(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x206BC5DC9D1AC70A | Since: 323
 * @deprecated Use vehicle.setCanEngineMissfire(vehicle1, toggle) instead
 */
export declare function setVehicleCanEngineMissfire(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x51BB2D88D31A914B | Since: 323
 * @deprecated Use vehicle.setCanLeakOil(vehicle1, toggle) instead
 */
export declare function setVehicleCanLeakOil(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x192547247864DFDD | Since: 323
 * @deprecated Use vehicle.setCanLeakPetrol(vehicle1, toggle) instead
 */
export declare function setVehicleCanLeakPetrol(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x465BF26AB9684352 | Since: 323
 * @deprecated Use vehicle.setDisablePetrolTankFires(vehicle1, toggle) instead
 */
export declare function setDisableVehiclePetrolTankFires(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x37C8252A7C92D017 | Since: 323
 * @deprecated Use vehicle.setDisablePetrolTankDamage(vehicle1, toggle) instead
 */
export declare function setDisableVehiclePetrolTankDamage(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x91A0BD635321F145 | Since: 323
 * @deprecated Use vehicle.setDisableEngineFires(vehicle1, toggle) instead
 */
export declare function setDisableVehicleEngineFires(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC50CE861B55EAB8B | Since: 323
 * @deprecated Use vehicle.setLimitSpeedWhenPlayerInactive(vehicle1, toggle) instead
 */
export declare function setVehicleLimitSpeedWhenPlayerInactive(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * sfink: sets bit in vehicle's structure, used by maintransition, fm_mission_controller, mission_race and a couple of other scripts. see dissassembly:
 * CVehicle *__fastcall sub_140CDAA10(signed int a1, char a2)
 * {
 * CVehicle *result; // rax@1
 *
 * result = EntityAsCVehicle(a1);
 * if ( result )
 * {
 * result->field_886 &= 0xEFu;
 * result->field_886 |= 16 * (a2 & 1);
 * }
 * return result;
 * }
 *
 * Hash: 0x6EBFB22D646FFC18 | Since: 323
 * @deprecated Use vehicle.setStopInstantlyWhenPlayerInactive(vehicle1, toggle) instead
 */
export declare function setVehicleStopInstantlyWhenPlayerInactive(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x25367DE49D64CF16 | Since: 323
 * @deprecated Use vehicle.setDisablePretendOccupants(vehicle1, toggle) instead
 */
export declare function setDisablePretendOccupants(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x46A1E1A299EC4BBA | Since: 323
 * @deprecated Use vehicle.removesFromGeneratorsInArea(x1, y1, z1, x2, y2, z2) instead
 */
export declare function removeVehiclesFromGeneratorsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
/**
 * Locks the vehicle's steering to the desired angle, explained below.
 *
 * Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.
 *
 * Steer bias:
 * -1.0 = full right
 * 0.0 = centered steering
 * 1.0 = full left
 *
 * Hash: 0x42A8EC77D5150CBE | Since: 323
 * @deprecated Use vehicle.setSteerBias(vehicle1, value) instead
 */
export declare function setVehicleSteerBias(vehicle1: number | Vehicle, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0xD2E6822DBFD6C8BD | Since: 323
 * @deprecated Use vehicle.isExtraTurnedOn(vehicle1, extraId) instead
 */
export declare function isVehicleExtraTurnedOn(vehicle1: number | Vehicle, extraId: number): boolean;
/**
 * Available extraIds are 1-14, however none of the vehicles have extras above 12.
 *
 * Hash: 0x7EE3A3C5E4A40CC9 | Since: 323
 * @deprecated Use vehicle.setExtra(vehicle1, extraId, disable) instead
 */
export declare function setVehicleExtra(vehicle1: number | Vehicle, extraId: number, disable: boolean): void;
/**
 * Checks via CVehicleModelInfo
 *
 * Hash: 0x1262D55792428154 | Since: 323
 * @deprecated Use vehicle.doesExtraExist(vehicle1, extraId) instead
 */
export declare function doesExtraExist(vehicle1: number | Vehicle, extraId: number): boolean;
/**
 * Returns true if specified extra part is broken off. It only works for extras that can break off during collisions, non-breakable extras always return false. Also returns true if the breakable extra is toggled off through script.
 *
 * Hash: 0x534E36D4DB9ECC5D | Since: 1493
 * @deprecated Use vehicle.isExtraBrokenOff(vehicle1, extraId) instead
 */
export declare function isExtraBrokenOff(vehicle1: number | Vehicle, extraId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF39C4F538B5124C2 | Since: 323
 * @deprecated Use vehicle.setConvertibleRoof(vehicle1) instead
 */
export declare function setConvertibleRoof(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xDED51F703D0FA83D | Since: 323
 * @deprecated Use vehicle.lowerConvertibleRoof(vehicle1, instantlyLower) instead
 */
export declare function lowerConvertibleRoof(vehicle1: number | Vehicle, instantlyLower: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8F5FB35D7E88FC70 | Since: 323
 * @deprecated Use vehicle.raiseConvertibleRoof(vehicle1, instantlyRaise) instead
 */
export declare function raiseConvertibleRoof(vehicle1: number | Vehicle, instantlyRaise: boolean): void;
/**
 * 0 -> up
 * 1 -> lowering down
 * 2 -> down
 * 3 -> raising up
 *
 * Hash: 0xF8C397922FC03F41 | Since: 323
 * @deprecated Use vehicle.getConvertibleRoofState(vehicle1) instead
 */
export declare function getConvertibleRoofState(vehicle1: number | Vehicle): number;
/**
 * Returns true if the vehicle has a convertible roof.
 *
 * p1 is false almost always. However, in launcher_carwash/carwash1/carwash2 scripts, p1 is true and is accompanied by DOES_VEHICLE_HAVE_ROOF. If p1 is true, it seems that every single vehicle will return true irrespective of being a convertible.
 *
 * Hash: 0x52F357A30698BCCE | Since: 323
 * @deprecated Use vehicle.isAConvertible(vehicle1) instead
 */
export declare function isVehicleAConvertible(vehicle1: number | Vehicle): boolean;
/**
 * Transforms the `stormberg`/`toreador` to its "submarine" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
 *
 * Hash: 0xBE4C854FFDB6EEBE | Since: 1365
 * @deprecated Use vehicle.transformToSubmarine(vehicle1, noAnimation) instead
 */
export declare function transformToSubmarine(vehicle1: number | Vehicle, noAnimation: boolean): boolean;
/**
 * Transforms the `stormberg`/`toreador` to its "road vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
 *
 * Hash: 0x2A69FFD1B42BFF9E | Since: 1290
 * @deprecated Use vehicle.transformToCar(vehicle1, noAnimation) instead
 */
export declare function transformToCar(vehicle1: number | Vehicle, noAnimation: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA77DC70BD689A1E5 | Since: 1290
 * @deprecated Use vehicle.isInSubmarineMode(vehicle1) instead
 */
export declare function isVehicleInSubmarineMode(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2959F696AE390A99 | Since: 323
 * @deprecated Use vehicle.isStoppedAtTrafficLights(vehicle1) instead
 */
export declare function isVehicleStoppedAtTrafficLights(vehicle1: number | Vehicle): boolean;
/**
 * Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
 *
 * Radius of effect damage applied in a sphere at impact location
 * When `focusOnModel` set to `true`, the damage sphere will travel towards the vehicle from the given point, thus guaranteeing an impact
 *
 * Hash: 0xA1DD317EA8FD4F29 | Since: 323
 * @deprecated Use vehicle.setDamage(vehicle1, xOffset, yOffset, zOffset, damage, radius, focusOnModel) instead
 */
export declare function setVehicleDamage(vehicle1: number | Vehicle, xOffset: number, yOffset: number, zOffset: number, damage: number, radius: number, focusOnModel: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x35BB21DE06784373 | Since: 463
 * @deprecated Use vehicle.setOccupantsTakeExplosiveDamage(vehicle1, toggle) instead
 */
export declare function setVehicleOccupantsTakeExplosiveDamage(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.
 *
 * Minimum: -4000
 * Maximum: 1000
 *
 * -4000: Engine is destroyed
 * 0 and below: Engine catches fire and health rapidly declines
 * 300: Engine is smoking and losing functionality
 * 1000: Engine is perfect
 *
 * Hash: 0xC45D23BAF168AAB8 | Since: 323
 * @deprecated Use vehicle.getEngineHealth(vehicle1) instead
 */
export declare function getVehicleEngineHealth(vehicle1: number | Vehicle): number;
/**
 * 1000 is max health
 * Begins leaking gas at around 650 health
 * Minimum: -4000
 * Maximum: 1000
 *
 * -4000: Engine is destroyed
 * 0 and below: Engine catches fire and health rapidly declines
 * 300: Engine is smoking and losing functionality
 * 1000: Engine is perfect
 *
 * Hash: 0x45F6D8EEF34ABEF1 | Since: 323
 * @deprecated Use vehicle.setEngineHealth(vehicle1, health) instead
 */
export declare function setVehicleEngineHealth(vehicle1: number | Vehicle, health: number): void;
/**
 * Works just like SET_VEHICLE_ENGINE_HEALTH, but only for planes.
 *
 * Hash: 0x2A86A0475B6A1434 | Since: 1103
 * @deprecated Use vehicle.setPlaneEngineHealth(vehicle1, health) instead
 */
export declare function setPlaneEngineHealth(vehicle1: number | Vehicle, health: number): void;
/**
 * 1000 is max health
 * Begins leaking gas at around 650 health
 * -999.90002441406 appears to be minimum health, although nothing special occurs
 *
 * Hash: 0x7D5DABE888D2D074 | Since: 323
 * @deprecated Use vehicle.getPetrolTankHealth(vehicle1) instead
 */
export declare function getVehiclePetrolTankHealth(vehicle1: number | Vehicle): number;
/**
 * 1000 is max health
 * Begins leaking gas at around 650 health
 * -999.90002441406 appears to be minimum health, although nothing special occurs
 *
 * Hash: 0x70DB57649FA8D0D8 | Since: 323
 * @deprecated Use vehicle.setPetrolTankHealth(vehicle1, health) instead
 */
export declare function setVehiclePetrolTankHealth(vehicle1: number | Vehicle, health: number): void;
/**
 * p1 can be anywhere from 0 to 3 in the scripts.
 * p2 being how long in milliseconds the vehicle has been stuck
 *
 * Hash: 0x679BE1DAF71DA874 | Since: 323
 * @deprecated Use vehicle.isStuckTimerUp(vehicle1, ms) instead
 */
export declare function isVehicleStuckTimerUp(vehicle1: number | Vehicle, ms: number): boolean;
/**
 * The inner function has a switch on the second parameter. It's the stuck timer index.
 *
 * Here's some pseudo code I wrote for the inner function:
 * void __fastcall NATIVE_RESET_VEHICLE_STUCK_TIMER_INNER(CUnknown* unknownClassInVehicle, int timerIndex)
 * {
 * switch (timerIndex)
 * {
 * case 0:
 * unknownClassInVehicle->FirstStuckTimer = (WORD)0u;
 * case 1:
 * unknownClassInVehicle->SecondStuckTimer = (WORD)0u;
 * case 2:
 * unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;
 * case 3:
 * unknownClassInVehicle->FourthStuckTimer = (WORD)0u;
 * case 4:
 * unknownClassInVehicle->FirstStuckTimer = (WORD)0u;
 * unknownClassInVehicle->SecondStuckTimer = (WORD)0u;
 * unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;
 * unknownClassInVehicle->FourthStuckTimer = (WORD)0u;
 * break;
 * };
 * }
 *
 * Hash: 0xD7591B0065AFAA7A | Since: 323
 * @deprecated Use vehicle.resetStuckTimer(vehicle1, nullAttributes) instead
 */
export declare function resetVehicleStuckTimer(vehicle1: number | Vehicle, nullAttributes: number): void;
/**
 * p1 is always 0 in the scripts.
 *
 * p1 = check if vehicle is on fire
 *
 * Hash: 0x4C241E39B23DF959 | Since: 323
 * @deprecated Use vehicle.isDriveable(vehicle1, isOnFireCheck) instead
 */
export declare function isVehicleDriveable(vehicle1: number | Vehicle, isOnFireCheck: boolean): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2B5F9D2AF1F1722D | Since: 323
 * @deprecated Use vehicle.setHasBeenOwnedByPlayer(vehicle1, owned) instead
 */
export declare function setVehicleHasBeenOwnedByPlayer(vehicle1: number | Vehicle, owned: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xFBA550EA44404EE6 | Since: 323
 * @deprecated Use vehicle.setNeedsToBeHotwired(vehicle1, toggle) instead
 */
export declare function setVehicleNeedsToBeHotwired(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9F3F689B814F2599 | Since: 323
 * @deprecated Use vehicle.setBlipThrottleRandomly(vehicle1) instead
 */
export declare function setVehicleBlipThrottleRandomly(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x4E74E62E0A97E901 | Since: 323
 * @deprecated Use vehicle.setPoliceFocusWillTrack(vehicle1, toggle) instead
 */
export declare function setPoliceFocusWillTrackVehicle(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Sounds the horn for the specified vehicle.
 *
 * vehicle: The vehicle to activate the horn for.
 * mode: The hash of "NORMAL" or "HELDDOWN". Can be 0.
 * duration: The duration to sound the horn, in milliseconds.
 *
 * Note: If a player is in the vehicle, it will only sound briefly.
 *
 * Hash: 0x9C8C6504B5B63D2C | Since: 323
 * @deprecated Use vehicle.startHorn(vehicle1, duration, mode, forever) instead
 */
export declare function startVehicleHorn(vehicle1: number | Vehicle, duration: number, mode: number | string, forever: boolean): void;
/**
 * If set to TRUE, it seems to suppress door noises and doesn't allow the horn to be continuous.
 *
 * Hash: 0x9D44FCCE98450843 | Since: 323
 * @deprecated Use vehicle.setInCarModShop(vehicle1, toggle) instead
 */
export declare function setVehicleInCarModShop(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * if true, axles won't bend.
 *
 * Hash: 0x92F0CF722BC4202F | Since: 323
 * @deprecated Use vehicle.setHasStrongAxles(vehicle1, toggle) instead
 */
export declare function setVehicleHasStrongAxles(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Returns model name of vehicle in all caps. Needs to be displayed through localizing text natives to get proper display name.
 * -----------------------------------------------------------------------------------------------------------------------------------------
 * While often the case, this does not simply return the model name of the vehicle (which could be hashed to return the model hash). Variations of the same vehicle may also use the same display name.
 * -----------------------------------------------------------------------------------------------------------------------------------------
 *
 * Returns "CARNOTFOUND" if the hash doesn't match a vehicle hash.
 *
 * `Using HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION, you can get the localized name.`
 *
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0xB215AAC32D25D019 | Since: 323
 * @deprecated Use vehicle.getDisplayNameFromModel(modelHash) instead
 */
export declare function getDisplayNameFromVehicleModel(modelHash: number | string): string;
/**
 * Will return a vehicle's manufacturer display label.
 * Returns "CARNOTFOUND" if the hash doesn't match a vehicle hash.
 *
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0xF7AF4F159FF99F97 | Since: 1868
 * @deprecated Use vehicle.getMakeNameFromModel(modelHash) instead
 */
export declare function getMakeNameFromVehicleModel(modelHash: number | string): string;
/**
 * The only example I can find of this function in the scripts, is this:
 *
 * `struct _s = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(rPtr((A_0) + 4), 1.21f, 6.15f, 0.3f);`
 *
 * -----------------------------------------------------------------------------------------------------------------------------------------
 * PC scripts:
 *
 * `v_5\/\*{3}\*\/ = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(a_0._f1, 1.21, 6.15, 0.3);`
 *
 * Hash: 0x4EC6CFBC7B2E9536 | Since: 323
 * @deprecated Use vehicle.getDeformationAtPos(vehicle1, offsetX, offsetY, offsetZ) instead
 */
export declare function getVehicleDeformationAtPos(vehicle1: number | Vehicle, offsetX: number, offsetY: number, offsetZ: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x60BF608F1B8CD1B6 | Since: 323
 * @deprecated Use vehicle.setLivery(vehicle1, livery) instead
 */
export declare function setVehicleLivery(vehicle1: number | Vehicle, livery: number): void;
/**
 * -1 = no livery
 *
 * Hash: 0x2BB9230590DA5E8A | Since: 323
 * @deprecated Use vehicle.getLivery(vehicle1) instead
 */
export declare function getVehicleLivery(vehicle1: number | Vehicle): number;
/**
 * Returns -1 if the vehicle has no livery
 *
 * Hash: 0x87B63E25A529D526 | Since: 323
 * @deprecated Use vehicle.getLiveryCount(vehicle1) instead
 */
export declare function getVehicleLiveryCount(vehicle1: number | Vehicle): number;
/**
 * Used to set the secondary livery (the roof on Tornado Custom being one such example.)
 *
 * Livery value is dependent on the amount of liveries present in the vehicle's texture dictionary, for Tornado Custom this would be 0-6.
 *
 * Hash: 0xA6D3A8750DC73270 | Since: 505
 * @deprecated Use vehicle.setLivery2(vehicle1, livery) instead
 */
export declare function setVehicleLivery2(vehicle1: number | Vehicle, livery: number): void;
/**
 * Returns index of the current vehicle's secondary livery. A getter for SET_VEHICLE_LIVERY2.
 *
 * Hash: 0x60190048C0764A26 | Since: 505
 * @deprecated Use vehicle.getLivery2(vehicle1) instead
 */
export declare function getVehicleLivery2(vehicle1: number | Vehicle): number;
/**
 * Returns a number of available secondary liveries, or -1 if vehicle has no secondary liveries available.
 *
 * Hash: 0x5ECB40269053C0D4 | Since: 505
 * @deprecated Use vehicle.getLivery2Count(vehicle1) instead
 */
export declare function getVehicleLivery2Count(vehicle1: number | Vehicle): number;
/**
 * This will return false if the window is broken, or rolled down.
 * Window indexes:
 * 0 = Front Right Window
 * 1 = Front Left Window
 * 2 = Back Right Window
 * 3 = Back Left Window
 *
 *
 * Those numbers go on for vehicles that have more than 4 doors with windows.
 *
 * Hash: 0x46E571A0E20D01F1 | Since: 323
 * @deprecated Use vehicle.isWindowIntact(vehicle1, windowIndex) instead
 */
export declare function isVehicleWindowIntact(vehicle1: number | Vehicle, windowIndex: number): boolean;
/**
 * Appears to return false if any window is broken.
 *
 * Hash: 0x11D862A3E977A9EF | Since: 323
 * @deprecated Use vehicle.areAllWindowsIntact(vehicle1) instead
 */
export declare function areAllVehicleWindowsIntact(vehicle1: number | Vehicle): boolean;
/**
 * Returns false if every seat is occupied.
 *
 * Hash: 0x2D34FC3BC4ADB780 | Since: 323
 * @deprecated Use vehicle.areAnySeatsFree(vehicle1) instead
 */
export declare function areAnyVehicleSeatsFree(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x21D2E5662C1F6FED | Since: 323
 * @deprecated Use vehicle.resetWheels(vehicle1, toggle) instead
 */
export declare function resetVehicleWheels(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBC74B4BE25EB6C8A | Since: 323
 * @deprecated Use vehicle.isHeliPartBroken(vehicle1) instead
 */
export declare function isHeliPartBroken(vehicle1: number | Vehicle): boolean;
/**
 * Max 1000.
 * At 0 the main rotor will stall.
 *
 * Hash: 0xE4CB7541F413D2C5 | Since: 323
 * @deprecated Use vehicle.getHeliMainRotorHealth(vehicle1) instead
 */
export declare function getHeliMainRotorHealth(vehicle1: number | Vehicle): number;
/**
 * Max 1000.
 * At 0 the tail rotor will stall.
 *
 * Hash: 0xAE8CE82A4219AC8C | Since: 323
 * @deprecated Use vehicle.getHeliTailRotorHealth(vehicle1) instead
 */
export declare function getHeliTailRotorHealth(vehicle1: number | Vehicle): number;
/**
 * Max 1000.
 * At -100 both helicopter rotors will stall.
 *
 * Hash: 0xAC51915D27E4A5F7 | Since: 323
 * @deprecated Use vehicle.getHeliTailBoomHealth(vehicle1) instead
 */
export declare function getHeliTailBoomHealth(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x4056EA1105F5ABD7 | Since: 463
 * @deprecated Use vehicle.setHeliMainRotorHealth(vehicle1, health) instead
 */
export declare function setHeliMainRotorHealth(vehicle1: number | Vehicle, health: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFE205F38AAA58E5B | Since: 463
 * @deprecated Use vehicle.setHeliTailRotorHealth(vehicle1, health) instead
 */
export declare function setHeliTailRotorHealth(vehicle1: number | Vehicle, health: number): void;
/**
 * No comment provided
 *
 * Hash: 0x3EC8BF18AA453FE9 | Since: 323
 * @deprecated Use vehicle.setHeliTailBoomCanBreakOff(vehicle1, toggle) instead
 */
export declare function setHeliTailBoomCanBreakOff(vehicle1: number | Vehicle, toggle: boolean): boolean;
/**
 * NOTE: Debugging functions are not present in the retail version of the game.
 *
 * Hash: 0xBFDF984E2C22B94F | Since: 323
 * @deprecated Use vehicle.setNameDebug(vehicle1, name) instead
 */
export declare function setVehicleNameDebug(vehicle1: number | Vehicle, name: string): void;
/**
 * Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.
 *
 * Hash: 0x71B0892EC081D60A | Since: 323
 * @deprecated Use vehicle.setExplodesOnHighExplosionDamage(vehicle1, toggle) instead
 */
export declare function setVehicleExplodesOnHighExplosionDamage(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xD565F438137F0E10 | Since: 1103
 * @deprecated Use vehicle.setExplodesOnExplosionDamageAtZeroBodyHealth(vehicle1, toggle) instead
 */
export declare function setVehicleExplodesOnExplosionDamageAtZeroBodyHealth(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3441CAD2F2231923 | Since: 323
 * @deprecated Use vehicle.setAllowExplodesOnContact(vehicle1, toggle) instead
 */
export declare function setAllowVehicleExplodesOnContact(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2B6747FAA9DB9D6B | Since: 323
 * @deprecated Use vehicle.setDisableTowing(vehicle1, toggle) instead
 */
export declare function setVehicleDisableTowing(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE43701C36CAFF1A4 | Since: 1180
 * @deprecated Use vehicle.getHasLandingGear(vehicle1) instead
 */
export declare function getVehicleHasLandingGear(vehicle1: number | Vehicle): boolean;
/**
 * Works for vehicles with a retractable landing gear
 *
 * Landing gear states:
 *
 * 0: Deployed
 * 1: Closing
 * 2: Opening
 * 3: Retracted
 *
 * Hash: 0xCFC8BE9A5E1FE575 | Since: 323
 * @deprecated Use vehicle.controlLandingGear(vehicle1, state) instead
 */
export declare function controlLandingGear(vehicle1: number | Vehicle, state: number): void;
/**
 * Landing gear states:
 *
 * 0: Deployed
 * 1: Closing (Retracting)
 * 2: (Landing gear state 2 is never used.)
 * 3: Opening (Deploying)
 * 4: Retracted
 *
 * Returns the current state of the vehicles landing gear.
 *
 * Hash: 0x9B0F3DCA3DB0F4CD | Since: 323
 * @deprecated Use vehicle.getLandingGearState(vehicle1) instead
 */
export declare function getLandingGearState(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x61E1DD6125A3EEE6 | Since: 323
 * @deprecated Use vehicle.isAnyNearPoint(pos, radius) instead
 */
export declare function isAnyVehicleNearPoint(pos: Vector3, radius: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA6E9FDCB2C76785E | Since: 323
 * @deprecated Use vehicle.requestHighDetailModel(vehicle1) instead
 */
export declare function requestVehicleHighDetailModel(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x61F02E4E9A7A61EA | Since: 3095
 * @deprecated Use vehicle.getModelNumDriveGears(vehicleModel) instead
 */
export declare function getVehicleModelNumDriveGears(vehicleModel: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x24910C3D66BA770D | Since: 3095
 * @deprecated Use vehicle.getMaxDriveGearCount(vehicle1) instead
 */
export declare function getVehicleMaxDriveGearCount(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x1FCB07FE230B6639 | Since: 3258
 * @deprecated Use vehicle.getIsElectric(vehicleModel) instead
 */
export declare function getIsVehicleElectric(vehicleModel: number | string): boolean;
/**
 * Returns the vehicle's drivetrain type.
 *
 * enum eVehicleDrivetrainType
 * {
 * VehicleDrivetrainType_INVALID,
 * VehicleDrivetrainType_FWD,
 * VehicleDrivetrainType_RWD,
 * VehicleDrivetrainType_AWD
 * };
 *
 * _GET_VEHICLE_DE* - _GET_VEHICLE_DI*
 *
 * Hash: 0x1423725069EE1D14 | Since: 3258
 * @deprecated Use vehicle.getDrivetrainType(vehicleModel) instead
 */
export declare function getVehicleDrivetrainType(vehicleModel: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x56185A25D45A0DCD | Since: 3095
 * @deprecated Use vehicle.getCurrentDriveGear(vehicle1) instead
 */
export declare function getVehicleCurrentDriveGear(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xF9DDA40BC293A61E | Since: 3095
 * @deprecated Use vehicle.getCurrentRevRatio(vehicle1) instead
 */
export declare function getVehicleCurrentRevRatio(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x00689CDE5F7C6787 | Since: 323
 * @deprecated Use vehicle.removeHighDetailModel(vehicle1) instead
 */
export declare function removeVehicleHighDetailModel(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x1F25887F3C104278 | Since: 323
 * @deprecated Use vehicle.isHighDetail(vehicle1) instead
 */
export declare function isVehicleHighDetail(vehicle1: number | Vehicle): boolean;
/**
 * REQUEST_VEHICLE_ASSET(GET_HASH_KEY(cargobob3), 3);
 *
 * vehicle found that have asset's:
 * cargobob3
 * submersible
 * blazer
 *
 * Hash: 0x81A15811460FAB3A | Since: 323
 * @deprecated Use vehicle.requestAsset(vehicleHash, vehicleAsset) instead
 */
export declare function requestVehicleAsset(vehicleHash: number | string, vehicleAsset: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1BBE0523B8DB9A21 | Since: 323
 * @deprecated Use vehicle.hasAssetLoaded(vehicleAsset) instead
 */
export declare function hasVehicleAssetLoaded(vehicleAsset: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xACE699C71AB9DEB5 | Since: 323
 * @deprecated Use vehicle.removeAsset(vehicleAsset) instead
 */
export declare function removeVehicleAsset(vehicleAsset: number): void;
/**
 * Sets how much the crane on the tow truck is raised, where 0.0 is fully lowered and 1.0 is fully raised.
 *
 * Hash: 0xFE54B92A344583CA | Since: 323
 * @deprecated Use vehicle.setTowTruckArmPosition(vehicle1, position) instead
 */
export declare function setVehicleTowTruckArmPosition(vehicle1: number | Vehicle, position: number): void;
/**
 * No comment provided
 *
 * Hash: 0x48BD57D0DD17786A | Since: 3095
 * @deprecated Use vehicle.setAttachedToTowTruckArm(towTruck, vehicle1) instead
 */
export declare function setAttachedVehicleToTowTruckArm(towTruck: number | Vehicle, vehicle1: number | Vehicle): void;
/**
 * HookOffset defines where the hook is attached. leave at 0 for default attachment.
 *
 * Hash: 0x29A16F8D621C4508 | Since: 323
 * @deprecated Use vehicle.attachToTowTruck(towTruck, vehicle1, rear, hookOffsetX, hookOffsetY, hookOffsetZ) instead
 */
export declare function attachVehicleToTowTruck(towTruck: number | Vehicle, vehicle1: number | Vehicle, rear: boolean, hookOffsetX: number, hookOffsetY: number, hookOffsetZ: number): void;
/**
 * First two parameters swapped. Scripts verify that towTruck is the first parameter, not the second.
 *
 * Hash: 0xC2DB6B6708350ED8 | Since: 323
 * @deprecated Use vehicle.detachFromTowTruck(towTruck, vehicle1) instead
 */
export declare function detachVehicleFromTowTruck(towTruck: number | Vehicle, vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xD0E9CE05A1E68CD8 | Since: 323
 * @deprecated Use vehicle.detachFromAnyTowTruck(vehicle1) instead
 */
export declare function detachVehicleFromAnyTowTruck(vehicle1: number | Vehicle): boolean;
/**
 * Scripts verify that towTruck is the first parameter, not the second.
 *
 * Hash: 0x146DF9EC4C4B9FD4 | Since: 323
 * @deprecated Use vehicle.isAttachedToTowTruck(towTruck, vehicle1) instead
 */
export declare function isVehicleAttachedToTowTruck(towTruck: number | Vehicle, vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEFEA18DCF10F8F75 | Since: 323
 * @deprecated Use vehicle.getEntityAttachedToTowTruck(towTruck) instead
 */
export declare function getEntityAttachedToTowTruck(towTruck: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x8BA6F76BC53A1493 | Since: 323
 * @deprecated Use vehicle.setAutomaticallyAttaches(vehicle1) instead
 */
export declare function setVehicleAutomaticallyAttaches(vehicle1: number | Vehicle): number;
/**
 * Sets the arm position of a bulldozer. Position must be a value between 0.0 and 1.0. Ignored when `p2` is set to false, instead incrementing arm position by 0.1 (or 10%).
 *
 * Hash: 0xF8EBCCC96ADB9FB7 | Since: 323
 * @deprecated Use vehicle.setBulldozerArmPosition(vehicle1, position) instead
 */
export declare function setVehicleBulldozerArmPosition(vehicle1: number | Vehicle, position: number): void;
/**
 * No comment provided
 *
 * Hash: 0x56B94C6D7127DFBA | Since: 323
 * @deprecated Use vehicle.setTankTurretPosition(vehicle1, position) instead
 */
export declare function setVehicleTankTurretPosition(vehicle1: number | Vehicle, position: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0581730AB9380412 | Since: 1103
 * @deprecated Use vehicle.setTurretTarget(vehicle1, pos) instead
 */
export declare function setVehicleTurretTarget(vehicle1: number | Vehicle, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0x737E398138550FFF | Since: 944
 * @deprecated Use vehicle.setTankStationary(vehicle1) instead
 */
export declare function setVehicleTankStationary(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x1093408B4B9D1146 | Since: 323
 * @deprecated Use vehicle.setTurretSpeedThisFrame(vehicle1, speed) instead
 */
export declare function setVehicleTurretSpeedThisFrame(vehicle1: number | Vehicle, speed: number): void;
/**
 * No comment provided
 *
 * Hash: 0x32CAEDF24A583345 | Since: 463
 * @deprecated Use vehicle.disableTurretMovementThisFrame(vehicle1) instead
 */
export declare function disableVehicleTurretMovementThisFrame(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x30D779DE7C4F6DD3 | Since: 323
 * @deprecated Use vehicle.setFlightNozzlePosition(vehicle1, angleRatio) instead
 */
export declare function setVehicleFlightNozzlePosition(vehicle1: number | Vehicle, angleRatio: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9AA47FFF660CB932 | Since: 323
 * @deprecated Use vehicle.setFlightNozzlePositionImmediate(vehicle1, angle) instead
 */
export declare function setVehicleFlightNozzlePositionImmediate(vehicle1: number | Vehicle, angle: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDA62027C8BDB326E | Since: 1180
 * @deprecated Use vehicle.getFlightNozzlePosition(plane) instead
 */
export declare function getVehicleFlightNozzlePosition(plane: number | Vehicle): number;
/**
 * True stops vtols from switching modes. Doesn't stop the sound though.
 *
 * Hash: 0xCE2B43770B655F8F | Since: 1290
 * @deprecated Use vehicle.setDisableVerticalFlightModeTransition(vehicle1, toggle) instead
 */
export declare function setDisableVerticalFlightModeTransition(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA4822F1CF23F4810 | Since: 323
 * @deprecated Use vehicle.generateCreationPosFromPaths() instead
 */
export declare function generateVehicleCreationPosFromPaths(): [boolean, Vector3, Vector3];
/**
 * On accelerating, spins the driven wheels with the others braked, so you don't go anywhere.
 *
 * Hash: 0xFB8794444A7D60FB | Since: 323
 * @deprecated Use vehicle.setBurnout(vehicle1, toggle) instead
 */
export declare function setVehicleBurnout(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Returns whether the specified vehicle is currently in a burnout.
 *
 *
 * vb.net
 * Public Function isVehicleInBurnout(vh As Vehicle) As Boolean
 * Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_IN_BURNOUT, vh)
 * End Function
 *
 * Hash: 0x1297A88E081430EB | Since: 323
 * @deprecated Use vehicle.isInBurnout(vehicle1) instead
 */
export declare function isVehicleInBurnout(vehicle1: number | Vehicle): boolean;
/**
 * Reduces grip significantly so it's hard to go anywhere.
 *
 * Hash: 0x222FF6A823D122E2 | Since: 323
 * @deprecated Use vehicle.setReduceGrip(vehicle1, toggle) instead
 */
export declare function setVehicleReduceGrip(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * val is 0-3
 * Often used in conjunction with: SET_VEHICLE_REDUCE_GRIP
 *
 * Hash: 0x6DEE944E1EE90CFB | Since: 1604
 * @deprecated Use vehicle.setReduceGripLevel(vehicle1, val) instead
 */
export declare function setVehicleReduceGripLevel(vehicle1: number | Vehicle, val: number): void;
/**
 * Sets the turn signal enabled for a vehicle.
 * Set turnSignal to 1 for left light, 0 for right light.
 *
 * Hash: 0xB5D45264751B7DF0 | Since: 323
 * @deprecated Use vehicle.setIndicatorLights(vehicle1, turnSignal, toggle) instead
 */
export declare function setVehicleIndicatorLights(vehicle1: number | Vehicle, turnSignal: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x92B35082E0B42F66 | Since: 323
 * @deprecated Use vehicle.setBrakeLights(vehicle1, toggle) instead
 */
export declare function setVehicleBrakeLights(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x5815BD2763178DF4 | Since: 2802
 * @deprecated Use vehicle.setTailLights(vehicle1, toggle) instead
 */
export declare function setVehicleTailLights(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x684785568EF26A22 | Since: 323
 * @deprecated Use vehicle.setHandbrake(vehicle1, toggle) instead
 */
export declare function setVehicleHandbrake(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE4E2FD323574965C | Since: 757
 * @deprecated Use vehicle.setBrake(vehicle1, toggle) instead
 */
export declare function setVehicleBrake(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x48ADC8A773564670 | Since: 323
 * @deprecated Use vehicle.instantlyFillPopulation() instead
 */
export declare function instantlyFillVehiclePopulation(): void;
/**
 * No comment provided
 *
 * Hash: 0x91D6DD290888CBAB | Since: 323
 * @deprecated Use vehicle.hasInstantFillPopulationFinished() instead
 */
export declare function hasInstantFillVehiclePopulationFinished(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x51DB102F4A3BA5E0 | Since: 323
 * @deprecated Use vehicle.networkEnableEmptyCrowdingsRemoval(toggle) instead
 */
export declare function networkEnableEmptyCrowdingVehiclesRemoval(toggle: boolean): void;
/**
 * Default:1000||This sets a value which is used when NETWORK_ENABLE_EMPTY_CROWDING_VEHICLES_REMOVAL(true) is called each frame.
 *
 * Hash: 0xA4A9A4C40E615885 | Since: 1604
 * @deprecated Use vehicle.networkCapEmptyCrowdingsRemoval() instead
 */
export declare function networkCapEmptyCrowdingVehiclesRemoval(): void;
/**
 * Gets the trailer of a vehicle and puts it into the trailer parameter.
 *
 * Hash: 0x1CDD6BADC297830D | Since: 323
 * @deprecated Use vehicle.getTrailerVehicle(vehicle1) instead
 */
export declare function getVehicleTrailerVehicle(vehicle1: number | Vehicle): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x80D9D32636369C92 | Since: 2802
 * @deprecated Use vehicle.getTrailerParentVehicle(trailer) instead
 */
export declare function getVehicleTrailerParentVehicle(trailer: number | Vehicle): number;
/**
 * vehicle must be a plane
 *
 * Hash: 0xCAC66558B944DA67 | Since: 323
 * @deprecated Use vehicle.setUsesLargeRearRamp(vehicle1, toggle) instead
 */
export declare function setVehicleUsesLargeRearRamp(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x09606148B6C71DEF | Since: 323
 * @deprecated Use vehicle.setRudderBroken(vehicle1, toggle) instead
 */
export declare function setVehicleRudderBroken(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1A78AD3D8240536F | Since: 323
 * @deprecated Use vehicle.setConvertibleRoofLatchState(vehicle1, state) instead
 */
export declare function setConvertibleRoofLatchState(vehicle1: number | Vehicle, state: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x53AF99BAA671CA47 | Since: 323
 * @deprecated Use vehicle.getEstimatedMaxSpeed(vehicle1) instead
 */
export declare function getVehicleEstimatedMaxSpeed(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xAD7E85FC227197C4 | Since: 323
 * @deprecated Use vehicle.getMaxBraking(vehicle1) instead
 */
export declare function getVehicleMaxBraking(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xA132FB5370554DB0 | Since: 323
 * @deprecated Use vehicle.getMaxTraction(vehicle1) instead
 */
export declare function getVehicleMaxTraction(vehicle1: number | Vehicle): number;
/**
 * static - max acceleration
 *
 * Hash: 0x5DD35C8D074E57AE | Since: 323
 * @deprecated Use vehicle.getAcceleration(vehicle1) instead
 */
export declare function getVehicleAcceleration(vehicle1: number | Vehicle): number;
/**
 * Returns max speed (without mods) of the specified vehicle model in m/s.
 *
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0xF417C2502FFFED43 | Since: 323
 * @deprecated Use vehicle.getModelEstimatedMaxSpeed(modelHash) instead
 */
export declare function getVehicleModelEstimatedMaxSpeed(modelHash: number | string): number;
/**
 * Returns max braking of the specified vehicle model.
 *
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0xDC53FD41B4ED944C | Since: 323
 * @deprecated Use vehicle.getModelMaxBraking(modelHash) instead
 */
export declare function getVehicleModelMaxBraking(modelHash: number | string): number;
/**
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0xBFBA3BA79CFF7EBF | Since: 323
 * @deprecated Use vehicle.getModelMaxBrakingMaxMods(modelHash) instead
 */
export declare function getVehicleModelMaxBrakingMaxMods(modelHash: number | string): number;
/**
 * Returns max traction of the specified vehicle model.
 *
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0x539DE94D44FDFD0D | Since: 323
 * @deprecated Use vehicle.getModelMaxTraction(modelHash) instead
 */
export declare function getVehicleModelMaxTraction(modelHash: number | string): number;
/**
 * Returns the acceleration of the specified model.
 *
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0x8C044C5C84505B6A | Since: 323
 * @deprecated Use vehicle.getModelAcceleration(modelHash) instead
 */
export declare function getVehicleModelAcceleration(modelHash: number | string): number;
/**
 * 9.8 * thrust if air vehicle, else 0.38 + drive force?
 *
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0x53409B5163D5B846 | Since: 323
 * @deprecated Use vehicle.getModelAccelerationMaxMods(modelHash) instead
 */
export declare function getVehicleModelAccelerationMaxMods(modelHash: number | string): number;
/**
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0xC6AD107DDC9054CC | Since: 323
 * @deprecated Use vehicle.getFlyingModelAgility(modelHash) instead
 */
export declare function getFlyingVehicleModelAgility(modelHash: number | string): number;
/**
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0x5AA3F878A178C4FC | Since: 323
 * @deprecated Use vehicle.getBoatModelAgility(modelHash) instead
 */
export declare function getBoatVehicleModelAgility(modelHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x00C09F246ABEDD82 | Since: 323
 * @deprecated Use vehicle.getClassEstimatedMaxSpeed(vehicleClass) instead
 */
export declare function getVehicleClassEstimatedMaxSpeed(vehicleClass: number): number;
/**
 * No comment provided
 *
 * Hash: 0xDBC86D85C5059461 | Since: 323
 * @deprecated Use vehicle.getClassMaxTraction(vehicleClass) instead
 */
export declare function getVehicleClassMaxTraction(vehicleClass: number): number;
/**
 * No comment provided
 *
 * Hash: 0x4F930AD022D6DE3B | Since: 323
 * @deprecated Use vehicle.getClassMaxAgility(vehicleClass) instead
 */
export declare function getVehicleClassMaxAgility(vehicleClass: number): number;
/**
 * No comment provided
 *
 * Hash: 0x2F83E7E45D9EA7AE | Since: 323
 * @deprecated Use vehicle.getClassMaxAcceleration(vehicleClass) instead
 */
export declare function getVehicleClassMaxAcceleration(vehicleClass: number): number;
/**
 * No comment provided
 *
 * Hash: 0x4BF54C16EC8FEC03 | Since: 323
 * @deprecated Use vehicle.getClassMaxBraking(vehicleClass) instead
 */
export declare function getVehicleClassMaxBraking(vehicleClass: number): number;
/**
 * No comment provided
 *
 * Hash: 0x2CE544C68FB812A0 | Since: 323
 * @deprecated Use vehicle.addRoadNodeSpeedZone(pos, radius, speed) instead
 */
export declare function addRoadNodeSpeedZone(pos: Vector3, radius: number, speed: number): number;
/**
 * No comment provided
 *
 * Hash: 0x1033371FC8E842A7 | Since: 323
 * @deprecated Use vehicle.removeRoadNodeSpeedZone(speedzone) instead
 */
export declare function removeRoadNodeSpeedZone(speedzone: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x87E7F24270732CB1 | Since: 323
 * @deprecated Use vehicle.openBombBayDoors(vehicle1) instead
 */
export declare function openBombBayDoors(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x3556041742A0DC74 | Since: 323
 * @deprecated Use vehicle.closeBombBayDoors(vehicle1) instead
 */
export declare function closeBombBayDoors(vehicle1: number | Vehicle): void;
/**
 * Returns true when the bomb bay doors of this plane are open. False if they're closed.
 *
 * Hash: 0xD0917A423314BBA8 | Since: 1180
 * @deprecated Use vehicle.getAreBombBayDoorsOpen(aircraft) instead
 */
export declare function getAreBombBayDoorsOpen(aircraft: number | Vehicle): boolean;
/**
 * Possibly: Returns whether the searchlight (found on police vehicles) is toggled on.
 *
 * @Author Nac
 *
 * Hash: 0xC0F97FCE55094987 | Since: 323
 * @deprecated Use vehicle.isSearchlightOn(vehicle1) instead
 */
export declare function isVehicleSearchlightOn(vehicle1: number | Vehicle): boolean;
/**
 * Only works during nighttime.
 *
 * Hash: 0x14E85C5EE7A4D542 | Since: 323
 * @deprecated Use vehicle.setSearchlight(heli, toggle, canBeUsedByAI) instead
 */
export declare function setVehicleSearchlight(heli: number | Vehicle, toggle: boolean, canBeUsedByAI: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x99015ED7DBEA5113 | Since: 2189
 * @deprecated Use vehicle.doesHaveSearchlight(vehicle1) instead
 */
export declare function doesVehicleHaveSearchlight(vehicle1: number | Vehicle): boolean;
/**
 * Check if a vehicle seat is accessible. If you park your vehicle near a wall and the ped cannot enter/exit this side, the return value toggles from true (not blocked) to false (blocked).
 *
 * seatIndex  = -1 being the driver seat.
 * Use GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(vehicle) - 1 for last seat index.
 * side = only relevant for bikes/motorcycles to check if the left (false)/right (true) side is blocked.
 * onEnter = check if you can enter (true) or exit (false) a vehicle.
 *
 * Hash: 0x639431E895B9AA57 | Since: 323
 * @deprecated Use vehicle.isEntryPointForSeatClear(ped, vehicle1, seatIndex, side, onEnter) instead
 */
export declare function isEntryPointForSeatClear(ped: number | Ped, vehicle1: number | Vehicle, seatIndex: number, side: boolean, onEnter: boolean): boolean;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0xC0572928C0ABFDA3 | Since: 944
 * @deprecated Use vehicle.getEntryPointPosition(vehicle1, doorId) instead
 */
export declare function getEntryPointPosition(vehicle1: number | Vehicle, doorId: number): Vector3;
/**
 * No comment provided
 *
 * Hash: 0x30785D90C956BF35 | Since: 323
 * @deprecated Use vehicle.canShuffleSeat(vehicle1, seatIndex) instead
 */
export declare function canShuffleSeat(vehicle1: number | Vehicle, seatIndex: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x33F2E3FE70EAAE1D | Since: 323
 * @deprecated Use vehicle.getNumModKits(vehicle1) instead
 */
export declare function getNumModKits(vehicle1: number | Vehicle): number;
/**
 * Set modKit to 0 if you plan to call SET_VEHICLE_MOD. That's what the game does. Most body modifications through SET_VEHICLE_MOD will not take effect until this is set to 0.
 *
 * Full list of vehicle mod kits and mods by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleModKits.json
 *
 * Hash: 0x1F2AA07F00B3217A | Since: 323
 * @deprecated Use vehicle.setModKit(vehicle1, modKit) instead
 */
export declare function setVehicleModKit(vehicle1: number | Vehicle, modKit: number): void;
/**
 * No comment provided
 *
 * Hash: 0x6325D1A044AE510D | Since: 323
 * @deprecated Use vehicle.getModKit(vehicle1) instead
 */
export declare function getVehicleModKit(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0xFC058F5121E54C32 | Since: 323
 * @deprecated Use vehicle.getModKitType(vehicle1) instead
 */
export declare function getVehicleModKitType(vehicle1: number | Vehicle): number;
/**
 * Returns an int
 *
 * Wheel Types:
 * 0: Sport
 * 1: Muscle
 * 2: Lowrider
 * 3: SUV
 * 4: Offroad
 * 5: Tuner
 * 6: Bike Wheels
 * 7: High End
 * 8: Benny's Originals
 * 9: Benny's Bespoke
 * 10: Racing
 * 11: Street
 * 12: Track
 *
 * Tested in Los Santos Customs
 *
 * Hash: 0xB3ED1BFB4BE636DC | Since: 323
 * @deprecated Use vehicle.getWheelType(vehicle1) instead
 */
export declare function getVehicleWheelType(vehicle1: number | Vehicle): number;
/**
 * 0: Sport
 * 1: Muscle
 * 2: Lowrider
 * 3: SUV
 * 4: Offroad
 * 5: Tuner
 * 6: Bike Wheels
 * 7: High End
 * 8: Benny's Originals
 * 9: Benny's Bespoke
 * 10: Racing
 * 11: Street
 * 12: Track
 *
 * Hash: 0x487EB21CC7295BA1 | Since: 323
 * @deprecated Use vehicle.setWheelType(vehicle1, WheelType) instead
 */
export declare function setVehicleWheelType(vehicle1: number | Vehicle, WheelType: number): void;
/**
 * paintType:
 * 0: Normal
 * 1: Metallic
 * 2: Pearl
 * 3: Matte
 * 4: Metal
 * 5: Chrome
 * 6: Chameleon
 *
 * Hash: 0xA551BE18C11A476D | Since: 323
 * @deprecated Use vehicle.getNumModColors(paintType) instead
 */
export declare function getNumModColors(paintType: number): number;
/**
 * paintType:
 * 0: Normal
 * 1: Metallic
 * 2: Pearl
 * 3: Matte
 * 4: Metal
 * 5: Chrome
 * 6: Chameleon
 *
 * color: number of the color.
 *
 * p3 seems to always be 0.
 *
 * Full list of vehicle colors and vehicle plates by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleColors.json
 *
 * Hash: 0x43FEB945EE7F85B8 | Since: 323
 * @deprecated Use vehicle.setModColor1(vehicle1, paintType, color, pearlescentColor) instead
 */
export declare function setVehicleModColor1(vehicle1: number | Vehicle, paintType: number, color: number, pearlescentColor: number): void;
/**
 * Changes the secondary paint type and color
 * paintType:
 * 0: Normal
 * 1: Metallic
 * 2: Pearl
 * 3: Matte
 * 4: Metal
 * 5: Chrome
 * 6: Chameleon
 *
 * color: number of the color
 *
 * Full list of vehicle colors and vehicle plates by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleColors.json
 *
 * Hash: 0x816562BADFDEC83E | Since: 323
 * @deprecated Use vehicle.setModColor2(vehicle1, paintType, color) instead
 */
export declare function setVehicleModColor2(vehicle1: number | Vehicle, paintType: number, color: number): void;
/**
 * No comment provided
 *
 * Hash: 0xE8D65CA700C9A693 | Since: 323
 * @deprecated Use vehicle.getModColor1(vehicle1) instead
 */
export declare function getVehicleModColor1(vehicle1: number | Vehicle): [number, number, number];
/**
 * No comment provided
 *
 * Hash: 0x81592BE4E3878728 | Since: 323
 * @deprecated Use vehicle.getModColor2(vehicle1) instead
 */
export declare function getVehicleModColor2(vehicle1: number | Vehicle): [number, number];
/**
 * Returns a string which is the codename of the vehicle's currently selected primary color
 *
 * p1 is always 0
 *
 * Hash: 0xB45085B721EFD38C | Since: 323
 * @deprecated Use vehicle.getModColor1Name(vehicle1) instead
 */
export declare function getVehicleModColor1Name(vehicle1: number | Vehicle): string;
/**
 * Returns a string which is the codename of the vehicle's currently selected secondary color
 *
 * Hash: 0x4967A516ED23A5A1 | Since: 323
 * @deprecated Use vehicle.getModColor2Name(vehicle1) instead
 */
export declare function getVehicleModColor2Name(vehicle1: number | Vehicle): string;
/**
 * No comment provided
 *
 * Hash: 0x9A83F5F9963775EF | Since: 323
 * @deprecated Use vehicle.haveModsStreamedIn(vehicle1) instead
 */
export declare function haveVehicleModsStreamedIn(vehicle1: number | Vehicle): boolean;
/**
 * Returns true for any mod part listed in GEN9_EXCLUSIVE_ASSETS_VEHICLES_FILE.
 *
 * Hash: 0x00834EAC4A96E010 | Since: 2699
 * @deprecated Use vehicle.isModGen9Exclusive(vehicle1, modType, modIndex) instead
 */
export declare function isVehicleModGen9Exclusive(vehicle1: number | Vehicle, modType: number, modIndex: number): boolean;
/**
 * In b944, there are 50 (0 - 49) mod types.
 *
 * Sets the vehicle mod.
 * The vehicle must have a mod kit first.
 *
 * Any out of range ModIndex is stock.
 *
 * #Mod Type
 * Spoilers - 0
 * Front Bumper - 1
 * Rear Bumper - 2
 * Side Skirt - 3
 * Exhaust - 4
 * Frame - 5
 * Grille - 6
 * Hood - 7
 * Fender - 8
 * Right Fender - 9
 * Roof - 10
 * Engine - 11
 * Brakes - 12
 * Transmission - 13
 * Horns - 14 (modIndex from 0 to 51)
 * Suspension - 15
 * Armor - 16
 * Front Wheels - 23
 * Back Wheels - 24 //only for motocycles
 * Plate holders - 25
 * Trim Design - 27
 * Ornaments - 28
 * Dial Design - 30
 * Steering Wheel - 33
 * Shifter Leavers - 34
 * Plaques - 35
 * Hydraulics - 38
 * Livery - 48
 *
 * ENUMS: https://pastebin.com/QzEAn02v
 *
 * Hash: 0x6AF0636DDEDCB6DD | Since: 323
 * @deprecated Use vehicle.setMod(vehicle1, modType, modIndex, customTires) instead
 */
export declare function setVehicleMod(vehicle1: number | Vehicle, modType: number, modIndex: number, customTires: boolean): void;
/**
 * In b944, there are 50 (0 - 49) mod types. See SET_VEHICLE_MOD for the list.
 *
 * Returns -1 if the vehicle mod is stock
 *
 * Hash: 0x772960298DA26FDB | Since: 323
 * @deprecated Use vehicle.getMod(vehicle1, modType) instead
 */
export declare function getVehicleMod(vehicle1: number | Vehicle, modType: number): number;
/**
 * Only used for wheels(ModType = 23/24) Returns true if the wheels are custom wheels
 *
 * Hash: 0xB3924ECD70E095DC | Since: 323
 * @deprecated Use vehicle.getModVariation(vehicle1, modType) instead
 */
export declare function getVehicleModVariation(vehicle1: number | Vehicle, modType: number): number;
/**
 * Returns how many possible mods a vehicle has for a given mod type
 *
 * Hash: 0xE38E9162A2500646 | Since: 323
 * @deprecated Use vehicle.getNumMods(vehicle1, modType) instead
 */
export declare function getNumVehicleMods(vehicle1: number | Vehicle, modType: number): number;
/**
 * No comment provided
 *
 * Hash: 0x92D619E420858204 | Since: 323
 * @deprecated Use vehicle.removeMod(vehicle1, modType) instead
 */
export declare function removeVehicleMod(vehicle1: number | Vehicle, modType: number): void;
/**
 * Toggles:
 * UNK17 - 17
 * Turbo - 18
 * UNK19 - 19
 * Tire Smoke - 20
 * UNK21 - 21
 * Xenon Headlights - 22
 *
 * Hash: 0x2A1F4F37F95BAD08 | Since: 323
 * @deprecated Use vehicle.toggleMod(vehicle1, modType, toggle) instead
 */
export declare function toggleVehicleMod(vehicle1: number | Vehicle, modType: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x84B233A8C8FC8AE7 | Since: 323
 * @deprecated Use vehicle.isToggleModOn(vehicle1, modType) instead
 */
export declare function isToggleModOn(vehicle1: number | Vehicle, modType: number): boolean;
/**
 * Returns the text label of a mod type for a given vehicle
 *
 * Use GET_FILENAME_FOR_AUDIO_CONVERSATION to get the part name in the game's language
 *
 * Hash: 0x8935624F8C5592CC | Since: 323
 * @deprecated Use vehicle.getModTextLabel(vehicle1, modType, modValue) instead
 */
export declare function getModTextLabel(vehicle1: number | Vehicle, modType: number, modValue: number): string;
/**
 * Returns the name for the type of vehicle mod(Armour, engine etc)
 *
 *
 * Hash: 0x51F0FEB9F6AE98C0 | Since: 323
 * @deprecated Use vehicle.getModSlotName(vehicle1, modType) instead
 */
export declare function getModSlotName(vehicle1: number | Vehicle, modType: number): string;
/**
 * Returns the text label of the vehicle's liveryIndex, as specified by the liveryNames section of the vehicle's modkit data in the carcols file.
 *
 * example
 *
 * `int count = VEHICLE::GET_VEHICLE_LIVERY_COUNT(veh);`
 * for (int i = 0; i < count; i++)
 * {
 * `const char* LiveryName = VEHICLE::GET_LIVERY_NAME(veh, i);`
 * }
 *
 *
 * this example will work fine to fetch all names
 * for example for Sanchez we get
 *
 * SANC_LV1
 * SANC_LV2
 * SANC_LV3
 * SANC_LV4
 * SANC_LV5
 *
 *
 * Use GET_FILENAME_FOR_AUDIO_CONVERSATION, to get the localized livery name.
 *
 * Full list of vehicle mod kits and mods by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleModKits.json
 *
 * Hash: 0xB4C7A93837C91A1F | Since: 323
 * @deprecated Use vehicle.getLiveryName(vehicle1, liveryIndex) instead
 */
export declare function getLiveryName(vehicle1: number | Vehicle, liveryIndex: number): string;
/**
 * No comment provided
 *
 * Hash: 0x90A38E9838E0A8C1 | Since: 323
 * @deprecated Use vehicle.getModModifierValue(vehicle1, modType, modIndex) instead
 */
export declare function getVehicleModModifierValue(vehicle1: number | Vehicle, modType: number, modIndex: number): number;
/**
 * Can be used for IS_DLC_VEHICLE_MOD and GET_DLC_VEHICLE_MOD_LOCK_HASH
 *
 * Hash: 0x4593CF82AA179706 | Since: 323
 * @deprecated Use vehicle.getModIdentifierHash(vehicle1, modType, modIndex) instead
 */
export declare function getVehicleModIdentifierHash(vehicle1: number | Vehicle, modType: number, modIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0x758F49C24925568A | Since: 323
 * @deprecated Use vehicle.preloadMod(vehicle1, modType, modIndex) instead
 */
export declare function preloadVehicleMod(vehicle1: number | Vehicle, modType: number, modIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0x06F43E5175EB6D96 | Since: 323
 * @deprecated Use vehicle.hasPreloadModsFinished(vehicle1) instead
 */
export declare function hasPreloadModsFinished(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x445D79F995508307 | Since: 323
 * @deprecated Use vehicle.releasePreloadMods(vehicle1) instead
 */
export declare function releasePreloadMods(vehicle1: number | Vehicle): void;
/**
 * Sets the tire smoke's color of this vehicle.
 *
 * vehicle: The vehicle that is the target of this method.
 * r: The red level in the RGB color code.
 * g: The green level in the RGB color code.
 * b: The blue level in the RGB color code.
 *
 * Note: setting r,g,b to 0 will give the car the "Patriot" tire smoke.
 *
 * Hash: 0xB5BA80F839791C0F | Since: 323
 * @deprecated Use vehicle.setTyreSmokeColor(vehicle1, r, g, b) instead
 */
export declare function setVehicleTyreSmokeColor(vehicle1: number | Vehicle, r: number, g: number, b: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB635392A4938B3C3 | Since: 323
 * @deprecated Use vehicle.getTyreSmokeColor(vehicle1) instead
 */
export declare function getVehicleTyreSmokeColor(vehicle1: number | Vehicle): [number, number, number];
/**
 * enum WindowTints
 * {
 * WINDOWTINT_NONE,
 * WINDOWTINT_PURE_BLACK,
 * WINDOWTINT_DARKSMOKE,
 * WINDOWTINT_LIGHTSMOKE,
 * WINDOWTINT_STOCK,
 * WINDOWTINT_LIMO,
 * WINDOWTINT_GREEN
 * };
 * Full list of all vehicle window tints by DurtyFree https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicleColors.json
 *
 * Hash: 0x57C51E6BAD752696 | Since: 323
 * @deprecated Use vehicle.setWindowTint(vehicle1, tint) instead
 */
export declare function setVehicleWindowTint(vehicle1: number | Vehicle, tint: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0EE21293DAD47C95 | Since: 323
 * @deprecated Use vehicle.getWindowTint(vehicle1) instead
 */
export declare function getVehicleWindowTint(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x9D1224004B3A6707 | Since: 323
 * @deprecated Use vehicle.getNumWindowTints() instead
 */
export declare function getNumVehicleWindowTints(): number;
/**
 * What's this for? Primary and Secondary RGB have their own natives and this one doesn't seem specific.
 *
 * Hash: 0xF3CC740D36221548 | Since: 323
 * @deprecated Use vehicle.getColor(vehicle1) instead
 */
export declare function getVehicleColor(vehicle1: number | Vehicle): [number, number, number];
/**
 * Some kind of flags.
 *
 * Hash: 0xEEBFC7A7EFDC35B4 | Since: 323
 * @deprecated Use vehicle.getColoursWhichCanBeSet(vehicle1) instead
 */
export declare function getVehicleColoursWhichCanBeSet(vehicle1: number | Vehicle): number;
/**
 * iVar3 = get_vehicle_cause_of_destruction(uLocal_248[iVar2]);
 * if (iVar3 == joaat("weapon_stickybomb"))
 * {
 * func_171(726);
 * iLocal_260 = 1;
 * }
 *
 * Hash: 0xE495D1EF4C91FD20 | Since: 323
 * @deprecated Use vehicle.getCauseOfDestruction(vehicle1) instead
 */
export declare function getVehicleCauseOfDestruction(vehicle1: number | Vehicle): number;
/**
 * Used for helis.
 *
 * Hash: 0x5EE5632F47AE9695 | Since: 463
 * @deprecated Use vehicle.overridePlaneDamageThrehsold(vehicle1, health) instead
 */
export declare function overridePlaneDamageThrehsold(vehicle1: number | Vehicle, health: number): void;
/**
 * No comment provided
 *
 * Hash: 0x337EF33DA3DDB990 | Since: 3095
 * @deprecated Use vehicle.setTransmissionReducedGearRatio(vehicle1, toggle) instead
 */
export declare function setTransmissionReducedGearRatio(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xFD8CE53356B5D745 | Since: 3095
 * @deprecated Use vehicle.getDesiredDriveGear(vehicle1) instead
 */
export declare function getVehicleDesiredDriveGear(vehicle1: number | Vehicle): number;
/**
 * From the driver's perspective, is the left headlight broken.
 *
 * Hash: 0x5EF77C9ADD3B11A3 | Since: 323
 * @deprecated Use vehicle.getIsLeftHeadlightDamaged(vehicle1) instead
 */
export declare function getIsLeftVehicleHeadlightDamaged(vehicle1: number | Vehicle): boolean;
/**
 * From the driver's perspective, is the right headlight broken.
 *
 * Hash: 0xA7ECB73355EB2F20 | Since: 323
 * @deprecated Use vehicle.getIsRightHeadlightDamaged(vehicle1) instead
 */
export declare function getIsRightVehicleHeadlightDamaged(vehicle1: number | Vehicle): boolean;
/**
 * Returns true when both headlights are broken. This does not include extralights.
 *
 * Hash: 0xEC69ADF931AAE0C3 | Since: 505
 * @deprecated Use vehicle.getBothHeadlightsDamaged(vehicle1) instead
 */
export declare function getBothVehicleHeadlightsDamaged(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x93A3996368C94158 | Since: 323
 * @deprecated Use vehicle.modifyTopSpeed(vehicle1, value) instead
 */
export declare function modifyVehicleTopSpeed(vehicle1: number | Vehicle, value: number): void;
/**
 * To reset the max speed, set the `speed` value to `0.0` or lower.
 *
 * Hash: 0xBAA045B4E42F3C06 | Since: 1103
 * @deprecated Use vehicle.setMaxSpeed(vehicle1, speed) instead
 */
export declare function setVehicleMaxSpeed(vehicle1: number | Vehicle, speed: number): void;
/**
 * Has something to do with trains. Always precedes SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED.
 * May be true that it can be used with trains not sure, but not specifically for trains. Go find Xbox360 decompiled scripts and search for 'func_1333' in freemode.c it isn't used just for trains. Thanks for the info tho.
 *
 * Hash: 0x1CF38D529D7441D9 | Since: 323
 * @deprecated Use vehicle.setStaysFrozenWhenCleanedUp(vehicle1, toggle) instead
 */
export declare function setVehicleStaysFrozenWhenCleanedUp(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1F9FB66F3A3842D2 | Since: 323
 * @deprecated Use vehicle.setActAsIfHighSpeedForFragSmashing(vehicle1) instead
 */
export declare function setVehicleActAsIfHighSpeedForFragSmashing(vehicle1: number | Vehicle): void;
/**
 * Sets some bit and float of vehicle. float is >= 0
 *
 * Hash: 0x59C3757B3B7408E8 | Since: 1493
 * @deprecated Use vehicle.setPedsCanFallOffThisFromLargeFallDamage(vehicle1, toggle) instead
 */
export declare function setPedsCanFallOffThisVehicleFromLargeFallDamage(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x54B0F614960F4A5F | Since: 323
 * @deprecated Use vehicle.addCombatAngledAvoidanceArea() instead
 */
export declare function addVehicleCombatAngledAvoidanceArea(): number;
/**
 * No comment provided
 *
 * Hash: 0xE30524E1871F481D | Since: 323
 * @deprecated Use vehicle.removeCombatAvoidanceArea() instead
 */
export declare function removeVehicleCombatAvoidanceArea(): void;
/**
 * No comment provided
 *
 * Hash: 0x291E373D483E7EE7 | Since: 323
 * @deprecated Use vehicle.isAnyPedRappellingFromHeli(vehicle1) instead
 */
export declare function isAnyPedRappellingFromHeli(vehicle1: number | Vehicle): boolean;
/**
 * <1.0 - Decreased torque
 * =1.0 - Default torque
 * >1.0 - Increased torque
 *
 * Negative values will cause the vehicle to go backwards instead of forwards while accelerating.
 *
 * value - is between 0.2 and 1.8 in the decompiled scripts.
 *
 * This needs to be called every frame to take effect.
 *
 * Hash: 0xB59E4BD37AE292DB | Since: 323
 * @deprecated Use vehicle.setCheatPowerIncrease(vehicle1, value) instead
 */
export declare function setVehicleCheatPowerIncrease(vehicle1: number | Vehicle, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0AD9E8F87FF7C16F | Since: 323
 * @deprecated Use vehicle.setInfluencesWantedLevel() instead
 */
export declare function setVehicleInfluencesWantedLevel(): void;
/**
 * Sets the wanted state of this vehicle.
 *
 * Hash: 0xF7EC25A3EBEEC726 | Since: 323
 * @deprecated Use vehicle.setIsWanted(vehicle1, state) instead
 */
export declare function setVehicleIsWanted(vehicle1: number | Vehicle, state: boolean): void;
/**
 * Sets the boat boom position for the `TR3` trailer.
 * Ratio value is between `0.0` and `1.0`, where `0.0` is 90 degrees to the left of the boat, and `1.0` is just slightly to the right/back of the boat.
 * To get the current boom position ratio, use GET_BOAT_BOOM_POSITION_RATIO
 *
 * Hash: 0xF488C566413B4232 | Since: 323
 * @deprecated Use vehicle.swingBoatBoomToRatio(vehicle1, ratio) instead
 */
export declare function swingBoatBoomToRatio(vehicle1: number | Vehicle, ratio: number): void;
/**
 * Same call as ALLOW_BOAT_BOOM_TO_ANIMATE
 *
 * Hash: 0xC1F981A6F74F0C23 | Since: 323
 * @deprecated Use vehicle.swingBoatBoomFreely(vehicle1, toggle) instead
 */
export declare function swingBoatBoomFreely(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0F3B4D4E43177236 | Since: 323
 * @deprecated Use vehicle.allowBoatBoomToAnimate(vehicle1, toggle) instead
 */
export declare function allowBoatBoomToAnimate(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6636C535F6CC2725 | Since: 323
 * @deprecated Use vehicle.getBoatBoomPositionRatio(vehicle1) instead
 */
export declare function getBoatBoomPositionRatio(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x23428FC53C60919C | Since: 323
 * @deprecated Use vehicle.disablePlaneAileron(vehicle1) instead
 */
export declare function disablePlaneAileron(vehicle1: number | Vehicle): void;
/**
 * Returns true when in a vehicle, false whilst entering/exiting.
 *
 * Hash: 0xAE31E7DF9B5B132E | Since: 323
 * @deprecated Use vehicle.getIsEngineRunning(vehicle1) instead
 */
export declare function getIsVehicleEngineRunning(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1D97D1E3A70A649F | Since: 323
 * @deprecated Use vehicle.setUseAlternateHandling(vehicle1, toggle) instead
 */
export declare function setVehicleUseAlternateHandling(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Only works on bikes, both X and Y work in the -1 - 1 range.
 *
 * X forces the bike to turn left or right (-1, 1)
 * Y forces the bike to lean to the left or to the right (-1, 1)
 *
 * Example with X -1/Y 1
 * http://i.imgur.com/TgIuAPJ.jpg
 *
 * Hash: 0x9CFA4896C3A53CBB | Since: 323
 * @deprecated Use vehicle.setBikeOnStand(vehicle1, x, y) instead
 */
export declare function setBikeOnStand(vehicle1: number | Vehicle, x: number, y: number): void;
/**
 * No comment provided
 *
 * Hash: 0xAB04325045427AAE | Since: 323
 * @deprecated Use vehicle.setNotStealableAmbiently(vehicle1) instead
 */
export declare function setVehicleNotStealableAmbiently(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xCFD778E7904C255E | Since: 323
 * @deprecated Use vehicle.lockDoorsWhenNoLongerNeeded(vehicle1) instead
 */
export declare function lockDoorsWhenNoLongerNeeded(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xACFB2463CC22BED2 | Since: 323
 * @deprecated Use vehicle.setLastDriven(vehicle1) instead
 */
export declare function setLastDrivenVehicle(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xB2D06FAEDE65B577 | Since: 323
 * @deprecated Use vehicle.getLastDriven() instead
 */
export declare function getLastDrivenVehicle(): number;
/**
 * No comment provided
 *
 * Hash: 0xE01903C47C7AC89E | Since: 323
 * @deprecated Use vehicle.clearLastDriven() instead
 */
export declare function clearLastDrivenVehicle(): void;
/**
 * No comment provided
 *
 * Hash: 0x02398B627547189C | Since: 323
 * @deprecated Use vehicle.setHasBeenDrivenFlag(vehicle1, toggle) instead
 */
export declare function setVehicleHasBeenDrivenFlag(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB893215D8D4C015B | Since: 323
 * @deprecated Use vehicle.setTaskGotoPlaneMinHeightAboveTerrain(plane, height) instead
 */
export declare function setTaskVehicleGotoPlaneMinHeightAboveTerrain(plane: number | Vehicle, height: number): void;
/**
 * No comment provided
 *
 * Hash: 0x93AE6A61BE015BF1 | Since: 323
 * @deprecated Use vehicle.setLodMultiplier(vehicle1, multiplier) instead
 */
export declare function setVehicleLodMultiplier(vehicle1: number | Vehicle, multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x428BACCDF5E26EAD | Since: 323
 * @deprecated Use vehicle.setCanSaveInGarage(vehicle1, toggle) instead
 */
export declare function setVehicleCanSaveInGarage(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Also includes some "turnOffBones" when vehicle mods are installed.
 *
 * Hash: 0x42A4BEB35D372407 | Since: 323
 * @deprecated Use vehicle.getNumOfBrokenOffParts(vehicle1) instead
 */
export declare function getVehicleNumOfBrokenOffParts(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x2C8CBFE1EA5FC631 | Since: 323
 * @deprecated Use vehicle.getNumOfBrokenLoosenParts(vehicle1) instead
 */
export declare function getVehicleNumOfBrokenLoosenParts(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x4D9D109F63FEE1D4 | Since: 323
 * @deprecated Use vehicle.setForceEngineDamageByBullet() instead
 */
export declare function setForceVehicleEngineDamageByBullet(): void;
/**
 * Allows creation of CEventShockingPlaneFlyby, CEventShockingHelicopterOverhead, and other(?) Shocking events
 *
 * Hash: 0x279D50DE5652D935 | Since: 323
 * @deprecated Use vehicle.setGeneratesEngineShockingEvents(vehicle1, toggle) instead
 */
export declare function setVehicleGeneratesEngineShockingEvents(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
 *
 * Hash: 0xE44A982368A4AF23 | Since: 323
 * @deprecated Use vehicle.copyDamages(sourceVehicle, targetVehicle) instead
 */
export declare function copyVehicleDamages(sourceVehicle: number | Vehicle, targetVehicle: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xF25E02CB9C5818F8 | Since: 323
 * @deprecated Use vehicle.disableExplosionBreakOffParts() instead
 */
export declare function disableVehicleExplosionBreakOffParts(): void;
/**
 * No comment provided
 *
 * Hash: 0xBC3CCA5844452B06 | Since: 323
 * @deprecated Use vehicle.setLightsCutoffDistanceTweak(distance) instead
 */
export declare function setLightsCutoffDistanceTweak(distance: number): void;
/**
 * Commands the driver of an armed vehicle (p0) to shoot its weapon at a target (p1). p3, p4 and p5 are the coordinates of the target. Example:
 *
 * `WEAPON::SET_CURRENT_PED_VEHICLE_WEAPON(pilot,MISC::GET_HASH_KEY("VEHICLE_WEAPON_PLANE_ROCKET"));                        VEHICLE::SET_VEHICLE_SHOOT_AT_TARGET(pilot, target, targPos.x, targPos.y, targPos.z);`
 *
 * Hash: 0x74CD9A9327A282EA | Since: 323
 * @deprecated Use vehicle.setShootAtTarget(driver, entity, xTarget, yTarget, zTarget) instead
 */
export declare function setVehicleShootAtTarget(driver: number | Ped, entity: number | Entity, xTarget: number, yTarget: number, zTarget: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8F5EBAB1F260CFCE | Since: 323
 * @deprecated Use vehicle.getLockOnTarget(vehicle1) instead
 */
export declare function getVehicleLockOnTarget(vehicle1: number | Vehicle): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x97CE68CB032583F0 | Since: 323
 * @deprecated Use vehicle.setForceHd(vehicle1, toggle) instead
 */
export declare function setForceHdVehicle(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x182F266C2D9E2BEB | Since: 323
 * @deprecated Use vehicle.setCustomPathNodeStreamingRadius(vehicle1) instead
 */
export declare function setVehicleCustomPathNodeStreamingRadius(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x9CCC9525BF2408E0 | Since: 323
 * @deprecated Use vehicle.getPlateType(vehicle1) instead
 */
export declare function getVehiclePlateType(vehicle1: number | Vehicle): number;
/**
 * in script hook .net
 *
 * Vehicle v = ...;
 * Function.Call(Hash.TRACK_VEHICLE_VISIBILITY, v.Handle);
 *
 * Hash: 0x64473AEFDCF47DCA | Since: 323
 * @deprecated Use vehicle.trackVisibility(vehicle1) instead
 */
export declare function trackVehicleVisibility(vehicle1: number | Vehicle): void;
/**
 * must be called after TRACK_VEHICLE_VISIBILITY
 *
 * it's not instant so probabilly must pass an 'update' to see correct result.
 *
 * Hash: 0xAA0A52D24FB98293 | Since: 323
 * @deprecated Use vehicle.isVisible(vehicle1) instead
 */
export declare function isVehicleVisible(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x89F149B6131E57DA | Since: 323
 * @deprecated Use vehicle.setGravity(vehicle1, toggle) instead
 */
export declare function setVehicleGravity(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Enable/Disables global slipstream physics
 *
 * Hash: 0xE6C0C80B8C867537 | Since: 323
 * @deprecated Use vehicle.setEnableSlipstreaming(toggle) instead
 */
export declare function setEnableVehicleSlipstreaming(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF051D9BFB6BA39C0 | Since: 877
 * @deprecated Use vehicle.setSlipstreamingShouldTimeOut(toggle) instead
 */
export declare function setVehicleSlipstreamingShouldTimeOut(toggle: boolean): void;
/**
 * Returns a float value between 0.0 and 3.0 related to its slipstream draft (boost/speedup).
 *
 * Hash: 0x36492C2F0D134C56 | Since: 323
 * @deprecated Use vehicle.getCurrentTimeInSlipStream(vehicle1) instead
 */
export declare function getVehicleCurrentTimeInSlipStream(vehicle1: number | Vehicle): number;
/**
 * Returns true if the vehicle is being slipstreamed by another vehicle
 *
 * Hash: 0x48C633E94A8142A7 | Since: 877
 * @deprecated Use vehicle.isProducingSlipStream(vehicle1) instead
 */
export declare function isVehicleProducingSlipStream(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x06582AFF74894C75 | Since: 323
 * @deprecated Use vehicle.setInactiveDuringPlayback(vehicle1, toggle) instead
 */
export declare function setVehicleInactiveDuringPlayback(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDFFCEF48E511DB48 | Since: 323
 * @deprecated Use vehicle.setActiveDuringPlayback(vehicle1, toggle) instead
 */
export declare function setVehicleActiveDuringPlayback(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Returns false if the vehicle has the FLAG_NO_RESPRAY flag set.
 *
 * Hash: 0x8D474C8FAEFF6CDE | Since: 323
 * @deprecated Use vehicle.isSprayable(vehicle1) instead
 */
export declare function isVehicleSprayable(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x983765856F2564F9 | Since: 323
 * @deprecated Use vehicle.setEngineCanDegrade(vehicle1, toggle) instead
 */
export declare function setVehicleEngineCanDegrade(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Adds some kind of shadow to the vehicle.
 *
 * p1 and p2 use values from 0-255 and both make the shadow darker the lower the value is. -1 disables the effect.
 *
 * Hash: 0xF0E4BA16D1DB546C | Since: 323
 * @deprecated Use vehicle.disableVehcileDynamicAmbientScales(vehicle1) instead
 */
export declare function disableVehcileDynamicAmbientScales(vehicle1: number | Vehicle): void;
/**
 * Remove the weird shadow applied by DISABLE_VEHCILE_DYNAMIC_AMBIENT_SCALES.
 *
 * Hash: 0xF87D9F2301F7D206 | Since: 323
 * @deprecated Use vehicle.enableDynamicAmbientScales(vehicle1) instead
 */
export declare function enableVehicleDynamicAmbientScales(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x4198AB0022B15F87 | Since: 323
 * @deprecated Use vehicle.isPlaneLandingGearIntact(plane) instead
 */
export declare function isPlaneLandingGearIntact(plane: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x755D6D5267CBBD7E | Since: 323
 * @deprecated Use vehicle.arePlanePropellersIntact(plane) instead
 */
export declare function arePlanePropellersIntact(plane: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4C815EB175086F84 | Since: 1103
 * @deprecated Use vehicle.setPlanePropellerHealth(plane, health) instead
 */
export declare function setPlanePropellerHealth(plane: number | Vehicle, health: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0CDDA42F9E360CA6 | Since: 323
 * @deprecated Use vehicle.setCanDeformWheels(vehicle1, toggle) instead
 */
export declare function setVehicleCanDeformWheels(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Only returns true if the vehicle was marked as stolen with SET_VEHICLE_IS_STOLEN.
 *
 * Hash: 0x4AF9BD80EEBEB453 | Since: 323
 * @deprecated Use vehicle.isStolen(vehicle1) instead
 */
export declare function isVehicleStolen(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x67B2C79AA7FF5738 | Since: 323
 * @deprecated Use vehicle.setIsStolen(vehicle1, isStolen) instead
 */
export declare function setVehicleIsStolen(vehicle1: number | Vehicle, isStolen: boolean): void;
/**
 * This native sets the turbulence multiplier. It only works for planes.
 * 0.0 = no turbulence at all.
 * 1.0 = heavy turbulence.
 * Works by just calling it once, does not need to be called every tick.
 *
 * Hash: 0xAD2D28A1AFDFF131 | Since: 323
 * @deprecated Use vehicle.setPlaneTurbulenceMultiplier(vehicle1, multiplier) instead
 */
export declare function setPlaneTurbulenceMultiplier(vehicle1: number | Vehicle, multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5991A01434CE9677 | Since: 323
 * @deprecated Use vehicle.areWingsOfPlaneIntact(plane) instead
 */
export declare function areWingsOfPlaneIntact(plane: number | Vehicle): boolean;
/**
 * This native doesn't seem to do anything, might be a debug-only native.
 *
 * Confirmed, it is a debug native.
 *
 * Hash: 0xB264C4D2F2B0A78B | Since: 323
 * @deprecated Use vehicle.allowAmbientsToAvoidAdverseConditions(vehicle1) instead
 */
export declare function allowAmbientVehiclesToAvoidAdverseConditions(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x0E21D3DF1051399D | Since: 323
 * @deprecated Use vehicle.detachFromCargobob(vehicle1, cargobob) instead
 */
export declare function detachVehicleFromCargobob(vehicle1: number | Vehicle, cargobob: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xADF7BE450512C12F | Since: 323
 * @deprecated Use vehicle.detachFromAnyCargobob(vehicle1) instead
 */
export declare function detachVehicleFromAnyCargobob(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAF03011701811146 | Since: 678
 * @deprecated Use vehicle.detachEntityFromCargobob(cargobob, entity) instead
 */
export declare function detachEntityFromCargobob(cargobob: number | Vehicle, entity: number | Entity): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD40148F22E81A1D9 | Since: 323
 * @deprecated Use vehicle.isAttachedToCargobob(cargobob, vehicleAttached) instead
 */
export declare function isVehicleAttachedToCargobob(cargobob: number | Vehicle, vehicleAttached: number | Vehicle): boolean;
/**
 * Returns attached vehicle (Vehicle in parameter must be cargobob)
 *
 * Hash: 0x873B82D42AC2B9E5 | Since: 323
 * @deprecated Use vehicle.getAttachedToCargobob(cargobob) instead
 */
export declare function getVehicleAttachedToCargobob(cargobob: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x99093F60746708CA | Since: 1103
 * @deprecated Use vehicle.getEntityAttachedToCargobob() instead
 */
export declare function getEntityAttachedToCargobob(): number;
/**
 * No comment provided
 *
 * Hash: 0x4127F1D84E347769 | Since: 323
 * @deprecated Use vehicle.attachToCargobob(cargobob, vehicle1, pos) instead
 */
export declare function attachVehicleToCargobob(cargobob: number | Vehicle, vehicle1: number | Vehicle, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xA1DD82F3CCF9A01E | Since: 944
 * @deprecated Use vehicle.attachEntityToCargobob() instead
 */
export declare function attachEntityToCargobob(): void;
/**
 * Stops cargobob from being able to detach the attached vehicle.
 *
 * Hash: 0x571FEB383F629926 | Since: 323
 * @deprecated Use vehicle.setCargobobForceDontDetach(cargobob, toggle) instead
 */
export declare function setCargobobForceDontDetachVehicle(cargobob: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1F34B0626C594380 | Since: 757
 * @deprecated Use vehicle.setCargobobExcludeFromPickupEntity() instead
 */
export declare function setCargobobExcludeFromPickupEntity(): void;
/**
 * No comment provided
 *
 * Hash: 0x2C1D8B3B19E517CC | Since: 757
 * @deprecated Use vehicle.canCargobobPickUpEntity() instead
 */
export declare function canCargobobPickUpEntity(): boolean;
/**
 * Gets the position of the cargobob hook, in world coords.
 *
 * Hash: 0xCBDB9B923CACC92D | Since: 323
 * @deprecated Use vehicle.getAttachedPickUpHookPosition(cargobob) instead
 */
export declare function getAttachedPickUpHookPosition(cargobob: number | Vehicle): Vector3;
/**
 * Returns true only when the hook is active, will return false if the magnet is active
 *
 * Hash: 0x1821D91AD4B56108 | Since: 323
 * @deprecated Use vehicle.doesCargobobHavePickUpRope(cargobob) instead
 */
export declare function doesCargobobHavePickUpRope(cargobob: number | Vehicle): boolean;
/**
 * Drops the Hook/Magnet on a cargobob
 *
 * state
 * enum eCargobobHook
 * {
 * CARGOBOB_HOOK = 0,
 * CARGOBOB_MAGNET = 1,
 * };
 *
 * Hash: 0x7BEB0C7A235F6F3B | Since: 323
 * @deprecated Use vehicle.createPickUpRopeForCargobob(cargobob, state) instead
 */
export declare function createPickUpRopeForCargobob(cargobob: number | Vehicle, state: number): void;
/**
 * Retracts the hook on the cargobob.
 *
 * Note: after you retract it the natives for dropping the hook no longer work
 *
 * Hash: 0x9768CF648F54C804 | Since: 323
 * @deprecated Use vehicle.removePickUpRopeForCargobob(cargobob) instead
 */
export declare function removePickUpRopeForCargobob(cargobob: number | Vehicle): void;
/**
 * min: 1.9f, max: 100.0f
 *
 * Hash: 0x877C1EAEAC531023 | Since: 323
 * @deprecated Use vehicle.setPickupRopeLengthForCargobob(cargobob, length1, length2) instead
 */
export declare function setPickupRopeLengthForCargobob(cargobob: number | Vehicle, length1: number, length2: number): void;
/**
 * No comment provided
 *
 * Hash: 0xC0ED6438E6D39BA8 | Since: 944
 * @deprecated Use vehicle.setPickupRopeLengthWithoutCreatingRopeForCargobob() instead
 */
export declare function setPickupRopeLengthWithoutCreatingRopeForCargobob(): void;
/**
 * No comment provided
 *
 * Hash: 0xCF1182F682F65307 | Since: 323
 * @deprecated Use vehicle.setCargobobPickupRopeDampingMultiplier() instead
 */
export declare function setCargobobPickupRopeDampingMultiplier(): void;
/**
 * No comment provided
 *
 * Hash: 0x0D5F65A8F4EBDAB5 | Since: 1103
 * @deprecated Use vehicle.setCargobobPickupRopeType() instead
 */
export declare function setCargobobPickupRopeType(): void;
/**
 * Returns true only when the magnet is active, will return false if the hook is active
 *
 * Hash: 0x6E08BF5B3722BAC9 | Since: 323
 * @deprecated Use vehicle.doesCargobobHavePickupMagnet(cargobob) instead
 */
export declare function doesCargobobHavePickupMagnet(cargobob: number | Vehicle): boolean;
/**
 * Won't attract or magnetize to any helicopters or planes of course, but that's common sense.
 *
 * Hash: 0x9A665550F8DA349B | Since: 323
 * @deprecated Use vehicle.setCargobobPickupMagnetActive(cargobob, isActive) instead
 */
export declare function setCargobobPickupMagnetActive(cargobob: number | Vehicle, isActive: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xBCBFCD9D1DAC19E2 | Since: 323
 * @deprecated Use vehicle.setCargobobPickupMagnetStrength(cargobob, strength) instead
 */
export declare function setCargobobPickupMagnetStrength(cargobob: number | Vehicle, strength: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA17BAD153B51547E | Since: 323
 * @deprecated Use vehicle.setCargobobPickupMagnetFalloff(cargobob) instead
 */
export declare function setCargobobPickupMagnetFalloff(cargobob: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x66979ACF5102FD2F | Since: 323
 * @deprecated Use vehicle.setCargobobPickupMagnetReducedStrength(cargobob) instead
 */
export declare function setCargobobPickupMagnetReducedStrength(cargobob: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x6D8EAC07506291FB | Since: 323
 * @deprecated Use vehicle.setCargobobPickupMagnetReducedFalloff(cargobob) instead
 */
export declare function setCargobobPickupMagnetReducedFalloff(cargobob: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xED8286F71A819BAA | Since: 323
 * @deprecated Use vehicle.setCargobobPickupMagnetPullStrength(cargobob) instead
 */
export declare function setCargobobPickupMagnetPullStrength(cargobob: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x685D5561680D088B | Since: 323
 * @deprecated Use vehicle.setCargobobPickupMagnetPullRopeLength(vehicle1) instead
 */
export declare function setCargobobPickupMagnetPullRopeLength(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xE301BD63E9E13CF0 | Since: 323
 * @deprecated Use vehicle.setCargobobPickupMagnetSetTargetedMode(vehicle1, cargobob) instead
 */
export declare function setCargobobPickupMagnetSetTargetedMode(vehicle1: number | Vehicle, cargobob: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x9BDDC73CC6A115D4 | Since: 323
 * @deprecated Use vehicle.setCargobobPickupMagnetSetAmbientMode(vehicle1) instead
 */
export declare function setCargobobPickupMagnetSetAmbientMode(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x56EB5E94318D3FB6 | Since: 323
 * @deprecated Use vehicle.setCargobobPickupMagnetEnsurePickupEntityUpright(vehicle1) instead
 */
export declare function setCargobobPickupMagnetEnsurePickupEntityUpright(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x25ECB9F8017D98E0 | Since: 323
 * @deprecated Use vehicle.doesHaveWeapons(vehicle1) instead
 */
export declare function doesVehicleHaveWeapons(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x2C4A1590ABF43E8B | Since: 323
 * @deprecated Use vehicle.setWillTellOthersToHurry(vehicle1) instead
 */
export declare function setVehicleWillTellOthersToHurry(vehicle1: number | Vehicle): void;
/**
 * Full list of weapons by DurtyFree (Search for VEHICLE_*): https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0xF4FC6A6F67D8D856 | Since: 323
 * @deprecated Use vehicle.disableWeapon(disabled, weaponHash, vehicle1, owner) instead
 */
export declare function disableVehicleWeapon(disabled: boolean, weaponHash: number | string, vehicle1: number | Vehicle, owner: number | Ped): void;
/**
 * Full list of weapons by DurtyFree (Search for VEHICLE_*): https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x563B65A643ED072E | Since: 1011
 * @deprecated Use vehicle.isWeaponDisabled(weaponHash, vehicle1, owner) instead
 */
export declare function isVehicleWeaponDisabled(weaponHash: number | string, vehicle1: number | Vehicle, owner: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE05DD0E9707003A3 | Since: 323
 * @deprecated Use vehicle.setUsedForPilotSchool(vehicle1, toggle) instead
 */
export declare function setVehicleUsedForPilotSchool(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x21115BCD6E44656A | Since: 323
 * @deprecated Use vehicle.setActiveForPedNavigation(vehicle1, toggle) instead
 */
export declare function setVehicleActiveForPedNavigation(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Returns an int
 *
 * Vehicle Classes:
 * 0: Compacts
 * 1: Sedans
 * 2: SUVs
 * 3: Coupes
 * 4: Muscle
 * 5: Sports Classics
 * 6: Sports
 * 7: Super
 * 8: Motorcycles
 * 9: Off-road
 * 10: Industrial
 * 11: Utility
 * 12: Vans
 * 13: Cycles
 * 14: Boats
 * 15: Helicopters
 * 16: Planes
 * 17: Service
 * 18: Emergency
 * 19: Military
 * 20: Commercial
 * 21: Trains
 *
 * char buffer[128];
 * `std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS(vehicle));`
 *
 * `const char* className = HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION(buffer);`
 *
 * Hash: 0x29439776AAA00A62 | Since: 323
 * @deprecated Use vehicle.getClass(vehicle1) instead
 */
export declare function getVehicleClass(vehicle1: number | Vehicle): number;
/**
 * char buffer[128];
 * `std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS_FROM_NAME (hash));`
 *
 * `const char* className = HUD::GET_FILENAME_FOR_AUDIO_CONVERSATION(buffer);`
 *
 * Full list of vehicles by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/vehicles.json
 *
 * Hash: 0xDEDF1C8BD47C2200 | Since: 323
 * @deprecated Use vehicle.getClassFromName(modelHash) instead
 */
export declare function getVehicleClassFromName(modelHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xBCDF8BAF56C87B6A | Since: 323
 * @deprecated Use vehicle.setPlayersLast(vehicle1) instead
 */
export declare function setPlayersLastVehicle(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x300504B23BD3B711 | Since: 323
 * @deprecated Use vehicle.setCanBeUsedByFleeingPeds(vehicle1, toggle) instead
 */
export declare function setVehicleCanBeUsedByFleeingPeds(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xE5810AC70602F2F5 | Since: 323
 * @deprecated Use vehicle.setAircraftPilotSkillNoiseScalar(vehicle1) instead
 */
export declare function setAircraftPilotSkillNoiseScalar(vehicle1: number | Vehicle): void;
/**
 * Money pickups are created around cars when they explode. Only works when the vehicle model is a car. A single pickup is between 1 and 18 dollars in size. All car models seem to give the same amount of money.
 *
 * youtu.be/3arlUxzHl5Y
 * i.imgur.com/WrNpYFs.jpg
 *
 * Hash: 0x068F64F2470F9656 | Since: 323
 * @deprecated Use vehicle.setDropsMoneyWhenBlownUp(vehicle1, toggle) instead
 */
export declare function setVehicleDropsMoneyWhenBlownUp(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB8FBC8B1330CA9B4 | Since: 323
 * @deprecated Use vehicle.setKeepEngineOnWhenAbandoned(vehicle1, toggle) instead
 */
export declare function setVehicleKeepEngineOnWhenAbandoned(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Seems to copy some values in vehicle
 *
 * Hash: 0x6A973569BA094650 | Since: 1604
 * @deprecated Use vehicle.setImpatienceTimer(vehicle1) instead
 */
export declare function setVehicleImpatienceTimer(vehicle1: number | Vehicle): void;
/**
 * Use the "AIHandling" string found in handling.meta
 *
 * Hash: 0x10655FAB9915623D | Since: 323
 * @deprecated Use vehicle.setHandlingOverride(vehicle1, hash) instead
 */
export declare function setVehicleHandlingOverride(vehicle1: number | Vehicle, hash: number | string): void;
/**
 * Max value is 32767
 *
 * Hash: 0x79DF7E806202CE01 | Since: 323
 * @deprecated Use vehicle.setExtendedRemovalRange(vehicle1, range) instead
 */
export declare function setVehicleExtendedRemovalRange(vehicle1: number | Vehicle, range: number): void;
/**
 * No comment provided
 *
 * Hash: 0x9007A2F21DC108D4 | Since: 323
 * @deprecated Use vehicle.setSteeringBiasScalar() instead
 */
export declare function setVehicleSteeringBiasScalar(): void;
/**
 * value between 0.0 and 1.0
 *
 * Hash: 0x6E0859B530A365CC | Since: 323
 * @deprecated Use vehicle.setHeliControlLaggingRateScalar(helicopter, multiplier) instead
 */
export declare function setHeliControlLaggingRateScalar(helicopter: number | Vehicle, multiplier: number): void;
/**
 * Seems to be related to the metal parts, not tyres (like i was expecting lol)
 *
 * Hash: 0x1837AF7C627009BA | Since: 323
 * @deprecated Use vehicle.setFrictionOverride(vehicle1, friction) instead
 */
export declare function setVehicleFrictionOverride(vehicle1: number | Vehicle, friction: number): void;
/**
 * No comment provided
 *
 * Hash: 0xA37B9A517B133349 | Since: 323
 * @deprecated Use vehicle.setWheelsCanBreakOffWhenBlowUp(vehicle1, toggle) instead
 */
export declare function setVehicleWheelsCanBreakOffWhenBlowUp(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xF78F94D60248C737 | Since: 323
 * @deprecated Use vehicle.arePlaneControlPanelsIntact(vehicle1) instead
 */
export declare function arePlaneControlPanelsIntact(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA46413066687A328 | Since: 323
 * @deprecated Use vehicle.setCeilingHeight(vehicle1, height) instead
 */
export declare function setVehicleCeilingHeight(vehicle1: number | Vehicle, height: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5E569EC46EC21CAE | Since: 323
 * @deprecated Use vehicle.setNoExplosionDamageFromDriver(vehicle1, toggle) instead
 */
export declare function setVehicleNoExplosionDamageFromDriver(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6D6AF961B72728AE | Since: 323
 * @deprecated Use vehicle.clearRouteHistory(vehicle1) instead
 */
export declare function clearVehicleRouteHistory(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x956B409B984D9BF7 | Since: 323
 * @deprecated Use vehicle.doesExistWithDecorator(decorator) instead
 */
export declare function doesVehicleExistWithDecorator(decorator: string): number;
/**
 * Used to be incorrectly named SET_VEHICLE_EXCLUSIVE_DRIVER
 * Toggles a flag related to SET_VEHICLE_EXCLUSIVE_DRIVER, however, doesn't enable that feature (or trigger script events related to it).
 *
 * Hash: 0x41062318F23ED854 | Since: 323
 * @deprecated Use vehicle.setAiCanUseExclusiveSeats(vehicle1, toggle) instead
 */
export declare function setVehicleAiCanUseExclusiveSeats(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * index: 0 - 1
 *
 * Used to be incorrectly named _SET_VEHICLE_EXCLUSIVE_DRIVER_2
 *
 * Hash: 0xB5C51B5502E85E83 | Since: 323
 * @deprecated Use vehicle.setExclusiveDriver(vehicle1, ped, index) instead
 */
export declare function setVehicleExclusiveDriver(vehicle1: number | Vehicle, ped: number | Ped, index: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB09D25E77C33EB3F | Since: 463
 * @deprecated Use vehicle.isPedExclusiveDriverOf(ped, vehicle1) instead
 */
export declare function isPedExclusiveDriverOfVehicle(ped: number | Ped, vehicle1: number | Vehicle): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x500873A45724C863 | Since: 323
 * @deprecated Use vehicle.disableIndividualPlanePropeller(vehicle1, propeller) instead
 */
export declare function disableIndividualPlanePropeller(vehicle1: number | Vehicle, propeller: number): void;
/**
 * No comment provided
 *
 * Hash: 0xDC05D2777F855F44 | Since: 3407
 * @deprecated Use vehicle.enableIndividualPlanePropeller(vehicle1, propeller) instead
 */
export declare function enableIndividualPlanePropeller(vehicle1: number | Vehicle, propeller: number): void;
/**
 * No comment provided
 *
 * Hash: 0xB055A34527CB8FD7 | Since: 323
 * @deprecated Use vehicle.setForceAfterburner(vehicle1, toggle) instead
 */
export declare function setVehicleForceAfterburner(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * R* used it to "remove" vehicle windows when "nightshark" had some mod, which adding some kind of armored windows. When enabled, you can't break vehicles glass. All your bullets wiil shoot through glass. You also will not able to break the glass with any other way (hitting and etc)
 *
 * Hash: 0x1087BC8EC540DAEB | Since: 1103
 * @deprecated Use vehicle.setDontProcessGlass(vehicle1, toggle) instead
 */
export declare function setDontProcessVehicleGlass(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x4AD280EB48B2D8E6 | Since: 1868
 * @deprecated Use vehicle.setDisableWantedConesResponse(vehicle1, toggle) instead
 */
export declare function setDisableWantedConesResponse(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB68CFAF83A02768D | Since: 1290
 * @deprecated Use vehicle.setUseDesiredZCruiseSpeedForLanding(vehicle1, toggle) instead
 */
export declare function setUseDesiredZCruiseSpeedForLanding(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0205F5365292D2EB | Since: 1290
 * @deprecated Use vehicle.setArriveDistanceOverrideForPersuitAttack(vehicle1) instead
 */
export declare function setArriveDistanceOverrideForVehiclePersuitAttack(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xCF9159024555488C | Since: 944
 * @deprecated Use vehicle.setReadyForCleanup() instead
 */
export declare function setVehicleReadyForCleanup(): void;
/**
 * Toggles to render distant vehicles. They may not be vehicles but images to look like vehicles.
 *
 * Hash: 0xF796359A959DF65D | Since: 323
 * @deprecated Use vehicle.setDistantCarsEnabled(toggle) instead
 */
export declare function setDistantCarsEnabled(toggle: boolean): void;
/**
 * Sets the color of the neon lights of the specified vehicle.
 *
 * Hash: 0x8E0A582209A62695 | Since: 323
 * @deprecated Use vehicle.setNeonColour(vehicle1, r, g, b) instead
 */
export declare function setVehicleNeonColour(vehicle1: number | Vehicle, r: number, g: number, b: number): void;
/**
 * Index references CVehicleModelColor
 *
 * Hash: 0xB93B2867F7B479D1 | Since: 1493
 * @deprecated Use vehicle.setNeonIndexColour(vehicle1, index) instead
 */
export declare function setVehicleNeonIndexColour(vehicle1: number | Vehicle, index: number): void;
/**
 * Gets the color of the neon lights of the specified vehicle.
 *
 * See SET_VEHICLE_NEON_COLOUR (0x8E0A582209A62695) for more information
 *
 * Hash: 0x7619EEE8C886757F | Since: 323
 * @deprecated Use vehicle.getNeonColour(vehicle1) instead
 */
export declare function getVehicleNeonColour(vehicle1: number | Vehicle): [number, number, number];
/**
 * Sets the neon lights of the specified vehicle on/off.
 *
 * Indices:
 * 0 = Left
 * 1 = Right
 * 2 = Front
 * 3 = Back
 *
 * Hash: 0x2AA720E4287BF269 | Since: 323
 * @deprecated Use vehicle.setNeonEnabled(vehicle1, index, toggle) instead
 */
export declare function setVehicleNeonEnabled(vehicle1: number | Vehicle, index: number, toggle: boolean): void;
/**
 * indices:
 * 0 = Left
 * 1 = Right
 * 2 = Front
 * 3 = Back
 *
 * Hash: 0x8C4B92553E4766A5 | Since: 323
 * @deprecated Use vehicle.getNeonEnabled(vehicle1, index) instead
 */
export declare function getVehicleNeonEnabled(vehicle1: number | Vehicle, index: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x35E0654F4BAD7971 | Since: 323
 * @deprecated Use vehicle.setAmbientNeonEnabled() instead
 */
export declare function setAmbientVehicleNeonEnabled(): void;
/**
 * No comment provided
 *
 * Hash: 0x83F813570FF519DE | Since: 573
 * @deprecated Use vehicle.suppressNeonsOn(vehicle1, toggle) instead
 */
export declare function suppressNeonsOnVehicle(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB088E9A47AE6EDD5 | Since: 323
 * @deprecated Use vehicle.setDisableSuperdummy(vehicle1) instead
 */
export declare function setDisableSuperdummy(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xDBA3C090E3D74690 | Since: 323
 * @deprecated Use vehicle.requestDial(vehicle1) instead
 */
export declare function requestVehicleDial(vehicle1: number | Vehicle): void;
/**
 * Seems related to vehicle health, like the one in IV.
 * Max 1000, min 0.
 * Vehicle does not necessarily explode or become undrivable at 0.
 *
 * Hash: 0xF271147EB7B40F12 | Since: 323
 * @deprecated Use vehicle.getBodyHealth(vehicle1) instead
 */
export declare function getVehicleBodyHealth(vehicle1: number | Vehicle): number;
/**
 * p2 often set to 1000.0 in the decompiled scripts.
 *
 * Hash: 0xB77D05AC8C78AADB | Since: 323
 * @deprecated Use vehicle.setBodyHealth(vehicle1, value) instead
 */
export declare function setVehicleBodyHealth(vehicle1: number | Vehicle, value: number): void;
/**
 * Outputs 2 Vector3's.
 * Scripts check if out2.x - out1.x > someshit.x
 * Could be suspension related, as in max suspension height and min suspension height, considering the natives location.
 *
 * Hash: 0xDF7E3EEB29642C38 | Since: 323
 * @deprecated Use vehicle.getSize(vehicle1) instead
 */
export declare function getVehicleSize(vehicle1: number | Vehicle): [Vector3, Vector3];
/**
 * Gets the height of the vehicle's suspension.
 * The higher the value the lower the suspension. Each 0.002 corresponds with one more level lowered.
 * 0.000 is the stock suspension.
 * 0.008 is Ultra Suspension.
 *
 * Hash: 0x53952FD2BAA19F17 | Since: 323
 * @deprecated Use vehicle.getFakeSuspensionLoweringAmount(vehicle1) instead
 */
export declare function getFakeSuspensionLoweringAmount(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x84FD40F56075E816 | Since: 323
 * @deprecated Use vehicle.setCarHighSpeedBumpSeverityMultiplier(multiplier) instead
 */
export declare function setCarHighSpeedBumpSeverityMultiplier(multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x92922A607497B14D | Since: 463
 * @deprecated Use vehicle.getNumberOfDoors(vehicle1) instead
 */
export declare function getNumberOfVehicleDoors(vehicle1: number | Vehicle): number;
/**
 * If false, lowers hydraulics (if raised) and disables hydraulics controls. If true, raises hydraulics and enables hydraulics controls.
 *
 * Only used once in each carmod script, on a car that does not have hydraulics to begin with.
 *
 * Hash: 0x28B18377EB6E25F6 | Since: 505
 * @deprecated Use vehicle.setHydraulicsControl(vehicle1, toggle) instead
 */
export declare function setHydraulicsControl(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xA7DCDF4DED40A8F4 | Since: 323
 * @deprecated Use vehicle.setCanAdjustGroundClearance(vehicle1) instead
 */
export declare function setCanAdjustGroundClearance(vehicle1: number | Vehicle): void;
/**
 * 0 min 100 max
 * starts at 100
 * Seams to have health zones
 * Front of vehicle when damaged goes from 100-50 and stops at 50.
 * Rear can be damaged from 100-0
 * Only tested with two cars.
 *
 * any idea how this differs from the first one?
 *
 * --
 * May return the vehicle health on a scale of 0.0 - 100.0 (needs to be confirmed)
 *
 * example:
 *
 * `v_F = ENTITY::GET_ENTITY_MODEL(v_3);`
 * if (((v_F == ${tanker}) || (v_F == ${armytanker})) || (v_F == ${tanker2})) {
 * `if (VEHICLE::GET_VEHICLE_HEALTH_PERCENTAGE(v_3) <= 1.0) {`
 * `NETWORK::NETWORK_EXPLODE_VEHICLE(v_3, 1, 1, -1);`
 * }
 * }
 *
 * Hash: 0xB8EF61207C2393A9 | Since: 323
 * @deprecated Use vehicle.getHealthPercentage(vehicle1, maxEngineHealth, maxPetrolTankHealth, maxBodyHealth, maxMainRotorHealth, maxTailRotorHealth, maxUnkHealth) instead
 */
export declare function getVehicleHealthPercentage(vehicle1: number | Vehicle, maxEngineHealth: number, maxPetrolTankHealth: number, maxBodyHealth: number, maxMainRotorHealth: number, maxTailRotorHealth: number, maxUnkHealth: number): number;
/**
 * No comment provided
 *
 * Hash: 0xD4C4642CB7F50B5D | Since: 323
 * @deprecated Use vehicle.getIsMercenary(vehicle1) instead
 */
export declare function getVehicleIsMercenary(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC361AA040D6637A8 | Since: 323
 * @deprecated Use vehicle.setBrokenPartsDontAffectAiHandling(vehicle1) instead
 */
export declare function setVehicleBrokenPartsDontAffectAiHandling(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x99C82F8A139F3E4E | Since: 323
 * @deprecated Use vehicle.setKersAllowed(vehicle1, toggle) instead
 */
export declare function setVehicleKersAllowed(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Returns true if the vehicle has a HF_HAS_KERS (strHandlingFlags 0x4) handing flag set, for instance the lectro/vindicator bikes or the open wheelers.
 *
 * Hash: 0x50634E348C8D44EF | Since: 372
 * @deprecated Use vehicle.getHasKers(vehicle1) instead
 */
export declare function getVehicleHasKers(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE16142B94664DEFD | Since: 323
 * @deprecated Use vehicle.setPlaneResistToExplosion(vehicle1, toggle) instead
 */
export declare function setPlaneResistToExplosion(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x8074CC1886802912 | Since: 2545
 * @deprecated Use vehicle.setHeliResistToExplosion(vehicle1, toggle) instead
 */
export declare function setHeliResistToExplosion(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x26D99D5A82FD18E8 | Since: 463
 * @deprecated Use vehicle.setDisableBmxExtraTrickForces() instead
 */
export declare function setDisableBmxExtraTrickForces(): void;
/**
 * Works only on vehicles that support hydraulics.
 *
 * Hash: 0x84EA99C62CB3EF0C | Since: 505
 * @deprecated Use vehicle.setHydraulicSuspensionRaiseFactor(vehicle1, wheelId, value) instead
 */
export declare function setHydraulicSuspensionRaiseFactor(vehicle1: number | Vehicle, wheelId: number, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0BB5CBDDD0F25AE3 | Since: 2372
 * @deprecated Use vehicle.getHydraulicSuspensionRaiseFactor(vehicle1, wheelId) instead
 */
export declare function getHydraulicSuspensionRaiseFactor(vehicle1: number | Vehicle, wheelId: number): number;
/**
 * No comment provided
 *
 * Hash: 0x1201E8A3290A3B98 | Since: 505
 * @deprecated Use vehicle.setCanUseHydraulics(vehicle1, toggle) instead
 */
export declare function setCanUseHydraulics(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * States:
 * 4 = raise
 * 5 = lower
 * 6 = jump
 *
 * Hash: 0x8EA86DF356801C7D | Since: 505
 * @deprecated Use vehicle.setHydraulicState(vehicle1, state) instead
 */
export declare function setHydraulicVehicleState(vehicle1: number | Vehicle, state: number): void;
/**
 * Sets vehicle wheel hydraulic states transition. Known states:
 * 0 - reset
 * 1 - raise wheel (uses value arg, works just like _SET_VEHICLE_HYDRAULIC_WHEEL_VALUE)
 * 2 - jump using wheel
 *
 * Hash: 0xC24075310A8B9CD1 | Since: 505
 * @deprecated Use vehicle.setHydraulicWheelState(vehicle1, wheelId, state, value) instead
 */
export declare function setHydraulicWheelState(vehicle1: number | Vehicle, wheelId: number, state: number, value: number): void;
/**
 * No comment provided
 *
 * Hash: 0x5BA68A0840D546AC | Since: 463
 * @deprecated Use vehicle.hasPetroltankSetOnFireByEntity() instead
 */
export declare function hasVehiclePetroltankSetOnFireByEntity(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4419966C9936071A | Since: 463
 * @deprecated Use vehicle.clearPetroltankFireCulprit(vehicle1) instead
 */
export declare function clearVehiclePetroltankFireCulprit(vehicle1: number | Vehicle): void;
/**
 * Controls how fast bobbleheads and tsurikawas move on each axis.
 *
 * p2 is probably z, but changing that value didn't seem to have a noticeable effect.
 *
 * Hash: 0x870B8B7A766615C8 | Since: 505
 * @deprecated Use vehicle.setBobbleheadVelocity(x, y) instead
 */
export declare function setVehicleBobbleheadVelocity(x: number, y: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8533CAFDE1F0F336 | Since: 505
 * @deprecated Use vehicle.getIsDummy() instead
 */
export declare function getVehicleIsDummy(): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4E20D2A627011E8E | Since: 757
 * @deprecated Use vehicle.setDamageScale(vehicle1) instead
 */
export declare function setVehicleDamageScale(vehicle1: number | Vehicle): boolean;
/**
 * Does not actually return anything.
 *
 * Hash: 0x84D7FFD223CAAFFD | Since: 3407
 * @deprecated Use vehicle.setExplosiveDamageScale(vehicle1, scale) instead
 */
export declare function setVehicleExplosiveDamageScale(vehicle1: number | Vehicle, scale: number): any;
/**
 * No comment provided
 *
 * Hash: 0x45A561A9421AB6AD | Since: 944
 * @deprecated Use vehicle.setWeaponDamageScale(vehicle1, multiplier) instead
 */
export declare function setVehicleWeaponDamageScale(vehicle1: number | Vehicle, multiplier: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD4196117AF7BB974 | Since: 757
 * @deprecated Use vehicle.setDisableDamageWithPickedUpEntity() instead
 */
export declare function setDisableDamageWithPickedUpEntity(): boolean;
/**
 * No comment provided
 *
 * Hash: 0xBB2333BB87DDD87F | Since: 757
 * @deprecated Use vehicle.setUsesMpPlayerDamageMultiplier() instead
 */
export declare function setVehicleUsesMpPlayerDamageMultiplier(): void;
/**
 * When enabled, the player won't fall off the bike when landing from large heights.
 *
 * Hash: 0x73561D4425A021A2 | Since: 791
 * @deprecated Use vehicle.setBikeEasyToLand(vehicle1, toggle) instead
 */
export declare function setBikeEasyToLand(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Inverts vehicle's controls. So INPUT_VEH_ACCELERATE will be INPUT_VEH_BRAKE and vise versa (same for A/D controls)
 * Doesn't work for planes/helis.
 *
 * Hash: 0x5B91B229243351A8 | Since: 791
 * @deprecated Use vehicle.setInvertControls(vehicle1, state) instead
 */
export declare function setInvertVehicleControls(vehicle1: number | Vehicle, state: boolean): void;
/**
 * Disables the screen effects and sound effects when driving over a speed boost pad.
 *
 * Hash: 0x7BBE7FF626A591FE | Since: 877
 * @deprecated Use vehicle.setSpeedBoostEffectDisabled(disabled) instead
 */
export declare function setSpeedBoostEffectDisabled(disabled: boolean): void;
/**
 * Disables the screen effects and sound effects when driving over a slowdown pad.
 *
 * Hash: 0x65B080555EA48149 | Since: 1011
 * @deprecated Use vehicle.setSlowDownEffectDisabled(disabled) instead
 */
export declare function setSlowDownEffectDisabled(disabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x428AD3E26C8D9EB0 | Since: 877
 * @deprecated Use vehicle.setFormationLeader(vehicle1, pos) instead
 */
export declare function setFormationLeader(vehicle1: number | Vehicle, pos: Vector3): void;
/**
 * Resets the effect of SET_FORMATION_LEADER
 *
 * Hash: 0xE2F53F172B45EDE1 | Since: 877
 * @deprecated Use vehicle.resetFormationLeader() instead
 */
export declare function resetFormationLeader(): void;
/**
 * No comment provided
 *
 * Hash: 0xBA91D045575699AD | Since: 877
 * @deprecated Use vehicle.getIsBoatCapsized(vehicle1) instead
 */
export declare function getIsBoatCapsized(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x80E3357FDEF45C21 | Since: 944
 * @deprecated Use vehicle.setAllowRammingSoopOrRamp() instead
 */
export declare function setAllowRammingSoopOrRamp(): void;
/**
 * No comment provided
 *
 * Hash: 0xEFC13B1CE30D755D | Since: 944
 * @deprecated Use vehicle.setScriptRampImpulseScale(vehicle1, impulseScale) instead
 */
export declare function setScriptRampImpulseScale(vehicle1: number | Vehicle, impulseScale: number): void;
/**
 * doorId: see SET_VEHICLE_DOOR_SHUT
 *
 * Hash: 0x645F4B6E8499F632 | Since: 944
 * @deprecated Use vehicle.getIsDoorValid(vehicle1, doorId) instead
 */
export declare function getIsDoorValid(vehicle1: number | Vehicle, doorId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE00F2AB100B76E89 | Since: 944
 * @deprecated Use vehicle.setScriptRocketBoostRechargeTime(vehicle1, seconds) instead
 */
export declare function setScriptRocketBoostRechargeTime(vehicle1: number | Vehicle, seconds: number): void;
/**
 * No comment provided
 *
 * Hash: 0x36D782F68B309BDA | Since: 944
 * @deprecated Use vehicle.getHasRocketBoost(vehicle1) instead
 */
export declare function getHasRocketBoost(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3D34E80EED4AE3BE | Since: 944
 * @deprecated Use vehicle.isRocketBoostActive(vehicle1) instead
 */
export declare function isRocketBoostActive(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x81E1552E35DC3839 | Since: 944
 * @deprecated Use vehicle.setRocketBoostActive(vehicle1, active) instead
 */
export declare function setRocketBoostActive(vehicle1: number | Vehicle, active: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDCA174A42133F08C | Since: 944
 * @deprecated Use vehicle.getHasRetractableWheels(vehicle1) instead
 */
export declare function getHasRetractableWheels(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1DA0DA9CB3F0C8BF | Since: 944
 * @deprecated Use vehicle.getIsWheelsRetracted(vehicle1) instead
 */
export declare function getIsWheelsRetracted(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xF660602546D27BA8 | Since: 944
 * @deprecated Use vehicle.setWheelsExtendedInstantly(vehicle1) instead
 */
export declare function setWheelsExtendedInstantly(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x5335BE58C083E74E | Since: 1011
 * @deprecated Use vehicle.setWheelsRetractedInstantly(vehicle1) instead
 */
export declare function setWheelsRetractedInstantly(vehicle1: number | Vehicle): void;
/**
 * Returns true if the vehicle has the FLAG_JUMPING_CAR flag set.
 *
 * Hash: 0x9078C0C5EF8C19E9 | Since: 944
 * @deprecated Use vehicle.getCarHasJump(vehicle1) instead
 */
export declare function getCarHasJump(vehicle1: number | Vehicle): boolean;
/**
 * Allows vehicles with the FLAG_JUMPING_CAR flag to jump higher (i.e. Ruiner 2000).
 *
 * Hash: 0xF06A16CA55D138D8 | Since: 944
 * @deprecated Use vehicle.setUseHigherCarJump(vehicle1, toggle) instead
 */
export declare function setUseHigherCarJump(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xB2E0C0D6922D31F2 | Since: 944
 * @deprecated Use vehicle.setClearFreezeWaitingOnCollisionOncePlayerEnters(vehicle1, toggle) instead
 */
export declare function setClearFreezeWaitingOnCollisionOncePlayerEnters(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Set vehicle's primary mounted weapon 2 ammo. For example, use it on APC.
 * For example, you can "remove" any vehicle weapon from any vehicle.
 * ammoAmount -1 = infinite ammo (default value for any spawned vehicle tho)
 *
 * Hash: 0x44CD1F493DB2A0A6 | Since: 944
 * @deprecated Use vehicle.setWeaponRestrictedAmmo(vehicle1, weaponIndex, capacity) instead
 */
export declare function setVehicleWeaponRestrictedAmmo(vehicle1: number | Vehicle, weaponIndex: number, capacity: number): void;
/**
 * No comment provided
 *
 * Hash: 0x8181CE2F25CB9BB7 | Since: 1011
 * @deprecated Use vehicle.getWeaponRestrictedAmmo(vehicle1, weaponIndex) instead
 */
export declare function getVehicleWeaponRestrictedAmmo(vehicle1: number | Vehicle, weaponIndex: number): number;
/**
 * No comment provided
 *
 * Hash: 0xBC9CFF381338CB4F | Since: 944
 * @deprecated Use vehicle.getHasParachute(vehicle1) instead
 */
export declare function getVehicleHasParachute(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA916396DF4154EE3 | Since: 944
 * @deprecated Use vehicle.getCanDeployParachute(vehicle1) instead
 */
export declare function getVehicleCanDeployParachute(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0BFFB028B3DD0A97 | Since: 944
 * @deprecated Use vehicle.startParachuting(vehicle1, active) instead
 */
export declare function vehicleStartParachuting(vehicle1: number | Vehicle, active: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x3DE51E9C80B116CF | Since: 1011
 * @deprecated Use vehicle.isParachuteDeployed(vehicle1) instead
 */
export declare function isVehicleParachuteDeployed(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x28D034A93FE31BF5 | Since: 944
 * @deprecated Use vehicle.setRampAndRammingCarsTakeDamage(vehicle1, toggle) instead
 */
export declare function vehicleSetRampAndRammingCarsTakeDamage(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1BBAC99C0BC53656 | Since: 944
 * @deprecated Use vehicle.setEnableRampCarSideImpulse() instead
 */
export declare function vehicleSetEnableRampCarSideImpulse(): void;
/**
 * No comment provided
 *
 * Hash: 0x756AE6E962168A04 | Since: 944
 * @deprecated Use vehicle.setEnableNormaliseRampCarVerticalVeloctiy() instead
 */
export declare function vehicleSetEnableNormaliseRampCarVerticalVeloctiy(): void;
/**
 * No comment provided
 *
 * Hash: 0x9D30687C57BAA0BB | Since: 1011
 * @deprecated Use vehicle.setJetWashForceEnabled() instead
 */
export declare function vehicleSetJetWashForceEnabled(): void;
/**
 * No comment provided
 *
 * Hash: 0x86B4B6212CB8B627 | Since: 1011
 * @deprecated Use vehicle.setWeaponCanTargetObjects(vehicle1, toggle) instead
 */
export declare function setVehicleWeaponCanTargetObjects(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Used for blazer5. Changes the quadbike-jetski transformation input from raise/lower convertible roof (hold H by default) to horn (press E by default.)
 *
 * Hash: 0x41290B40FA63E6DA | Since: 1011
 * @deprecated Use vehicle.setUseBoostButtonForWheelRetract(toggle) instead
 */
export declare function setVehicleUseBoostButtonForWheelRetract(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x1980F68872CC2C3D | Since: 3095
 * @deprecated Use vehicle.setUseHornButtonForNitrous(toggle) instead
 */
export declare function setVehicleUseHornButtonForNitrous(toggle: boolean): void;
/**
 * Parachute models:
 * - sr_prop_specraces_para_s_01
 * - imp_prop_impexp_para_s (SecuroServ; Default)
 * Plus, many more props can be used as vehicle parachutes, like umbrellas (prop_beach_parasol_03), and unlike SET_PLAYER_PARACHUTE_MODEL_OVERRIDE, you won't get stuck mid-air when using an umbrella.
 *
 * Hash: 0x4D610C6B56031351 | Since: 1011
 * @deprecated Use vehicle.setParachuteModelOverride(vehicle1, modelHash) instead
 */
export declare function vehicleSetParachuteModelOverride(vehicle1: number | Vehicle, modelHash: number | string): void;
/**
 * Variations available for the generic parachute (sr_prop_specraces_para_s_01):
 * - 0: Rainbow
 * - 1: Red
 * - 2: White, blue, yellow
 * - 3: Black, red, white
 * - 4: Red, white, blue
 * - 5: Blue
 * - 6: Black
 * - 7: Black, yellow
 *
 * Hash: 0xA74AD2439468C883 | Since: 1011
 * @deprecated Use vehicle.setParachuteModelTintIndex(vehicle1, textureVariation) instead
 */
export declare function vehicleSetParachuteModelTintIndex(vehicle1: number | Vehicle, textureVariation: number): void;
/**
 * No comment provided
 *
 * Hash: 0x0419B167EE128F33 | Since: 1103
 * @deprecated Use vehicle.setOverrideExtenableSideRatio() instead
 */
export declare function vehicleSetOverrideExtenableSideRatio(): number;
/**
 * No comment provided
 *
 * Hash: 0xF3B0E0AED097A3F5 | Since: 1103
 * @deprecated Use vehicle.setExtenableSideTargetRatio() instead
 */
export declare function vehicleSetExtenableSideTargetRatio(): number;
/**
 * No comment provided
 *
 * Hash: 0xD3E51C0AB8C26EEE | Since: 1103
 * @deprecated Use vehicle.setOverrideSideRatio() instead
 */
export declare function vehicleSetOverrideSideRatio(): number;
/**
 * No comment provided
 *
 * Hash: 0x9B8E1BF04B51F2E8 | Since: 1103
 * @deprecated Use vehicle.getAlls() instead
 */
export declare function getAllVehicles(): [number, any];
/**
 * No comment provided
 *
 * Hash: 0x72BECCF4B829522E | Since: 1103
 * @deprecated Use vehicle.setCargobobExtaPickupRange() instead
 */
export declare function setCargobobExtaPickupRange(): void;
/**
 * No comment provided
 *
 * Hash: 0x66E3AAFACE2D1EB8 | Since: 1103
 * @deprecated Use vehicle.setOverrideDoorTorque() instead
 */
export declare function setOverrideVehicleDoorTorque(): void;
/**
 * Enables/disables the ability to wheelie on motorcycles.
 *
 * Hash: 0x1312DDD8385AEE4E | Since: 1103
 * @deprecated Use vehicle.setWheelieEnabled(vehicle1, enabled) instead
 */
export declare function setWheelieEnabled(vehicle1: number | Vehicle, enabled: boolean): void;
/**
 * Prevents the vehicle from exploding when taking body damage. Only works for helis and planes.
 *
 * Hash: 0xEDBC8405B3895CC9 | Since: 1103
 * @deprecated Use vehicle.setDisableHeliExplodeFromBodyDamage(vehicle1, disable) instead
 */
export declare function setDisableHeliExplodeFromBodyDamage(vehicle1: number | Vehicle, disable: boolean): void;
/**
 * Prevents the vehicle from exploding when taking body damage if it was caused by a collision. Only works for planes.
 *
 * Hash: 0x26E13D440E7F6064 | Since: 1290
 * @deprecated Use vehicle.setDisableExplodeFromBodyDamageOnCollision(vehicle1, disable) instead
 */
export declare function setDisableExplodeFromBodyDamageOnCollision(vehicle1: number | Vehicle, disable: boolean): void;
/**
 * Prevents the vehicle from exploding when taking body damage if the inflictor is an AI-controlled vehicle. Only works for planes.
 *
 * Hash: 0xB0B7DF5CB876FF5E | Since: 3407
 * @deprecated Use vehicle.setDisableExplodeFromBodyDamageReceivedByAi(vehicle1, disable) instead
 */
export declare function setDisableExplodeFromBodyDamageReceivedByAiVehicle(vehicle1: number | Vehicle, disable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2FA2494B47FDD009 | Since: 1103
 * @deprecated Use vehicle.setTrailerAttachmentEnabled() instead
 */
export declare function setTrailerAttachmentEnabled(): void;
/**
 * No comment provided
 *
 * Hash: 0xFEB2DDED3509562E | Since: 1103
 * @deprecated Use vehicle.setRocketBoostFill(vehicle1, percentage) instead
 */
export declare function setRocketBoostFill(vehicle1: number | Vehicle, percentage: number): void;
/**
 * Set state to true to extend the wings, false to retract them.
 *
 * Hash: 0x544996C0081ABDEB | Since: 1103
 * @deprecated Use vehicle.setGliderActive(vehicle1, state) instead
 */
export declare function setGliderActive(vehicle1: number | Vehicle, state: boolean): void;
/**
 * Resets the vehicle's turret to its default position in scripted cameras. Doesn't seem to affect turrets that are occupied by a ped.
 *
 * Hash: 0x78CEEE41F49F421F | Since: 1103
 * @deprecated Use vehicle.setShouldResetTurretInScriptedCameras(vehicle1, shouldReset) instead
 */
export declare function setShouldResetTurretInScriptedCameras(vehicle1: number | Vehicle, shouldReset: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xAF60E6A2936F982A | Since: 1103
 * @deprecated Use vehicle.setDisableCollisionUponCreation(vehicle1, disable) instead
 */
export declare function setVehicleDisableCollisionUponCreation(vehicle1: number | Vehicle, disable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x430A7631A84C9BE7 | Since: 1180
 * @deprecated Use vehicle.setGroundEffectReducesDrag(toggle) instead
 */
export declare function setGroundEffectReducesDrag(toggle: boolean): void;
/**
 * Disables collision for this vehicle (maybe it also supports other entities, not sure).
 * Only world/building/fixed world objects will have their collisions disabled, props, peds, or any other entity still collides with the vehicle.
 * Example: https://streamable.com/6n45d5
 * Not sure if there is a native (and if so, which one) that resets the collisions.
 *
 * Hash: 0x75627043C6AA90AD | Since: 1180
 * @deprecated Use vehicle.setDisableMapCollision(vehicle1) instead
 */
export declare function setDisableMapCollision(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x8235F1BEAD557629 | Since: 1180
 * @deprecated Use vehicle.setDisablePedStandOnTop(vehicle1, toggle) instead
 */
export declare function setDisablePedStandOnTop(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x9640E30A7F395E4B | Since: 1290
 * @deprecated Use vehicle.setDamageScales(vehicle1) instead
 */
export declare function setVehicleDamageScales(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x0BBB9A7A8FFE931B | Since: 1290
 * @deprecated Use vehicle.setPlaneSectionDamageScale(vehicle1) instead
 */
export declare function setPlaneSectionDamageScale(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0xDD8A2D3337F04196 | Since: 3407
 * @deprecated Use vehicle.setPlaneControlSectionsShouldBreakOffFromExplosions(vehicle1, toggle) instead
 */
export declare function setPlaneControlSectionsShouldBreakOffFromExplosions(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Stops the cargobob from being able to attach any vehicle
 *
 * Hash: 0x94A68DA412C4007D | Since: 1180
 * @deprecated Use vehicle.setHeliCanPickupEntityThatHasPickUpDisabled(vehicle1, toggle) instead
 */
export declare function setHeliCanPickupEntityThatHasPickUpDisabled(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Sets the amount of bombs that this vehicle has. As far as I know, this does _not_ impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
 *
 * Hash: 0xF4B2ED59DEB5D774 | Since: 1180
 * @deprecated Use vehicle.setBombAmmo(vehicle1, bombCount) instead
 */
export declare function setVehicleBombAmmo(vehicle1: number | Vehicle, bombCount: number): void;
/**
 * Gets the amount of bombs that this vehicle has. As far as I know, this does _not_ impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
 *
 * Hash: 0xEA12BD130D7569A1 | Since: 1180
 * @deprecated Use vehicle.getBombAmmo(vehicle1) instead
 */
export declare function getVehicleBombAmmo(vehicle1: number | Vehicle): number;
/**
 * Similar to SET_VEHICLE_BOMB_AMMO, this sets the amount of countermeasures that are present on this vehicle.
 * Use GET_VEHICLE_BOMB_AMMO to get the current amount.
 *
 * Hash: 0x9BDA23BF666F0855 | Since: 1180
 * @deprecated Use vehicle.setCountermeasureAmmo(vehicle1, counterMeasureCount) instead
 */
export declare function setVehicleCountermeasureAmmo(vehicle1: number | Vehicle, counterMeasureCount: number): void;
/**
 * Similar to `GET_VEHICLE_BOMB_AMMO`, this gets the amount of countermeasures that are present on this vehicle.
 * Use SET_VEHICLE_COUNTERMEASURE_AMMO to set the current amount.
 *
 * Hash: 0xF846AA63DF56B804 | Since: 1180
 * @deprecated Use vehicle.getCountermeasureAmmo(vehicle1) instead
 */
export declare function getVehicleCountermeasureAmmo(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x0A3F820A9A9A9AC5 | Since: 1180
 * @deprecated Use vehicle.setHeliCombatOffset(vehicle1, pos) instead
 */
export declare function setHeliCombatOffset(vehicle1: number | Vehicle, pos: Vector3): void;
/**
 * Used in decompiled scripts in combination with GET_VEHICLE_SIZE
 * p7 is usually 2
 * p8 is usually 1
 *
 * Hash: 0x51F30DB60626A20E | Since: 1180
 * @deprecated Use vehicle.getCanBePlacedHere(vehicle1, pos, rot) instead
 */
export declare function getCanVehicleBePlacedHere(vehicle1: number | Vehicle, pos: Vector3, rot: Vector3): boolean;
/**
 * Sets a flag on heli and another vehicle type.
 *
 * Hash: 0x97841634EF7DF1D6 | Since: 1180
 * @deprecated Use vehicle.setDisableAutomaticCrashTask(vehicle1, toggle) instead
 */
export declare function setDisableAutomaticCrashTask(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Used in conjunction with SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO, in Rockstar's scripts. Using this will instantly transform the vehicle into hover mode starting from the given ratio (ranging from 0.0 to 1.0, values greater than 1.0 will put the vehicle into a glitched state.) If this is not used alongside SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO, the vehicle will automatically transform back into car mode.
 *
 * Usable only with the deluxo and other vehicles with deluxo-like hover mode toggle, modded or otherwise. Does nothing when used on oppressor2.
 *
 * Example:
 * `Ped playerPed = PLAYER::PLAYER_PED_ID();`
 * `Vehicle veh = PED::GET_VEHICLE_PED_IS_USING(playerPed);`
 * `VEHICLE::SET_SPECIAL_FLIGHT_MODE_RATIO(veh, 0.7f);`
 * `VEHICLE::SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO(veh, 1.0f);`
 *
 * Hash: 0xD138FA15C9776837 | Since: 1290
 * @deprecated Use vehicle.setSpecialFlightModeRatio(vehicle1, ratio) instead
 */
export declare function setSpecialFlightModeRatio(vehicle1: number | Vehicle, ratio: number): void;
/**
 * Used in conjunction with SET_SPECIAL_FLIGHT_MODE_RATIO, in Rockstar's scripts. The vehicle will transform into the given targetRatio, starting from the vehicle's current hover mode transform ratio (which can also be manually set by SET_SPECIAL_FLIGHT_MODE_RATIO,) i.e. setting targetRatio to 0.0 while the vehicle is in hover mode will transform the vehicle into car mode, likewise setting targetRatio to 1.0 while the vehicle is in car mode will transform the vehicle into hover mode, and if the current transform ratio is set to 0.7 while targetRatio is 1.0 the vehicle will transform into hover mode starting from being already partially transformed.
 *
 * targetRatio is recommended to always be 0.0 or 1.0, otherwise the vehicle will transform into a glitched state.
 *
 * Usable only with the deluxo and other vehicles with deluxo-like hover mode toggle, modded or otherwise. Does nothing when used on oppressor2.
 *
 * Example:
 * `Ped playerPed = PLAYER::PLAYER_PED_ID();`
 * `Vehicle veh = PED::GET_VEHICLE_PED_IS_USING(playerPed);`
 * `VEHICLE::SET_SPECIAL_FLIGHT_MODE_RATIO(veh, 0.7f);`
 * `VEHICLE::SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO(veh, 1.0f);`
 *
 * Hash: 0x438B3D7CA026FE91 | Since: 1290
 * @deprecated Use vehicle.setSpecialFlightModeTargetRatio(vehicle1, targetRatio) instead
 */
export declare function setSpecialFlightModeTargetRatio(vehicle1: number | Vehicle, targetRatio: number): void;
/**
 * It will override the ability to transform deluxo. For oppressor it will work just like SET_DISABLE_HOVER_MODE_FLIGHT
 *
 * Hash: 0xF1211889DF15A763 | Since: 1290
 * @deprecated Use vehicle.setSpecialFlightModeAllowed(vehicle1, toggle) instead
 */
export declare function setSpecialFlightModeAllowed(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Disables "wings" for some flying vehicles. Works only for oppressor _2_ and deluxo.
 * For deluxo it just immediately removes vehicle's "wings" and you will be not able to fly up.
 * For oppressor 2 it will remove wings right after you land. And you will not able to fly up anymore too.
 * But for opressor 2 you still can fly if you somehow get back in the air.
 *
 * Hash: 0x2D55FE374D5FDB91 | Since: 1290
 * @deprecated Use vehicle.setDisableHoverModeFlight(vehicle1, toggle) instead
 */
export declare function setDisableHoverModeFlight(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Checks if Chernobog's stabilizers are deployed or not.
 * These are the metal supports that allow it to fire.
 * This native only applies to the Chernobog.
 *
 * Hash: 0x3A9128352EAC9E85 | Since: 1290
 * @deprecated Use vehicle.getOutriggersDeployed(vehicle1) instead
 */
export declare function getOutriggersDeployed(vehicle1: number | Vehicle): boolean;
/**
 * Native is significantly more complicated than simply generating a random vector & length.
 * `The 'point' is either 400.0 or 250.0 units away from the Ped's current coordinates; and paths into functions like rage::grcViewport___IsSphereVisible`
 *
 * Hash: 0x8DC9675797123522 | Since: 1290
 * @deprecated Use vehicle.findSpawnCoordinatesForHeli(ped) instead
 */
export declare function findSpawnCoordinatesForHeli(ped: number | Ped): Vector3;
/**
 * Only used with the "akula" and "annihilator2" in the decompiled native scripts.
 *
 * Hash: 0xB251E0B33E58B424 | Since: 1290
 * @deprecated Use vehicle.setDeployFoldingWings(vehicle1, deploy) instead
 */
export declare function setDeployFoldingWings(vehicle1: number | Vehicle, deploy: boolean): void;
/**
 * Only used with the "akula" and "annihilator2" in the decompiled native scripts.
 *
 * Hash: 0xAEF12960FA943792 | Since: 1290
 * @deprecated Use vehicle.areFoldingWingsDeployed(vehicle1) instead
 */
export declare function areFoldingWingsDeployed(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x0C02468829E4AA65 | Since: 2944
 * @deprecated Use vehicle.setDeployMissileBays(vehicle1, deploy) instead
 */
export declare function setDeployMissileBays(vehicle1: number | Vehicle, deploy: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xEA4743874D515F13 | Since: 2944
 * @deprecated Use vehicle.areMissileBaysDeployed(vehicle1) instead
 */
export declare function areMissileBaysDeployed(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAA653AE61924B0A0 | Since: 1290
 * @deprecated Use vehicle.setDipStraightDownWhenCrashingPlane(vehicle1, toggle) instead
 */
export declare function setDipStraightDownWhenCrashingPlane(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Toggles specific flag on turret
 *
 * Hash: 0xC60060EB0D8AC7B1 | Since: 1290
 * @deprecated Use vehicle.setTurretHidden(vehicle1, index, toggle) instead
 */
export declare function setTurretHidden(vehicle1: number | Vehicle, index: number, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x70A252F60A3E036B | Since: 1365
 * @deprecated Use vehicle.setHoverModeWingRatio(vehicle1, ratio) instead
 */
export declare function setHoverModeWingRatio(vehicle1: number | Vehicle, ratio: number): void;
/**
 * Disables turret movement when called in a loop. You can still fire and aim. You cannot shoot backwards though.
 *
 * Hash: 0xE615BB7A7752C76A | Since: 1365
 * @deprecated Use vehicle.setDisableTurretMovement(vehicle1, turretId) instead
 */
export declare function setDisableTurretMovement(vehicle1: number | Vehicle, turretId: number): void;
/**
 * No comment provided
 *
 * Hash: 0x887FA38787DE8C72 | Since: 1365
 * @deprecated Use vehicle.setForceFixLinkMatrices(vehicle1) instead
 */
export declare function setForceFixLinkMatrices(vehicle1: number | Vehicle): void;
/**
 * Affects the playback speed of the submarine car conversion animations. Does not affect hardcoded animations such as the wheels being retracted.
 *
 * Hash: 0x498218259FB7C72D | Since: 1365
 * @deprecated Use vehicle.setTransformRateForAnimation(vehicle1, transformRate) instead
 */
export declare function setTransformRateForAnimation(vehicle1: number | Vehicle, transformRate: number): void;
/**
 * When set to true, the key to transform a car to submarine mode changes from raise/lower convertible roof (hold H by default) to special vehicle transform (press X by default.)
 *
 * Hash: 0x41B9FB92EDED32A6 | Since: 1365
 * @deprecated Use vehicle.setTransformToSubmarineUsesAlternateInput(vehicle1, toggle) instead
 */
export declare function setTransformToSubmarineUsesAlternateInput(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Does nothing. It's a nullsub.
 *
 * Hash: 0x36DE109527A2C0C4 | Since: 1604
 * @deprecated Use vehicle.setCombatMode(toggle) instead
 */
export declare function setVehicleCombatMode(toggle: boolean): void;
/**
 * Does nothing. It's a nullsub.
 *
 * Hash: 0x82E0AC411E41A5B4 | Since: 1604
 * @deprecated Use vehicle.setDetonationMode(toggle) instead
 */
export declare function setVehicleDetonationMode(toggle: boolean): void;
/**
 * Does nothing. It's a nullsub.
 *
 * Hash: 0x99A05839C46CE316 | Since: 1604
 * @deprecated Use vehicle.setShuntOnStick(toggle) instead
 */
export declare function setVehicleShuntOnStick(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x71C6302CBCA6CA35 | Since: 3407
 * @deprecated Use vehicle.isOnBoostPad(vehicle1) instead
 */
export declare function isVehicleOnBoostPad(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xA2459F72C14E2E8D | Since: 1604
 * @deprecated Use vehicle.getIsShunting(vehicle1) instead
 */
export declare function getIsVehicleShunting(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xE8718FAF591FD224 | Since: 1604
 * @deprecated Use vehicle.getHasBeenHitByShunt(vehicle1) instead
 */
export declare function getHasVehicleBeenHitByShunt(vehicle1: number | Vehicle): boolean;
/**
 * Returns last vehicle that was rammed by the given vehicle using the shunt boost.
 *
 * Hash: 0x04F2FA6E234162F7 | Since: 1604
 * @deprecated Use vehicle.getLastShunt(vehicle1) instead
 */
export declare function getLastShuntVehicle(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x143921E45EC44D62 | Since: 1604
 * @deprecated Use vehicle.setDisableExplosionsDamage(toggle) instead
 */
export declare function setDisableVehicleExplosionsDamage(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xC8E9B6B71B8E660D | Since: 1604
 * @deprecated Use vehicle.setOverrideNitrousLevel(vehicle1, toggle, level, power, rechargeTime, disableSound) instead
 */
export declare function setOverrideNitrousLevel(vehicle1: number | Vehicle, toggle: boolean, level: number, power: number, rechargeTime: number, disableSound: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x465EEA70AF251045 | Since: 3095
 * @deprecated Use vehicle.setNitrousIsVisible(vehicle1, enabled) instead
 */
export declare function setNitrousIsVisible(vehicle1: number | Vehicle, enabled: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xAFD262ACCA64479A | Since: 3095
 * @deprecated Use vehicle.setOverrideTractionLossMultiplier(vehicle1, modifier) instead
 */
export declare function setOverrideTractionLossMultiplier(vehicle1: number | Vehicle, modifier: number): void;
/**
 * First two floats relate to rumble, the last is a threshold
 *
 * Hash: 0xDAF4C98C18AC6F06 | Since: 3095
 * @deprecated Use vehicle.setDriftSlipAngleLimits(vehicle1, durationScalar, amplitudeScalar, slipAngleLimit) instead
 */
export declare function setDriftSlipAngleLimits(vehicle1: number | Vehicle, durationScalar: number, amplitudeScalar: number, slipAngleLimit: number): void;
/**
 * No comment provided
 *
 * Hash: 0x16CFBC5E7EB32861 | Since: 3095
 * @deprecated Use vehicle.setMinimumTimeBetweenGearShifts(vehicle1, time) instead
 */
export declare function setMinimumTimeBetweenGearShifts(vehicle1: number | Vehicle, time: number): void;
/**
 * No comment provided
 *
 * Hash: 0x1A2BCC8C636F9226 | Since: 3095
 * @deprecated Use vehicle.fullyChargeNitrous(vehicle1) instead
 */
export declare function fullyChargeNitrous(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x1AD0F63A94E10EFF | Since: 3407
 * @deprecated Use vehicle.setRemainingNitrousDuration(vehicle1, duration) instead
 */
export declare function setRemainingNitrousDuration(vehicle1: number | Vehicle, duration: number): void;
/**
 * No comment provided
 *
 * Hash: 0xBEC4B8653462450E | Since: 3095
 * @deprecated Use vehicle.getRemainingNitrousDuration(vehicle1) instead
 */
export declare function getRemainingNitrousDuration(vehicle1: number | Vehicle): number;
/**
 * No comment provided
 *
 * Hash: 0x491E822B2C464FE4 | Since: 3095
 * @deprecated Use vehicle.isNitrousActive(vehicle1) instead
 */
export declare function isNitrousActive(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0xC889AE921400E1ED | Since: 3095
 * @deprecated Use vehicle.clearNitrous(vehicle1) instead
 */
export declare function clearNitrous(vehicle1: number | Vehicle): void;
/**
 * No comment provided
 *
 * Hash: 0x9E566EA551F4F1A6 | Since: 3407
 * @deprecated Use vehicle.setNitrousIsActive(vehicle1, toggle) instead
 */
export declare function setNitrousIsActive(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2970EAA18FD5E42F | Since: 1604
 * @deprecated Use vehicle.setIncreaseWheelCrushDamage(vehicle1, toggle) instead
 */
export declare function setIncreaseWheelCrushDamage(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Sets some global vehicle related bool
 *
 * Hash: 0x211E95CE9903940C | Since: 1604
 * @deprecated Use vehicle.setDisableWeaponBladeForces(toggle) instead
 */
export declare function setDisableWeaponBladeForces(toggle: boolean): void;
/**
 * Changes the car jump control to require a double-tap to activate.
 *
 * Hash: 0x5BBCF35BF6E456F7 | Since: 1604
 * @deprecated Use vehicle.setUseDoubleClickForCarJump(toggle) instead
 */
export declare function setUseDoubleClickForCarJump(toggle: boolean): void;
/**
 * Returns true only if the "tombstone" bone is attached to the vehicle, irrespective of "FLAG_HAS_TOMBSTONE" being present or not. Detaching the tombstone will return false.
 *
 * Hash: 0x71AFB258CCED3A27 | Since: 1604
 * @deprecated Use vehicle.getDoesHaveTombstone(vehicle1) instead
 */
export declare function getDoesVehicleHaveTombstone(vehicle1: number | Vehicle): boolean;
/**
 * Disables detachable bumber from domnator4, dominator5, dominator6, see https://gfycat.com/SecondUnluckyGosling
 *
 * Hash: 0xAE71FB656C600587 | Since: 1604
 * @deprecated Use vehicle.hideTombstone(vehicle1, toggle) instead
 */
export declare function hideTombstone(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x249249D74F813EB2 | Since: 3095
 * @deprecated Use vehicle.applyEmpEffect(vehicle1) instead
 */
export declare function applyEmpEffect(vehicle1: number | Vehicle): void;
/**
 * Returns whether this vehicle is currently disabled by an EMP mine.
 *
 * Hash: 0x0506ED94363AD905 | Since: 1604
 * @deprecated Use vehicle.getIsDisabledByEmp(vehicle1) instead
 */
export declare function getIsVehicleDisabledByEmp(vehicle1: number | Vehicle): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8F0D5BA1C2CC91D7 | Since: 1604
 * @deprecated Use vehicle.setDisableRetractingWeaponBlades(toggle) instead
 */
export declare function setDisableRetractingWeaponBlades(toggle: boolean): void;
/**
 * Usable wheels:
 * 0: wheel_lf
 * 1: wheel_rf
 * 2: wheel_lm1
 * 3: wheel_rm1
 * 4: wheel_lr
 * 5: wheel_rr
 *
 * Hash: 0x55EAB010FAEE9380 | Since: 1868
 * @deprecated Use vehicle.getTyreHealth(vehicle1, wheelIndex) instead
 */
export declare function getTyreHealth(vehicle1: number | Vehicle, wheelIndex: number): number;
/**
 * SET_TYRE_WEAR_RATE must be active, otherwise values set to <1000.0f will default to 350.0f
 *
 * Usable wheels:
 * 0: wheel_lf
 * 1: wheel_rf
 * 2: wheel_lm1
 * 3: wheel_rm1
 * 4: wheel_lr
 * 5: wheel_rr
 *
 * Hash: 0x74C68EF97645E79D | Since: 1868
 * @deprecated Use vehicle.setTyreHealth(vehicle1, wheelIndex, health) instead
 */
export declare function setTyreHealth(vehicle1: number | Vehicle, wheelIndex: number, health: number): void;
/**
 * Returns the multiplier value from SET_TYRE_WEAR_RATE
 *
 * Usable wheels:
 * 0: wheel_lf
 * 1: wheel_rf
 * 2: wheel_lm1
 * 3: wheel_rm1
 * 4: wheel_lr
 * 5: wheel_rr
 *
 * Hash: 0x6E387895952F4F71 | Since: 2060
 * @deprecated Use vehicle.getTyreWearRate(vehicle1, wheelIndex) instead
 */
export declare function getTyreWearRate(vehicle1: number | Vehicle, wheelIndex: number): number;
/**
 * Needs to be run for tire wear to work. Multiplier affects the downforce and how fast the tires will wear out, higher values essentially make the vehicle slower on straights and its tires will wear down quicker when cornering. Value must be >0f.
 * Default value in Rockstar's Open Wheel Race JSON's ("owrtws", "owrtwm", "owrtwh") is 1.0
 *
 * Usable wheels:
 * 0: wheel_lf
 * 1: wheel_rf
 * 2: wheel_lm1
 * 3: wheel_rm1
 * 4: wheel_lr
 * 5: wheel_rr
 *
 * Hash: 0x01894E2EDE923CA2 | Since: 1868
 * @deprecated Use vehicle.setTyreWearRate(vehicle1, wheelIndex, multiplier) instead
 */
export declare function setTyreWearRate(vehicle1: number | Vehicle, wheelIndex: number, multiplier: number): void;
/**
 * Controls how fast the tires wear out.
 *
 * Default values from Rockstar's Open Wheel Race JSON's:
 * "owrtss" (Soft): 2.2
 * "owrtsm" (Medium): 1.7
 * "owrtsh" (Hard): 1.2
 *
 * Usable wheels:
 * 0: wheel_lf
 * 1: wheel_rf
 * 2: wheel_lm1
 * 3: wheel_rm1
 * 4: wheel_lr
 * 5: wheel_rr
 *
 * Hash: 0x392183BB9EA57697 | Since: 2060
 * @deprecated Use vehicle.setTyreWearRateScale(vehicle1, wheelIndex, multiplier) instead
 */
export declare function setTyreWearRateScale(vehicle1: number | Vehicle, wheelIndex: number, multiplier: number): void;
/**
 * Controls how much traction the wheel loses.
 *
 * Default values from Rockstar's Open Wheel Race JSON's:
 * "owrtds" (Soft): 0.05
 * "owrtdm" (Medium): 0.45
 * "owrtdh" (Hard): 0.8
 *
 * Usable wheels:
 * 0: wheel_lf
 * 1: wheel_rf
 * 2: wheel_lm1
 * 3: wheel_rm1
 * 4: wheel_lr
 * 5: wheel_rr
 *
 * Hash: 0xC970D0E0FC31D768 | Since: 2060
 * @deprecated Use vehicle.setTyreMaximumGripDifferenceDueToWearRate(vehicle1, wheelIndex, multiplier) instead
 */
export declare function setTyreMaximumGripDifferenceDueToWearRate(vehicle1: number | Vehicle, wheelIndex: number, multiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0xF8B49F5BA7F850E7 | Since: 2060
 * @deprecated Use vehicle.setAircraftIgnoreHightmapOptimisation(vehicle1) instead
 */
export declare function setAircraftIgnoreHightmapOptimisation(vehicle1: number | Vehicle): void;
/**
 * Lowers the vehicle's stance. Only works for vehicles that have strAdvancedFlags 0x8000 and 0x4000000 set.
 *
 * Hash: 0x3A375167F5782A65 | Since: 2372
 * @deprecated Use vehicle.setReducedSuspensionForce(vehicle1, enable) instead
 */
export declare function setReducedSuspensionForce(vehicle1: number | Vehicle, enable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x5AC79C98C5C17F05 | Since: 2372
 * @deprecated Use vehicle.setDriftTyres(vehicle1, toggle) instead
 */
export declare function setDriftTyres(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x2F5A72430E78C8D3 | Since: 2372
 * @deprecated Use vehicle.getDriftTyresSet(vehicle1) instead
 */
export declare function getDriftTyresSet(vehicle1: number | Vehicle): boolean;
/**
 * Implemented only for trains.
 *
 * Hash: 0xEC0C1D4922AF9754 | Since: 2372
 * @deprecated Use vehicle.networkUseHighPrecisionTrainBlending(vehicle1, toggle) instead
 */
export declare function networkUseHighPrecisionTrainBlending(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * Only used in R* Script fm_content_cargo
 *
 * Hash: 0xEF9D388F8D377F44 | Since: 2699
 * @deprecated Use vehicle.setCheckForEnoughRoomForPed(vehicle1) instead
 */
export declare function setCheckForEnoughRoomForPed(vehicle1: number | Vehicle): void;
/**
 * _SET_ALLOW_R* - _SET_ALLOW_V*
 *
 * Hash: 0x27D27223E8EF22ED | Since: 3095
 * @deprecated Use vehicle.setAllowCollisionWhenIn(vehicle1, toggle) instead
 */
export declare function setAllowCollisionWhenInVehicle(vehicle1: number | Vehicle, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x6638C0F19DE692FE | Since: 3095
 * @deprecated Use vehicle.isGen9ExclusiveModel(vehicleModel) instead
 */
export declare function isVehicleGen9ExclusiveModel(vehicleModel: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x3EE18B00CD86C54F | Since: 3095
 * @deprecated Use vehicle.getMaxExhaustBoneCount() instead
 */
export declare function getVehicleMaxExhaustBoneCount(): number;
/**
 * No comment provided
 *
 * Hash: 0xE728F090D538CB18 | Since: 3095
 * @deprecated Use vehicle.getExhaustBone(vehicle1, index) instead
 */
export declare function getVehicleExhaustBone(vehicle1: number | Vehicle, index: number): [boolean, number, boolean];
/**
 * This function set height to the value of z-axis of the water surface.
 *
 * This function works with sea and lake. However it does not work with shallow rivers (e.g. raton canyon will return -100000.0f)
 *
 * note: seems to return true when you are in water
 *
 * Hash: 0xF6829842C06AE524 | Since: 323
 * @deprecated Use water.getHeight(pos) instead
 */
export declare function getWaterHeight(pos: Vector3): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x8EE6B53CE13A9794 | Since: 323
 * @deprecated Use water.getHeightNoWaves(pos) instead
 */
export declare function getWaterHeightNoWaves(pos: Vector3): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0xFFA5D878809819DB | Since: 323
 * @deprecated Use water.testProbeAgainst(x1, y1, z1, x2, y2, z2) instead
 */
export declare function testProbeAgainstWater(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): [boolean, Vector3];
/**
 * enum eScriptWaterTestResult
 * {
 * SCRIPT_WATER_TEST_RESULT_NONE,
 * SCRIPT_WATER_TEST_RESULT_WATER,
 * SCRIPT_WATER_TEST_RESULT_BLOCKED,
 * };
 *
 * Hash: 0x8974647ED222EA5F | Since: 323
 * @deprecated Use water.testProbeAgainstAll(x1, y1, z1, x2, y2, z2, flags) instead
 */
export declare function testProbeAgainstAllWater(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number): [number, number];
/**
 * See TEST_PROBE_AGAINST_ALL_WATER.
 *
 * Hash: 0x2B3451FA1E3142E2 | Since: 323
 * @deprecated Use water.testVerticalProbeAgainstAll(pos, flags) instead
 */
export declare function testVerticalProbeAgainstAllWater(pos: Vector3, flags: number): [number, number];
/**
 * Sets the water height for a given position and radius.
 *
 *
 * Hash: 0xC443FD757C3BA637 | Since: 323
 * @deprecated Use water.modify(x, y, radius, height) instead
 */
export declare function modifyWater(x: number, y: number, radius: number, height: number): void;
/**
 * No comment provided
 *
 * Hash: 0xFDBF4CDBC07E1706 | Since: 323
 * @deprecated Use water.addExtraCalmingQuad(xLow, yLow, xHigh, yHigh, height) instead
 */
export declare function addExtraCalmingQuad(xLow: number, yLow: number, xHigh: number, yHigh: number, height: number): number;
/**
 * p0 is the handle returned from ADD_EXTRA_CALMING_QUAD
 *
 * Hash: 0xB1252E3E59A82AAF | Since: 323
 * @deprecated Use water.removeExtraCalmingQuad(calmingQuad) instead
 */
export declare function removeExtraCalmingQuad(calmingQuad: number): void;
/**
 * Sets a value that determines how aggressive the ocean waves will be. Values of 2.0 or more make for very aggressive waves like you see during a thunderstorm.
 *
 * Works only ~200 meters around the player.
 *
 * Hash: 0xB96B00E976BE977F | Since: 323
 * @deprecated Use water.setDeepOceanScaler(intensity) instead
 */
export declare function setDeepOceanScaler(intensity: number): void;
/**
 * Gets the aggressiveness factor of the ocean waves.
 *
 * Hash: 0x2B2A2CC86778B619 | Since: 323
 * @deprecated Use water.getDeepOceanScaler() instead
 */
export declare function getDeepOceanScaler(): number;
/**
 * No comment provided
 *
 * Hash: 0x547237AA71AB44DE | Since: 573
 * @deprecated Use water.setCalmedWaveHeightScaler(height) instead
 */
export declare function setCalmedWaveHeightScaler(height: number): void;
/**
 * Sets the waves intensity back to original (1.0 in most cases).
 *
 * Hash: 0x5E5E99285AE812DB | Since: 323
 * @deprecated Use water.resetDeepOceanScaler() instead
 */
export declare function resetDeepOceanScaler(): void;
/**
 * Enables laser sight on any weapon.
 *
 * It doesn't work. Neither on tick nor OnKeyDown
 *
 * Hash: 0xC8B46D7727D864AA | Since: 323
 * @deprecated Use weapon.enableLaserSightRendering(toggle) instead
 */
export declare function enableLaserSightRendering(toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x0DB57B41EC1DB083 | Since: 323
 * @deprecated Use weapon.getComponentTypeModel(componentHash) instead
 */
export declare function getWeaponComponentTypeModel(componentHash: number | string): number;
/**
 * Returns the model of any weapon.
 *
 * Can also take an ammo hash?
 * `sub_6663a(&l_115B, WEAPON::GET_WEAPONTYPE_MODEL(${ammo_rpg}));`
 *
 * Hash: 0xF46CDC33180FDA94 | Since: 323
 * @deprecated Use weapon.gettypeModel(weaponHash) instead
 */
export declare function getWeapontypeModel(weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x4215460B9B8B7FA0 | Since: 323
 * @deprecated Use weapon.gettypeSlot(weaponHash) instead
 */
export declare function getWeapontypeSlot(weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xC3287EE3050FB74C | Since: 323
 * @deprecated Use weapon.gettypeGroup(weaponHash) instead
 */
export declare function getWeapontypeGroup(weaponHash: number | string): number;
/**
 * Returns the amount of extra components the specified component has.
 * Returns -1 if the component isn't of type CWeaponComponentVariantModel.
 *
 * Hash: 0x6558AC7C17BFEF58 | Since: 372
 * @deprecated Use weapon.getComponentVariantExtraCount(componentHash) instead
 */
export declare function getWeaponComponentVariantExtraCount(componentHash: number | string): number;
/**
 * Returns the model hash of the extra component at specified index.
 *
 * Hash: 0x4D1CB8DC40208A17 | Since: 372
 * @deprecated Use weapon.getComponentVariantExtraModel(componentHash, extraComponentIndex) instead
 */
export declare function getWeaponComponentVariantExtraModel(componentHash: number | string, extraComponentIndex: number): number;
/**
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0xADF692B254977C0C | Since: 323
 * @deprecated Use weapon.setCurrentPed(ped, weaponHash, bForceInHand) instead
 */
export declare function setCurrentPedWeapon(ped: number | Ped, weaponHash: number | string, bForceInHand: boolean): void;
/**
 * The return value seems to indicate returns true if the hash of the weapon object weapon equals the weapon hash.
 * p2 seems to be 1 most of the time.
 *
 *
 *
 *
 *
 * p2 is not implemented
 *
 * disassembly said that?
 *
 *
 * Hash: 0x3A87E44BB9A01D54 | Since: 323
 * @deprecated Use weapon.getCurrentPed(ped) instead
 */
export declare function getCurrentPedWeapon(ped: number | Ped): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x3B390A939AF0B5FC | Since: 323
 * @deprecated Use weapon.getCurrentPedEntityIndex(ped) instead
 */
export declare function getCurrentPedWeaponEntityIndex(ped: number | Ped): number;
/**
 * p1 is always 0 in the scripts.
 *
 * Hash: 0x8483E98E8B888AE2 | Since: 323
 * @deprecated Use weapon.getBestPed(ped) instead
 */
export declare function getBestPedWeapon(ped: number | Ped): number;
/**
 * Full list of weapons by DurtyFree (Search for VEHICLE_*): https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x75C55983C2C39DAA | Since: 323
 * @deprecated Use weapon.setCurrentPedVehicle(ped, weaponHash) instead
 */
export declare function setCurrentPedVehicleWeapon(ped: number | Ped, weaponHash: number | string): boolean;
/**
 * Example in VB
 *
 * Public Shared Function GetVehicleCurrentWeapon(Ped As Ped) As Integer
 * Dim arg As New OutputArgument()
 * Native.Function.Call(Hash.GET_CURRENT_PED_VEHICLE_WEAPON, Ped, arg)
 * Return arg.GetResult(Of Integer)()
 * End Function
 *
 * Usage:
 * If GetVehicleCurrentWeapon(Game.Player.Character) = -821520672 Then ...Do something
 * Note: -821520672 = VEHICLE_WEAPON_PLANE_ROCKET
 *
 * Hash: 0x1017582BCD3832DC | Since: 323
 * @deprecated Use weapon.getCurrentPedVehicle(ped) instead
 */
export declare function getCurrentPedVehicleWeapon(ped: number | Ped): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x50276EF8172F5F12 | Since: 1734
 * @deprecated Use weapon.setPedCycleVehiclesOnly(ped) instead
 */
export declare function setPedCycleVehicleWeaponsOnly(ped: number | Ped): void;
/**
 * Checks if the ped is currently equipped with a weapon matching a bit specified using a bitwise-or in typeFlags.
 *
 * Type flag bit values:
 * 1 = Melee weapons
 * 2 = Explosive weapons
 * 4 = Any other weapons
 *
 * Not specifying any bit will lead to the native *always* returning 'false', and for example specifying '4 | 2' will check for any weapon except fists and melee weapons.
 * 7 returns true if you are equipped with any weapon except your fists.
 * 6 returns true if you are equipped with any weapon except melee weapons.
 * 5 returns true if you are equipped with any weapon except the Explosives weapon group.
 * 4 returns true if you are equipped with any weapon except Explosives weapon group AND melee weapons.
 * 3 returns true if you are equipped with either Explosives or Melee weapons (the exact opposite of 4).
 * 2 returns true only if you are equipped with any weapon from the Explosives weapon group.
 * 1 returns true only if you are equipped with any Melee weapon.
 * 0 never returns true.
 *
 * Note: When I say "Explosives weapon group", it does not include the Jerry can and Fire Extinguisher.
 *
 * Hash: 0x475768A975D5AD17 | Since: 323
 * @deprecated Use weapon.isPedArmed(ped, typeFlags) instead
 */
export declare function isPedArmed(ped: number | Ped, typeFlags: number): boolean;
/**
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x937C71165CF334B3 | Since: 323
 * @deprecated Use weapon.isValid(weaponHash) instead
 */
export declare function isWeaponValid(weaponHash: number | string): boolean;
/**
 * p2 should be FALSE, otherwise it seems to always return FALSE
 *
 * Bool does not check if the weapon is current equipped, unfortunately.
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x8DECB02F88F428BC | Since: 323
 * @deprecated Use weapon.hasPedGot(ped, weaponHash) instead
 */
export declare function hasPedGotWeapon(ped: number | Ped, weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB80CA294F2F26749 | Since: 323
 * @deprecated Use weapon.isPedReadyToShoot(ped) instead
 */
export declare function isPedWeaponReadyToShoot(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xEFFED78E9011134D | Since: 323
 * @deprecated Use weapon.getPedtypeInSlot(ped, weaponSlot) instead
 */
export declare function getPedWeapontypeInSlot(ped: number | Ped, weaponSlot: number | string): number;
/**
 * `WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0)`
 *
 * From decompiled scripts
 * Returns total ammo in weapon
 *
 * GTALua Example :
 * natives.WEAPON.GET_AMMO_IN_PED_WEAPON(plyPed, WeaponHash)
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x015A522136D7F951 | Since: 323
 * @deprecated Use weapon.getAmmoInPed(ped, weaponhash) instead
 */
export declare function getAmmoInPedWeapon(ped: number | Ped, weaponhash: number | string): number;
/**
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x78F0424C34306220 | Since: 323
 * @deprecated Use weapon.addAmmoToPed(ped, weaponHash, ammo) instead
 */
export declare function addAmmoToPed(ped: number | Ped, weaponHash: number | string, ammo: number): void;
/**
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x14E56BC5B5DB6A19 | Since: 323
 * @deprecated Use weapon.setPedAmmo(ped, weaponHash, ammo) instead
 */
export declare function setPedAmmo(ped: number | Ped, weaponHash: number | string, ammo: number): void;
/**
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x3EDCB0505123623B | Since: 323
 * @deprecated Use weapon.setPedInfiniteAmmo(ped, toggle, weaponHash) instead
 */
export declare function setPedInfiniteAmmo(ped: number | Ped, toggle: boolean, weaponHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x183DADC6AA953186 | Since: 323
 * @deprecated Use weapon.setPedInfiniteAmmoClip(ped, toggle) instead
 */
export declare function setPedInfiniteAmmoClip(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x24C024BA8379A70A | Since: 1868
 * @deprecated Use weapon.setPedStunGunFiniteAmmo() instead
 */
export declare function setPedStunGunFiniteAmmo(): void;
/**
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0xBF0FD6E56C964FCB | Since: 323
 * @deprecated Use weapon.giveToPed(ped, weaponHash, ammoCount, isHidden, bForceInHand) instead
 */
export declare function giveWeaponToPed(ped: number | Ped, weaponHash: number | string, ammoCount: number, isHidden: boolean, bForceInHand: boolean): void;
/**
 * Gives a weapon to PED with a delay, example:
 *
 * `WEAPON::GIVE_DELAYED_WEAPON_TO_PED(PED::PLAYER_PED_ID(), MISC::GET_HASH_KEY("WEAPON_PISTOL"), 1000, false)`
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0xB282DC6EBD803C75 | Since: 323
 * @deprecated Use weapon.giveDelayedToPed(ped, weaponHash, ammoCount, bForceInHand) instead
 */
export declare function giveDelayedWeaponToPed(ped: number | Ped, weaponHash: number | string, ammoCount: number, bForceInHand: boolean): void;
/**
 * setting the last params to false it does that same so I would suggest its not a toggle
 *
 * Hash: 0xF25DF915FA38C5F3 | Since: 323
 * @deprecated Use weapon.removeAllPeds(ped) instead
 */
export declare function removeAllPedWeapons(ped: number | Ped): void;
/**
 * This native removes a specified weapon from your selected ped.
 *
 * Example:
 * C#:
 * Function.Call(Hash.REMOVE_WEAPON_FROM_PED, Game.Player.Character, 0x99B507EA);
 *
 * C++:
 * `WEAPON::REMOVE_WEAPON_FROM_PED(PLAYER::PLAYER_PED_ID(), 0x99B507EA);`
 *
 * The code above removes the knife from the player.
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x4899CB088EDF59B8 | Since: 323
 * @deprecated Use weapon.removeFromPed(ped, weaponHash) instead
 */
export declare function removeWeaponFromPed(ped: number | Ped, weaponHash: number | string): void;
/**
 * Hides the players weapon during a cutscene.
 *
 * Hash: 0x6F6981D2253C208F | Since: 323
 * @deprecated Use weapon.hidePedForScriptedCutscene(ped, toggle) instead
 */
export declare function hidePedWeaponForScriptedCutscene(ped: number | Ped, toggle: boolean): void;
/**
 * Has 5 parameters since latest patches.
 *
 * Hash: 0x0725A4CCFDED9A70 | Since: 323
 * @deprecated Use weapon.setPedCurrentVisible(ped, visible, deselectWeapon) instead
 */
export declare function setPedCurrentWeaponVisible(ped: number | Ped, visible: boolean, deselectWeapon: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x476AE72C1D19D1A8 | Since: 323
 * @deprecated Use weapon.setPedDropssWhenDead(ped, toggle) instead
 */
export declare function setPedDropsWeaponsWhenDead(ped: number | Ped, toggle: boolean): void;
/**
 * It determines what weapons caused damage:
 *
 * If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
 * If you want to define any melee weapon, second parameter=0, third parameter=1.
 * If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x2D343D2219CD027A | Since: 323
 * @deprecated Use weapon.hasPedBeenDamagedBy(ped, weaponHash, weaponType) instead
 */
export declare function hasPedBeenDamagedByWeapon(ped: number | Ped, weaponHash: number | string, weaponType: number): boolean;
/**
 * Does NOT seem to work with HAS_PED_BEEN_DAMAGED_BY_WEAPON. Use CLEAR_ENTITY_LAST_WEAPON_DAMAGE and HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON instead.
 *
 * Hash: 0x0E98F88A24C5F4B8 | Since: 323
 * @deprecated Use weapon.clearPedLastDamage(ped) instead
 */
export declare function clearPedLastWeaponDamage(ped: number | Ped): void;
/**
 * It determines what weapons caused damage:
 *
 * If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
 * If you want to define any melee weapon, second parameter=0, third parameter=1.
 * If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x131D401334815E94 | Since: 323
 * @deprecated Use weapon.hasEntityBeenDamagedBy(entity, weaponHash, weaponType) instead
 */
export declare function hasEntityBeenDamagedByWeapon(entity: number | Entity, weaponHash: number | string, weaponType: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAC678E40BE7C74D2 | Since: 323
 * @deprecated Use weapon.clearEntityLastDamage(entity) instead
 */
export declare function clearEntityLastWeaponDamage(entity: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x6B7513D9966FBEC0 | Since: 323
 * @deprecated Use weapon.setPedDrops(ped) instead
 */
export declare function setPedDropsWeapon(ped: number | Ped): void;
/**
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x208A1888007FC0E6 | Since: 323
 * @deprecated Use weapon.setPedDropsInventory(ped, weaponHash, xOffset, yOffset, zOffset, ammoCount) instead
 */
export declare function setPedDropsInventoryWeapon(ped: number | Ped, weaponHash: number | string, xOffset: number, yOffset: number, zOffset: number, ammoCount: number): void;
/**
 * p2 is mostly 1 in the scripts.
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0xA38DCFFCEA8962FA | Since: 323
 * @deprecated Use weapon.getMaxAmmoInClip(ped, weaponHash) instead
 */
export declare function getMaxAmmoInClip(ped: number | Ped, weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xC8C6F4B1CDEB40EF | Since: 3407
 * @deprecated Use weapon.getTimeBeforeVehicleReloadFinishes(vehicle, seat) instead
 */
export declare function getTimeBeforeVehicleWeaponReloadFinishes(vehicle: number | Vehicle, seat: number): number;
/**
 * No comment provided
 *
 * Hash: 0x8062F07153F4446F | Since: 3407
 * @deprecated Use weapon.hasReloadingInVehicle(vehicle, seat) instead
 */
export declare function hasWeaponReloadingInVehicle(vehicle: number | Vehicle, seat: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0xD0AD348FFD7A6868 | Since: 3407
 * @deprecated Use weapon.getVehicleReloadTime(vehicle, seat) instead
 */
export declare function getVehicleWeaponReloadTime(vehicle: number | Vehicle, seat: number): number;
/**
 * No comment provided
 *
 * Hash: 0x2857938C5D407AFA | Since: 3407
 * @deprecated Use weapon.getAmmoInVehicleClip(vehicle, seat) instead
 */
export declare function getAmmoInVehicleWeaponClip(vehicle: number | Vehicle, seat: number): [boolean, number];
/**
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x2E1202248937775C | Since: 323
 * @deprecated Use weapon.getAmmoInClip(ped, weaponHash) instead
 */
export declare function getAmmoInClip(ped: number | Ped, weaponHash: number | string): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x873906720EE842C3 | Since: 3407
 * @deprecated Use weapon.setAmmoInVehicleClip(vehicle, seat, ammo) instead
 */
export declare function setAmmoInVehicleWeaponClip(vehicle: number | Vehicle, seat: number, ammo: number): boolean;
/**
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0xDCD2A934D65CB497 | Since: 323
 * @deprecated Use weapon.setAmmoInClip(ped, weaponHash, ammo) instead
 */
export declare function setAmmoInClip(ped: number | Ped, weaponHash: number | string, ammo: number): boolean;
/**
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0xDC16122C7A20C933 | Since: 323
 * @deprecated Use weapon.getMaxAmmo(ped, weaponHash) instead
 */
export declare function getMaxAmmo(ped: number | Ped, weaponHash: number | string): [boolean, number];
/**
 * Returns the max ammo for an ammo type. Ammo types: https://gist.github.com/root-cause/faf41f59f7a6d818b7db0b839bd147c1
 *
 * Hash: 0x585847C5E4E11709 | Since: 1103
 * @deprecated Use weapon.getMaxAmmoByType(ped, ammoTypeHash) instead
 */
export declare function getMaxAmmoByType(ped: number | Ped, ammoTypeHash: number | string): [boolean, number];
/**
 * Ammo types: https://gist.github.com/root-cause/faf41f59f7a6d818b7db0b839bd147c1
 *
 * Hash: 0x2472622CE1F2D45F | Since: 1103
 * @deprecated Use weapon.addPedAmmoByType(ped, ammoTypeHash, ammo) instead
 */
export declare function addPedAmmoByType(ped: number | Ped, ammoTypeHash: number | string, ammo: number): void;
/**
 * Ammo types: https://gist.github.com/root-cause/faf41f59f7a6d818b7db0b839bd147c1
 *
 * Hash: 0x5FD1E1F011E76D7E | Since: 323
 * @deprecated Use weapon.setPedAmmoByType(ped, ammoTypeHash, ammo) instead
 */
export declare function setPedAmmoByType(ped: number | Ped, ammoTypeHash: number | string, ammo: number): void;
/**
 * No comment provided
 *
 * Hash: 0x39D22031557946C1 | Since: 323
 * @deprecated Use weapon.getPedAmmoByType(ped, ammoTypeHash) instead
 */
export declare function getPedAmmoByType(ped: number | Ped, ammoTypeHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xA4EFEF9440A5B0EF | Since: 323
 * @deprecated Use weapon.setPedAmmoToDrop(ped) instead
 */
export declare function setPedAmmoToDrop(ped: number | Ped): void;
/**
 * No comment provided
 *
 * Hash: 0xE620FD3512A04F18 | Since: 323
 * @deprecated Use weapon.setPickupAmmoAmountScaler() instead
 */
export declare function setPickupAmmoAmountScaler(): void;
/**
 * Returns the current ammo type of the specified ped's specified weapon.
 * MkII magazines will change the return value, like Pistol MkII returning AMMO_PISTOL without any components and returning AMMO_PISTOL_TRACER after Tracer Rounds component is attached.
 * Use 0xF489B44DD5AF4BD9 if you always want AMMO_PISTOL.
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x7FEAD38B326B9F74 | Since: 323
 * @deprecated Use weapon.getPedAmmoTypeFrom(ped, weaponHash) instead
 */
export declare function getPedAmmoTypeFromWeapon(ped: number | Ped, weaponHash: number | string): number;
/**
 * Returns the base/default ammo type of the specified ped's specified weapon.
 * Use GET_PED_AMMO_TYPE_FROM_WEAPON if you want current ammo type (like AMMO_MG_INCENDIARY/AMMO_MG_TRACER while using MkII magazines) and use this if you want base ammo type. (AMMO_MG)
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0xF489B44DD5AF4BD9 | Since: 1103
 * @deprecated Use weapon.getPedOriginalAmmoTypeFrom(ped, weaponHash) instead
 */
export declare function getPedOriginalAmmoTypeFromWeapon(ped: number | Ped, weaponHash: number | string): number;
/**
 * Pass ped. Pass address of Vector3.
 * The coord will be put into the Vector3.
 * The return will determine whether there was a coord found or not.
 *
 * Hash: 0x6C4D0409BA1A2BC2 | Since: 323
 * @deprecated Use weapon.getPedLastImpactCoord(ped) instead
 */
export declare function getPedLastWeaponImpactCoord(ped: number | Ped): [boolean, Vector3];
/**
 * p1/gadgetHash was always 0xFBAB5776 ("GADGET_PARACHUTE").
 * p2 is always true.
 *
 * Hash: 0xD0D7B1E680ED4A1A | Since: 323
 * @deprecated Use weapon.setPedGadget(ped, gadgetHash) instead
 */
export declare function setPedGadget(ped: number | Ped, gadgetHash: number | string): void;
/**
 * gadgetHash - was always 0xFBAB5776 ("GADGET_PARACHUTE").
 *
 * Hash: 0xF731332072F5156C | Since: 323
 * @deprecated Use weapon.getIsPedGadgetEquipped(ped, gadgetHash) instead
 */
export declare function getIsPedGadgetEquipped(ped: number | Ped, gadgetHash: number | string): boolean;
/**
 * Returns the hash of the weapon.
 *
 * `var num7 = WEAPON::GET_SELECTED_PED_WEAPON(num4);`
 * sub_27D3(num7);
 * switch (num7)
 * {
 * case 0x24B17070:
 *
 * `Also see WEAPON::GET_CURRENT_PED_WEAPON. Difference?`
 *
 * -------------------------------------------------------------------------
 *
 * The difference is that GET_SELECTED_PED_WEAPON simply returns the ped's current weapon hash but GET_CURRENT_PED_WEAPON also checks the weapon object and returns true if the hash of the weapon object equals the weapon hash
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x0A6DB4965674D243 | Since: 323
 * @deprecated Use weapon.getSelectedPed(ped) instead
 */
export declare function getSelectedPedWeapon(ped: number | Ped): number;
/**
 * `WEAPON::EXPLODE_PROJECTILES(PLAYER::PLAYER_PED_ID(), func_221(0x00000003), 0x00000001);`
 *
 * Hash: 0xFC4BD125DE7611E4 | Since: 323
 * @deprecated Use weapon.explodeProjectiles(ped, weaponHash) instead
 */
export declare function explodeProjectiles(ped: number | Ped, weaponHash: number | string): void;
/**
 * If `explode` true, then removal is done through exploding the projectile. Basically the same as EXPLODE_PROJECTILES but without defining the owner ped.
 *
 * Hash: 0xFC52E0F37E446528 | Since: 323
 * @deprecated Use weapon.removeAllProjectilesOfType(weaponHash, explode) instead
 */
export declare function removeAllProjectilesOfType(weaponHash: number | string, explode: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x840F03E9041E2C9C | Since: 323
 * @deprecated Use weapon.getLockonDistanceOfCurrentPed(ped) instead
 */
export declare function getLockonDistanceOfCurrentPedWeapon(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x814C9D19DFD69679 | Since: 323
 * @deprecated Use weapon.getMaxRangeOfCurrentPed(ped) instead
 */
export declare function getMaxRangeOfCurrentPedWeapon(ped: number | Ped): number;
/**
 * Fourth Parameter = unsure, almost always -1
 *
 * Hash: 0x717C8481234E3B88 | Since: 323
 * @deprecated Use weapon.hasVehicleGotProjectileAttached(driver, vehicle, weaponHash) instead
 */
export declare function hasVehicleGotProjectileAttached(driver: number | Ped, vehicle: number | Vehicle, weaponHash: number | string): boolean;
/**
 * Full list of weapons & components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0xD966D51AA5B28BB9 | Since: 323
 * @deprecated Use weapon.giveComponentToPed(ped, weaponHash, componentHash) instead
 */
export declare function giveWeaponComponentToPed(ped: number | Ped, weaponHash: number | string, componentHash: number | string): void;
/**
 * Full list of weapons & components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x1E8BE90C74FB4C09 | Since: 323
 * @deprecated Use weapon.removeComponentFromPed(ped, weaponHash, componentHash) instead
 */
export declare function removeWeaponComponentFromPed(ped: number | Ped, weaponHash: number | string, componentHash: number | string): void;
/**
 * Full list of weapons & components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0xC593212475FAE340 | Since: 323
 * @deprecated Use weapon.hasPedGotComponent(ped, weaponHash, componentHash) instead
 */
export declare function hasPedGotWeaponComponent(ped: number | Ped, weaponHash: number | string, componentHash: number | string): boolean;
/**
 * Full list of weapons & components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x0D78DE0572D3969E | Since: 323
 * @deprecated Use weapon.isPedComponentActive(ped, weaponHash, componentHash) instead
 */
export declare function isPedWeaponComponentActive(ped: number | Ped, weaponHash: number | string, componentHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0x8C0D57EA686FAD87 | Since: 323
 * @deprecated Use weapon.refillAmmoInstantly(ped) instead
 */
export declare function refillAmmoInstantly(ped: number | Ped): boolean;
/**
 * Forces a ped to reload only if they are able to; if they have a full magazine, they will not reload.
 *
 * Hash: 0x20AE33F3AC9C0033 | Since: 323
 * @deprecated Use weapon.makePedReload(ped) instead
 */
export declare function makePedReload(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x5B1513F27F279A44 | Since: 3407
 * @deprecated Use weapon.triggerVehicleReload(vehicle, seat, ped) instead
 */
export declare function triggerVehicleWeaponReload(vehicle: number | Vehicle, seat: number, ped: number | Ped): boolean;
/**
 * Nearly every instance of p1 I found was 31. Nearly every instance of p2 I found was 0.
 *
 * REQUEST_WEAPON_ASSET(iLocal_1888, 31, 26);
 *
 * Hash: 0x5443438F033E29C3 | Since: 323
 * @deprecated Use weapon.requestAsset(weaponHash) instead
 */
export declare function requestWeaponAsset(weaponHash: number | string): void;
/**
 * No comment provided
 *
 * Hash: 0x36E353271F0E90EE | Since: 323
 * @deprecated Use weapon.hasAssetLoaded(weaponHash) instead
 */
export declare function hasWeaponAssetLoaded(weaponHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xAA08EF13F341C8FC | Since: 323
 * @deprecated Use weapon.removeAsset(weaponHash) instead
 */
export declare function removeWeaponAsset(weaponHash: number | string): void;
/**
 * Now has 8 params.
 *
 * Hash: 0x9541D3CF0D398F36 | Since: 323
 * @deprecated Use weapon.createObject(weaponHash, ammoCount, pos, showWorldModel, scale) instead
 */
export declare function createWeaponObject(weaponHash: number | string, ammoCount: number, pos: Vector3, showWorldModel: boolean, scale: number): number;
/**
 * componentHash:
 * `(use WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL() to get hash value)`
 * ${component_at_ar_flsh}, ${component_at_ar_supp}, ${component_at_pi_flsh}, ${component_at_scope_large}, ${component_at_ar_supp_02}
 *
 * Hash: 0x33E179436C0B31DB | Since: 323
 * @deprecated Use weapon.giveComponentToWeaponObject(weaponObject, componentHash) instead
 */
export declare function giveWeaponComponentToWeaponObject(weaponObject: number | Object, componentHash: number | string): void;
/**
 * see DOES_WEAPON_TAKE_WEAPON_COMPONENT for full list of weapons & components
 *
 * Hash: 0xF7D82B0D66777611 | Since: 323
 * @deprecated Use weapon.removeComponentFromWeaponObject(_object, componentHash) instead
 */
export declare function removeWeaponComponentFromWeaponObject(_object: number | Object, componentHash: number | string): void;
/**
 * see DOES_WEAPON_TAKE_WEAPON_COMPONENT for full list of weapons & components
 *
 * Hash: 0x76A18844E743BF91 | Since: 323
 * @deprecated Use weapon.hasGotWeaponComponent(weapon1, componentHash) instead
 */
export declare function hasWeaponGotWeaponComponent(weapon1: number | Object, componentHash: number | string): boolean;
/**
 * No comment provided
 *
 * Hash: 0xB1FA61371AF7C4B7 | Since: 323
 * @deprecated Use weapon.giveObjectToPed(weaponObject, ped) instead
 */
export declare function giveWeaponObjectToPed(weaponObject: number | Object, ped: number | Ped): void;
/**
 * Full list of weapons & components by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x5CEE3DF569CECAB0 | Since: 323
 * @deprecated Use weapon.doesTakeWeaponComponent(weaponHash, componentHash) instead
 */
export declare function doesWeaponTakeWeaponComponent(weaponHash: number | string, componentHash: number | string): boolean;
/**
 * Drops the current weapon and returns the object
 *
 * Unknown behavior when unarmed.
 *
 * Hash: 0xCAE1DC9A0E22A16D | Since: 323
 * @deprecated Use weapon.getObjectFromPed(ped) instead
 */
export declare function getWeaponObjectFromPed(ped: number | Ped): number;
/**
 * Gives the specified loadout to the specified ped.
 * Loadouts are defined in common.rpf\data\ai\loadouts.meta
 *
 * Hash: 0x68F8BE6AF5CDF8A6 | Since: 505
 * @deprecated Use weapon.giveLoadoutToPed(ped, loadoutHash) instead
 */
export declare function giveLoadoutToPed(ped: number | Ped, loadoutHash: number | string): void;
/**
 * tintIndex can be the following:
 *
 * 0 - Normal
 * 1 - Green
 * 2 - Gold
 * 3 - Pink
 * 4 - Army
 * 5 - LSPD
 * 6 - Orange
 * 7 - Platinum
 * Full list of weapons, components & tint indexes by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x50969B9B89ED5738 | Since: 323
 * @deprecated Use weapon.setPedTintIndex(ped, weaponHash, tintIndex) instead
 */
export declare function setPedWeaponTintIndex(ped: number | Ped, weaponHash: number | string, tintIndex: number): void;
/**
 * Full list of weapons, components & tint indexes by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x2B9EEDC07BD06B9F | Since: 323
 * @deprecated Use weapon.getPedTintIndex(ped, weaponHash) instead
 */
export declare function getPedWeaponTintIndex(ped: number | Ped, weaponHash: number | string): number;
/**
 * Full list of weapons, components & tint indexes by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0xF827589017D4E4A9 | Since: 323
 * @deprecated Use weapon.setObjectTintIndex(weapon1, tintIndex) instead
 */
export declare function setWeaponObjectTintIndex(weapon1: number | Object, tintIndex: number): void;
/**
 * No comment provided
 *
 * Hash: 0xCD183314F7CD2E57 | Since: 323
 * @deprecated Use weapon.getObjectTintIndex(weapon1) instead
 */
export declare function getWeaponObjectTintIndex(weapon1: number | Object): number;
/**
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x5DCF6C5CAB2E9BF7 | Since: 323
 * @deprecated Use weapon.getTintCount(weaponHash) instead
 */
export declare function getWeaponTintCount(weaponHash: number | string): number;
/**
 * Colors:
 * 0 = Gray
 * 1 = Dark Gray
 * 2 = Black
 * 3 = White
 * 4 = Blue
 * 5 = Cyan
 * 6 = Aqua
 * 7 = Cool Blue
 * 8 = Dark Blue
 * 9 = Royal Blue
 * 10 = Plum
 * 11 = Dark Purple
 * 12 = Purple
 * 13 = Red
 * 14 = Wine Red
 * 15 = Magenta
 * 16 = Pink
 * 17 = Salmon
 * 18 = Hot Pink
 * 19 = Rust Orange
 * 20 = Brown
 * 21 = Earth
 * 22 = Orange
 * 23 = Light Orange
 * 24 = Dark Yellow
 * 25 = Yellow
 * 26 = Light Brown
 * 27 = Lime Green
 * 28 = Olive
 * 29 = Moss
 * 30 = Turquoise
 * 31 = Dark Green
 * Full list of weapons, components, tint indexes & weapon liveries by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x9FE5633880ECD8ED | Since: 1103
 * @deprecated Use weapon.setPedComponentTintIndex(ped, weaponHash, camoComponentHash, colorIndex) instead
 */
export declare function setPedWeaponComponentTintIndex(ped: number | Ped, weaponHash: number | string, camoComponentHash: number | string, colorIndex: number): void;
/**
 * Returns -1 if camoComponentHash is invalid/not attached to the weapon.
 * Full list of weapons, components, tint indexes & weapon liveries by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0xF0A60040BE558F2D | Since: 1103
 * @deprecated Use weapon.getPedComponentTintIndex(ped, weaponHash, camoComponentHash) instead
 */
export declare function getPedWeaponComponentTintIndex(ped: number | Ped, weaponHash: number | string, camoComponentHash: number | string): number;
/**
 * Colors:
 * 0 = Gray
 * 1 = Dark Gray
 * 2 = Black
 * 3 = White
 * 4 = Blue
 * 5 = Cyan
 * 6 = Aqua
 * 7 = Cool Blue
 * 8 = Dark Blue
 * 9 = Royal Blue
 * 10 = Plum
 * 11 = Dark Purple
 * 12 = Purple
 * 13 = Red
 * 14 = Wine Red
 * 15 = Magenta
 * 16 = Pink
 * 17 = Salmon
 * 18 = Hot Pink
 * 19 = Rust Orange
 * 20 = Brown
 * 21 = Earth
 * 22 = Orange
 * 23 = Light Orange
 * 24 = Dark Yellow
 * 25 = Yellow
 * 26 = Light Brown
 * 27 = Lime Green
 * 28 = Olive
 * 29 = Moss
 * 30 = Turquoise
 * 31 = Dark Green
 * Full list of weapons, components, tint indexes & weapon liveries by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x5DA825A85D0EA6E6 | Since: 1103
 * @deprecated Use weapon.setObjectComponentTintIndex(weaponObject, camoComponentHash, colorIndex) instead
 */
export declare function setWeaponObjectComponentTintIndex(weaponObject: number | Object, camoComponentHash: number | string, colorIndex: number): void;
/**
 * Returns -1 if camoComponentHash is invalid/not attached to the weapon object.
 * Full list of weapons, components, tint indexes & weapon liveries by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0xB3EA4FEABF41464B | Since: 1103
 * @deprecated Use weapon.getObjectComponentTintIndex(weaponObject, camoComponentHash) instead
 */
export declare function getWeaponObjectComponentTintIndex(weaponObject: number | Object, camoComponentHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xA2C9AC24B4061285 | Since: 1103
 * @deprecated Use weapon.getPedCamoIndex(ped, weaponHash) instead
 */
export declare function getPedWeaponCamoIndex(ped: number | Ped, weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x977CA98939E82E4B | Since: 1103
 * @deprecated Use weapon.setObjectCamoIndex(weaponObject) instead
 */
export declare function setWeaponObjectCamoIndex(weaponObject: number | Object): void;
/**
 * struct WeaponHudStatsData
 * {
 * BYTE hudDamage; // 0x0000
 * char _0x0001[0x7]; // 0x0001
 * BYTE hudSpeed; // 0x0008
 * char _0x0009[0x7]; // 0x0009
 * BYTE hudCapacity; // 0x0010
 * char _0x0011[0x7]; // 0x0011
 * BYTE hudAccuracy; // 0x0018
 * char _0x0019[0x7]; // 0x0019
 * BYTE hudRange; // 0x0020
 * };
 *
 * Usage:
 *
 * WeaponHudStatsData data;
 * if (GET_WEAPON_HUD_STATS(weaponHash, (int *)&data))
 * {
 * // BYTE damagePercentage = data.hudDamage and so on
 * }
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0xD92C739EE34C9EBA | Since: 323
 * @deprecated Use weapon.getHudStats(weaponHash) instead
 */
export declare function getWeaponHudStats(weaponHash: number | string): [boolean, any];
/**
 * No comment provided
 *
 * Hash: 0xB3CAF387AE12E9F8 | Since: 323
 * @deprecated Use weapon.getComponentHudStats(componentHash) instead
 */
export declare function getWeaponComponentHudStats(componentHash: number | string): [boolean, any];
/**
 * This native does not return damages of weapons from the melee and explosive group.
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x3133B907D8B32053 | Since: 323
 * @deprecated Use weapon.getDamage(weaponHash, componentHash) instead
 */
export declare function getWeaponDamage(weaponHash: number | string, componentHash: number | string): number;
/**
 * // Returns the size of the default weapon component clip.
 *
 * Use it like this:
 *
 * char cClipSize[32];
 * Hash cur;
 * `if (WEAPON::GET_CURRENT_PED_WEAPON(playerPed, &cur, 1))`
 * {
 * `if (WEAPON::IS_WEAPON_VALID(cur))`
 * {
 * `int iClipSize = WEAPON::GET_WEAPON_CLIP_SIZE(cur);`
 * sprintf_s(cClipSize, "ClipSize: %.d", iClipSize);
 * vDrawString(cClipSize, 0.5f, 0.5f);
 * }
 * }
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x583BE370B1EC6EB4 | Since: 323
 * @deprecated Use weapon.getClipSize(weaponHash) instead
 */
export declare function getWeaponClipSize(weaponHash: number | string): number;
/**
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x065D2AACAD8CF7A4 | Since: 1290
 * @deprecated Use weapon.getTimeBetweenShots(weaponHash) instead
 */
export declare function getWeaponTimeBetweenShots(weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x8378627201D5497D | Since: 323
 * @deprecated Use weapon.setPedChanceOfFiringBlanks(ped, xBias, yBias) instead
 */
export declare function setPedChanceOfFiringBlanks(ped: number | Ped, xBias: number, yBias: number): void;
/**
 * Returns handle of the projectile.
 *
 * Hash: 0xB4C8D77C80C0421E | Since: 323
 * @deprecated Use weapon.setPedShootOrdnance(ped) instead
 */
export declare function setPedShootOrdnanceWeapon(ped: number | Ped): number;
/**
 * No comment provided
 *
 * Hash: 0x48164DBB970AC3F0 | Since: 323
 * @deprecated Use weapon.requestHighDetailModel(weaponObject) instead
 */
export declare function requestWeaponHighDetailModel(weaponObject: number | Entity): void;
/**
 * No comment provided
 *
 * Hash: 0x1091922715B68DF0 | Since: 3095
 * @deprecated Use weapon.setPedDamageModifier(weapon1, damageModifier) instead
 */
export declare function setWeaponPedDamageModifier(weapon1: number | string, damageModifier: number): void;
/**
 * Changes the weapon damage output by the given multiplier value. Must be run every frame.
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x4757F00BC6323CFE | Since: 505
 * @deprecated Use weapon.setDamageModifier(weaponHash, damageMultiplier) instead
 */
export declare function setWeaponDamageModifier(weaponHash: number | string, damageMultiplier: number): void;
/**
 * No comment provided
 *
 * Hash: 0x4AE5AC8B852D642C | Since: 2372
 * @deprecated Use weapon.setAoeModifier(weaponHash, multiplier) instead
 */
export declare function setWeaponAoeModifier(weaponHash: number | string, multiplier: number): void;
/**
 * `ex, WEAPON::SET_WEAPON_EFFECT_DURATION_MODIFIER(joaat("vehicle_weapon_mine_slick"), 1.0);`
 *
 * Hash: 0xE6D2CEDD370FF98E | Since: 2372
 * @deprecated Use weapon.setEffectDurationModifier(p0) instead
 */
export declare function setWeaponEffectDurationModifier(p0: number | string): void;
/**
 * This native returns a true or false value.
 *
 * Ped ped = The ped whose weapon you want to check.
 *
 * Hash: 0x65F0C5AE05943EC7 | Since: 323
 * @deprecated Use weapon.isPedCurrentSilenced(ped) instead
 */
export declare function isPedCurrentWeaponSilenced(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0x4B7620C47217126C | Since: 323
 * @deprecated Use weapon.isFlashLightOn(ped) instead
 */
export declare function isFlashLightOn(ped: number | Ped): boolean;
/**
 * No comment provided
 *
 * Hash: 0xCEA66DAD478CD39B | Since: 323
 * @deprecated Use weapon.setFlashLightFadeDistance(distance) instead
 */
export declare function setFlashLightFadeDistance(distance: number): boolean;
/**
 * Enables/disables flashlight on ped's weapon.
 *
 * Hash: 0x988DB6FE9B3AC000 | Since: 2060
 * @deprecated Use weapon.setFlashLightActiveHistory(ped, toggle) instead
 */
export declare function setFlashLightActiveHistory(ped: number | Ped, toggle: boolean): void;
/**
 * Changes the selected ped aiming animation style.
 * Note : You must use GET_HASH_KEY!
 *
 * Strings to use with GET_HASH_KEY :
 *
 * "Ballistic",
 * "Default",
 * "Fat",
 * "Female",
 * "FirstPerson",
 * "FirstPersonAiming",
 * "FirstPersonFranklin",
 * "FirstPersonFranklinAiming",
 * "FirstPersonFranklinRNG",
 * "FirstPersonFranklinScope",
 * "FirstPersonMPFemale",
 * "FirstPersonMichael",
 * "FirstPersonMichaelAiming",
 * "FirstPersonMichaelRNG",
 * "FirstPersonMichaelScope",
 * "FirstPersonRNG",
 * "FirstPersonScope",
 * "FirstPersonTrevor",
 * "FirstPersonTrevorAiming",
 * "FirstPersonTrevorRNG",
 * "FirstPersonTrevorScope",
 * "Franklin",
 * "Gang",
 * "Gang1H",
 * "GangFemale",
 * "Hillbilly",
 * "MP_F_Freemode",
 * "Michael",
 * "SuperFat",
 * "Trevor"
 *
 * Hash: 0x1055AC3A667F09D9 | Since: 323
 * @deprecated Use weapon.setAnimationOverride(ped, animStyle) instead
 */
export declare function setWeaponAnimationOverride(ped: number | Ped, animStyle: number | string): void;
/**
 * enum class eDamageType
 * {
 * UNKNOWN = 0,
 * NONE = 1,
 * MELEE = 2,
 * BULLET = 3,
 * BULLET_RUBBER = 4,
 * EXPLOSIVE = 5,
 * FIRE = 6,
 * COLLISION = 7,
 * FALL = 8,
 * DROWN = 9,
 * ELECTRIC = 10,
 * BARBED_WIRE = 11,
 * FIRE_EXTINGUISHER = 12,
 * SMOKE = 13,
 * WATER_CANNON = 14,
 * TRANQUILIZER = 15,
 * };
 *
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x3BE0BB12D25FB305 | Since: 323
 * @deprecated Use weapon.getDamageType(weaponHash) instead
 */
export declare function getWeaponDamageType(weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0xE4DCEC7FD5B739A5 | Since: 323
 * @deprecated Use weapon.setEqippedStartSpinningAtFullSpeed(ped) instead
 */
export declare function setEqippedWeaponStartSpinningAtFullSpeed(ped: number | Ped): void;
/**
 * this returns if you can use the weapon while using a parachute
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0xBC7BE5ABC0879F74 | Since: 323
 * @deprecated Use weapon.canUseOnParachute(weaponHash) instead
 */
export declare function canUseWeaponOnParachute(weaponHash: number | string): boolean;
/**
 * Both coordinates are from objects in the decompiled scripts. Native related to 0xECDC202B25E5CF48 p1 value. The only weapon hash used in the decompiled scripts is weapon_air_defence_gun. These two natives are used by the yacht script, decompiled scripts suggest it and the weapon hash used (valkyrie's rockets) are also used by yachts.
 *
 * Hash: 0x91EF34584710BE99 | Since: 573
 * @deprecated Use weapon.createAirDefenceSphere(pos, radius, weaponHash) instead
 */
export declare function createAirDefenceSphere(pos: Vector3, radius: number, weaponHash: number | string): number;
/**
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0x9DA58CDBF6BDBC08 | Since: 1011
 * @deprecated Use weapon.createAirDefenceAngledArea(radius, weaponHash) instead
 */
export declare function createAirDefenceAngledArea(radius: number, weaponHash: number | string): number;
/**
 * No comment provided
 *
 * Hash: 0x0ABF535877897560 | Since: 573
 * @deprecated Use weapon.removeAirDefenceSphere(zoneId) instead
 */
export declare function removeAirDefenceSphere(zoneId: number): boolean;
/**
 * No comment provided
 *
 * Hash: 0x1E45B34ADEBEE48E | Since: 573
 * @deprecated Use weapon.removeAllAirDefenceSpheres() instead
 */
export declare function removeAllAirDefenceSpheres(): void;
/**
 * No comment provided
 *
 * Hash: 0xECDC202B25E5CF48 | Since: 573
 * @deprecated Use weapon.setPlayerTargettableForAirDefenceSphere(player, zoneId, enable) instead
 */
export declare function setPlayerTargettableForAirDefenceSphere(player: number | string | Player, zoneId: number, enable: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0xDAB963831DBFD3F4 | Since: 1103
 * @deprecated Use weapon.isAirDefenceSphereInArea(pos, radius) instead
 */
export declare function isAirDefenceSphereInArea(pos: Vector3, radius: number): [boolean, number];
/**
 * No comment provided
 *
 * Hash: 0x44F1012B69313374 | Since: 573
 * @deprecated Use weapon.fireAirDefenceSphereAtPosition(zoneId, pos) instead
 */
export declare function fireAirDefenceSphereWeaponAtPosition(zoneId: number, pos: Vector3): void;
/**
 * No comment provided
 *
 * Hash: 0xCD79A550999D7D4F | Since: 678
 * @deprecated Use weapon.doesAirDefenceSphereExist(zoneId) instead
 */
export declare function doesAirDefenceSphereExist(zoneId: number): boolean;
/**
 * Disables selecting the given weapon. Ped isn't forced to put the gun away. However you can't reselect the weapon if you holster then unholster. Weapon is also grayed out on the weapon wheel.
 * Full list of weapons by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/weapons.json
 *
 * Hash: 0xB4771B9AAF4E68E4 | Since: 1103
 * @deprecated Use weapon.setCanPedSelectInventory(ped, weaponHash, toggle) instead
 */
export declare function setCanPedSelectInventoryWeapon(ped: number | Ped, weaponHash: number | string, toggle: boolean): void;
/**
 * Disable all weapons. Does the same as 0xB4771B9AAF4E68E4 except for all weapons.
 *
 * Hash: 0xEFF296097FF1E509 | Since: 1103
 * @deprecated Use weapon.setCanPedSelectAlls(ped, toggle) instead
 */
export declare function setCanPedSelectAllWeapons(ped: number | Ped, toggle: boolean): void;
/**
 * No comment provided
 *
 * Hash: 0x27040C25DE6CB2F4 | Since: 323
 * @deprecated Use zone.getAtCoords(pos) instead
 */
export declare function getZoneAtCoords(pos: Vector3): number;
/**
 * 'zoneName' corresponds to an entry in 'popzone.ipl'.
 *
 * AIRP = Los Santos International Airport
 * ALAMO = Alamo Sea
 * ALTA = Alta
 * ARMYB = Fort Zancudo
 * BANHAMC = Banham Canyon Dr
 * BANNING = Banning
 * BEACH = Vespucci Beach
 * BHAMCA = Banham Canyon
 * BRADP = Braddock Pass
 * BRADT = Braddock Tunnel
 * BURTON = Burton
 * CALAFB = Calafia Bridge
 * CANNY = Raton Canyon
 * CCREAK = Cassidy Creek
 * CHAMH = Chamberlain Hills
 * CHIL = Vinewood Hills
 * CHU = Chumash
 * CMSW = Chiliad Mountain State Wilderness
 * CYPRE = Cypress Flats
 * DAVIS = Davis
 * DELBE = Del Perro Beach
 * DELPE = Del Perro
 * DELSOL = La Puerta
 * DESRT = Grand Senora Desert
 * DOWNT = Downtown
 * DTVINE = Downtown Vinewood
 * EAST_V = East Vinewood
 * EBURO = El Burro Heights
 * ELGORL = El Gordo Lighthouse
 * ELYSIAN = Elysian Island
 * GALFISH = Galilee
 * GOLF = GWC and Golfing Society
 * GRAPES = Grapeseed
 * GREATC = Great Chaparral
 * HARMO = Harmony
 * HAWICK = Hawick
 * HORS = Vinewood Racetrack
 * HUMLAB = Humane Labs and Research
 * JAIL = Bolingbroke Penitentiary
 * KOREAT = Little Seoul
 * LACT = Land Act Reservoir
 * LAGO = Lago Zancudo
 * LDAM = Land Act Dam
 * LEGSQU = Legion Square
 * LMESA = La Mesa
 * LOSPUER = La Puerta
 * MIRR = Mirror Park
 * MORN = Morningwood
 * MOVIE = Richards Majestic
 * MTCHIL = Mount Chiliad
 * MTGORDO = Mount Gordo
 * MTJOSE = Mount Josiah
 * MURRI = Murrieta Heights
 * NCHU = North Chumash
 * NOOSE = N.O.O.S.E
 * OCEANA = Pacific Ocean
 * PALCOV = Paleto Cove
 * PALETO = Paleto Bay
 * PALFOR = Paleto Forest
 * PALHIGH = Palomino Highlands
 * PALMPOW = Palmer-Taylor Power Station
 * PBLUFF = Pacific Bluffs
 * PBOX = Pillbox Hill
 * PROCOB = Procopio Beach
 * RANCHO = Rancho
 * RGLEN = Richman Glen
 * RICHM = Richman
 * ROCKF = Rockford Hills
 * RTRAK = Redwood Lights Track
 * SANAND = San Andreas
 * SANCHIA = San Chianski Mountain Range
 * SANDY = Sandy Shores
 * SKID = Mission Row
 * SLAB = Stab City
 * STAD = Maze Bank Arena
 * STRAW = Strawberry
 * TATAMO = Tataviam Mountains
 * TERMINA = Terminal
 * TEXTI = Textile City
 * TONGVAH = Tongva Hills
 * TONGVAV = Tongva Valley
 * VCANA = Vespucci Canals
 * VESP = Vespucci
 * VINE = Vinewood
 * WINDF = Ron Alternates Wind Farm
 * WVINE = West Vinewood
 * ZANCUDO = Zancudo River
 * ZP_ORT = Port of South Los Santos
 * ZQ_UAR = Davis Quartz
 *
 * Full list of zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/zones.json
 *
 * Hash: 0x98CD1D2934B76CC1 | Since: 323
 * @deprecated Use zone.getFromNameId(zoneName) instead
 */
export declare function getZoneFromNameId(zoneName: string): number;
/**
 * No comment provided
 *
 * Hash: 0x4334BC40AA0CB4BB | Since: 323
 * @deprecated Use zone.getPopschedule(zoneId) instead
 */
export declare function getZonePopschedule(zoneId: number): number;
/**
 * AIRP = Los Santos International Airport
 * ALAMO = Alamo Sea
 * ALTA = Alta
 * ARMYB = Fort Zancudo
 * BANHAMC = Banham Canyon Dr
 * BANNING = Banning
 * BEACH = Vespucci Beach
 * BHAMCA = Banham Canyon
 * BRADP = Braddock Pass
 * BRADT = Braddock Tunnel
 * BURTON = Burton
 * CALAFB = Calafia Bridge
 * CANNY = Raton Canyon
 * CCREAK = Cassidy Creek
 * CHAMH = Chamberlain Hills
 * CHIL = Vinewood Hills
 * CHU = Chumash
 * CMSW = Chiliad Mountain State Wilderness
 * CYPRE = Cypress Flats
 * DAVIS = Davis
 * DELBE = Del Perro Beach
 * DELPE = Del Perro
 * DELSOL = La Puerta
 * DESRT = Grand Senora Desert
 * DOWNT = Downtown
 * DTVINE = Downtown Vinewood
 * EAST_V = East Vinewood
 * EBURO = El Burro Heights
 * ELGORL = El Gordo Lighthouse
 * ELYSIAN = Elysian Island
 * GALFISH = Galilee
 * GOLF = GWC and Golfing Society
 * GRAPES = Grapeseed
 * GREATC = Great Chaparral
 * HARMO = Harmony
 * HAWICK = Hawick
 * HORS = Vinewood Racetrack
 * HUMLAB = Humane Labs and Research
 * JAIL = Bolingbroke Penitentiary
 * KOREAT = Little Seoul
 * LACT = Land Act Reservoir
 * LAGO = Lago Zancudo
 * LDAM = Land Act Dam
 * LEGSQU = Legion Square
 * LMESA = La Mesa
 * LOSPUER = La Puerta
 * MIRR = Mirror Park
 * MORN = Morningwood
 * MOVIE = Richards Majestic
 * MTCHIL = Mount Chiliad
 * MTGORDO = Mount Gordo
 * MTJOSE = Mount Josiah
 * MURRI = Murrieta Heights
 * NCHU = North Chumash
 * NOOSE = N.O.O.S.E
 * OCEANA = Pacific Ocean
 * PALCOV = Paleto Cove
 * PALETO = Paleto Bay
 * PALFOR = Paleto Forest
 * PALHIGH = Palomino Highlands
 * PALMPOW = Palmer-Taylor Power Station
 * PBLUFF = Pacific Bluffs
 * PBOX = Pillbox Hill
 * PROCOB = Procopio Beach
 * RANCHO = Rancho
 * RGLEN = Richman Glen
 * RICHM = Richman
 * ROCKF = Rockford Hills
 * RTRAK = Redwood Lights Track
 * SANAND = San Andreas
 * SANCHIA = San Chianski Mountain Range
 * SANDY = Sandy Shores
 * SKID = Mission Row
 * SLAB = Stab City
 * STAD = Maze Bank Arena
 * STRAW = Strawberry
 * TATAMO = Tataviam Mountains
 * TERMINA = Terminal
 * TEXTI = Textile City
 * TONGVAH = Tongva Hills
 * TONGVAV = Tongva Valley
 * VCANA = Vespucci Canals
 * VESP = Vespucci
 * VINE = Vinewood
 * WINDF = Ron Alternates Wind Farm
 * WVINE = West Vinewood
 * ZANCUDO = Zancudo River
 * ZP_ORT = Port of South Los Santos
 * ZQ_UAR = Davis Quartz
 *
 * Full list of zones by DurtyFree: https://github.com/DurtyFree/gta-v-data-dumps/blob/master/zones.json
 *
 * Hash: 0xCD90657D4C30E1CA | Since: 323
 * @deprecated Use zone.getNameOf(pos) instead
 */
export declare function getNameOfZone(pos: Vector3): string;
/**
 * No comment provided
 *
 * Hash: 0xBA5ECEEA120E5611 | Since: 323
 * @deprecated Use zone.setEnabled(zoneId, toggle) instead
 */
export declare function setZoneEnabled(zoneId: number, toggle: boolean): void;
/**
 * cellphone range 1- 5 used for signal bar in iFruit phone
 *
 * Hash: 0x5F7B268D15BA0739 | Since: 323
 * @deprecated Use zone.getScumminess(zoneId) instead
 */
export declare function getZoneScumminess(zoneId: number): number;
/**
 * Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.
 *
 * Modified example from "am_imp_exp.c4", line 6406:
 * `\/\* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));`
 * etc.
 * \*\/
 * `ZONE::OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(popSchedules[index], vehicleHash);`
 * `STREAMING::REQUEST_MODEL(vehicleHash);`
 *
 * Hash: 0x5F7D596BAC2E7777 | Since: 323
 * @deprecated Use zone.overridePopscheduleVehicleModel(scheduleId, vehicleHash) instead
 */
export declare function overridePopscheduleVehicleModel(scheduleId: number, vehicleHash: number | string): void;
/**
 * Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.
 *
 * Modified example from "am_imp_exp.c4", line 6418:
 * `\/\* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));`
 * etc.
 * \*\/
 * `STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(vehicleHash);`
 * `ZONE::CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(popSchedules[index]);`
 *
 * Hash: 0x5C0DE367AA0D911C | Since: 323
 * @deprecated Use zone.clearPopscheduleOverrideVehicleModel(scheduleId) instead
 */
export declare function clearPopscheduleOverrideVehicleModel(scheduleId: number): void;
/**
 * Returns a hash representing which part of the map the given coords are located.
 *
 * Possible return values:
 * (Hash of) city -> -289320599
 * (Hash of) countryside -> 2072609373
 *
 * C# Example :
 *
 * Ped player = Game.Player.Character;
 * Hash h = Function.Call<Hash>(Hash.GET_HASH_OF_MAP_AREA_AT_COORDS, player.Position.X, player.Position.Y, player.Position.Z);
 *
 * Hash: 0x7EE64D51E8498728 | Since: 323
 * @deprecated Use zone.getHashOfMapAreaAtCoords(pos) instead
 */
export declare function getHashOfMapAreaAtCoords(pos: Vector3): number;
export * from "@risinglife/fivem-shared";
