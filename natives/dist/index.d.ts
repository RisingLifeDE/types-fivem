import { Vector3, Entity, Ped, Player, Vehicle } from '@risinglife/fivem-shared';
/**
 * Hash: 0xE8E3FCF72EAC0EF8 | ApiSet: undefined
 */
export declare function appCloseBlock(): void;
/**
 * Hash: 0xE41C65E07A5F05FC | ApiSet: undefined
 */
export declare function appCloseApp(): void;
/**
 * Hash: 0x5FE1DF3342DB7DBA | ApiSet: undefined
 */
export declare function appClearBlock(): void;
/**
 * Hash: 0x846AA8E7D55EE5B6 | ApiSet: undefined
 */
export declare function appDataValid(): boolean;
/**
 * Hash: 0xC9853A2BE3DED1A6 | ApiSet: undefined
 */
export declare function appGetDeletedFileStatus(): number;
/**
 * Hash: 0x1514FB24C02C2322 | ApiSet: undefined
 */
export declare function appGetFloat(property: string): number;
/**
 * Hash: 0x44151AEA95C8A003 | ApiSet: undefined
 */
export declare function appDeleteAppData(appName: string): boolean;
/**
 * Hash: 0xD3A58A12C77D9D4B | ApiSet: undefined
 */
export declare function appGetInt(property: string): number;
/**
 * Hash: 0x71EEE69745088DA0 | ApiSet: undefined
 */
export declare function appHasLinkedSocialClubAccount(): boolean;
/**
 * Hash: 0x95C5D356CDA6E85F | ApiSet: undefined
 */
export declare function appSaveData(): void;
/**
 * Hash: 0x749B023950D2311C | ApiSet: undefined
 */
export declare function appGetString(property: string): string;
/**
 * Hash: 0xCA52279A7271517F | ApiSet: undefined
 */
export declare function appHasSyncedData(appName: string): boolean;
/**
 * Hash: 0x262AB456A3D21F93 | ApiSet: undefined
 */
export declare function appSetBlock(blockName: string): void;
/**
 * Hash: 0x25D7687C68E0DAA4 | ApiSet: undefined
 */
export declare function appSetFloat(property: string, value: number): void;
/**
 * ```
 * Called in the gamescripts like:
 * `APP::APP_SET_APP("car");`
 * `APP::APP_SET_APP("dog");`
 * ```
 * Hash: 0xCFD0406ADAF90D2B | ApiSet: undefined
 */
export declare function appSetApp(appName: string): void;
/**
 * Hash: 0x607E8E3D3E4F9611 | ApiSet: undefined
 */
export declare function appSetInt(property: string, value: number): void;
/**
 * Hash: 0x3FF2FCEC4B7721B4 | ApiSet: undefined
 */
export declare function appSetString(property: string, value: string): void;
/**
 * Hash: 0x14D8518E9760F08F | ApiSet: undefined
 */
export declare function disableScriptBrainSet(brainSet: number): void;
/**
 * ```
 * `BRAIN::ADD_SCRIPT_TO_RANDOM_PED("pb_prostitute", ${s_f_y_hooker_01}, 100, 0);`
 * - Nacorpio
 * -----
 * Hardcoded to not work in Multiplayer.
 * ```
 * Hash: 0x4EE5367468A65CCC | ApiSet: undefined
 */
export declare function addScriptToRandomPed(name: string, model: number | string, p2: number, p3: number): void;
/**
 * Hash: 0x67AA4D73F0CFA86B | ApiSet: undefined
 */
export declare function enableScriptBrainSet(brainSet: number): void;
/**
 * Hash: 0x0B40ED49D7D6FF84 | ApiSet: undefined
 */
export declare function _0x0B40ED49D7D6FF84(): void;
/**
 * ```
 * Gets whether the world point the calling script is registered to is within desired range of the player.
 * ```
 * Hash: 0xC5042CC6F5E3D450 | ApiSet: undefined
 */
export declare function isWorldPointWithinBrainActivationRange(): boolean;
/**
 * Hash: 0xCCBA154209823057 | ApiSet: undefined
 */
export declare function isObjectWithinBrainActivationRange(object: any): boolean;
/**
 * ```
 * Something like flush_all_scripts
 * Most of time comes after NETWORK_END_TUTORIAL_SESSION() or before TERMINATE_THIS_THREAD()
 * ```
 * Hash: 0x4D953DF78EBF8158 | ApiSet: undefined
 */
export declare function _0x4D953DF78EBF8158(): void;
/**
 * ```
 * Looks like a cousin of above function _6D6840CEE8845831 as it was found among them. Must be similar
 * Here are possible values of argument -
 * "ob_tv"
 * "launcher_Darts"
 * ```
 * Hash: 0x6E91B04E08773030 | ApiSet: undefined
 */
export declare function _0x6E91B04E08773030(action: string): void;
/**
 * ```
 * Registers a script for any object with a specific model hash.
 * `BRAIN::REGISTER_OBJECT_SCRIPT_BRAIN("ob_telescope", ${prop_telescope_01}, 100, 4.0, -1, 9);`
 * ```
 * Hash: 0x0BE84C318BA6EC22 | ApiSet: undefined
 */
export declare function registerObjectScriptBrain(scriptName: string, modelHash: number | string, p2: number, activationRange: number, p4: number, p5: number): void;
/**
 * ```
 * Possible values:
 * act_cinema
 * am_mp_carwash_launch
 * am_mp_carwash_control
 * am_mp_property_ext
 * chop
 * fairgroundHub
 * launcher_BasejumpHeli
 * launcher_BasejumpPack
 * launcher_CarWash
 * launcher_golf
 * launcher_Hunting_Ambient
 * launcher_MrsPhilips
 * launcher_OffroadRacing
 * launcher_pilotschool
 * launcher_Racing
 * launcher_rampage
 * launcher_rampage
 * launcher_range
 * launcher_stunts
 * launcher_stunts
 * launcher_tennis
 * launcher_Tonya
 * launcher_Triathlon
 * launcher_Yoga
 * ob_mp_bed_low
 * ob_mp_bed_med
 * ```
 * Hash: 0x6D6840CEE8845831 | ApiSet: undefined
 */
export declare function _0x6D6840CEE8845831(action: string): void;
/**
 * Hash: 0x3CDC7136613284BD | ApiSet: undefined
 */
export declare function registerWorldPointScriptBrain(activationRange: number, p2: number): string;
/**
 * Below is a list of modes and their respective hashes.
 * | Mode (string)               | Hash               |
 * |-----------------------------|--------------------|
 * | SLOWMO_BIG_SCORE_JUMP       | 0x2B981B0C         |
 * | JSH_EXIT_TUNNEL_SLOWMO      | 0x2562AA6          |
 * | SLOW_MO_METH_HOUSE_RAYFIRE  | 0xDB9E1909         |
 * | SLOWMO_FIB4\_TRUCK_SMASH     | 0x9E144347         |
 * | SLOWMO_PROLOGUE_VAULT       | 0xEA2E68E1         |
 * | SLOWMO_T1\_RAYFIRE_EXPLOSION | 0xD6D358F3         |
 * | SLOWMO_T1\_TRAILER_SMASH     | 0xBE607345         |
 * | BARRY\_01\_SLOWMO             | 0xD59540D4         |
 * | BARRY\_02\_SLOWMO             | 0x12F140B3         |
 * | SLOWMO_EXTREME\_04           | 0xF562EA50         |
 * | NIGEL\_02\_SLOWMO_SETTING     | 0x384689B0         |
 * Hash: 0xD01005D2BA2EB778 | ApiSet: undefined
 */
export declare function activateAudioSlowmoMode(mode: string): void;
/**
 * ```
 * All found occurrences in b678d:
 * pastebin.com/ceu67jz8
 * ```
 * Hash: 0x153973AB99FE8980 | ApiSet: undefined
 */
export declare function addEntityToAudioMixGroup(entity: number | Entity, groupName: string, fadeIn: number): void;
/**
 * Hash: 0x95D9F4BC443956E7 | ApiSet: undefined
 */
export declare function addPedToConversation(speakerConversationIndex: number, ped: number | Ped, voiceName: string): void;
/**
 * ```cpp
 * enum eAudibility {
 * AUD_AUDIBILITY_NORMAL = 0,
 * AUD_AUDIBILITY_CLEAR = 1,
 * AUD_AUDIBILITY_CRITICAL = 2,
 * AUD_AUDIBILITY_LEAD_IN = 3
 * }
 * ```
 * Hash: 0xC5EF963405593646 | ApiSet: undefined
 */
export declare function addLineToConversation(speakerConversationIndex: number, context: string, subtitle: string, listenerNumber: number, volumeType: number, isRandom: boolean, interruptible: boolean, ducksRadio: boolean, ducksScore: boolean, audibility: number, headset: boolean, dontInterruptForSpecialAbility: boolean, isPadSpeakerRoute: boolean): void;
/**
 * Plays a siren blip from the vehicle when you double press the horn key.
 * This only works on vehicles with sirens.
 * Hash: 0x1B9025BDA76822B6 | ApiSet: undefined
 */
export declare function blipSiren(vehicle: number | Vehicle): void;
/**
 * Blocks *all* speech playing on the given ped, including speech triggered by natives such as [PLAY_PED_AMBIENT_SPEECH_WITH_VOICE_NATIVE](#\_0x3523634255FC3318)
 * The flag itself is not synced, it must be called on each machine that wishes to suppress the speech.
 * The `SuppressOutgoingNetworkSpeech` flag can be set to `false` if you want speech triggered locally through `PLAY_PED_AMBIENT_SPEECH_*` related native calls to still be audible on remote machines, even though it was blocked on the local one.
 * Hash: 0xF8AD2EED7C47E8FE | ApiSet: undefined
 */
export declare function blockAllSpeechFromPed(ped: number | Ped, shouldBlock: boolean, suppressOutgoingNetworkSpeech: boolean): void;
/**
 * Hash: 0x845FFC3A4FEEFA3E | ApiSet: undefined
 */
export declare function audioIsScriptedMusicPlaying(): boolean;
/**
 * Hash: 0xF154B8D1775B2DEC | ApiSet: undefined
 */
export declare function blockDeathJingle(blocked: boolean): void;
/**
 * Hash: 0x032A116663A4D5AC | ApiSet: undefined
 */
export declare function canVehicleReceiveCbRadio(vehicle: number | Vehicle): boolean;
/**
 * ```cpp
 * enum eAudContextBlockTarget {
 * AUD_CONTEXT_BLOCK_PLAYER = 0,
 * AUD_CONTEXT_BLOCK_NPCS = 1,
 * AUD_CONTEXT_BLOCK_BUDDYS = 2,
 * AUD_CONTEXT_BLOCK_EVERYONE = 3,
 * AUD_CONTEXT_BLOCK_TARGETS_TOTAL
 * }
 * ```
 * Stop a certain group of peds from using a certain group of speech contexts.
 * Note that the block will be automatically removed when the calling script finishes
 * Hash: 0xA8A7D434AFB4B97B | ApiSet: undefined
 */
export declare function blockSpeechContextGroup(groupName: string, contextBlockTarget: number): void;
/**
 * Hash: 0xB4F90FAF7670B16F | ApiSet: undefined
 */
export declare function cancelAllPoliceReports(): void;
/**
 * ```
 * All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
 * ```
 * Hash: 0x5B17A90291133DA5 | ApiSet: undefined
 */
export declare function cancelMusicEvent(eventName: string): boolean;
/**
 * Hash: 0xB32209EFFDC04913 | ApiSet: undefined
 */
export declare function clearAllBrokenGlass(): void;
/**
 * Deactivates the named slowmo mode.
 * Hash: 0xDDC635D5B3262C56 | ApiSet: undefined
 */
export declare function deactivateAudioSlowmoMode(mode: string): void;
/**
 * Resets the list of ambients zones enabled/disabled status to its value before it was modified by this script.
 * Default behaviour is that any state change only gets applied once the player leaves the zone.
 * Hash: 0x120C48C614909FA4 | ApiSet: undefined
 */
export declare function clearAmbientZoneListState(forceUpdate: boolean): string;
/**
 * Clears the previously queued custom track lost for the given radio station.
 * Hash: 0x1654F24A88A8E3FE | ApiSet: undefined
 */
export declare function clearCustomRadioTrackList(radioStation: string): void;
/**
 * Hash: 0xD2C91A0B572AAE56 | ApiSet: undefined
 */
export declare function createNewScriptedConversation(): void;
/**
 * Resets the ambient zone enabled/disabled status to its value before it was modified by this script
 * Default behaviour is that any state change only gets applied once the player leaves the zone.
 * Hash: 0x218DD44AAAC964FF | ApiSet: undefined
 */
export declare function clearAmbientZoneState(zoneName: string, forceUpdate: boolean): void;
/**
 * Hash: 0x109697E2FFBAC8A1 | ApiSet: undefined
 */
export declare function doesPlayerVehHaveRadio(): boolean;
/**
 * Toggles fake distant siren sounds
 * Hash: 0x552369F549563AD5 | ApiSet: undefined
 */
export declare function distantCopCarSirens(shouldPlay: boolean): void;
/**
 * Hash: 0xA9A41C1E940FB0E8 | ApiSet: undefined
 */
export declare function disablePedPainAudio(ped: number | Ped, shouldDisable: boolean): void;
/**
 * Hash: 0x1C073274E065C6D2 | ApiSet: undefined
 */
export declare function enableVehicleFanbeltDamage(vehicle: number | Vehicle, enableFanbeltDamage: boolean): void;
/**
 * Checks if the context exists for the ped, searching through the voices in its PedVoiceGroup.
 * The final argument can be set to true to allow searching in backup PVGs
 * Hash: 0x49B99BF3FDA89A7A | ApiSet: undefined
 */
export declare function doesContextExistForThisPed(ped: number | Ped, speechName: string, allowBackupPVGs: boolean): boolean;
/**
 * Enable the stunt jump audio detection code
 * This native is meant to be called per-frame for as long as detection is wanted.
 * Hash: 0xB81CF134AEB56FFB | ApiSet: undefined
 */
export declare function enableStuntJumpAudio(): void;
/**
 * Forces the chosen station to paly the given music track list. All other music track lists will be locked.
 * Hash: 0x4E0AF9114608257C | ApiSet: undefined
 */
export declare function forceMusicTrackList(radioStation: string, trackListName: string, timeOffsetMilliseconds: number): void;
/**
 * Enable or disable exhaust pops on the given vehicle.
 * Hash: 0x2BE4BC731D039D5A | ApiSet: undefined
 */
export declare function enableVehicleExhaustPops(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Forces the ambient peds into their panic walla state
 * Hash: 0x062D5EAD4DA2FA6A | ApiSet: undefined
 */
export declare function forcePedPanicWalla(): void;
/**
 * Enable or disable the plane stall warning sounds
 * Hash: 0xC15907D667F7CFB2 | ApiSet: undefined
 */
export declare function enableStallWarningSounds(vehicle: number | Vehicle, enable: boolean): void;
/**
 * Hash: 0x8D67489793FF428B | ApiSet: undefined
 */
export declare function findRadioStationIndex(stationNameHash: number): number;
/**
 * This native sets the audio to the specific vehicle hash's audioNameHash.
 * Hash: 0x4F0C413926060B38 | ApiSet: undefined
 */
export declare function forceUseAudioGameObject(vehicle: number | Vehicle, gameObjectName: string): void;
/**
 * Allows script to freeze the microphone for a single frame, mantaining its current transform/settings.
 * This native should be called every frame you want to keep the microphone frozen, when you stop calling it it will automatically unfreeze
 * Hash: 0xD57AAAE0E2214D11 | ApiSet: undefined
 */
export declare function freezeMicrophone(): void;
/**
 * Hash: 0x344F393B027E38C3 | ApiSet: undefined
 */
export declare function freezeRadioStation(radioStation: string): void;
/**
 * This native is used alongside with [`SET_VEHICLE_TYRE_BURST`](#\_0xEC6A202EE4960385).
 * ```
 * NativeDB Introduced: v3258
 * ```
 * Hash: 0xEB7D0E1FCC8FE17A | ApiSet: undefined
 */
export declare function forceVehicleEngineSynth(vehicle: number | Vehicle, force: boolean): void;
/**
 * Hash: 0x5E203DA2BA15D436 | ApiSet: undefined
 */
export declare function getAmbientVoiceNameHash(ped: number | Ped): number;
/**
 * Hash: 0x50B196FC9ED6545B | ApiSet: undefined
 */
export declare function getAudibleMusicTrackTextId(): number;
/**
 * Hash: 0x480357EE890C295A | ApiSet: undefined
 */
export declare function getCurrentScriptedConversationLine(): number;
/**
 * Hash: 0xE7A0D23DC414507B | ApiSet: undefined
 */
export declare function getMusicPlaytime(): number;
/**
 * Hash: 0xF1620ECB50E01DE7 | ApiSet: undefined
 */
export declare function getNumUnlockedRadioStations(): number;
/**
 * ```
 * Return the playback time (in milliseconds) of the radio stations current track.
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x3E65CDE5215832C1 | ApiSet: undefined
 */
export declare function getCurrentRadioTrackPlaybackTime(radioStationName: string): number;
/**
 * Hash: 0x34D66BC058019CE0 | ApiSet: undefined
 */
export declare function getCurrentTrackSoundName(radioStationName: string): number;
/**
 * Hash: 0xE73364DB90778FFA | ApiSet: undefined
 */
export declare function getIsPreloadedConversationReady(): boolean;
/**
 * Hash: 0xE8AF77C4C06ADC93 | ApiSet: undefined
 */
export declare function getPlayerRadioStationIndex(): number;
/**
 * Hash: 0x2DE3F0A134FFBC0D | ApiSet: undefined
 */
export declare function getNetworkIdFromSoundId(soundId: number): number;
/**
 * Hash: 0xC64A06D939F826F5 | ApiSet: undefined
 */
export declare function getNextAudibleBeat(): [boolean, number, number, number];
/**
 * Hash: 0xA571991A7FE6CCEB | ApiSet: undefined
 */
export declare function getPlayerRadioStationGenre(): number;
/**
 * Hash: 0x4E72BBDBCA58A3DB | ApiSet: undefined
 */
export declare function getStreamPlayTime(): number;
/**
 * Hash: 0x3A48AB4445D499BE | ApiSet: undefined
 */
export declare function getMusicVolSlider(): number;
/**
 * Hash: 0xB28ECA15046CA8B9 | ApiSet: undefined
 */
export declare function getRadioStationName(stationIndex: number): string;
/**
 * If a playback function has a soundId field but the sound doesn't need to be altered after triggering then pass a value of -1 for fire-and-forget playback, rather than getting a soundId.
 * SoundId's can be reused, without needing to release them and grab a new one.
 * If a sound's finished playing, you can reuse its SoundId to kick off another one.
 * If the sound's not finished playing, it'll be stopped first (fading out or whatever is set up in RAVE by the sound designer), and the new one kicked off; usually it is safer to just get a new SoundId.
 * SoundId's are not automatically cleaned up, you must use [RELEASE_SOUND_ID](#\_0x353FC880830B88FA) after you've finished using them to allow the engine to recycle the sound id.
 * Hash: 0x430386FE9BF80B45 | ApiSet: undefined
 */
export declare function getSoundId(): number;
/**
 * Hash: 0xF6D733C32076AD03 | ApiSet: undefined
 */
export declare function getPlayerRadioStationName(): string;
/**
 * Hash: 0xAA19F5572C38B564 | ApiSet: undefined
 */
export declare function getVariationChosenForScriptedLine(): [number, string];
/**
 * Hash: 0x02165D55000219AC | ApiSet: undefined
 */
export declare function getVehicleDefaultHorn(vehicle: number | Vehicle): number;
/**
 * Hash: 0xACB5DCCA1EC76840 | ApiSet: undefined
 */
export declare function getVehicleDefaultHornIgnoreMods(vehicle: number | Vehicle): number;
/**
 * Hash: 0x544810ED9DB6BBE6 | ApiSet: undefined
 */
export declare function hasLoadedMpDataSet(): boolean;
/**
 * Counterpart: [`GET_NETWORK_ID_FROM_SOUND_ID`](#\_0x2DE3F0A134FFBC0D).
 * Hash: 0x75262FD12D0A1C84 | ApiSet: undefined
 */
export declare function getSoundIdFromNetworkId(netId: number): number;
/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * Hash: 0xD53F3A29BCE2580E | ApiSet: undefined
 */
export declare function getVehicleHornSoundIndex(vehicle: number | Vehicle): number;
/**
 * This native is marked as a deprecated native internally, use [HINT_SCRIPT_AUDIO_BANK](#\_0xFB380A29641EC31A) instead
 * Hash: 0x8F8C0E370AE62F5C | ApiSet: undefined
 */
export declare function hintAmbientAudioBank(bankName: string, bOverNetwork: boolean): boolean;
/**
 * Hash: 0xFCBDCE714A7C88E5 | ApiSet: undefined
 */
export declare function hasSoundFinished(soundId: number): boolean;
/**
 * This is marked as a deprecated function internally, please use [HINT_SCRIPT_AUDIO_BANK](#\_0xFB380A29641EC31A) instead.
 * Hash: 0x40763EA7B9B783E7 | ApiSet: undefined
 */
export declare function hintMissionAudioBank(bankName: string, bOverNetwork: boolean, playerBits: number): boolean;
/**
 * Hash: 0x5B50ABB1FE3746F4 | ApiSet: undefined
 */
export declare function hasLoadedSpDataSet(): boolean;
/**
 * Hash: 0xC8EDE9BDBCCBA6D4 | ApiSet: undefined
 */
export declare function initSynchSceneAudioWithPosition(position: Vector3): string;
/**
 * Hints that this bank would be good to load if there are free slots.
 * Does not guarentee loading of the bank, [REQUEST_SCRIPT_AUDIO_BANK](#\_0xFE02FFBED8CA9D99) MUST be used as normal before triggering sounds"
 * This native has a new argument on newer game builds:
 * *   **playerBits**: likely used to specifiy players to sync to as a bit mask (1 << (0-128))
 * Hash: 0xFB380A29641EC31A | ApiSet: undefined
 */
export declare function hintScriptAudioBank(bankName: string, bOverNetwork: boolean): boolean;
/**
 * Handles conversation interrupts, using the code-side system for improved timing and to minimize unfriendly logic interactions.
 * Hash: 0xA018A12E5C5C2FA6 | ApiSet: undefined
 */
export declare function interruptConversation(interrupterPed: number | Ped): [string, string];
/**
 * Hash: 0x950A154B8DAB6185 | ApiSet: undefined
 */
export declare function initSynchSceneAudioWithEntity(audioName: string, entity: number | Entity): void;
/**
 * Handles conversation interrupts and pauses, using the code-side system for improved timing and to minimize unfriendly logic interactions.
 * Hash: 0x8A694D7A68F8DC38 | ApiSet: undefined
 */
export declare function interruptConversationAndPause(interrupterPed: number | Ped, context: string, voiceName: string): void;
/**
 * Hash: 0x9072C8B49907BFAD | ApiSet: undefined
 */
export declare function isAmbientSpeechPlaying(ped: number | Ped): boolean;
/**
 * Hash: 0x932C2D096A2C3FFF | ApiSet: undefined
 */
export declare function isAmbientSpeechDisabled(ped: number | Ped): boolean;
/**
 * Hash: 0x226435CB96CCFC8C | ApiSet: undefined
 */
export declare function isAlarmPlaying(alarmName: string): boolean;
/**
 * Determines if any ped-independent, positionally-based scripted speech is currently active. This typically includes speech events triggered using [`PLAY_AMBIENT_SPEECH_FROM_POSITION_NATIVE`](#\_0xED640017ED337E45).
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x30CA2EF91D15ADF8 | ApiSet: undefined
 */
export declare function isAnyPositionalSpeechPlaying(): boolean;
/**
 * Hash: 0xC265DF9FB44A9FBD | ApiSet: undefined
 */
export declare function isAnimalVocalizationPlaying(pedHandle: number | Ped): boolean;
/**
 * Hash: 0x729072355FA39EC9 | ApiSet: undefined
 */
export declare function isAnySpeechPlaying(ped: number | Ped): boolean;
/**
 * Hash: 0x9D6BFC12B05C6121 | ApiSet: undefined
 */
export declare function isHornActive(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x01E2817A479A7F9B | ApiSet: undefined
 */
export declare function isAmbientZoneEnabled(ambientZone: string): boolean;
/**
 * ```
 * Hardcoded to return 1
 * ```
 * Hash: 0x6D28DC1671E334FD | ApiSet: undefined
 */
export declare function isGameInControlOfMusic(): boolean;
/**
 * Hash: 0x6F259F82D873B8B8 | ApiSet: undefined
 */
export declare function isMissionCompleteReadyForUi(): boolean;
/**
 * Hash: 0x19A30C23F5827F8A | ApiSet: undefined
 */
export declare function isMissionCompletePlaying(): boolean;
/**
 * Hash: 0x7497D2CE2C30D24C | ApiSet: undefined
 */
export declare function isMobilePhoneCallOngoing(): boolean;
/**
 * Hash: 0x5F43D83FD6738741 | ApiSet: undefined
 */
export declare function isPlayerVehRadioEnable(): boolean;
/**
 * Hash: 0xB65B60556E2A9225 | ApiSet: undefined
 */
export declare function isAudioSceneActive(scene: string): boolean;
/**
 * Hash: 0x66E49BF55B4B1874 | ApiSet: undefined
 */
export declare function isMissionNewsStoryUnlocked(newsStory: number): boolean;
/**
 * Hash: 0x049E937F18F4020C | ApiSet: undefined
 */
export declare function isPedInCurrentConversation(ped: number | Ped): boolean;
/**
 * Hash: 0xC8B1B2425604CDD0 | ApiSet: undefined
 */
export declare function isMobileInterferenceActive(): boolean;
/**
 * Hash: 0x2B1784DB08AFEA79 | ApiSet: undefined
 */
export declare function isRadioStationFavourited(radioStation: string): boolean;
/**
 * Hash: 0xA097AB275061FB21 | ApiSet: undefined
 */
export declare function isMusicOneshotPlaying(): boolean;
/**
 * Hash: 0x1E8E5E20937E3137 | ApiSet: undefined
 */
export declare function isPedRingtonePlaying(ped: number | Ped): boolean;
/**
 * Hash: 0xCC9AA18DCC7084F4 | ApiSet: undefined
 */
export declare function isScriptedSpeechPlaying(ped: number | Ped): boolean;
/**
 * Hash: 0xB35CE999E8EF317E | ApiSet: undefined
 */
export declare function isMobilePhoneRadioActive(): boolean;
/**
 * Hash: 0x0626A247D2405330 | ApiSet: undefined
 */
export declare function isRadioFadedOut(): boolean;
/**
 * Hash: 0xDF0D54BE7A776737 | ApiSet: undefined
 */
export declare function isScriptedConversationLoaded(): boolean;
/**
 * Hash: 0xA151A7394A214E65 | ApiSet: undefined
 */
export declare function isRadioRetuning(): boolean;
/**
 * Hash: 0xD11FA52EB849D978 | ApiSet: undefined
 */
export declare function isStreamPlaying(): boolean;
/**
 * Hash: 0x16754C556D2EDE3D | ApiSet: undefined
 */
export declare function isScriptedConversationOngoing(): boolean;
/**
 * Hash: 0x0BE4BE946463F917 | ApiSet: undefined
 */
export declare function isVehicleRadioOn(vehicle: number | Vehicle): boolean;
/**
 * Links a static emitter to the given entity
 * Hash: 0x651D3228960D08AF | ApiSet: undefined
 */
export declare function linkStaticEmitterToEntity(emitterName: string, entity: number | Entity): void;
/**
 * Hash: 0xFF5E5EA2DCEEACF3 | ApiSet: undefined
 */
export declare function lockRadioStationTrackList(radioStation: string, trackListName: string): void;
/**
 * Load in named stream. Optionally can specify a sound set which contains the sound specified by name.
 * Names for the streams can be found [here](https://gist.github.com/4mmonium/2bd2c9c54d6ca5cbdb7b156a82a3a85a), the list will be updated as more are found.
 * Hash: 0x1F1F957154EC51DF | ApiSet: undefined
 */
export declare function loadStream(streamName: string, soundSet: string): boolean;
/**
 * Hash: 0x5DB8010EE71FDEF2 | ApiSet: undefined
 */
export declare function isVehicleAudiblyDamaged(vehicle: number | Vehicle): boolean;
/**
 * This disables the radio station completely - it won't be selectable on the radio wheel or ever be heard coming from a vehicle/ambient emitter
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x477D9DB48F889591 | ApiSet: undefined
 */
export declare function lockRadioStation(radioStationName: string, toggle: boolean): void;
/**
 * Load in named stream. Optionally can specify a sound set which contains the sound specified by name.
 * Hash: 0x59C16B79F53B3712 | ApiSet: undefined
 */
export declare function loadStreamWithStartOffset(streamName: string, startOffset: number, soundSet: string): boolean;
/**
 * Hash: 0x11579D940949C49E | ApiSet: undefined
 */
export declare function _0x11579D940949C49E(p0: any): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x02E93C796ABD3A97 | ApiSet: undefined
 */
export declare function _0x02E93C796ABD3A97(p0: boolean): void;
/**
 * ```
 * NativeDB Introduced: v463
 * ```
 * Hash: 0x2DD39BF3E2F9C47F | ApiSet: undefined
 */
export declare function _0x2DD39BF3E2F9C47F(): any;
/**
 * Hash: 0x19AF7ED9B9D23058 | ApiSet: undefined
 */
export declare function _0x19AF7ED9B9D23058(): void;
/**
 * Hash: 0x58BB377BEC7CD5F4 | ApiSet: undefined
 */
export declare function _0x58BB377BEC7CD5F4(p0: boolean, p1: boolean): void;
/**
 * Hash: 0x43FA0DFC5DF87815 | ApiSet: undefined
 */
export declare function _0x43FA0DFC5DF87815(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0x8BF907833BE275DE | ApiSet: undefined
 */
export declare function _0x8BF907833BE275DE(p0: number, p1: number): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x55ECF4D13D9903B0 | ApiSet: undefined
 */
export declare function _0x55ECF4D13D9903B0(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x9AC92EED5E4793AB | ApiSet: undefined
 */
export declare function _0x9AC92EED5E4793AB(): void;
/**
 * Hash: 0x5B9853296731E88D | ApiSet: undefined
 */
export declare function _0x5B9853296731E88D(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x97FFB4ADEED08066 | ApiSet: undefined
 */
export declare function _0x97FFB4ADEED08066(p0: any, p1: any): void;
/**
 * ```
 * SET_H*
 * ```
 * Hash: 0x9D3AF56E94C9AE98 | ApiSet: undefined
 */
export declare function _0x9D3AF56E94C9AE98(vehicle: number | Vehicle, p1: number): void;
/**
 * Hash: 0xBEF34B1D9624D5DD | ApiSet: undefined
 */
export declare function _0xBEF34B1D9624D5DD(p0: boolean): void;
/**
 * Hash: 0xB542DE8C3D1CB210 | ApiSet: undefined
 */
export declare function _0xB542DE8C3D1CB210(p0: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x9BD7BD55E4533183 | ApiSet: undefined
 */
export declare function _0x9BD7BD55E4533183(p0: any, p1: any, p2: any): void;
/**
 * ```
 * SET_VEH*
 * ```
 * Hash: 0xC1805D05E6D4FE10 | ApiSet: undefined
 */
export declare function _0xC1805D05E6D4FE10(vehicle: number | Vehicle): void;
/**
 * This native enables the audio flag "TrevorRageIsOverridden" and sets the voice effect to `voiceEffect`
 * To clear the override use [RESET_TREVOR_RAGE](#\_0xE78503B10C4314E0)
 * Hash: 0x13AD665062541A7E | ApiSet: undefined
 */
export declare function overrideTrevorRage(voiceEffect: string): void;
/**
 * Overrides the vehicle's horn hash.
 * When changing this hash on a vehicle, [`_GET_VEHICLE_HORN_HASH`](#\_0xACB5DCCA1EC76840) will **not** return the 'overwritten' hash. It will still always return the default horn hash (same as [`GET_VEHICLE_DEFAULT_HORN`](#\_0x02165D55000219AC)).
 * List of possible hashes (found in decompiled scripts):
 * |        signed |     unsigned |      hex     |
 * |--------------:|-------------:|:------------:|
 * |  `1604822495` | `1604822495` | `0x5FA7A5DF` |
 * | `-1262465009` | `3032502287` | `0xB4C0500F` |
 * |  `-889553789` | `3405413507` | `0xCAFA7C83` |
 * | `-1557943086` | `2737024210` | `0xA323ACD2` |
 * | `-1318696617` | `2976270679` | `0xB1664957` |
 * |    `-7740003` | `4287227293` | `0xFF89E59D` |
 * | `-1815146967` | `2479820329` | `0x93CF0E29` |
 * |  `-339919356` | `3955047940` | `0xEBBD3E04` |
 * Hash: 0x3CDC1E622CCE0356 | ApiSet: undefined
 */
export declare function overrideVehHorn(vehicle: number | Vehicle, override: boolean, hornHash: number): void;
/**
 * Sets audio flag "OverrideMicrophoneSettings"
 * Allows the script to ovverride the current microphone settings
 * Hash: 0x75773E11BA459E90 | ApiSet: undefined
 */
export declare function overrideMicrophoneSettings(hash: number | string, toggle: boolean): void;
/**
 * To resume the conversation use [RESTART_SCRIPTED_CONVERSATION](#\_0x9AEB285D1818C9AC)
 * Hash: 0x8530AD776CD72B12 | ApiSet: undefined
 */
export declare function pauseScriptedConversation(finishCurrentLine: boolean): void;
/**
 * Sets the footstep tuning modes
 * Hash: 0xD2CC78CD3D0B50F9 | ApiSet: undefined
 */
export declare function overridePlayerGroundMaterial(overriddenMaterialHash: number | string, scriptOverrides: boolean): void;
/**
 * This native allows a scripter to override the current underwater stream.
 * It needs to be called before going into the water
 * It needs to also be called with OVERRIDE_UNDERWATER_STREAM("", false) in order to stop overriding.
 * Hash: 0xF2A9CDABCEA04BD6 | ApiSet: undefined
 */
export declare function overrideUnderwaterStream(override: boolean): string;
/**
 * Hash: 0xED640017ED337E45 | ApiSet: undefined
 */
export declare function playAmbientSpeechFromPositionNative(speechName: string, voiceName: string, position: Vector3, speechParam: string): void;
/**
 * Hash: 0xCADA5A0D0702381E | ApiSet: undefined
 */
export declare function playDeferredSoundFrontend(soundName: string, soundsetName: string): void;
/**
 * ```cpp
 * enum eAudAnimalType {
 * AUD_ANIMAL_NONE = -1,
 * AUD_ANIMAL_BOAR = 0,
 * AUD_ANIMAL_CHICKEN = 1,
 * AUD_ANIMAL_DOG = 2,
 * AUD_ANIMAL_DOG_ROTTWEILER = 3,
 * AUD_ANIMAL_HORSE = 4,
 * AUD_NUM_ANIMALS = 5
 * }
 * ```
 * Hash: 0xEE066C7006C49C0A | ApiSet: undefined
 */
export declare function playAnimalVocalization(pedHandle: number | Ped, animalType: number, speechName: string): void;
/**
 * Hash: 0xCD536C4D33DCC900 | ApiSet: undefined
 */
export declare function playEndCreditsMusic(bActive: boolean): void;
/**
 * See [`PLAY_PED_AMBIENT_SPEECH_NATIVE`](#\_0x8E04FEDD28D42462) for parameter specifications.
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * Hash: 0xC6941B4A3A8FBBB9 | ApiSet: undefined
 */
export declare function playPedAmbientSpeechAndCloneNative(ped: number | Ped, speechName: string, speechParam: string): void;
/**
 * This native had a 4th parameter added in newer game builds
 * `syncOverNetwork` creates a `CPedPlayPainEvent` when set to true, by default this variable is false.
 * You won't be able to use this for clones (remote pedestrians that are not owned by you) or migrating peds if `syncOverNetwork` is set to true; it simply won't execute.
 * The `ped` should also have speech for this to work.
 * ```cpp
 * enum eAudDamageReason {
 * AUD_DAMAGE_REASON_DEFAULT = 0,
 * AUD_DAMAGE_REASON_FALLING = 1,
 * AUD_DAMAGE_REASON_SUPER_FALLING = 2,
 * AUD_DAMAGE_REASON_SCREAM_PANIC = 3,
 * AUD_DAMAGE_REASON_SCREAM_PANIC_SHORT = 4,
 * AUD_DAMAGE_REASON_SCREAM_SCARED = 5,
 * AUD_DAMAGE_REASON_SCREAM_SHOCKED = 6,
 * AUD_DAMAGE_REASON_SCREAM_TERROR = 7,
 * AUD_DAMAGE_REASON_ON_FIRE = 8,
 * AUD_DAMAGE_REASON_DROWNING = 9,
 * // drowning on the surface of water, after we time out
 * AUD_DAMAGE_REASON_SURFACE_DROWNING = 10,
 * AUD_DAMAGE_REASON_INHALE = 11,
 * AUD_DAMAGE_REASON_EXHALE = 12,
 * AUD_DAMAGE_REASON_POST_FALL_GRUNT = 13,
 * AUD_DAMAGE_REASON_ENTERING_RAGDOLL_DEATH = 14,
 * AUD_DAMAGE_REASON_EXPLOSION = 15,
 * AUD_DAMAGE_REASON_MELEE = 16,
 * AUD_DAMAGE_REASON_SHOVE = 17,
 * AUD_DAMAGE_REASON_WHEEZE = 18,
 * AUD_DAMAGE_REASON_COUGH = 19,
 * AUD_DAMAGE_REASON_TAZER = 20,
 * AUD_DAMAGE_REASON_EXHAUSTION = 21,
 * AUD_DAMAGE_REASON_CLIMB_LARGE = 22,
 * AUD_DAMAGE_REASON_CLIMB_SMALL = 23,
 * AUD_DAMAGE_REASON_JUMP = 24,
 * AUD_DAMAGE_REASON_COWER = 25,
 * AUD_DAMAGE_REASON_WHIMPER = 26,
 * AUD_DAMAGE_REASON_DYING_MOAN = 27,
 * AUD_DAMAGE_REASON_CYCLING_EXHALE = 28,
 * AUD_DAMAGE_REASON_PAIN_RAPIDS = 29,
 * AUD_DAMAGE_REASON_SNEEZE = 30,
 * AUD_DAMAGE_REASON_MELEE_SMALL_GRUNT = 31,
 * AUD_DAMAGE_REASON_MELEE_LARGE_GRUNT = 32,
 * AUD_DAMAGE_REASON_POST_FALL_GRUNT_LOW = 33
 * }
 * ```
 * Hash: 0xBC9AE166038A5CEC | ApiSet: undefined
 */
export declare function playPain(ped: number | Ped, damageReason: number, rawDamage: number): void;
/**
 * ```
 * Called 38 times in the scripts. There are 5 different audioNames used.
 * One unknown removed below.
 * `AUDIO::PLAY_MISSION_COMPLETE_AUDIO("DEAD");`
 * `AUDIO::PLAY_MISSION_COMPLETE_AUDIO("FRANKLIN_BIG_01");`
 * `AUDIO::PLAY_MISSION_COMPLETE_AUDIO("GENERIC_FAILED");`
 * `AUDIO::PLAY_MISSION_COMPLETE_AUDIO("TREVOR_SMALL_01");`
 * ```
 * Hash: 0xB138AAB8A70D3C69 | ApiSet: undefined
 */
export declare function playMissionCompleteAudio(audioName: string): void;
/**
 * Plays ambient speech; see also [`PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE`](#\_0xC6941B4A3A8FBBB9).
 * ```
 * speechParam: Can be one of the following:
 * SPEECH_PARAMS_STANDARD
 * SPEECH_PARAMS_ALLOW_REPEAT
 * SPEECH_PARAMS_BEAT
 * SPEECH_PARAMS_FORCE
 * SPEECH_PARAMS_FORCE_FRONTEND
 * SPEECH_PARAMS_FORCE_NO_REPEAT_FRONTEND
 * SPEECH_PARAMS_FORCE_NORMAL
 * SPEECH_PARAMS_FORCE_NORMAL_CLEAR
 * SPEECH_PARAMS_FORCE_NORMAL_CRITICAL
 * SPEECH_PARAMS_FORCE_SHOUTED
 * SPEECH_PARAMS_FORCE_SHOUTED_CLEAR
 * SPEECH_PARAMS_FORCE_SHOUTED_CRITICAL
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY
 * SPEECH_PARAMS_MEGAPHONE
 * SPEECH_PARAMS_HELI
 * SPEECH_PARAMS_FORCE_MEGAPHONE
 * SPEECH_PARAMS_FORCE_HELI
 * SPEECH_PARAMS_INTERRUPT
 * SPEECH_PARAMS_INTERRUPT_SHOUTED
 * SPEECH_PARAMS_INTERRUPT_SHOUTED_CLEAR
 * SPEECH_PARAMS_INTERRUPT_SHOUTED_CRITICAL
 * SPEECH_PARAMS_INTERRUPT_NO_FORCE
 * SPEECH_PARAMS_INTERRUPT_FRONTEND
 * SPEECH_PARAMS_INTERRUPT_NO_FORCE_FRONTEND
 * SPEECH_PARAMS_ADD_BLIP
 * SPEECH_PARAMS_ADD_BLIP_ALLOW_REPEAT
 * SPEECH_PARAMS_ADD_BLIP_FORCE
 * SPEECH_PARAMS_ADD_BLIP_SHOUTED
 * SPEECH_PARAMS_ADD_BLIP_SHOUTED_FORCE
 * SPEECH_PARAMS_ADD_BLIP_INTERRUPT
 * SPEECH_PARAMS_ADD_BLIP_INTERRUPT_FORCE
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CLEAR
 * SPEECH_PARAMS_FORCE_PRELOAD_ONLY_SHOUTED_CRITICAL
 * SPEECH_PARAMS_SHOUTED
 * SPEECH_PARAMS_SHOUTED_CLEAR
 * SPEECH_PARAMS_SHOUTED_CRITICAL
 * Note: A list of Name and Parameters can be found here pastebin.com/1GZS5dCL
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * Hash: 0x8E04FEDD28D42462 | ApiSet: undefined
 */
export declare function playPedAmbientSpeechNative(ped: number | Ped, speechName: string, speechParam: string): void;
/**
 * ```
 * This is the same as PLAY_PED_AMBIENT_SPEECH_NATIVE and PLAY_PED_AMBIENT_SPEECH_AND_CLONE_NATIVE but it will allow you to play a speech file from a specific voice file. It works on players and all peds, even animals.
 * EX (C#):
 * GTA.Native.Function.Call(Hash._0x3523634255FC3318, Game.Player.Character, "GENERIC_INSULT_HIGH", "s_m_y_sheriff_01_white_full_01", "SPEECH_PARAMS_FORCE_SHOUTED", 0);
 * The first param is the ped you want to play it on, the second is the speech name, the third is the voice name, the fourth is the speech param, and the last param is usually always 0.
 * ```
 * Hash: 0x3523634255FC3318 | ApiSet: undefined
 */
export declare function playPedAmbientSpeechWithVoiceNative(ped: number | Ped, speechName: string, voiceName: string, speechParam: string, p4: boolean): void;
/**
 * ```
 * Plays the given police radio message.
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/GBnsQ5hr
 * ```
 * Hash: 0xDFEBD56D9BD1EB16 | ApiSet: undefined
 */
export declare function playPoliceReport(name: string, p1: number): number;
/**
 * ```
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/RFb4GTny
 * `AUDIO::PLAY_PED_RINGTONE("Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);`
 * `AUDIO::PLAY_PED_RINGTONE("Dial_and_Remote_Ring", PLAYER::PLAYER_PED_ID(), 1);`
 * ```
 * Hash: 0xF9E56683CA8E11A5 | ApiSet: undefined
 */
export declare function playPedRingtone(ringtoneName: string, ped: number | Ped, p2: boolean): void;
/**
 * ```
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/eeFc5DiW
 * gtaforums.com/topic/795622-audio-for-mods
 * ```
 * Hash: 0x8D8686B622B88120 | ApiSet: undefined
 */
export declare function playSoundFromCoord(soundId: number, audioName: string, position: Vector3, audioRef: string, isNetwork: boolean, range: number, p8: boolean): void;
/**
 * ```
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/A8Ny8AHZ
 * ```
 * Hash: 0x7FF4944CC209192D | ApiSet: undefined
 */
export declare function playSound(soundId: number, audioName: string, audioRef: string, p3: boolean, p4: any, p5: boolean): void;
/**
 * ```
 * List: https://pastebin.com/DCeRiaLJ
 * All occurrences as of Cayo Perico Heist DLC (b2189), sorted alphabetically and identical lines removed: https://git.io/JtLxM
 * ```
 * Hash: 0x67C540AA08E4A6F5 | ApiSet: undefined
 */
export declare function playSoundFrontend(soundId: number, audioName: string, audioRef: string, p3: boolean): void;
/**
 * Plays a preloaded stream back from the specified object.
 * Hash: 0xEBAA9B64D76356FD | ApiSet: undefined
 */
export declare function playStreamFromObject(object: any): void;
/**
 * ```
 * All found occurrences in b617d, sorted alphabetically and identical lines removed: pastebin.com/f2A7vTj0
 * No changes made in b678d.
 * gtaforums.com/topic/795622-audio-for-mods
 * ```
 * Hash: 0xE65F427EB70AB1ED | ApiSet: undefined
 */
export declare function playSoundFromEntity(soundId: number, audioName: string, entity: number | Entity, audioRef: string, isNetwork: boolean, p5: any): void;
/**
 * Plays a preloaded stream back from the specified ped.
 * Hash: 0x89049DD63C08B5D1 | ApiSet: undefined
 */
export declare function playStreamFromPed(ped: number | Ped): void;
/**
 * Plays a preloaded stream back from the specified Vector3.
 * Hash: 0x21442F412E8DE56B | ApiSet: undefined
 */
export declare function playStreamFromPosition(position: Vector3): void;
/**
 * Plays a preloaded stream back from the specified ped vehicle
 * Hash: 0xB70374A758007DFA | ApiSet: undefined
 */
export declare function playStreamFromVehicle(vehicle: number | Vehicle): void;
/**
 * Hash: 0x8B2FD4560E55DD2D | ApiSet: undefined
 */
export declare function playSynchronizedAudioEvent(sceneId: number): boolean;
/**
 * Hash: 0x58FCE43488F9F5F4 | ApiSet: undefined
 */
export declare function playStreamFrontend(): void;
/**
 * Hash: 0x62A456AA4769EF34 | ApiSet: undefined
 */
export declare function playVehicleDoorCloseSound(vehicle: number | Vehicle, doorIndex: number): void;
/**
 * Similar to [START_SCRIPT_CONVERSATION](#\_0x6B17C62C9635D2DC), except that is starts the conversation off paused.
 * A scripter can then kick off the conversation by calling [START_PRELOADED_CONVERSATION](#\_0x23641AFE870AF385).
 * If they want to check that the conversation is done preloading, they can use [GET_IS_PRELOADED_CONVERSATION_READY](#\_0xE73364DB90778FFA)
 * Hash: 0x3B3CAD6166916D87 | ApiSet: undefined
 */
export declare function preloadScriptConversation(displaySubtitles: boolean, addToBriefScreen: boolean, cloneConversation: boolean, interruptible: boolean): void;
/**
 * Request that we preload the required audio bank for a given vehicle model.
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0xCA4CEA6AE0000A7E | ApiSet: undefined
 */
export declare function preloadVehicleAudioBank(model: number | string): void;
/**
 * Hash: 0x6004BCB0E226AAEA | ApiSet: undefined
 */
export declare function preloadScriptPhoneConversation(displaySubtitles: boolean, addToBriefScreen: boolean): void;
/**
 * Prepares any banks required to play the given alarm
 * Hash: 0x9D74AE343DB65533 | ApiSet: undefined
 */
export declare function prepareAlarm(alarmName: string): boolean;
/**
 * Hash: 0x3A539D52857EA82D | ApiSet: undefined
 */
export declare function playVehicleDoorOpenSound(vehicle: number | Vehicle, doorIndex: number): void;
/**
 * Hash: 0xC7ABCACA4985A766 | ApiSet: undefined
 */
export declare function prepareSynchronizedAudioEvent(audioEvent: string, startOffsetMs: number): boolean;
/**
 * Prepares the specified music event. Preparing it in advance will preload any required data so that it's ready to play immediately.
 * Hash: 0x1E5185B72EF5158A | ApiSet: undefined
 */
export declare function prepareMusicEvent(eventName: string): boolean;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0xC6ED9D5092438D91 | ApiSet: undefined
 */
export declare function registerScriptWithAudio(inChargeOfAudio: boolean): void;
/**
 * Refreshes the closest shoreline using the nearest road position.
 * Hash: 0x5D2BFAAB8D956E0E | ApiSet: undefined
 */
export declare function refreshClosestOceanShoreline(): void;
/**
 * Unloads the specified audioBank
 * Hash: 0x77ED170667F50170 | ApiSet: undefined
 */
export declare function releaseNamedScriptAudioBank(audioBank: string): void;
/**
 * Hash: 0x029FE7CD1B7E2E75 | ApiSet: undefined
 */
export declare function prepareSynchronizedAudioEventForScene(sceneId: number): [boolean, string];
/**
 * This should be called once a sound has finished being manipulated by the script so that its SoundId can be released and re-used.
 * Hash: 0x353FC880830B88FA | ApiSet: undefined
 */
export declare function releaseSoundId(soundId: number): void;
/**
 * Creates a broken glass area
 * Hash: 0xFBE20329593DEC9D | ApiSet: undefined
 */
export declare function recordBrokenGlass(position: Vector3, radius: number): void;
/**
 * This native has been marked as deprecated internally, please use [RELEASE_SCRIPT_AUDIO_BANK](#\_0x7A2D8AD0A9EB9C3F) instead.
 * Hash: 0x0EC92A1BF0857187 | ApiSet: undefined
 */
export declare function releaseMissionAudioBank(): void;
/**
 * Removes an entity from its current mix group.
 * Hash: 0x18EB48CFC41F2EA0 | ApiSet: undefined
 */
export declare function removeEntityFromAudioMixGroup(entity: number | Entity, fadeOut: number): void;
/**
 * This native has been marked as deprecated internally, please use [RELEASE_SCRIPT_AUDIO_BANK](#\_0x7A2D8AD0A9EB9C3F) instead.
 * Hash: 0x65475A218FFAA93D | ApiSet: undefined
 */
export declare function releaseAmbientAudioBank(): void;
/**
 * ```
 * Found in the b617d scripts, duplicates removed:
 * `AUDIO::_B4BBFD9CD8B3922B("V_CARSHOWROOM_PS_WINDOW_UNBROKEN");`
 * `AUDIO::_B4BBFD9CD8B3922B("V_CIA_PS_WINDOW_UNBROKEN");`
 * `AUDIO::_B4BBFD9CD8B3922B("V_DLC_HEIST_APARTMENT_DOOR_CLOSED");`
 * `AUDIO::_B4BBFD9CD8B3922B("V_FINALEBANK_PS_VAULT_INTACT");`
 * `AUDIO::_B4BBFD9CD8B3922B("V_MICHAEL_PS_BATHROOM_WITH_WINDOW");`
 * ```
 * For events like cars driving through windows, allows script to unocclude that window
 * Hash: 0xB4BBFD9CD8B3922B | ApiSet: undefined
 */
export declare function removePortalSettingsOverride(portalSettingsName: string): void;
/**
 * Unloads all audio banks requested by this script.
 * Hash: 0x7A2D8AD0A9EB9C3F | ApiSet: undefined
 */
export declare function releaseScriptAudioBank(): void;
/**
 * Hash: 0xF54BB7B61036F335 | ApiSet: undefined
 */
export declare function resetPedAudioFlags(ped: number | Ped): void;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xCE4AC0439F607045 | ApiSet: undefined
 */
export declare function releaseWeaponAudio(): void;
/**
 * This native is marked as deprecated internally, please use [REQUEST_SCRIPT_AUDIO_BANK](#\_0x2F844A8B08D76685)
 * This native has a new argument on newer game builds:
 * *   **playerBits**:
 * Hash: 0x7345BDD95E62E0F2 | ApiSet: undefined
 */
export declare function requestMissionAudioBank(bankName: string, bOverNetwork: boolean): boolean;
/**
 * Restarts a conversation that was previously paused with [PAUSE_SCRIPTED_CONVERSATION](#\_0x8530AD776CD72B12)
 * Hash: 0x9AEB285D1818C9AC | ApiSet: undefined
 */
export declare function restartScriptedConversation(): void;
/**
 * This native has a new argument on newer game builds:
 * *   **playerBits**:
 * Hash: 0x2F844A8B08D76685 | ApiSet: undefined
 */
export declare function requestScriptAudioBank(bankName: string, bOverNetwork: boolean): boolean;
/**
 * This native is marked as deprecated internally, please use [REQUEST_SCRIPT_AUDIO_BANK](#\_0x2F844A8B08D76685)
 * This native has a new argument on newer game builds:
 * *   **playerBits**:
 * Hash: 0xFE02FFBED8CA9D99 | ApiSet: undefined
 */
export declare function requestAmbientAudioBank(bankName: string, bOverNetwork: boolean): boolean;
/**
 * Loads the tennis vocalization banks into a couple animal slots.
 * Hash: 0x4ADA3F19BE4A6047 | ApiSet: undefined
 */
export declare function requestTennisBanks(opponentPed: number | Ped): void;
/**
 * Clears the override set by [OVERRIDE_TREVOR_RAGE](#\_0x13AD665062541A7E)
 * Hash: 0xE78503B10C4314E0 | ApiSet: undefined
 */
export declare function resetTrevorRage(): void;
/**
 * Resets the override for [SET_VEHICLE_STARTUP_REV_SOUND](#\_0xF1F8157B8C3F171C)
 * Hash: 0xD2DCCD8E16E20997 | ApiSet: undefined
 */
export declare function resetVehicleStartupRevSound(vehicle: number | Vehicle): void;
/**
 * Overrides wind elevation sounds
 * Hash: 0x70B8EC8FC108A634 | ApiSet: undefined
 */
export declare function scriptOverridesWindElevation(override: boolean, windElevationHashName: number | string): void;
/**
 * Sets the specified ped to use a specific voice different to the one associated with their model.
 * Hash: 0x6C8065A3B780185B | ApiSet: undefined
 */
export declare function setAmbientVoiceName(ped: number | Ped, voiceName: string): void;
/**
 * Makes pedestrians sound their horn longer, faster and more agressive when they use their horn.
 * Hash: 0x395BF71085D1B1D9 | ApiSet: undefined
 */
export declare function setAggressiveHorns(toggle: boolean): void;
/**
 * Set a delay in milliseconds for the audio to be cleaned up when the script finishes.
 * Hash: 0xA5F377B175A699C5 | ApiSet: undefined
 */
export declare function setAudioScriptCleanupTime(timeMs: number): void;
/**
 * Sets the specified ped to use a specific voice different to the one associated with their model.
 * Hash: 0x9A53DED9921DE990 | ApiSet: undefined
 */
export declare function setAmbientVoiceNameHash(ped: number | Ped, hash: number | string): void;
/**
 * Hash: 0x9748FA4DE50CCE3E | ApiSet: undefined
 */
export declare function setAmbientZoneListState(zoneListName: string, enabled: boolean, forceUpdate: boolean): void;
/**
 * Hash: 0xF3638DAE8C4045E1 | ApiSet: undefined
 */
export declare function setAmbientZoneListStatePersistent(ambientZone: string, enabled: boolean, forceUpdate: boolean): void;
/**
 * Hash: 0xBDA07E5950085E46 | ApiSet: undefined
 */
export declare function setAmbientZoneState(enabled: boolean, forceUpdate: boolean): string;
/**
 * Hash: 0x1D6650420CEC9D3B | ApiSet: undefined
 */
export declare function setAmbientZoneStatePersistent(zoneName: string, enabled: boolean, forceUpdate: boolean): void;
/**
 * ```cpp
 * enum eAudAnimalMood {
 * AUD_ANIMAL_MOOD_ANGRY = 0,
 * AUD_ANIMAL_MOOD_PLAYFUL = 1,
 * AUD_ANIMAL_MOOD_NUM_MOODS = 2
 * }
 * ```
 * Hash: 0xCC97B29285B1DC3B | ApiSet: undefined
 */
export declare function setAnimalMood(animal: number | Ped, mood: number): void;
/**
 * Needs to be called every frame.
 * ```cpp
 * enum eAudSpecialEffectMode
 * {
 * kSpecialEffectModeNormal = 0,
 * kSpecialEffectModeUnderwater = 1,
 * kSpecialEffectModeStoned = 2,
 * kSpecialEffectModePauseMenu = 3,
 * kSpecialEffectModeSlowMotion = 4,
 * kSpecialEffectModeDrunkStage01 = 5,
 * kSpecialEffectModeDrunkStage02 = 6,
 * kSpecialEffectModeDrunkStage03 = 7,
 * NUM_AUDSPECIALEFFECTMODE
 * };
 * ```
 * Hash: 0x12561FCBB62D5B9C | ApiSet: undefined
 */
export declare function setAudioSpecialEffectMode(mode: number): void;
/**
 * Generic interface to toggle audio functionality, with auto-reset on script termination and support for multiple script threads
 * Flags used in game scripts:
 * | Flag Name | Description of Usage |
 * | ----- | -------- |
 * | ActivateSwitchWheelAudio | |
 * | AllowAmbientSpeechInSlowMo | |
 * | AllowCutsceneOverScreenFade | |
 * | AllowForceRadioAfterRetune | |
 * | AllowPainAndAmbientSpeechToPlayDuringCutscene | |
 * | AllowPlayerAIOnMission | |
 * | AllowPoliceScannerWhenPlayerHasNoControl | |
 * | AllowRadioDuringSwitch | |
 * | AllowRadioOverScreenFade | |
 * | AllowScoreAndRadio | |
 * | AllowScriptedSpeechInSlowMo | |
 * | AvoidMissionCompleteDelay | |
 * | DisableAbortConversationForDeathAndInjury | |
 * | DisableAbortConversationForRagdoll | |
 * | DisableBarks | |
 * | DisableFlightMusic | |
 * | DisableNPCHeadsetSpeechAttenuation | |
 * | DisableReplayScriptStreamRecording | |
 * | EnableHeadsetBeep | |
 * | EnableMissileLockWarningForAllVehicles | |
 * | ForceConversationInterrupt | |
 * | ForceSeamlessRadioSwitch | |
 * | ForceSniperAudio | |
 * | FrontendRadioDisabled | |
 * | HoldMissionCompleteWhenPrepared | |
 * | IsDirectorModeActive |  Allows you to play speech infinitely without any pauses like in Director Mode. |
 * | IsPlayerOnMissionForSpeech | |
 * | ListenerReverbDisabled | |
 * | LoadMPData | |
 * | MobileRadioInGame | |
 * | OnlyAllowScriptTriggerPoliceScanner | |
 * | PlayerOnDLCHeist4Island | |
 * | PlayMenuMusic | |
 * | PoliceScannerDisabled | |
 * | ScriptedConvListenerMaySpeak | |
 * | SpeechDucksScore | |
 * | SuppressPlayerScubaBreathing | |
 * | UseQuietSceneSoftVersion | |
 * | WantedMusicDisabled | |
 * | WantedMusicOnMission | |
 * ```
 * All flag IDs and hashes:
 * ID: 01 | Hash: 0x20A7858F
 * ID: 02 | Hash: 0xA11C2259
 * ID: 03 | Hash: 0x08DE4700
 * ID: 04 | Hash: 0x989F652F
 * ID: 05 | Hash: 0x3C9E76BA
 * ID: 06 | Hash: 0xA805FEB0
 * ID: 07 | Hash: 0x4B94EA26
 * ID: 08 | Hash: 0x803ACD34
 * ID: 09 | Hash: 0x7C741226
 * ID: 10 | Hash: 0x31DB9EBD
 * ID: 11 | Hash: 0xDF386F18
 * ID: 12 | Hash: 0x669CED42
 * ID: 13 | Hash: 0x51F22743
 * ID: 14 | Hash: 0x2052B35C
 * ID: 15 | Hash: 0x071472DC
 * ID: 16 | Hash: 0xF9928BCC
 * ID: 17 | Hash: 0x7ADBDD48
 * ID: 18 | Hash: 0xA959BA1A
 * ID: 19 | Hash: 0xBBE89B60
 * ID: 20 | Hash: 0x87A08871
 * ID: 21 | Hash: 0xED1057CE
 * ID: 22 | Hash: 0x1584AD7A
 * ID: 23 | Hash: 0x8582CFCB
 * ID: 24 | Hash: 0x7E5E2FB0
 * ID: 25 | Hash: 0xAE4F72DB
 * ID: 26 | Hash: 0x5D16D1FA
 * ID: 27 | Hash: 0x06B2F4B8
 * ID: 28 | Hash: 0x5D4CDC96
 * ID: 29 | Hash: 0x8B5A48BA
 * ID: 30 | Hash: 0x98FBD539
 * ID: 31 | Hash: 0xD8CB0473
 * ID: 32 | Hash: 0x5CBB4874
 * ID: 33 | Hash: 0x2E9F93A9
 * ID: 34 | Hash: 0xD93BEA86
 * ID: 35 | Hash: 0x92109B7D
 * ID: 36 | Hash: 0xB7EC9E4D
 * ID: 37 | Hash: 0xCABDBB1D
 * ID: 38 | Hash: 0xB3FD4A52
 * ID: 39 | Hash: 0x370D94E5
 * ID: 40 | Hash: 0xA0F7938F
 * ID: 41 | Hash: 0xCBE1CE81
 * ID: 42 | Hash: 0xC27F1271
 * ID: 43 | Hash: 0x9E3258EB
 * ID: 44 | Hash: 0x551CDA5B
 * ID: 45 | Hash: 0xCB6D663C
 * ID: 46 | Hash: 0x7DACE87F
 * ID: 47 | Hash: 0xF9DE416F
 * ID: 48 | Hash: 0x882E6E9E
 * ID: 49 | Hash: 0x16B447E7
 * ID: 50 | Hash: 0xBD867739
 * ID: 51 | Hash: 0xA3A58604
 * ID: 52 | Hash: 0x7E046BBC
 * ID: 53 | Hash: 0xD95FDB98
 * ID: 54 | Hash: 0x5842C0ED
 * ID: 55 | Hash: 0x285FECC6
 * ID: 56 | Hash: 0x9351AC43
 * ID: 57 | Hash: 0x50032E75
 * ID: 58 | Hash: 0xAE6D0D59
 * ID: 59 | Hash: 0xD6351785
 * ID: 60 | Hash: 0xD25D71BC
 * ID: 61 | Hash: 0x1F7F6423
 * ID: 62 | Hash: 0xE24C3AA6
 * ID: 63 | Hash: 0xBFFDD2B7
 * ```
 * Hash: 0xB9EFD5C25018725A | ApiSet: undefined
 */
export declare function setAudioFlag(flagName: string, toggle: boolean): void;
/**
 * Hash: 0xEF21A9EF089A2668 | ApiSet: undefined
 */
export declare function setAudioSceneVariable(scene: string, variableName: string, value: number): void;
/**
 * Sets whether or not scripted conversation flow should be controlled by anim triggers
 * Hash: 0x0B568201DD99F0EB | ApiSet: undefined
 */
export declare function setConversationAudioControlledByAnim(enable: boolean): void;
/**
 * Sets the priority for the given vehicle. This is a hint for the audio system as to what LOD the
 * vehicle should use.
 * 'High' priority will bump up the activation range significantly and prevent it
 * from dropping when the vehicle is not within the view frustrum.
 * 'Max' will attempt to keep the vehicle at maximum LOD regardless of how far it is from the listener or what it is currently doing. Be careful with this!
 * There is a hard limit of 5 simulataneous granular cars (including the player) so we are quite limited on the number
 * we can play at once, so setting vehicles to max priority will reduce the number of engines availble for regular NPC vehicles
 * ```cpp
 * enum eAudVehiclePriority {
 * AUDIO_VEHICLE_PRIORITY_NORMAL = 0,
 * AUDIO_VEHICLE_PRIORITY_MEDIUM = 1,
 * AUDIO_VEHICLE_PRIORITY_MAX = 2,
 * AUDIO_VEHICLE_PRIORITY_HIGH = 3,
 * }
 * ```
 * Hash: 0xE5564483E407F914 | ApiSet: undefined
 */
export declare function setAudioVehiclePriority(vehicle: number | Vehicle, priority: number): void;
/**
 * Used to determine whether conversation should use robot speech or not
 * Hash: 0x61631F5DF50D1C34 | ApiSet: undefined
 */
export declare function setConversationAudioPlaceholder(isPlaceHolder: boolean): void;
/**
 * ```
 * All occurrences found in b617d, sorted alphabetically and identical lines removed:
 * `AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_AK");`
 * `AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_CUSTOM");`
 * `AUDIO::SET_CUTSCENE_AUDIO_OVERRIDE("_TOOTHLESS");`
 * ```
 * Add a suffix to the cutscene audio name. Call before loading the cutscene.
 * Hash: 0x3B4BF5F0859204D9 | ApiSet: undefined
 */
export declare function setCutsceneAudioOverride(name: string): void;
/**
 * Queues up a custom track list on the specified radio station. The content in the track list will be played as soon as possible.
 * The station does not have to be frozen.
 * Hash: 0x4E404A9361F75BB2 | ApiSet: undefined
 */
export declare function setCustomRadioTrackList(radioStation: string, trackListName: string, forceNow: boolean): void;
/**
 * Allows the radio to be played in the frontend.
 * Hash: 0xF7F26C6E9CC9EBB8 | ApiSet: undefined
 */
export declare function setFrontendRadioActive(active: boolean): void;
/**
 * Retunes a named static emitter to the specified station
 * Hash: 0xACF57305B12AF907 | ApiSet: undefined
 */
export declare function setEmitterRadioStation(emitterName: string, radioStation: string): void;
/**
 * Sets the global radio signal level, lower value will cause radio static.
 * Used only a handful of times in scripts.
 * Hash: 0x159B7318403A1CD8 | ApiSet: undefined
 */
export declare function setGlobalRadioSignalLevel(signalLevel: number): void;
/**
 * Hash: 0x892B6AB8F33606F5 | ApiSet: undefined
 */
export declare function setEntityForNullConvPed(speakerConversationIndex: number, entity: number | Entity): void;
/**
 * Hash: 0x88795F13FACDA88D | ApiSet: undefined
 */
export declare function setInitialPlayerStation(radioStation: string): void;
/**
 * Hash: 0x3BD3F52BA9B1E4E8 | ApiSet: undefined
 */
export declare function setGpsActive(active: boolean): void;
/**
 * Hash: 0xA5342D390CDA41D6 | ApiSet: undefined
 */
export declare function setPedAudioGender(ped: number | Ped, p1: boolean): void;
/**
 * Hash: 0xBF286C554784F3DF | ApiSet: undefined
 */
export declare function setMobilePhoneRadioState(state: boolean): void;
/**
 * ```
 * If this is the correct name, what microphone? I know your TV isn't going to reach out and adjust your headset so..
 * ```
 * Hash: 0xB6AE90EDDE95C762 | ApiSet: undefined
 */
export declare function setMicrophonePosition(p0: boolean, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number): void;
/**
 * Hash: 0x76D683C108594D0E | ApiSet: undefined
 */
export declare function setHornEnabled(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Sets the ped so they sound drunk
 * Hash: 0x95D2D383D5396B8A | ApiSet: undefined
 */
export declare function setPedIsDrunk(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x29DA3CA8D8B2692D | ApiSet: undefined
 */
export declare function setPedClothEventsEnabled(ped: number | Ped, enabled: boolean): void;
/**
 * Hash: 0x1098355A16064BB3 | ApiSet: undefined
 */
export declare function setMobileRadioEnabledDuringGameplay(toggle: boolean): void;
/**
 * ```
 * Enables/disables ped's "loud" footstep sound.
 * ```
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x0653B735BFBDFE87 | ApiSet: undefined
 */
export declare function setPedAudioFootstepLoud(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * From the scripts:
 * `AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("PAIGE_PVG"));`
 * `AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("TALINA_PVG"));`
 * `AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_BLACK_PVG"));`
 * `AUDIO::_SET_PED_VOICE_GROUP(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("FEMALE_LOST_WHITE_PVG"));`
 * ```
 * Hash: 0x7CDC8C3B89F661B3 | ApiSet: undefined
 */
export declare function setPedVoiceGroup(ped: number | Ped, voiceGroupHash: number | string): void;
/**
 * Calls the same internal function [`_SET_PED_VOICE_GROUP`](#\_0x7CDC8C3B89F661B3) calls, but passes `voiceGroupHash` (defined as a parameter in the referenced native) as `0`.
 * Hash: 0x40CF0D12D142A9E8 | ApiSet: undefined
 */
export declare function setPedVoiceFull(ped: number | Ped): void;
/**
 * ```
 * Dat151RelType == 29
 * ```
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x0BABC1345ABBFB16 | ApiSet: undefined
 */
export declare function setPedVoiceGroupRace(ped: number | Ped, voiceGroupHash: number | string): void;
/**
 * Hash: 0x1B7ABE26CBCBF8C7 | ApiSet: undefined
 */
export declare function setPedRaceAndVoiceGroup(ped: number | Ped, pedRace: number, pvgHash: number): void;
/**
 * Hash: 0x33E3C6C6F2F0B506 | ApiSet: undefined
 */
export declare function setPositionForNullConvPed(speakerConversationIndex: number, position: Vector3): void;
/**
 * Enable player vehicle specific alarm disarm/arm sound triggering
 * Hash: 0x6FDDAD856E36988A | ApiSet: undefined
 */
export declare function setPlayerVehicleAlarmAudioActive(vehicle: number | Vehicle, active: boolean): void;
/**
 * Hash: 0x044DBAD7A7FA2BE5 | ApiSet: undefined
 */
export declare function setPortalSettingsOverride(oldPortalSettingsName: string, newPortalSettingsName: string): void;
/**
 * Overrides the calculated ped density that is used to modulate the ambient ped walla sounds (in exteriors only)
 * If you want to use this for interiors, use [SET_PED_INTERIOR_WALLA_DENSITY](#\_0x8BF907833BE275DE)
 * Hash: 0x149AEE66F0CB3A99 | ApiSet: undefined
 */
export declare function setPedWallaDensity(density: number, applyValue: number): void;
/**
 * Hash: 0xDA07819E452FFE8F | ApiSet: undefined
 */
export declare function setPositionedPlayerVehicleRadioEmitterEnabled(enabled: boolean): void;
/**
 * Sets a player ped to use his ANGRY speech contexts
 * Hash: 0xEA241BB04110F091 | ApiSet: undefined
 */
export declare function setPlayerAngry(ped: number | Ped, isAngry: boolean): void;
/**
 * Hash: 0xC1AA9F53CE982990 | ApiSet: undefined
 */
export declare function setRadioAutoUnfreeze(toggle: boolean): void;
/**
 * Sets the radio to tune up. (changes radio station)
 * Hash: 0xFF266D1D0EB1195D | ApiSet: undefined
 */
export declare function setRadioRetuneUp(): void;
/**
 * Doesn't have an effect in Story Mode.
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x4CAFEBFA21EC188D | ApiSet: undefined
 */
export declare function setRadioStationIsVisible(radioStation: string, toggle: boolean): void;
/**
 * Hash: 0x2C96CDB04FCA358E | ApiSet: undefined
 */
export declare function setRadioFrontendFadeTime(fadeTime: number): void;
/**
 * ```
 * Sets radio station by index.
 * ```
 * Hash: 0xA619B168B8A8570F | ApiSet: undefined
 */
export declare function setRadioToStationIndex(radioStation: number): void;
/**
 * Find the radio station list [here](https://gist.github.com/4mmonium/b47d6512a2d992cbf4eea15d9038b581)
 * Hash: 0xC69EDA28699D5107 | ApiSet: undefined
 */
export declare function setRadioToStationName(stationName: string): void;
/**
 * Sets radio to tune down. (Changes radio station)
 * Hash: 0xDD6BCF9E94425DF9 | ApiSet: undefined
 */
export declare function setRadioRetuneDown(): void;
/**
 * ```
 * Only found this one in the decompiled scripts:
 * `AUDIO::SET_RADIO_TRACK("RADIO_03_HIPHOP_NEW", "ARM1_RADIO_STARTS");`
 * ```
 * Hash: 0xB39786F201FEE30B | ApiSet: undefined
 */
export declare function setRadioTrack(radioStation: string, radioTrack: string): void;
/**
 * Hash: 0x06C0023BED16DD6B | ApiSet: undefined
 */
export declare function setScriptUpdateDoorAudio(doorHash: number | string, toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xF584CF8529B51434 | ApiSet: undefined
 */
export declare function setSirenKeepOn(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * 6 calls in the b617d scripts, removed identical lines:
 * `AUDIO::SET_RADIO_STATION_MUSIC_ONLY("RADIO_01_CLASS_ROCK", 1);`
 * `AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 0);`
 * `AUDIO::SET_RADIO_STATION_MUSIC_ONLY(AUDIO::GET_RADIO_STATION_NAME(10), 1);`
 * ```
 * Hash: 0x774BD811F656A122 | ApiSet: undefined
 */
export declare function setRadioStationMusicOnly(radioStation: string, toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x2CB0075110BE1E56 | ApiSet: undefined
 */
export declare function setRadioTrackMix(radioStationName: string, mixName: string, p2: number): void;
/**
 * ```
 * Example:
 * `AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_01_STAGE", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_02_MAIN_ROOM", false);    AUDIO::SET_STATIC_EMITTER_ENABLED((Any*)"LOS_SANTOS_VANILLA_UNICORN_03_BACK_ROOM", false);`
 * This turns off surrounding sounds not connected directly to peds.
 * ```
 * Hash: 0x399D2D3B33F1B8EB | ApiSet: undefined
 */
export declare function setStaticEmitterEnabled(emitterName: string, toggle: boolean): void;
/**
 * Hash: 0x1FEF0683B96EBCF2 | ApiSet: undefined
 */
export declare function setSirenWithNoDriver(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * SET_VARIABLE_ON_*
 * ```
 * Hash: 0xBCC29F935ED07688 | ApiSet: undefined
 */
export declare function setVariableOnCutsceneAudio(variableName: string, value: number): void;
/**
 * Hash: 0xAD6B3148A78AE9B6 | ApiSet: undefined
 */
export declare function setVariableOnSound(soundId: number, variableName: string, value: number): void;
/**
 * ```
 * From the scripts, p0:
 * "ArmWrestlingIntensity",
 * "INOUT",
 * "Monkey_Stream",
 * "ZoomLevel"
 * ```
 * Hash: 0x2F9D3834AEB9EF79 | ApiSet: undefined
 */
export declare function setVariableOnStream(p0: string, p1: number): void;
/**
 * Hash: 0x19F21E63AE6EAE4E | ApiSet: undefined
 */
export declare function setUserRadioControlEnabled(toggle: boolean): void;
/**
 * ```
 * `AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 1.0);`
 * `AUDIO::SET_VARIABLE_ON_UNDER_WATER_STREAM("inTunnel", 0.0);`
 * ```
 * Hash: 0x733ADF241531E5C2 | ApiSet: undefined
 */
export declare function setVariableOnUnderWaterStream(variableName: string, value: number): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x3E45765F3FBB582F | ApiSet: undefined
 */
export declare function setVehHasRadioOverride(vehicle: number | Vehicle): void;
/**
 * Vehicle will make a 'rattling' noise when decelerating
 * Hash: 0x01BB4D577D38BD9E | ApiSet: undefined
 */
export declare function setVehicleAudioBodyDamageFactor(vehicle: number | Vehicle, intensity: number): void;
/**
 * Find the radio station list [here](https://gist.github.com/4mmonium/b47d6512a2d992cbf4eea15d9038b581)
 * Hash: 0x1B9C0099CB942AC6 | ApiSet: undefined
 */
export declare function setVehRadioStation(vehicle: number | Vehicle, radioStation: string): void;
/**
 * Hash: 0x59E7B488451F4D3A | ApiSet: undefined
 */
export declare function setVehicleAudioEngineDamageFactor(vehicle: number | Vehicle, damageFactor: number): void;
/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * Hash: 0x0350E7E17BA767D0 | ApiSet: undefined
 */
export declare function setVehicleHornVariation(vehicle: number | Vehicle, value: number): void;
/**
 * ```
 * SET_VEHICLE_BOOST_ACTIVE(vehicle, 1, 0);
 * SET_VEHICLE_BOOST_ACTIVE(vehicle, 0, 0);
 * Will give a boost-soundeffect.
 * ```
 * Hash: 0x4A04DE7CAB2739A1 | ApiSet: undefined
 */
export declare function setVehicleBoostActive(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * can't seem to enable radio on cop cars etc
 * ```
 * Hash: 0x3B988190C0AA6C0B | ApiSet: undefined
 */
export declare function setVehicleRadioEnabled(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Toggles the incoming missile warning system for specified vehicle.
 * Hash: 0xF3365489E0DD50F9 | ApiSet: undefined
 */
export declare function setVehicleMissileWarningEnabled(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Overrides the vehicle's startup engine rev sound.
 * You can reset this with [RESET_VEHICLE_STARTUP_REV_SOUND](#\_0xD2DCCD8E16E20997)
 * Hash: 0xF1F8157B8C3F171C | ApiSet: undefined
 */
export declare function setVehicleStartupRevSound(vehicle: number | Vehicle, soundName: string, setName: string): void;
/**
 * Hash: 0xBB6F1CAEC68B0BCE | ApiSet: undefined
 */
export declare function setVehicleRadioLoud(vehicle: number | Vehicle, loud: boolean): void;
/**
 * Hash: 0x9663FE6B7A61EB00 | ApiSet: undefined
 */
export declare function skipToNextScriptedConversationLine(): void;
/**
 * Hash: 0x6DDBBDD98E2E9C25 | ApiSet: undefined
 */
export declare function skipRadioForward(): void;
/**
 * ```
 * Used to prepare a scene where the surrounding sound is muted or a bit changed. This does not play any sound.
 * List of all usable scene names found in b617d. Sorted alphabetically and identical names removed: pastebin.com/MtM9N9CC
 * ```
 * Hash: 0x013A80FC08F6E4F2 | ApiSet: undefined
 */
export declare function startAudioScene(scene: string): boolean;
/**
 * For use with [PRELOAD_SCRIPT_CONVERSATION](#\_0x3B3CAD6166916D87) and [GET_IS_PRELOADED_CONVERSATION_READY](#\_0xE73364DB90778FFA)
 * Hash: 0x23641AFE870AF385 | ApiSet: undefined
 */
export declare function startPreloadedConversation(): void;
/**
 * ```
 * SET_*
 * ```
 * Hash: 0x9C11908013EA4715 | ApiSet: undefined
 */
export declare function soundVehicleHornThisFrame(vehicle: number | Vehicle): void;
/**
 * You should call [PREPARE_ALARM](#\_0x9D74AE343DB65533) and wait for its value to be true before using this
 * Hash: 0x0355EF116C4C97B2 | ApiSet: undefined
 */
export declare function startAlarm(alarmName: string, skipStartup: boolean): void;
/**
 * Hash: 0x6B17C62C9635D2DC | ApiSet: undefined
 */
export declare function startScriptConversation(displaySubtitles: boolean, addToBriefScreen: boolean, cloneConversation: boolean, interruptible: boolean): void;
/**
 * Hash: 0x2F794A877ADD4C92 | ApiSet: undefined
 */
export declare function stopAllAlarms(instantStop: boolean): void;
/**
 * Hash: 0x252E5F915EABB675 | ApiSet: undefined
 */
export declare function startScriptPhoneConversation(displaySubtitles: boolean, addToBriefScreen: boolean): void;
/**
 * Hash: 0xA1CADDCD98415A41 | ApiSet: undefined
 */
export declare function stopAlarm(alarmName: string, instantStop: boolean): void;
/**
 * Stops the named mixing scene (which was previously started by this script)
 * Hash: 0xDFE8422B3B94E688 | ApiSet: undefined
 */
export declare function stopAudioScene(sceneName: string): void;
/**
 * Stops audio for the current cutscene.
 * Hash: 0x806058BBDC136E06 | ApiSet: undefined
 */
export declare function stopCutsceneAudio(): void;
/**
 * Stops all mixed scenes which were previously started by this script
 * Hash: 0xBAC7FC81A75EC1A1 | ApiSet: undefined
 */
export declare function stopAudioScenes(): void;
/**
 * Stops currently playing ambient speech.
 * Hash: 0xB8BEC0CA6F0EDB0F | ApiSet: undefined
 */
export declare function stopCurrentPlayingAmbientSpeech(ped: number | Ped): void;
/**
 * Stops currently playing speech (Pain, ambient, scripted, breathing).
 * Hash: 0x7A73D05A607734C7 | ApiSet: undefined
 */
export declare function stopCurrentPlayingSpeech(ped: number | Ped): void;
/**
 * This doesn't stop a piece of dialogue that has been triggered.
 * This stops the ability to force ambient dialogue if set to true - however setting it to false, then triggering a context, then setting it to true again will allow this.
 * The ped will also be prevented from speaking on remote machines. Use [STOP_PED_SPEAKING](#\_0x9D64D7405520E3D3) if you just want to affect the local machine.
 * Hash: 0xAB6781A5F3101470 | ApiSet: undefined
 */
export declare function stopPedSpeakingSynced(ped: number | Ped, shouldDisable: boolean): void;
/**
 * Stops a ped's ringtone from playing
 * Hash: 0x6C5AE23EFA885092 | ApiSet: undefined
 */
export declare function stopPedRingtone(ped: number | Ped): void;
/**
 * Hash: 0xD79DEEFB53455EBA | ApiSet: undefined
 */
export declare function stopScriptedConversation(finishCurrentLine: boolean): number;
/**
 * This doesn't stop a piece of dialogue that has been triggered.
 * This stops the ability to force ambient dialogue if set to true - however setting it to false, then triggering a context, then setting it to true again will allow this.
 * Nb. This does not sync over the network, it will only affect peds locally. Use [STOP_PED_SPEAKING_SYNCED](#\_0xAB6781A5F3101470) if you need to affect peds on other machines too.
 * Hash: 0x9D64D7405520E3D3 | ApiSet: undefined
 */
export declare function stopPedSpeaking(ped: number | Ped, shouldDisable: boolean): void;
/**
 * Stops all smoke grenade sounds
 * Hash: 0xE4E6DD5566D28C82 | ApiSet: undefined
 */
export declare function stopSmokeGrenadeExplosionSounds(): void;
/**
 * Stops the sound from currently playing, there isn't a way to resume a sound
 * after stopping it.
 * Hash: 0xA3B0C41BA5CC0BB5 | ApiSet: undefined
 */
export declare function stopSound(soundId: number): void;
/**
 * Hash: 0xA4718A1419D18151 | ApiSet: undefined
 */
export declare function stopStream(): void;
/**
 * ... When not in a vehicle
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x66C3FB05206041BA | ApiSet: undefined
 */
export declare function triggerSiren(vehicle: number | Vehicle): void;
/**
 * Hash: 0x92D6A88E64A94430 | ApiSet: undefined
 */
export declare function stopSynchronizedAudioEvent(p0: any): boolean;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Removes all instances of a given context block.
 * Hash: 0x2ACABED337622DF2 | ApiSet: undefined
 */
export declare function unblockSpeechContextGroup(groupName: string): void;
/**
 * ```
 * List of all usable event names found in b617d used with this native. Sorted alphabetically and identical names removed: pastebin.com/RzDFmB1W
 * All music event names found in the b617d scripts: pastebin.com/GnYt0R3P
 * ```
 * Hash: 0x706D57B0F50DA710 | ApiSet: undefined
 */
export declare function triggerMusicEvent(eventName: string): boolean;
/**
 * Hash: 0xFC00454CF60B91DD | ApiSet: undefined
 */
export declare function unfreezeRadioStation(radioStation: string): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * ```
 * On last-gen this just runs blr and this func is called by several other functions other then the native's table.
 * ```
 * Hash: 0xA8638BE228D4751A | ApiSet: undefined
 */
export declare function unregisterScriptWithAudio(): void;
/**
 * Hash: 0xB165AB7C248B2DC1 | ApiSet: undefined
 */
export declare function unlockMissionNewsStory(newsStory: number): void;
/**
 * ```
 * `AUDIO::UNLOCK_RADIO_STATION_TRACK_LIST("RADIO_16_SILVERLAKE", "MIRRORPARK_LOCKED");`
 * ```
 * Hash: 0x031ACB6ABA18C729 | ApiSet: undefined
 */
export declare function unlockRadioStationTrackList(radioStation: string, trackListName: string): void;
/**
 * Updates a playing sounds absolute position.
 * Hash: 0x7EC3C679D0E7E46B | ApiSet: undefined
 */
export declare function updateSoundCoord(soundId: number, position: Vector3): void;
/**
 * Allows script to trigger a sweetener footstep sound
 * Hash: 0xBF4DC1784BE94DFA | ApiSet: undefined
 */
export declare function useFootstepScriptSweeteners(ped: number | Ped, useSweetner: boolean, soundSetHash: number | string): void;
/**
 * Unlocks any available DJ radio tracks based on the tuneable status
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x47AED84213A47510 | ApiSet: undefined
 */
export declare function updateUnlockableDjRadioTracks(allowTrackReprioritization: boolean): void;
/**
 * Unloads tennis vocalization banks loaded with [`REQUEST_TENNIS_BANKS`](#\_0x4ADA3F19BE4A6047).
 * Hash: 0x0150B6FF25A9E2E5 | ApiSet: undefined
 */
export declare function unrequestTennisBanks(): void;
/**
 * Hash: 0xFA932DE350266EF8 | ApiSet: undefined
 */
export declare function useSirenAsHorn(vehicle: number | Vehicle, sirenAsHorn: boolean): void;
/**
 * Hash: 0xC8CA9670B9D83B3B | ApiSet: undefined
 */
export declare function advanceClockTimeTo(hour: number, minute: number, second: number): void;
/**
 * Hash: 0x3D10BC92A4DB1D35 | ApiSet: undefined
 */
export declare function getClockDayOfMonth(): number;
/**
 * Hash: 0xD716F30D8C8980E2 | ApiSet: undefined
 */
export declare function addToClockTime(hours: number, minutes: number, seconds: number): void;
/**
 * ```
 * Gets the current day of the week.
 * 0: Sunday
 * 1: Monday
 * 2: Tuesday
 * 3: Wednesday
 * 4: Thursday
 * 5: Friday
 * 6: Saturday
 * ```
 * Hash: 0xD972E4BD7AEB235F | ApiSet: undefined
 */
export declare function getClockDayOfWeek(): number;
/**
 * ```
 * Gets the current ingame hour, expressed without zeros. (09:34 will be represented as 9)
 * ```
 * Hash: 0x25223CA6B4D20B7F | ApiSet: undefined
 */
export declare function getClockHours(): number;
/**
 * ```
 * Gets the current ingame clock minute.
 * ```
 * Hash: 0x13D2B8ADD79640F2 | ApiSet: undefined
 */
export declare function getClockMinutes(): number;
/**
 * Hash: 0x961777E64BDAF717 | ApiSet: undefined
 */
export declare function getClockYear(): number;
/**
 * Hash: 0xBBC72712E80257A1 | ApiSet: undefined
 */
export declare function getClockMonth(): number;
/**
 * ```
 * Gets the current ingame clock second. Note that ingame clock seconds change really fast since a day in GTA is only 48 minutes in real life.
 * ```
 * Hash: 0x494E97C2EF27C470 | ApiSet: undefined
 */
export declare function getClockSeconds(): number;
/**
 * Returns how many real ms are equal to one game minute.
 * A getter for [`SetMillisecondsPerGameMinute`](#\_0x36CA2554).
 * Hash: 0x2F8B4D1C595B11DB | ApiSet: undefined
 */
export declare function getMillisecondsPerGameMinute(): number;
/**
 * ```
 * Gets local system time as year, month, day, hour, minute and second.
 * Example usage:
 * int year;
 * int month;
 * int day;
 * int hour;
 * int minute;
 * int second;
 * `or use std::tm struct`
 * `TIME::GET_LOCAL_TIME(&year, &month, &day, &hour, &minute, &second);`
 * ```
 * Hash: 0x50C7A99057A69748 | ApiSet: undefined
 */
export declare function getLocalTime(): [number, number, number, number, number, number];
/**
 * ```
 * Gets system time as year, month, day, hour, minute and second.
 * Example usage:
 * int year;
 * int month;
 * int day;
 * int hour;
 * int minute;
 * int second;
 * `TIME::GET_POSIX_TIME(&year, &month, &day, &hour, &minute, &second);`
 * ```
 * Hash: 0xDA488F299A5B164E | ApiSet: undefined
 */
export declare function getPosixTime(): [number, number, number, number, number, number];
/**
 * Hash: 0x4055E40BD2DBEC1D | ApiSet: undefined
 */
export declare function pauseClock(toggle: boolean): void;
/**
 * ```
 * Gets current UTC time
 * ```
 * Hash: 0x8117E09A19EEF4D3 | ApiSet: undefined
 */
export declare function getUtcTime(): [number, number, number, number, number, number];
/**
 * Hash: 0xB096419DF0D06CE7 | ApiSet: undefined
 */
export declare function setClockDate(day: number, month: number, year: number): void;
/**
 * ```
 * SET_CLOCK_TIME(12, 34, 56);
 * ```
 * Hash: 0x47C3B5848C3E45D8 | ApiSet: undefined
 */
export declare function setClockTime(hour: number, minute: number, second: number): void;
/**
 * Returns when it is safe to start applying changes to cutscene entities.
 * Should always be used for applying components.
 * See [`SET_CUTSCENE_PED_COMPONENT_VARIATION_FROM_PED`](#\_0x2A56C06EBEF2B0D9) and [`REGISTER_ENTITY_FOR_CUTSCENE`](#\_0xE40C1C56DF95C2E8) for an example.
 * This will be true before the cutscene is considered loaded
 * Hash: 0xB56BBBCC2955D9CB | ApiSet: undefined
 */
export declare function canRequestAssetsForCutsceneEntity(): boolean;
/**
 * Whether or not it is safe to run functions on the camera,
 * as the camera is now no longer being used by the cutscene.
 * Hash: 0xB2CBCD0930DFB420 | ApiSet: undefined
 */
export declare function canSetExitStateForCamera(p0: boolean): boolean;
/**
 * ```
 * modelHash (p1) was always 0 in R* scripts
 * ```
 * Hash: 0x645D0B458D8E17B5 | ApiSet: undefined
 */
export declare function canSetEnterStateForRegisteredEntity(cutsceneEntName: string, modelHash: number | string): boolean;
/**
 * Returns if the script can begin interacting with the registered entity. Primarly used for lead-outs of cutscenes.
 * Returns on frame after cutscene ends, so you cannot get is while using IsCutsceneActive()
 * Whether it is safe to start doing scripted actions on the entity, like simulating walking out of a cutscene.
 * Hash: 0x4C6A6451C79E4662 | ApiSet: undefined
 */
export declare function canSetExitStateForRegisteredEntity(cutsceneEntName: string, modelHash: number | string): boolean;
/**
 * Hash: 0x0ABC54DE641DC0FC | ApiSet: undefined
 */
export declare function getCutFileNumSections(cutsceneName: string): number;
/**
 * Returns the time of the cutscene's end accounting for [`REQUEST_CUTSCENE_WITH_PLAYBACK_LIST`](#\_0xC23DE0E91C30B58C)
 * If a cutscene is laid out with 10 second sections, and section 0 and 1 are enabled then it would be 20000ms.
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x971D7B15BCDBEF99 | ApiSet: undefined
 */
export declare function getCutsceneEndTime(): number;
/**
 * Hash: 0x499EF20C5DB25C59 | ApiSet: undefined
 */
export declare function doesCutsceneEntityExist(cutsceneEntName: string, modelHash: number | string): boolean;
/**
 * Hash: 0x49010A6A396553D8 | ApiSet: undefined
 */
export declare function getCutsceneSectionPlaying(): number;
/**
 * Gets the current time of the cutscene.
 * ```
 * NativeDB Introduced: v3258
 * ```
 * Hash: 0x710286BC5EF4D6E1 | ApiSet: undefined
 */
export declare function getCutscenePlayTime(): number;
/**
 * Gets the elapsed time of the current cutscene in
 * Hash: 0xE625BEABBAFFDAB9 | ApiSet: undefined
 */
export declare function getCutsceneTime(): number;
/**
 * Gets the total length of the cutscene irrespective of playback list in milliseconds
 * To account for sections, see [`_GET_CUTSCENE_END_TIME`](#\_0x971D7B15BCDBEF99)
 * Hash: 0xEE53B14A19E480D4 | ApiSet: undefined
 */
export declare function getCutsceneTotalDuration(): number;
/**
 * Hash: 0x708BDD8CD795B043 | ApiSet: undefined
 */
export declare function hasCutsceneCutThisFrame(): boolean;
/**
 * Hash: 0xC0741A26499654CD | ApiSet: undefined
 */
export declare function getEntityIndexOfRegisteredEntity(cutsceneEntName: string, modelHash: number | string): number;
/**
 * Returns the handle of a cutscene entity, can be ped
 * Hash: 0x0A2E9FDB9A8C62F6 | ApiSet: undefined
 */
export declare function getEntityIndexOfCutsceneEntity(cutsceneEntName: string, modelHash: number | string): number;
/**
 * ```
 * Simply checks if the cutscene has loaded and doesn't check via CutSceneManager as opposed to HAS_[THIS]_CUTSCENE_LOADED.
 * ```
 * Hash: 0xA1C996C2A744262E | ApiSet: undefined
 */
export declare function hasCutFileLoaded(cutsceneName: string): boolean;
/**
 * Hash: 0x228D3D94F8A11C3C | ApiSet: undefined
 */
export declare function hasThisCutsceneLoaded(cutsceneName: string): boolean;
/**
 * Hash: 0x7C0A893088881D57 | ApiSet: undefined
 */
export declare function hasCutsceneFinished(): boolean;
/**
 * Hash: 0xC59F528E9AB9F339 | ApiSet: undefined
 */
export declare function hasCutsceneLoaded(): boolean;
/**
 * Hash: 0x991251AFC3981F84 | ApiSet: undefined
 */
export declare function isCutsceneActive(): boolean;
/**
 * Hash: 0x011883F41211432A | ApiSet: undefined
 */
export declare function _0x011883F41211432A(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p6: number): void;
/**
 * Hash: 0x06EE9048FD080382 | ApiSet: undefined
 */
export declare function _0x06EE9048FD080382(p0: boolean): void;
/**
 * Hash: 0xD3C2E180A40F031E | ApiSet: undefined
 */
export declare function isCutscenePlaying(): boolean;
/**
 * Hash: 0x71B74D2AE19338D0 | ApiSet: undefined
 */
export declare function isCutscenePlaybackFlagSet(flag: number): boolean;
/**
 * Hash: 0x2F137B508DE238F2 | ApiSet: undefined
 */
export declare function _0x2F137B508DE238F2(p0: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x4FCD976DA686580C | ApiSet: undefined
 */
export declare function _0x4FCD976DA686580C(p0: any): any;
/**
 * Hash: 0x20746F7B1032A3C7 | ApiSet: undefined
 */
export declare function _0x20746F7B1032A3C7(p0: boolean, p1: boolean, p2: boolean, p3: boolean): void;
/**
 * ```
 * This function is hard-coded to always return 1.
 * ```
 * Hash: 0x4CEBC1ED31E8925E | ApiSet: undefined
 */
export declare function _0x4CEBC1ED31E8925E(cutsceneName: string): boolean;
/**
 * ```
 * SET_VEHICLE_*
 * ```
 * Hash: 0x7F96F23FA9B73327 | ApiSet: undefined
 */
export declare function _0x7F96F23FA9B73327(modelHash: number | string): void;
/**
 * Hash: 0x583DF8E3D4AFBD98 | ApiSet: undefined
 */
export declare function _0x583DF8E3D4AFBD98(): number;
/**
 * Hash: 0x5EDEF0CF8C1DAB3C | ApiSet: undefined
 */
export declare function _0x5EDEF0CF8C1DAB3C(): boolean;
/**
 * ```
 * Toggles a value (bool) for cutscenes.
 * SET_*
 * ```
 * Hash: 0xC61B86C9F61EB404 | ApiSet: undefined
 */
export declare function _0xC61B86C9F61EB404(toggle: boolean): void;
/**
 * ```
 * SET_SCRIPT_*
 * Sets the cutscene's owning thread ID.
 * ```
 * Hash: 0x8D9DF6ECA8768583 | ApiSet: undefined
 */
export declare function _0x8D9DF6ECA8768583(threadId: number): void;
/**
 * Hash: 0xA0FE76168A189DDB | ApiSet: undefined
 */
export declare function _0xA0FE76168A189DDB(): number;
/**
 * Hash: 0xE36A98D8AB3D3C66 | ApiSet: undefined
 */
export declare function _0xE36A98D8AB3D3C66(p0: boolean): void;
/**
 * This can only be run once [`CAN_REQUEST_ASSETS_FOR_CUTSCENE_ENTITY`](#\_0xB56BBBCC2955D9CB) is true, but can be run before [`HAS_CUTSCENE_LOADED`](#\_0xC59F528E9AB9F339)
 * Hash: 0xE40C1C56DF95C2E8 | ApiSet: undefined
 */
export declare function registerEntityForCutscene(cutsceneEntity: number | Entity, cutsceneEntName: string, p2: number, modelHash: number | string, p4: number): void;
/**
 * Hash: 0x440AF51A3462B86F | ApiSet: undefined
 */
export declare function removeCutscene(): void;
/**
 * Only used twice in armenian1.c
 * Hash: 0x2131046957F31B04 | ApiSet: undefined
 */
export declare function registerSynchronisedScriptSpeech(): void;
/**
 * ```
 * Simply loads the cutscene and doesn't do extra stuff that REQUEST_CUTSCENE does.
 * ```
 * Hash: 0x06A3524161C502BA | ApiSet: undefined
 */
export declare function requestCutFile(cutsceneName: string): void;
/**
 * Hash: 0x7A86743F475D9E09 | ApiSet: undefined
 */
export declare function requestCutscene(cutsceneName: string, flags: number): void;
/**
 * ```
 * Simply unloads the cutscene and doesn't do extra stuff that REMOVE_CUTSCENE does.
 * ```
 * Hash: 0xD00D76A7DFC9D852 | ApiSet: undefined
 */
export declare function removeCutFile(cutsceneName: string): void;
/**
 * Hash: 0x41FAA8FB2ECE8720 | ApiSet: undefined
 */
export declare function setCutsceneCanBeSkipped(p0: boolean): void;
/**
 * Only used in networked environment with MP cutscenes
 * Hash: 0x4C61C75BEE8184C2 | ApiSet: undefined
 */
export declare function setCutsceneEntityStreamingFlags(cutsceneEntName: string, p1: number, p2: number): void;
/**
 * ```
 * playbackFlags: Which scenes should be played.
 * Example: 0x105 (bit 0, 2 and 8 set) will enable scene 1, 3 and 9.
 * ```
 * Hash: 0xC23DE0E91C30B58C | ApiSet: undefined
 */
export declare function requestCutsceneWithPlaybackList(cutsceneName: string, playbackFlags: number, flags: number): void;
/**
 * Sets cutscene location, used for multiplayer apartments/businesses.
 * Hash: 0xB812B3FD1C01CF27 | ApiSet: undefined
 */
export declare function setCutsceneOrigin(position: Vector3, heading: number, p4: number): void;
/**
 * Hash: 0x8093F23ABACCC7D4 | ApiSet: undefined
 */
export declare function setCutsceneFadeValues(p0: boolean, p1: boolean, p2: boolean, p3: boolean): void;
/**
 * See [`SET_PED_COMPONENT_VARIATION`](#\_0x262B14F48D29DE80)
 * Hash: 0xBA01E7B6DEEFBBC9 | ApiSet: undefined
 */
export declare function setCutscenePedComponentVariation(cutsceneEntName: string, componentId: number, drawableId: number, textureId: number, modelHash: number | string): void;
/**
 * Sets the components for a cutscene ped, this will take precendence over the cutscene's component overrides. This does not require the entity be registered.
 * See
 * Hash: 0x2A56C06EBEF2B0D9 | ApiSet: undefined
 */
export declare function setCutscenePedComponentVariationFromPed(cutsceneEntName: string, ped: number | Ped, modelHash: number | string): void;
/**
 * See [`SET_PED_PROP_INDEX`](#\_0x93376B65A266EB5F)
 * Hash: 0x0546524ADE2E9723 | ApiSet: undefined
 */
export declare function setCutscenePedPropVariation(cutsceneEntName: string, componentId: number, drawableId: number, textureId: number, modelHash: number | string): void;
/**
 * ```
 * Only used twice in R* scripts
 * ```
 * Hash: 0x9896CE4721BE84BA | ApiSet: undefined
 */
export declare function setCutsceneTriggerArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
/**
 * ```
 * flags: Usually 0.
 * ```
 * Hash: 0x186D5CB5E7B0FF7B | ApiSet: undefined
 */
export declare function startCutscene(flags: number): void;
/**
 * Similar to [`SET_CUTSCENE_ORIGIN`](#\_0xB812B3FD1C01CF27) but without heading and doesn't need [`START_CUTSCENE`](#\_0x186D5CB5E7B0FF7B)
 * Hash: 0x1C9ADDA3244A1FBF | ApiSet: undefined
 */
export declare function startCutsceneAtCoords(position: Vector3, flags: number): void;
/**
 * Hash: 0xC7272775B4DC786E | ApiSet: undefined
 */
export declare function stopCutscene(p0: boolean): void;
/**
 * Hash: 0x40C8656EDAEDD569 | ApiSet: undefined
 */
export declare function wasCutsceneSkipped(): boolean;
/**
 * Stop cutscene instantly, will dump registered entities right where they were when ran.
 * Hash: 0xD220BDD222AC4A1E | ApiSet: undefined
 */
export declare function stopCutsceneImmediately(): void;
/**
 * ```
 * NativeDB Introduced: v3258
 * ```
 * Hash: 0x34CFC4C2A38E83E3 | ApiSet: undefined
 */
export declare function activateCamWithInterpAndFovCurve(camTo: number, camFrom: number, duration: number, easeLocation: number, easeRotation: number, easeFove: number): void;
/**
 * Hash: 0x0A9F2A468B328E74 | ApiSet: undefined
 */
export declare function addCamSplineNodeUsingCameraFrame(cam: number, cam2: number, p2: number, p3: number): void;
/**
 * Takes a camera and uses the information from it as a camera spline node.
 * Hash: 0x0FB82563989CF4FB | ApiSet: undefined
 */
export declare function addCamSplineNodeUsingCamera(cam: number, cam2: number, length: number, p3: number): void;
/**
 * ```
 * I filled p1-p6 (the floats) as they are as other natives with 6 floats in a row are similar and I see no other method. So if a test from anyone proves them wrong please correct.
 * p7 (length) determines the length of the spline, affects camera path and duration of transition between previous node and this one
 * p8 big values ~100 will slow down the camera movement before reaching this node
 * p9 != 0 seems to override the rotation/pitch (bool?)
 * ```
 * Hash: 0x8609C75EC438FB3B | ApiSet: undefined
 */
export declare function addCamSplineNode(camera: number, position: Vector3, xRot: number, yRot: number, zRot: number, length: number, p8: number, transitionType: number): void;
/**
 * Hash: 0x609278246A29CA34 | ApiSet: undefined
 */
export declare function addCamSplineNodeUsingGameplayFrame(cam: number, p1: number, p2: number): void;
/**
 * ```
 * Seems to animate the gameplay camera zoom.
 * Eg. _ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1000f);
 * will animate the camera zooming in from 1000 meters away.
 * Game scripts use it like this:
 * // Setting this to 1 prevents V key from changing zoom
 * `PLAYER::SET_PLAYER_FORCED_ZOOM(PLAYER::PLAYER_ID(), 1);`
 * // These restrict how far you can move cam up/down left/right
 * `CAM::_CLAMP_GAMEPLAY_CAM_YAW(-20f, 50f);`
 * `CAM::_CLAMP_GAMEPLAY_CAM_PITCH(-60f, 0f);`
 * `CAM::_ANIMATE_GAMEPLAY_CAM_ZOOM(1f, 1f);`
 * ```
 * Hash: 0xDF2E1F7742402E81 | ApiSet: undefined
 */
export declare function animateGameplayCamZoom(p0: number, distance: number): void;
/**
 * ```
 * `CAM::ANIMATED_SHAKE_SCRIPT_GLOBAL("SHAKE_CAM_medium", "medium", "", 0.5f);`
 * ```
 * Hash: 0xC2EAE3FB8CDBED31 | ApiSet: undefined
 */
export declare function animatedShakeScriptGlobal(p0: string, p1: string, p2: string, p3: number): void;
/**
 * ```
 * Example from michael2 script.
 * `CAM::ANIMATED_SHAKE_CAM(l_5069, "shake_cam_all@", "light", "", 1f);`
 * ```
 * Hash: 0xA2746EEAE3E577CD | ApiSet: undefined
 */
export declare function animatedShakeCam(cam: number, p1: string, p2: string, p3: string, amplitude: number): void;
/**
 * ```
 * Last param determines if its relative to the Entity
 * ```
 * Hash: 0xFEDB7D269E8C60E3 | ApiSet: undefined
 */
export declare function attachCamToEntity(cam: number, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, isRelative: boolean): void;
/**
 * This native works with peds only.
 * Hash: 0x61A3DBA14AB7F411 | ApiSet: undefined
 */
export declare function attachCamToPedBone(cam: number, ped: number | Ped, boneIndex: number, xOffset: number, yOffset: number, zOffset: number, isRelative: boolean): void;
/**
 * This native works with vehicles only.
 * Bone indexes are usually given by this native [GET_ENTITY_BONE_INDEX_BY_NAME](#\_0xFB71170B7E76ACBA).
 * Hash: 0x8DB3F12A02CAEF72 | ApiSet: undefined
 */
export declare function attachCamToVehicleBone(cam: number, vehicle: number | Vehicle, boneIndex: number, relativeRotation: boolean, rotX: number, rotY: number, rotZ: number, offX: number, offY: number, offZ: number, fixedDirection: boolean): void;
/**
 * ```
 * minimum: Degrees between -90f and 90f.
 * maximum: Degrees between -90f and 90f.
 * Clamps the gameplay camera's current pitch.
 * Eg. _CLAMP_GAMEPLAY_CAM_PITCH(0.0f, 0.0f) will set the vertical angle directly behind the player.
 * ```
 * Hash: 0xA516C198B7DCA1E1 | ApiSet: undefined
 */
export declare function clampGameplayCamPitch(minimum: number, maximum: number): void;
/**
 * Creates a camera with the specified cam name, You can use `SET_CAM_` natives to manipulate the camera.\
 * Make sure to call [RENDER_SCRIPT_CAMS](#\_0x07E5B515DB0636FC) once the camera is created, or this won't have any visible effect.
 * ### Camera names:
 * *   DEFAULT_SCRIPTED_CAMERA
 * *   DEFAULT_ANIMATED_CAMERA
 * *   DEFAULT_SPLINE_CAMERA
 * *   DEFAULT_SCRIPTED_FLY_CAMERA
 * *   TIMED_SPLINE_CAMERA
 * *   CUSTOM_TIMED_SPLINE_CAMERA
 * *   ROUNDED_SPLINE_CAMERA
 * *   SMOOTHED_SPLINE_CAMERA
 * Hash: 0xC3981DCE61D9E13F | ApiSet: undefined
 */
export declare function createCam(camName: string, active: boolean): number;
/**
 * ```
 * minimum: Degrees between -180f and 180f.
 * maximum: Degrees between -180f and 180f.
 * Clamps the gameplay camera's current yaw.
 * Eg. _CLAMP_GAMEPLAY_CAM_YAW(0.0f, 0.0f) will set the horizontal angle directly behind the player.
 * ```
 * Hash: 0x8F993D26E0CA5E8E | ApiSet: undefined
 */
export declare function clampGameplayCamYaw(minimum: number, maximum: number): void;
/**
 * Creates a camera with the specified camera hash, You can use `SET_CAM_` natives to manipulate the camera.
 * Make sure to call [RENDER_SCRIPT_CAMS](#\_0x07E5B515DB0636FC) once the camera is created, or this won't have any visible effect.
 * Take a look at [CREATE_CAM](#\_0xC3981DCE61D9E13F) if you would like to see the available camera names.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x5E3CF89C6BCCA67D | ApiSet: undefined
 */
export declare function createCamera(camHash: number | string, active: boolean): number;
/**
 * Create a camera with the specified cam name/type, You can use `SET_CAM_` natives to manipulate the camera.
 * Take a look at [CREATE_CAM](#\_0xC3981DCE61D9E13F) if you would like to see the available camera names.
 * Hash: 0xB51194800B257161 | ApiSet: undefined
 */
export declare function createCamWithParams(camName: string, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, fov: number, active: boolean, rotationOrder: number): number;
/**
 * Create a camera with the specified camera hash, You can use `SET_CAM_` natives to manipulate the camera.
 * Make sure to call [RENDER_SCRIPT_CAMS](#\_0x07E5B515DB0636FC) once the camera is created, or this won't have any visible effect.
 * Take a look at [CREATE_CAM](#\_0xC3981DCE61D9E13F) if you would like to see the available camera names.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x6ABFA3E16460F22D | ApiSet: undefined
 */
export declare function createCameraWithParams(camHash: number | string, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, fov: number, active: boolean, rotationOrder: number): number;
/**
 * Hash: 0x741B0129D4560F31 | ApiSet: undefined
 */
export declare function createCinematicShot(p0: any, p1: number, p2: any, entity: number | Entity): void;
/**
 * ```
 * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
 * ```
 * Hash: 0x8E5FB15663F79120 | ApiSet: undefined
 */
export declare function destroyAllCams(bScriptHostCam: boolean): void;
/**
 * ```
 * BOOL param indicates whether the cam should be destroyed if it belongs to the calling script.
 * ```
 * Hash: 0x865908C81A2C22E9 | ApiSet: undefined
 */
export declare function destroyCam(cam: number, bScriptHostCam: boolean): void;
/**
 * ```
 * some camera effect that is used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled.
 * ```
 * Hash: 0x487A82C650EB7799 | ApiSet: undefined
 */
export declare function customMenuCoordinates(p0: number): void;
/**
 * Hash: 0xA2FABBE87F4BAD82 | ApiSet: undefined
 */
export declare function detachCam(cam: number): void;
/**
 * Hash: 0x1A31FE0049E542F6 | ApiSet: undefined
 */
export declare function disableAimCamThisUpdate(): void;
/**
 * Hash: 0x49482F9FCD825AAA | ApiSet: undefined
 */
export declare function disableCamCollisionForObject(entity: number | Entity): void;
/**
 * Disables first person camera while in a vehicle for the current tick.
 * Hash: 0xADFF1B2A555F5FBA | ApiSet: undefined
 */
export declare function disableCinematicBonnetCameraThisUpdate(): void;
/**
 * Hash: 0x2AED6301F67007D5 | ApiSet: undefined
 */
export declare function disableCamCollisionForEntity(entity: number | Entity): void;
/**
 * Disables first person camera while on foot for the current tick.
 * Hash: 0xDE2EF5DA284CC8DF | ApiSet: undefined
 */
export declare function disableOnFootFirstPersonViewThisUpdate(): void;
/**
 * ```
 * Fades the screen in.
 * duration: The time the fade should take, in milliseconds.
 * ```
 * Hash: 0xD4E8E24955024033 | ApiSet: undefined
 */
export declare function doScreenFadeIn(duration: number): void;
/**
 * ```
 * Fades the screen out.
 * duration: The time the fade should take, in milliseconds.
 * ```
 * Hash: 0x891B5B39AC6302AF | ApiSet: undefined
 */
export declare function doScreenFadeOut(duration: number): void;
/**
 * Looks up a camera handle in the current camera pool and returns `true` if the handle is found, otherwise it returns `false`.
 * Hash: 0xA7A932170592B50E | ApiSet: undefined
 */
export declare function doesCamExist(cam: number): boolean;
/**
 * Hash: 0xA41BCD7213805AAC | ApiSet: undefined
 */
export declare function forceCinematicRenderingThisUpdate(p0: boolean): void;
/**
 * ```
 * Shows the crosshair even if it wouldn't show normally. Only works for one frame, so make sure to call it repeatedly.
 * ```
 * Hash: 0xEA7F0AD7E9BA676F | ApiSet: undefined
 */
export declare function enableCrosshairThisFrame(): void;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x06D153C0B99B6128 | ApiSet: undefined
 */
export declare function getCamDofStrength(cam: number): number;
/**
 * Hash: 0xA10B2DB49E92A6B0 | ApiSet: undefined
 */
export declare function getCamAnimCurrentPhase(cam: number): number;
/**
 * Enumerated type defined in camControlHelperMetadataViewModes:
 * ```cpp
 * enum eContext {
 * ON_FOOT = 0, // [G|S]ET_FOLLOW_PED_CAM_*
 * IN_VEHICLE = 1, // [G|S]ET_FOLLOW_VEHICLE_CAM_*
 * ON_BIKE = 2,
 * IN_BOAT = 3,
 * IN_AIRCRAFT = 4,
 * IN_SUBMARINE = 5,
 * IN_HELI = 6,
 * IN_TURRET = 7,
 * }
 * ```
 * Hash: 0x19CAFA3C87F7C2FF | ApiSet: undefined
 */
export declare function getCamActiveViewModeContext(): number;
/**
 * Hash: 0xB60A9CFEB21CA6AA | ApiSet: undefined
 */
export declare function getCamFarClip(cam: number): number;
/**
 * Hash: 0xBAC038F7459AE5AE | ApiSet: undefined
 */
export declare function getCamCoord(cam: number): Vector3;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0xC2612D223D915A1C | ApiSet: undefined
 */
export declare function getCamNearDof(cam: number): number;
/**
 * Hash: 0x255F8DAFD540D397 | ApiSet: undefined
 */
export declare function getCamFarDof(cam: number): number;
/**
 * Hash: 0xC3330A45CCCDB26A | ApiSet: undefined
 */
export declare function getCamFov(cam: number): number;
/**
 * Hash: 0xC520A34DAFBF24B1 | ApiSet: undefined
 */
export declare function getCamNearClip(cam: number): number;
/**
 * Gets a camera's rotation by handle (`cam`) lookup, outputs a `Vector3` in degrees.
 * Hash: 0x7D304C1C955E3E12 | ApiSet: undefined
 */
export declare function getCamRot(cam: number, rotationOrder: number): Vector3;
/**
 * Hash: 0xB22B17DF858716A6 | ApiSet: undefined
 */
export declare function getCamSplineNodeIndex(cam: number): number;
/**
 * ```
 * I'm pretty sure the parameter is the camera as usual, but I am not certain so I'm going to leave it as is.
 * ```
 * Hash: 0xD9D0E694C8282C96 | ApiSet: undefined
 */
export declare function getCamSplineNodePhase(cam: number): number;
/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the view mode enum.
 * Hash: 0xEE778F8C7E1142E2 | ApiSet: undefined
 */
export declare function getCamViewModeForContext(context: number): number;
/**
 * ```
 * Can use this with SET_CAM_SPLINE_PHASE to set the float it this native returns.
 * (returns 1.0f when no nodes has been added, reached end of non existing spline)
 * ```
 * Hash: 0xB5349E36C546509A | ApiSet: undefined
 */
export declare function getCamSplinePhase(cam: number): number;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x77C3CEC46BE286F6 | ApiSet: undefined
 */
export declare function getDebugCamera(): number;
/**
 * Hash: 0xDFC8CBC606FDB0FC | ApiSet: undefined
 */
export declare function getFinalRenderedCamFarClip(): number;
/**
 * Hash: 0x80EC114669DAEFF4 | ApiSet: undefined
 */
export declare function getFinalRenderedCamFov(): number;
/**
 * Hash: 0xA200EB1EE790F448 | ApiSet: undefined
 */
export declare function getFinalRenderedCamCoord(): Vector3;
/**
 * Hash: 0x9780F32BCAF72431 | ApiSet: undefined
 */
export declare function getFinalRenderedCamFarDof(): number;
/**
 * Hash: 0x162F9D995753DC19 | ApiSet: undefined
 */
export declare function getFinalRenderedCamMotionBlurStrength(): number;
/**
 * Hash: 0xD0082607100D7193 | ApiSet: undefined
 */
export declare function getFinalRenderedCamNearClip(): number;
/**
 * Hash: 0x5B4E4C817FCC2DFB | ApiSet: undefined
 */
export declare function getFinalRenderedCamRot(rotationOrder: number): Vector3;
/**
 * Hash: 0x5F35F6732C3FBBA0 | ApiSet: undefined
 */
export declare function getFinalRenderedInWhenFriendlyFov(player: number | string | Player): number;
/**
 * Hash: 0xA03502FC581F7D9B | ApiSet: undefined
 */
export declare function getFinalRenderedCamNearDof(): number;
/**
 * Hash: 0x7EC52CC40597D170 | ApiSet: undefined
 */
export declare function getFirstPersonAimCamZoomFactor(): number;
/**
 * ```cpp
 * // view mode enumeration
 * enum eCamViewMode
 * {
 * THIRD_PERSON_NEAR = 0,
 * THIRD_PERSON_MEDIUM = 1,
 * THIRD_PERSON_FAR = 2,
 * CINEMATIC = 3,
 * FIRST_PERSON = 4,
 * };
 * ```
 * Hash: 0x8D4D46230B2C353A | ApiSet: undefined
 */
export declare function getFollowPedCamViewMode(): number;
/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
 * Hash: 0x33E6C8EFD0CD93E9 | ApiSet: undefined
 */
export declare function getFollowPedCamZoomLevel(): number;
/**
 * Hash: 0x26903D9CD1175F2C | ApiSet: undefined
 */
export declare function getFinalRenderedInWhenFriendlyRot(player: number | string | Player, rotationOrder: number): Vector3;
/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
 * Hash: 0xA4FF579AC0E3AAAE | ApiSet: undefined
 */
export declare function getFollowVehicleCamViewMode(): number;
/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
 * Hash: 0xEE82280AB767B690 | ApiSet: undefined
 */
export declare function getFollowVehicleCamZoomLevel(): number;
/**
 * Hash: 0x89215EC747DF244A | ApiSet: undefined
 */
export declare function getFocusPedOnScreen(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number): number;
/**
 * Hash: 0x65019750A0324133 | ApiSet: undefined
 */
export declare function getGameplayCamFov(): number;
/**
 * Hash: 0x14D6F5678D8F1B37 | ApiSet: undefined
 */
export declare function getGameplayCamCoord(): Vector3;
/**
 * Hash: 0x3A6867B4845BEDA2 | ApiSet: undefined
 */
export declare function getGameplayCamRelativePitch(): number;
/**
 * This function takes a rotation order and outputs a `Vector3` in degrees.
 * It first calls a game function to calculate these values given the rotation order and effectively multiplies those values by `180/PI`, hence degrees since the function it calls outputs radians which are then converted to degrees.
 * Hash: 0x837765A25378F0BB | ApiSet: undefined
 */
export declare function getGameplayCamRot(rotationOrder: number): Vector3;
/**
 * Hash: 0x5234F9F10919EABA | ApiSet: undefined
 */
export declare function getRenderingCam(): number;
/**
 * Attaches a camera to a specific bone of a Ped, including full matrix transformations for both rotation and position offsets.
 * This native works with peds only.
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x149916F50C34A40D | ApiSet: undefined
 */
export declare function hardAttachCamToPedBone(cam: number, ped: number | Ped, boneIndex: number, xRot: number, yRot: number, zRot: number, xOffset: number, yOffset: number, zOffset: number, isRelative: boolean): void;
/**
 * Attaches a camera to an entity, including full matrix transformations for both rotation and position offsets.
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x202A5ED9CE01D6E7 | ApiSet: undefined
 */
export declare function hardAttachCamToEntity(cam: number, entity: number | Entity, xRot: number, yRot: number, zRot: number, xOffset: number, yOffset: number, zOffset: number, isRelative: boolean): void;
/**
 * Hash: 0x7B8A361C1813FBEF | ApiSet: undefined
 */
export declare function ignoreMenuPreferenceForBonnetCameraThisUpdate(): void;
/**
 * Hash: 0x743607648ADD4587 | ApiSet: undefined
 */
export declare function getGameplayCamRelativeHeading(): number;
/**
 * Resets the idle camera timer. Calling that in a loop once every few seconds is enough to disable the idle cinematic camera.
 * Hash: 0xF4F2C0D4EE209E20 | ApiSet: undefined
 */
export declare function invalidateIdleCam(): void;
/**
 * ```
 * IS_A*
 * ```
 * Hash: 0x74BD83EA840F6BC9 | ApiSet: undefined
 */
export declare function isAimCamThirdPersonActive(): boolean;
/**
 * Interpolates the camera to specified parameters over a set duration using various curve types for position, rotation, and fov.
 * ```
 * NativeDB Introduced: v3258
 * ```
 * Hash: 0xDDA77EE33C005AAF | ApiSet: undefined
 */
export declare function interpolateCamWithParams(camera: number, camPosX: number, camPosY: number, camPosZ: number, camRotX: number, camRotY: number, camRotZ: number, fov: number, duration: number, posCurveType: number, rotCurveType: number, rotOrder: number, fovCurveType: number): void;
/**
 * Resets the vehicle idle camera timer. Calling this in a loop will disable the idle camera.
 * Hash: 0x9E4CFFF989258472 | ApiSet: undefined
 */
export declare function invalidateVehicleIdleCam(): void;
/**
 * Hash: 0x036F97C908C2B52C | ApiSet: undefined
 */
export declare function isCamInterpolating(cam: number): boolean;
/**
 * Hash: 0xD7360051C885628B | ApiSet: undefined
 */
export declare function isBonnetCinematicCamRendering(): boolean;
/**
 * ```
 * Returns whether or not the passed camera handle is active.
 * ```
 * Hash: 0xDFB2B516207D3534 | ApiSet: undefined
 */
export declare function isCamActive(cam: number): boolean;
/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0xC90621D8A0CEECF2 | ApiSet: undefined
 */
export declare function isCamPlayingAnim(cam: number, animName: string, animDictionary: string): boolean;
/**
 * Hash: 0x68EDDA28A5976D07 | ApiSet: undefined
 */
export declare function isAimCamActive(): boolean;
/**
 * Hash: 0x02EC0AF5C5A49B7A | ApiSet: undefined
 */
export declare function isCamRendering(cam: number): boolean;
/**
 * Hash: 0x6B24BFE83A2BE47B | ApiSet: undefined
 */
export declare function isCamShaking(cam: number): boolean;
/**
 * Hash: 0xEAF0FA793D05C592 | ApiSet: undefined
 */
export declare function isAllowedIndependentCameraModes(): boolean;
/**
 * Hash: 0xBBC08F6B4CB8FF0A | ApiSet: undefined
 */
export declare function isCinematicCamShaking(): boolean;
/**
 * Hash: 0x0290F35C0AD97864 | ApiSet: undefined
 */
export declare function isCamSplinePaused(p0: any): boolean;
/**
 * Hash: 0xB15162CB5826E9E8 | ApiSet: undefined
 */
export declare function isCinematicCamRendering(): boolean;
/**
 * Hash: 0xCA9D2AA3E326D720 | ApiSet: undefined
 */
export declare function isCinematicIdleCamRendering(): boolean;
/**
 * Hash: 0x5E346D934122613F | ApiSet: undefined
 */
export declare function isFirstPersonAimCamActive(): boolean;
/**
 * Hash: 0xC6D3D26810C8E0F9 | ApiSet: undefined
 */
export declare function isFollowPedCamActive(): boolean;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xF5F1E89A970B7796 | ApiSet: undefined
 */
export declare function isCinematicCamInputActive(): boolean;
/**
 * Hash: 0xCBBDE6D335D6D496 | ApiSet: undefined
 */
export declare function isFollowVehicleCamActive(): boolean;
/**
 * ```
 * Examples when this function will return 0 are:
 * - During busted screen.
 * - When player is coming out from a hospital.
 * - When player is coming out from a police station.
 * - When player is buying gun from AmmuNation.
 * ```
 * Hash: 0x39B5D1B10383F0C8 | ApiSet: undefined
 */
export declare function isGameplayCamRendering(): boolean;
/**
 * Hash: 0xCC9F3371A7C28BC9 | ApiSet: undefined
 */
export declare function isCinematicShotActive(p0: any): boolean;
/**
 * Hash: 0x70FDA869F3317EA9 | ApiSet: undefined
 */
export declare function isGameplayCamLookingBehind(): boolean;
/**
 * Hash: 0xB16FCE9DDC7BA182 | ApiSet: undefined
 */
export declare function isScreenFadedOut(): boolean;
/**
 * Hash: 0xE520FF1AD2785B40 | ApiSet: undefined
 */
export declare function isGameplayHintActive(): boolean;
/**
 * Hash: 0x016C090630DF1F89 | ApiSet: undefined
 */
export declare function isGameplayCamShaking(): boolean;
/**
 * Hash: 0x4F32C0D5A90A9B40 | ApiSet: undefined
 */
export declare function isInVehicleCamDisabled(): boolean;
/**
 * Hash: 0x5C544BC6C57AC575 | ApiSet: undefined
 */
export declare function isScreenFadingIn(): boolean;
/**
 * Hash: 0x797AC7CB535BA28F | ApiSet: undefined
 */
export declare function isScreenFadingOut(): boolean;
/**
 * Hash: 0x5A859503B0C08678 | ApiSet: undefined
 */
export declare function isScreenFadedIn(): boolean;
/**
 * Determines if a global camera shake is currently active. You can stop the currently active global camera shake using [STOP_SCRIPT_GLOBAL_SHAKING](#\_0x1C9D7949FA533490).
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xC912AF078AF19212 | ApiSet: undefined
 */
export declare function isScriptGlobalShaking(): boolean;
/**
 * Hash: 0xE33D59DA70B58FDF | ApiSet: undefined
 */
export declare function isSphereVisible(position: Vector3, radius: number): boolean;
/**
 * ```
 * Hardcoded to only work in multiplayer.
 * ```
 * Hash: 0x12DED8CA53D47EA5 | ApiSet: undefined
 */
export declare function _0x12DED8CA53D47EA5(p0: number): void;
/**
 * Hash: 0x17FCA7199A530203 | ApiSet: undefined
 */
export declare function _0x17FCA7199A530203(): void;
/**
 * Hash: 0x0AA27680A0BD43FA | ApiSet: undefined
 */
export declare function _0x0AA27680A0BD43FA(): void;
/**
 * ```
 * some camera effect that is (also) used in the drunk-cheat, and turned off (by setting it to 0.0) along with the shaking effects once the drunk cheat is disabled. Possibly a cinematic or script-cam version of _0x487A82C650EB7799
 * ```
 * Hash: 0x0225778816FDC28C | ApiSet: undefined
 */
export declare function _0x0225778816FDC28C(p0: number): void;
/**
 * Hash: 0x1F2300CB7FA7B7F6 | ApiSet: undefined
 */
export declare function _0x1F2300CB7FA7B7F6(): any;
/**
 * Hash: 0x271017B9BA825366 | ApiSet: undefined
 */
export declare function _0x271017B9BA825366(p0: any, p1: boolean): void;
/**
 * Hash: 0x247ACBC4ABBC9D1C | ApiSet: undefined
 */
export declare function _0x247ACBC4ABBC9D1C(p0: boolean): void;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x324C5AA411DA7737 | ApiSet: undefined
 */
export declare function _0x324C5AA411DA7737(p0: any): void;
/**
 * Hash: 0x2F7F2B26DD3F18EE | ApiSet: undefined
 */
export declare function _0x2F7F2B26DD3F18EE(p0: number, p1: number): void;
/**
 * ```
 * A*
 * ```
 * Hash: 0x4879E4FE39074CDF | ApiSet: undefined
 */
export declare function _0x4879E4FE39074CDF(): boolean;
/**
 * F\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x28B022A17B068A3A | ApiSet: undefined
 */
export declare function _0x28B022A17B068A3A(p0: number, p1: number): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x380B4968D1E09E55 | ApiSet: undefined
 */
export declare function _0x380B4968D1E09E55(): void;
/**
 * Hash: 0x3044240D2E0FA842 | ApiSet: undefined
 */
export declare function _0x3044240D2E0FA842(): boolean;
/**
 * Hash: 0x5A43C76F7FC7BA5F | ApiSet: undefined
 */
export declare function _0x5A43C76F7FC7BA5F(): void;
/**
 * Hash: 0x469F2ECDEC046337 | ApiSet: undefined
 */
export declare function _0x469F2ECDEC046337(p0: boolean): void;
/**
 * Hash: 0x4008EDF7D6E48175 | ApiSet: undefined
 */
export declare function _0x4008EDF7D6E48175(p0: boolean): void;
/**
 * ```
 * W*
 * ```
 * Hash: 0x5C48A1D6E3B33179 | ApiSet: undefined
 */
export declare function _0x5C48A1D6E3B33179(cam: number): boolean;
/**
 * Hash: 0x5C41E6BABC9E2112 | ApiSet: undefined
 */
export declare function _0x5C41E6BABC9E2112(p0: any): void;
/**
 * Hash: 0x705A276EBFF3133D | ApiSet: undefined
 */
export declare function _0x705A276EBFF3133D(): boolean;
/**
 * Hash: 0x59424BD75174C9B1 | ApiSet: undefined
 */
export declare function _0x59424BD75174C9B1(): void;
/**
 * Hash: 0x91EF6EE6419E5B97 | ApiSet: undefined
 */
export declare function _0x91EF6EE6419E5B97(p0: boolean): void;
/**
 * Hash: 0x62ECFCFDEE7885D6 | ApiSet: undefined
 */
export declare function _0x62ECFCFDEE7885D6(): void;
/**
 * p1: 0..16
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x5D96CFB59DA076A0 | ApiSet: undefined
 */
export declare function _0x5D96CFB59DA076A0(vehicle: number | Vehicle, p1: number, p2: number): void;
/**
 * Hash: 0x62374889A4D59F72 | ApiSet: undefined
 */
export declare function _0x62374889A4D59F72(): void;
/**
 * Hash: 0xA2767257A320FC82 | ApiSet: undefined
 */
export declare function _0xA2767257A320FC82(p0: any, p1: boolean): void;
/**
 * ```
 * _RESET_*
 * _RESET_GAMEPLAY_CAM_RELATIVE_ORBIT_HOLD_TIME?
 * ```
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x7295C203DD659DFE | ApiSet: undefined
 */
export declare function _0x7295C203DD659DFE(): void;
/**
 * B\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x9F97DA93681F87EA | ApiSet: undefined
 */
export declare function _0x9F97DA93681F87EA(): void;
/**
 * ```
 * SET_FOLLOW_*
 * ```
 * Hash: 0x9DFE13ECDC1EC196 | ApiSet: undefined
 */
export declare function _0x9DFE13ECDC1EC196(p0: boolean, p1: boolean): void;
/**
 * Hash: 0xC8391C309684595A | ApiSet: undefined
 */
export declare function _0xC8391C309684595A(): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xA7092AFE81944852 | ApiSet: undefined
 */
export declare function _0xA7092AFE81944852(): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xAABD62873FFB1A33 | ApiSet: undefined
 */
export declare function _0xAABD62873FFB1A33(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0xB1381B97F70C7B30 | ApiSet: undefined
 */
export declare function _0xB1381B97F70C7B30(): void;
/**
 * Hash: 0xCED08CBE8EBB97C7 | ApiSet: undefined
 */
export declare function _0xCED08CBE8EBB97C7(p0: number, p1: number): void;
/**
 * Hash: 0xC8B5C4A79CC18B94 | ApiSet: undefined
 */
export declare function _0xC8B5C4A79CC18B94(cam: number): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0xCCD078C2665D2973 | ApiSet: undefined
 */
export declare function _0xCCD078C2665D2973(p0: boolean): void;
/**
 * Hash: 0xBF72910D0F26F025 | ApiSet: undefined
 */
export declare function _0xBF72910D0F26F025(): any;
/**
 * Hash: 0xDD79DF9F4D26E1C9 | ApiSet: undefined
 */
export declare function _0xDD79DF9F4D26E1C9(): void;
/**
 * Hash: 0xDB90C6CCA48940F1 | ApiSet: undefined
 */
export declare function _0xDB90C6CCA48940F1(p0: boolean): void;
/**
 * Hash: 0xFD3151CD37EA2245 | ApiSet: undefined
 */
export declare function _0xFD3151CD37EA2245(entity: number | Entity): void;
/**
 * Hash: 0xE111A7C0D200CBC5 | ApiSet: undefined
 */
export declare function _0xE111A7C0D200CBC5(p0: any, p1: number): void;
/**
 * Hash: 0xF55E4046F6F831DC | ApiSet: undefined
 */
export declare function _0xF55E4046F6F831DC(p0: any, p1: number): void;
/**
 * ```
 * Atleast one time in a script for the zRot Rockstar uses GET_ENTITY_HEADING to help fill the parameter.
 * p9 is unknown at this time.
 * p10 throughout all the X360 Scripts is always 2.
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0x9A2D0FB2E7852392 | ApiSet: undefined
 */
export declare function playCamAnim(cam: number, animName: string, animDictionary: string, position: Vector3, xRot: number, yRot: number, zRot: number, p9: boolean, p10: number): boolean;
/**
 * ```
 * Max value for p1 is 15.
 * ```
 * Hash: 0x7DCF7C708D292D55 | ApiSet: undefined
 */
export declare function overrideCamSplineMotionBlur(cam: number, p1: number, p2: number, p3: number): void;
/**
 * ```
 * Examples:
 * `CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_2734, NETWORK::_02C40BF885C567B6(l_2739), "PLAYER_EXIT_L_CAM", "mp_doorbell");`
 * `CAM::PLAY_SYNCHRONIZED_CAM_ANIM(l_F0D[7\/\*1\*\/], l_F4D[15\/\*1\*\/], "ah3b_attackheli_cam2", "missheistfbi3b_helicrash");`
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0xE32EFE9AB4A9AA0C | ApiSet: undefined
 */
export declare function playSynchronizedCamAnim(camera: number, scene: number, animName: string, animDictionary: string): boolean;
/**
 * Hash: 0x40B62FA033EB0346 | ApiSet: undefined
 */
export declare function overrideCamSplineVelocity(cam: number, p1: number, p2: number, p3: number): void;
/**
 * Points the camera at the specified entity.
 * Offset works like [GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS](#\_0x1899F328B0E12848).
 * Hash: 0x5640BFF86B16E8DC | ApiSet: undefined
 */
export declare function pointCamAtEntity(cam: number, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, p5: boolean): void;
/**
 * ```
 * Parameters p0-p5 seems correct. The bool p6 is unknown, but through every X360 script it's always 1. Please correct p0-p5 if any prove to be wrong.
 * ```
 * Hash: 0x68B2B5F33BA63C41 | ApiSet: undefined
 */
export declare function pointCamAtPedBone(cam: number, ped: number | Ped, boneIndex: number, position: Vector3, p6: boolean): void;
/**
 * Hash: 0xF75497BB865F0803 | ApiSet: undefined
 */
export declare function pointCamAtCoord(cam: number, position: Vector3): void;
/**
 * Renders the camera previously created with [CREATE_CAM](#\_0xC3981DCE61D9E13F) or [CREATE_CAMERA](#\_0x5E3CF89C6BCCA67D)
 * ```
 * NativeDB Added Parameter 6: Any p5
 * ```
 * Hash: 0x07E5B515DB0636FC | ApiSet: undefined
 */
export declare function renderScriptCams(render: boolean, ease: boolean, easeTime: number, easeCoordsAnim: boolean, p4: boolean): void;
/**
 * ```
 * Set camera as active/inactive.
 * ```
 * Hash: 0x026FB97D0A425F84 | ApiSet: undefined
 */
export declare function setCamActive(cam: number, active: boolean): void;
/**
 * ```
 * Allows you to aim and shoot at the direction the camera is facing.
 * ```
 * Hash: 0x8C1DC7770C51DC8D | ApiSet: undefined
 */
export declare function setCamAffectsAiming(cam: number, toggle: boolean): void;
/**
 * Hash: 0x8BFCEB5EA1B161B6 | ApiSet: undefined
 */
export declare function replayFreeCamGetMaxRange(): number;
/**
 * Makes the minimap follow a scripted camera's rotation instead of the gameplay cam.
 * Hash: 0x661B5C8654ADD825 | ApiSet: undefined
 */
export declare function setCamControlsMiniMapHeading(cam: number, toggle: boolean): void;
/**
 * ```
 * Previous declaration void SET_CAM_ACTIVE_WITH_INTERP(Cam camTo, Cam camFrom, int duration, BOOL easeLocation, BOOL easeRotation) is completely wrong. The last two params are integers not BOOLs...
 * ```
 * Hash: 0x9FBDA379383A52A4 | ApiSet: undefined
 */
export declare function setCamActiveWithInterp(camTo: number, camFrom: number, duration: number, easeLocation: number, easeRotation: number): void;
/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.
 * ```
 * Hash: 0x1B93E0107865DD40 | ApiSet: undefined
 */
export declare function setCamDebugName(camera: number, name: string): void;
/**
 * ```
 * Sets the position of the cam.
 * ```
 * Hash: 0x4D41783FB745E42E | ApiSet: undefined
 */
export declare function setCamCoord(cam: number, posX: number, posY: number, posZ: number): void;
/**
 * ```
 * Native name labeled within its code
 * ```
 * Hash: 0x47B595D60664CFFA | ApiSet: undefined
 */
export declare function setCamDofFocalLengthMultiplier(camera: number, multiplier: number): void;
/**
 * ```
 * This native has a name defined inside its code
 * ```
 * Hash: 0xC669EEA5D031B7DE | ApiSet: undefined
 */
export declare function setCamDofFocusDistanceBias(camera: number, p1: number): void;
/**
 * Hash: 0x4145A4C44FF3B5A6 | ApiSet: undefined
 */
export declare function setCamAnimCurrentPhase(cam: number, phase: number): void;
/**
 * ```
 * This native has its name defined inside its codE
 * ```
 * Hash: 0x7DD234D6F3914C5B | ApiSet: undefined
 */
export declare function setCamDofFnumberOfLens(camera: number, p1: number): void;
/**
 * ```
 * This native has a name defined inside its code
 * ```
 * Hash: 0xC3654A441402562D | ApiSet: undefined
 */
export declare function setCamDofMaxNearInFocusDistance(camera: number, p1: number): void;
/**
 * Hash: 0x3CF48F6F96E749DC | ApiSet: undefined
 */
export declare function setCamDofPlanes(cam: number, p1: number, p2: number, p3: number, p4: number): void;
/**
 * Specifies how much the DoF effect should be applied (Set using [`SET_CAM_NEAR_DOF`](#\_0x3FA4BF0A7AB7DE2C), [`SET_CAM_FAR_DOF`](#\_0xEDD91296CD01AEE0), etc.)
 * Hash: 0x5EE29B4D7D5DF897 | ApiSet: undefined
 */
export declare function setCamDofStrength(cam: number, dofStrength: number): void;
/**
 * ```
 * This native has a name defined inside its code
 * ```
 * Hash: 0x2C654B4943BDDF7C | ApiSet: undefined
 */
export declare function setCamDofMaxNearInFocusDistanceBlendLevel(camera: number, p1: number): void;
/**
 * ```
 * if p0 is 0, effect is cancelled
 * if p0 is 1, effect zooms in, gradually tilts cam clockwise apx 30 degrees, wobbles slowly. Motion blur is active until cancelled.
 * if p0 is 2, effect immediately tilts cam clockwise apx 30 degrees, begins to wobble slowly, then gradually tilts cam back to normal. The wobbling will continue until the effect is cancelled.
 * ```
 * Hash: 0x80C8B1846639BB19 | ApiSet: undefined
 */
export declare function setCamEffect(p0: number): void;
/**
 * Adjusts the field of view (FOV) for a specified camera, allowing for a wider or narrower perspective of the game world. The field of view is measured in degrees and affects how much of the game world is visible at any given moment through the camera.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xB13C14F66A00D047 | ApiSet: undefined
 */
export declare function setCamFov(cam: number, fieldOfView: number): void;
/**
 * Specifies when the camera should stop being in focus. Can be used together with [`SET_USE_HI_DOF`](#\_0xA13B0222F3D94A94), [`SET_CAM_NEAR_DOF`](#\_0x3FA4BF0A7AB7DE2C), [`SET_CAM_USE_SHALLOW_DOF_MODE`](#\_0x16A96863A17552BB), [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897) and other DoF related natives.
 * ### Usage Example
 * A usage example for this native can be found in the following native documentation: [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897).
 * Hash: 0xEDD91296CD01AEE0 | ApiSet: undefined
 */
export declare function setCamFarDof(cam: number, farDOF: number): void;
/**
 * Hash: 0xAE306F2A904BF86E | ApiSet: undefined
 */
export declare function setCamFarClip(cam: number, farClip: number): void;
/**
 * Hash: 0x6F0F77FBA9A8F2E6 | ApiSet: undefined
 */
export declare function setCamMotionBlurStrength(cam: number, strength: number): void;
/**
 * ```
 * The native seems to only be called once.
 * The native is used as so,
 * `CAM::SET_CAM_INHERIT_ROLL_VEHICLE(l_544, getElem(2, &l_525, 4));`
 * In the exile1 script.
 * ```
 * Hash: 0x45F1DE9C34B93AE6 | ApiSet: undefined
 */
export declare function setCamInheritRollVehicle(cam: number, p1: boolean): void;
/**
 * Hash: 0xC7848EFCCC545182 | ApiSet: undefined
 */
export declare function setCamNearClip(cam: number, nearClip: number): void;
/**
 * Specifies when the camera should start being in focus. Can be used together with [`SET_USE_HI_DOF`](#\_0xA13B0222F3D94A94), [`SET_CAM_FAR_DOF`](#\_0xEDD91296CD01AEE0), [`SET_CAM_USE_SHALLOW_DOF_MODE`](#\_0x16A96863A17552BB), [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897) and other DoF related natives.
 * ### Usage Example
 * A usage example for this native can be found in the following native documentation: [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897).
 * Hash: 0x3FA4BF0A7AB7DE2C | ApiSet: undefined
 */
export declare function setCamNearDof(cam: number, nearDOF: number): void;
/**
 * ```
 * I named p1 as timeDuration as it is obvious. I'm assuming tho it is ran in ms(Milliseconds) as usual.
 * ```
 * Hash: 0x1381539FEE034CDA | ApiSet: undefined
 */
export declare function setCamSplineDuration(cam: number, timeDuration: number): void;
/**
 * Hash: 0xBFD8727AEA3CCEBA | ApiSet: undefined
 */
export declare function setCamParams(cam: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, fieldOfView: number, transitionSpeed: number, p9: number, p10: number, rotationOrder: number): void;
/**
 * Sets the rotation of the camera.
 * Hash: 0x85973643155D0B07 | ApiSet: undefined
 */
export declare function setCamRot(cam: number, rotX: number, rotY: number, rotZ: number, rotationOrder: number): void;
/**
 * Hash: 0xD93DB43B82BC0D00 | ApiSet: undefined
 */
export declare function setCamShakeAmplitude(cam: number, amplitude: number): void;
/**
 * Hash: 0x7BF1A54AE67AC070 | ApiSet: undefined
 */
export declare function setCamSplineNodeExtraFlags(cam: number, p1: number, flags: number): void;
/**
 * Hash: 0x83B8201ED82A9A2D | ApiSet: undefined
 */
export declare function setCamSplineNodeEase(cam: number, p1: number, p2: number, p3: number): void;
/**
 * Hash: 0x242B5874F0A4E052 | ApiSet: undefined
 */
export declare function setCamSplinePhase(cam: number, p1: number): void;
/**
 * Hash: 0xA6385DEB180F319F | ApiSet: undefined
 */
export declare function setCamSplineNodeVelocityScale(cam: number, p1: number, scale: number): void;
/**
 * Hash: 0x51669F7D1FB53D9F | ApiSet: undefined
 */
export declare function setCinematicButtonActive(p0: boolean): void;
/**
 * Enables or disables the usage of a shallow DOF. Needs to be set to true to use [`SET_CAM_NEAR_DOF`](#\_0x3FA4BF0A7AB7DE2C), [`SET_CAM_FAR_DOF`](#\_0xEDD91296CD01AEE0), etc. Doesn't need to be called every tick.
 * ### Usage Example
 * A usage example for this native can be found in the following native documentation: [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897).
 * Hash: 0x16A96863A17552BB | ApiSet: undefined
 */
export declare function setCamUseShallowDofMode(cam: number, toggle: boolean): void;
/**
 * Sets the smoothing style for a DEFAULT_SPLINE_CAMERA
 * Ranges from 0 to 3 in rockstar scripts although there are actually 26
 * ```
 * 0: No lead-in or lead-out smoothing
 * 1: Smooth lead-in
 * 2: Smooth lead-out
 * 3: Both lead-in and lead-out are smoothed
 * 4-6: Longer speed up, lead-in, lead-out, and both in order as above.
 * 6: see above, but missed a node in testing(?)
 * 7: Smoothed lead-in, longer smoothed lead-out
 * 8: Longer lead-in and lead-out than 6, didn't drop node
 * 9: Constant acceleration
 * 10: Constant deceleration. Dropped 2 nodes in testing.
 * 11: Same as 0
 * 12: 10 but slower lead-in, reaches end node less early
 * 13: Extremely close to 3, slightly longer lead-in/lead-out
 * 14: Constant acceleration, dropped last 2 nodes in testing and halted (?)
 * 15: Very similar to 10, did not drop any nodes.
 * 16: Long lead-in, dropped 2 nodes in testing, very long leadout.
 * 17: Constant acceleration, slower speed-up than 9
 * 18: Same as 17 is to 9, slightly longer lead-out, lingers at end node
 * 19: Very long lead in and out
 * 20: Very long, gradual lead-in acceleration at start, gets extremely fast
 * 21: Same as 20 but for constant deceleration
 * 22: 20 and 21 combined, long linger at end node. Dropped 2 nodes in testing
 * 23: Constant acceleration, doesn't complete path before it stops
 * 24: Same as 23 but with constant deceleration, but completes path
 * 25: 23 and 24 combined, insanely fast at middle.
 * 26: No noticable lead-in, misses last 2 nodes in testing
 * 27+: Alternates between 0 and 26
 * ```
 * The above is documented and graphed at [Spline Cam Interp Graphs](https://docs.google.com/spreadsheets/d/1ejyiMcEYrhhQOL0mLe8664UN-vU4Oh-SBqQnVcKlFIk/edit?usp=sharing)
 * ```
 * Using 1-3 will result in misalignment from the passed durations for the spline nodes, the overall duration will remain but other nodes will be shortened if smoothing anything.
 * Graph below demonstrates interpolation between 0-1000 and back 10 times.
 * ![](https://i.imgur.com/cixWh7m.png)
 * ## Parameters
 * * **cam**: The DEFAULT_SPLINE_CAMERA to apply the smoothing to
 * * **smoothingStyle**: 0 to 3, 0 no additional smoothing, 1 smooth lead-in, 2 smooth lead-out, 3 smooth lead-in & lead-out
 * ```
 * Hash: 0xD1B0F412F109EA5D | ApiSet: undefined
 */
export declare function setCamSplineSmoothingStyle(cam: number, smoothingStyle: number): void;
/**
 * Hash: 0x2A2173E46DAECD12 | ApiSet: undefined
 */
export declare function setCamViewModeForContext(context: number, viewMode: number): void;
/**
 * Hash: 0xDC9DA9E8789F5246 | ApiSet: undefined
 */
export declare function setCinematicNewsChannelActiveThisUpdate(): void;
/**
 * Hash: 0xC724C701C30B2FE7 | ApiSet: undefined
 */
export declare function setCinematicCamShakeAmplitude(p0: number): void;
/**
 * Hash: 0x0AF7B437918103B3 | ApiSet: undefined
 */
export declare function setFirstPersonAimCamNearClipThisUpdate(distance: number): void;
/**
 * ```
 * Toggles the vehicle cinematic cam; requires the player ped to be in a vehicle to work.
 * ```
 * Hash: 0xDCF0754AC3D6FD4E | ApiSet: undefined
 */
export declare function setCinematicModeActive(toggle: boolean): void;
/**
 * Hash: 0x70894BD0915C5BCA | ApiSet: undefined
 */
export declare function setFirstPersonAimCamZoomFactor(zoomFactor: number): void;
/**
 * Hash: 0xBCFC632DB7673BF0 | ApiSet: undefined
 */
export declare function setFirstPersonCamPitchRange(minAngle: number, maxAngle: number): void;
/**
 * Hash: 0x503F5920162365B2 | ApiSet: undefined
 */
export declare function setFlyCamHorizontalResponse(cam: number, p1: number, p2: number, p3: number): void;
/**
 * Hash: 0xE827B9382CFB41BA | ApiSet: undefined
 */
export declare function setFlyCamVerticalSpeedMultiplier(cam: number, p1: number, p2: number, p3: number): void;
/**
 * Hash: 0xC91C6C55199308CA | ApiSet: undefined
 */
export declare function setFlyCamCoordAndConstrain(cam: number, position: Vector3): void;
/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
 * Hash: 0x19464CB6E4078C8A | ApiSet: undefined
 */
export declare function setFollowVehicleCamZoomLevel(zoomLevel: number): void;
/**
 * Overrides the ped follow camera (not first person camera) with the specified camera. The game loads all camera metadata from `update/update.rpf/x64/data/metadata/cameras.ymt` and `x64a.rpf/data/metadata/cameras.ymt` with the ped follow cameras being of type `camFollowPedCameraMetadata`.
 * | Follow Camera Names                          |
 * |----------------------------------------------|
 * | DEFAULT_FOLLOW_PED_CAMERA                    |
 * | FOLLOW_PED_ATTACHED_TO_ROPE_CAMERA           |
 * | FOLLOW_PED_ON_EXILE1\_LADDER_CAMERA           |
 * | FOLLOW_PED_SKY_DIVING_CAMERA                 |
 * | FOLLOW_PED_SKY_DIVING_FAMILY5\_CAMERA         |
 * | NIGHTCLUB_FOLLOW_PED_CAMERA                  |
 * | FOLLOW_PED_INTIMIDATION_CAMERA               |
 * | FOLLOW_PED_IN_WATER_CAMERA                   |
 * | FOLLOW_PED_PRONE_CAMERA                      |
 * | FOLLOW_PED_ON_SEAT_CAMERA                    |
 * | FOLLOW_PED_HANGING_UPSIDE_DOWN_CAMERA        |
 * | FOLLOW_PED_ATTACHED_TO_ROPE_CAMERA           |
 * | CUSTOM_TRANSITION_AFTER_WARP_SKY_DIVE_CAMERA |
 * | FOLLOW_PED_ON_HORSE_CAMERA                   |
 * | FOLLOW_PED_ON_LOUNGER_CAMERA                 |
 * Other camera hashes (names not found yet)
 * ```cpp
 * // 0x5DBBFB6E
 * // 0xA38DB056
 * // 0x16B702A3
 * // 0x41D72A2E
 * ```
 * Hash: 0x44A113DD6FFC48D1 | ApiSet: undefined
 */
export declare function setFollowPedCamThisUpdate(camName: string, easeTime: number): boolean;
/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * Hash: 0x5C90CAB09951A12F | ApiSet: undefined
 */
export declare function setFollowTurretSeatCam(seatIndex: number): void;
/**
 * Hash: 0xF9D02130ECDD1D77 | ApiSet: undefined
 */
export declare function setFlyCamMaxHeight(cam: number, height: number): void;
/**
 * Hash: 0x8BBACBF51DA047A8 | ApiSet: undefined
 */
export declare function setGameplayCamFollowPedThisUpdate(ped: number | Ped): void;
/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
 * Hash: 0x5A4F9EDF1673F704 | ApiSet: undefined
 */
export declare function setFollowPedCamViewMode(viewMode: number): void;
/**
 * ```
 * Sets gameplay camera to hash
 * ```
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x425A920FDB9A0DDA | ApiSet: undefined
 */
export declare function setGameplayCamHash(camName: string): void;
/**
 * See [`GET_FOLLOW_PED_CAM_VIEW_MODE`](#\_0x8D4D46230B2C353A) for the follow mode enum.
 * Hash: 0xAC253D7842768F48 | ApiSet: undefined
 */
export declare function setFollowVehicleCamViewMode(viewMode: number): void;
/**
 * Hash: 0x759E13EBC1C15C5A | ApiSet: undefined
 */
export declare function setGameplayCamRawPitch(pitch: number): void;
/**
 * ```
 * Does nothing
 * ```
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x103991D4A307D472 | ApiSet: undefined
 */
export declare function setGameplayCamRawYaw(yaw: number): void;
/**
 * This native sets the camera's pitch (rotation on the x-axis).
 * Hash: 0x6D0858B8EDFD2B7D | ApiSet: undefined
 */
export declare function setGameplayCamRelativePitch(angle: number, scalingFactor: number): void;
/**
 * ```
 * Sets the camera position relative to heading in float from -360 to +360.
 * Heading is alwyas 0 in aiming camera.
 * ```
 * Hash: 0xB4EC2312F4E5B1F1 | ApiSet: undefined
 */
export declare function setGameplayCamRelativeHeading(heading: number): void;
/**
 * Hash: 0x48608C3464F58AB4 | ApiSet: undefined
 */
export declare function setGameplayCamRelativeRotation(roll: number, pitch: number, yaw: number): void;
/**
 * ```
 * Sets the amplitude for the gameplay (i.e. 3rd or 1st) camera to shake. Used in script "drunk_controller.ysc.c4" to simulate making the player drunk.
 * ```
 * Hash: 0xA87E00932DB4D85D | ApiSet: undefined
 */
export declare function setGameplayCamShakeAmplitude(amplitude: number): void;
/**
 * ```
 * From b617 scripts:
 * `CAM::_21E253A7F8DA5DFB("DINGHY");`
 * `CAM::_21E253A7F8DA5DFB("ISSI2");`
 * `CAM::_21E253A7F8DA5DFB("SPEEDO");`
 * ```
 * Hash: 0x21E253A7F8DA5DFB | ApiSet: undefined
 */
export declare function setGameplayCamVehicleCamera(vehicleName: string): void;
/**
 * Hash: 0x11FA5D3479C7DD47 | ApiSet: undefined
 */
export declare function setGameplayCamVehicleCameraName(vehicleModel: number | string): void;
/**
 * Hash: 0xD51ADCD2D8BC0FB3 | ApiSet: undefined
 */
export declare function setGameplayCoordHint(position: Vector3, duration: number, blendOutDuration: number, blendInDuration: number, unk: number): void;
/**
 * ```
 * p6 & p7 - possibly length or time
 * ```
 * Hash: 0x189E955A8313E298 | ApiSet: undefined
 */
export declare function setGameplayEntityHint(entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, p4: boolean, p5: number, p6: number, p7: number, p8: any): void;
/**
 * Hash: 0xC92717EF615B6704 | ApiSet: undefined
 */
export declare function setGameplayHintAnimOffsety(yOffset: number): void;
/**
 * Hash: 0xE3433EADAAF7EE40 | ApiSet: undefined
 */
export declare function setGameplayHintAnimCloseup(toggle: boolean): void;
/**
 * Hash: 0xF8BDBF3D573049A1 | ApiSet: undefined
 */
export declare function setGameplayHintFollowDistanceScalar(value: number): void;
/**
 * Hash: 0x5D7B620DAE436138 | ApiSet: undefined
 */
export declare function setGameplayHintAnimOffsetx(xOffset: number): void;
/**
 * Hash: 0xD1F8363DFAD03848 | ApiSet: undefined
 */
export declare function setGameplayHintBaseOrbitPitchOffset(value: number): void;
/**
 * Hash: 0x513403FB9C56211F | ApiSet: undefined
 */
export declare function setGameplayHintFov(FOV: number): void;
/**
 * Hash: 0x83E87508A2CA2AC6 | ApiSet: undefined
 */
export declare function setGameplayObjectHint(p0: any, p1: number, p2: number, p3: number, p4: boolean, p5: any, p6: any, p7: any): void;
/**
 * Focuses the camera on the specified vehicle.
 * Hash: 0xA2297E18F3E71C2E | ApiSet: undefined
 */
export declare function setGameplayVehicleHint(vehicle: number | Vehicle, offsetX: number, offsetY: number, offsetZ: number, p4: boolean, time: number, easeInTime: number, easeOutTime: number): void;
/**
 * Override the camera work of the third-person camera to table game for current frame only.
 * |                  HashKey                    |       Hash        |    Game         |
 * | :---------------------------------: | :-----------:| :-------------:  |
 * | `CASINO_LUCKY_WHEEL_CAMERA` |   `5891389`   |  Lucky Wheel    |
 * | `CASINO_SLOT_MACHINE_CAMERA` |  `518572876`  |     Slots       |
 * | `CASINO_ROULETTE_CAMERA` |   `71681063`  |    Roulette     |
 * | `CASINO_BLACKJACK_CAMERA` | `-2124244681` |    Blackjack    |
 * | `CASINO_POKER_CAMERA` | `-1938411241` |   Three Cards   |
 * | `CASINO_INSIDE_TRACK_CAMERA` | `1929822423` |   Inside Track    |
 * | `ARCADE_LOVE_PROFESSOR_P1_CAMERA` | `545868034` |   LoveProfessorP1   |
 * | `ARCADE_LOVE_PROFESSOR_P2_CAMERA` | `935304251` |   LoveProfessorP2   |
 * Hash: 0x79C0E43EB9B944E2 | ApiSet: undefined
 */
export declare function setTableGamesCameraThisUpdate(hash: number | string): boolean;
/**
 * Hash: 0x2B486269ACD548D3 | ApiSet: undefined
 */
export declare function setGameplayPedHint(p0: number | Ped, x1: number, y1: number, z1: number, p4: boolean, duration: number, blendOutDuration: number, blendInDuration: number): void;
/**
 * Needs to be called every tick to make the active camera use a high depth of field.\
 * The DoF can be customized using [`SET_CAM_NEAR_DOF`](#\_0x3FA4BF0A7AB7DE2C), [`SET_CAM_FAR_DOF`](#\_0xEDD91296CD01AEE0), [`SET_CAM_USE_SHALLOW_DOF_MODE`](#\_0x16A96863A17552BB), [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897) and other DoF related natives.
 * ### Usage Example
 * A usage example for this native can be found in the following native documentation: [`SET_CAM_DOF_STRENGTH`](#\_0x5EE29B4D7D5DF897).
 * Hash: 0xA13B0222F3D94A94 | ApiSet: undefined
 */
export declare function setUseHiDof(): void;
/**
 * Hash: 0x42156508606DE65E | ApiSet: undefined
 */
export declare function setThirdPersonAimCamNearClipThisUpdate(distance: number): void;
/**
 * Hash: 0xE9EA16D6E54CDCA4 | ApiSet: undefined
 */
export declare function setInVehicleCamStateThisUpdate(p0: number | Vehicle, p1: number): void;
/**
 * ```
 * Possible shake types (updated b617d):
 * DEATH_FAIL_IN_EFFECT_SHAKE
 * DRUNK_SHAKE
 * FAMILY5_DRUG_TRIP_SHAKE
 * HAND_SHAKE
 * JOLT_SHAKE
 * LARGE_EXPLOSION_SHAKE
 * MEDIUM_EXPLOSION_SHAKE
 * SMALL_EXPLOSION_SHAKE
 * ROAD_VIBRATION_SHAKE
 * SKY_DIVING_SHAKE
 * VIBRATE_SHAKE
 * ```
 * Hash: 0x6A25241C340D3822 | ApiSet: undefined
 */
export declare function shakeCam(cam: number, type: string, amplitude: number): void;
/**
 * Hash: 0xDCD4EA924F42D01A | ApiSet: undefined
 */
export declare function setWidescreenBorders(p0: boolean, p1: number): void;
/**
 * ```
 * Only used in R* Script fm_mission_controller_2020
 * ```
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x731A880555DA3647 | ApiSet: undefined
 */
export declare function setUseHiDofInCutscene(): void;
/**
 * ```
 * Possible shake types (updated b617d):
 * DEATH_FAIL_IN_EFFECT_SHAKE
 * DRUNK_SHAKE
 * FAMILY5_DRUG_TRIP_SHAKE
 * HAND_SHAKE
 * JOLT_SHAKE
 * LARGE_EXPLOSION_SHAKE
 * MEDIUM_EXPLOSION_SHAKE
 * SMALL_EXPLOSION_SHAKE
 * ROAD_VIBRATION_SHAKE
 * SKY_DIVING_SHAKE
 * VIBRATE_SHAKE
 * ```
 * Hash: 0xFD55E49555E017CF | ApiSet: undefined
 */
export declare function shakeGameplayCam(shakeName: string, intensity: number): void;
/**
 * ```
 * p0 argument found in the b617d scripts: "DRUNK_SHAKE"
 * ```
 * Hash: 0xDCE214D9ED58F3CF | ApiSet: undefined
 */
export declare function shakeCinematicCam(p0: string, p1: number): void;
/**
 * ```
 * `CAM::SHAKE_SCRIPT_GLOBAL("HAND_SHAKE", 0.2);`
 * ```
 * Hash: 0xF4C8CF9E353AFECA | ApiSet: undefined
 */
export declare function shakeScriptGlobal(p0: string, p1: number): void;
/**
 * Hash: 0xF33AB75780BA57DE | ApiSet: undefined
 */
export declare function stopCamPointing(cam: number): void;
/**
 * Hash: 0x0EF93E9F3D08C178 | ApiSet: undefined
 */
export declare function stopGameplayCamShaking(bStopImmediately: boolean): void;
/**
 * Hash: 0x7660C6E75D3A078E | ApiSet: undefined
 */
export declare function stopCinematicShot(p0: number | string): void;
/**
 * Hash: 0xBDECF64367884AC3 | ApiSet: undefined
 */
export declare function stopCamShaking(cam: number, p1: boolean): void;
/**
 * Hash: 0x2238E588E588A6D7 | ApiSet: undefined
 */
export declare function stopCinematicCamShaking(p0: boolean): void;
/**
 * Instructs the game engine to stop rendering scripted cameras and transition back to the gameplay camera, optionally applying custom blending and rendering options.
 * ```cpp
 * enum eRenderingOptionFlags {
 * RO_NO_OPTIONS = 0,
 * RO_STOP_RENDERING_OPTION_WHEN_PLAYER_EXITS_INTO_COVER = 1
 * };
 * ```
 * ```cpp
 * enum eCamSplineSmoothingFlags {
 * // No smoothing just moves at a constant rate
 * CAM_SPLINE_NO_SMOOTH = 0,
 * // Decelerates when approaching a node
 * CAM_SPLINE_SLOW_IN_SMOOTH = 1,
 * // Accelerates slowly when leaving a node
 * CAM_SPLINE_SLOW_OUT_SMOOTH = 2,
 * // Decelerates when approaching a node and accelerates slowly when leaving a node
 * CAM_SPLINE_SLOW_IN_OUT_SMOOTH = 3,
 * CAM_SPLINE_VERY_SLOW_IN = 4,
 * CAM_SPLINE_VERY_SLOW_OUT = 5,
 * CAM_SPLINE_VERY_SLOW_IN_SLOW_OUT = 6,
 * CAM_SPLINE_SLOW_IN_VERY_SLOW_OUT = 7,
 * CAM_SPLINE_VERY_SLOW_IN_VERY_SLOW_OUT = 8,
 * CAM_SPLINE_EASE_IN = 9,
 * CAM_SPLINE_EASE_OUT = 10,
 * CAM_SPLINE_QUADRATIC_EASE_IN = 11,
 * CAM_SPLINE_QUADRATIC_EASE_OUT = 12,
 * CAM_SPLINE_QUADRATIC_EASE_IN_OUT = 13,
 * CAM_SPLINE_CUBIC_EASE_IN = 14,
 * CAM_SPLINE_CUBIC_EASE_OUT = 15,
 * CAM_SPLINE_CUBIC_EASE_IN_OUT = 16,
 * CAM_SPLINE_QUARTIC_EASE_IN = 17,
 * CAM_SPLINE_QUARTIC_EASE_OUT = 18,
 * CAM_SPLINE_QUARTIC_EASE_IN_OUT = 19,
 * CAM_SPLINE_QUINTIC_EASE_IN = 20,
 * CAM_SPLINE_QUINTIC_EASE_OUT = 21,
 * CAM_SPLINE_QUINTIC_EASE_IN_OUT = 22,
 * CAM_SPLINE_CIRCULAR_EASE_IN = 23,
 * CAM_SPLINE_CIRCULAR_EASE_OUT = 24,
 * CAM_SPLINE_CIRCULAR_EASE_IN_OUT = 25
 * };
 * ```
 * ```
 * NativeDB Added Parameter 4: int renderingOptions : An integer bitmask of eRenderingOptionFlags to apply specific rendering behaviors during the transition. RO_NO_OPTIONS signifies no special options are applied.
 * ```
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xC819F3CBB62BF692 | ApiSet: undefined
 */
export declare function stopRenderingScriptCamsUsingCatchUp(bShouldApplyAcrossAllThreads: boolean, distanceToBlend: number, blendType: number): void;
/**
 * Terminates the current gameplay hint camera, with an option for immediate cessation or a gradual fade out.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xF46C581C61718916 | ApiSet: undefined
 */
export declare function stopGameplayHint(bStopImmediately: boolean): void;
/**
 * Stops the currently active global camera shake that was initiated by a script. You can check if a global camera shake is active using [IS_SCRIPT_GLOBAL_SHAKING](#\_0xC912AF078AF19212).
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x1C9D7949FA533490 | ApiSet: undefined
 */
export declare function stopScriptGlobalShaking(bStopImmediately: boolean): void;
/**
 * Hash: 0xDB629FFD9285FA06 | ApiSet: undefined
 */
export declare function stopCutsceneCamShaking(): void;
/**
 * Applies a predefined set of vehicle camera settings optimized for capturing stunts, effective for the current game update/frame.
 * ```
 * NativeDB Introduced: v791
 * ```
 * Hash: 0x6493CF69859B116A | ApiSet: undefined
 */
export declare function useVehicleCamStuntSettingsThisUpdate(): void;
/**
 * Sets the ambient ped & vehicle population spawning origin to be based around the active scripted camera for this frame
 * This will prevent vehicles from being created close to the camera and/or on-screen
 * Hash: 0x271401846BD26E92 | ApiSet: undefined
 */
export declare function useScriptCamForAmbientPopulationOriginThisFrame(vehicles: boolean, peds: boolean): void;
/**
 * Hash: 0x6889498B3E19C797 | ApiSet: undefined
 */
export declare function dataarrayAddDict(): [any, any];
/**
 * Hash: 0x2F0661C155AEEEAA | ApiSet: undefined
 */
export declare function dataarrayAddString(value: string): any;
/**
 * Hash: 0xF8B0F5A43E928C76 | ApiSet: undefined
 */
export declare function dataarrayAddBool(value: boolean): any;
/**
 * Hash: 0xCABDB751D86FE93B | ApiSet: undefined
 */
export declare function dataarrayAddInt(value: number): any;
/**
 * Hash: 0x57A995FD75D37F56 | ApiSet: undefined
 */
export declare function dataarrayAddFloat(value: number): any;
/**
 * Hash: 0x8B5FADCC4E3A145F | ApiSet: undefined
 */
export declare function dataarrayGetDict(arrayIndex: number): [any, any];
/**
 * Hash: 0x407F8D034F70F0C2 | ApiSet: undefined
 */
export declare function dataarrayAddVector(valueX: number, valueY: number, valueZ: number): any;
/**
 * Hash: 0x50C1B2874E50C114 | ApiSet: undefined
 */
export declare function dataarrayGetBool(arrayIndex: number): [boolean, any];
/**
 * Hash: 0x065DB281590CEA2D | ApiSet: undefined
 */
export declare function dataarrayGetCount(): [number, any];
/**
 * Hash: 0x8D2064E5B64A628A | ApiSet: undefined
 */
export declare function dataarrayGetVector(arrayIndex: number): [Vector3, any];
/**
 * Hash: 0x3E5AE19425CD74BE | ApiSet: undefined
 */
export declare function dataarrayGetInt(arrayIndex: number): [number, any];
/**
 * Hash: 0xA358F56F10732EE1 | ApiSet: undefined
 */
export declare function datadictCreateDict(key: string): [any, any];
/**
 * Hash: 0xD3F2FFEB8D836F52 | ApiSet: undefined
 */
export declare function dataarrayGetString(arrayIndex: number): [string, any];
/**
 * Hash: 0xC0C527B525D7CFB5 | ApiSet: undefined
 */
export declare function dataarrayGetFloat(arrayIndex: number): [number, any];
/**
 * Hash: 0x5B11728527CA6E5F | ApiSet: undefined
 */
export declare function datadictCreateArray(key: string): [any, any];
/**
 * ```
 * Types:
 * 1 = Boolean
 * 2 = Integer
 * 3 = Float
 * 4 = String
 * 5 = Vector3
 * 6 = Object
 * 7 = Array
 * ```
 * Hash: 0x3A0014ADB172A3C5 | ApiSet: undefined
 */
export declare function dataarrayGetType(arrayIndex: number): [number, any];
/**
 * Hash: 0x7A983AA9DA2659ED | ApiSet: undefined
 */
export declare function datadictGetArray(key: string): [any, any];
/**
 * Hash: 0x06610343E73B9727 | ApiSet: undefined
 */
export declare function datadictGetFloat(key: string): [number, any];
/**
 * Hash: 0x1186940ED72FFEEC | ApiSet: undefined
 */
export declare function datadictGetBool(key: string): [boolean, any];
/**
 * Hash: 0x78F06F6B1FB5A80C | ApiSet: undefined
 */
export declare function datadictGetInt(key: string): [number, any];
/**
 * Hash: 0x3D2FD9E763B24472 | ApiSet: undefined
 */
export declare function datadictGetString(key: string): [string, any];
/**
 * ```
 * Types:
 * 1 = Boolean
 * 2 = Integer
 * 3 = Float
 * 4 = String
 * 5 = Vector3
 * 6 = Object
 * 7 = Array
 * ```
 * Hash: 0x031C55ED33227371 | ApiSet: undefined
 */
export declare function datadictGetType(key: string): [number, any];
/**
 * Hash: 0xB6B9DDC412FCEEE2 | ApiSet: undefined
 */
export declare function datadictGetDict(key: string): [any, any];
/**
 * Hash: 0x35124302A556A325 | ApiSet: undefined
 */
export declare function datadictSetBool(key: string, value: boolean): any;
/**
 * Hash: 0xC27E1CC2D795105E | ApiSet: undefined
 */
export declare function datadictSetFloat(key: string, value: number): any;
/**
 * Hash: 0x46CD3CB66E0825CC | ApiSet: undefined
 */
export declare function datadictGetVector(key: string): [Vector3, any];
/**
 * Hash: 0xE7E035450A7948D5 | ApiSet: undefined
 */
export declare function datadictSetInt(key: string, value: number): any;
/**
 * Hash: 0x8FF3847DADD8E30C | ApiSet: undefined
 */
export declare function datadictSetString(key: string, value: string): any;
/**
 * Hash: 0x6CC86E78358D5119 | ApiSet: undefined
 */
export declare function datafileClearWatchList(): void;
/**
 * Hash: 0x4CD49B76338C7DEE | ApiSet: undefined
 */
export declare function datadictSetVector(key: string, valueX: number, valueY: number, valueZ: number): any;
/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * ```
 * Hash: 0xD27058A1CA2B13EE | ApiSet: undefined
 */
export declare function datafileCreate(): void;
/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * ```
 * Hash: 0x9AB9C1CFC8862DFB | ApiSet: undefined
 */
export declare function datafileDelete(): void;
/**
 * Hash: 0x8F5EA1C01D65A100 | ApiSet: undefined
 */
export declare function datafileDeleteRequestedFile(p0: any): boolean;
/**
 * Hash: 0xC55854C7D7274882 | ApiSet: undefined
 */
export declare function datafileFlushMissionHeader(): void;
/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * ```
 * Hash: 0x906B778CA1DC72B6 | ApiSet: undefined
 */
export declare function datafileGetFileDict(): string;
/**
 * ```
 * Example:
 * `if (!DATAFILE::_BEDB96A7584AA8CF())`
 * {
 * if (!g_109E3)
 * {
 * `if (((sub_d4f() == 2) == 0) && (!NETWORK::NETWORK_IS_GAME_IN_PROGRESS()))`
 * {
 * `if (NETWORK::NETWORK_IS_CLOUD_AVAILABLE())`
 * {
 * g_17A8B = 0;
 * }
 * if (!g_D52C)
 * {
 * sub_730();
 * }
 * }
 * }
 * }
 * ```
 * Hash: 0xBEDB96A7584AA8CF | ApiSet: undefined
 */
export declare function datafileIsSavePending(): boolean;
/**
 * Hash: 0xF8CC1EBE0B62E29F | ApiSet: undefined
 */
export declare function datafileHasValidFileData(p0: any): boolean;
/**
 * Hash: 0x15FF52B809DB2353 | ApiSet: undefined
 */
export declare function datafileHasLoadedFileData(p0: any): boolean;
/**
 * Hash: 0xFCCAE5B92A830878 | ApiSet: undefined
 */
export declare function datafileIsValidRequestId(index: number): boolean;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x22DA66936E0FFF37 | ApiSet: undefined
 */
export declare function datafileSelectActiveFile(p0: any): boolean;
/**
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * Hash: 0x9CB0BFA7A9342C3D | ApiSet: undefined
 */
export declare function datafileSelectUgcStats(p0: number, p1: boolean): boolean;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x01095C95CD46B624 | ApiSet: undefined
 */
export declare function datafileSelectCreatorStats(p0: number): boolean;
/**
 * ```
 * Loads a User-Generated Content (UGC) file. These files can be found in "[GTA5]\data\ugc" and "[GTA5]\common\patch\ugc". They seem to follow a naming convention, most likely of "[name]_[part].ugc". See example below for usage.
 * Returns whether or not the file was successfully loaded.
 * Example:
 * `DATAFILE::_LOAD_UGC_FILE("RockstarPlaylists") // loads "rockstarplaylists_00.ugc"`
 * ```
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0xC5238C011AF405E4 | ApiSet: undefined
 */
export declare function datafileLoadOfflineUgc(filename: string): boolean;
/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * ```
 * Hash: 0x2ED61456317B8178 | ApiSet: undefined
 */
export declare function datafileStoreMissionHeader(): void;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x52818819057F2B40 | ApiSet: undefined
 */
export declare function datafileSelectUgcPlayerData(p0: number): boolean;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0xA69AC4ADE82B57A4 | ApiSet: undefined
 */
export declare function datafileSelectUgcData(p0: number): boolean;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x6AD0BD5E087866CB | ApiSet: undefined
 */
export declare function _0x6AD0BD5E087866CB(p0: any): void;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x83BCCE3224735F05 | ApiSet: undefined
 */
export declare function datafileStartSaveToCloud(filename: string): boolean;
/**
 * Hash: 0x4DFDD9EB705F8140 | ApiSet: undefined
 */
export declare function datafileUpdateSaveToCloud(): [boolean, boolean];
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xA6EEF01087181EDD | ApiSet: undefined
 */
export declare function _0xA6EEF01087181EDD(p0: any, p1: any): any;
/**
 * ```
 * Adds the given request ID to the watch list.
 * ```
 * Hash: 0xAD6875BBC0FC899C | ApiSet: undefined
 */
export declare function datafileWatchRequestId(id: number): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xDBF860CF1DB8E599 | ApiSet: undefined
 */
export declare function _0xDBF860CF1DB8E599(p0: any): any;
/**
 * ```
 * NativeDB Added Parameter 8: Any p7
 * ```
 * Hash: 0xC84527E235FCA219 | ApiSet: undefined
 */
export declare function ugcCreateContent(data: string, dataCount: number, contentName: string, description: string, tagsCsv: string, contentTypeName: string, publish: boolean): boolean;
/**
 * ```
 * NativeDB Added Parameter 6: Any p5
 * ```
 * Hash: 0xA5EFC3E847D60507 | ApiSet: undefined
 */
export declare function ugcCreateMission(contentName: string, description: string, tagsCsv: string, contentTypeName: string, publish: boolean): boolean;
/**
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * Hash: 0x692D808C34A82143 | ApiSet: undefined
 */
export declare function ugcSetPlayerData(contentId: string, rating: number, contentTypeName: string): boolean;
/**
 * ```
 * NativeDB Added Parameter 8: Any p7
 * ```
 * Hash: 0x648E7A5434AF7969 | ApiSet: undefined
 */
export declare function ugcUpdateContent(contentId: string, dataCount: number, contentName: string, description: string, tagsCsv: string, contentTypeName: string): [boolean, any];
/**
 * ```
 * NativeDB Added Parameter 6: Any p5
 * ```
 * Hash: 0x4645DE9980999E93 | ApiSet: undefined
 */
export declare function ugcUpdateMission(contentId: string, contentName: string, description: string, tagsCsv: string, contentTypeName: string): boolean;
/**
 * ```
 * Returns whether or not the specified property is set for the entity.
 * ```
 * Hash: 0x05661B80A8C9165F | ApiSet: undefined
 */
export declare function decorExistOn(entity: number | Entity, propertyName: string): boolean;
/**
 * Hash: 0x6524A2F114706F43 | ApiSet: undefined
 */
export declare function decorGetFloat(entity: number | Entity, propertyName: string): number;
/**
 * Hash: 0x4F14F9F870D6FBC8 | ApiSet: undefined
 */
export declare function decorIsRegisteredAsType(propertyName: string, type: number): boolean;
/**
 * Hash: 0xDACE671663F2F5DB | ApiSet: undefined
 */
export declare function decorGetBool(entity: number | Entity, propertyName: string): boolean;
/**
 * ```
 * Called after all decorator type initializations.
 * ```
 * Hash: 0xA9D14EEA259F9248 | ApiSet: undefined
 */
export declare function decorRegisterLock(): void;
/**
 * ```cpp
 * enum eDecorType
 * {
 * DECOR_TYPE_FLOAT = 1,
 * DECOR_TYPE_BOOL = 2,
 * DECOR_TYPE_INT = 3,
 * DECOR_TYPE_STRING = 4,
 * DECOR_TYPE_TIME = 5
 * };
 * ```
 * Hash: 0x9FD90732F56403CE | ApiSet: undefined
 */
export declare function decorRegister(propertyName: string, type: number): void;
/**
 * Hash: 0xA06C969B02A97298 | ApiSet: undefined
 */
export declare function decorGetInt(entity: number | Entity, propertyName: string): number;
/**
 * Hash: 0x00EE9F297C738720 | ApiSet: undefined
 */
export declare function decorRemove(entity: number | Entity, propertyName: string): boolean;
/**
 * Hash: 0x211AB1DD8D0F363A | ApiSet: undefined
 */
export declare function decorSetFloat(entity: number | Entity, propertyName: string, value: number): boolean;
/**
 * ```
 * This function sets metadata of type bool to specified entity.
 * ```
 * Hash: 0x6B1E8E2ED1335B71 | ApiSet: undefined
 */
export declare function decorSetBool(entity: number | Entity, propertyName: string, value: boolean): boolean;
/**
 * Hash: 0x95AED7B8E39ECAA4 | ApiSet: undefined
 */
export declare function decorSetTime(entity: number | Entity, propertyName: string, timestamp: number): boolean;
/**
 * ```
 * Sets property to int.
 * ```
 * Hash: 0x0CE3AA5E1CA19E10 | ApiSet: undefined
 */
export declare function decorSetInt(entity: number | Entity, propertyName: string, value: number): boolean;
/**
 * Hash: 0x10D0A8F259E93EC9 | ApiSet: undefined
 */
export declare function getIsLoadingScreenActive(): boolean;
/**
 * ```
 * Sets the value of the specified variable to 0.
 * Always returns true.
 * ```
 * Hash: 0x46E2B844905BC5F0 | ApiSet: undefined
 */
export declare function hasCloudRequestsFinished(unused: any): [boolean, boolean];
/**
 * Hash: 0x9489659372A81585 | ApiSet: undefined
 */
export declare function _0x9489659372A81585(): boolean;
/**
 * Hash: 0x8D30F648014A92B5 | ApiSet: undefined
 */
export declare function getExtraContentPackHasBeenInstalled(): boolean;
/**
 * ```
 * Only used once in scripts, in maintransition.
 * maintransition.c4, line ~82432:
 * `if (PED::_7350823473013C02(PLAYER::PLAYER_PED_ID()) && (DECORATOR::_241FCA5B1AA14F75() == 0)) {`
 * g_2542A5 = a_1; // 'g_2542A5' used in 'building_controller.ysc' for IPL stuff?
 * return 1;
 * }
 * Likely used solely for the players ped. The function it's in seems to only be used for initialization/quitting. Called among natives to discard scaleforms, disable frontend, fading in/out, etc. Neighboring strings to some calls include "HUD_JOINING", "HUD_QUITTING".
 * Most likely ARE_*
 * ```
 * Hash: 0x241FCA5B1AA14F75 | ApiSet: undefined
 */
export declare function _0x241FCA5B1AA14F75(): boolean;
/**
 * GET_IS_LOADING_\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xC4637A6D03C24CC3 | ApiSet: undefined
 */
export declare function _0xC4637A6D03C24CC3(): boolean;
/**
 * Hash: 0xF2E07819EF1A5289 | ApiSet: undefined
 */
export declare function _0xF2E07819EF1A5289(): boolean;
/**
 * ```
 * This loads the GTA:O dlc map parts (high end garages, apartments).
 * Works in singleplayer.
 * In order to use GTA:O heist IPL's you have to call this native with the following params: SET_INSTANCE_PRIORITY_MODE(1);
 * ```
 * Hash: 0x0888C3502DBBEEF5 | ApiSet: undefined
 */
export declare function onEnterMp(): void;
/**
 * ```
 * Example:
 * `DLC::IS_DLC_PRESENT($\mpbusiness2\);`
 * ($ = gethashkey)
 * bruteforce these:
 * 0xB119F6D
 * 0x96F02EE6
 * ```
 * Hash: 0x812595A0644CE1DE | ApiSet: undefined
 */
export declare function isDlcPresent(dlcHash: number | string): boolean;
/**
 * ```
 * Unloads GROUP_MAP (GTAO/MP) DLC data and loads GROUP_MAP_SP DLC. Neither are loaded by default, 0888C3502DBBEEF5 is a cognate to this function and loads MP DLC (and unloads SP DLC by extension).
 * The original (and wrong) definition is below:
 * This unload the GTA:O DLC map parts (like high end garages/apartments).
 * Works in singleplayer.
 * ```
 * Hash: 0xD7C10C4A637992C9 | ApiSet: undefined
 */
export declare function onEnterSp(): void;
/**
 * Hash: 0xA213B11DFF526300 | ApiSet: undefined
 */
export declare function _0xA213B11DFF526300(): boolean;
/**
 * ```
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 * This is limited to 4 blocked events at a time.
 * ```
 * Hash: 0xE42FCDFD0E4196F7 | ApiSet: undefined
 */
export declare function blockDecisionMakerEvent(name: number | string, eventType: number): void;
/**
 * ```
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 * ```
 * Hash: 0x7FD8F3BE76F89422 | ApiSet: undefined
 */
export declare function addShockingEventForEntity(eventType: number, entity: number | Entity, duration: number): number;
/**
 * ```
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 * ```
 * Hash: 0xD9F8455409B525E9 | ApiSet: undefined
 */
export declare function addShockingEventAtPosition(eventType: number, position: Vector3, duration: number): number;
/**
 * Hash: 0xEAABE8FDFA21274C | ApiSet: undefined
 */
export declare function removeAllShockingEvents(p0: boolean): void;
/**
 * ```
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 * ```
 * Hash: 0x1374ABB7C15BAB92 | ApiSet: undefined
 */
export declare function isShockingEventInSphere(eventType: number, position: Vector3, radius: number): boolean;
/**
 * ```
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 * ```
 * Hash: 0x4FC9381A7AEE8968 | ApiSet: undefined
 */
export declare function clearDecisionMakerEventResponse(name: number | string, eventType: number): void;
/**
 * Hash: 0x340F1415B68AEADE | ApiSet: undefined
 */
export declare function removeShockingEventSpawnBlockingAreas(): void;
/**
 * Hash: 0x2CDA538C44C6CCE5 | ApiSet: undefined
 */
export declare function removeShockingEvent(event: number): boolean;
/**
 * Hash: 0xB604A2942ADED0EE | ApiSet: undefined
 */
export declare function setDecisionMaker(ped: number | Ped, name: number | string): void;
/**
 * Hash: 0x5F3B7749C112D552 | ApiSet: undefined
 */
export declare function suppressAgitationEventsNextFrame(): void;
/**
 * ```
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 * ```
 * Hash: 0x3FD2EC8BF1F1CF30 | ApiSet: undefined
 */
export declare function suppressShockingEventTypeNextFrame(eventType: number): void;
/**
 * ```
 * eventType: https://alloc8or.re/gta5/doc/enums/eEventType.txt
 * ```
 * Hash: 0xD7CD9CF34F2C99E8 | ApiSet: undefined
 */
export declare function unblockDecisionMakerEvent(name: number | string, eventType: number): void;
/**
 * Hash: 0x2F9A292AD0A3BD89 | ApiSet: undefined
 */
export declare function suppressShockingEventsNextFrame(): void;
/**
 * ```cpp
 * enum eApplyForceTypes {
 * APPLY_TYPE_FORCE = 0,
 * APPLY_TYPE_IMPULSE = 1,
 * APPLY_TYPE_EXTERNAL_FORCE = 2,
 * APPLY_TYPE_EXTERNAL_IMPULSE = 3,
 * APPLY_TYPE_TORQUE = 4,
 * APPLY_TYPE_ANGULAR_IMPULSE = 5
 * }
 * ```
 * Hash: 0xC5F68BE9613E2D18 | ApiSet: undefined
 */
export declare function applyForceToEntity(entity: number | Entity, forceType: number, position: Vector3, offX: number, offY: number, offZ: number, nComponent: number, bLocalForce: boolean, bLocalOffset: boolean, bScaleByMass: boolean, bPlayAudio: boolean, bScaleByTimeWarp: boolean): void;
/**
 * Apply a force to an entities center of mass.
 * Hash: 0x18FF00FC7EFF559E | ApiSet: undefined
 */
export declare function applyForceToEntityCenterOfMass(entity: number | Entity, forceType: number, position: Vector3, nComponent: number, bLocalForce: boolean, bScaleByMass: boolean, bApplyToChildren: boolean): void;
/**
 * Hash: 0x5C48B75732C8456C | ApiSet: undefined
 */
export declare function attachEntityBoneToEntityBone(entity1: number | Entity, entity2: number | Entity, entityBone: number, entityBone2: number, p4: boolean, p5: boolean): void;
/**
 * Attach an entity to the specified entity.
 * Hash: 0x6B9BBD38AB0796DF | ApiSet: undefined
 */
export declare function attachEntityToEntity(entity1: number | Entity, entity2: number | Entity, boneIndex: number, xPos: number, yPos: number, zPos: number, xRot: number, yRot: number, zRot: number, p9: boolean, useSoftPinning: boolean, collision: boolean, isPed: boolean, rotationOrder: number, syncRot: boolean): void;
/**
 * Hash: 0xFD1695C5D3B05439 | ApiSet: undefined
 */
export declare function attachEntityBoneToEntityBonePhysically(entity1: number | Entity, entity2: number | Entity, entityBone: number, entityBone2: number, p4: boolean, p5: boolean): void;
/**
 * ```
 * breakForce is the amount of force required to break the bond.
 * p14 - is always 1 in scripts
 * p15 - is 1 or 0 in scripts - unknown what it does
 * p16 - controls collision between the two entities (FALSE disables collision).
 * p17 - do not teleport entity to be attached to the position of the bone Index of the target entity (if 1, entity will not be teleported to target bone)
 * p18 - is always 2 in scripts.
 * ```
 * Hash: 0xC3675780C92F90F9 | ApiSet: undefined
 */
export declare function attachEntityToEntityPhysically(entity1: number | Entity, entity2: number | Entity, boneIndex1: number, boneIndex2: number, xPos1: number, yPos1: number, zPos1: number, xPos2: number, yPos2: number, zPos2: number, xRot: number, yRot: number, zRot: number, breakForce: number, fixedRot: boolean, p15: boolean, collision: boolean, teleport: boolean, p18: number): void;
/**
 * ```
 * Only works with objects!
 * Network players do not see changes done with this.
 * ```
 * Hash: 0x92C47782FDA8B2A3 | ApiSet: undefined
 */
export declare function createModelSwap(position: Vector3, radius: number, originalModel: number | string, newModel: number | string, bSurviveMapReload: boolean): void;
/**
 * This native **could affect** the arguments of the `CEventNetworkEntityDamage` game event, by clearing the damaging entity before the event is fired.
 * Hash: 0xA72CD9CA74A5ECBA | ApiSet: undefined
 */
export declare function clearEntityLastDamageEntity(entity: number | Entity): void;
/**
 * Hash: 0x150E808B375A385A | ApiSet: undefined
 */
export declare function createForcedObject(position: Vector3, p3: any, modelHash: number | string, p5: boolean): void;
/**
 * ```
 * p5 = sets as true in scripts
 * Same as the comment for CREATE_MODEL_SWAP unless for some reason p5 affects it this only works with objects as well.
 * Network players do not see changes done with this.
 * ```
 * Hash: 0x8A97BCA30A0CE478 | ApiSet: undefined
 */
export declare function createModelHide(position: Vector3, radius: number, model: number | string, p5: boolean): void;
/**
 * Hash: 0xDDE6DF5AE89981D2 | ApiSet: undefined
 */
export declare function doesEntityBelongToThisScript(entity: number | Entity, p2: boolean): boolean;
/**
 * Delete the specified entity, and invalidate the passed handle (i.e., the in/out argument).
 * You might want to check if the entity exists before with [DOES_ENTITY_EXIST](#\_0x7239B21A38F536BA).
 * Hash: 0xAE3CBE5BF394C9C9 | ApiSet: undefined
 */
export declare function deleteEntity(entity: number | Entity): void;
/**
 * Hash: 0x3A52AE588830BF7F | ApiSet: undefined
 */
export declare function createModelHideExcludingScriptObjects(position: Vector3, radius: number, model: number | string, p5: boolean): void;
/**
 * Hash: 0x961AC54BF0613F5D | ApiSet: undefined
 */
export declare function detachEntity(entity: number | Entity, dynamic: boolean, collision: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x2158E81A6AF65EA9 | ApiSet: undefined
 */
export declare function doesEntityHaveAnimDirector(entity: number | Entity): boolean;
/**
 * Checks whether an entity exists in the game world.
 * Hash: 0x7239B21A38F536BA | ApiSet: undefined
 */
export declare function doesEntityExist(entity: number | Entity): boolean;
/**
 * Hash: 0xDA95EA3317CC5064 | ApiSet: undefined
 */
export declare function doesEntityHavePhysics(entity: number | Entity): boolean;
/**
 * ```
 * In the script "player_scene_t_bbfight.c4":
 * `"if (ENTITY::FIND_ANIM_EVENT_PHASE(&l_16E, &l_19F[v_4\/\*16\*\/], v_9, &v_A, &v_B))"`
 * -- &l_16E (p0) is requested as an anim dictionary earlier in the script.
 * -- &l_19F[v_4\/\*16\*\/] (p1) is used in other natives in the script as the "animation" param.
 * -- v_9 (p2) is instantiated as "victim_fall"; I'm guessing that's another anim
 * --v_A and v_B (p3 & p4) are both set as -1.0, but v_A is used immediately after this native for:
 * `"if (v_A < ENTITY::GET_ENTITY_ANIM_CURRENT_TIME(...))"`
 * Both v_A and v_B are seemingly used to contain both Vector3's and floats, so I can't say what either really is other than that they are both output parameters. p4 looks more like a *Vector3 though
 * -alphazolam
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0x07F1BE2BCCAA27A7 | ApiSet: undefined
 */
export declare function findAnimEventPhase(animDictionary: string, animName: string, p2: string): [boolean, any, any];
/**
 * Hash: 0x060D6E96F8B8E48D | ApiSet: undefined
 */
export declare function doesEntityHaveDrawable(entity: number | Entity): boolean;
/**
 * ```
 * ENABLE_*
 * ```
 * Hash: 0x6CE177D014502E8A | ApiSet: undefined
 */
export declare function enableEntityUnk(entity: number | Entity): void;
/**
 * Freezes or unfreezes an entity preventing its coordinates to change by the player if set to `true`. You can still change the entity position using [`SET_ENTITY_COORDS`](#\_0x06843DA7060A026B).
 * Hash: 0x428CA6DBD1094446 | ApiSet: undefined
 */
export declare function freezeEntityPosition(entity: number | Entity, toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x764EB96874EFFDC1 | ApiSet: undefined
 */
export declare function doesEntityHaveSkeletonData(entity: number | Entity): boolean;
/**
 * ```
 * Based on carmod_shop script decompile this takes a vehicle parameter. It is called when repair is done on initial enter.
 * ```
 * Hash: 0x40FDEDB72F8293B2 | ApiSet: undefined
 */
export declare function forceEntityAiAndAnimationUpdate(entity: number | Entity): void;
/**
 * Hash: 0xE465D4AB7CA6AE72 | ApiSet: undefined
 */
export declare function getCollisionNormalOfLastHitForEntity(entity: number | Entity): Vector3;
/**
 * ```
 * Returns a float value representing animation's current playtime with respect to its total playtime. This value increasing in a range from [0 to 1] and wrap back to 0 when it reach 1.
 * Example:
 * 0.000000 - mark the starting of animation.
 * 0.500000 - mark the midpoint of the animation.
 * 1.000000 - mark the end of animation.
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0x346D81500D088F42 | ApiSet: undefined
 */
export declare function getEntityAnimCurrentTime(entity: number | Entity, animDict: string, animName: string): number;
/**
 * ```
 * Returns a float value representing animation's total playtime in milliseconds.
 * Example:
 * GET_ENTITY_ANIM_TOTAL_TIME(PLAYER_ID(),"amb@world_human_yoga@female@base","base_b")
 * return 20800.000000
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0x50BD2730B191E360 | ApiSet: undefined
 */
export declare function getEntityAnimTotalTime(entity: number | Entity, animDict: string, animName: string): number;
/**
 * Hash: 0x5A47B3B5E63E94C6 | ApiSet: undefined
 */
export declare function getEntityAlpha(entity: number | Entity): number;
/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0xFEDDF04D62B8D790 | ApiSet: undefined
 */
export declare function getAnimDuration(animDict: string, animName: string): number;
/**
 * ```
 * Gets the world rotation of the specified bone of the specified entity.
 * This native is used in casinoroulette.c but I don't know yet what is the difference with _GET_ENTITY_BONE_ROTATION
 * ```
 * Hash: 0x46F8696933A63C9B | ApiSet: undefined
 */
export declare function getEntityBonePosition2(entity: number | Entity, boneIndex: number): Vector3;
/**
 * Hash: 0xB328DCC3A3AA401B | ApiSet: undefined
 */
export declare function getEntityBoneCount(entity: number | Entity): number;
/**
 * Hash: 0x48C2BED9180FE123 | ApiSet: undefined
 */
export declare function getEntityAttachedTo(entity: number | Entity): number;
/**
 * ```
 * Gets the world rotation of the specified bone of the specified entity.
 * ```
 * Hash: 0xCE6294A232D03786 | ApiSet: undefined
 */
export declare function getEntityBoneRotation(entity: number | Entity, boneIndex: number): Vector3;
/**
 * Gets the local rotation of the specified bone of the specified entity.
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xBD8D32550E5CEBFE | ApiSet: undefined
 */
export declare function getEntityBoneRotationLocal(entity: number | Entity, boneIndex: number): Vector3;
/**
 * Hash: 0xD95CC5D2AB15A09F | ApiSet: undefined
 */
export declare function getEntityCanBeDamaged(entity: number | Entity): boolean;
/**
 * ```
 * Returns the index of the bone. If the bone was not found, -1 will be returned.
 * list:
 * pastebin.com/D7JMnX1g
 * BoneNames:
 * chassis,
 * windscreen,
 * seat_pside_r,
 * seat_dside_r,
 * bodyshell,
 * suspension_lm,
 * suspension_lr,
 * platelight,
 * attach_female,
 * attach_male,
 * bonnet,
 * boot,
 * chassis_dummy,	//Center of the dummy
 * chassis_Control,	//Not found yet
 * door_dside_f,	//Door left, front
 * door_dside_r,	//Door left, back
 * door_pside_f,	//Door right, front
 * door_pside_r,	//Door right, back
 * Gun_GripR,
 * windscreen_f,
 * platelight,	//Position where the light above the numberplate is located
 * VFX_Emitter,
 * window_lf,	//Window left, front
 * window_lr,	//Window left, back
 * window_rf,	//Window right, front
 * window_rr,	//Window right, back
 * engine,	//Position of the engine
 * gun_ammo,
 * ROPE_ATTATCH,	//Not misspelled. In script "finale_heist2b.c4".
 * wheel_lf,	//Wheel left, front
 * wheel_lr,	//Wheel left, back
 * wheel_rf,	//Wheel right, front
 * wheel_rr,	//Wheel right, back
 * exhaust,	//Exhaust. shows only the position of the stock-exhaust
 * overheat,	//A position on the engine(not exactly sure, how to name it)
 * misc_e,	//Not a car-bone.
 * seat_dside_f,	//Driver-seat
 * seat_pside_f,	//Seat next to driver
 * Gun_Nuzzle,
 * seat_r
 * I doubt that the function is case-sensitive, since I found a "Chassis" and a "chassis". - Just tested: Definitely not case-sensitive.
 * ```
 * Hash: 0xFB71170B7E76ACBA | ApiSet: undefined
 */
export declare function getEntityBoneIndexByName(entity: number | Entity, boneName: string): number;
/**
 * ```
 * Gets the X-component of the entity's forward vector.
 * ```
 * Hash: 0x8BB4EF4214E0E6D5 | ApiSet: undefined
 */
export declare function getEntityForwardX(entity: number | Entity): number;
/**
 * ```
 * Gets the entity's forward vector.
 * ```
 * Hash: 0x0A794A5A57F8DF91 | ApiSet: undefined
 */
export declare function getEntityForwardVector(entity: number | Entity): Vector3;
/**
 * Hash: 0xCCF1E97BEFDAE480 | ApiSet: undefined
 */
export declare function getEntityCollisionDisabled(entity: number | Entity): boolean;
/**
 * Gets the heading of the entity physics in degrees, which tends to be more accurate than just [`GET_ENTITY_HEADING`](#\_0xE83D4F9BA2A38914). This can be clearly seen while, for example, ragdolling a ped/player.
 * Hash: 0x846BF6291198A71E | ApiSet: undefined
 */
export declare function getEntityHeadingFromEulers(entity: number | Entity): number;
/**
 * ```
 * Gets the Y-component of the entity's forward vector.
 * ```
 * Hash: 0x866A4A5FAE349510 | ApiSet: undefined
 */
export declare function getEntityForwardY(entity: number | Entity): number;
/**
 * Gets the current coordinates (world position) for a specified entity.
 * Hash: 0x3FEF770D40960D5A | ApiSet: client
 */
export declare function getEntityCoords(entity: number | Entity, alive: boolean): Vector3;
/**
 * ```
 * Returns the heading of the entity in degrees. Also know as the "Yaw" of an entity.
 * ```
 * Hash: 0xE83D4F9BA2A38914 | ApiSet: undefined
 */
export declare function getEntityHeading(entity: number | Entity): number;
/**
 * ```
 * Returns an integer value of entity's current health.
 * Example of range for ped:
 * - Player [0 to 200]
 * - Ped [100 to 200]
 * - Vehicle [0 to 1000]
 * - Object [0 to 1000]
 * Health is actually a float value but this native casts it to int.
 * In order to get the actual value, do:
 * float health = *(float *)(entityAddress + 0x280);
 * ```
 * Hash: 0xEEF059FAD016D209 | ApiSet: undefined
 */
export declare function getEntityHealth(entity: number | Entity): number;
/**
 * Hash: 0x5A504562485944DD | ApiSet: undefined
 */
export declare function getEntityHeight(entity: number | Entity, position: Vector3, atTop: boolean, inWorldCoords: boolean): number;
/**
 * ```
 * Return height (z-dimension) above ground.
 * Example: The pilot in a titan plane is 1.844176 above ground.
 * How can i convert it to meters?
 * Everything seems to be in meters, probably this too.
 * ```
 * Hash: 0x1DD55701034110E5 | ApiSet: undefined
 */
export declare function getEntityHeightAboveGround(entity: number | Entity): number;
/**
 * Hash: 0xECB2FC7235A7D137 | ApiSet: undefined
 */
export declare function getEntityMatrix(entity: number | Entity): [Vector3, Vector3, Vector3, Vector3];
/**
 * ```
 * Returns the LOD distance of an entity.
 * ```
 * Hash: 0x4159C2762B5791D6 | ApiSet: undefined
 */
export declare function getEntityLodDist(entity: number | Entity): number;
/**
 * ```
 * Return an integer value of entity's maximum health.
 * Example:
 * - Player = 200
 * ```
 * Hash: 0x15D757606D170C3C | ApiSet: undefined
 */
export declare function getEntityMaxHealth(entity: number | Entity): number;
/**
 * Hash: 0xD45DC2893621E1FE | ApiSet: undefined
 */
export declare function getEntityPitch(entity: number | Entity): number;
/**
 * Returns the model hash from an entity.
 * Hash: 0x9F47B058362C84B5 | ApiSet: undefined
 */
export declare function getEntityModel(entity: number | Entity): number;
/**
 * ```
 * GET_ENTITY_*
 * Seems to return the handle of the entity's portable pickup.
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x1F922734E259BD26 | ApiSet: undefined
 */
export declare function getEntityPickup(entity: number | Entity, modelHash: number | string): number;
/**
 * ```
 * Displays the current ROLL axis of the entity [-180.0000/180.0000+]
 * (Sideways Roll) such as a vehicle tipped on its side
 * ```
 * Hash: 0x831E0242595560DF | ApiSet: undefined
 */
export declare function getEntityRoll(entity: number | Entity): number;
/**
 * A population type, from the following enum: https://alloc8or.re/gta5/doc/enums/ePopulationType.txt
 * Hash: 0xF6F5161F4534EDFF | ApiSet: undefined
 */
export declare function getEntityPopulationType(entity: number | Entity): number;
/**
 * ```
 * w is the correct parameter name!
 * ```
 * Hash: 0x7B3703D2D32DFA18 | ApiSet: undefined
 */
export declare function getEntityQuaternion(entity: number | Entity): [number, number, number, number];
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xBE8CD9BE829BBEBF | ApiSet: undefined
 */
export declare function getEntityProofs(entity: number | Entity): [boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean, boolean];
/**
 * **NOTE**: What you use for rotationOrder when getting must be the same as rotationOrder when setting the rotation.
 * ```cpp
 * enum eRotationOrder {
 * // Rotate around the z-axis, then the y-axis and finally the x-axis.
 * ROT_ZYX = 0,
 * // Rotate around the y-axis, then the z-axis and finally the x-axis.
 * ROT_YZX = 1,
 * // Rotate around the z-axis, then the x-axis and finally the y-axis.
 * ROT_ZXY = 2,
 * // Rotate around the x-axis, then the z-axis and finally the y-axis.
 * ROT_XZY = 3,
 * // Rotate around the y-axis, then the x-axis and finally the z-axis.
 * ROT_YXZ = 4,
 * // Rotate around the x-axis, then the y-axis and finally the z-axis.
 * ROT_XYZ = 5,
 * }
 * ```
 * Hash: 0xAFBD61CC738D9EB9 | ApiSet: undefined
 */
export declare function getEntityRotation(entity: number | Entity, rotationOrder: number): Vector3;
/**
 * ```
 * All ambient entities in-world seem to have the same value for the second argument (Any *script), depending on when the scripthook was activated/re-activated. I've seen numbers from ~5 to almost 70 when the value was translated with to_string. The function return value seems to always be 0.
 * ```
 * Hash: 0xA6E9C38DB51D7748 | ApiSet: undefined
 */
export declare function getEntityScript(entity: number | Entity): [string, number];
/**
 * Get the speed of a entity.
 * Hash: 0xD5037BA82E12416F | ApiSet: undefined
 */
export declare function getEntitySpeed(entity: number | Entity): number;
/**
 * ```
 * Get how much of the entity is submerged.  1.0f is whole entity.
 * ```
 * Hash: 0xE81AFC1BC4CC41CE | ApiSet: undefined
 */
export declare function getEntitySubmergedLevel(entity: number | Entity): number;
/**
 * Hash: 0x213B91045D09B983 | ApiSet: undefined
 */
export declare function getEntityRotationVelocity(entity: number | Entity): Vector3;
/**
 * ```
 * Returns:
 * 0 = no entity
 * 1 = ped
 * 2 = vehicle
 * 3 = object
 * ```
 * Hash: 0x8ACD366038D14505 | ApiSet: undefined
 */
export declare function getEntityType(entity: number | Entity): number;
/**
 * ```
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 * ```
 * Hash: 0xD7E3B9735C0F89D6 | ApiSet: undefined
 */
export declare function getObjectIndexFromEntityIndex(entity: number | Entity): any;
/**
 * Hash: 0x95EED5A694951F9F | ApiSet: undefined
 */
export declare function getEntityUprightValue(entity: number | Entity): number;
/**
 * ```
 * Converts world coords (posX - Z) to coords relative to the entity
 * Example:
 * posX = 50
 * posY = 1000
 * posZ = 60
 * Entity's coords are: x=30, y=1000, z=60.
 * All three returned coords will then be in range of [-20,20] depending on rotation of the entity.
 * ```
 * Hash: 0x2274BC1C4885E333 | ApiSet: undefined
 */
export declare function getOffsetFromEntityGivenWorldCoords(entity: number | Entity, posX: number, posY: number, posZ: number): Vector3;
/**
 * Hash: 0x4DC9A62F844D9337 | ApiSet: undefined
 */
export declare function getNearestPlayerToEntityOnTeam(entity: number | Entity, team: number): number | string;
/**
 * Hash: 0x5C3D0A935F535C4C | ApiSet: undefined
 */
export declare function getLastMaterialHitByEntity(entity: number | Entity): number;
/**
 * ```
 * Relative can be used for getting speed relative to the frame of the vehicle, to determine for example, if you are going in reverse (-y speed) or not (+y speed).
 * ```
 * Hash: 0x9A8D700A51CB7B0D | ApiSet: undefined
 */
export declare function getEntitySpeedVector(entity: number | Entity, relative: boolean): Vector3;
/**
 * ```
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 * ```
 * Hash: 0x4B53F92932ADFAC0 | ApiSet: undefined
 */
export declare function getVehicleIndexFromEntityIndex(entity: number | Entity): number;
/**
 * ```
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 * ```
 * Hash: 0x04A2A40C73395041 | ApiSet: undefined
 */
export declare function getPedIndexFromEntityIndex(entity: number | Entity): number;
/**
 * Hash: 0x4805D2B1D8CF94A9 | ApiSet: undefined
 */
export declare function getEntityVelocity(entity: number | Entity): Vector3;
/**
 * ```
 * Returns the coordinates of an entity-bone.
 * ```
 * Hash: 0x44A8FCB8ED227738 | ApiSet: undefined
 */
export declare function getWorldPositionOfEntityBone(entity: number | Entity, boneIndex: number): Vector3;
/**
 * Hash: 0x95EB9964FF5C5C65 | ApiSet: undefined
 */
export declare function hasEntityBeenDamagedByAnyObject(entity: number | Entity): boolean;
/**
 * ```
 * Offset values are relative to the entity.
 * x = left/right
 * y = forward/backward
 * z = up/down
 * ```
 * Hash: 0x1899F328B0E12848 | ApiSet: undefined
 */
export declare function getOffsetFromEntityInWorldCoords(entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number): Vector3;
/**
 * Hash: 0xDFD5033FDBA0A9C8 | ApiSet: undefined
 */
export declare function hasEntityBeenDamagedByAnyVehicle(entity: number | Entity): boolean;
/**
 * ```
 * `if (ENTITY::HAS_ANIM_EVENT_FIRED(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("CreateObject")))`
 * ```
 * Hash: 0xEAF4CD9EA3E7E922 | ApiSet: undefined
 */
export declare function hasAnimEventFired(entity: number | Entity, actionHash: number | string): boolean;
/**
 * Hash: 0x7196842CB375CDB3 | ApiSet: undefined
 */
export declare function getNearestPlayerToEntity(entity: number | Entity): number | string;
/**
 * ```
 * P3 is always 3 as far as i cant tell
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0x20B711662962B472 | ApiSet: undefined
 */
export declare function hasEntityAnimFinished(entity: number | Entity, animDict: string, animName: string, p3: number): boolean;
/**
 * Hash: 0xE9676F61BC0B3321 | ApiSet: undefined
 */
export declare function hasCollisionLoadedAroundEntity(entity: number | Entity): boolean;
/**
 * Hash: 0xC86D67D52A707CF8 | ApiSet: undefined
 */
export declare function hasEntityBeenDamagedByEntity(entity: number | Entity, damager: number | Entity, bCheckDamagerVehicle: boolean): boolean;
/**
 * Hash: 0x605F5A140F202491 | ApiSet: undefined
 */
export declare function hasEntityBeenDamagedByAnyPed(entity: number | Entity): boolean;
/**
 * Checks if entity1 has a clear line of sight to entity2. So a simple raycast which if it collides with any of the given colliderTypes returns false.
 * The direction of the check matters with for example bushes, so checking from inside to outside a bush with traceType 256 returns true, but the other way around returns false.
 * Hash: 0xFCDFF7B72D23A1AC | ApiSet: undefined
 */
export declare function hasEntityClearLosToEntity(entity1: number | Entity, entity2: number | Entity, flags: number): boolean;
/**
 * Hash: 0x0A7B270912999B3C | ApiSet: undefined
 */
export declare function isEntityAMissionEntity(entity: number | Entity): boolean;
/**
 * ```
 * Has the entity1 got a clear line of sight to the other entity2 from the direction entity1 is facing.
 * This is one of the most CPU demanding BOOL natives in the game; avoid calling this in things like nested for-loops
 * ```
 * Hash: 0x0267D00AF114F17A | ApiSet: undefined
 */
export declare function hasEntityClearLosToEntityInFront(entity1: number | Entity, entity2: number | Entity): boolean;
/**
 * Hash: 0x8D68C8FD0FACA94E | ApiSet: undefined
 */
export declare function isEntityAnObject(entity: number | Entity): boolean;
/**
 * ```
 * Called on tick.
 * Tested with vehicles, returns true whenever the vehicle is touching any entity.
 * Note: for vehicles, the wheels can touch the ground and it will still return false, but if the body of the vehicle touches the ground, it will return true.
 * ```
 * Hash: 0x8BAD02F0368D9E14 | ApiSet: undefined
 */
export declare function hasEntityCollidedWithAnything(entity: number | Entity): boolean;
/**
 * Hash: 0x524AC5ECEA15343E | ApiSet: undefined
 */
export declare function isEntityAPed(entity: number | Entity): boolean;
/**
 * Hash: 0xB346476EF1A64897 | ApiSet: undefined
 */
export declare function isEntityAttached(entity: number | Entity): boolean;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x394BDE2A7BBA031E | ApiSet: undefined
 */
export declare function hasEntityClearLosToEntity2(entity1: number | Entity, entity2: number | Entity, traceType: number): any;
/**
 * Hash: 0x6AC7003FA6E5575E | ApiSet: undefined
 */
export declare function isEntityAVehicle(entity: number | Entity): boolean;
/**
 * Checks if entity is within the specified axis aligned box around the target entity.
 * ```cpp
 * enum eTransportMode {
 * SCRIPT_TM_ANY = 0,
 * SCRIPT_TM_ON_FOOT = 1,
 * SCRIPT_TM_IN_VEHICLE = 2
 * };
 * ```
 * Hash: 0x751B70C3D034E187 | ApiSet: undefined
 */
export declare function isEntityAtEntity(entity: number | Entity, target: number | Entity, xSize: number, ySize: number, zSize: number, highlightArea: boolean, do3dCheck: boolean, transportMode: number): boolean;
/**
 * Hash: 0x731EC8A916BD11A1 | ApiSet: undefined
 */
export declare function isAnEntity(handle: number): boolean;
/**
 * Hash: 0xB1632E9A5F988D11 | ApiSet: undefined
 */
export declare function isEntityAttachedToAnyPed(entity: number | Entity): boolean;
/**
 * ```
 * NativeDB Added Parameter 2: BOOL p1
 * ```
 * Hash: 0x5F9532F3B5CC2551 | ApiSet: undefined
 */
export declare function isEntityDead(entity: number | Entity): boolean;
/**
 * Hash: 0xCF511840CEEDE0CC | ApiSet: undefined
 */
export declare function isEntityAttachedToAnyObject(entity: number | Entity): boolean;
/**
 * Checks if the entity is within the given square of size xSize, ySize, zSize centered around the given coordinates.
 * The sizes given are the apothem (half of side) of the square, so a size of 5 would result in a square of 10x10, not 5x5.
 * For the highlightArea, if do3dCheck is true, the marker will be drawn at the bottom of the target area. So if the square is centered on the ground with a zSize larger than 0, the marker will appear under the ground.
 * The marker also doesn't scale, so it is always the same size (around half a meter).
 * So unfortunately the marker isn't that useful as it doesn't convey the correct information about the area (the marker doesn't reflect when the player is actually in the marker or not)
 * Hash: 0x20B60995556D004F | ApiSet: undefined
 */
export declare function isEntityAtCoord(entity: number | Entity, xPos: number, yPos: number, zPos: number, xSize: number, ySize: number, zSize: number, highlightArea: boolean, do3dCheck: boolean, transportMode: number): boolean;
/**
 * Hash: 0xEFBE71898A993728 | ApiSet: undefined
 */
export declare function isEntityAttachedToEntity(from: number | Entity, to: number | Entity): boolean;
/**
 * p10 is some entity flag check, also used in [`IS_ENTITY_AT_ENTITY`](#\_0x751B70C3D034E187), [`IS_ENTITY_IN_AREA`](#\_0x54736AA40E271165) and [`IS_ENTITY_AT_COORD`](#\_0x20B60995556D004F).
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * Hash: 0x51210CED3DA1C78A | ApiSet: undefined
 */
export declare function isEntityInAngledArea(entity: number | Entity, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, debug: boolean, includez: boolean, p10: any): boolean;
/**
 * Hash: 0x26AA915AD89BFB4B | ApiSet: undefined
 */
export declare function isEntityAttachedToAnyVehicle(entity: number | Entity): boolean;
/**
 * Hash: 0x886E37EC497200B6 | ApiSet: undefined
 */
export declare function isEntityInAir(entity: number | Entity): boolean;
/**
 * Hash: 0xB6463CF6AF527071 | ApiSet: undefined
 */
export declare function isEntityInZone(entity: number | Entity, zone: string): boolean;
/**
 * Hash: 0xCFB0A0D8EDD145A3 | ApiSet: undefined
 */
export declare function isEntityInWater(entity: number | Entity): boolean;
/**
 * Hash: 0x54736AA40E271165 | ApiSet: undefined
 */
export declare function isEntityInArea(entity: number | Entity, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p7: boolean, p8: boolean, p9: any): boolean;
/**
 * Determines whether the screen position of the specified entity is within the 2D bounds of the screen.
 * This native will not check if the entity is not visible due to being occluded (for example, behind a wall). To check if a entity is on screen and is not occluded, use [IS_ENTITY_OCCLUDED](#\_0xE31C2C72B8692B64).
 * Hash: 0xE659E47AF827484B | ApiSet: undefined
 */
export declare function isEntityOnScreen(entity: number | Entity): boolean;
/**
 * Hash: 0xE31C2C72B8692B64 | ApiSet: undefined
 */
export declare function isEntityOccluded(entity: number | Entity): boolean;
/**
 * Hash: 0x17FFC1B2BA35A494 | ApiSet: undefined
 */
export declare function isEntityTouchingEntity(entity: number | Entity, targetEntity: number | Entity): boolean;
/**
 * ```
 * `A static ped will not react to natives like "APPLY_FORCE_TO_ENTITY" or "SET_ENTITY_VELOCITY" and oftentimes will not react to task-natives like "AI::TASK_COMBAT_PED". The only way I know of to make one of these peds react is to ragdoll them (or sometimes to use CLEAR_PED_TASKS_IMMEDIATELY(). Static peds include almost all far-away peds, beach-combers, peds in certain scenarios, peds crossing a crosswalk, peds walking to get back into their cars, and others. If anyone knows how to make a ped non-static without ragdolling them, please edit this with the solution.`
 * ^ Attach a phCollider to the ped.
 * ```
 * Hash: 0x1218E6886D3D8327 | ApiSet: undefined
 */
export declare function isEntityStatic(entity: number | Entity): boolean;
/**
 * Hash: 0x0F42323798A58C8C | ApiSet: undefined
 */
export declare function isEntityTouchingModel(entity: number | Entity, modelHash: number | string): boolean;
/**
 * See also [`IS_SCRIPTED_SCENARIO_PED_USING_CONDITIONAL_ANIM`](#\_0x6EC47A344923E1ED)
 * ```
 * `Taken from ENTITY::IS_ENTITY_PLAYING_ANIM(PLAYER::PLAYER_PED_ID(), "creatures@shark@move", "attack_player", 3)`
 * p4 is always 3 in the scripts.
 * taskFlag:
 * 2 - Check synchronized scene
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0x1F0B79228E461EC9 | ApiSet: undefined
 */
export declare function isEntityPlayingAnim(entity: number | Entity, animDict: string, animName: string, taskFlag: number): boolean;
/**
 * Hash: 0x5333F526F6AB19AA | ApiSet: undefined
 */
export declare function isEntityUpright(entity: number | Entity, angle: number): boolean;
/**
 * Hash: 0x1DBD58820FA61D71 | ApiSet: undefined
 */
export declare function isEntityUpsidedown(entity: number | Entity): boolean;
/**
 * Hash: 0xD796CB5BA8F20E32 | ApiSet: undefined
 */
export declare function isEntityVisibleToScript(entity: number | Entity): boolean;
/**
 * Hash: 0xD05BFF0C0A12C68F | ApiSet: undefined
 */
export declare function isEntityWaitingForWorldCollision(entity: number | Entity): boolean;
/**
 * Hash: 0x47D6F43D77935C75 | ApiSet: undefined
 */
export declare function isEntityVisible(entity: number | Entity): boolean;
/**
 * Hash: 0x36F32DE87082343E | ApiSet: undefined
 */
export declare function _0x36F32DE87082343E(p0: any, p1: any): void;
/**
 * ```
 * SET_ENTITY_*
 * ```
 * Hash: 0x1A092BB0C3808B96 | ApiSet: undefined
 */
export declare function _0x1A092BB0C3808B96(entity: number | Entity, p1: boolean): void;
/**
 * Hash: 0x352E2B5CF420BF3B | ApiSet: undefined
 */
export declare function _0x352E2B5CF420BF3B(p0: any, p1: any): void;
/**
 * ```
 * Does nothing (essentially a nullsub).
 * ```
 * Hash: 0x490861B88F4FD846 | ApiSet: undefined
 */
export declare function _0x490861B88F4FD846(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x68B562E124CC0AEF | ApiSet: undefined
 */
export declare function _0x68B562E124CC0AEF(p0: any, p1: any): void;
/**
 * ```
 * Only called once in the scripts.
 * Related to weapon objects.
 * ```
 * Hash: 0x5C3B791D580E0BC2 | ApiSet: undefined
 */
export declare function _0x5C3B791D580E0BC2(entity: number | Entity, p1: number): void;
/**
 * Hash: 0xB17BC6453F6CF5AC | ApiSet: undefined
 */
export declare function _0xB17BC6453F6CF5AC(p0: any, p1: any): void;
/**
 * ```
 * Related to cutscene entities. Unsure about the use.
 * SET_ENTITY_*
 * ```
 * Hash: 0x78E8E3A640178255 | ApiSet: undefined
 */
export declare function _0x78E8E3A640178255(entity: number | Entity): void;
/**
 * ```
 * SET_ENTITY_*
 * ```
 * Hash: 0xC34BC448DA29F5E9 | ApiSet: undefined
 */
export declare function _0xC34BC448DA29F5E9(entity: number | Entity, toggle: boolean): void;
/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0x7FB218262B810701 | ApiSet: undefined
 */
export declare function playEntityAnim(entity: number | Entity, animName: string, animDict: string, fBlendDelta: number, bLoop: boolean, bHoldLastFrame: boolean, bDriveToPose: boolean, fStartPhase: number, iFlags: number): boolean;
/**
 * SET_ENTITY_M\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xE66377CDDADA4810 | ApiSet: undefined
 */
export declare function _0xE66377CDDADA4810(entity: number | Entity, p1: boolean): void;
/**
 * Hash: 0xCEA7C8E1B48FF68C | ApiSet: undefined
 */
export declare function _0xCEA7C8E1B48FF68C(p0: any, p1: any): void;
/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0xC77720A12FE14A86 | ApiSet: undefined
 */
export declare function playSynchronizedEntityAnim(entity: number | Entity, syncedScene: number, animName: string, animDictName: string, fBlendInDelta: number, fBlendOutDelta: number, iFlags: number, fMoverBlendInDelta: number): boolean;
/**
 * ```
 * Called to update entity attachments.
 * ```
 * Hash: 0xF4080490ADC51C6F | ApiSet: undefined
 */
export declare function processEntityAttachments(entity: number | Entity): void;
/**
 * Hash: 0x61B6775E83C0DB6F | ApiSet: undefined
 */
export declare function removeForcedObject(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * p5 requires more research. See also [`CREATE_MODEL_HIDE`](#\_0x8A97BCA30A0CE478) and [`CREATE_MODEL_SWAP`](#\_0x92C47782FDA8B2A3).
 * Network players do not see changes done with this.
 * Hash: 0xD9E3006FB3CBD765 | ApiSet: undefined
 */
export declare function removeModelHide(position: Vector3, radius: number, model: number | string, p5: boolean): void;
/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0xB9C54555ED30FBC4 | ApiSet: undefined
 */
export declare function playSynchronizedMapEntityAnim(position: Vector3, radius: number, objectModelHash: number | string, sceneId: number, fBlendDelta: number, fBlendOutDelta: number, flags: number, fMoverBlendInDelta: number): [boolean, string, string];
/**
 * Hash: 0xA80AE305E0A3044F | ApiSet: undefined
 */
export declare function setCanClimbOnEntity(entity: number | Entity, toggle: boolean): void;
/**
 * Hash: 0x033C0F9A64E229AE | ApiSet: undefined
 */
export declare function removeModelSwap(position: Vector3, radius: number, oldModelHash: number | string, newModelHash: number | string, bLazy: boolean): void;
/**
 * Hash: 0xE12ABE5E3A389A6C | ApiSet: undefined
 */
export declare function setCanAutoVaultOnEntity(entity: number | Entity, toggle: boolean): void;
/**
 * Hash: 0x9B1E824FFBB7027A | ApiSet: undefined
 */
export declare function resetEntityAlpha(entity: number | Entity): void;
/**
 * Hash: 0xACAD101E1FB66689 | ApiSet: undefined
 */
export declare function setEntityAlwaysPrerender(entity: number | Entity, toggle: boolean): void;
/**
 * This native sets the entity's alpha level.
 * Hash: 0x44A0870B7E92D7C0 | ApiSet: undefined
 */
export declare function setEntityAlpha(entity: number | Entity, alphaLevel: number, skin: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x8339643499D1222E | ApiSet: undefined
 */
export declare function setEntityAngularVelocity(entity: number | Entity, position: Vector3): void;
/**
 * Hash: 0x28D1A16553C51776 | ApiSet: undefined
 */
export declare function setEntityAnimSpeed(entity: number | Entity, animDictionary: string, animName: string, speedMultiplier: number): void;
/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0x4487C259F0F70977 | ApiSet: undefined
 */
export declare function setEntityAnimCurrentTime(entity: number | Entity, animDictionary: string, animName: string, time: number): void;
/**
 * ```
 * Marks the specified entity (ped, vehicle or object) as no longer needed.
 * Entities marked as no longer needed, will be deleted as the engine sees fit.
 * ```
 * Hash: 0xB736A491E64A32CF | ApiSet: undefined
 */
export declare function setEntityAsNoLongerNeeded(entity: number | Entity): number;
/**
 * Hash: 0x1760FFA8AB074D66 | ApiSet: undefined
 */
export declare function setEntityCanBeDamaged(entity: number | Entity, toggle: boolean): void;
/**
 * Assigns an existing entity to be owned by the current script. If the entity was not owned by a script yet, this also means the entity will remain persistent until released.
 * Note that this is not needed right after creating an entity as a script-created entity will automatically be assigned.
 * Hash: 0xAD738C3085FE7E11 | ApiSet: undefined
 */
export declare function setEntityAsMissionEntity(entity: number | Entity, scriptHostObject: boolean, bGrabFromOtherScript: boolean): void;
/**
 * ```
 * Sets whether the entity can be targeted without being in line-of-sight.
 * ```
 * Hash: 0xD3997889736FD899 | ApiSet: undefined
 */
export declare function setEntityCanBeTargetedWithoutLos(entity: number | Entity, toggle: boolean): void;
/**
 * Hash: 0xE22D8FDE858B8119 | ApiSet: undefined
 */
export declare function setEntityCanBeDamagedByRelationshipGroup(entity: number | Entity, bCanBeDamaged: boolean, relGroup: number): void;
/**
 * Hash: 0x1A9205C1B9EE827F | ApiSet: undefined
 */
export declare function setEntityCollision(entity: number | Entity, toggle: boolean, keepPhysics: boolean): void;
/**
 * Teleports an entity to specified coordinates directly, with options to maintain certain behaviors post-teleportation.
 * **Note**:
 * *   This native allows precise placement of entities without the usual adjustments for collision or interaction with the environment that may occur with other teleportation natives.
 * *   The `keepTasks` and `keepIK` parameters are specifically useful for maintaining the current state of a ped, ensuring actions or animations are not abruptly stopped due to the teleportation.
 * *   Setting `doWarp` to `false` is useful when simulating continuous movement or when the entity should interact with its immediate surroundings upon arrival.
 * Hash: 0x239A3351AC1DA385 | ApiSet: undefined
 */
export declare function setEntityCoordsNoOffset(entity: number | Entity, position: Vector3, keepTasks: boolean, keepIK: boolean, doWarp: boolean): void;
/**
 * Hash: 0x9EBC85ED0FFFE51C | ApiSet: undefined
 */
export declare function setEntityCompletelyDisableCollision(entity: number | Entity, toggle: boolean, keepPhysics: boolean): void;
/**
 * Hash: 0x1718DE8E3F2823CA | ApiSet: undefined
 */
export declare function setEntityDynamic(entity: number | Entity, toggle: boolean): void;
/**
 * Sets the coordinates (world position) for a specified entity, offset by the radius of the entity on the Z axis.
 * Hash: 0x06843DA7060A026B | ApiSet: undefined
 */
export declare function setEntityCoords(entity: number | Entity, xPos: number, yPos: number, zPos: number, alive: boolean, deadFlag: boolean, ragdollFlag: boolean, clearArea: boolean): void;
/**
 * ```
 * True means it can be deleted by the engine when switching lobbies/missions/etc, false means the script is expected to clean it up.
 * ```
 * Hash: 0x3910051CCECDB00C | ApiSet: undefined
 */
export declare function setEntityCleanupByEngine(entity: number | Entity, toggle: boolean): void;
/**
 * Hash: 0x4A4722448F18EEF5 | ApiSet: undefined
 */
export declare function setEntityHasGravity(entity: number | Entity, toggle: boolean): void;
/**
 * Hash: 0xEA02E132F5C68722 | ApiSet: undefined
 */
export declare function setEntityIsTargetPriority(entity: number | Entity, p1: boolean, p2: number): void;
/**
 * ```
 * SET_ENTITY_*
 * ```
 * Hash: 0x2C2E3DC128F44309 | ApiSet: undefined
 */
export declare function setEntityDecalsDisabled(entity: number | Entity, p1: boolean): void;
/**
 * Hash: 0x621873ECE1178967 | ApiSet: undefined
 */
export declare function setEntityCoordsWithoutPlantsReset(entity: number | Entity, xPos: number, yPos: number, zPos: number, alive: boolean, deadFlag: boolean, ragdollFlag: boolean, clearArea: boolean): void;
/**
 * When setting health for a player ped, the game will clamp the health value to ensure it does not exceed the maximum health. This maximum health can be retrieved by calling [`GET_PED_MAX_HEALTH`](#\_0x4700A416E8324EF3). It can also be modified by calling [`SET_PED_MAX_HEALTH`](#\_0xF5F6378C4F3419D3).
 * When setting the health for non-player peds or entities, the maximum health will be increased if the new health value exceeds the current maximum.
 * Default health for male peds is `200`, for female peds it is `175`.
 * ### Added parameters
 * *   **inflictor**: The handle for the entity that caused the damage.
 * Hash: 0x6B76DC1F3AE6E6A3 | ApiSet: undefined
 */
export declare function setEntityHealth(entity: number | Entity, health: number): void;
/**
 * Set the heading of an entity in degrees also known as "Yaw".
 * Hash: 0x8E2530AA8ADA980E | ApiSet: undefined
 */
export declare function setEntityHeading(entity: number | Entity, heading: number): void;
/**
 * ```
 * Sets a ped or an object totally invincible. It doesn't take any kind of damage. Peds will not ragdoll on explosions and the tazer animation won't apply either.
 * If you use this for a ped and you want Ragdoll to stay enabled, then do:
 * *(DWORD *)(pedAddress + 0x188) |= (1 << 9);
 * Use this if you want to get the invincibility status:
 * bool IsPedInvincible(Ped ped)
 * {
 * auto addr = getScriptHandleBaseAddress(ped);
 * if (addr)
 * {
 * DWORD flag = *(DWORD *)(addr + 0x188);
 * return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);
 * }
 * return false;
 * }
 * ```
 * Hash: 0x3882114BDE571AD4 | ApiSet: undefined
 */
export declare function setEntityInvincible(entity: number | Entity, toggle: boolean): void;
/**
 * Hash: 0x7CFBA6A80BDF3874 | ApiSet: undefined
 */
export declare function setEntityLights(entity: number | Entity, toggle: boolean): void;
/**
 * ```
 * LOD distance can be 0 to 0xFFFF (higher values will result in 0xFFFF) as it is actually stored as a 16-bit value (aka uint16_t).
 * ```
 * Hash: 0x5927F96A78577363 | ApiSet: undefined
 */
export declare function setEntityLodDist(entity: number | Entity, value: number): void;
/**
 * Loads collision grid for an entity spawned outside of a player's loaded area. This allows peds to execute tasks rather than sit dormant because of a lack of a physics grid.
 * Certainly not the main usage of this native but when set to true for a Vehicle, it will prevent the vehicle to explode if it is spawned far away from the player.
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * Hash: 0x0DC7CABAB1E9B67E | ApiSet: undefined
 */
export declare function setEntityLoadCollisionFlag(entity: number | Entity, toggle: boolean): void;
/**
 * ```
 * `For instance: ENTITY::SET_ENTITY_MAX_HEALTH(PLAYER::PLAYER_PED_ID(), 200); // director_mode.c4: 67849`
 * ```
 * Hash: 0x166E7CF68597D8B5 | ApiSet: undefined
 */
export declare function setEntityMaxHealth(entity: number | Entity, value: number): void;
/**
 * Hash: 0x295D82A8559F9150 | ApiSet: undefined
 */
export declare function setEntityMotionBlur(entity: number | Entity, toggle: boolean): void;
/**
 * Hash: 0x0E46A3FCBDE2A1B1 | ApiSet: undefined
 */
export declare function setEntityMaxSpeed(entity: number | Entity, speed: number): void;
/**
 * ```
 * Enable / disable each type of damage.
 * --------------
 * `p7 is to to '1' in am_mp_property_ext/int: entity::set_entity_proofs(uParam0->f_19, true, true, true, true, true, true, 1, true);`
 * ```
 * Hash: 0xFAEE099C6F890BB8 | ApiSet: undefined
 */
export declare function setEntityProofs(entity: number | Entity, bulletProof: boolean, fireProof: boolean, explosionProof: boolean, collisionProof: boolean, meleeProof: boolean, steamProof: boolean, p7: boolean, drownProof: boolean): void;
/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0x0A27A7827347B3B1 | ApiSet: undefined
 */
export declare function setEntityNoCollisionWithNetworkedEntity(entity1: number | Entity, entity2: number | Entity): void;
/**
 * ```
 * Calling this function disables collision between two entities.
 * The importance of the order for entity1 and entity2 is unclear.
 * The third parameter, `thisFrame`, decides whether the collision is to be disabled until it is turned back on, or if it's just this frame.
 * ```
 * Hash: 0xA53ED5520C07654A | ApiSet: undefined
 */
export declare function setEntityNoCollisionEntity(entity1: number | Entity, entity2: number | Entity, thisFrameOnly: boolean): void;
/**
 * Hash: 0x79F020FF9EDC0748 | ApiSet: undefined
 */
export declare function setEntityOnlyDamagedByPlayer(entity: number | Entity, toggle: boolean): void;
/**
 * Hash: 0x7022BD828FA0B082 | ApiSet: undefined
 */
export declare function setEntityOnlyDamagedByRelationshipGroup(entity: number | Entity, p1: boolean, relationshipHash: number | string): void;
/**
 * Hash: 0x0A50A1EEDAD01E65 | ApiSet: undefined
 */
export declare function setEntityRecordsCollisions(entity: number | Entity, toggle: boolean): void;
/**
 * ```
 * w is the correct parameter name!
 * ```
 * Hash: 0x77B21BE7AC540F07 | ApiSet: undefined
 */
export declare function setEntityQuaternion(entity: number | Entity, position: Vector3, w: number): void;
/**
 * Hash: 0x694E00132F2823ED | ApiSet: undefined
 */
export declare function setEntityRequiresMoreExpensiveRiverCheck(entity: number | Entity, toggle: boolean): void;
/**
 * Changing traffic-lights will not change the behavior of NPCs.
 * Example: [here](https://www.gtaforums.com/topic/830463-help-with-turning-lights-green-and-causing-peds-to-crash-into-each-other/#entry1068211340)
 * ```cpp
 * enum eTrafficlightOverrideMode
 * {
 * TLO_RED = 0,
 * TLO_AMBER = 1,
 * TLO_GREEN = 2,
 * TLO_NONE = 3
 * }
 * ```
 * Hash: 0x57C5DB656185EAC4 | ApiSet: undefined
 */
export declare function setEntityTrafficlightOverride(entity: number | Entity, state: number): void;
/**
 * Hash: 0x730F5F8D3F0F2050 | ApiSet: undefined
 */
export declare function setEntityRenderScorched(entity: number | Entity, toggle: boolean): void;
/**
 * Toggle the visibility of a given entity.
 * Hash: 0xEA1C610A04DB6BBB | ApiSet: undefined
 */
export declare function setEntityVisible(entity: number | Entity, toggle: boolean, unk: boolean): void;
/**
 * ```
 * Note that the third parameter(denoted as z) is "up and down" with positive numbers encouraging upwards movement.
 * ```
 * Hash: 0x1C99BB7B6E96D16F | ApiSet: undefined
 */
export declare function setEntityVelocity(entity: number | Entity, position: Vector3): void;
/**
 * Sets the rotation of a specified entity in the game world.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x8524A8B0171D5E07 | ApiSet: undefined
 */
export declare function setEntityRotation(entity: number | Entity, pitch: number, roll: number, yaw: number, rotationOrder: number, bDeadCheck: boolean): void;
/**
 * Configures an entity to either allow or prevent it from being picked up by Cargobobs.
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0xD7B80E7C3BEFC396 | ApiSet: undefined
 */
export declare function setPickUpByCargobobDisabled(entity: number | Entity, toggle: boolean): void;
/**
 * ```
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 * ```
 * Hash: 0x3AE22DEB5BA5A3E6 | ApiSet: undefined
 */
export declare function setObjectAsNoLongerNeeded(entity: number | Entity): any;
/**
 * ```
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 * ```
 * Hash: 0x2595DD4236549CE3 | ApiSet: undefined
 */
export declare function setPedAsNoLongerNeeded(ped: number | Ped): void;
/**
 * ```
 * This is an alias of SET_ENTITY_AS_NO_LONGER_NEEDED.
 * ```
 * Hash: 0x629BFA74418D6239 | ApiSet: undefined
 */
export declare function setVehicleAsNoLongerNeeded(vehicle: number | Vehicle): void;
/**
 * ```
 * SET_*
 * Only called within 1 script for x360. 'fm_mission_controller' and it used on an object.
 * Ran after these 2 natives,
 * set_object_targettable(uParam0, 0);
 * set_entity_invincible(uParam0, 1);
 * ```
 * Hash: 0xDC6F8601FAF2E893 | ApiSet: undefined
 */
export declare function setWaitForCollisionsBeforeProbe(entity: number | Entity, toggle: boolean): void;
/**
 * ```
 * RAGEPluginHook list: docs.ragepluginhook.net/html/62951c37-a440-478c-b389-c471230ddfc5.htm
 * ```
 * Hash: 0x28004F88151E03E0 | ApiSet: undefined
 */
export declare function stopEntityAnim(entity: number | Entity, animation: string, animGroup: string, p3: number): any;
/**
 * ```
 * p1 sync task id?
 * ```
 * Hash: 0x43D3807C077261E3 | ApiSet: undefined
 */
export declare function stopSynchronizedEntityAnim(entity: number | Entity, p1: number, p2: boolean): boolean;
/**
 * Hash: 0x11E79CAB7183B6F5 | ApiSet: undefined
 */
export declare function stopSynchronizedMapEntityAnim(p0: number, p1: number, p2: number, p3: number, p4: any, p5: number): boolean;
/**
 * Hash: 0xEE5D2A122E09EC42 | ApiSet: undefined
 */
export declare function wouldEntityBeOccluded(entityModelHash: number | string, position: Vector3, p4: boolean): boolean;
/**
 * ```
 * dlcVehicleIndex is 0 to GET_NUM_DLC_VEHICLS()
 * ```
 * Hash: 0xECC01B7C5763333C | ApiSet: undefined
 */
export declare function getDlcVehicleModel(dlcVehicleIndex: number): number;
/**
 * Hash: 0x341DE7ED1D2A1BFD | ApiSet: undefined
 */
export declare function doesShopPedApparelHaveRestrictionTag(componentHash: number | string, restrictionTagHash: number | string, componentId: number): boolean;
/**
 * Same as GET_DLC_WEAPON_DATA but only works for DLC weapons that are available in SP.
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x310836EE7129BA33 | ApiSet: undefined
 */
export declare function getDlcWeaponDataSp(dlcWeaponIndex: number): [boolean, number];
/**
 * Hash: 0xC098810437312FFF | ApiSet: undefined
 */
export declare function getDlcVehicleModLockHash(hash: number | string): number;
/**
 * The Second item in the struct `*(Hash *)(outData + 1)` is the vehicle hash.
 * Hash: 0x33468EDC08E371F6 | ApiSet: undefined
 */
export declare function getDlcVehicleData(dlcVehicleIndex: number): [boolean, any];
/**
 * Hash: 0x5549EE11FA22FCF2 | ApiSet: undefined
 */
export declare function getDlcVehicleFlags(dlcVehicleIndex: number): number;
/**
 * Hash: 0xE1CA84EBF72E691D | ApiSet: undefined
 */
export declare function getForcedProp(componentHash: number | string, forcedPropIndex: number): [number, number, number];
/**
 * ```
 * dlcWeaponIndex takes a number from 0 - GET_NUM_DLC_WEAPONS() - 1.
 * struct DlcWeaponData
 * {
 * `int emptyCheck; //use DLC1::_IS_DLC_DATA_EMPTY on this`
 * int padding1;
 * int weaponHash;
 * int padding2;
 * int unk;
 * int padding3;
 * int weaponCost;
 * int padding4;
 * int ammoCost;
 * int padding5;
 * int ammoType;
 * int padding6;
 * int defaultClipSize;
 * int padding7;
 * char nameLabel[64];
 * char descLabel[64];
 * char desc2Label[64]; // usually "the" + name
 * char upperCaseNameLabel[64];
 * };
 * ```
 * Hash: 0x79923CD21BECE14E | ApiSet: undefined
 */
export declare function getDlcWeaponData(dlcWeaponIndex: number): [boolean, number];
/**
 * ```
 * p0 seems to be the weapon index
 * p1 seems to be the weapon component index
 * struct DlcComponentData{
 * int attachBone;
 * int padding1;
 * int bActiveByDefault;
 * int padding2;
 * int unk;
 * int padding3;
 * int componentHash;
 * int padding4;
 * int unk2;
 * int padding5;
 * int componentCost;
 * int padding6;
 * char nameLabel[64];
 * char descLabel[64];
 * };
 * ```
 * Hash: 0x6CF598A2957C2BF8 | ApiSet: undefined
 */
export declare function getDlcWeaponComponentData(dlcWeaponIndex: number, dlcWeapCompIndex: number): [boolean, number];
/**
 * Same as GET_DLC_WEAPON_COMPONENT_DATA but only works for DLC components that are available in SP.
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x31D5E073B6F93CDC | ApiSet: undefined
 */
export declare function getDlcWeaponComponentDataSp(dlcWeaponIndex: number, dlcWeapCompIndex: number): [boolean, number];
/**
 * Hash: 0x6C93ED8C2F74859B | ApiSet: undefined
 */
export declare function getForcedComponent(componentHash: number | string, forcedComponentIndex: number): [number, number, number];
/**
 * Hash: 0x0368B3A838070348 | ApiSet: undefined
 */
export declare function getHashNameForComponent(entity: number | Entity, componentId: number, drawableVariant: number, textureVariant: number): number;
/**
 * Returns the total number of DLC vehicles.
 * Hash: 0xA7A866D21CD2329B | ApiSet: undefined
 */
export declare function getNumDlcVehicles(): number;
/**
 * Hash: 0x5D6160275CAEC8DD | ApiSet: undefined
 */
export declare function getHashNameForProp(entity: number | Entity, componentId: number, propIndex: number, propTextureIndex: number): number;
/**
 * Returns the total number of DLC weapon components that are available in SP.
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0xAD2A7A6DFF55841B | ApiSet: undefined
 */
export declare function getNumDlcWeaponComponentsSp(dlcWeaponIndex: number): number;
/**
 * Returns the total number of DLC weapons that are available in SP (availableInSP field in shop_weapon.meta).
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x4160B65AE085B5A9 | ApiSet: undefined
 */
export declare function getNumDlcWeaponsSp(): number;
/**
 * ```
 * Returns number of possible values of the forcedComponentIndex argument of GET_FORCED_COMPONENT.
 * ```
 * Hash: 0xC6B9DB42C04DD8C3 | ApiSet: undefined
 */
export declare function getShopPedApparelForcedComponentCount(componentHash: number | string): number;
/**
 * ```
 * Returns the total number of DLC weapon components.
 * ```
 * Hash: 0x405425358A7D61FE | ApiSet: undefined
 */
export declare function getNumDlcWeaponComponents(dlcWeaponIndex: number): number;
/**
 * ```
 * Returns the total number of DLC weapons.
 * ```
 * Hash: 0xEE47635F352DA367 | ApiSet: undefined
 */
export declare function getNumDlcWeapons(): number;
/**
 * ```
 * Returns number of possible values of the forcedPropIndex argument of GET_FORCED_PROP.
 * ```
 * Hash: 0x017568A8182D98A6 | ApiSet: undefined
 */
export declare function getShopPedApparelForcedPropCount(componentHash: number | string): number;
/**
 * Hash: 0xD40AAC51E8E4C663 | ApiSet: undefined
 */
export declare function getShopPedApparelVariantPropCount(propHash: number | string): number;
/**
 * Hash: 0x19F2A026EDF0013F | ApiSet: undefined
 */
export declare function getShopPedOutfitComponentVariant(outfit: number | string, slot: number): [boolean, any];
/**
 * ```
 * More info here: https://gist.github.com/root-cause/3b80234367b0c856d60bf5cb4b826f86
 * ```
 * Hash: 0x74C0E2A57EC66760 | ApiSet: undefined
 */
export declare function getShopPedComponent(componentHash: number | string): any;
/**
 * Hash: 0xC17AD0E5752BECDA | ApiSet: undefined
 */
export declare function getShopPedApparelVariantComponentCount(componentHash: number | string): number;
/**
 * ```
 * Character types:
 * 0 = Michael,
 * 1 = Franklin,
 * 2 = Trevor,
 * 3 = MPMale,
 * 4 = MPFemale
 * ```
 * Hash: 0x278F76C3B0A8F109 | ApiSet: undefined
 */
export declare function getNumTattooShopDlcItems(character: number): number;
/**
 * Hash: 0xB7952076E444979D | ApiSet: undefined
 */
export declare function getShopPedOutfit(p0: any): any;
/**
 * Hash: 0x5D5CAFF661DDF6FC | ApiSet: undefined
 */
export declare function getShopPedProp(componentHash: number | string): any;
/**
 * ```
 * struct Outfit_s
 * {
 * int mask, torso, pants, parachute, shoes, misc1, tops1, armour, crew, tops2, hat, glasses, earpiece;
 * int maskTexture, torsoTexture, pantsTexture, parachuteTexture, shoesTexture, misc1Texture, tops1Texture,
 * armourTexture, crewTexture, tops2Texture, hatTexture, glassesTexture, earpieceTexture;
 * };
 * ```
 * Hash: 0x6D793F03A631FE56 | ApiSet: undefined
 */
export declare function getShopPedQueryOutfit(outfitIndex: number): any;
/**
 * Hash: 0xA9F9C2E0FDE11CBB | ApiSet: undefined
 */
export declare function getShopPedOutfitPropVariant(outfitHash: number | string, variantIndex: number): [boolean, any];
/**
 * Hash: 0x073CA26B079F956E | ApiSet: undefined
 */
export declare function getShopPedOutfitLocate(p0: any): number;
/**
 * Hash: 0xDE44A00999B2837D | ApiSet: undefined
 */
export declare function getShopPedQueryProp(componentId: number): any;
/**
 * Returns data that adheres to the tattoo shop item data that is used in shop_tattoo.meta
 * Character types:
 * ```cpp
 * enum eTattooFaction
 * {
 * TATTOO_SP_MICHAEL = 0,
 * TATTOO_SP_FRANKLIN = 1,
 * TATTOO_SP_TREVOR = 2,
 * TATTOO_MP_FM = 3,
 * TATTOO_MP_FM_F = 4
 * }
 * ```
 * Returned struct properties:
 * ```cpp
 * struct sTattooShopItemValues
 * {
 * // Lock hash, used with IS_CONTENT_ITEM_LOCKED
 * int LockHash;
 * // Unique ID of this slot. It can also be 0.
 * int Index;
 * // Collection hash of this tattoo
 * int CollectionHash;
 * // Preset hash of this tattoo
 * int PresetHash;
 * // Cost of this tattoo in shops.
 * int Cost;
 * // Secondary placement of this tattoo.
 * int eFacing;
 * // Location of this tattoo on the body (for example, for torso there would be chest upper, stomach, etc)
 * int UpdateGroup;
 * // This tattoo's name in the form of a text label.
 * const char* NameTextLabel;
 * };
 * ```
 * Hash: 0xFF56381874F82086 | ApiSet: undefined
 */
export declare function getTattooShopDlcItemData(characterType: number, decorationIndex: number): [boolean, any];
/**
 * Hash: 0x249E310B2D920699 | ApiSet: undefined
 */
export declare function getShopPedQueryComponent(componentId: number): number;
/**
 * Hash: 0x6E11F282F11863B6 | ApiSet: undefined
 */
export declare function getVariantComponent(componentHash: number | string, variantComponentIndex: number): [number, number, number];
/**
 * Hash: 0x1E8C308FD312C036 | ApiSet: undefined
 */
export declare function initShopPedComponent(): number;
/**
 * Hash: 0xD81B7F27BC773E66 | ApiSet: undefined
 */
export declare function getVariantProp(componentHash: number | string, variantPropIndex: number): [number, number, number];
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x10144267DD22866C | ApiSet: undefined
 */
export declare function getTattooShopDlcItemIndex(character: number, collection: number, preset: number): number;
/**
 * Hash: 0x0564B9FF9631B82C | ApiSet: undefined
 */
export declare function isDlcVehicleMod(hash: number | string): boolean;
/**
 * Hash: 0x50F457823CE6EB5F | ApiSet: undefined
 */
export declare function setupShopPedApparelQuery(p0: number, p1: number, p2: number, p3: number): number;
/**
 * Returns some sort of index/offset for props.
 * Needs \_GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = true and componentId = -1 first, returns -1 otherwise.
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x6CEBE002E58DEE97 | ApiSet: undefined
 */
export declare function _0x6CEBE002E58DEE97(componentHash: number | string): number;
/**
 * Hash: 0xEB0A2B758F7B850F | ApiSet: undefined
 */
export declare function initShopPedProp(): number;
/**
 * Hash: 0xD4D7B033C3AA243C | ApiSet: undefined
 */
export declare function isContentItemLocked(): [boolean, number];
/**
 * ```
 * character is 0 for Michael, 1 for Franklin, 2 for Trevor, 3 for freemode male, and 4 for freemode female.
 * componentId is between 0 and 11 and corresponds to the usual component slots.
 * p1 could be the outfit number; unsure.
 * p2 is usually -1; unknown function.
 * p3 appears to be for selecting between clothes and props; false is used with components/clothes, true is used with props.
 * p4 is usually -1; unknown function.
 * componentId is -1 when p3 is true in decompiled scripts.
 * ```
 * Hash: 0x9BDF59818B1E38C1 | ApiSet: undefined
 */
export declare function setupShopPedApparelQueryTu(character: number, p1: number, p2: number, p3: boolean, p4: number, componentId: number): number;
/**
 * ```
 * From fm_deathmatch_creator and fm_race_creator:
 * `FILES::_UNLOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP_SP"));`
 * `FILES::_LOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP"));`
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x6BEDF5769AC2DC07 | ApiSet: undefined
 */
export declare function loadContentChangeSetGroup(hash: number | string): void;
/**
 * Returns some sort of index/offset for components.
 * Needs \_GET_NUM_PROPS_FROM_OUTFIT to be called with p3 = false and componentId with the drawable's component slot first, returns -1 otherwise.
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x96E2929292A4DB77 | ApiSet: undefined
 */
export declare function _0x96E2929292A4DB77(componentHash: number | string): number;
/**
 * ```
 * characters
 * 0: Michael
 * 1: Franklin
 * 2: Trevor
 * 3: MPMale
 * 4: MPFemale
 * ```
 * Hash: 0xF3FBE2D50A6A8C28 | ApiSet: undefined
 */
export declare function setupShopPedOutfitQuery(character: number, p1: boolean): number;
/**
 * ```
 * From fm_deathmatch_creator and fm_race_creator:
 * `FILES::_UNLOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP_SP"));`
 * `FILES::_LOAD_CONTENT_CHANGE_SET_GROUP(joaat("GROUP_MAP"));`
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x3C1978285B036B25 | ApiSet: undefined
 */
export declare function unloadContentChangeSetGroup(hash: number | string): void;
/**
 * ```
 * NativeDB Added Parameter 9: BOOL noDamage
 * ```
 * ```
 * BOOL isAudible = If explosion makes a sound.
 * BOOL isInvisible = If the explosion is invisible or not.
 * BOOL noDamage = false: damage || nodamage = true: no damage
 * ```
 * ```cpp
 * enum eExplosionTag
 * {
 * DONTCARE = -1,
 * GRENADE = 0,
 * GRENADELAUNCHER = 1,
 * STICKYBOMB = 2,
 * MOLOTOV = 3,
 * ROCKET = 4,
 * TANKSHELL = 5,
 * HI_OCTANE = 6,
 * CAR = 7,
 * PLANE = 8,
 * PETROL_PUMP = 9,
 * BIKE = 10,
 * DIR_STEAM = 11,
 * DIR_FLAME = 12,
 * DIR_WATER_HYDRANT = 13,
 * DIR_GAS_CANISTER = 14,
 * BOAT = 15,
 * SHIP_DESTROY = 16,
 * TRUCK = 17,
 * BULLET = 18,
 * SMOKE_GRENADE_LAUNCHER = 19,
 * SMOKE_GRENADE = 20,
 * BZGAS = 21,
 * FLARE = 22,
 * GAS_CANISTER = 23,
 * EXTINGUISHER = 24,
 * PROGRAMMABLEAR = 25,
 * TRAIN = 26,
 * BARREL = 27,
 * PROPANE = 28,
 * BLIMP = 29,
 * DIR_FLAME_EXPLODE = 30,
 * TANKER = 31,
 * PLANE_ROCKET = 32,
 * VEHICLE_BULLET = 33,
 * GAS_TANK = 34,
 * BIRD_CRAP = 35,
 * RAILGUN = 36,
 * BLIMP2 = 37,
 * FIREWORK = 38,
 * SNOWBALL = 39,
 * PROXMINE = 40,
 * VALKYRIE_CANNON = 41,
 * AIR_DEFENCE = 42,
 * PIPEBOMB = 43,
 * VEHICLEMINE = 44,
 * EXPLOSIVEAMMO = 45,
 * APCSHELL = 46,
 * BOMB_CLUSTER = 47,
 * BOMB_GAS = 48,
 * BOMB_INCENDIARY = 49,
 * BOMB_STANDARD = 50,
 * TORPEDO = 51,
 * TORPEDO_UNDERWATER = 52,
 * BOMBUSHKA_CANNON = 53,
 * BOMB_CLUSTER_SECONDARY = 54,
 * HUNTER_BARRAGE = 55,
 * HUNTER_CANNON = 56,
 * ROGUE_CANNON = 57,
 * MINE_UNDERWATER = 58,
 * ORBITAL_CANNON = 59,
 * BOMB_STANDARD_WIDE = 60,
 * EXPLOSIVEAMMO_SHOTGUN = 61,
 * OPPRESSOR2_CANNON = 62,
 * MORTAR_KINETIC = 63,
 * VEHICLEMINE_KINETIC = 64,
 * VEHICLEMINE_EMP = 65,
 * VEHICLEMINE_SPIKE = 66,
 * VEHICLEMINE_SLICK = 67,
 * VEHICLEMINE_TAR = 68,
 * SCRIPT_DRONE = 69,
 * RAYGUN = 70,
 * BURIEDMINE = 71,
 * SCRIPT_MISSILE = 72,
 * RCTANK_ROCKET = 73,
 * BOMB_WATER = 74,
 * BOMB_WATER_SECONDARY = 75,
 * MINE_CNCSPIKE = 76,
 * BZGAS_MK2 = 77,
 * FLASHGRENADE = 78,
 * STUNGRENADE = 79,
 * CNC_KINETICRAM = 80,
 * SCRIPT_MISSILE_LARGE = 81,
 * SUBMARINE_BIG = 82,
 * EMPLAUNCHER_EMP = 83
 * };
 * ```
 * Hash: 0xE3AD2BDBAEE269AC | ApiSet: undefined
 */
export declare function addExplosion(position: Vector3, explosionType: number, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
/**
 * Hash: 0x36DD3FE58B5E5212 | ApiSet: undefined
 */
export declare function addExplosionWithUserVfx(position: Vector3, explosionType: number, explosionFx: number | string, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
/**
 * ```
 * Returns TRUE if it found something. FALSE if not.
 * ```
 * Hash: 0x352A9F6BCF90081F | ApiSet: undefined
 */
export declare function getClosestFirePos(position: Vector3): [boolean, Vector3];
/**
 * ```
 * Returns a handle to the first entity within the a circle spawned inside the 2 points from a radius.
 * ```
 * Hash: 0x14BA4BA137AF6CEC | ApiSet: undefined
 */
export declare function getEntityInsideExplosionArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number): number;
/**
 * Hash: 0x172AA1B624FA1013 | ApiSet: undefined
 */
export declare function addOwnedExplosion(ped: number | Ped, position: Vector3, explosionType: number, damageScale: number, isAudible: boolean, isInvisible: boolean, cameraShake: number): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xB3CD51E3DB86F176 | ApiSet: undefined
 */
export declare function getEntityInsideExplosionSphere(explosionType: number, position: Vector3, radius: number): number;
/**
 * Hash: 0x50CAD495A460B305 | ApiSet: undefined
 */
export declare function getNumberOfFiresInRange(position: Vector3, radius: number): number;
/**
 * Hash: 0x28D3FED7190D3A0B | ApiSet: undefined
 */
export declare function isEntityOnFire(entity: number | Entity): boolean;
/**
 * Hash: 0x6070104B699B2EF4 | ApiSet: undefined
 */
export declare function isExplosionActiveInArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * Hash: 0xA079A6C51525DC4B | ApiSet: undefined
 */
export declare function isExplosionInAngledArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): boolean;
/**
 * Hash: 0x2E2EBA0EE7CED0E0 | ApiSet: undefined
 */
export declare function isExplosionInArea(explosionType: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * Hash: 0x7F0DD2EBBB651AFF | ApiSet: undefined
 */
export declare function stopEntityFire(entity: number | Entity): void;
/**
 * Hash: 0x7FF548385680673F | ApiSet: undefined
 */
export declare function removeScriptFire(fireHandle: number): void;
/**
 * SET_FIRE_\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x8F390AC4155099BA | ApiSet: undefined
 */
export declare function setFireSpreadRate(p0: number): void;
/**
 * Hash: 0xAB0F816885B0E483 | ApiSet: undefined
 */
export declare function isExplosionInSphere(explosionType: number, position: Vector3, radius: number): boolean;
/**
 * ```
 * Starts a fire:
 * xyz: Location of fire
 * maxChildren: The max amount of times a fire can spread to other objects. Must be 25 or less, or the function will do nothing.
 * isGasFire: Whether or not the fire is powered by gasoline.
 * ```
 * Hash: 0x6B83617E04503888 | ApiSet: undefined
 */
export declare function startScriptFire(position: Vector3, maxChildren: number, isGasFire: boolean): number;
/**
 * Hash: 0xF6A9D9708F6F23DF | ApiSet: undefined
 */
export declare function startEntityFire(entity: number | Entity): number;
/**
 * Hash: 0x056A8A219B8E829F | ApiSet: undefined
 */
export declare function stopFireInRange(position: Vector3, radius: number): void;
/**
 * ```
 * More info: http://gtaforums.com/topic/836367-adding-props-to-interiors/
 * ```
 * Hash: 0x55E86AF2712B36A1 | ApiSet: undefined
 */
export declare function activateInteriorEntitySet(interior: number, entitySetName: string): void;
/**
 * Hash: 0xB365FC0C4E27FFA7 | ApiSet: undefined
 */
export declare function clearRoomForEntity(entity: number | Entity): void;
/**
 * ```
 * `Does something similar to INTERIOR::DISABLE_INTERIOR`
 * ```
 * Hash: 0xD9175F941610DB54 | ApiSet: undefined
 */
export declare function capInterior(interiorID: number, toggle: boolean): void;
/**
 * Hash: 0x23B59D8912F94246 | ApiSet: undefined
 */
export declare function clearRoomForGameViewport(): void;
/**
 * Hash: 0x3F6167F351168730 | ApiSet: undefined
 */
export declare function addPickupToInteriorRoomByName(pickup: any, roomName: string): void;
/**
 * ```
 * This is the native that is used to hide the exterior of GTA Online apartment buildings when you are inside an apartment.
 * ```
 * Hash: 0xA97F257D0151A6AB | ApiSet: undefined
 */
export declare function enableExteriorCullModelThisFrame(mapObjectHash: number | string): void;
/**
 * Immediately removes entity from an interior. Like sets entity to `limbo` room.
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x85D5422B2039A70D | ApiSet: undefined
 */
export declare function clearInteriorForEntity(entity: number | Entity): void;
/**
 * ```
 * Forces the particular room in an interior to load incase not teleporting into the portal.
 * ```
 * Hash: 0x52923C4710DD9907 | ApiSet: undefined
 */
export declare function forceRoomForEntity(entity: number | Entity, interior: number, roomHashKey: number | string): void;
/**
 * Hash: 0x420BD37289EEE162 | ApiSet: undefined
 */
export declare function deactivateInteriorEntitySet(interior: number, entitySetName: string): void;
/**
 * ```
 * Example:
 * This removes the interior from the strip club and when trying to walk inside the player just falls:
 * `INTERIOR::DISABLE_INTERIOR(118018, true);`
 * ```
 * Hash: 0x6170941419D7D8EC | ApiSet: undefined
 */
export declare function disableInterior(interiorID: number, toggle: boolean): void;
/**
 * ```
 * Returns the handle of the interior that the entity is in. Returns 0 if outside.
 * ```
 * Hash: 0x2107BA504071A6BB | ApiSet: undefined
 */
export declare function getInteriorFromEntity(entity: number | Entity): number;
/**
 * ```
 * Hashed version of GET_INTERIOR_AT_COORDS_WITH_TYPE
 * ```
 * Hash: 0xF0F77ADB9F67E79D | ApiSet: undefined
 */
export declare function getInteriorAtCoordsWithTypehash(position: Vector3, typeHash: number | string): number;
/**
 * Hash: 0x50C375537449F369 | ApiSet: undefined
 */
export declare function enableScriptCullModelThisFrame(mapObjectHash: number | string): void;
/**
 * ```
 * Returns interior ID from specified coordinates. If coordinates are outside, then it returns 0.
 * Example for VB.NET
 * Dim interiorID As Integer = Native.Function.Call(Of Integer)(Hash.GET_INTERIOR_AT_COORDS, X, Y, Z)
 * ```
 * Hash: 0xB0F7F8663821D9C3 | ApiSet: undefined
 */
export declare function getInteriorAtCoords(position: Vector3): number;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x252BDC06B73FA6EA | ApiSet: undefined
 */
export declare function getInteriorLocationAndNamehash(interior: number): [Vector3, number];
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xE7D267EC6CA966C3 | ApiSet: undefined
 */
export declare function getInteriorFromPrimaryView(): number;
/**
 * Hash: 0x920D853F3E17F1DA | ApiSet: undefined
 */
export declare function forceRoomForGameViewport(interiorID: number, roomHashKey: number | string): void;
/**
 * Hash: 0xEC4CF9FCB29A4424 | ApiSet: undefined
 */
export declare function getInteriorFromCollision(position: Vector3): number;
/**
 * Hash: 0xA6575914D2A0B450 | ApiSet: undefined
 */
export declare function getRoomKeyForGameViewport(): number;
/**
 * Hash: 0x9E3B3E6D66F6E22F | ApiSet: undefined
 */
export declare function getOffsetFromInteriorInWorldCoords(interior: number, position: Vector3): Vector3;
/**
 * ```
 * Returns the interior ID representing the requested interior at that location (if found?). The supplied interior string is not the same as the one used to load the interior.
 * `Use: INTERIOR::UNPIN_INTERIOR(INTERIOR::GET_INTERIOR_AT_COORDS_WITH_TYPE(x, y, z, interior))`
 * Interior types include: "V_Michael", "V_Franklins", "V_Franklinshouse", etc.. you can find them in the scripts.
 * Not a very useful native as you could just use GET_INTERIOR_AT_COORDS instead and get the same result, without even having to specify the interior type.
 * ```
 * Hash: 0x05B7A89BD78797FC | ApiSet: undefined
 */
export declare function getInteriorAtCoordsWithType(position: Vector3, interiorType: string): number;
/**
 * ```
 * Returns the group ID of the specified interior. For example, regular interiors have group 0, subway interiors have group 1. There are a few other groups too.
 * ```
 * Hash: 0xE4A84ABF135EF91A | ApiSet: undefined
 */
export declare function getInteriorGroupId(interior: number): number;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xF49B58631D9E22D9 | ApiSet: undefined
 */
export declare function getInteriorHeading(interior: number): number;
/**
 * Returns true if the collision at the specified coords is marked as being outside (false if there's an interior)
 * Hash: 0xEEA5AC2EDA7C33E8 | ApiSet: undefined
 */
export declare function isCollisionMarkedOutside(position: Vector3): boolean;
/**
 * ```
 * `Seems to do the exact same as INTERIOR::GET_ROOM_KEY_FROM_ENTITY`
 * ```
 * Hash: 0x399685DB942336BC | ApiSet: undefined
 */
export declare function getKeyForEntityInRoom(entity: number | Entity): number;
/**
 * Hash: 0xBC5115A5A939DD15 | ApiSet: undefined
 */
export declare function isInteriorDisabled(interior: number): boolean;
/**
 * ```
 * Gets the room hash key from the room that the specified entity is in. Each room in every interior has a unique key. Returns 0 if the entity is outside.
 * ```
 * Hash: 0x47C2A06D4F5F424B | ApiSet: undefined
 */
export declare function getRoomKeyFromEntity(entity: number | Entity): number;
/**
 * Hash: 0x35F7DD45E8C0A16D | ApiSet: undefined
 */
export declare function isInteriorEntitySetActive(interior: number, entitySetName: string): boolean;
/**
 * Hash: 0x92BAC8ACF88CEC26 | ApiSet: undefined
 */
export declare function isInteriorCapped(interiorID: number): boolean;
/**
 * Hash: 0x6726BDCCC1932F0E | ApiSet: undefined
 */
export declare function isInteriorReady(interiorID: number): boolean;
/**
 * Hash: 0x26B0E73D7EAAF4D3 | ApiSet: undefined
 */
export declare function isValidInterior(interior: number): boolean;
/**
 * ```
 * Only used once in the entire game scripts.
 * Does not actually return anything.
 * ```
 * Hash: 0x4C2330E61D3DEB56 | ApiSet: undefined
 */
export declare function _0x4C2330E61D3DEB56(interior: number): any;
/**
 * ```
 * `Usage: INTERIOR::_0x405DC2AEF6AF95B9(INTERIOR::GET_KEY_FOR_ENTITY_IN_ROOM(PLAYER::PLAYER_PED_ID()));`
 * ```
 * Hash: 0x405DC2AEF6AF95B9 | ApiSet: undefined
 */
export declare function _0x405DC2AEF6AF95B9(roomHashKey: number | string): void;
/**
 * Hash: 0xBC72B5D7A1CBD54D | ApiSet: undefined
 */
export declare function isInteriorScene(): boolean;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x38C1CB1CB119A016 | ApiSet: undefined
 */
export declare function _0x38C1CB1CB119A016(p0: any, p1: any): void;
/**
 * ```
 * DISABLE_*
 * ```
 * Hash: 0x9E6542F0CE8E70A3 | ApiSet: undefined
 */
export declare function _0x9E6542F0CE8E70A3(toggle: boolean): void;
/**
 * ```
 * Jenkins hash _might_ be 0xFC227584.
 * ```
 * Hash: 0x7241CCB7D020DB69 | ApiSet: undefined
 */
export declare function _0x7241CCB7D020DB69(entity: number | Entity, toggle: boolean): void;
/**
 * Hash: 0x483ACA1176CA93F1 | ApiSet: undefined
 */
export declare function _0x483ACA1176CA93F1(): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x7ECDF98587E92DEC | ApiSet: undefined
 */
export declare function _0x7ECDF98587E92DEC(p0: any): void;
/**
 * ```
 * Exemple of use(carmod_shop.c4)
 * `INTERIOR::_AF348AFCB575A441("V_CarModRoom");`
 * ```
 * Hash: 0xAF348AFCB575A441 | ApiSet: undefined
 */
export declare function _0xAF348AFCB575A441(roomName: string): void;
/**
 * Hash: 0x2CA429C029CCF247 | ApiSet: undefined
 */
export declare function pinInteriorInMemory(interior: number): void;
/**
 * Hash: 0xC1F1920BAF281317 | ApiSet: undefined
 */
export declare function setInteriorEntitySetColor(interior: number, entitySetName: string, color: number): void;
/**
 * Hash: 0x82EBB79E258FA2B7 | ApiSet: undefined
 */
export declare function _0x82EBB79E258FA2B7(entity: number | Entity, interiorID: number): void;
/**
 * Hash: 0x41F37C3427C75AE0 | ApiSet: undefined
 */
export declare function refreshInterior(interiorID: number): void;
/**
 * ```
 * `Does something similar to INTERIOR::DISABLE_INTERIOR.`
 * `You don't fall through the floor but everything is invisible inside and looks the same as when INTERIOR::DISABLE_INTERIOR is used. Peds behaves normally inside.`
 * ```
 * Hash: 0x261CCE7EED010641 | ApiSet: undefined
 */
export declare function unpinInterior(interior: number): void;
/**
 * Hash: 0x41BC0D722FC04221 | ApiSet: undefined
 */
export declare function cleanItemset(p0: any): void;
/**
 * Hash: 0xE3945201F14637DD | ApiSet: undefined
 */
export declare function addToItemset(p0: any, p1: any): boolean;
/**
 * Hash: 0xDE18220B1C183EDA | ApiSet: undefined
 */
export declare function destroyItemset(p0: any): void;
/**
 * Hash: 0x7A197E2521EE2BAB | ApiSet: undefined
 */
export declare function getIndexedItemInItemset(p0: any, p1: any): any;
/**
 * Hash: 0x35AD299F50D91B24 | ApiSet: undefined
 */
export declare function createItemset(distri: boolean): number;
/**
 * Hash: 0x2D0FC594D1E9C107 | ApiSet: undefined
 */
export declare function isInItemset(p0: any, p1: any): boolean;
/**
 * Hash: 0xB1B1EA596344DFAB | ApiSet: undefined
 */
export declare function isItemsetValid(p0: any): boolean;
/**
 * Hash: 0xD9127E83ABF7C631 | ApiSet: undefined
 */
export declare function getItemsetSize(x: number): any;
/**
 * Hash: 0x25E68244B0177686 | ApiSet: undefined
 */
export declare function removeFromItemset(p0: any, p1: any): void;
/**
 * Hash: 0x8AA464D4E0F6ACCD | ApiSet: undefined
 */
export declare function loadingscreenGetLoadFreemodeWithEventName(): boolean;
/**
 * Hash: 0xB0C56BD3D808D863 | ApiSet: undefined
 */
export declare function loadingscreenSetLoadFreemode(toggle: boolean): void;
/**
 * Hash: 0xC6DC823253FBB366 | ApiSet: undefined
 */
export declare function loadingscreenIsLoadingFreemode(): boolean;
/**
 * Hash: 0xEF7D17BC6C85264C | ApiSet: undefined
 */
export declare function loadingscreenGetLoadFreemode(): boolean;
/**
 * ```
 * Only occurrence was false, in maintransition.
 * ```
 * Hash: 0xFC309E94546FCDB5 | ApiSet: undefined
 */
export declare function loadingscreenSetLoadFreemodeWithEventName(toggle: boolean): void;
/**
 * Hash: 0xFA1E0E893D915215 | ApiSet: undefined
 */
export declare function _0xFA1E0E893D915215(toggle: boolean): void;
/**
 * Hash: 0xF2CA003F167E21D2 | ApiSet: undefined
 */
export declare function _0xF2CA003F167E21D2(): number;
/**
 * Hash: 0xC7E7181C09F33B69 | ApiSet: undefined
 */
export declare function loadingscreenSetIsLoadingFreemode(toggle: boolean): void;
/**
 * ```
 * Same return values as GET_CURRENT_LANGUAGE
 * ```
 * Hash: 0x497420E022796B3F | ApiSet: undefined
 */
export declare function localizationGetSystemLanguage(): number;
/**
 * ```
 * Possible return values: 0, 1, 2
 * ```
 * Hash: 0xA8AE43AEC1A61314 | ApiSet: undefined
 */
export declare function localizationGetSystemDateFormat(): number;
/**
 * ```
 * 0 = american (en-US)
 * 1 = french (fr-FR)
 * 2 = german (de-DE)
 * 3 = italian (it-IT)
 * 4 = spanish (es-ES)
 * 5 = brazilian (pt-BR)
 * 6 = polish (pl-PL)
 * 7 = russian (ru-RU)
 * 8 = korean (ko-KR)
 * 9 = chinesetrad (zh-TW)
 * 10 = japanese (ja-JP)
 * 11 = mexican (es-MX)
 * 12 = chinesesimp (zh-CN)
 * ```
 * Hash: 0x2BDD44CC428A7EAE | ApiSet: undefined
 */
export declare function getCurrentLanguage(): number;
/**
 * Hash: 0x4F5212C7AD880DF8 | ApiSet: undefined
 */
export declare function addPetrolDecal(position: Vector3, groundLvl: number, width: number, transparency: number): number;
/**
 * Places a decal into the world
 * ```cs
 * public enum DecalTypes
 * {
 * splatters_blood = 1010,
 * splatters_blood_dir = 1015,
 * splatters_blood_mist = 1017,
 * splatters_mud = 1020,
 * splatters_paint = 1030,
 * splatters_water = 1040,
 * splatters_water_hydrant = 1050,
 * splatters_blood2 = 1110,
 * weapImpact_metal = 4010,
 * weapImpact_concrete = 4020,
 * weapImpact_mattress = 4030,
 * weapImpact_mud = 4032,
 * weapImpact_wood = 4050,
 * weapImpact_sand = 4053,
 * weapImpact_cardboard = 4040,
 * weapImpact_melee_glass = 4100,
 * weapImpact_glass_blood = 4102,
 * weapImpact_glass_blood2 = 4104,
 * weapImpact_shotgun_paper = 4200,
 * weapImpact_shotgun_mattress,
 * weapImpact_shotgun_metal,
 * weapImpact_shotgun_wood,
 * weapImpact_shotgun_dirt,
 * weapImpact_shotgun_tvscreen,
 * weapImpact_shotgun_tvscreen2,
 * weapImpact_shotgun_tvscreen3,
 * weapImpact_melee_concrete = 4310,
 * weapImpact_melee_wood = 4312,
 * weapImpact_melee_metal = 4314,
 * burn1 = 4421,
 * burn2,
 * burn3,
 * burn4,
 * burn5,
 * bang_concrete_bang = 5000,
 * bang_concrete_bang2,
 * bang_bullet_bang,
 * bang_bullet_bang2 = 5004,
 * bang_glass = 5031,
 * bang_glass2,
 * solidPool_water = 9000,
 * solidPool_blood,
 * solidPool_oil,
 * solidPool_petrol,
 * solidPool_mud,
 * porousPool_water,
 * porousPool_blood,
 * porousPool_oil,
 * porousPool_petrol,
 * porousPool_mud,
 * porousPool_water_ped_drip,
 * liquidTrail_water = 9050
 * }
 * ```
 * Hash: 0xB302244A1839BDAD | ApiSet: undefined
 */
export declare function addDecal(decalType: number, posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, sideX: number, sideY: number, sideZ: number, width: number, height: number, rCoef: number, gCoef: number, bCoef: number, opacity: number, timeout: number, isLongRange: boolean, isDynamic: boolean, useComplexColn: boolean): number;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x126D7F89FE859A5E | ApiSet: undefined
 */
export declare function addOilDecal(position: Vector3, groundLvl: number, width: number, transparency: number): number;
/**
 * ```
 * Example:
 * `GRAPHICS::ADD_ENTITY_ICON(a_0, "MP_Arrow");`
 * I tried this and nothing happened...
 * ```
 * Hash: 0x9CD43EEE12BF4DD0 | ApiSet: undefined
 */
export declare function addEntityIcon(entity: number | Entity, icon: string): any;
/**
 * Hash: 0x967278682CB6967A | ApiSet: undefined
 */
export declare function addPetrolTrailDecalInfo(position: Vector3, p3: number): void;
/**
 * ```
 * duration - is how long to play the effect for in milliseconds. If 0, it plays the default length
 * if loop is true, the effect won't stop until you call ANIMPOSTFX_STOP on it. (only loopable effects)
 * ```
 * Hash: 0x2206BF9A37B7F724 | ApiSet: undefined
 */
export declare function animpostfxPlay(effectName: string, duration: number, looped: boolean): void;
/**
 * Hash: 0x1A8E2C8B9CF4549C | ApiSet: undefined
 */
export declare function addTcmodifierOverride(modifierName1: string, modifierName2: string): void;
/**
 * Hash: 0xB4EDDC19532BFB85 | ApiSet: undefined
 */
export declare function animpostfxStopAll(): void;
/**
 * See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
 * Hash: 0x36AD3E690DA5ACEB | ApiSet: undefined
 */
export declare function animpostfxIsRunning(effectName: string): boolean;
/**
 * See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724)
 * Hash: 0xE35B38A27E8E7179 | ApiSet: undefined
 */
export declare function animpostfxGetUnk(effectName: string): number;
/**
 * ```
 * Push a function from the Scaleform onto the stack
 * ```
 * Hash: 0xF6E48914C7A8694E | ApiSet: undefined
 */
export declare function beginScaleformMovieMethod(scaleform: number, methodName: string): boolean;
/**
 * ```
 * boneIndex is always chassis_dummy in the scripts. The x/y/z params are location relative to the chassis bone.
 * ```
 * Hash: 0x428BDCB9DA58DA53 | ApiSet: undefined
 */
export declare function addVehicleCrewEmblem(vehicle: number | Vehicle, ped: number | Ped, boneIndex: number, x1: number, x2: number, x3: number, y1: number, y2: number, y3: number, z1: number, z2: number, z3: number, scale: number, p13: any, alpha: number): boolean;
/**
 * See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
 * Hash: 0x068E835A1D0DC0E3 | ApiSet: undefined
 */
export declare function animpostfxStop(effectName: string): void;
/**
 * ```
 * Might be more appropriate in AUDIO?
 * ```
 * Hash: 0x845BAD77CC770633 | ApiSet: undefined
 */
export declare function attachTvAudioToEntity(entity: number | Entity): void;
/**
 * Stops the effect and sets a value (bool) in its data (+0x199) to false; See [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724).
 * Hash: 0xD2209BE128B5418C | ApiSet: undefined
 */
export declare function animpostfxStopAndDoUnk(effectName: string): void;
/**
 * Starts frontend (pause menu) scaleform movie methods.
 * This can be used when you want to make custom frontend menus, and customize things like images or text in the menus etc.
 * Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND_HEADER`](#\_0xB9449845F73F5E9C) for header scaleform functions.
 * Hash: 0xAB58C27C2E6123C6 | ApiSet: undefined
 */
export declare function beginScaleformMovieMethodOnFrontend(functionName: string): boolean;
/**
 * Starts frontend (pause menu) scaleform movie methods for header options.
 * Use [`BEGIN_SCALEFORM_MOVIE_METHOD_ON_FRONTEND`](#\_0xAB58C27C2E6123C6) to customize the content inside the frontend menus.
 * Hash: 0xB9449845F73F5E9C | ApiSet: undefined
 */
export declare function beginScaleformMovieMethodOnFrontendHeader(functionName: string): boolean;
/**
 * ```
 * `Pushes a function from the Hud component Scaleform onto the stack. Same behavior as GRAPHICS::BEGIN_SCALEFORM_MOVIE_METHOD, just a hud component id instead of a Scaleform.`
 * Known components:
 * 19 - MP_RANK_BAR
 * 20 - HUD_DIRECTOR_MODE
 * This native requires more research - all information can be found inside of 'hud.gfx'. Using a decompiler, the different components are located under "scripts\__Packages\com\rockstargames\gtav\hud\hudComponents" and "scripts\__Packages\com\rockstargames\gtav\Multiplayer".
 * ```
 * Hash: 0x98C494FD5BDFBFD5 | ApiSet: undefined
 */
export declare function beginScaleformScriptHudMovieMethod(hudComponent: number, methodName: string): boolean;
/**
 * Hash: 0xA67C35C56EB1BD9D | ApiSet: undefined
 */
export declare function beginTakeHighQualityPhoto(): boolean;
/**
 * ```
 * `Called prior to adding a text component to the UI. After doing so, GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING is called.`
 * Examples:
 * `GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("NUMBER");`
 * `HUD::ADD_TEXT_COMPONENT_INTEGER(MISC::ABSI(a_1));`
 * `GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();`
 * `GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRING");`
 * `HUD::_ADD_TEXT_COMPONENT_STRING(a_2);`
 * `GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();`
 * `GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM2");`
 * `HUD::_0x17299B63C7683A2B(v_3);`
 * `HUD::_0x17299B63C7683A2B(v_4);`
 * `GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();`
 * `GRAPHICS::BEGIN_TEXT_COMMAND_SCALEFORM_STRING("STRTNM1");`
 * `HUD::_0x17299B63C7683A2B(v_3);`
 * `GRAPHICS::END_TEXT_COMMAND_SCALEFORM_STRING();`
 * ```
 * Hash: 0x80338406F3475E55 | ApiSet: undefined
 */
export declare function beginTextCommandScaleformString(textLabel: string): void;
/**
 * Hash: 0x1DD2139A9A20DCE8 | ApiSet: undefined
 */
export declare function beginTakeMissionCreatorPhoto(): boolean;
/**
 * ```
 * Calls the Scaleform function and passes both float and string parameters (in their respective order).
 * The number of parameters passed to the function varies, so the end of the float parameters is represented by -1.0, and the end of the string parameters is represented by 0 (NULL).
 * NOTE: The order of parameters in the function prototype is important! All float parameters must come first, followed by the string parameters.
 * Examples:
 * // function MY_FUNCTION(floatParam1, floatParam2, stringParam)
 * `GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, "MY_FUNCTION", 10.0, 20.0, -1.0, -1.0, -1.0, "String param", 0, 0, 0, 0);`
 * // function MY_FUNCTION_2(floatParam, stringParam1, stringParam2)
 * `GRAPHICS::_CALL_SCALEFORM_MOVIE_FUNCTION_MIXED_PARAMS(scaleform, "MY_FUNCTION_2", 10.0, -1.0, -1.0, -1.0, -1.0, "String param #1", "String param #2", 0, 0, 0);`
 * ```
 * Hash: 0xEF662D8D57E290B1 | ApiSet: undefined
 */
export declare function callScaleformMovieMethodWithNumberAndString(scaleform: number, methodName: string, floatParam1: number, floatParam2: number, floatParam3: number, floatParam4: number, floatParam5: number, stringParam1: string, stringParam2: string, stringParam3: string, stringParam4: string, stringParam5: string): void;
/**
 * ```
 * Calls the Scaleform function and passes the parameters as floats.
 * The number of parameters passed to the function varies, so the end of the parameter list is represented by -1.0.
 * ```
 * Hash: 0xD0837058AE2E4BEE | ApiSet: undefined
 */
export declare function callScaleformMovieMethodWithNumber(scaleform: number, methodName: string, param1: number, param2: number, param3: number, param4: number, param5: number): void;
/**
 * Hash: 0x03FC694AE06C5A20 | ApiSet: undefined
 */
export declare function cascadeShadowsInitSession(): void;
/**
 * ```
 * Calls the Scaleform function.
 * ```
 * Hash: 0xFBD96D87AC96D533 | ApiSet: undefined
 */
export declare function callScaleformMovieMethod(scaleform: number, method: string): void;
/**
 * Hash: 0xD39D13C9FEBF0511 | ApiSet: undefined
 */
export declare function cascadeShadowsSetDynamicDepthMode(p0: boolean): void;
/**
 * ```
 * Calls the Scaleform function and passes the parameters as strings.
 * The number of parameters passed to the function varies, so the end of the parameter list is represented by 0 (NULL).
 * ```
 * Hash: 0x51BC1ED3CC44E8F7 | ApiSet: undefined
 */
export declare function callScaleformMovieMethodWithString(scaleform: number, methodName: string, param1: string, param2: string, param3: string, param4: string, param5: string): void;
/**
 * Hash: 0x6DDBF9DFFC4AC080 | ApiSet: undefined
 */
export declare function cascadeShadowsSetAircraftMode(p0: boolean): void;
/**
 * Hash: 0x27CB772218215325 | ApiSet: undefined
 */
export declare function cascadeShadowsClearShadowSampleType(): void;
/**
 * Clears the secondary timecycle modifier usually set with [`SetExtraTimecycleModifier`](#\_0x5096FD9CCB49056D)
 * Hash: 0x92CCC17A7A2285DA | ApiSet: undefined
 */
export declare function clearExtraTimecycleModifier(): void;
/**
 * Hash: 0x5F0F3F56635809EF | ApiSet: undefined
 */
export declare function cascadeShadowsSetCascadeBoundsScale(p0: number): void;
/**
 * ```
 * When this is set to ON, shadows only draw as you get nearer.
 * When OFF, they draw from a further distance.
 * ```
 * Hash: 0x80ECBC0C856D3B0B | ApiSet: undefined
 */
export declare function cascadeShadowsEnableEntityTracker(toggle: boolean): void;
/**
 * Hash: 0xF5ED37F54CD4D52E | ApiSet: undefined
 */
export declare function deleteCheckpoint(checkpoint: number): void;
/**
 * Hash: 0xD2936CAB8B58FCBD | ApiSet: undefined
 */
export declare function cascadeShadowsSetCascadeBounds(p0: any, p1: boolean, p2: number, p3: number, p4: number, p5: number, p6: boolean, p7: number): void;
/**
 * ```
 * Possible values:
 * "CSM_ST_POINT"
 * "CSM_ST_LINEAR"
 * "CSM_ST_TWOTAP"
 * "CSM_ST_BOX3x3"
 * "CSM_ST_BOX4x4"
 * "CSM_ST_DITHER2_LINEAR"
 * "CSM_ST_CUBIC"
 * "CSM_ST_DITHER4"
 * "CSM_ST_DITHER16"
 * "CSM_ST_SOFT16"
 * "CSM_ST_DITHER16_RPDB"
 * "CSM_ST_POISSON16_RPDB_GNORM"
 * "CSM_ST_HIGHRES_BOX4x4"
 * "CSM_ST_CLOUDS_SIMPLE"
 * "CSM_ST_CLOUDS_LINEAR"
 * "CSM_ST_CLOUDS_TWOTAP"
 * "CSM_ST_CLOUDS_BOX3x3"
 * "CSM_ST_CLOUDS_BOX4x4"
 * "CSM_ST_CLOUDS_DITHER2_LINEAR"
 * "CSM_ST_CLOUDS_SOFT16"
 * "CSM_ST_CLOUDS_DITHER16_RPDB"
 * "CSM_ST_CLOUDS_POISSON16_RPDB_GNORM"
 * ```
 * Hash: 0xB11D94BC55F41932 | ApiSet: undefined
 */
export declare function cascadeShadowsSetShadowSampleType(type: string): void;
/**
 * Hash: 0x5E9DAF5A20F15908 | ApiSet: undefined
 */
export declare function cascadeShadowsSetEntityTrackerScale(p0: number): void;
/**
 * Hash: 0x02AC28F3A01FA04A | ApiSet: undefined
 */
export declare function cascadeShadowsSetDynamicDepthValue(p0: number): void;
/**
 * Resets the screen's draw-origin which was changed by the function [`SET_DRAW_ORIGIN`](#\_0xAA0008F3BBB8F416) back to `x=0, y=0`. See [`SET_DRAW_ORIGIN`](#\_0xAA0008F3BBB8F416) for further information.
 * Hash: 0xFF0B610F6BE0D7AF | ApiSet: undefined
 */
export declare function clearDrawOrigin(): void;
/**
 * Hash: 0x0F07E7745A236711 | ApiSet: undefined
 */
export declare function clearTimecycleModifier(): void;
/**
 * Hash: 0x3669F1B198DCAA4F | ApiSet: undefined
 */
export declare function disableOcclusionThisFrame(): void;
/**
 * Creates a tracked point: useful for checking the visibility of a 3D point on screen.
 * Tracked points must be manually managed and will not be destroyed on resource stop (they are not an instance of CScriptResource). See [`DESTROY_TRACKED_POINT`](#\_0xB25DC90BAD56CA42) and [onResourceStop](https://docs.fivem.net/docs/scripting-reference/events/list/onResourceStop/).
 * Only 64 points may be tracked at a given time.
 * Hash: 0xE2C9439ED45DEA60 | ApiSet: undefined
 */
export declare function createTrackedPoint(): number;
/**
 * Hash: 0xBEB3D46BB7F043C0 | ApiSet: undefined
 */
export declare function clearTvChannelPlaylist(tvChannel: number): void;
/**
 * ```
 * Creates a checkpoint. Returns the handle of the checkpoint.
 * 20/03/17 : Attention, checkpoints are already handled by the game itself, so you must not loop it like markers.
 * Parameters:
 * * type - The type of checkpoint to create. See below for a list of checkpoint types.
 * * pos1 - The position of the checkpoint.
 * * pos2 - The position of the next checkpoint to point to.
 * * diameter - The diameter of the checkpoint.
 * * color - The color of the checkpoint.
 * * reserved - Special parameter, see below for details. Usually set to 0 in the scripts.
 * Checkpoint types (prior to game build 2189):
 * 0-4---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 5-9---------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 10-14-------Ring: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 15-19-------1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 20-24-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 25-29-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 30-34-------Cylinder: 1 arrow, 2 arrow, 3 arrows, CycleArrow, Checker
 * 35-38-------Ring: Airplane Up, Left, Right, UpsideDown
 * 39----------?
 * 40----------Ring: just a ring
 * 41----------?
 * 42-44-------Cylinder w/ number (uses 'reserved' parameter)
 * 45-47-------Cylinder no arrow or number
 * If using type 42-44, reserved sets number / number and shape to display
 * 0-99------------Just numbers (0-99)
 * 100-109-----------------Arrow (0-9)
 * 110-119------------Two arrows (0-9)
 * 120-129----------Three arrows (0-9)
 * 130-139----------------Circle (0-9)
 * 140-149------------CycleArrow (0-9)
 * 150-159----------------Circle (0-9)
 * 160-169----Circle  w/ pointer (0-9)
 * 170-179-------Perforated ring (0-9)
 * 180-189----------------Sphere (0-9)
 * ```
 * [Checkpoint Types](https://docs.fivem.net/docs/game-references/checkpoints/) as of game build 2189
 * Hash: 0x0134F0835AB6BFCB | ApiSet: undefined
 */
export declare function createCheckpoint(type: number, posX1: number, posY1: number, posZ1: number, posX2: number, posY2: number, posZ2: number, diameter: number, red: number, green: number, blue: number, alpha: number, reserved: number): number;
/**
 * Hash: 0xB25DC90BAD56CA42 | ApiSet: undefined
 */
export declare function destroyTrackedPoint(point: number): void;
/**
 * Removes any custom moon cycle overrides that have been configured with [ENABLE_MOON_CYCLE_OVERRIDE](#\_0x2C328AF17210F009)
 * Hash: 0x2BF72AD5B41AA739 | ApiSet: undefined
 */
export declare function disableMoonCycleOverride(): void;
/**
 * Hash: 0xEFD97FF47B745B8D | ApiSet: undefined
 */
export declare function disableScriptAmbientEffects(p0: any): void;
/**
 * Hash: 0x74AFEF0D2E1E409B | ApiSet: undefined
 */
export declare function doesParticleFxLoopedExist(ptfxHandle: number): boolean;
/**
 * Hash: 0xDE81239437E8C5A8 | ApiSet: undefined
 */
export declare function disableScreenblurFade(): void;
/**
 * Must be called each frame, will play at specified position on screen when called with [`_PLAY_BINK_MOVIE`](#\_0x70D2CC8A542A973C)
 * Hash: 0x7118E83EEB9F7238 | ApiSet: undefined
 */
export declare function drawBinkMovie(binkMovie: number, posX: number, posY: number, scaleX: number, scaleY: number, rotation: number, r: number, g: number, b: number, a: number): void;
/**
 * Hash: 0xC9F98AC1884E73A2 | ApiSet: undefined
 */
export declare function disableVehicleDistantlights(toggle: boolean): void;
/**
 * Used in pi_menu.c. Checks if there is a brief entry for specified value.
 * Values:
 * 0 - Dialogue brief
 * 1 - Help text brief
 * 2 - Mission Objective brief
 * Hash: 0x5E657EF1099EDD65 | ApiSet: undefined
 */
export declare function doesLatestBriefStringExist(briefValue: number): boolean;
/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.
 * ```
 * Hash: 0x7FDFADE676AA3CB0 | ApiSet: undefined
 */
export declare function drawDebugLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, r: number, g: number, b: number, a: number): void;
/**
 * Hash: 0x060D935D3981A275 | ApiSet: undefined
 */
export declare function doesVehicleHaveCrewEmblem(vehicle: number | Vehicle, p1: number): boolean;
/**
 * Hash: 0x22A249A53034450A | ApiSet: undefined
 */
export declare function dontRenderInGameUi(p0: boolean): void;
/**
 * This native draws a box between two vectors in the game world. It is typically used for visualizing boundaries or areas of interest. The color of the box is specified by the red, green, and blue parameters, with alpha determining its opacity. This native should be called every frame for continuous rendering.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xD3A9971CADAC7252 | ApiSet: undefined
 */
export declare function drawBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.
 * ```
 * Hash: 0x3903E216620488E8 | ApiSet: undefined
 */
export declare function drawDebugText(text: string, position: Vector3, red: number, green: number, blue: number, alpha: number): void;
/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.
 * ```
 * Hash: 0x73B1189623049839 | ApiSet: undefined
 */
export declare function drawDebugCross(position: Vector3, size: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.
 * ```
 * Hash: 0x083A2CA4F2E573BD | ApiSet: undefined
 */
export declare function drawDebugBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, r: number, g: number, b: number, a: number): void;
/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.
 * ```
 * Hash: 0xAAD68E1AB39DA632 | ApiSet: undefined
 */
export declare function drawDebugSphere(position: Vector3, radius: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * Similar to [\_DRAW_SPRITE](#\_0xE7FFAE5EBF23D890), but seems to be some kind of "interactive" sprite, at least used by render targets.
 * These seem to be the only dicts ever requested by this native:
 * ```
 * prop_screen_biker_laptop
 * Prop_Screen_GR_Disruption
 * Prop_Screen_TaleOfUs
 * prop_screen_nightclub
 * Prop_Screen_IE_Adhawk
 * prop_screen_sm_free_trade_shipping
 * prop_screen_hacker_truck
 * MPDesktop
 * Prop_Screen_Nightclub
 * And a few others
 * ```
 * Hash: 0x2BC54A8188768488 | ApiSet: undefined
 */
export declare function drawInteractiveSprite(textureDict: string, textureName: string, screenX: number, screenY: number, width: number, height: number, heading: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.
 * ```
 * Hash: 0xD8B9A8AC5608FF94 | ApiSet: undefined
 */
export declare function drawDebugLineWithTwoColours(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, r1: number, g1: number, b1: number, r2: number, g2: number, b2: number, alpha1: number, alpha2: number): void;
/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.
 * ```
 * Hash: 0xA3BB2E9555C05A8F | ApiSet: undefined
 */
export declare function drawDebugText2d(text: string, position: Vector3, red: number, green: number, blue: number, alpha: number): void;
/**
 * This native draws a line between two vectors in the game world. It is typically used for visualizing paths or connections between points. The color of the line is specified by the red, green, and blue parameters, with alpha determining its opacity. This native should be called every frame for continuous rendering.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x6B7256074AE34680 | ApiSet: undefined
 */
export declare function drawLine(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * ```
 * NativeDB Added Parameter 26: BOOL p25
 * ```
 * Hash: 0xE82728F0DE75D13A | ApiSet: undefined
 */
export declare function drawMarker2(type: number, posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, rotX: number, rotY: number, rotZ: number, scaleX: number, scaleY: number, scaleZ: number, red: number, green: number, blue: number, alpha: number, bobUpAndDown: boolean, faceCamera: boolean, rotationOrder: number, rotate: boolean, textureDict: string, textureName: string, drawOnEnts: boolean, p24: boolean): void;
/**
 * Hash: 0xF2A1B2771A01DBD4 | ApiSet: undefined
 */
export declare function drawLightWithRange(posX: number, posY: number, posZ: number, colorR: number, colorG: number, colorB: number, range: number, intensity: number): void;
/**
 * Hash: 0xF49E9A9716A04595 | ApiSet: undefined
 */
export declare function drawLightWithRangeAndShadow(position: Vector3, r: number, g: number, b: number, range: number, intensity: number, shadow: number): void;
/**
 * Hash: 0x54972ADAF0294A93 | ApiSet: undefined
 */
export declare function drawScaleformMovie(scaleformHandle: number, x: number, y: number, width: number, height: number, red: number, green: number, blue: number, alpha: number, unk: number): void;
/**
 * ```
 * x/y/z - Location of a vertex (in world coords), presumably.
 * ----------------
 * x1, y1, z1     : Coordinates for the first point
 * x2, y2, z2     : Coordinates for the second point
 * x3, y3, z3     : Coordinates for the third point
 * r, g, b, alpha : Color with RGBA-Values
 * Keep in mind that only one side of the drawn triangle is visible: It's the side, in which the vector-product of the vectors heads to: (b-a)x(c-a) Or (b-a)x(c-b).
 * But be aware: The function seems to work somehow differently. I have trouble having them drawn in rotated orientation. Try it yourself and if you somehow succeed, please edit this and post your solution.
 * I recommend using a predefined function to call this.
 * [VB.NET]
 * Public Sub DrawPoly(a As Vector3, b As Vector3, c As Vector3, col As Color)
 * [Function].Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A)
 * End Sub
 * [C#]
 * public void DrawPoly(Vector3 a, Vector3 b, Vector3 c, Color col)
 * {
 * Function.Call(Hash.DRAW_POLY, a.X, a.Y, a.Z, b.X, b.Y, b.Z, c.X, c.Y, c.Z, col.R, col.G, col.B, col.A);
 * }
 * BTW: Intersecting triangles are not supported: They overlap in the order they were called.
 * ```
 * Hash: 0xAC26716048436851 | ApiSet: undefined
 */
export declare function drawPoly(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * Hash: 0x1072F115DAB0717E | ApiSet: undefined
 */
export declare function drawLowQualityPhotoToPhone(p0: boolean, p1: boolean): void;
/**
 * Draws a marker with the specified appearance at the target location. This has to be called every frame, e.g. in a `Wait(0)` loop.
 * There's a [list of markers](https://docs.fivem.net/game-references/markers/) on the FiveM documentation site.
 * Hash: 0x28477EC23D892089 | ApiSet: undefined
 */
export declare function drawMarker(type: number, posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, rotX: number, rotY: number, rotZ: number, scaleX: number, scaleY: number, scaleZ: number, red: number, green: number, blue: number, alpha: number, bobUpAndDown: boolean, faceCamera: boolean, rotationOrder: number, rotate: boolean, textureDict: string, textureName: string, drawOnEnts: boolean): void;
/**
 * Hash: 0x1CE592FDC749D6F5 | ApiSet: undefined
 */
export declare function drawScaleformMovie3dSolid(scaleform: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, p7: number, p8: number, p9: number, scaleX: number, scaleY: number, scaleZ: number, p13: any): void;
/**
 * Hash: 0x87D51D72255D4E78 | ApiSet: undefined
 */
export declare function drawScaleformMovie3d(scaleform: number, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, p7: number, sharpness: number, p9: number, scaleX: number, scaleY: number, scaleZ: number, p13: any): void;
/**
 * ```
 * Draws a rectangle on the screen.
 * -x: The relative X point of the center of the rectangle. (0.0-1.0, 0.0 is the left edge of the screen, 1.0 is the right edge of the screen)
 * -y: The relative Y point of the center of the rectangle. (0.0-1.0, 0.0 is the top edge of the screen, 1.0 is the bottom edge of the screen)
 * -width: The relative width of the rectangle. (0.0-1.0, 1.0 means the whole screen width)
 * -height: The relative height of the rectangle. (0.0-1.0, 1.0 means the whole screen height)
 * -R: Red part of the color. (0-255)
 * -G: Green part of the color. (0-255)
 * -B: Blue part of the color. (0-255)
 * -A: Alpha part of the color. (0-255, 0 means totally transparent, 255 means totally opaque)
 * The total number of rectangles to be drawn in one frame is apparently limited to 399.
 * ```
 * ```
 * NativeDB Added Parameter 9: BOOL p8
 * ```
 * Hash: 0x3A618A217E5154F0 | ApiSet: undefined
 */
export declare function drawRect(x: number, y: number, width: number, height: number, r: number, g: number, b: number, a: number): void;
/**
 * ```
 * unk is not used so no need
 * ```
 * Hash: 0x0DF606929C105BE1 | ApiSet: undefined
 */
export declare function drawScaleformMovieFullscreen(scaleform: number, red: number, green: number, blue: number, alpha: number, unk: number): void;
/**
 * Hash: 0x5BCA583A583194DB | ApiSet: undefined
 */
export declare function drawSpotLightWithShadow(posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, colorR: number, colorG: number, colorB: number, distance: number, brightness: number, roundness: number, radius: number, falloff: number, shadowId: number): void;
/**
 * ```
 * It's called after 0xD3A10FC7FD8D98CD and 0xF1CEA8A4198D8E9A
 * p0 was always "CELEBRATION_WINNER"
 * ```
 * Hash: 0x98C4FE6EC34154CA | ApiSet: undefined
 */
export declare function drawShowroom(p0: string, ped: number | Ped, p2: number, posX: number, posY: number, posZ: number): boolean;
/**
 * Draws a 3D sphere, typically seen in the GTA:O freemode event "Penned In".
 * Example [image](https://imgur.com/nCbtS4H):
 * ```lua
 * DrawSphere(35.45, 172.66, 126.22, 1.0, 0, 0, 255, 0.2)
 * ```
 * Hash: 0x799017F9E3B10112 | ApiSet: undefined
 */
export declare function drawSphere(position: Vector3, radius: number, r: number, g: number, b: number, opacity: number): void;
/**
 * Hash: 0xCF537FDE4FBD4CE5 | ApiSet: undefined
 */
export declare function drawScaleformMovieFullscreenMasked(scaleform1: number, scaleform2: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * Used for drawling Deadline trailing lights, see deadline.ytd
 * Each vertex has its own colour that is blended/illuminated on the texture. Additionally, the R, G, and B components are floats that are int-casted internally.
 * For UVW mapping (u,v,w parameters), reference your favourite internet resource for more details.
 * Hash: 0x736D7AA1B750856B | ApiSet: undefined
 */
export declare function drawSpritePoly2(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red1: number, green1: number, blue1: number, alpha1: number, red2: number, green2: number, blue2: number, alpha2: number, red3: number, green3: number, blue3: number, alpha3: number, textureDict: string, textureName: string, u1: number, v1: number, w1: number, u2: number, v2: number, w2: number, u3: number, v3: number, w3: number): void;
/**
 * Similar to DRAW_SPRITE, but allows to specify the texture coordinates used to draw the sprite.
 * u1, v1 - texture coordinates for the top-left corner
 * u2, v2 - texture coordinates for the bottom-right corner
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x95812F9B26074726 | ApiSet: undefined
 */
export declare function drawSpriteUv(textureDict: string, textureName: string, x: number, y: number, width: number, height: number, u1: number, v1: number, u2: number, v2: number, heading: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * ```
 * Parameters:
 * * pos - coordinate where the spotlight is located
 * * dir - the direction vector the spotlight should aim at from its current position
 * * r,g,b - color of the spotlight
 * * distance - the maximum distance the light can reach
 * * brightness - the brightness of the light
 * * roundness - "smoothness" of the circle edge
 * * radius - the radius size of the spotlight
 * * falloff - the falloff size of the light's edge (example: www.i.imgur.com/DemAWeO.jpg)
 * Example in C# (spotlight aims at the closest vehicle):
 * Vector3 myPos = Game.Player.Character.Position;
 * Vehicle nearest = World.GetClosestVehicle(myPos , 1000f);
 * Vector3 destinationCoords = nearest.Position;
 * Vector3 dirVector = destinationCoords - myPos;
 * dirVector.Normalize();
 * Function.Call(Hash.DRAW_SPOT_LIGHT, pos.X, pos.Y, pos.Z, dirVector.X, dirVector.Y, dirVector.Z, 255, 255, 255, 100.0f, 1f, 0.0f, 13.0f, 1f);
 * ```
 * Hash: 0xD0F64B265C8C8B33 | ApiSet: undefined
 */
export declare function drawSpotLight(posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, colorR: number, colorG: number, colorB: number, distance: number, brightness: number, hardness: number, radius: number, falloff: number): void;
/**
 * ```
 * Draws a 2D sprite on the screen.
 * Parameters:
 * textureDict - Name of texture dictionary to load texture from (e.g. "CommonMenu", "MPWeaponsCommon", etc.)
 * textureName - Name of texture to load from texture dictionary (e.g. "last_team_standing_icon", "tennis_icon", etc.)
 * screenX/Y - Screen offset (0.5 = center)
 * scaleX/Y - Texture scaling. Negative values can be used to flip the texture on that axis. (0.5 = half)
 * heading - Texture rotation in degrees (default = 0.0) positive is clockwise, measured in degrees
 * red,green,blue - Sprite color (default = 255/255/255)
 * alpha - opacity level
 * ```
 * ```
 * NativeDB Added Parameter 12: BOOL p11
 * ```
 * Hash: 0xE7FFAE5EBF23D890 | ApiSet: undefined
 */
export declare function drawSprite(textureDict: string, textureName: string, screenX: number, screenY: number, width: number, height: number, heading: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * ```
 * `All calls to this native are preceded by calls to GRAPHICS::_0x61BB1D9B3A95D802 and GRAPHICS::_0xC6372ECD45D73BCD, respectively.`
 * "act_cinema.ysc", line 1483:
 * `HUD::SET_HUD_COMPONENT_POSITION(15, 0.0, -0.0375);`
 * `HUD::SET_TEXT_RENDER_ID(l_AE);`
 * `GRAPHICS::_0x61BB1D9B3A95D802(4);`
 * `GRAPHICS::_0xC6372ECD45D73BCD(1);`
 * `if (GRAPHICS::_0x0AD973CA1E077B60(${movie_arthouse})) {`
 * `GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 0.7375, 1.0, 0.0, 255, 255, 255, 255);`
 * } else {
 * `GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);`
 * }
 * "am_mp_property_int.ysc", line 102545:
 * `if (ENTITY::DOES_ENTITY_EXIST(a_2._f3)) {`
 * `if (HUD::IS_NAMED_RENDERTARGET_LINKED(ENTITY::GET_ENTITY_MODEL(a_2._f3))) {`
 * `HUD::SET_TEXT_RENDER_ID(a_2._f1);`
 * `GRAPHICS::_0x61BB1D9B3A95D802(4);`
 * `GRAPHICS::_0xC6372ECD45D73BCD(1);`
 * `GRAPHICS::DRAW_TV_CHANNEL(0.5, 0.5, 1.0, 1.0, 0.0, 255, 255, 255, 255);`
 * `if (GRAPHICS::GET_TV_CHANNEL() == -1) {`
 * sub_a8fa5(a_2, 1);
 * } else {
 * sub_a8fa5(a_2, 1);
 * `GRAPHICS::ATTACH_TV_AUDIO_TO_ENTITY(a_2._f3);`
 * }
 * `HUD::SET_TEXT_RENDER_ID(HUD::GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID());`
 * }
 * }
 * ```
 * Hash: 0xFDDC2B4ED3C69DF0 | ApiSet: undefined
 */
export declare function drawTvChannel(xPos: number, yPos: number, xScale: number, yScale: number, rotation: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * This native draws a textured polygon between three vectors in the game world. It's commonly utilized for rendering deadline trailing lights, with additional details available in the `deadline.ytd` file. UVW mapping details (u,v,w parameters) can be found on various internet resources. This native is specifically used for drawing textured polygons on the screen, where UV coordinates define the texture mapping and color/alpha parameters define the appearance of the polygon. This native should be called every frame for continuous rendering.
 * ```
 * NativeDB Introduced: v877
 * ```
 * Hash: 0x29280002282F1928 | ApiSet: undefined
 */
export declare function drawTexturedPoly(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, red: number, green: number, blue: number, alpha: number, textureDict: string, textureName: string, u1: number, v1: number, w1: number, u2: number, v2: number, w2: number, u3: number, v3: number, w3: number): void;
/**
 * If true, this native will create purple explosions upon projectile impact, add comic-like PTFX when firing a weapon, create a sound on bullet impact and have its own "blood effect".
 * If the PTFX asset "scr_rcbarry2" is not requested using ([`RequestNamedPtfxAsset`](#\_0xD821490579791273)) then this native **will not work as intended**.
 * Excerpt from fm_content_drug_lab_work.c:
 * ```
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_rcbarry2");`
 * `if (STREAMING::HAS_NAMED_PTFX_ASSET_LOADED("scr_rcbarry2"))`
 * {
 * `GRAPHICS::ENABLE_CLOWN_BLOOD_VFX(true);`
 * `AUDIO::START_AUDIO_SCENE("DLC_CM2022_DRUG_TRIP_SPRINKLERS_SCENE");`
 * func_720(26);
 * }
 * ```
 * Hash: 0xD821490579791273 | ApiSet: undefined
 */
export declare function enableClownBloodVfx(toggle: boolean): void;
/**
 * Hash: 0x74C180030FDE4B69 | ApiSet: undefined
 */
export declare function enableMovieKeyframeWait(toggle: boolean): void;
/**
 * Creates a motion-blur sort of effect, this native does not seem to work, however by using the [`ANIMPOSTFX_PLAY`](#\_0x2206BF9A37B7F724) native with `"DrugsMichaelAliensFight"` as the effect parameter, you should be able to get the effect.
 * This native does not seem to work, however by using the [ANIMPOSTFX_PLAY](#\_0x2206BF9A37B7F724) native with "DrugsMichaelAliensFight" as the effect parameter, you should be able to get the effect.
 * Hash: 0x9DCE1F0F78260875 | ApiSet: undefined
 */
export declare function enableAlienBloodVfx(toggle: boolean): void;
/**
 * Enable a custom moon cycle, allowing control of which lunar phase the moon is in.
 * Valid values are from `0.0` to `1.0`, with `0.5` representing a full moon.
 * | Value |   Lunar Phase   |
 * | :---: | :-------------: |
 * | `0.1` | Waxing Crescent |
 * | `0.2` |  First Quarter  |
 * | `0.3` | Waxing Gibbous  |
 * | `0.5` |    Full Moon    |
 * | `0.7` | Waning Gibbous  |
 * | `0.8` |  Third Quarter  |
 * | `0.9` | Waning Crescent |
 * The moon phase can be disabled with [DISABLE_MOON_CYCLE_OVERRIDE](#\_0x2BF72AD5B41AA739)
 * Hash: 0x2C328AF17210F009 | ApiSet: undefined
 */
export declare function enableMoonCycleOverride(phase: number): void;
/**
 * Hash: 0x0A123435A26C36CD | ApiSet: undefined
 */
export declare function endPetrolTrailDecals(): void;
/**
 * ```
 * Pops and calls the Scaleform function on the stack
 * ```
 * Hash: 0xC6796A8FFA375E53 | ApiSet: undefined
 */
export declare function endScaleformMovieMethod(): void;
/**
 * Hash: 0x873FA65C778AD970 | ApiSet: undefined
 */
export declare function enableMovieSubtitles(toggle: boolean): void;
/**
 * Hash: 0xD77EDADB0420E6E0 | ApiSet: undefined
 */
export declare function fadeDecalsInRange(position: Vector3, radius: number, duration: number): void;
/**
 * Hash: 0x362E2D3FE93A9959 | ApiSet: undefined
 */
export declare function endTextCommandScaleformString(): void;
/**
 * Hash: 0xC50AA39A577AF886 | ApiSet: undefined
 */
export declare function endScaleformMovieMethodReturnValue(): number;
/**
 * Hash: 0xDC459CFA0CCE245B | ApiSet: undefined
 */
export declare function forceRenderInGameUi(toggle: boolean): void;
/**
 * Same as END_TEXT_COMMAND_SCALEFORM_STRING but does not perform HTML conversion for text tokens.
 * Also useful for when you are trying to add blips and inputs in your scaleform (If the scaleform supports it).
 * Hash: 0xAE4E8157D9ECF087 | ApiSet: undefined
 */
export declare function endTextCommandUnparsedScaleformString(): void;
/**
 * Hash: 0x6A12D88881435DCA | ApiSet: undefined
 */
export declare function freeMemoryForLowQualityPhoto(): void;
/**
 * Hash: 0xC9B18B4619F48F7B | ApiSet: undefined
 */
export declare function fadeUpPedLight(p0: number): void;
/**
 * Hash: 0xD801CC02177FA3F1 | ApiSet: undefined
 */
export declare function freeMemoryForHighQualityPhoto(): void;
/**
 * Returns current screen resolution.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x873C9F3104101DD3 | ApiSet: undefined
 */
export declare function getActualScreenResolution(): [number, number];
/**
 * This native retrieves the aspect ratio of the game window. If `physicalAspect` is `true`, it returns the physical aspect ratio of the game window, which is useful for 3x1 modes. Otherwise, it returns the aspect ratio of the main game window, considering any custom overrides from the settings menu.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xF1307EF624A80D87 | ApiSet: undefined
 */
export declare function getAspectRatio(physicalAspect: boolean): number;
/**
 * Hash: 0x0A46AF8A78DC5E0A | ApiSet: undefined
 */
export declare function freeMemoryForMissionCreatorPhoto(): void;
/**
 * This native indicates whether the game is running in high-definition (HD) resolution. It returns `false` if the resolution is less than `1280x720` and `true` if it's equal to or greater than `1280x720`.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x84ED31191CC5D2C9 | ApiSet: undefined
 */
export declare function getIsHidef(): boolean;
/**
 * In percentage: 0.0 - 100.0
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x8E17DDD6B9D5BF29 | ApiSet: undefined
 */
export declare function getBinkMovieTime(binkMovie: number): number;
/**
 * Hash: 0x473151EBC762C6DA | ApiSet: undefined
 */
export declare function getCurrentNumberOfCloudPhotos(): number;
/**
 * This native retrieves whether the game is running in widescreen mode or not.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x30CF4BDA4FCB1905 | ApiSet: undefined
 */
export declare function getIsWidescreen(): boolean;
/**
 * Hash: 0x323F647679A09103 | ApiSet: undefined
 */
export declare function getDecalWashLevel(decal: number): number;
/**
 * ```
 * Gets the scale of safe zone. if the safe zone size scale is max, it will return 1.0.
 * ```
 * Hash: 0xBAF107B6BB2C97F0 | ApiSet: undefined
 */
export declare function getSafeZoneSize(): number;
/**
 * Hash: 0x2F09F7976C512404 | ApiSet: undefined
 */
export declare function getIsPetrolDecalInRange(xCoord: number, yCoord: number, zCoord: number, radius: number): boolean;
/**
 * ```
 * This function is hard-coded to always return 96.
 * ```
 * Hash: 0xDC54A7AF8B3A14EF | ApiSet: undefined
 */
export declare function getMaximumNumberOfCloudPhotos(): number;
/**
 * See [`GET_TIMECYCLE_MODIFIER_INDEX`](#\_0xFDF3D97C674AFB66) for use, works the same just for the secondary timecycle modifier.
 * Hash: 0xBB0527EC6341496D | ApiSet: undefined
 */
export declare function getExtraTimecycleModifierIndex(): number;
/**
 * Hash: 0x35FB78DC42B7BD21 | ApiSet: undefined
 */
export declare function getRequestingnightvision(): boolean;
/**
 * ```
 * This function is hard-coded to always return 0.
 * ```
 * Hash: 0x34D23450F028B0BF | ApiSet: undefined
 */
export declare function getMaximumNumberOfPhotos(): number;
/**
 * Hash: 0xD80A80346A45D761 | ApiSet: undefined
 */
export declare function getScaleformMovieMethodReturnValueBool(methodReturn: number): boolean;
/**
 * Used to get a return value from a scaleform function. Returns an int in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING returns a string.
 * Hash: 0x2DE7EFA66B906036 | ApiSet: undefined
 */
export declare function getScaleformMovieMethodReturnValueInt(method_return: number): number;
/**
 * ```
 * Convert a world coordinate into its relative screen coordinate.  (WorldToScreen)
 * Returns a boolean; whether or not the operation was successful. It will return false if the coordinates given are not visible to the rendering camera.
 * For .NET users...
 * VB:
 * Public Shared Function World3DToScreen2d(pos as vector3) As Vector2
 * Dim x2dp, y2dp As New Native.OutputArgument
 * Native.Function.Call(Of Boolean)(Native.Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.x, pos.y, pos.z, x2dp, y2dp)
 * Return New Vector2(x2dp.GetResult(Of Single), y2dp.GetResult(Of Single))
 * End Function
 * C#:
 * Vector2 World3DToScreen2d(Vector3 pos)
 * {
 * var x2dp = new OutputArgument();
 * var y2dp = new OutputArgument();
 * Function.Call<bool>(Hash.GET_SCREEN_COORD_FROM_WORLD_COORD , pos.X, pos.Y, pos.Z, x2dp, y2dp);
 * return new Vector2(x2dp.GetResult<float>(), y2dp.GetResult<float>());
 * }
 * //USE VERY SMALL VALUES FOR THE SCALE OF RECTS/TEXT because it is dramatically larger on screen than in 3D, e.g '0.05' small.
 * Used to be called _WORLD3D_TO_SCREEN2D
 * I thought we lost you from the scene forever. It does seem however that calling SET_DRAW_ORIGIN then your natives, then ending it. Seems to work better for certain things such as keeping boxes around people for a predator missile e.g.
 * ```
 * Hash: 0x34E82F05DF2974F5 | ApiSet: undefined
 */
export declare function getScreenCoordFromWorldCoord(worldX: number, worldY: number, worldZ: number): [boolean, number, number];
/**
 * Hash: 0x5CCABFFCA31DDE33 | ApiSet: undefined
 */
export declare function getScreenblurFadeCurrentTime(): number;
/**
 * Used to get a return value from a scaleform function. Returns a string in the same way GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT returns an int.
 * Hash: 0xE1E258829A885245 | ApiSet: undefined
 */
export declare function getScaleformMovieMethodReturnValueString(method_return: number): string;
/**
 * Hash: 0x1670F8D05056F257 | ApiSet: undefined
 */
export declare function getStatusOfLoadMissionCreatorPhoto(p0: string): number;
/**
 * Hardcoded to always return 1280x720. Use [`_GET_ACTIVE_SCREEN_RESOLUTION`](#\_0x873C9F3104101DD3) to retrieve the correct screen resolution.
 * Hash: 0x888D57E407E63624 | ApiSet: undefined
 */
export declare function getScreenResolution(): [number, number];
/**
 * Hash: 0x0C0C4E81E1AC60A0 | ApiSet: undefined
 */
export declare function getStatusOfSaveHighQualityPhoto(): number;
/**
 * Calculates the effective X/Y fractions when applying the values set by `SET_SCRIPT_GFX_ALIGN` and
 * `SET_SCRIPT_GFX_ALIGN_PARAMS`.
 * Hash: 0x6DD8F5AA635EB4B2 | ApiSet: undefined
 */
export declare function getScriptGfxPosition(x: number, y: number): [number, number];
/**
 * Returns status of gallery photo fetch, which was requested by [`QUEUE_OPERATION_TO_CREATE_SORTED_LIST_OF_PHOTOS`](#\_0x2A893980E96B659A).
 * Hash: 0xF5BED327CEA362B1 | ApiSet: undefined
 */
export declare function getStatusOfSortedListOperation(scanForSaving: boolean): number;
/**
 * Hash: 0x0D6CA79EEEBD8CA3 | ApiSet: undefined
 */
export declare function getStatusOfTakeHighQualityPhoto(): number;
/**
 * Hash: 0x90A78ECAA4E78453 | ApiSet: undefined
 */
export declare function getStatusOfTakeMissionCreatorPhoto(): number;
/**
 * ```
 * Only use for this in the PC scripts is:
 * `if (GRAPHICS::GET_TIMECYCLE_MODIFIER_INDEX() != -1)`
 * For a full list, see here: pastebin.com/cnk7FTF2
 * ```
 * Hash: 0xFDF3D97C674AFB66 | ApiSet: undefined
 */
export declare function getTimecycleModifierIndex(): number;
/**
 * Hash: 0x459FD2C8D0AB78BC | ApiSet: undefined
 */
export declare function getTimecycleTransitionModifierIndex(): number;
/**
 * ```
 * Returns the texture resolution of the passed texture dict+name.
 * Note: Most texture resolutions are doubled compared to the console version of the game.
 * ```
 * Hash: 0x35736EE65BD00C11 | ApiSet: undefined
 */
export declare function getTextureResolution(textureDict: string, textureName: string): Vector3;
/**
 * Hash: 0x2170813D3DD8661B | ApiSet: undefined
 */
export declare function getTvVolume(): number;
/**
 * Hash: 0xFC1E275A90D39995 | ApiSet: undefined
 */
export declare function getTvChannel(): number;
/**
 * Hash: 0xEB3DAC2C86001E5E | ApiSet: undefined
 */
export declare function getTogglePausedRenderphasesStatus(): boolean;
/**
 * Hash: 0xFE26117A5841B2FF | ApiSet: undefined
 */
export declare function getVehicleCrewEmblemRequestState(vehicle: number | Vehicle, p1: number): number;
/**
 * Hash: 0x2202A3F42C8E5F79 | ApiSet: undefined
 */
export declare function getUsingnightvision(): boolean;
/**
 * Hash: 0x44B80ABAB9D80BD3 | ApiSet: undefined
 */
export declare function getUsingseethrough(): boolean;
/**
 * Hash: 0xA51C4B86B71652AE | ApiSet: undefined
 */
export declare function golfTrailSetEnabled(toggle: boolean): void;
/**
 * Hash: 0xA4664972A9B8F8BA | ApiSet: undefined
 */
export declare function golfTrailGetVisualControlPoint(p0: number): Vector3;
/**
 * Hash: 0xA4819F5E23E2FFAD | ApiSet: undefined
 */
export declare function golfTrailGetMaxHeight(): number;
/**
 * Hash: 0x12995F2E53FFA601 | ApiSet: undefined
 */
export declare function golfTrailSetColour(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number, p11: number): void;
/**
 * ```
 * p8 seems to always be false.
 * ```
 * Hash: 0x312342E1A4874F3F | ApiSet: undefined
 */
export declare function golfTrailSetPath(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: boolean): void;
/**
 * Hash: 0x06F761EA47C1D3ED | ApiSet: undefined
 */
export declare function golfTrailSetFacing(p0: boolean): void;
/**
 * Hash: 0x2485D34E50A22E84 | ApiSet: undefined
 */
export declare function golfTrailSetRadius(p0: number, p1: number, p2: number): void;
/**
 * Hash: 0xDBAA5EC848BA2D46 | ApiSet: undefined
 */
export declare function golfTrailSetTessellation(p0: number, p1: number): void;
/**
 * ```
 * Only appeared in Golf & Golf_mp. Parameters were all ptrs
 * ```
 * Hash: 0x9CFDD90B2B844BF7 | ApiSet: undefined
 */
export declare function golfTrailSetShaderParams(p0: number, p1: number, p2: number, p3: number, p4: number): void;
/**
 * Hash: 0x302C91AB2D477F7E | ApiSet: undefined
 */
export declare function grassLodResetScriptAreas(): void;
/**
 * ```
 * 12 matches across 4 scripts. All 4 scripts were job creators.
 * type ranged from 0 - 2.
 * p4 was always 0.2f. Likely scale.
 * assuming p5 - p8 is RGBA, the graphic is always yellow (255, 255, 0, 255).
 * Tested but noticed nothing.
 * ```
 * Hash: 0xB1BB03742917A5D6 | ApiSet: undefined
 */
export declare function golfTrailSetFixedControlPoint(type: number, xPos: number, yPos: number, zPos: number, p4: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * Hash: 0x85F01B8D5B90570E | ApiSet: undefined
 */
export declare function hasScaleformMovieLoaded(scaleformHandle: number): boolean;
/**
 * Hash: 0x8217150E1217EBFD | ApiSet: undefined
 */
export declare function hasScaleformContainerMovieLoadedIntoParent(scaleformHandle: number): boolean;
/**
 * Hash: 0xDF6E5987D2B4D140 | ApiSet: undefined
 */
export declare function hasScaleformScriptHudMovieLoaded(hudComponent: number): boolean;
/**
 * ```
 * Wraps 0xAAE9BE70EC7C69AB with FLT_MAX as p7, Jenkins: 0x73E96210?
 * ```
 * Hash: 0x6D955F6A9E0295B1 | ApiSet: undefined
 */
export declare function grassLodShrinkScriptAreas(position: Vector3, radius: number, p4: number, p5: number, p6: number): void;
/**
 * Hash: 0x0145F696AAAAD2E4 | ApiSet: undefined
 */
export declare function hasStreamedTextureDictLoaded(textureDict: string): boolean;
/**
 * ```
 * Only values used in the scripts are:
 * "heist_mp"
 * "heistmap_mp"
 * "instructional_buttons"
 * "heist_pre"
 * ```
 * Hash: 0x0C1C5D756FB5F337 | ApiSet: undefined
 */
export declare function hasScaleformMovieFilenameLoaded(scaleformName: string): boolean;
/**
 * Hash: 0xC694D74949CAFD0C | ApiSet: undefined
 */
export declare function isDecalAlive(decal: number): boolean;
/**
 * Check if a Scaleform movie with the given name has been loaded.
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0x9743BCCF7CD6E1F6 | ApiSet: undefined
 */
export declare function hasScaleformMovieNamedLoaded(scaleformName: string): [boolean, number];
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x86255B1FC929E33E | ApiSet: undefined
 */
export declare function isScaleformMovieDeleting(scaleformIndex: number): boolean;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x1F710BFF7DAE6261 | ApiSet: undefined
 */
export declare function isPlaylistUnk(tvChannel: number, p1: any): boolean;
/**
 * ```
 * Returns whether screen transition to blur/from blur is running.
 * ```
 * Hash: 0x7B226C785A52A0A9 | ApiSet: undefined
 */
export declare function isScreenblurFadeRunning(): boolean;
/**
 * Hash: 0xC45CCDAAC9221CA8 | ApiSet: undefined
 */
export declare function isTrackedPointVisible(point: number): boolean;
/**
 * Hash: 0x0218BA067D249DEA | ApiSet: undefined
 */
export declare function _0x0218BA067D249DEA(): void;
/**
 * methodReturn: The return value of this native: END_SCALEFORM_MOVIE_METHOD_RETURN_VALUE
 * Returns true if the return value of a scaleform function is ready to be collected (using GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_STRING or GET_SCALEFORM_MOVIE_METHOD_RETURN_VALUE_INT).
 * Hash: 0x768FF8961BA904D6 | ApiSet: undefined
 */
export declare function isScaleformMovieMethodReturnValueReady(method_return: number): boolean;
/**
 * Hash: 0xB66064452270E8F1 | ApiSet: undefined
 */
export declare function loadMovieMeshSet(movieMeshSetName: string): number;
/**
 * Hash: 0x4862437A486F91B0 | ApiSet: undefined
 */
export declare function loadMissionCreatorPhoto(p0: string, p3: boolean): [boolean, any, any];
/**
 * Hash: 0x84C8D7C2D30D3280 | ApiSet: undefined
 */
export declare function moveVehicleDecals(p0: any, p1: any): void;
/**
 * ```
 * IS_*
 * ```
 * Hash: 0x0AD973CA1E077B60 | ApiSet: undefined
 */
export declare function isTvPlaylistItemPlaying(videoCliphash: number | string): boolean;
/**
 * ```
 * DISABLE_S*
 * ```
 * Hash: 0x02369D5C8A51FDCF | ApiSet: undefined
 */
export declare function _0x02369D5C8A51FDCF(toggle: boolean): void;
/**
 * Hash: 0x03300B57FCAC6DDB | ApiSet: undefined
 */
export declare function _0x03300B57FCAC6DDB(p0: boolean): void;
/**
 * Hash: 0x0E4299C549F0D1F1 | ApiSet: undefined
 */
export declare function _0x0E4299C549F0D1F1(toggle: boolean): void;
/**
 * Hash: 0x1612C45F9E3E0D44 | ApiSet: undefined
 */
export declare function _0x1612C45F9E3E0D44(): void;
/**
 * Hash: 0x0AE73D8DF3A762B2 | ApiSet: undefined
 */
export declare function _0x0AE73D8DF3A762B2(p0: boolean): void;
/**
 * ```
 * UI3DSCENE_*
 * ```
 * Hash: 0x108BE26959A9D9BB | ApiSet: undefined
 */
export declare function _0x108BE26959A9D9BB(toggle: boolean): void;
/**
 * Hash: 0x259BA6D4E6F808F1 | ApiSet: undefined
 */
export declare function _0x259BA6D4E6F808F1(p0: any): void;
/**
 * Hash: 0x14FC5833464340A8 | ApiSet: undefined
 */
export declare function _0x14FC5833464340A8(): void;
/**
 * Hash: 0x1BBC135A4D25EDDE | ApiSet: undefined
 */
export declare function _0x1BBC135A4D25EDDE(p0: boolean): void;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x2A251AA48B2B46DB | ApiSet: undefined
 */
export declare function _0x2A251AA48B2B46DB(): void;
/**
 * ```
 * SET_TRA*
 * ```
 * Hash: 0x1CBA05AE7BD7EE05 | ApiSet: undefined
 */
export declare function _0x1CBA05AE7BD7EE05(p0: number): void;
/**
 * Hash: 0x25FC3E33A31AD0C9 | ApiSet: undefined
 */
export declare function _0x25FC3E33A31AD0C9(p0: boolean): void;
/**
 * Hash: 0x2C42340F916C5930 | ApiSet: undefined
 */
export declare function _0x2C42340F916C5930(p0: any): any;
/**
 * Hash: 0x27CFB1B1E078CB2D | ApiSet: undefined
 */
export declare function _0x27CFB1B1E078CB2D(): void;
/**
 * Hash: 0x27FEB5254759CDE3 | ApiSet: undefined
 */
export declare function _0x27FEB5254759CDE3(textureDict: string, p1: boolean): boolean;
/**
 * ```
 * Used in arcade games and Beam hack minigame in Doomsday Heist. For example, [Penetrator Arcade Game](https://streamable.com/8igrzw)
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x2D3B147AFAD49DE0 | ApiSet: undefined
 */
export declare function _0x2D3B147AFAD49DE0(textureDict: string, textureName: string, x: number, y: number, width: number, height: number, p6: number, red: number, green: number, blue: number, alpha: number, p11: number): void;
/**
 * Hash: 0x2B40A97646381508 | ApiSet: undefined
 */
export declare function _0x2B40A97646381508(p0: any): void;
/**
 * Hash: 0x393BD2275CEB7793 | ApiSet: undefined
 */
export declare function _0x393BD2275CEB7793(): any;
/**
 * Hash: 0x346EF3ECAAAB149E | ApiSet: undefined
 */
export declare function _0x346EF3ECAAAB149E(): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x2FCB133CA50A49EB | ApiSet: undefined
 */
export declare function _0x2FCB133CA50A49EB(p0: any): any;
/**
 * ```
 * GET_CURRENT_*
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x30432A0118736E00 | ApiSet: undefined
 */
export declare function _0x30432A0118736E00(): number;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x43FA7CBE20DAB219 | ApiSet: undefined
 */
export declare function _0x43FA7CBE20DAB219(p0: any): void;
/**
 * Hash: 0x5B0316762AFD4A64 | ApiSet: undefined
 */
export declare function _0x5B0316762AFD4A64(): number;
/**
 * Hash: 0x36F6626459D91457 | ApiSet: undefined
 */
export declare function _0x36F6626459D91457(p0: number): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Sets the given checkpoint target to the new coords
 * Hash: 0x3C788E7F6438754D | ApiSet: undefined
 */
export declare function _0x3C788E7F6438754D(checkpointHandle: number, position: Vector3): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x61F95E5BB3E0A8C6 | ApiSet: undefined
 */
export declare function _0x61F95E5BB3E0A8C6(p0: any): void;
/**
 * Hash: 0x4AF92ACD3141D96C | ApiSet: undefined
 */
export declare function _0x4AF92ACD3141D96C(): void;
/**
 * Hash: 0x54E22EA2C1956A8D | ApiSet: undefined
 */
export declare function _0x54E22EA2C1956A8D(p0: number): void;
/**
 * Hash: 0x46D1A61A21F566FC | ApiSet: undefined
 */
export declare function _0x46D1A61A21F566FC(p0: number): void;
/**
 * Hash: 0x5DBF05DB5926D089 | ApiSet: undefined
 */
export declare function _0x5DBF05DB5926D089(p0: any): void;
/**
 * Hash: 0x5DEBD9C4DC995692 | ApiSet: undefined
 */
export declare function _0x5DEBD9C4DC995692(): void;
/**
 * ```
 * DISABLE_*
 * ```
 * Hash: 0x5F6DF3D92271E8A1 | ApiSet: undefined
 */
export declare function _0x5F6DF3D92271E8A1(toggle: boolean): void;
/**
 * Hash: 0x649C97D52332341A | ApiSet: undefined
 */
export declare function _0x649C97D52332341A(p0: any): void;
/**
 * ```
 * Unknown. Called after creating a checkpoint (type: 51) in the creators.
 * ```
 * Hash: 0x615D3925E87A3B26 | ApiSet: undefined
 */
export declare function _0x615D3925E87A3B26(checkpoint: number): void;
/**
 * ```
 * SET_F*
 * ```
 * Hash: 0x6A51F78772175A51 | ApiSet: undefined
 */
export declare function _0x6A51F78772175A51(toggle: boolean): void;
/**
 * ```
 * UI3DSCENE_*
 * ```
 * Hash: 0x7A42B2E236E71415 | ApiSet: undefined
 */
export declare function _0x7A42B2E236E71415(): void;
/**
 * Hash: 0x7AC24EAB6D74118D | ApiSet: undefined
 */
export declare function _0x7AC24EAB6D74118D(p0: boolean): boolean;
/**
 * Hash: 0x759650634F07B6B4 | ApiSet: undefined
 */
export declare function _0x759650634F07B6B4(p0: number): boolean;
/**
 * Hash: 0x814AF7DCAACC597B | ApiSet: undefined
 */
export declare function _0x814AF7DCAACC597B(p0: any): void;
/**
 * Hash: 0x82ACC484FFA3B05F | ApiSet: undefined
 */
export declare function _0x82ACC484FFA3B05F(p0: any): any;
/**
 * Hash: 0x7FA5D82B8F58EC06 | ApiSet: undefined
 */
export declare function _0x7FA5D82B8F58EC06(): boolean;
/**
 * ```
 * Used only once in the scripts (taxi_clowncar)
 * SET_PARTICLE_FX_*
 * ```
 * Hash: 0x8CDE909A0370BB3A | ApiSet: undefined
 */
export declare function _0x8CDE909A0370BB3A(toggle: boolean): void;
/**
 * Hash: 0x851CD923176EBA7C | ApiSet: undefined
 */
export declare function _0x851CD923176EBA7C(): void;
/**
 * ```
 * REQUEST_*
 * ```
 * Hash: 0x98EDF76A7271E4F2 | ApiSet: undefined
 */
export declare function _0x98EDF76A7271E4F2(): void;
/**
 * Hash: 0x9641588DAB93B4B5 | ApiSet: undefined
 */
export declare function _0x9641588DAB93B4B5(p0: any): void;
/**
 * Hash: 0x949F397A288B28B3 | ApiSet: undefined
 */
export declare function _0x949F397A288B28B3(p0: number): void;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x908311265D42A820 | ApiSet: undefined
 */
export declare function _0x908311265D42A820(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xAAE9BE70EC7C69AB | ApiSet: undefined
 */
export declare function _0xAAE9BE70EC7C69AB(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
/**
 * ```
 * FORCE_*
 * ```
 * Hash: 0x9B079E5221D984D3 | ApiSet: undefined
 */
export declare function _0x9B079E5221D984D3(p0: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x98D18905BF723B99 | ApiSet: undefined
 */
export declare function _0x98D18905BF723B99(): any;
/**
 * Hash: 0xB2EBE8CBC58B90E9 | ApiSet: undefined
 */
export declare function _0xB2EBE8CBC58B90E9(): any;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xADD6627C4D325458 | ApiSet: undefined
 */
export declare function _0xADD6627C4D325458(p0: any): void;
/**
 * Hash: 0xA46B73FAA3460AE1 | ApiSet: undefined
 */
export declare function _0xA46B73FAA3460AE1(p0: boolean): void;
/**
 * ```
 * Setter for 0xE59343E9E96529E7
 * SET_M*
 * ```
 * Hash: 0xB3C641F3630BF6DA | ApiSet: undefined
 */
export declare function _0xB3C641F3630BF6DA(p0: number): void;
/**
 * Hash: 0xBA0127DA25FD54C9 | ApiSet: undefined
 */
export declare function _0xBA0127DA25FD54C9(p0: any, p1: any): void;
/**
 * Hash: 0xAE51BC858F32BA66 | ApiSet: undefined
 */
export declare function _0xAE51BC858F32BA66(p0: any, p1: number, p2: number, p3: number, p4: number): void;
/**
 * ```
 * This function is hard-coded to always return 0.
 * ```
 * Hash: 0xBE197EAA669238F4 | ApiSet: undefined
 */
export declare function _0xBE197EAA669238F4(p0: any, p1: any, p2: any, p3: any): any;
/**
 * Hash: 0xB569F41F3E7E83A4 | ApiSet: undefined
 */
export declare function _0xB569F41F3E7E83A4(p0: any): void;
/**
 * Hash: 0xBCEDB009461DA156 | ApiSet: undefined
 */
export declare function _0xBCEDB009461DA156(): any;
/**
 * Hash: 0xBB90E12CAC1DAB25 | ApiSet: undefined
 */
export declare function _0xBB90E12CAC1DAB25(p0: number): void;
/**
 * Hash: 0xC5C8F970D4EDFF71 | ApiSet: undefined
 */
export declare function _0xC5C8F970D4EDFF71(p0: any): void;
/**
 * ```
 * SET_PARTICLE_FX_*
 * ```
 * Hash: 0xBA3D194057C79A7B | ApiSet: undefined
 */
export declare function _0xBA3D194057C79A7B(p0: string): void;
/**
 * Hash: 0xCA465D9CC0D231BA | ApiSet: undefined
 */
export declare function _0xCA465D9CC0D231BA(p0: any): void;
/**
 * ```
 * GOLF_TRAIL_SET_*
 * ```
 * Hash: 0xC0416B061F2B7E5E | ApiSet: undefined
 */
export declare function _0xC0416B061F2B7E5E(p0: boolean): void;
/**
 * Hash: 0xC35A6D07C93802B2 | ApiSet: undefined
 */
export declare function _0xC35A6D07C93802B2(): void;
/**
 * ```
 * SET_TV_???
 * ```
 * Hash: 0xD1C55B110E4DF534 | ApiSet: undefined
 */
export declare function _0xD1C55B110E4DF534(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0xCFD16F0DB5A3535C | ApiSet: undefined
 */
export declare function _0xCFD16F0DB5A3535C(toggle: boolean): void;
/**
 * Hash: 0xCB82A0BF0E3E3265 | ApiSet: undefined
 */
export declare function _0xCB82A0BF0E3E3265(p0: number): number;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * This native is used for the "larger" circular checkpoints, and sets the circle/ring around the checkpoint to point in the same direction as the inner arrow
 * Hash: 0xDB1EA9411C8911EC | ApiSet: undefined
 */
export declare function _0xDB1EA9411C8911EC(checkpointHandle: number): void;
/**
 * Hash: 0xCA4AE345A153D573 | ApiSet: undefined
 */
export declare function _0xCA4AE345A153D573(p0: boolean): void;
/**
 * Hash: 0xE2892E7E55D7073A | ApiSet: undefined
 */
export declare function _0xE2892E7E55D7073A(p0: number): void;
/**
 * ```
 * Getter for 0xB3C641F3630BF6DA
 * GET_M*
 * ```
 * Hash: 0xE59343E9E96529E7 | ApiSet: undefined
 */
export declare function _0xE59343E9E96529E7(): number;
/**
 * ```
 * TOGGLE_*
 * ```
 * Hash: 0xE63D7C6EECECB66B | ApiSet: undefined
 */
export declare function _0xE63D7C6EECECB66B(toggle: boolean): void;
/**
 * ```
 * This function is hard-coded to always return 0.
 * ```
 * Hash: 0xE791DF1F73ED2C8B | ApiSet: undefined
 */
export declare function _0xE791DF1F73ED2C8B(p0: any): any;
/**
 * ```
 * This function is hard-coded to always return 0.
 * ```
 * Hash: 0xEC72C258667BE5EA | ApiSet: undefined
 */
export declare function _0xEC72C258667BE5EA(p0: any): any;
/**
 * Hash: 0xEF398BEEE4EF45F9 | ApiSet: undefined
 */
export declare function _0xEF398BEEE4EF45F9(p0: boolean): void;
/**
 * Hash: 0xF78B803082D4386F | ApiSet: undefined
 */
export declare function _0xF78B803082D4386F(p0: number): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xF3F776ADA161E47D | ApiSet: undefined
 */
export declare function _0xF3F776ADA161E47D(p0: any, p1: any): void;
/**
 * ```
 * AD*
 * ```
 * Hash: 0xEFABC7722293DA7C | ApiSet: undefined
 */
export declare function _0xEFABC7722293DA7C(): void;
/**
 * Hash: 0xF51D36185993515D | ApiSet: undefined
 */
export declare function _0xF51D36185993515D(checkpoint: number, posX: number, posY: number, posZ: number, unkX: number, unkY: number, unkZ: number): void;
/**
 * Hash: 0xEFB55E7C25D3B3BE | ApiSet: undefined
 */
export declare function overrideInteriorSmokeEnd(): void;
/**
 * SET_CHECKPOINT_\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xFCF6788FC4860CD4 | ApiSet: undefined
 */
export declare function _0xFCF6788FC4860CD4(checkpoint: number): void;
/**
 * Hash: 0x2A2A52824DB96700 | ApiSet: undefined
 */
export declare function overrideInteriorSmokeName(name: string): void;
/**
 * Hash: 0x1600FD8CF72EBC12 | ApiSet: undefined
 */
export declare function overrideInteriorSmokeLevel(level: number): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x70D2CC8A542A973C | ApiSet: undefined
 */
export declare function playBinkMovie(binkMovie: number): void;
/**
 * Passes keyboard input to scaleform. You must call this native every frame. Once an input occurs, this native will return true and call `SET_PC_KEY` scaleform movie method with the key that has been inputted.
 * The key parameter which is passed to the scaleform can also be: "BACKSPACE", "ENTER" or "\x1b" (Which is ESC).
 * This native is only used in `web_browser.c` as of game build 2944.
 * Hash: 0xD1C7CB175E012964 | ApiSet: undefined
 */
export declare function passKeyboardInputToScaleform(scaleformHandle: number): boolean;
/**
 * ```
 * REQUEST_STREAMED_TEXTURE_DICT("MPOnMissMarkers", false);
 * *uParam0.f_809 = add_decal(9120, vParam1, vVar4, vVar7, 2f, 2f, to_float(iVar0) / 255f, to_float(iVar1) / 255f, to_float(iVar2) / 255f, 1f, -1f, 1, 0, 0);
 * PATCH_DECAL_DIFFUSE_MAP(9120, "MPOnMissMarkers", "Capture_The_Flag_Base_Icon");
 * ```
 * Hash: 0x8A35C742130C6080 | ApiSet: undefined
 */
export declare function patchDecalDiffuseMap(decalType: number, textureDict: string, textureName: string): void;
/**
 * ```
 * Overriding ped badge texture to a passed texture. It's synced between players (even custom textures!), don't forget to request used dict on *all* clients to make it sync properly. Can be removed by passing empty strings.
 * ```
 * Hash: 0x95EB5E34F821BABE | ApiSet: undefined
 */
export declare function overridePedBadgeTexture(ped: number | Ped, txd: string, txn: string): boolean;
/**
 * Hash: 0x58F735290861E6B4 | ApiSet: undefined
 */
export declare function pushTimecycleModifier(): void;
/**
 * ```
 * Only one match in the scripts:
 * `GRAPHICS::PRESET_INTERIOR_AMBIENT_CACHE("int_carrier_hanger");`
 * ```
 * Hash: 0xD7021272EB0A451E | ApiSet: undefined
 */
export declare function presetInteriorAmbientCache(timecycleModifierName: string): void;
/**
 * Hash: 0x3C8938D7D872211E | ApiSet: undefined
 */
export declare function popTimecycleModifier(): void;
/**
 * Queues a scan of all gallery photos.
 * Also see [`GET_STATUS_OF_SORTED_LIST_OPERATION`](#\_0xF5BED327CEA362B1)
 * Hash: 0x2A893980E96B659A | ApiSet: undefined
 */
export declare function queueOperationToCreateSortedListOfPhotos(scanForSaving: boolean): boolean;
/**
 * Hash: 0x9B6E70C5CEEF4EEB | ApiSet: undefined
 */
export declare function queryMovieMeshSetState(p0: any): any;
/**
 * Used with 'NG_filmnoir_BW{01,02}' timecycles and the "NOIR_FILTER_SOUNDS" audioref.
 * Hash: 0xA44FF770DFBC5DAE | ApiSet: undefined
 */
export declare function registerNoirScreenEffectThisFrame(): void;
/**
 * Hash: 0xED3F346429CCD659 | ApiSet: undefined
 */
export declare function removeDecal(decal: number): void;
/**
 * Hash: 0xA6F6F70FDC6D144C | ApiSet: undefined
 */
export declare function removeDecalsFromObjectFacing(obj: any, position: Vector3): void;
/**
 * Hash: 0xEB119AA014E89183 | ApiSet: undefined
 */
export declare function releaseMovieMeshSet(movieMeshSet: number): void;
/**
 * Hash: 0xC401503DFE8D53CF | ApiSet: undefined
 */
export declare function removeParticleFx(ptfxHandle: number, p1: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x04D950EEFA4EED8C | ApiSet: undefined
 */
export declare function releaseBinkMovie(binkMovie: number): void;
/**
 * Hash: 0xDD19FA1C6D657305 | ApiSet: undefined
 */
export declare function removeParticleFxInRange(position: Vector3, radius: number): void;
/**
 * Hash: 0xCCF71CBDDF5B6CB9 | ApiSet: undefined
 */
export declare function removeDecalsFromObject(obj: any): void;
/**
 * Hash: 0xE91F1B65F2B48D57 | ApiSet: undefined
 */
export declare function removeDecalsFromVehicle(vehicle: number | Vehicle): void;
/**
 * Hash: 0xF44A5456AC3F4F97 | ApiSet: undefined
 */
export declare function removeScaleformScriptHudMovie(hudComponent: number): void;
/**
 * Hash: 0xD2300034310557E4 | ApiSet: undefined
 */
export declare function removeVehicleCrewEmblem(vehicle: number | Vehicle, p1: number): void;
/**
 * Hash: 0xB8FEAEEBCC127425 | ApiSet: undefined
 */
export declare function removeParticleFxFromEntity(entity: number | Entity): void;
/**
 * ```
 * Removes all decals in range from a position, it includes the bullet holes, blood pools, petrol...
 * ```
 * Hash: 0x5D6B2D4830A67C62 | ApiSet: undefined
 */
export declare function removeDecalsInRange(position: Vector3, range: number): void;
/**
 * Requests a scaleform movie, which has no widescreen adjustments while rendering (Useful for when your scaleform doesn't fully draw on the screen and borders are visible).
 * Hash: 0x65E7E78842E74CDB | ApiSet: undefined
 */
export declare function requestScaleformMovieWithIgnoreSuperWidescreen(scaleformName: string): number;
/**
 * Hash: 0x11FE353CF9733E6F | ApiSet: undefined
 */
export declare function requestScaleformMovie(scaleformName: string): number;
/**
 * Hash: 0x15E33297C3E8DC60 | ApiSet: undefined
 */
export declare function removeTcmodifierOverride(p0: string): void;
/**
 * Same as [REQUEST_SCALEFORM_MOVIE](#\_0x11FE353CF9733E6F), except it seems to fix stretched scaleforms on ultrawide.
 * Hash: 0xC514489CFB8AF806 | ApiSet: undefined
 */
export declare function requestScaleformMovieInstance(scaleformName: string): number;
/**
 * Hash: 0x9304881D6F6537EA | ApiSet: undefined
 */
export declare function requestScaleformScriptHudMovie(hudComponent: number): void;
/**
 * Requests a scaleform movie that doesn't render when the game is paused (With [`SET_GAME_PAUSED`](#\_0x577D1284D6873711)).
 * Hash: 0xBD06C611BB9048C2 | ApiSet: undefined
 */
export declare function requestScaleformMovieSkipRenderWhilePaused(scaleformName: string): number;
/**
 * Resets AnimPostFX adaptation.
 * Hash: 0xE3E2C1B4C59DBC77 | ApiSet: undefined
 */
export declare function resetAdaptation(numFrames: number): void;
/**
 * Hash: 0xE1C8709406F2C41C | ApiSet: undefined
 */
export declare function resetPausedRenderphases(): void;
/**
 * Hash: 0x3DEC726C25A11BAC | ApiSet: undefined
 */
export declare function saveHighQualityPhoto(unused: number): boolean;
/**
 * ```
 * Resets the effect of SET_PARTICLE_FX_OVERRIDE
 * ```
 * Hash: 0x89C8553DD3274AAE | ApiSet: undefined
 */
export declare function resetParticleFxOverride(name: string): void;
/**
 * ```
 * This function can requests texture dictonaries from following RPFs:
 * scaleform_generic.rpf
 * scaleform_minigames.rpf
 * scaleform_minimap.rpf
 * scaleform_web.rpf
 * last param isnt a toggle
 * ```
 * Hash: 0xDFA2EF8E04127DD5 | ApiSet: undefined
 */
export declare function requestStreamedTextureDict(textureDict: string, p1: boolean): void;
/**
 * This function resets the alignment set using `SET_SCRIPT_GFX_ALIGN` and `SET_SCRIPT_GFX_ALIGN_PARAMS` to the default
 * values ('I', 'I'; 0, 0, 0, 0). This should be used after having used the aforementioned functions in order to not affect
 * any other scripts attempting to draw.
 * Hash: 0xE3A3DB414A373DAB | ApiSet: undefined
 */
export declare function resetScriptGfxAlign(): void;
/**
 * ```
 * Pushes an integer for the Scaleform function onto the stack.
 * ```
 * Hash: 0xC3D0841A0CC546A6 | ApiSet: undefined
 */
export declare function scaleformMovieMethodAddParamInt(value: number): void;
/**
 * ```
 * Pushes a float for the Scaleform function onto the stack.
 * ```
 * Hash: 0xD69736AAE04DB51A | ApiSet: undefined
 */
export declare function scaleformMovieMethodAddParamFloat(value: number): void;
/**
 * Hash: 0x40AFB081F8ADD4EE | ApiSet: undefined
 */
export declare function returnTwo(p0: number): number;
/**
 * ```
 * Pushes a boolean for the Scaleform function onto the stack.
 * ```
 * Hash: 0xC58424BA936EB458 | ApiSet: undefined
 */
export declare function scaleformMovieMethodAddParamBool(value: boolean): void;
/**
 * Adds a literal string to a scaleform movie method.
 * There doesn't seem to be any difference between this and other `SCALEFORM_MOVIE_METHOD_ADD_PARAM_*_STRING` natives in game code.
 * Hash: 0x77FE3402004CD1B0 | ApiSet: undefined
 */
export declare function scaleformMovieMethodAddParamLiteralString(string: string): void;
/**
 * Values:
 * 0 - Dialogue Brief
 * 1 - Help Text Brief
 * 2 - Mission Objective Brief
 * Hash: 0xEC52C631A1831C03 | ApiSet: undefined
 */
export declare function scaleformMovieMethodAddParamLatestBriefString(value: number): void;
/**
 * Hash: 0xBA7148484BD90365 | ApiSet: undefined
 */
export declare function scaleformMovieMethodAddParamTextureNameString(string: string): void;
/**
 * ```
 * This method is the equivalent to PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_STRING when using it to add a new button (like "INSTRUCTIONAL_BUTTONS").
 * When switching with a controller, the icons update and become the controller's icons.
 * ```
 * Hash: 0xE83A3E3557A56640 | ApiSet: undefined
 */
export declare function scaleformMovieMethodAddParamPlayerNameString(string: string): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x43DBAE39626CE83F | ApiSet: undefined
 */
export declare function seethroughGetMaxThickness(): number;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x70A64C0234EF522C | ApiSet: undefined
 */
export declare function seethroughReset(): void;
/**
 * Hash: 0x9D75795B9DC6EBBF | ApiSet: undefined
 */
export declare function seethroughSetFadeEndDistance(distance: number): void;
/**
 * Hash: 0x1086127B3A63505E | ApiSet: undefined
 */
export declare function seethroughSetColorNear(red: number, green: number, blue: number): void;
/**
 * Hash: 0xA78DE25577300BA1 | ApiSet: undefined
 */
export declare function seethroughSetFadeStartDistance(distance: number): void;
/**
 * Hash: 0x1636D7FC127B10D2 | ApiSet: undefined
 */
export declare function seethroughSetHiLightNoise(noise: number): void;
/**
 * Hash: 0xD7D0B00177485411 | ApiSet: undefined
 */
export declare function seethroughSetHeatscale(index: number, heatScale: number): void;
/**
 * Hash: 0x19E50EB6E33E1D28 | ApiSet: undefined
 */
export declare function seethroughSetHiLightIntensity(intensity: number): void;
/**
 * Hash: 0xFEBFBFDFB66039DE | ApiSet: undefined
 */
export declare function seethroughSetNoiseAmountMax(amount: number): void;
/**
 * Hash: 0x0C8FAC83902A62DF | ApiSet: undefined
 */
export declare function seethroughSetMaxThickness(thickness: number): void;
/**
 * If "blackout" is enabled, this native allows you to ignore "blackout" for vehicles.
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0xE2B187C0939B3D32 | ApiSet: undefined
 */
export declare function setArtificialLightsStateAffectsVehicles(toggle: boolean): void;
/**
 * Hash: 0xFF5992E1C9E65D05 | ApiSet: undefined
 */
export declare function seethroughSetNoiseAmountMin(amount: number): void;
/**
 * Does not affect weapons, particles, fire/explosions, flashlights or the sun.
 * When set to true, all emissive textures (including ped components that have light effects), street lights, building lights, vehicle lights, etc will all be turned off.
 * Used in Humane Labs Heist for EMP.
 * Hash: 0x1268615ACE24D504 | ApiSet: undefined
 */
export declare function setArtificialLightsState(state: boolean): void;
/**
 * Creates an integer (usually 1) for a BINK movie to be called with other natives.
 * [List of all BINK movies (alphabetically ordered) as of b2802](https://gist.github.com/ItsJunction/8046f28c29ea8ff2821e9e4f933f595f)
 * Hash: 0x338D9F609FD632DB | ApiSet: undefined
 */
export declare function setBinkMovie(name: string): number;
/**
 * Seeks a BINK movie to a specified position.
 * Hash: 0x0CB6B3446855B57A | ApiSet: undefined
 */
export declare function setBinkMovieTime(binkMovie: number, progress: number): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x6805D58CAA427B72 | ApiSet: undefined
 */
export declare function setBinkShouldSkip(binkMovie: number, shouldSkip: boolean): void;
/**
 * ```
 * `binkMovie: Is return value from _SET_BINK_MOVIE. Has something to do with bink volume? (audRequestedSettings::SetVolumeCurveScale)`
 * ```
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xAFF33B1178172223 | ApiSet: undefined
 */
export declare function setBinkMovieVolume(binkMovie: number, value: number): void;
/**
 * ```
 * Sets the cylinder height of the checkpoint.
 * Parameters:
 * * nearHeight - The height of the checkpoint when inside of the radius.
 * * farHeight - The height of the checkpoint when outside of the radius.
 * * radius - The radius of the checkpoint.
 * ```
 * Hash: 0x2707AAE9D9297D89 | ApiSet: undefined
 */
export declare function setCheckpointCylinderHeight(checkpoint: number, nearHeight: number, farHeight: number, radius: number): void;
/**
 * Hash: 0x23BA6B0C2AD7B0D3 | ApiSet: undefined
 */
export declare function setBackfaceculling(toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0xF816F2933752322D | ApiSet: undefined
 */
export declare function setBinkMovieUnk2(binkMovie: number, p1: boolean): void;
/**
 * This multiplies the height of the icon inside a checkpoint with the default height of about 2 units above the checkpoint's coordinates.
 * Hash: 0x4B5B4DA5D79F1943 | ApiSet: undefined
 */
export declare function setCheckpointIconHeight(checkpoint: number, height_multiplier: number): void;
/**
 * Hash: 0x44621483FF966526 | ApiSet: undefined
 */
export declare function setCheckpointIconScale(checkpoint: number, scale: number): void;
/**
 * ```
 * Sets the checkpoint color.
 * ```
 * Hash: 0x7167371E8AD747F7 | ApiSet: undefined
 */
export declare function setCheckpointRgba(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * Prevents gas / petrol decals (aka gas / petrol trails and puddles) to be ignited on fire during the frame in which the native is called.
 * **Note**: This native needs to be called every frame to prevent ignition.
 * Hash: 0xD9454B5752C857DC | ApiSet: undefined
 */
export declare function setDisablePetrolDecalsIgnitingThisFrame(): void;
/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.
 * ```
 * Hash: 0x175B6BFC15CDD0C5 | ApiSet: undefined
 */
export declare function setDebugLinesAndSpheresDrawingActive(enabled: boolean): void;
/**
 * ```
 * Sets the checkpoint icon color.
 * ```
 * Hash: 0xB9EA40907C680580 | ApiSet: undefined
 */
export declare function setCheckpointRgba2(checkpoint: number, red: number, green: number, blue: number, alpha: number): void;
/**
 * Hash: 0xBBF327DED94E4DEB | ApiSet: undefined
 */
export declare function setCurrentPlayerTcmodifier(modifierName: string): void;
/**
 * Sets the on-screen drawing origin for draw-functions in world coordinates.
 * The effect can be reset by calling [`CLEAR_DRAW_ORIGIN`](#\_0xFF0B610F6BE0D7AF) and is limited to 32 different origins each frame.
 * Hash: 0xAA0008F3BBB8F416 | ApiSet: undefined
 */
export declare function setDrawOrigin(position: Vector3, p3: any): void;
/**
 * Hash: 0x4B5CFC83122DF602 | ApiSet: undefined
 */
export declare function setDisableDecalRenderingThisFrame(): void;
/**
 * Hash: 0xE0E8BEECCA96BA31 | ApiSet: undefined
 */
export declare function setEntityIconVisibility(entity: number | Entity, toggle: boolean): void;
/**
 * Hash: 0x1D5F595CCAE2E238 | ApiSet: undefined
 */
export declare function setEntityIconColor(entity: number | Entity, red: number, green: number, blue: number, alpha: number): void;
/**
 * ```
 * Purpose of p0 and p1 unknown.
 * ```
 * Hash: 0x0AB84296FED9CFC6 | ApiSet: undefined
 */
export declare function setFlash(p0: number, p1: number, fadeIn: number, duration: number, fadeOut: number): void;
/**
 * Hash: 0x5096FD9CCB49056D | ApiSet: undefined
 */
export declare function setExtraTimecycleModifier(modifierName: string): void;
/**
 * ```
 * Forces footstep tracks on all surfaces.
 * USE_/USING_*
 * ```
 * Hash: 0xAEEDAD1420C65CC0 | ApiSet: undefined
 */
export declare function setForcePedFootstepsTracks(toggle: boolean): void;
/**
 * ```
 * Forces vehicle trails on all surfaces.
 * USE_/USING_*
 * ```
 * Hash: 0x4CC7F0FEA5283FE0 | ApiSet: undefined
 */
export declare function setForceVehicleTrails(toggle: boolean): void;
/**
 * Hash: 0xBF59707B3E5ED531 | ApiSet: undefined
 */
export declare function setNextPlayerTcmodifier(modifierName: string): void;
/**
 * Hash: 0xBA3D65906822BED5 | ApiSet: undefined
 */
export declare function setHidofOverride(p0: boolean, p1: boolean, nearplaneOut: number, nearplaneIn: number, farplaneOut: number, farplaneIn: number): void;
/**
 * Hash: 0xE787BF1C5CF823C9 | ApiSet: undefined
 */
export declare function setNoiseoveride(toggle: boolean): void;
/**
 * ```
 * Enables Night Vision.
 * Example:
 * C#: Function.Call(Hash.SET_NIGHTVISION, true);
 * `C++: GRAPHICS::SET_NIGHTVISION(true);`
 * BOOL toggle:
 * true = turns night vision on for your player.
 * false = turns night vision off for your player.
 * ```
 * Hash: 0x18F621F7A5B1F85D | ApiSet: undefined
 */
export declare function setNightvision(toggle: boolean): void;
/**
 * Hash: 0x27E32866E9A5C416 | ApiSet: undefined
 */
export declare function setParticleFxBulletImpactScale(scale: number): void;
/**
 * Hash: 0xACEE6F360FC1F6B6 | ApiSet: undefined
 */
export declare function setParticleFxCamInsideNonplayerVehicle(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0xCB6A7C3BB17A0C67 | ApiSet: undefined
 */
export declare function setNoisinessoveride(value: number): void;
/**
 * Hash: 0xEEC4047028426510 | ApiSet: undefined
 */
export declare function setParticleFxCamInsideVehicle(p0: boolean): void;
/**
 * Hash: 0x726845132380142E | ApiSet: undefined
 */
export declare function setParticleFxLoopedAlpha(ptfxHandle: number, alpha: number): void;
/**
 * Hash: 0x5F0C4B5B1C393BE2 | ApiSet: undefined
 */
export declare function setParticleFxLoopedEvolution(ptfxHandle: number, propertyName: string, amount: number, noNetwork: boolean): void;
/**
 * Sets the colour tint of a previously started looped particle effect
 * You can use the [inverse lerp](https://www.gamedev.net/articles/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/) method to normalize in a range from 0.0 to 1.0 an rgb
 * Hash: 0x7F8F65877F88783B | ApiSet: undefined
 */
export declare function setParticleFxLoopedColour(ptfxHandle: number, r: number, g: number, b: number, bLocalOnly: boolean): void;
/**
 * Hash: 0xDCB194B85EF7B541 | ApiSet: undefined
 */
export declare function setParticleFxLoopedFarClipDist(ptfxHandle: number, range: number): void;
/**
 * ```
 * Usage example for C#:
 * Function.Call(Hash.SET_PARTICLE_FX_NON_LOOPED_ALPHA, new InputArgument[] { 0.1f });
 * Note: the argument alpha ranges from 0.0f-1.0f !
 * ```
 * Hash: 0x77168D722C58B2FC | ApiSet: undefined
 */
export declare function setParticleFxNonLoopedAlpha(alpha: number): void;
/**
 * Hash: 0xB44250AAA456492D | ApiSet: undefined
 */
export declare function setParticleFxLoopedScale(ptfxHandle: number, scale: number): void;
/**
 * Hash: 0xEA1E2D93F6F75ED9 | ApiSet: undefined
 */
export declare function setParticleFxOverride(oldAsset: string, newAsset: string): void;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x1E2E01C00837D26E | ApiSet: undefined
 */
export declare function setParticleFxNonLoopedEmitterScale(p0: number, p1: number, scale: number): void;
/**
 * Hash: 0x6D8EB211944DCE08 | ApiSet: undefined
 */
export declare function setScaleformMovieToUseSystemTime(scaleform: number, toggle: boolean): void;
/**
 * Hash: 0xF7DDEBEC43483C43 | ApiSet: undefined
 */
export declare function setParticleFxLoopedOffsets(ptfxHandle: number, position: Vector3, rotX: number, rotY: number, rotZ: number): void;
/**
 * Only works on some fx's, while on others it might SEEM to work "properly", but the colors can be "strange" or even completly different from what you've expected. Reason for this is that those fx's might already have colors "baked into them" which then start to act as a "mixing palette", resulting in a different color than expected. A hypothetical example of this would be if the fx itself is already full (bright) red (RGB: 1.0, 0.0, 0.0) and you then set the color to (bright) green (RGB: 0.0, 1.0, 0.0), that it MIGHT result in Yellow (RGB: 1.0, 1.0, 0.0).
 * This doc previously stated that the set color is **NOT** networked, however it does actually turns out to be networked. Tested with all fireworks effects and several other FX effects resulted in colored fx effects on all clients when used in combination with [START_NETWORKED_PARTICLE_FX_NON_LOOPED_AT_COORD](#\_0xF56B8137DF10135D).
 * This might however not be the case for all types of particle fx's, so it's recommended to test this thoroughly with multiple clients before releasing your script for example.
 * Hash: 0x26143A59EF48B262 | ApiSet: undefined
 */
export declare function setParticleFxNonLoopedColour(r: number, g: number, b: number): void;
/**
 * Hash: 0x96EF97DAEB89BEF5 | ApiSet: undefined
 */
export declare function setParticleFxShootoutBoat(p0: any): void;
/**
 * This function anchors script draws to a side of the safe zone. This needs to be called to make the interface
 * independent of the player's safe zone configuration.
 * These values are equivalent to `alignX` and `alignY` in `common:/data/ui/frontend.xml`, which can be used as a baseline
 * for default alignment.
 * Valid values for `horizontalAlign`, from original documentation:
 * *   **C (67)** - Center: DRAW_TEXT starts in the middle of the screen, while DRAW_RECT starts on the right; both move with
 * the right side of the screen.
 * *   **L (76)** - Left: Anchors to the left side, DRAW_RECT starts on the left side of the screen, same as DRAW_TEXT when
 * centered.
 * *   **R (82)** - Right: DRAW_TEXT starts on the left side (normal 0,0), while DRAW_RECT starts some short distance away
 * from the right side of the screen, both move with the right side of the screen.
 * Valid values for `verticalAlign`, from original documentation:
 * *   **B (66)** - Bottom: DRAW_RECT starts about as far as the middle of the map from the bottom, while DRAW_TEXT is about
 * rather centered.
 * *   **C (67)** - Center: It starts at a certain distance from the bottom, but the distance is fixed, the distance is
 * different from 66.
 * *   **T (84)** - Top: Anchors to the top, DRAW_RECT starts on the top of the screen, DRAW_TEXT just below it.
 * Using any other value (including 0) will result in the safe zone not being taken into account for this draw. The
 * canonical value for this is 'I' (73).
 * For example, you can use `SET_SCRIPT_GFX_ALIGN(0, 84)` to only scale on the Y axis (to the top), but not change the X
 * axis.
 * To reset the value, use `RESET_SCRIPT_GFX_ALIGN`.
 * Hash: 0xB8A850F20A067EB6 | ApiSet: undefined
 */
export declare function setScriptGfxAlign(horizontalAlign: number, verticalAlign: number): void;
/**
 * Hash: 0x1D132D614DD86811 | ApiSet: undefined
 */
export declare function setScaleformMovieAsNoLongerNeeded(scaleformHandle: number): void;
/**
 * Hash: 0xBDEB86F4D5809204 | ApiSet: undefined
 */
export declare function setPlayerTcmodifierTransition(value: number): void;
/**
 * ```
 * NativeDB Introduced: v573
 * ```
 * Configures a Scaleform movie to render to a large render target (1280x720), which is useful for ensuring higher quality and clarity in certain display scenarios. Such as displaying the name of an organization (CEO Office) in a visually impactful way for example.
 * Hash: 0x32F34FF7F617643B | ApiSet: undefined
 */
export declare function setScaleformMovieToUseLargeRt(scaleformMovieId: number, useLargeRT: boolean): void;
/**
 * Sets the draw offset/calculated size for `SET_SCRIPT_GFX_ALIGN`. If using any alignment other than left/top, the game
 * expects the width/height to be configured using this native in order to get a proper starting position for the draw
 * command.
 * Hash: 0xF5A2C681787E579D | ApiSet: undefined
 */
export declare function setScriptGfxAlignParams(x: number, y: number, w: number, h: number): void;
/**
 * Adjusts a scaleform movie's dimensions to fit a large rendertarget. Mostly used in casino scripts.
 * Hash: 0xE6A9F00D4240B519 | ApiSet: undefined
 */
export declare function setScaleformMovieToUseSuperLargeRt(scaleformHandle: number, toggle: boolean): void;
/**
 * Sets a flag defining whether or not script draw commands should continue being drawn behind the pause menu. This is usually used for TV channels and other draw commands that are used with a world render target.
 * Hash: 0xC6372ECD45D73BCD | ApiSet: undefined
 */
export declare function setScriptGfxDrawBehindPausemenu(flag: boolean): void;
/**
 * ```
 * Toggles Heatvision on/off.
 * ```
 * Hash: 0x7E08924259E08CE0 | ApiSet: undefined
 */
export declare function setSeethrough(toggle: boolean): void;
/**
 * ```
 * Loads the specified timecycle modifier. Modifiers are defined separately in another file (e.g. "timecycle_mods_1.xml")
 * Parameters:
 * modifierName - The modifier to load (e.g. "V_FIB_IT3", "scanline_cam", etc.)
 * ```
 * Hash: 0x2C933ABF17A1DF41 | ApiSet: undefined
 */
export declare function setTimecycleModifier(modifierName: string): void;
/**
 * Hash: 0x164ECBB3CF750CB0 | ApiSet: undefined
 */
export declare function setTrackedPointInfo(point: number, position: Vector3, radius: number): void;
/**
 * Sets the draw order for script draw commands.
 * Examples from decompiled scripts:
 * `GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(7);`
 * `GRAPHICS::DRAW_RECT(0.5, 0.5, 3.0, 3.0, v\_4, v\_5, v\_6, a\_0.\_f172, 0);`
 * `GRAPHICS::SET_SCRIPT_GFX_DRAW_ORDER(1);`
 * `GRAPHICS::DRAW_RECT(0.5, 0.5, 1.5, 1.5, 0, 0, 0, 255, 0);`
 * ```cpp
 * enum eGfxDrawOrder
 * {
 * GFX_ORDER_BEFORE_HUD_PRIORITY_LOW = 0,
 * GFX_ORDER_BEFORE_HUD = 1,
 * GFX_ORDER_BEFORE_HUD_PRIORITY_HIGH = 2,
 * GFX_ORDER_AFTER_HUD_PRIORITY_LOW = 3,
 * GFX_ORDER_AFTER_HUD = 4,
 * GFX_ORDER_AFTER_HUD_PRIORITY_HIGH = 5,
 * GFX_ORDER_AFTER_FADE_PRIORITY_LOW = 6,
 * GFX_ORDER_AFTER_FADE = 7,
 * GFX_ORDER_AFTER_FADE_PRIORITY_HIGH = 8,
 * }
 * ```
 * Hash: 0x61BB1D9B3A95D802 | ApiSet: undefined
 */
export declare function setScriptGfxDrawOrder(order: number): void;
/**
 * This native doesn't work like [`SetWeatherTypeTransition`](#\_0x578C752848ECFA0C).
 * Hash: 0x3BCF567485E1971C | ApiSet: undefined
 */
export declare function setTransitionTimecycleModifier(modifierName: string, transition: number): void;
/**
 * Hash: 0x82E7FFCD5B2326B3 | ApiSet: undefined
 */
export declare function setTimecycleModifierStrength(strength: number): void;
/**
 * Hash: 0xBE2CACCF5A8AA805 | ApiSet: undefined
 */
export declare function setStreamedTextureDictAsNoLongerNeeded(textureDict: string): void;
/**
 * Hash: 0xBAABBB23EB6E484E | ApiSet: undefined
 */
export declare function setTvChannel(channel: number): void;
/**
 * Loads specified video sequence into the TV Channel
 * TV_Channel ranges from 0-2
 * VideoSequence can be any of the following:
 * "PL_STD_CNT" CNT Standard Channel
 * "PL_STD_WZL" Weazel Standard Channel
 * "PL_LO_CNT"
 * "PL_LO_WZL"
 * "PL_SP_WORKOUT"
 * "PL_SP_INV" - Jay Norris Assassination Mission Fail
 * "PL_SP_INV_EXP" - Jay Norris Assassination Mission Success
 * "PL_LO_RS" - Righteous Slaughter Ad
 * "PL_LO_RS_CUTSCENE" - Righteous Slaughter Cut-scene
 * "PL_SP_PLSH1\_INTRO"
 * "PL_LES1\_FAME_OR_SHAME"
 * "PL_STD_WZL_FOS_EP2"
 * "PL_MP_WEAZEL" - Weazel Logo on loop
 * "PL_MP_CCTV" - Generic CCTV loop
 * Restart:
 * 0=video sequence continues as normal
 * 1=sequence restarts from beginning every time that channel is selected
 * The above playlists work as intended, and are commonly used, but there are many more playlists, as seen in `tvplaylists.xml`. A pastebin below outlines all playlists, they will be surronded by the name tag I.E. (<Name>PL_STD_CNT</Name> = PL_STD_CNT).
 * https://pastebin.com/zUzGB6h7
 * Hash: 0xF7B38B8305F1FE8B | ApiSet: undefined
 */
export declare function setTvChannelPlaylist(tvChannel: number, playlistName: string, restart: boolean): void;
/**
 * Hash: 0x2982BF73F66E9DDC | ApiSet: undefined
 */
export declare function setTvVolume(volume: number): void;
/**
 * ```
 * Probably changes tvs from being a 3d audio to being "global" audio
 * ```
 * Hash: 0x113D2C5DC57E1774 | ApiSet: undefined
 */
export declare function setTvAudioFrontend(toggle: boolean): void;
/**
 * ```
 * network fx
 * ```
 * ```
 * NativeDB Added Parameter 13: Any p12
 * NativeDB Added Parameter 14: Any p13
 * NativeDB Added Parameter 15: Any p14
 * NativeDB Added Parameter 16: Any p15
 * ```
 * Hash: 0x6F60E89A7B64EE1D | ApiSet: undefined
 */
export declare function startNetworkedParticleFxLoopedOnEntity(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
/**
 * NOTE: the [USE_PARTICLE_FX_ASSET](#\_0x6C38AF3693A69A91) needs to be called before EVERY StartNetworkedParticleFxNonLoopedAtCoord(....) call!
 * List with lots of particle effects: https://vespura.com/fivem/particle-list/
 * Note: Not all particles on this list are for non looped and vice versa, neither are all of them suited/meant to have SetParticleFxNonLoopedColour(....) called on them.
 * ```
 * NativeDB Added Parameter 12: BOOL p11
 * ```
 * Hash: 0xF56B8137DF10135D | ApiSet: undefined
 */
export declare function startNetworkedParticleFxNonLoopedAtCoord(effectName: string, xPos: number, yPos: number, zPos: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): boolean;
/**
 * ```
 * network fx
 * ```
 * ```
 * NativeDB Added Parameter 14: Any p13
 * NativeDB Added Parameter 15: Any p14
 * NativeDB Added Parameter 16: Any p15
 * NativeDB Added Parameter 17: Any p16
 * ```
 * Hash: 0xDDE23F30CC5A0F03 | ApiSet: undefined
 */
export declare function startNetworkedParticleFxLoopedOnEntityBone(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
/**
 * Hash: 0x2201C576FACAEBE8 | ApiSet: undefined
 */
export declare function setTvChannelPlaylistAtHour(tvChannel: number, playlistName: string, hour: number): void;
/**
 * Hash: 0xC95EB1DB6E92113D | ApiSet: undefined
 */
export declare function startNetworkedParticleFxNonLoopedOnEntity(effectName: string, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x02B1F2A72E0F5325 | ApiSet: undefined
 */
export declare function startNetworkedParticleFxNonLoopedOnEntityBone(effectName: string, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
/**
 * Hash: 0x1AE42C1660FD6517 | ApiSet: undefined
 */
export declare function startParticleFxLoopedOnEntity(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
/**
 * Hash: 0xA41B6A43642AC2CF | ApiSet: undefined
 */
export declare function startNetworkedParticleFxNonLoopedOnPedBone(effectName: string, ped: number | Ped, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
/**
 * Hash: 0xF28DA9F38CD1787C | ApiSet: undefined
 */
export declare function startParticleFxLoopedOnPedBone(effectName: string, ped: number | Ped, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
/**
 * Hash: 0xC6EB449E33977F0B | ApiSet: undefined
 */
export declare function startParticleFxLoopedOnEntityBone(effectName: string, entity: number | Entity, xOffset: number, yOffset: number, zOffset: number, xRot: number, yRot: number, zRot: number, boneIndex: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
/**
 * ```
 * `GRAPHICS::START_PARTICLE_FX_LOOPED_AT_COORD("scr_fbi_falling_debris", 93.7743f, -749.4572f, 70.86904f, 0f, 0f, 0f, 0x3F800000, 0, 0, 0, 0)`
 * p11 seems to be always 0
 * ```
 * Hash: 0xE184F4F0DC5910E7 | ApiSet: undefined
 */
export declare function startParticleFxLoopedAtCoord(effectName: string, position: Vector3, xRot: number, yRot: number, zRot: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean, p11: boolean): number;
/**
 * ```
 * `GRAPHICS::START_PARTICLE_FX_NON_LOOPED_AT_COORD("scr_paleto_roof_impact", -140.8576f, 6420.789f, 41.1391f, 0f, 0f, 267.3957f, 0x3F800000, 0, 0, 0);`
 * Axis - Invert Axis Flags
 * list: pastebin.com/N9unUFWY
 * -------------------------------------------------------------------
 * C#
 * Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, = you are calling this function.
 * char *effectname = This is an in-game effect name, for e.g. "scr_fbi4_trucks_crash" is used to give the effects when truck crashes etc
 * float x, y, z pos = this one is Simple, you just have to declare, where do you want this effect to take place at, so declare the ordinates
 * float xrot, yrot, zrot = Again simple? just mention the value in case if you want the effect to rotate.
 * float scale = is declare the scale of the effect, this may vary as per the effects for e.g 1.0f
 * bool xaxis, yaxis, zaxis = To bool the axis values.
 * example:
 * Function.Call<int>(Hash.START_PARTICLE_FX_NON_LOOPED_AT_COORD, "scr_fbi4_trucks_crash", GTA.Game.Player.Character.Position.X, GTA.Game.Player.Character.Position.Y, GTA.Game.Player.Character.Position.Z + 4f, 0, 0, 0, 5.5f, 0, 0, 0);
 * ```
 * Hash: 0x25129531F77B9ED3 | ApiSet: undefined
 */
export declare function startParticleFxNonLoopedAtCoord(effectName: string, xPos: number, yPos: number, zPos: number, xRot: number, yRot: number, zRot: number, scale: number, xAxis: boolean, yAxis: boolean, zAxis: boolean): number;
/**
 * ```
 * `GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE("scr_sh_bong_smoke", PLAYER::PLAYER_PED_ID(), -0.025f, 0.13f, 0f, 0f, 0f, 0f, 31086, 0x3F800000, 0, 0, 0);`
 * Axis - Invert Axis Flags
 * list: pastebin.com/N9unUFWY
 * ```
 * Hash: 0x0E7E72961BA18619 | ApiSet: undefined
 */
export declare function startParticleFxNonLoopedOnPedBone(effectName: string, ped: number | Ped, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, boneIndex: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
/**
 * ```
 * Starts a particle effect on an entity for example your player.
 * List: pastebin.com/N9unUFWY
 * Example:
 * C#:
 * Function.Call(Hash.REQUEST_NAMED_PTFX_ASSET, "scr_rcbarry2");                     Function.Call(Hash._SET_PTFX_ASSET_NEXT_CALL, "scr_rcbarry2");                             Function.Call(Hash.START_PARTICLE_FX_NON_LOOPED_ON_ENTITY, "scr_clown_appears", Game.Player.Character, 0.0, 0.0, -0.5, 0.0, 0.0, 0.0, 1.0, false, false, false);
 * `Internally this calls the same function as GRAPHICS::START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE`
 * however it uses -1 for the specified bone index, so it should be possible to start a non looped fx on an entity bone using that native
 * ```
 * Hash: 0x0D53A3B8DA0809D2 | ApiSet: undefined
 */
export declare function startParticleFxNonLoopedOnEntity(effectName: string, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, rotX: number, rotY: number, rotZ: number, scale: number, axisX: boolean, axisY: boolean, axisZ: boolean): boolean;
/**
 * Hash: 0x99AC7F0D8B9C893D | ApiSet: undefined
 */
export declare function startPetrolTrailDecals(p0: number): void;
/**
 * Switches the rendering display to exclude everything except PostFX, resulting in a frozen screen before the UI pass.
 * Hash: 0xDFC252D8A3E15AB7 | ApiSet: undefined
 */
export declare function togglePausedRenderphases(toggle: boolean): void;
/**
 * This native enables/disables the gold putting grid display (https://i.imgur.com/TC6cku6.png).
 * This requires these two natives to be called as well to configure the grid: [`TERRAINGRID_SET_PARAMS`](#\_0x1C4FC5752BCD8E48) and [`TERRAINGRID_SET_COLOURS`](#\_0x5CE62918F8D703C7).
 * Hash: 0xA356990E161C9E65 | ApiSet: undefined
 */
export declare function terraingridActivate(toggle: boolean): void;
/**
 * Hash: 0xA328A24AAA6B7FDC | ApiSet: undefined
 */
export declare function triggerScreenblurFadeIn(transitionTime: number): boolean;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x63606A61DE68898A | ApiSet: undefined
 */
export declare function stopBinkMovie(binkMovie: number): void;
/**
 * ```
 * p1 is always 0 in the native scripts
 * ```
 * Hash: 0x8F75998877616996 | ApiSet: undefined
 */
export declare function stopParticleFxLooped(ptfxHandle: number, p1: boolean): void;
/**
 * Hash: 0xD3A10FC7FD8D98CD | ApiSet: undefined
 */
export declare function ui3dsceneIsAvailable(): boolean;
/**
 * This native is used along with these two natives: [`TERRAINGRID_ACTIVATE`](#\_0xA356990E161C9E65) and [`TERRAINGRID_SET_PARAMS`](#\_0x1C4FC5752BCD8E48).
 * This native sets the colors for the golf putting grid. the 'min...' values are for the lower areas that the grid covers, the 'max...' values are for the higher areas that the grid covers, all remaining values are for the 'normal' ground height.
 * All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
 * Old description:
 * Only called in golf and golf_mp\
 * parameters used are\
 * `GRAPHICS::\_0x5CE62918F8D703C7(255, 0, 0, 64, 255, 255, 255, 5, 255, 255, 0, 64);`
 * Hash: 0x5CE62918F8D703C7 | ApiSet: undefined
 */
export declare function terraingridSetColours(lowR: number, lowG: number, lowB: number, lowAlpha: number, R: number, G: number, B: number, Alpha: number, highR: number, highG: number, highB: number, highAlpha: number): void;
/**
 * This native is used along with these two natives: [`TERRAINGRID_ACTIVATE`](#\_0xA356990E161C9E65) and [`TERRAINGRID_SET_COLOURS`](#\_0x5CE62918F8D703C7).
 * This native configures the location, size, rotation, normal height, and the difference ratio between min, normal and max.
 * All those natives combined they will output something like this: https://i.imgur.com/TC6cku6.png
 * Hash: 0x1C4FC5752BCD8E48 | ApiSet: undefined
 */
export declare function terraingridSetParams(position: Vector3, p3: number, rotation: number, p5: number, width: number, height: number, p8: number, scale: number, glowIntensity: number, normalHeight: number, heightDiff: number): void;
/**
 * Hash: 0xDEADC0DEDEADC0DE | ApiSet: undefined
 */
export declare function updateLightsOnEntity(entity: number | Entity): void;
/**
 * ```
 * `GRAPHICS::UNPATCH_DECAL_DIFFUSE_MAP(9123);`
 * `GRAPHICS::SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED("MPMissMarkers256");`
 * ```
 * Hash: 0xB7ED70C49521A61D | ApiSet: undefined
 */
export declare function unpatchDecalDiffuseMap(decalType: number): void;
/**
 * ```
 * All presets can be found in common\data\ui\uiscenes.meta
 * ```
 * Hash: 0xF1CEA8A4198D8E9A | ApiSet: undefined
 */
export declare function ui3dscenePushPreset(presetName: string): boolean;
/**
 * Hash: 0x5B712761429DBC14 | ApiSet: undefined
 */
export declare function washDecalsFromVehicle(vehicle: number | Vehicle, p1: number): void;
/**
 * Hash: 0xEFACC8AEF94430D5 | ApiSet: undefined
 */
export declare function triggerScreenblurFadeOut(transitionTime: number): boolean;
/**
 * ```
 * From the b678d decompiled scripts:
 * `GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("FM_Mission_Controler");`
 * `GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_apartment_mp");`
 * `GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_indep_fireworks");`
 * `GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_cig_plane");`
 * `GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_mp_creator");`
 * `GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_ornate_heist");`
 * `GRAPHICS::_SET_PTFX_ASSET_NEXT_CALL("scr_prison_break_heist_station");`
 * ```
 * Hash: 0x6C38AF3693A69A91 | ApiSet: undefined
 */
export declare function useParticleFxAsset(name: string): void;
/**
 * Hash: 0x9C30613D50A6ADEF | ApiSet: undefined
 */
export declare function washDecalsInRange(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * ```
 * This one is weird and seems to return a TRUE state regardless of whether the phone is visible on screen or tucked away.
 * I can confirm the above. This function is hard-coded to always return 1.
 * ```
 * Hash: 0xC4E2813898C97A4B | ApiSet: undefined
 */
export declare function canPhoneBeSeenOnScreen(): boolean;
/**
 * Activates the cellphone camera. Make sure you have a mobile phone created with [`CREATE_MOBILE_PHONE`](#\_0xA4E8E696C532FBC7) or else the camera will not work.
 * Hash: 0xFDE8F069C542D126 | ApiSet: undefined
 */
export declare function cellCamActivate(active: boolean, bGoFirstPerson: boolean): void;
/**
 * Toggles the selfie mode on the cellphone camera. Only visible when the cell phone camera is active.
 * Hash: 0x015C49A93E3E086E | ApiSet: undefined
 */
export declare function cellCamActivateSelfieMode(toggle: boolean): void;
/**
 * Hash: 0x466DA42C89865553 | ApiSet: undefined
 */
export declare function cellCamSetHeadHeight(p0: number): void;
/**
 * Hash: 0x439E9BC95B7E7FBE | ApiSet: undefined
 */
export declare function cellCamIsCharVisibleNoFaceCheck(entity: number | Entity): boolean;
/**
 * Hash: 0x53F4892D18EC90A4 | ApiSet: undefined
 */
export declare function cellCamSetDistance(p0: number): void;
/**
 * Moves the character's finger in a swiping motion when holding a cellphone in their hand through the use of the [CREATE_MOBILE_PHONE](#\_0xA4E8E696C532FBC7) native.
 * ```cpp
 * enum eCellInput {
 * CELL_INPUT_NONE = 0,
 * CELL_INPUT_UP = 1,
 * CELL_INPUT_DOWN = 2,
 * CELL_INPUT_LEFT = 3,
 * CELL_INPUT_RIGHT = 4,
 * CELL_INPUT_SELECT = 5
 * }
 * ```
 * Hash: 0x95C9E72F3D7DEC9B | ApiSet: undefined
 */
export declare function cellCamMoveFinger(direction: number): void;
/**
 * Hash: 0xF1E22DC13F5EEBAD | ApiSet: undefined
 */
export declare function cellCamSetHeadRoll(p0: number): void;
/**
 * ```
 * if the bool "Toggle" is "true" so the phone is lean.
 * if the bool "Toggle" is "false" so the phone is not lean.
 * ```
 * Hash: 0x44E44169EF70138E | ApiSet: undefined
 */
export declare function cellCamSetLean(toggle: boolean): void;
/**
 * Hash: 0xD6ADE981781FCA09 | ApiSet: undefined
 */
export declare function cellCamSetHeadPitch(p0: number): void;
/**
 * Hash: 0x1B0B4AEED5B9B41C | ApiSet: undefined
 */
export declare function cellCamSetHorizontalOffset(p0: number): void;
/**
 * Hash: 0x15E69E2802C24B8D | ApiSet: undefined
 */
export declare function cellCamSetRoll(p0: number): void;
/**
 * Hash: 0x3117D84EFA60F77B | ApiSet: undefined
 */
export declare function cellCamSetVerticalOffset(p0: number): void;
/**
 * ```
 * Creates a mobile phone of the specified type.
 * Possible phone types:
 * 0 - Default phone / Michael's phone
 * 1 - Trevor's phone
 * 2 - Franklin's phone
 * 4 - Prologue phone
 * These values represent bit flags, so a value of '3' would toggle Trevor and Franklin's phones together, causing unexpected behavior and most likely crash the game.
 * ```
 * Hash: 0xA4E8E696C532FBC7 | ApiSet: undefined
 */
export declare function createMobilePhone(phoneType: number): void;
/**
 * Hash: 0x1CEFB61F193070AE | ApiSet: undefined
 */
export declare function getMobilePhoneRotation(p1: number | Vehicle): Vector3;
/**
 * ```
 * Destroys the currently active mobile phone.
 * ```
 * Hash: 0x3BC861DF703E5097 | ApiSet: undefined
 */
export declare function destroyMobilePhone(): void;
/**
 * Hash: 0x584FDFDA48805B86 | ApiSet: undefined
 */
export declare function getMobilePhonePosition(): Vector3;
/**
 * Hash: 0xAC2890471901861C | ApiSet: undefined
 */
export declare function _0xAC2890471901861C(p0: number): void;
/**
 * Hash: 0xB4A53E05F68B6FA1 | ApiSet: undefined
 */
export declare function getMobilePhoneRenderId(): number;
/**
 * ```
 * If bool Toggle = true so the mobile is hide to screen.
 * If bool Toggle = false so the mobile is show to screen.
 * ```
 * Hash: 0xF511F759238A5122 | ApiSet: undefined
 */
export declare function scriptIsMovingMobilePhoneOffscreen(toggle: boolean): void;
/**
 * Toggles depth of field on the cellphone camera.
 * Hash: 0x375A706A5C2FD084 | ApiSet: undefined
 */
export declare function setMobilePhoneDofState(toggle: boolean): void;
/**
 * ```
 * Needs more research. If the "phone_cam12" filter is applied, this function is called with "TRUE"; otherwise, "FALSE".
 * Example (XBOX 360):
 * // check current filter selection
 * `if (MISC::ARE_STRINGS_EQUAL(getElem(g_2471024, &l_17, 4), "phone_cam12") != 0)`
 * {
 * `MOBILE::_0xC273BB4D(0); // FALSE`
 * }
 * else
 * {
 * `MOBILE::_0xC273BB4D(1); // TRUE`
 * }
 * ```
 * Hash: 0xA2CCBE62CD4C91A4 | ApiSet: undefined
 */
export declare function _0xA2CCBE62CD4C91A4(): number;
/**
 * ```
 * Last parameter is unknown and always zero.
 * ```
 * Hash: 0xBB779C0CA917E865 | ApiSet: undefined
 */
export declare function setMobilePhoneRotation(rotX: number, rotY: number, rotZ: number, p3: any): void;
/**
 * Hash: 0x693A5C6D6734085B | ApiSet: undefined
 */
export declare function setMobilePhonePosition(posX: number, posY: number, posZ: number): void;
/**
 * ```
 * The minimum/default is 500.0f. If you plan to make it bigger set it's position as well. Also this seems to need to be called in a loop as when you close the phone the scale is reset. If not in a loop you'd need to call it everytime before you re-open the phone.
 * ```
 * Hash: 0xCBDD322A73D6D932 | ApiSet: undefined
 */
export declare function setMobilePhoneScale(scale: number): void;
/**
 * Create a blip that by default is red (enemy), you can use [SET_BLIP_AS_FRIENDLY](#\_0xC6F43D0E) to make it blue (friend).\
 * Can be used for objects, vehicles and peds.
 * Example of enemy:
 * ![enemy](https://i.imgur.com/fl78svv.png)
 * Example of friend:
 * ![friend](https://i.imgur.com/Q16ho5d.png)
 * Hash: 0x5CDE92C702A8FCE7 | ApiSet: undefined
 */
export declare function addBlipForEntity(entity: number | Entity): number;
/**
 * Hash: 0xBE339365C863BD36 | ApiSet: undefined
 */
export declare function addBlipForPickup(pickup: any): number;
/**
 * Adds a rectangular blip for the specified coordinates/area.
 * It is recommended to use [SET_BLIP_ROTATION](#\_0xF87683CDF73C3F6E) and [SET_BLIP_COLOUR](#\_0x03D7FB09E75D6B7E) to make the blip not rotate along with the camera.
 * By default, the blip will show as a *regular* blip with the specified color/sprite if it is outside of the minimap view.
 * Example image:
 * ![minimap](https://i.imgur.com/qLbXWcQ.png)
 * ![big map](https://i.imgur.com/0j7O7Rh.png)
 * (Native name is *likely* to actually be ADD_BLIP_FOR_AREA, but due to the usual reasons this can't be confirmed)
 * Hash: 0xCE5D0E5E315DB238 | ApiSet: undefined
 */
export declare function addBlipForArea(position: Vector3, width: number, height: number): number;
/**
 * Does stuff like this:\
 * gyazo.com/7fcb78ea3520e3dbc5b2c0c0f3712617\
 * Example:\
 * int GetHash = GET_HASH_KEY("fe_menu_version_corona_lobby");\
 * ACTIVATE_FRONTEND_MENU(GetHash, 0, -1);\
 * BOOL p1 is a toggle to define the game in pause.\
 * int p2 is unknown but -1 always works, not sure why though.\
 * \[30/03/2017] ins1de :\
 * the int p2 is actually a component variable. When the pause menu is visible, it opens the tab related to it.\
 * Example : Function.Call(Hash.ACTIVATE_FRONTEND_MENU,-1171018317, 0, 42);\
 * Result : Opens the "Online" tab without pausing the menu, with -1 it opens the map.
 * Below is a list of all known Frontend Menu Hashes.
 * *   FE_MENU_VERSION_SP_PAUSE
 * *   FE_MENU_VERSION_MP_PAUSE
 * *   FE_MENU_VERSION_CREATOR_PAUSE
 * *   FE_MENU_VERSION_CUTSCENE_PAUSE
 * *   FE_MENU_VERSION_SAVEGAME
 * *   FE_MENU_VERSION_PRE_LOBBY
 * *   FE_MENU_VERSION_LOBBY
 * *   FE_MENU_VERSION_MP_CHARACTER_SELECT
 * *   FE_MENU_VERSION_MP_CHARACTER_CREATION
 * *   FE_MENU_VERSION_EMPTY
 * *   FE_MENU_VERSION_EMPTY_NO_BACKGROUND
 * *   FE_MENU_VERSION_TEXT_SELECTION
 * *   FE_MENU_VERSION_CORONA
 * *   FE_MENU_VERSION_CORONA_LOBBY
 * *   FE_MENU_VERSION_CORONA_JOINED_PLAYERS
 * *   FE_MENU_VERSION_CORONA_INVITE_PLAYERS
 * *   FE_MENU_VERSION_CORONA_INVITE_FRIENDS
 * *   FE_MENU_VERSION_CORONA_INVITE_CREWS
 * *   FE_MENU_VERSION_CORONA_INVITE_MATCHED_PLAYERS
 * *   FE_MENU_VERSION_CORONA_INVITE_LAST_JOB_PLAYERS
 * *   FE_MENU_VERSION_CORONA_RACE
 * *   FE_MENU_VERSION_CORONA_BETTING
 * *   FE_MENU_VERSION_JOINING_SCREEN
 * *   FE_MENU_VERSION_LANDING_MENU
 * *   FE_MENU_VERSION_LANDING_KEYMAPPING_MENU
 * Hash: 0xEF01D36B9C9D0C7B | ApiSet: undefined
 */
export declare function activateFrontendMenu(menuhash: number | string, togglePause: boolean, component: number): void;
/**
 * Creates a blip for the specified coordinates. You can use `SET_BLIP_` natives to change the blip.
 * Hash: 0x5A039BB0BCA604B6 | ApiSet: undefined
 */
export declare function addBlipForCoord(position: Vector3): number;
/**
 * Hash: 0x60296AF4BA14ABC5 | ApiSet: undefined
 */
export declare function addNextMessageToPreviousBriefs(addToBrief: boolean): void;
/**
 * Hash: 0x80EAD8E2E1D5D52E | ApiSet: undefined
 */
export declare function addTextComponentSubstringBlipName(blip: number): void;
/**
 * Hash: 0x311438A071DD9B1A | ApiSet: undefined
 */
export declare function addPointToGpsCustomRoute(position: Vector3): void;
/**
 * Create a blip with a radius for the specified coordinates (it doesnt create the blip sprite, so you need to use [AddBlipCoords](#\_0xC6F43D0E))
 * Example image:
 * ![example](https://i.imgur.com/9hQl3DB.png)
 * Hash: 0x46818D79B1F7499A | ApiSet: undefined
 */
export declare function addBlipForRadius(posX: number, posY: number, posZ: number, radius: number): number;
/**
 * Hash: 0xA905192A6781C41B | ApiSet: undefined
 */
export declare function addPointToGpsMultiRoute(position: Vector3): void;
/**
 * Hash: 0x0E4C749FF9DE9CC4 | ApiSet: undefined
 */
export declare function addTextComponentFormattedInteger(value: number, commaSeparated: boolean): void;
/**
 * Hash: 0x03B504CF259931BC | ApiSet: undefined
 */
export declare function addTextComponentInteger(value: number): void;
/**
 * Adds a float to a text component placeholder, replacing `~1~` in the current text command's text label.
 * ![Example output](https://i.imgur.com/jvuQ0II.png)
 * Hash: 0xE7DCB5B874BCD96E | ApiSet: undefined
 */
export declare function addTextComponentFloat(value: number, decimalPlaces: number): void;
/**
 * Certain characters like `<` will have to be escaped using html entities (e.g. `&lt;`), otherwise the text wont display properly.
 * Hash: 0x5F68520888E69014 | ApiSet: undefined
 */
export declare function addTextComponentSubstringKeyboardDisplay(string: string): void;
/**
 * ```
 * p1 was always -1
 * ```
 * Hash: 0x761B77454205A61D | ApiSet: undefined
 */
export declare function addTextComponentSubstringPhoneNumber(p0: string, p1: number): void;
/**
 * Hash: 0xC63CD5D2920ACBE7 | ApiSet: undefined
 */
export declare function addTextComponentSubstringTextLabel(labelName: string): void;
/**
 * Adds an arbitrary string as a text component placeholder, replacing `~a~` in the current text command's text label.
 * See the documentation on text formatting for more information.
 * Hash: 0x6C188BE134E074AA | ApiSet: undefined
 */
export declare function addTextComponentSubstringPlayerName(text: string): void;
/**
 * ```
 * This native (along with 0x5F68520888E69014 and 0x6C188BE134E074AA) do not actually filter anything. They simply add the provided text (as of 944)
 * ```
 * Hash: 0x94CF4AC034C9C986 | ApiSet: undefined
 */
export declare function addTextComponentSubstringWebsite(website: string): void;
/**
 * ```
 * It adds the localized text of the specified GXT entry name. Eg. if the argument is GET_HASH_KEY("ES_HELP"), adds "Continue". Just uses a text labels hash key
 * ```
 * Hash: 0x17299B63C7683A2B | ApiSet: undefined
 */
export declare function addTextComponentSubstringTextLabelHashKey(gxtEntryHash: number | string): void;
/**
 * ```
 * Adds a timer (e.g. "00:00:00:000"). The appearance of the timer depends on the flags, which needs more research.
 * ```
 * Hash: 0x1115F16B8AB9E8BF | ApiSet: undefined
 */
export declare function addTextComponentSubstringTime(timestamp: number, flags: number): void;
/**
 * Allows opening the pause menu this frame, when the player is dead.
 * Hash: 0xCC3FDDED67BCFC63 | ApiSet: undefined
 */
export declare function allowPauseMenuWhenDeadThisFrame(): void;
/**
 * Hash: 0x60734CC207C9833C | ApiSet: undefined
 */
export declare function allowSonarBlips(toggle: boolean): void;
/**
 * ```
 * Initializes the text entry for the the text next to a loading prompt. All natives for for building UI texts can be used here
 * BEGIN_TEXT_COMMAND_PRINT
 * e.g
 * void StartLoadingMessage(char *text, int spinnerType = 3)
 * {
 * _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * _SHOW_LOADING_PROMPT(spinnerType);
 * }
 * \/\*OR\*\/
 * void ShowLoadingMessage(char *text, int spinnerType = 3, int timeMs = 10000)
 * {
 * _SET_LOADING_PROMPT_TEXT_ENTRY("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * _SHOW_LOADING_PROMPT(spinnerType);
 * WAIT(timeMs);
 * _REMOVE_LOADING_PROMPT();
 * }
 * These are some localized strings used in the loading spinner.
 * "PM_WAIT"                   = Please Wait
 * "CELEB_WPLYRS"              = Waiting For Players.
 * "CELL_SPINNER2"             = Scanning storage.
 * "ERROR_CHECKYACHTNAME" = Registering your yacht's name. Please wait.
 * "ERROR_CHECKPROFANITY"   = Checking your text for profanity. Please wait.
 * "FM_COR_AUTOD"                        = Just spinner no text
 * "FM_IHELP_WAT2"                        = Waiting for other players
 * "FM_JIP_WAITO"                            = Game options are being set
 * "FMMC_DOWNLOAD"                    = Downloading
 * "FMMC_PLYLOAD"                         = Loading
 * "FMMC_STARTTRAN"                    = Launching session
 * "HUD_QUITTING"                           =  Quiting session
 * "KILL_STRIP_IDM"                         = Waiting for to accept
 * "MP_SPINLOADING"                      = Loading
 * ```
 * Hash: 0xABA17D7CE615ADBF | ApiSet: undefined
 */
export declare function beginTextCommandBusyspinnerOn(string: string): void;
/**
 * ```
 * clears a print text command with this text
 * ```
 * Hash: 0xE124FA80A759019C | ApiSet: undefined
 */
export declare function beginTextCommandClearPrint(text: string): void;
/**
 * ```
 * Used to be known as _SET_TEXT_COMPONENT_FORMAT
 * ```
 * Hash: 0x8509B634FBE7DA11 | ApiSet: undefined
 */
export declare function beginTextCommandDisplayHelp(inputType: string): void;
/**
 * ```
 * BEGIN_TEXT_COMMAND_*
 * Example:
 * _BEGIN_TEXT_COMMAND_GET_WIDTH("NUMBER");
 * ADD_TEXT_COMPONENT_FLOAT(69.420f, 2);
 * float width = _END_TEXT_COMMAND_GET_WIDTH(1);
 * ```
 * Hash: 0x54CE8AC98E120CAB | ApiSet: undefined
 */
export declare function beginTextCommandGetWidth(text: string): void;
/**
 * ```
 * The following were found in the decompiled script files:
 * STRING, TWOSTRINGS, NUMBER, PERCENTAGE, FO_TWO_NUM, ESMINDOLLA, ESDOLLA, MTPHPER_XPNO, AHD_DIST, CMOD_STAT_0, CMOD_STAT_1, CMOD_STAT_2, CMOD_STAT_3, DFLT_MNU_OPT, F3A_TRAFDEST, ES_HELP_SOC3
 * ESDOLLA
 * ESMINDOLLA - cash (negative)
 * Used to be known as _SET_TEXT_ENTRY
 * ```
 * Hash: 0x25FBB336DF1804CB | ApiSet: undefined
 */
export declare function beginTextCommandDisplayText(text: string): void;
/**
 * ```
 * nothin doin.
 * BOOL Message(char* text)
 * {
 * BEGIN_TEXT_COMMAND_IS_MESSAGE_DISPLAYED("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * return END_TEXT_COMMAND_IS_MESSAGE_DISPLAYED();
 * }
 * ```
 * Hash: 0x853648FD1063A213 | ApiSet: undefined
 */
export declare function beginTextCommandIsMessageDisplayed(text: string): void;
/**
 * Hash: 0x23D69E0465570028 | ApiSet: undefined
 */
export declare function beginTextCommandObjective(p0: string): void;
/**
 * Hash: 0x0A24DA3A41B718F5 | ApiSet: undefined
 */
export declare function beginTextCommandIsThisHelpMessageBeingDisplayed(labelName: string): void;
/**
 * Hash: 0x8F9EE5687F8EECCD | ApiSet: undefined
 */
export declare function beginTextCommandOverrideButtonText(gxtEntry: string): void;
/**
 * Starts a text command to change the name of a blip displayed in the pause menu.
 * This should be paired with [`END_TEXT_COMMAND_SET_BLIP_NAME`](#\_0xBC38B49BCB83BC9B), once adding all required text components.
 * Hash: 0xF9113A30DE5C6670 | ApiSet: undefined
 */
export declare function beginTextCommandSetBlipName(textLabel: string): void;
/**
 * Hash: 0xD422FCC5F239A915 | ApiSet: undefined
 */
export declare function busyspinnerIsOn(): boolean;
/**
 * ```
 * get's line count
 * int GetLineCount(char *text, float x, float y)
 * {
 * _BEGIN_TEXT_COMMAND_LINE_COUNT("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * return _END_TEXT_COMMAND_GET_LINE_COUNT(x, y);
 * }
 * ```
 * Hash: 0x521FB041D93DD0E4 | ApiSet: undefined
 */
export declare function beginTextCommandLineCount(entry: string): void;
/**
 * ```
 * Used to be known as _SET_TEXT_ENTRY_2
 * void ShowSubtitle(char *text)
 * {
 * BEGIN_TEXT_COMMAND_PRINT("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * END_TEXT_COMMAND_PRINT(2000, 1);
 * }
 * ```
 * Hash: 0xB87A37EEB7FAA67D | ApiSet: undefined
 */
export declare function beginTextCommandPrint(GxtEntry: string): void;
/**
 * ```
 * Displays cash change notifications on HUD.
 * ```
 * Hash: 0x0772DF77852C2E30 | ApiSet: undefined
 */
export declare function changeFakeMpCash(cash: number, bank: number): void;
/**
 * Hash: 0xB2A592B04648A9CB | ApiSet: undefined
 */
export declare function busyspinnerIsDisplaying(): boolean;
/**
 * Declares the entry type of a notification, for example "STRING".
 * int ShowNotification(char \*text)
 * {
 * BEGIN_TEXT_COMMAND_THEFEED_POST("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * return \_DRAW_NOTIFICATION(1, 1);
 * }
 * Hash: 0x202709F4C58A0424 | ApiSet: undefined
 */
export declare function beginTextCommandThefeedPost(text: string): void;
/**
 * Clears all active blip routes that have been set with [`SetBlipRoute`](#\_0x4F7D8A9BFB0B43E9).
 * Hash: 0xD12882D3FF82BF11 | ApiSet: undefined
 */
export declare function clearAllBlipRoutes(): void;
/**
 * ```
 * Removes the loading prompt at the bottom right of the screen.
 * ```
 * Hash: 0x10D373323E5B9C0D | ApiSet: undefined
 */
export declare function busyspinnerOff(): void;
/**
 * Hash: 0x6178F68A87A4D3A0 | ApiSet: undefined
 */
export declare function clearAllHelpMessages(): void;
/**
 * Hash: 0x7792424AA0EAC32E | ApiSet: undefined
 */
export declare function clearDynamicPauseMenuErrorMessage(): void;
/**
 * Hash: 0x9D292F73ADBD9313 | ApiSet: undefined
 */
export declare function clearBrief(): void;
/**
 * Hash: 0x2A179DF17CCF04CD | ApiSet: undefined
 */
export declare function clearAdditionalText(p0: number, p1: boolean): void;
/**
 * Hash: 0xE6DE0561D9232A64 | ApiSet: undefined
 */
export declare function clearGpsCustomRoute(): void;
/**
 * Hash: 0xFF4FB7C8CDFA3DA7 | ApiSet: undefined
 */
export declare function clearGpsPlayerWaypoint(): void;
/**
 * Hash: 0x50085246ABD3FEFA | ApiSet: undefined
 */
export declare function clearFloatingHelp(hudIndex: number, p1: boolean): void;
/**
 * ```
 * Does the same as SET_RACE_TRACK_RENDER(false);
 * ```
 * Hash: 0x7AA5B4CE533C858B | ApiSet: undefined
 */
export declare function clearGpsRaceTrack(): void;
/**
 * ```
 * Clears the GPS flags. Only the script that originally called SET_GPS_FLAGS can clear them.
 * Doesn't seem like the flags are actually read by the game at all.
 * ```
 * Hash: 0x21986729D6A3A830 | ApiSet: undefined
 */
export declare function clearGpsFlags(): void;
/**
 * Hash: 0x8DFCED7A656F8802 | ApiSet: undefined
 */
export declare function clearHelp(toggle: boolean): void;
/**
 * Does the same as [`SET_GPS_MULTI_ROUTE_RENDER(false)`](#\_0x3DDA37128DD1ACA8)
 * Hash: 0x67EEDEA1B9BAFD94 | ApiSet: undefined
 */
export declare function clearGpsMultiRoute(): void;
/**
 * Hash: 0x5E62BE5DC58E9E06 | ApiSet: undefined
 */
export declare function clearPedInPauseMenu(): void;
/**
 * ```
 * p0: found arguments in the b617d scripts: pastebin.com/X5akCN7z
 * ```
 * Hash: 0xCF708001E1E536DD | ApiSet: undefined
 */
export declare function clearThisPrint(p0: string): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0xB57D8DD645CFA2CF | ApiSet: undefined
 */
export declare function clearReminderMessage(): void;
/**
 * Hash: 0xCC33FA791322B9D9 | ApiSet: undefined
 */
export declare function clearPrints(): void;
/**
 * Hash: 0x2708FC083123F9FF | ApiSet: undefined
 */
export declare function clearRaceGalleryBlips(): void;
/**
 * Hash: 0x2CEA2839313C09AC | ApiSet: undefined
 */
export declare function clearSmallPrints(): void;
/**
 * Hash: 0xD2B32BE3FC1626C6 | ApiSet: undefined
 */
export declare function closeSocialClubMenu(): void;
/**
 * Creates a gamer tag for the specified local player ID, automatically attached to the player's current ped.
 * The created gamer tag will have the same ID as the player. You can use [IS_MP_GAMER_TAG_ACTIVE](#\_0x4E929E7A5796FD26) to check if a gamer tag already exists for a player.
 * After the gamer tag is created, all components will be set as invisible. Use [SET_MP_GAMER_TAG_VISIBILITY](#\_0x63BB75ABEDC1F6A0) to change the visibility of individual components or [\_SET_MP_GAMER_TAG_VISIBILITY_ALL](#\_0xEE76FF7E6A0166B0) to set all of them at once.
 * To create a gamer tag for a ped that is not a player, see [CREATE_FAKE_MP_GAMER_TAG](#\_0xBFEFE3321A3F5015).
 * Hash: 0x6DD05E9D83EFA4C9 | ApiSet: undefined
 */
export declare function createMpGamerTagWithCrewColor(player: number | string | Player, username: string, crewIsPrivate: boolean, crewIsRockstar: boolean, crewName: string, crewRank: number, crewR: number, crewG: number, crewB: number): void;
/**
 * Hash: 0x6D3465A73092F0E6 | ApiSet: undefined
 */
export declare function disableFrontendThisFrame(): void;
/**
 * As per the name, this native creates a "fake" gamer tag that is attached to a specific ped.
 * Unlike "real" gamer tags, you cannot set the crew colour of these gamer tags.
 * To create gamer tags for actual players and for more gamer tag information, see [CREATE_MP_GAMER_TAG_WITH_CREW_COLOR](#\_0x6DD05E9D83EFA4C9).
 * Hash: 0xBFEFE3321A3F5015 | ApiSet: undefined
 */
export declare function createFakeMpGamerTag(ped: number | Ped, username: string, crewIsPrivate: boolean, crewIsRockstar: boolean, crewName: string, crewRank: number): number;
/**
 * Hash: 0xA5E78BA2B1331C55 | ApiSet: undefined
 */
export declare function displayAmmoThisFrame(display: boolean): void;
/**
 * Hash: 0x1AC8F4AD40E22127 | ApiSet: undefined
 */
export declare function closeMultiplayerChat(): void;
/**
 * If true is passed, the player won't be able to open the multiplayer chat
 * Hash: 0x1DB21A44B09E8BA3 | ApiSet: undefined
 */
export declare function disableMultiplayerChat(disable: boolean): void;
/**
 * Hash: 0x276B6CE369C33678 | ApiSet: undefined
 */
export declare function displayAreaName(toggle: boolean): void;
/**
 * Same as [`SET_WAYPOINT_OFF`](#\_0xA7E4E2D361C2627F), except it checks if the local player is the owner of the waypoint.
 * Hash: 0xD8E694757BCEA8E9 | ApiSet: undefined
 */
export declare function deleteWaypointsFromThisPlayer(): void;
/**
 * Shows a help message for one frame.
 * Do note that this message doesn't get added to the Pause Menu info section.
 * Hash: 0x960C9FF8F616E41C | ApiSet: undefined
 */
export declare function displayHelpTextThisFrame(pTextLabel: string, bCurvedWindow: boolean): void;
/**
 * ```
 * If Hud should be displayed
 * ```
 * Hash: 0xA6294919E56FF02A | ApiSet: undefined
 */
export declare function displayHud(toggle: boolean): void;
/**
 * Hash: 0x402F9ED62087E898 | ApiSet: undefined
 */
export declare function displayHudWhenPausedThisFrame(): void;
/**
 * ```
 * "DISPLAY_CASH(true);" makes the cash amount render on the screen when appropriate
 * "DISPLAY_CASH(false);" disables cash amount rendering
 * ```
 * Hash: 0x96DEC8D5430208B7 | ApiSet: undefined
 */
export declare function displayCash(display: boolean): void;
/**
 * Toggles whether or not name labels are shown on the expanded minimap next to player blips, like in GTA:O.
 * Doesn't need to be called every frame.
 * Preview: https://i.imgur.com/DfqKWfJ.png
 * Make sure to call SET_BLIP_CATEGORY with index 7 for this to work on the desired blip.
 * Hash: 0x82CEDC33687E1F50 | ApiSet: undefined
 */
export declare function displayPlayerNameTagsOnBlips(toggle: boolean): void;
/**
 * ```
 * Displays the crosshair for this frame.
 * ```
 * Hash: 0x73115226F4814E62 | ApiSet: undefined
 */
export declare function displaySniperScopeThisFrame(): void;
/**
 * Enables drawing some hud components, such as help labels, this frame, when the player is dead.
 * Hash: 0x7669F9E39DC17063 | ApiSet: undefined
 */
export declare function displayHudWhenDeadThisFrame(): void;
/**
 * ```
 * If Minimap / Radar should be displayed.
 * ```
 * Hash: 0xA0EBB943C300E693 | ApiSet: undefined
 */
export declare function displayRadar(toggle: boolean): void;
/**
 * Hash: 0xA6DB27D19ECBB7DA | ApiSet: undefined
 */
export declare function doesBlipExist(blip: number): boolean;
/**
 * ```
 * Returns whether the ped's blip is controlled by the game.
 * It's the default blip you can see on enemies during freeroam in singleplayer (the one that fades out quickly).
 * ```
 * Hash: 0x15B8ECF844EE67ED | ApiSet: undefined
 */
export declare function doesPedHaveAiBlip(ped: number | Ped): boolean;
/**
 * Hash: 0xDD2238F57B977751 | ApiSet: undefined
 */
export declare function doesBlipHaveGpsRoute(blip: number): boolean;
/**
 * Hash: 0x1C7302E725259789 | ApiSet: undefined
 */
export declare function doesTextBlockExist(gxt: string): boolean;
/**
 * Hash: 0xFCC75460ABA29378 | ApiSet: undefined
 */
export declare function endTextCommandClearPrint(): void;
/**
 * ```
 * Checks if the passed gxt name exists in the game files.
 * ```
 * Hash: 0xAC09CA973C564252 | ApiSet: undefined
 */
export declare function doesTextLabelExist(gxt: string): boolean;
/**
 * ```
 * When calling this, the current frame will have the players "arrow icon" be focused on the dead center of the radar.
 * ```
 * Hash: 0x6D14BFDC33B34F55 | ApiSet: undefined
 */
export declare function dontTiltMinimapThisFrame(): void;
/**
 * ```
 * `After applying the properties to the text (See UI::SET_TEXT_), this will draw the text in the applied position. Also 0.0f < x, y < 1.0f, percentage of the axis.`
 * ```
 * ```
 * NativeDB Added Parameter 3: int p2
 * ```
 * Hash: 0xCD015E5BB0D96A57 | ApiSet: undefined
 */
export declare function endTextCommandDisplayText(x: number, y: number): void;
/**
 * Allows HUD to be drawn over screen fade every frame this function is called.
 * Hash: 0xBF4F34A85CA2970C | ApiSet: undefined
 */
export declare function drawHudOverFadeThisFrame(): void;
/**
 * ```cpp
 * enum eBusySpinnerType
 * {
 * BUSY_SPINNER_LEFT = 0,
 * BUSY_SPINNER_LEFT_2 = 1,
 * BUSY_SPINNER_LEFT_3 = 2,
 * BUSY_SPINNER_SAVE = 3,
 * BUSY_SPINNER_RIGHT = 4,
 * };
 * ```
 * Hash: 0xBD12F8228410D9B4 | ApiSet: undefined
 */
export declare function endTextCommandBusyspinnerOn(busySpinnerType: number): void;
/**
 * Hash: 0x238FFE5C7B0498A6 | ApiSet: undefined
 */
export declare function endTextCommandDisplayHelp(shape: number, loop: boolean, beep: boolean, duration: number): void;
/**
 * ```
 * END_TEXT_COMMAND_*
 * Determines how many lines the text string will use when drawn on screen.
 * Must use 0x521FB041D93DD0E4 for setting up
 * ```
 * Hash: 0x9040DFB09BE75706 | ApiSet: undefined
 */
export declare function endTextCommandLineCount(x: number, y: number): number;
/**
 * Hash: 0x8A9BA1AB3E237613 | ApiSet: undefined
 */
export declare function endTextCommandIsMessageDisplayed(): boolean;
/**
 * Returns whether a specific help message is being displayed or not.
 * ```cpp
 * enum HudIndexes {
 * HELP_TEXT = 0,
 * FLOATING_HELP_TEXT_1 = 1,
 * FLOATING_HELP_TEXT_2 = 2,
 * }
 * ```
 * Hash: 0x10BDDBFC529428DD | ApiSet: undefined
 */
export declare function endTextCommandIsThisHelpMessageBeingDisplayed(hudIndex: number): boolean;
/**
 * ```
 * END_TEXT_COMMAND_*
 * In scripts font most of the time is passed as 1.
 * Use _BEGIN_TEXT_GET_COMMAND_GET_WIDTH
 * param is not font from what i've tested
 * ```
 * Hash: 0x85F061DA64ED2F67 | ApiSet: undefined
 */
export declare function endTextCommandGetWidth(p0: boolean): number;
/**
 * Hash: 0xA86911979638106F | ApiSet: undefined
 */
export declare function endTextCommandOverrideButtonText(buttonIndex: number): void;
/**
 * Hash: 0x8EFCCF6EC66D85E4 | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostCrewRankup(chTitle: string, clanTxd: string, clanTxn: string, isImportant: boolean, showSubtitle: boolean): number;
/**
 * Hash: 0xCFDBDF5AE59BA0F4 | ApiSet: undefined
 */
export declare function endTextCommandObjective(p0: boolean): void;
/**
 * Shows an "award" notification above the minimap, lua example result:
 * ![](https://i.imgur.com/e2DNaKX.png)
 * Old description:
 * ```
 * Example:
 * `UI::_SET_NOTIFICATION_TEXT_ENTRY("HUNT");`
 * `UI::_0xAA295B6F28BD587D("Hunting", "Hunting_Gold_128", 0, 109, "HUD_MED_UNLKED");`
 * ```
 * Hash: 0xAA295B6F28BD587D | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostAward(textureDict: string, textureName: string, rpBonus: number, colorOverlay: number, titleLabel: string): number;
/**
 * ```
 * Draws the subtitle at middle center of the screen.
 * int duration = time in milliseconds to show text on screen before disappearing
 * drawImmediately = If true, the text will be drawn immediately, if false, the text will be drawn after the previous subtitle has finished
 * Used to be known as _DRAW_SUBTITLE_TIMED
 * ```
 * Hash: 0x9D77056A530643F6 | ApiSet: undefined
 */
export declare function endTextCommandPrint(duration: number, drawImmediately: boolean): void;
/**
 * ```
 * p0 = 1 or 0
 * crashes my game...
 * this is for sending invites to network players - jobs/apartment/ect...
 * return notification handle
 * int invite(Player player)
 * {
 * networkHandleMgr netHandle;
 * networkClanMgr clan;
 * char *playerName = GET_PLAYER_NAME(player);
 * _SET_NOTIFICATION_TEXT_ENTRY("STRING");
 * _SET_NOTIFACTION_COLOR_NEXT(1);
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
 * NETWORK_HANDLE_FROM_PLAYER(player, &netHandle.netHandle, 13);
 * if (NETWORK_CLAN_PLAYER_IS_ACTIVE(&netHandle.netHandle))
 * {
 * NETWORK_CLAN_PLAYER_GET_DESC(&clan.clanHandle, 35, &netHandle.netHandle);
 * _DRAW_NOTIFICATION_CLAN_INVITE(0, _0x54E79E9C(&clan.clanHandle, 35), &clan.unk17, clan.isLeader, 0, 0, clan.clanHandle, playerName, 0, 0, 0);
 * }
 * }
 * ```
 * Hash: 0x137BC35589E34E1E | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostCrewtagWithGameName(crewTypeIsPrivate: boolean, crewTagContainsRockstar: boolean, rank: number, isLeader: boolean, isImportant: boolean, clanHandle: number, gamerStr: string, r: number, g: number, b: number): [number, number];
/**
 * Finalizes a text command started with [`BEGIN_TEXT_COMMAND_SET_BLIP_NAME`](#\_0xF9113A30DE5C6670), setting the name
 * of the specified blip.
 * Hash: 0xBC38B49BCB83BC9B | ApiSet: undefined
 */
export declare function endTextCommandSetBlipName(blip: number): void;
/**
 * Sets some extra options for a notification. It adds an image (or icon type) and sets a notification title (sender) and subtitle (subject).
 * Texture dictionary and texture name parameters are usually the same exact value.
 * Example result:
 * ![](https://i.imgur.com/LviutDl.png)
 * Old description with list of possible icons and texture names:
 * ```
 * List of picNames: pastebin.com/XdpJVbHz
 * flash is a bool for fading in.
 * iconTypes:
 * 1 : Chat Box
 * 2 : Email
 * 3 : Add Friend Request
 * 4 : Nothing
 * 5 : Nothing
 * 6 : Nothing
 * 7 : Right Jumping Arrow
 * 8 : RP Icon
 * 9 : $ Icon
 * "sender" is the very top header. This can be any old string.
 * "subject" is the header under the sender.
 * ```
 * Hash: 0x1CCD9A37359072CF | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostMessagetext(textureDict: string, textureName: string, flash: boolean, iconType: number, sender: string, subject: string): number;
/**
 * ```
 * This function and the one below it are for after you receive an invite, not sending it.
 * p0 = 1 or 0
 * nothin doin.
 * int invite(Player player)
 * {
 * int iVar2, iVar3;
 * networkHandleMgr handle;
 * NETWORK_HANDLE_FROM_PLAYER(player, &handle.netHandle, 13);
 * networkClanMgr clan;
 * char *playerName = GET_PLAYER_NAME(player);
 * _SET_NOTIFICATION_TEXT_ENTRY("STRING");
 * _SET_NOTIFACTION_COLOR_NEXT(0);
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(playerName);
 * if (NETWORK_CLAN_PLAYER_GET_DESC(&clan, 35, &handle.netHandle))
 * {
 * iVar2 = 0;
 * if (ARE_STRINGS_EQUAL(clan.unk22, "Leader") && clan.unk30 == 0)
 * {
 * iVar2 = 1;
 * }
 * if (clan.unk21 > 0)
 * {
 * iVar3 = 0;
 * }
 * else
 * {
 * iVar3 = 1;
 * }
 * BOOL unused = _0x54E79E9C(&clan.clanHandle, 35);
 * return _DRAW_NOTIFICATION_APARTMENT_INVITE(iVar3, 0 \/\*unused\*\/, &clan.unk17, clan.unk30, iVar2, 0, clan.clanHandle, 0, 0, 0);
 * }
 * }
 * ```
 * Hash: 0x97C9E4E7024A8F2C | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostCrewtag(crewTypeIsPrivate: boolean, crewTagContainsRockstar: boolean, rank: number, hasFounderStatus: boolean, isImportant: boolean, clanHandle: number, r: number, g: number, b: number): [number, number];
/**
 * Example, only occurrence in the scripts:
 * ```
 * `v_8 = UI::END_TEXT_COMMAND_THEFEED_POST_MESSAGETEXT_TU("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 0, 0, &v_9, "", a_5);`
 * ```
 * Example result:
 * ![](https://i.imgur.com/YrN4Bcm.png)
 * Hash: 0x1E6611149DB3DB6B | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostMessagetextTu(picTxd: string, picTxn: string, flash: boolean, iconType: number, nameStr: string, subtitleStr: string, durationMultiplier: number): number;
/**
 * ```
 * List of picNames pastebin.com/XdpJVbHz
 * flash is a bool for fading in.
 * iconTypes:
 * 1 : Chat Box
 * 2 : Email
 * 3 : Add Friend Request
 * 4 : Nothing
 * 5 : Nothing
 * 6 : Nothing
 * 7 : Right Jumping Arrow
 * 8 : RP Icon
 * 9 : $ Icon
 * "sender" is the very top header. This can be any old string.
 * "subject" is the header under the sender.
 * "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
 * "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
 * ```
 * Hash: 0x5CBF7BADE20DB93E | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostMessagetextWithCrewTag(picTxd: string, picTxn: string, flash: boolean, iconType: number, nameStr: string, subtitleStr: string, duration: number, crewPackedStr: string): number;
/**
 * Hash: 0xF020C96915705B3A | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostMpticker(blink: boolean, bHasTokens: boolean): number;
/**
 * ```
 * List of picNames: pastebin.com/XdpJVbHz
 * flash is a bool for fading in.
 * iconTypes:
 * 1 : Chat Box
 * 2 : Email
 * 3 : Add Friend Request
 * 4 : Nothing
 * 5 : Nothing
 * 6 : Nothing
 * 7 : Right Jumping Arrow
 * 8 : RP Icon
 * 9 : $ Icon
 * "sender" is the very top header. This can be any old string.
 * "subject" is the header under the sender.
 * "duration" is a multiplier, so 1.0 is normal, 2.0 is twice as long (very slow), and 0.5 is half as long.
 * "clanTag" shows a crew tag in the "sender" header, after the text. You need to use 3 underscores as padding. Maximum length of this field seems to be 7. (e.g. "MK" becomes "___MK", "ACE" becomes "___ACE", etc.)
 * iconType2 is a mirror of iconType. It shows in the "subject" line, right under the original iconType.
 * int IconNotification(char *text, char *text2, char *Subject)
 * {
 * _SET_NOTIFICATION_TEXT_ENTRY("STRING");
 * ADD_TEXT_COMPONENT_SUBSTRING_PLAYER_NAME(text);
 * _SET_NOTIFICATION_MESSAGE_CLAN_TAG_2("CHAR_SOCIAL_CLUB", "CHAR_SOCIAL_CLUB", 1, 7, text2, Subject, 1.0f, "__EXAMPLE", 7);
 * return _DRAW_NOTIFICATION(1, 1);
 * }
 * ```
 * Hash: 0x531B84E7DA981FB6 | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostMessagetextWithCrewTagAndAdditionalIcon(picTxd: string, picTxn: string, flash: boolean, iconType1: number, nameStr: string, subtitleStr: string, duration: number, crewPackedStr: string, iconType2: number, textColor: number): number;
/**
 * This function can show pictures of every texture that can be requested by REQUEST_STREAMED_TEXTURE_DICT.
 * Needs more research.
 * Only one type of usage in the scripts:
 * `HUD::\_C6F580E4C94926AC("CHAR_ACTING_UP", "CHAR_ACTING_UP", 0, 0, "DI_FEED_CHAR", a\_0);`
 * Hash: 0xC6F580E4C94926AC | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostMessagetextGxtEntry(txdName: string, textureName: string, flash: boolean, iconType: number, sender: string, subject: string): number;
/**
 * ```
 * returns a notification handle, prints out a notification like below:
 * type range: 0
 * if you set type to 1, image goes from 0 - 39 - Xbox you can add text to
 * example:
 * `UI::_0xD202B92CBF1D816F(1, 20, "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");`
 * ```
 * Hash: 0xD202B92CBF1D816F | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostReplayIcon(eType: number, iIcon: number, sTitle: string): number;
/**
 * [List of picture names](https://pastebin.com/XdpJVbHz)
 * Example result:
 * ![](https://i.imgur.com/SdEZ22m.png)
 * Hash: 0x2B7E9A4EAAA93C89 | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostStats(statTitle: string, iconEnum: number, stepVal: boolean, barValue: number, isImportant: boolean, picTxd: string, picTxn: string): number;
/**
 * Example output preview:
 * ![](https://i.imgur.com/TJvqkYq.png)
 * Hash: 0x2ED7843F8F801023 | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostTicker(isImportant: boolean, bHasTokens: boolean): number;
/**
 * ```
 * returns a notification handle, prints out a notification like below:
 * type range: 0 - 2
 * if you set type to 1, button accepts "~INPUT_SOMETHING~"
 * example:
 * `HUD::_0xDD6CB2CCE7C2735C(1, "~INPUT_TALK~", "Who you trynna get crazy with, ese? Don't you know I'm LOCO?!");`
 * - imgur.com/UPy0Ial
 * Examples from the scripts:
 * `l_D1[1\/\*1\*\/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");`
 * `l_D1[2\/\*1\*\/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_SAVE_REPLAY_CLIP~","");`
 * `l_D1[1\/\*1\*\/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING~","");`
 * `l_D1[2\/\*1\*\/]=HUD::_DD6CB2CCE7C2735C(1,"~INPUT_REPLAY_START_STOP_RECORDING_SECONDARY~","");`
 * ```
 * Hash: 0xDD6CB2CCE7C2735C | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostReplayInput(type: number, button: string, text: string): number;
/**
 * Hash: 0x378E809BF61EC840 | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostTickerWithTokens(isImportant: boolean, bHasTokens: boolean): number;
/**
 * Hash: 0x33EE12743CCD6343 | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostUnlock(chTitle: string, iconType: number, chSubtitle: string): any;
/**
 * Hash: 0x44FA03975424A0EE | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostTickerForced(blink: boolean, bHasTokens: boolean): number;
/**
 * ```
 * NativeDB Added Parameter 7: int hudColorIndex1
 * NativeDB Added Parameter 8: int hudColorIndex2
 * ```
 * Hash: 0xB6871B0555B02996 | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostVersusTu(ch1TXD: string, ch1TXN: string, val1: number, ch2TXD: string, ch2TXN: string, val2: number): number;
/**
 * Hash: 0x7AE0589093A2E088 | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostUnlockTuWithColor(chTitle: string, iconType: number, chSubtitle: string, isImportant: boolean, titleColor: number, p5: boolean): any;
/**
 * Hash: 0xC8F3AAF93D0600BF | ApiSet: undefined
 */
export declare function endTextCommandThefeedPostUnlockTu(chTitle: string, iconType: number, chSubtitle: string, isImportant: boolean): any;
/**
 * Hash: 0x02CFBA0C9E9275CE | ApiSet: undefined
 */
export declare function flashAbilityBar(millisecondsToFlash: number): void;
/**
 * Hash: 0x6B1DE27EE78E6A19 | ApiSet: undefined
 */
export declare function flashMinimapDisplayWithColor(hudColorIndex: number): void;
/**
 * Hash: 0xCEF214315D276FD1 | ApiSet: undefined
 */
export declare function flagPlayerContextInTournament(toggle: boolean): void;
/**
 * ```
 * adds a short flash to the Radar/Minimap
 * Usage: UI.FLASH_MINIMAP_DISPLAY
 * ```
 * Hash: 0xF2DD778C22B15BDA | ApiSet: undefined
 */
export declare function flashMinimapDisplay(): void;
/**
 * Hash: 0x8817605C2BA76200 | ApiSet: undefined
 */
export declare function forceCloseTextInputBox(): void;
/**
 * Hash: 0x7CD934010E115C2C | ApiSet: undefined
 */
export declare function getAiBlip2(ped: number | Ped): number;
/**
 * Hash: 0xA18AFB39081B6A1F | ApiSet: undefined
 */
export declare function flashWantedDisplay(p0: boolean): void;
/**
 * Hash: 0xDF729E8D20CF7327 | ApiSet: undefined
 */
export declare function getBlipColour(blip: number): number;
/**
 * ```
 * Doesn't actually return anything.
 * ```
 * Hash: 0x1121BFA1A1A522A8 | ApiSet: undefined
 */
export declare function forceSonarBlipsThisFrame(): any;
/**
 * Hash: 0xFA7C7F0AADF25D09 | ApiSet: undefined
 */
export declare function getBlipInfoIdCoord(blip: number): Vector3;
/**
 * ```
 * Returns the Blip handle of given Entity.
 * ```
 * Hash: 0xBC8DBDCA2436F7E8 | ApiSet: undefined
 */
export declare function getBlipFromEntity(entity: number | Entity): number;
/**
 * Hash: 0x970F608F0EE6C885 | ApiSet: undefined
 */
export declare function getBlipAlpha(blip: number): number;
/**
 * ```
 * Returns a value based on what the blip is attached to
 * 1 - Vehicle
 * 2 - Ped
 * 3 - Object
 * 4 - Coord
 * 5 - unk
 * 6 - Pickup
 * 7 - Radius
 * ```
 * Hash: 0xBE9B0959FFD0779B | ApiSet: undefined
 */
export declare function getBlipInfoIdType(blip: number): number;
/**
 * Hash: 0xEE4C0E6DBC6F2C6F | ApiSet: undefined
 */
export declare function forceCloseReportugcMenu(): void;
/**
 * Hash: 0x729B5F1EFBC0AAEE | ApiSet: undefined
 */
export declare function getBlipHudColour(blip: number): number;
/**
 * ```
 * Returns the current AI BLIP for the specified ped
 * ```
 * Hash: 0x56176892826A4FE8 | ApiSet: undefined
 */
export declare function getAiBlip(ped: number | Ped): number;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0xD484BF71050CA1EE | ApiSet: undefined
 */
export declare function getClosestBlipOfType(blipSprite: number): number;
/**
 * Hash: 0x1E314167F701DC3B | ApiSet: undefined
 */
export declare function getBlipInfoIdDisplay(blip: number): number;
/**
 * Hash: 0x4BA4E2553AFEDC2C | ApiSet: undefined
 */
export declare function getBlipInfoIdEntityIndex(blip: number): number;
/**
 * Hash: 0x586AFE3FF72D996E | ApiSet: undefined
 */
export declare function getBlipCoords(blip: number): Vector3;
/**
 * Hash: 0x97D47996FC48CBAD | ApiSet: undefined
 */
export declare function getCurrentWebsiteId(): number;
/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x003E92BA477F9D7F | ApiSet: undefined
 */
export declare function getBlipRotation(blip: number): number;
/**
 * Gets the sprite id of the specified blip. Blip sprite ids and images can be found [here](https://docs.fivem.net/docs/game-references/blips/).
 * Hash: 0x1FC877464A04FC4F | ApiSet: undefined
 */
export declare function getBlipSprite(blip: number): number;
/**
 * Also see [`GET_NEXT_BLIP_INFO_ID`](#\_0x14F96AA50D6FBEA7) for an example.
 * Hash: 0x1BEDE233E6CD2A1F | ApiSet: undefined
 */
export declare function getFirstBlipInfoId(blipSprite: number): number;
/**
 * Hash: 0x01A358D9128B7A86 | ApiSet: undefined
 */
export declare function getCurrentWebpageId(): number;
/**
 * ```
 * This function is hard-coded to always return 0.
 * ```
 * Hash: 0x9B6786E4C03DD382 | ApiSet: undefined
 */
export declare function getBlipInfoIdPickupIndex(blip: number): any;
/**
 * ```
 * This function is hard-coded to always return 1.
 * ```
 * Hash: 0x52F0982D7FD156B6 | ApiSet: undefined
 */
export declare function getDefaultScriptRendertargetRenderId(): number;
/**
 * ```
 * World to relative screen coords
 * this world to screen will keep the text on screen. it will keep it in the screen pos
 * ```
 * Hash: 0xF9904D11F1ACBEC3 | ApiSet: undefined
 */
export declare function getHudScreenPositionFromWorldPosition(worldX: number, worldY: number, worldZ: number): [boolean, number, number];
/**
 * Gets a localized string literal from a label name. This is used to get the filename of the audio conversation associated with the provided label name.
 * Hash: 0x7B5280EBA9840C72 | ApiSet: undefined
 */
export declare function getFilenameForAudioConversation(labelName: string): string;
/**
 * ```
 * `if (HUD::GET_CURRENT_FRONTEND_MENU_VERSION() == joaat("fe_menu_version_empty_no_background"))`
 * ```
 * Hash: 0x2309595AD6145265 | ApiSet: undefined
 */
export declare function getCurrentFrontendMenuVersion(): number;
/**
 * Gets hud color RGBA parameter values by passing a hud color index (hudColorIndex).
 * HUD colors can be found [here](https://docs.fivem.net/docs/game-references/hud-colors/)
 * Hash: 0x7C9C91AB74A0360F | ApiSet: undefined
 */
export declare function getHudColour(hudColorIndex: number): [number, number, number, number];
/**
 * Hash: 0x43E4111189E54F0E | ApiSet: undefined
 */
export declare function getLengthOfLiteralStringInBytes(string: string): number;
/**
 * Hash: 0x223CA69A8C4417FD | ApiSet: undefined
 */
export declare function getHudComponentPosition(id: number): Vector3;
/**
 * ```
 * Returns the ActionScript flagValue.
 * ActionScript flags are global flags that scaleforms use
 * Flags found during testing
 * 0: Returns 1 if the web_browser keyboard is open, otherwise 0
 * 1: Returns 1 if the player has clicked back twice on the opening page, otherwise 0 (web_browser)
 * 2: Returns how many links the player has clicked in the web_browser scaleform, returns 0 when the browser gets closed
 * 9: Returns the current selection on the mobile phone scaleform
 * There are 20 flags in total.
 * ```
 * Hash: 0xE3B05614DCE1D014 | ApiSet: undefined
 */
export declare function getGlobalActionscriptFlag(flagIndex: number): number;
/**
 * ```
 * Returns the string length of the string from the gxt string .
 * ```
 * Hash: 0x801BD273D3A23F74 | ApiSet: undefined
 */
export declare function getLengthOfStringWithThisTextLabel(gxt: string): number;
/**
 * ```
 * Returns the length of the string passed (much like strlen).
 * ```
 * Hash: 0xF030907CCBB8A9FD | ApiSet: undefined
 */
export declare function getLengthOfLiteralString(string: string): number;
/**
 * Hash: 0xDCD4EC3F419D02FA | ApiSet: undefined
 */
export declare function getMainPlayerBlipId(): number;
/**
 * ```
 * p0 was always 0xAE2602A3.
 * ```
 * Hash: 0x052991E59076E4E4 | ApiSet: undefined
 */
export declare function getMenuPedBoolStat(p0: number | string): [boolean, any];
/**
 * Hash: 0x6E31B91145873922 | ApiSet: undefined
 */
export declare function getMinimapFowCoordinateIsRevealed(position: Vector3): boolean;
/**
 * Hash: 0x5FBD7095FE7AE57F | ApiSet: undefined
 */
export declare function getMenuPedFloatStat(p0: any): [boolean, number];
/**
 * Hash: 0x1A6478B61C6BDC3B | ApiSet: undefined
 */
export declare function getNamedRendertargetRenderId(name: string): number;
/**
 * Hash: 0x90A6526CF0381030 | ApiSet: undefined
 */
export declare function getMenuPedMaskedIntStat(p0: any, p2: any, p3: any): [boolean, any];
/**
 * Hash: 0xEF4CED81CEBEDC6D | ApiSet: undefined
 */
export declare function getMenuPedIntStat(p0: any): [boolean, any];
/**
 * Hash: 0x5C90988E7C8E1AF4 | ApiSet: undefined
 */
export declare function getNewSelectedMissionCreatorBlip(): number;
/**
 * Hash: 0xE0130B41D3CF4574 | ApiSet: undefined
 */
export declare function getMinimapFowDiscoveryRatio(): number;
/**
 * Gets mouse event data from scaleforms with mouse support. Must be checked every frame.
 * Returns item index if using the COLOUR_SWITCHER\_02 scaleform.
 * Selection types, found in MOUSE_EVENTS.as:
 * MOUSE_DRAG_OUT = 0;
 * MOUSE_DRAG_OVER = 1;
 * MOUSE_DOWN = 2;
 * MOUSE_MOVE = 3;
 * MOUSE_UP = 4;
 * MOUSE_PRESS = 5;
 * MOUSE_RELEASE = 6;
 * MOUSE_RELEASE_OUTSIDE = 7;
 * MOUSE_ROLL_OUT = 8;
 * MOUSE_ROLL_OVER = 9;
 * MOUSE_WHEEL_UP = 10;
 * MOUSE_WHEEL_DOWN = 11;
 * Scaleforms that this works with:
 * *   COLOUR_SWITCHER\_02
 * *   MP_RESULTS_PANEL
 * *   MP_NEXT_JOB_SELECTION
 * *   SC_LEADERBOARD
 * Probably works with other scaleforms, needs more research.
 * In order to use this Native you MUST have controls 239, 240, 237, 238 enabled!
 * This native, due to its erroneous redundancy of the returned boolean value, works differently in C#: shifting the parameters (where `received` becomes `selectionType` and so on making the fourth parameter unused and always 0).
 * Hash: 0x632B2940C67F4EA9 | ApiSet: undefined
 */
export declare function getMouseEvent(scaleformHandle: number): [boolean, boolean, number, number, number];
/**
 * Hash: 0x14F96AA50D6FBEA7 | ApiSet: undefined
 */
export declare function getNextBlipInfoId(blipSprite: number): number;
/**
 * Hash: 0x9A3FF3DE163034E8 | ApiSet: undefined
 */
export declare function getNumberOfActiveBlips(): number;
/**
 * Name between `GET_ONSCREEN_KEYBOARD_RESULT` and `GET_PAUSE_MENU_STATE`. Likely, `GET_PAUSE_MENU_*`.
 * Hash: 0x5BFF36D6ED83E0AE | ApiSet: undefined
 */
export declare function getPauseMenuCursorPosition(): Vector3;
/**
 * Hash: 0x3F0CF9CB7E589B88 | ApiSet: undefined
 */
export declare function getNorthRadarBlip(): number;
/**
 * ```
 * This gets the height of the FONT and not the total text. You need to get the number of lines your text uses, and get the height of a newline (I'm using a smaller value) to get the total text height.
 * Old name: _GET_TEXT_SCALE_HEIGHT
 * ```
 * Hash: 0xDB88A37483346780 | ApiSet: undefined
 */
export declare function getRenderedCharacterHeight(size: number, font: number): number;
/**
 * ```
 * lastItemMenuId: this is the menuID of the last selected item minus 1000 (lastItem.menuID - 1000)
 * selectedItemMenuId: same as lastItemMenuId except for the currently selected menu item
 * selectedItemUniqueId: this is uniqueID of the currently selected menu item
 * when the pausemenu is closed:
 * lastItemMenuId = -1
 * selectedItemMenuId = -1
 * selectedItemUniqueId = 0
 * when the header gains focus:
 * lastItemMenuId updates as normal or 0 if the pausemenu was just opened
 * selectedItemMenuId becomes a unique id for the pausemenu page that focus was taken from (?) or 0 if the pausemenu was just opened
 * selectedItemUniqueId = -1
 * when focus is moved from the header to a pausemenu page:
 * lastItemMenuId becomes a unique id for the pausemenu page that focus was moved to (?)
 * selectedItemMenuId = -1
 * selectedItemUniqueId updates as normal
 * ```
 * Hash: 0x7E17BE53E1AAABAF | ApiSet: undefined
 */
export declare function getPauseMenuSelectionData(): [number, number, number];
/**
 * ```cpp
 * enum ePauseMenuState
 * {
 * PM_INACTIVE 	 =  0,
 * PM_STARTING_UP 	 =  5,
 * PM_RESTARTING 	 = 10,
 * PM_READY 		 = 15,
 * PM_IN_STORE 	 = 20,
 * PM_IN_SC_MENU 	 = 25,
 * PM_SHUTTING_DOWN = 30,
 * PM_IN_VIDEOEDITOR = 35,
 * }
 * ```
 * Hash: 0x272ACD84970869C5 | ApiSet: undefined
 */
export declare function getPauseMenuState(): number;
/**
 * Hash: 0x36C1451A88A09630 | ApiSet: undefined
 */
export declare function getPauseMenuSelection(): [number, number];
/**
 * Converts the hash of a street name into a readable string. To retrieve a hash for a given (street) coordinate, see [`GET_STREET_NAME_AT_COORD`](#\_0x2EB41072B4C1E4C0).
 * Hash: 0xD0EF8A959B8A4CB9 | ApiSet: undefined
 */
export declare function getStreetNameFromHashKey(hash: number | string): string;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x81DF9ABA6C83DFF9 | ApiSet: undefined
 */
export declare function getWarningMessageTitleHash(): number;
/**
 * Hash: 0x4A9923385BDB9DAD | ApiSet: undefined
 */
export declare function getStandardBlipEnumId(): number;
/**
 * ```
 * Returns a substring of a specified length starting at a specified position.
 * Example:
 * // Get "STRING" text from "MY_STRING"
 * `subStr = HUD::_GET_TEXT_SUBSTRING("MY_STRING", 3, 6);`
 * ```
 * Hash: 0x169BD9382084C8C0 | ApiSet: undefined
 */
export declare function getTextSubstring(text: string, position: number, length: number): string;
/**
 * ```
 * Returns a substring of a specified length starting at a specified position. The result is guaranteed not to exceed the specified max length.
 * NOTE: The 'maxLength' parameter might actually be the size of the buffer that is returned. More research is needed. -CL69
 * Example:
 * // Condensed example of how Rockstar uses this function
 * `strLen = HUD::GET_LENGTH_OF_LITERAL_STRING(MISC::GET_ONSCREEN_KEYBOARD_RESULT());`
 * `subStr = HUD::_GET_TEXT_SUBSTRING_SAFE(MISC::GET_ONSCREEN_KEYBOARD_RESULT(), 0, strLen, 63);`
 * --
 * "fm_race_creator.ysc", line 85115:
 * // parameters modified for clarity
 * BOOL sub_8e5aa(char *text, int length) {
 * for (i = 0; i <= (length - 2); i += 1) {
 * `if (!MISC::ARE_STRINGS_EQUAL(HUD::_GET_TEXT_SUBSTRING_SAFE(text, i, i + 1, 1), " ")) {`
 * return FALSE;
 * }
 * }
 * return TRUE;
 * }
 * ```
 * Hash: 0xB2798643312205C5 | ApiSet: undefined
 */
export declare function getTextSubstringSafe(text: string, position: number, length: number, maxLength: number): string;
/**
 * Hash: 0x186E5D252FA50E7D | ApiSet: undefined
 */
export declare function getWaypointBlipEnumId(): number;
/**
 * ```
 * Returns a substring that is between two specified positions. The length of the string will be calculated using (endPosition - startPosition).
 * Example:
 * // Get "STRING" text from "MY_STRING"
 * `subStr = HUD::_GET_TEXT_SUBSTRING_SLICE("MY_STRING", 3, 9);`
 * // Overflows are possibly replaced with underscores (needs verification)
 * `subStr = HUD::_GET_TEXT_SUBSTRING_SLICE("MY_STRING", 3, 10); // "STRING_"?`
 * ```
 * Hash: 0xCE94AEBA5D82908A | ApiSet: undefined
 */
export declare function getTextSubstringSlice(text: string, startPosition: number, endPosition: number): string;
/**
 * ```
 * p1 is either 1 or 2 in the PC scripts.
 * ```
 * This native is used to "give"/duplicate a player ped to a frontend menu as configured via the `ACTIVATE_FRONTEND_MENU` native, you first must utilize the [CLONE_PED](#\_0xEF29A16337FACADB) to clone said ped.
 * Hash: 0xAC0BFBDC3BE00E14 | ApiSet: undefined
 */
export declare function givePedToPauseMenu(ped: number | Ped, p1: number): void;
/**
 * ```
 * HIDE_*_THIS_FRAME
 * Hides area and vehicle name HUD components for one frame.
 * ```
 * Hash: 0xA4DEDE28B1814289 | ApiSet: undefined
 */
export declare function hideAreaAndVehicleNameThisFrame(): void;
/**
 * ```
 * HAS_*
 * ```
 * Hash: 0xA277800A9EAE340E | ApiSet: undefined
 */
export declare function hasDirectorModeBeenTriggered(): boolean;
/**
 * Hash: 0x02245FE4BED318B8 | ApiSet: undefined
 */
export declare function hasAdditionalTextLoaded(slot: number): boolean;
/**
 * Hash: 0x4B0311D3CDC4648F | ApiSet: undefined
 */
export declare function hideLoadingOnFadeThisFrame(): void;
/**
 * ```
 * Checks if the specified gxt has loaded into the passed slot.
 * ```
 * Hash: 0xADBF060E2B30C5BC | ApiSet: undefined
 */
export declare function hasThisAdditionalTextLoaded(gxt: string, slot: number): boolean;
/**
 * Hash: 0xD46923FC481CA285 | ApiSet: undefined
 */
export declare function hideHelpTextThisFrame(): void;
/**
 * ```
 * I think this works, but seems to prohibit switching to other weapons (or accessing the weapon wheel)
 * ```
 * Hash: 0x719FF505F097FD20 | ApiSet: undefined
 */
export declare function hideHudAndRadarThisFrame(): void;
/**
 * Hash: 0x20FE7FDFEEAD38C0 | ApiSet: undefined
 */
export declare function hideMinimapInteriorMapThisFrame(): void;
/**
 * Hash: 0xE374C498D8BADC14 | ApiSet: undefined
 */
export declare function hideScriptedHudComponentThisFrame(id: number): void;
/**
 * This function hides various HUD (Heads-up Display) components.
 * Listed below are the integers and the corresponding HUD component.
 * *   1 : WANTED_STARS
 * *   2 : WEAPON_ICON
 * *   3 : CASH
 * *   4 : MP_CASH
 * *   5 : MP_MESSAGE
 * *   6 : VEHICLE_NAME
 * *   7 : AREA_NAME
 * *   8 : VEHICLE_CLASS
 * *   9 : STREET_NAME
 * *   10 : HELP_TEXT
 * *   11 : FLOATING_HELP_TEXT\_1
 * *   12 : FLOATING_HELP_TEXT\_2
 * *   13 : CASH_CHANGE
 * *   14 : RETICLE
 * *   15 : SUBTITLE_TEXT
 * *   16 : RADIO_STATIONS
 * *   17 : SAVING_GAME
 * *   18 : GAME_STREAM
 * *   19 : WEAPON_WHEEL
 * *   20 : WEAPON_WHEEL_STATS
 * *   21 : HUD_COMPONENTS
 * *   22 : HUD_WEAPONS
 * These integers also work for the [`SHOW_HUD_COMPONENT_THIS_FRAME`](#\_0x0B4DF1FA60C0E664) native, but instead shows the HUD Component.
 * Hash: 0x6806C51AD12B83B8 | ApiSet: undefined
 */
export declare function hideHudComponentThisFrame(id: number): void;
/**
 * Hash: 0x5FBAE526203990C9 | ApiSet: undefined
 */
export declare function hideMinimapExteriorMapThisFrame(): void;
/**
 * Hash: 0x532CFF637EF80148 | ApiSet: undefined
 */
export declare function hideNumberOnBlip(blip: number): void;
/**
 * ```
 * Set the active slotIndex in the wheel weapon to the slot associated with the provided Weapon hash
 * ```
 * Hash: 0x72C1056D678BB7D8 | ApiSet: undefined
 */
export declare function hudSetWeaponWheelTopSlot(weaponHash: number | string): void;
/**
 * ```
 * Forces the weapon wheel to show/hide.
 * ```
 * Hash: 0xEB354E5376BC81A7 | ApiSet: undefined
 */
export declare function hudForceWeaponWheel(show: boolean): void;
/**
 * Displays loading screen tips, requires `_0x56C8B608CFD49854` to be called beforehand.
 * Hash: 0x488043841BBE156F | ApiSet: undefined
 */
export declare function hudDisplayLoadingScreenTips(): void;
/**
 * ```
 * Returns the weapon hash active in a specific weapon wheel slotList
 * ```
 * Hash: 0xA13E93403F26C812 | ApiSet: undefined
 */
export declare function hudWeaponWheelGetSlotHash(weaponTypeIndex: number): number;
/**
 * ```
 * Sets a global that disables many weapon input tasks (shooting, aiming, etc.). Does not work with vehicle weapons, only used in selector.ysc
 * ```
 * Hash: 0x14C9FDCC41F81F63 | ApiSet: undefined
 */
export declare function hudWeaponWheelIgnoreControlInput(toggle: boolean): void;
/**
 * ```
 * Returns the weapon hash to the selected/highlighted weapon in the wheel
 * ```
 * Hash: 0xA48931185F0536FE | ApiSet: undefined
 */
export declare function hudWeaponWheelGetSelectedHash(): number;
/**
 * Hash: 0xE41CA53051197A27 | ApiSet: undefined
 */
export declare function isBlipOnMinimap(blip: number): boolean;
/**
 * Hash: 0xA5E41FD83AD6CEF0 | ApiSet: undefined
 */
export declare function isBlipFlashing(blip: number): boolean;
/**
 * Hash: 0x3BAB9A4E4F2FF5C7 | ApiSet: undefined
 */
export declare function isFrontendReadyForControl(): boolean;
/**
 * ```
 * Calling this each frame, stops the player from receiving a weapon via the weapon wheel.
 * ```
 * Hash: 0x0AFC4AF510774B47 | ApiSet: undefined
 */
export declare function hudWeaponWheelIgnoreSelection(): void;
/**
 * Hash: 0x2432784ACA090DA4 | ApiSet: undefined
 */
export declare function isFloatingHelpTextOnScreen(hudIndex: number): boolean;
/**
 * Hash: 0xDA5F8727EB75B926 | ApiSet: undefined
 */
export declare function isBlipShortRange(blip: number): boolean;
/**
 * Hash: 0x4167EFE0527D706E | ApiSet: undefined
 */
export declare function isHoveringOverMissionCreatorBlip(): boolean;
/**
 * Hash: 0x4D79439A6B55AC67 | ApiSet: undefined
 */
export declare function isHelpMessageBeingDisplayed(): boolean;
/**
 * Hash: 0x7984C03AA5CC2F41 | ApiSet: undefined
 */
export declare function isMessageBeingDisplayed(): boolean;
/**
 * Hash: 0xDAD37F45428801AE | ApiSet: undefined
 */
export declare function isHelpMessageOnScreen(): boolean;
/**
 * **Note:** The buttons need to support mouse (with the `TOGGLE_MOUSE_SUPPORT` scaleform movie method) for it to return `true`.
 * Hash: 0x3D9ACB1EB139E702 | ApiSet: undefined
 */
export declare function isMouseRolledOverInstructionalButtons(): boolean;
/**
 * Hash: 0x327EDEEEAC55C369 | ApiSet: undefined
 */
export declare function isHelpMessageFadingOut(): boolean;
/**
 * Hash: 0x1930DFA731813EC4 | ApiSet: undefined
 */
export declare function isHudPreferenceSwitchedOn(): boolean;
/**
 * ```
 * Full list of components below
 * HUD = 0;
 * HUD_WANTED_STARS = 1;
 * HUD_WEAPON_ICON = 2;
 * HUD_CASH = 3;
 * HUD_MP_CASH = 4;
 * HUD_MP_MESSAGE = 5;
 * HUD_VEHICLE_NAME = 6;
 * HUD_AREA_NAME = 7;
 * HUD_VEHICLE_CLASS = 8;
 * HUD_STREET_NAME = 9;
 * HUD_HELP_TEXT = 10;
 * HUD_FLOATING_HELP_TEXT_1 = 11;
 * HUD_FLOATING_HELP_TEXT_2 = 12;
 * HUD_CASH_CHANGE = 13;
 * HUD_RETICLE = 14;
 * HUD_SUBTITLE_TEXT = 15;
 * HUD_RADIO_STATIONS = 16;
 * HUD_SAVING_GAME = 17;
 * HUD_GAME_STREAM = 18;
 * HUD_WEAPON_WHEEL = 19;
 * HUD_WEAPON_WHEEL_STATS = 20;
 * MAX_HUD_COMPONENTS = 21;
 * MAX_HUD_WEAPONS = 22;
 * MAX_SCRIPTED_HUD_COMPONENTS = 141;
 * ```
 * Hash: 0xBC4C9EA5391ECC0D | ApiSet: undefined
 */
export declare function isHudComponentActive(id: number): boolean;
/**
 * ```
 * Returns whether or not the text chat (MULTIPLAYER_CHAT Scaleform component) is active.
 * ```
 * Hash: 0xB118AF58B5F332A1 | ApiSet: undefined
 */
export declare function isMultiplayerChatActive(): boolean;
/**
 * Hash: 0x4E929E7A5796FD26 | ApiSet: undefined
 */
export declare function isMpGamerTagActive(gamerTagId: number): boolean;
/**
 * Hash: 0xA86478C6958735C5 | ApiSet: undefined
 */
export declare function isHudHidden(): boolean;
/**
 * Returns the same as `IS_SOCIAL_CLUB_ACTIVE`.
 * Hash: 0x6F72CD94F7B5B68C | ApiSet: undefined
 */
export declare function isOnlinePoliciesMenuActive(): boolean;
/**
 * Hash: 0x9049FE339D5F6F6F | ApiSet: undefined
 */
export declare function isPausemapInInteriorMode(): boolean;
/**
 * Hash: 0xAF754F20EB5CD51A | ApiSet: undefined
 */
export declare function isMinimapRendering(): boolean;
/**
 * Hash: 0x595B5178E412E199 | ApiSet: undefined
 */
export declare function isMpGamerTagFree(gamerTagId: number): boolean;
/**
 * Hash: 0x6E0EB3EB47C8D7AA | ApiSet: undefined
 */
export declare function isMpGamerTagMovieActive(): boolean;
/**
 * Hash: 0x09C0403ED9A751C2 | ApiSet: undefined
 */
export declare function isScriptedHudComponentHiddenThisFrame(id: number): boolean;
/**
 * Hash: 0x4E3CD0EF8A489541 | ApiSet: undefined
 */
export declare function isNavigatingMenuContent(): any;
/**
 * Hash: 0x113750538FA31298 | ApiSet: undefined
 */
export declare function isNamedRendertargetLinked(modelHash: number | string): boolean;
/**
 * Hash: 0x26F49BF3381D933D | ApiSet: undefined
 */
export declare function isMissionCreatorBlip(blip: number): boolean;
/**
 * Hash: 0x157F93B036700462 | ApiSet: undefined
 */
export declare function isRadarHidden(): boolean;
/**
 * Hash: 0x1C491717107431C7 | ApiSet: undefined
 */
export declare function isPauseMenuRestarting(): boolean;
/**
 * ```
 * IS_WARNING_MESSAGE_*
 * ```
 * Hash: 0xAF42195A42C63BBA | ApiSet: undefined
 */
export declare function isWarningMessageActive2(): boolean;
/**
 * Hash: 0x78DCDC15C9F116B4 | ApiSet: undefined
 */
export declare function isNamedRendertargetRegistered(name: string): boolean;
/**
 * Hash: 0x9EB6522EA68F22FE | ApiSet: undefined
 */
export declare function isRadarPreferenceSwitchedOn(): boolean;
/**
 * Hash: 0x9135584D09A3437E | ApiSet: undefined
 */
export declare function isReportugcMenuOpen(): boolean;
/**
 * ```
 * Locks the minimap to the specified angle in integer degrees.
 * angle: The angle in whole degrees. If less than 0 or greater than 360, unlocks the angle.
 * ```
 * Hash: 0x299FAEBB108AE05B | ApiSet: undefined
 */
export declare function lockMinimapAngle(angle: number): void;
/**
 * Hash: 0xC406BE343FC4B9AF | ApiSet: undefined
 */
export declare function isSocialClubActive(): boolean;
/**
 * ```
 * Locks the minimap to the specified world position.
 * ```
 * Hash: 0x1279E861A329E73F | ApiSet: undefined
 */
export declare function lockMinimapPosition(x: number, y: number): void;
/**
 * Hash: 0xB0034A223497FFCB | ApiSet: undefined
 */
export declare function isPauseMenuActive(): boolean;
/**
 * Hash: 0xAD6DACA4BA53E0A4 | ApiSet: undefined
 */
export declare function isSubtitlePreferenceSwitchedOn(): boolean;
/**
 * Hash: 0xDD100EB17A94FF65 | ApiSet: undefined
 */
export declare function isScriptedHudComponentActive(id: number): boolean;
/**
 * Hash: 0x0CF54F20DE43879C | ApiSet: undefined
 */
export declare function _0x0CF54F20DE43879C(p0: any): void;
/**
 * ```
 * HAS_S*
 * ```
 * Hash: 0x214CD562A939246A | ApiSet: undefined
 */
export declare function _0x214CD562A939246A(): boolean;
/**
 * Hash: 0x1DD1F58F493F1DA5 | ApiSet: undefined
 */
export declare function isWaypointActive(): boolean;
/**
 * ```
 * SET_F*
 * ```
 * Hash: 0x2790F4B17D098E26 | ApiSet: undefined
 */
export declare function _0x2790F4B17D098E26(toggle: boolean): void;
/**
 * Returns true if a Warning Message or ReportUGC menu is active.
 * Hash: 0xE18B138FABC53103 | ApiSet: undefined
 */
export declare function isWarningMessageActive(): boolean;
/**
 * Hash: 0x2E22FEFA0100275E | ApiSet: undefined
 */
export declare function _0x2E22FEFA0100275E(): boolean;
/**
 * Hash: 0x41350B4FC28E3941 | ApiSet: undefined
 */
export declare function _0x41350B4FC28E3941(p0: boolean): void;
/**
 * Hash: 0x8B6817B71B85EBF0 | ApiSet: undefined
 */
export declare function isStreamingAdditionalText(p0: number): boolean;
/**
 * ```
 * Not present in retail version of the game, actual definiton seems to be
 * _LOG_DEBUG_INFO(const char* category, const char* debugText);
 * ```
 * Hash: 0x2162C446DFDF38FD | ApiSet: undefined
 */
export declare function logDebugInfo(p0: string): void;
/**
 * When this native returns true, do not call [`SET_MP_GAMER_TAG_NAME`](#\_0xDEA2B8283BAA3944).
 * Hash: 0xEB709A36958ABE0D | ApiSet: undefined
 */
export declare function isUpdatingMpGamerTagNameAndCrewDetails(playerId: number): boolean;
/**
 * Hash: 0x4B5B620C9B59ED34 | ApiSet: undefined
 */
export declare function _0x4B5B620C9B59ED34(p0: any, p1: any): void;
/**
 * Hash: 0xF6C09E276AEB3F2D | ApiSet: undefined
 */
export declare function linkNamedRendertarget(modelHash: number | string): void;
/**
 * Hash: 0x593FEAE1F73392D4 | ApiSet: undefined
 */
export declare function _0x593FEAE1F73392D4(): any;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x0C698D8F099174C7 | ApiSet: undefined
 */
export declare function _0x0C698D8F099174C7(p0: any): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x211C4EF450086857 | ApiSet: undefined
 */
export declare function _0x211C4EF450086857(): void;
/**
 * ```
 * SET_*
 * ```
 * Hash: 0x04655F9D075D0AE5 | ApiSet: undefined
 */
export declare function _0x04655F9D075D0AE5(toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x243296A510B562B6 | ApiSet: undefined
 */
export declare function _0x243296A510B562B6(): void;
/**
 * Hash: 0x24A49BEAF468DC90 | ApiSet: undefined
 */
export declare function _0x24A49BEAF468DC90(p0: any, p2: any, p3: any, p4: any): [boolean, any];
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x35A3CD97B2C0A6D2 | ApiSet: undefined
 */
export declare function _0x35A3CD97B2C0A6D2(blip: number): void;
/**
 * Hash: 0x8F08017F9D7C47BD | ApiSet: undefined
 */
export declare function _0x8F08017F9D7C47BD(p0: any, p2: any): [boolean, any];
/**
 * ```
 * FORCE_*
 * ```
 * Hash: 0x57D760D55F54E071 | ApiSet: undefined
 */
export declare function _0x57D760D55F54E071(p0: number): void;
/**
 * Correct native name lies between SET_BLIP_SPRITE and SET_RADIUS_BLIP_EDGE alphabetically.
 * Hash: 0x2C9F302398E13141 | ApiSet: undefined
 */
export declare function _0x2C9F302398E13141(blip: number, p1: any): void;
/**
 * Hash: 0x66E7CB63C97B7D20 | ApiSet: undefined
 */
export declare function _0x66E7CB63C97B7D20(): any;
/**
 * GET_BLIP_\*
 * Seems to always return 0 from what I can tell. I've tried a lot of different blip related natives and it always seems to return 0. Decompiled scripts always pass a blip handle as p0.
 * Hash: 0x2C173AE2BDB9385E | ApiSet: undefined
 */
export declare function _0x2C173AE2BDB9385E(blip: number): number;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x55F5A5F07134DE60 | ApiSet: undefined
 */
export declare function _0x55F5A5F07134DE60(): void;
/**
 * Hash: 0xA238192F33110615 | ApiSet: undefined
 */
export declare function _0xA238192F33110615(): [boolean, number, number, number];
/**
 * ```
 * Displays "normal" notifications again after calling `_0x56C8B608CFD49854` (those that were drawn before calling this native too), though those will have a weird offset and stay on screen forever (tested with notifications created from same script).
 * ```
 * Hash: 0xADED7F5748ACAFE6 | ApiSet: undefined
 */
export declare function thefeedCommentTeleportPoolOff(): void;
/**
 * Hash: 0x7C226D5346D4D10A | ApiSet: undefined
 */
export declare function _0x7C226D5346D4D10A(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x8410C5E0CD847B9D | ApiSet: undefined
 */
export declare function _0x8410C5E0CD847B9D(): void;
/**
 * ```
 * Appears to return whether the player is using the pause menu store. Can't be sure though.
 * ```
 * Hash: 0x2F057596F2BD0061 | ApiSet: undefined
 */
export declare function _0x2F057596F2BD0061(): boolean;
/**
 * ```
 * Getter for 0xCD74233600C4EA6B
 * GET_*
 * ```
 * Hash: 0xC2D2AD9EAAE265B8 | ApiSet: undefined
 */
export declare function _0xC2D2AD9EAAE265B8(): boolean;
/**
 * ```
 * `UI::_817B86108EB94E51(1, &g_189F36._f10CD1[0\/\*16\*\/], &g_189F36._f10CD1[1\/\*16\*\/], &g_189F36._f10CD1[2\/\*16\*\/], &g_189F36._f10CD1[3\/\*16\*\/], &g_189F36._f10CD1[4\/\*16\*\/], &g_189F36._f10CD1[5\/\*16\*\/], &g_189F36._f10CD1[6\/\*16\*\/], &g_189F36._f10CD1[7\/\*16\*\/]);`
 * ```
 * Hash: 0x817B86108EB94E51 | ApiSet: undefined
 */
export declare function _0x817B86108EB94E51(p0: boolean): [any, any, any, any, any, any, any, any];
/**
 * Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
 * Hash: 0x583049884A2EEE3C | ApiSet: undefined
 */
export declare function thefeedForceRenderOff(): void;
/**
 * SET_C\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x9FCB3CBFB3EAD69A | ApiSet: undefined
 */
export declare function _0x9FCB3CBFB3EAD69A(p0: number, p1: number): void;
/**
 * Hash: 0xC594B315EDF2D4AF | ApiSet: undefined
 */
export declare function _0xC594B315EDF2D4AF(ped: number | Ped): void;
/**
 * Hash: 0xA17784FCA9548D15 | ApiSet: undefined
 */
export declare function _0xA17784FCA9548D15(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0xB552929B85FC27EC | ApiSet: undefined
 */
export declare function _0xB552929B85FC27EC(p0: any, p1: any): void;
/**
 * Hash: 0xCA6B2F7CE32AB653 | ApiSet: undefined
 */
export declare function _0xCA6B2F7CE32AB653(p0: any, p2: any): [boolean, any];
/**
 * Hash: 0x62E849B7EB28E770 | ApiSet: undefined
 */
export declare function _0x62E849B7EB28E770(p0: boolean): void;
/**
 * SET_C\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xB7B873520C84C118 | ApiSet: undefined
 */
export declare function _0xB7B873520C84C118(): void;
/**
 * ```
 * FORCE_*
 * ```
 * Hash: 0xBA8D65C1C65702E5 | ApiSet: undefined
 */
export declare function _0xBA8D65C1C65702E5(toggle: boolean): void;
/**
 * ```
 * IS_*
 * ```
 * Hash: 0x801879A9B4F4B2FB | ApiSet: undefined
 */
export declare function _0x801879A9B4F4B2FB(): boolean;
/**
 * Hash: 0xD1942374085C8469 | ApiSet: undefined
 */
export declare function _0xD1942374085C8469(p0: any): void;
/**
 * Hash: 0xC8E1071177A23BE5 | ApiSet: undefined
 */
export declare function _0xC8E1071177A23BE5(): [boolean, any, any, any];
/**
 * Hash: 0xDAF87174BE7454FF | ApiSet: undefined
 */
export declare function _0xDAF87174BE7454FF(p0: any): boolean;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0xD2049635DEB9C375 | ApiSet: undefined
 */
export declare function _0xD2049635DEB9C375(): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xE4C3B169876D33D7 | ApiSet: undefined
 */
export declare function _0xE4C3B169876D33D7(p0: any): void;
/**
 * Hash: 0xE67C6DFD386EA5E7 | ApiSet: undefined
 */
export declare function _0xE67C6DFD386EA5E7(p0: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xEB81A3DADD503187 | ApiSet: undefined
 */
export declare function _0xEB81A3DADD503187(): void;
/**
 * Hash: 0x805D7CBB36FD6C4C | ApiSet: undefined
 */
export declare function openOnlinePoliciesMenu(): void;
/**
 * ```
 * GET_F*
 * ```
 * Hash: 0x98C3CF913D895111 | ApiSet: undefined
 */
export declare function _0x98C3CF913D895111(string: string, length: number): string;
/**
 * Hash: 0xF13FE2A80C05C561 | ApiSet: undefined
 */
export declare function _0xF13FE2A80C05C561(): boolean;
/**
 * ```
 * NativeDB Added Parameter 9: int hudColour
 * NativeDB Introduced: v1290
 * ```
 * Sets the 'data' for a cone for a blip
 * See [here](https://docs.fivem.net/docs/game-references/hud-colors/) for the hud colours for the cone
 * Name in scripts: `SETUP_FAKE_CONE_DATA()`
 * For people who don't know how to convert degrees to radians and the other way around:
 * ```
 * degrees = radians * 180 / pi
 * radians = degrees * pi / 180
 * ```
 * Hash: 0xF83D0FEBE75E62C9 | ApiSet: undefined
 */
export declare function _0xF83D0FEBE75E62C9(blip: number, p1: any, p2: any, width: number, p4: any, length: number, heading: number, p7: any): void;
/**
 * ```
 * Setter for 0xC2D2AD9EAAE265B8
 * SET_*
 * ```
 * Hash: 0xCD74233600C4EA6B | ApiSet: undefined
 */
export declare function _0xCD74233600C4EA6B(toggle: boolean): void;
/**
 * Uses the `SOCIAL_CLUB2` scaleform.
 * Hash: 0x75D3691713C3B05A | ApiSet: undefined
 */
export declare function openSocialClubMenu(): void;
/**
 * Hash: 0xDE03620F8703A9DF | ApiSet: undefined
 */
export declare function _0xDE03620F8703A9DF(): any;
/**
 * Hash: 0xF47E567B3630DD12 | ApiSet: undefined
 */
export declare function overrideMultiplayerChatColour(p0: number, hudColor: number): void;
/**
 * Hash: 0x6A1738B4323FE2D9 | ApiSet: undefined
 */
export declare function overrideMultiplayerChatPrefix(gxtEntryHash: number | string): void;
/**
 * Hash: 0x444D8CF241EC25C5 | ApiSet: undefined
 */
export declare function pauseMenuDeactivateContext(contextHash: number | string): void;
/**
 * Hash: 0x84698AB38D0C6636 | ApiSet: undefined
 */
export declare function pauseMenuIsContextActive(contextHash: number | string): boolean;
/**
 * Hash: 0xF284AC67940C6812 | ApiSet: undefined
 */
export declare function _0xF284AC67940C6812(): any;
/**
 * Activates the specified frontend menu context.
 * pausemenu.xml defines some specific menu options using 'context'. Context is basically a 'condition'.
 * The `*ALL*` part of the context means that whatever is being defined, will be active when any or all of those conditions after `*ALL*` are met.
 * The `*NONE*` part of the context section means that whatever is being defined, will NOT be active if any or all of the conditions after `*NONE*` are met.
 * This basically allows you to hide certain menu sections, or things like instructional buttons.
 * See the old description below for more info.
 * <strong></strong>
 * > Seems to add/set the current menu context (to show/hide buttons?)
 * > Pausemenu.xml:
 * > `<Contexts>*ALL*, DISPLAY_CORONA_BUTTONS, *NONE*, BET_LOCKED, BET_AVAILABLE, SCROLL_OPTION</Contexts>`
 * > Code:
 * >
 * > ```
 * > if (...) {
 * >     sub_bbd34(a_0, 0, "FM_BET_HELP");
 * `>     UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_available}); // This native`
 * `>     UI::OBJECT_DECAL_TOGGLE(${bet_locked});`
 * > } else {
 * >     sub_bbd34(a_0, 0, "");
 * `>     UI::OBJECT_DECAL_TOGGLE(${bet_available});`
 * `>     UI::PAUSE_MENU_ACTIVATE_CONTEXT(${bet_locked}); // This native`
 * > }
 * > ```
 * >
 * > OBJECT_DECAL_TOGGLE seems to remove a context, It also has a hash collision
 * > // Old
 * > Scripts do not make this native's purpose clear. However, this native most likely has something to do with decals since in nearly every instance, "OBJECT_DECAL_TOGGLE" is called prior.
 * Hash: 0xDD564BDD0472C936 | ApiSet: undefined
 */
export declare function pauseMenuActivateContext(hash: number | string): void;
/**
 * Hash: 0x2A25ADC48F87841F | ApiSet: undefined
 */
export declare function pauseMenuIsContextMenuActive(): any;
/**
 * If mouse is hovering on a slot, it returns uniqueid of that slot, else it returns -1.
 * Hash: 0x13C4B962653A5280 | ApiSet: undefined
 */
export declare function pauseMenuGetUniqueIdOfMouseHoveredSlot(): number;
/**
 * ```
 * Shows a menu for reporting UGC content.
 * ```
 * Hash: 0x523A590C1A3CC0D3 | ApiSet: undefined
 */
export declare function openReportugcMenu(): void;
/**
 * Disables the loading spinner in Pause Menu when switching from one header tab to another.
 * Hash: 0x9245E81072704B8A | ApiSet: undefined
 */
export declare function pauseMenuDisableBusyspinner(toggle: boolean): void;
/**
 * Updates instructional buttons in Pause Menu after menu contexts have been toggled. p0 purpose is currently unknown, only 0 is used in scripts.
 * Hash: 0x4895BDEA16E7C080 | ApiSet: undefined
 */
export declare function pauseMenuRedrawInstructionalButtons(p0: number): void;
/**
 * If mouse is hovering on a slot, it returns the slot's index, else it returns -1.
 * Hash: 0x359AF31A4B52F5ED | ApiSet: undefined
 */
export declare function pauseMenuGetIndexOfMouseHoveredSlot(): number;
/**
 * Forces the Pause Menu to back out of unique pages such as Awards, Unlocks, Key Bindings etc
 * Hash: 0xCDCA26E80FAECB8F | ApiSet: undefined
 */
export declare function pauseMenuceptionTheKick(): void;
/**
 * Sets a loading icon in the pause menu.
 * Hash: 0xC78E239AC5B2DDB9 | ApiSet: undefined
 */
export declare function pauseMenuSetBusySpinner(bVisible: boolean, iColumnID: number, iSpinnerIndex: number): void;
/**
 * Shows this warning message when trying to switch pause menu header tabs: https://i.imgur.com/8qmfztu.png
 * Hash: 0xF06EBB91A81E09E3 | ApiSet: undefined
 */
export declare function pauseMenuSetWarnOnTabChange(setWarn: boolean): void;
/**
 * Sets current pause menu page/component to the specified value.
 * Available page IDs: https://pastebin.com/qxuhwjPT
 * Hash: 0x77F16B447824DA6C | ApiSet: undefined
 */
export declare function pauseMenuceptionGoDeeper(pageId: number): void;
/**
 * Toggles pause menu map rendering.
 * Hash: 0x2DE6C5E2E996F178 | ApiSet: undefined
 */
export declare function pauseToggleFullscreenMap(enabled: boolean): void;
/**
 * ```
 * If toggle is true, the map is shown in full screen
 * If toggle is false, the map is shown in normal mode
 * ```
 * Hash: 0x5354C5BA2EA868A4 | ApiSet: undefined
 */
export declare function raceGalleryFullscreen(toggle: boolean): void;
/**
 * Hash: 0x742D6FD43115AF73 | ApiSet: undefined
 */
export declare function pulseBlip(blip: number): void;
/**
 * Enables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard if they were disabled using the native below.
 * To disable the keys, use [`0xEC9264727EEC0F28`](#\_0xEC9264727EEC0F28).
 * Hash: 0x14621BB1DF14E2B2 | ApiSet: undefined
 */
export declare function releaseControlOfFrontend(): void;
/**
 * ```
 * Add a BLIP_GALLERY at the specific coordinate. Used in fm_maintain_transition_players to display race track points.
 * ```
 * Hash: 0x551DF99658DB6EE8 | ApiSet: undefined
 */
export declare function raceGalleryAddBlip(position: Vector3): any;
/**
 * Hash: 0xC65AB383CD91DF98 | ApiSet: undefined
 */
export declare function preloadBusyspinner(): void;
/**
 * Hash: 0x81FA173F170560D1 | ApiSet: undefined
 */
export declare function refreshWaypoint(): void;
/**
 * ```
 * Sets the sprite of the next BLIP_GALLERY blip, values used in the native scripts: 143 (ObjectiveBlue), 144 (ObjectiveGreen), 145 (ObjectiveRed), 146 (ObjectiveYellow).
 * ```
 * Hash: 0x1EAE6DD17B7A5EFA | ApiSet: undefined
 */
export declare function raceGalleryNextBlipSprite(spriteId: number): void;
/**
 * Removes the gamer tag associated with the provided ID. This does not happen instantly. Use [IS_MP_GAMER_TAG_FREE](#\_0x595B5178E412E199) to determine when the ID is free for reuse.
 * Hash: 0x31698AA80E0223F8 | ApiSet: undefined
 */
export declare function removeMpGamerTag(gamerTagId: number): void;
/**
 * Hash: 0x57D9C12635E25CE3 | ApiSet: undefined
 */
export declare function registerNamedRendertarget(name: string, p1: boolean): boolean;
/**
 * Hash: 0xE9F6FFE837354DD4 | ApiSet: undefined
 */
export declare function releaseNamedRendertarget(name: string): boolean;
/**
 * ```
 * Removes multiplayer cash hud each frame
 * ```
 * Hash: 0x968F270E39141ECA | ApiSet: undefined
 */
export declare function removeMultiplayerHudCash(): void;
/**
 * Forces the map menu to reload.
 * Hash: 0x2916A928514C9827 | ApiSet: undefined
 */
export declare function reloadMapMenu(): void;
/**
 * Removes the blip from your map.
 * **Note:** This function only works on the script that created the blip, if you wish to remove blips created by other scripts, see [`SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT`](#\_0x86A652570E5F25DD).
 * Hash: 0x86A652570E5F25DD | ApiSet: undefined
 */
export declare function removeBlip(blip: number | Entity): void;
/**
 * Hash: 0x6EF54AB721DC6242 | ApiSet: undefined
 */
export declare function removeWarningMessageListItems(): void;
/**
 * Hash: 0xC7C6789AA1CFEDD0 | ApiSet: undefined
 */
export declare function removeMultiplayerBankCash(): void;
/**
 * Hash: 0x95CF81BD06EE1887 | ApiSet: undefined
 */
export declare function removeMultiplayerWalletCash(): void;
/**
 * Hud colors can be found [here](https://docs.fivem.net/docs/game-references/hud-colors/)
 * Hash: 0xF314CF4F0211894E | ApiSet: undefined
 */
export declare function replaceHudColourWithRgba(hudColorIndex: number, r: number, g: number, b: number, a: number): void;
/**
 * Changes the hud color at a given index (hudColorIndex) by another one (hudColorIndex2).
 * HUD colors can be found [here](https://docs.fivem.net/docs/game-references/hud-colors/)
 * Hash: 0x1CCC708F0F850613 | ApiSet: undefined
 */
export declare function replaceHudColour(hudColorIndex: number, hudColorIndex2: number): void;
/**
 * Hash: 0x6009F9F1AE90D8A6 | ApiSet: undefined
 */
export declare function requestAdditionalTextForDlc(gxt: string, slot: number): void;
/**
 * ```
 * Request a gxt into the passed slot.
 * ```
 * Hash: 0x71A78003C8E71424 | ApiSet: undefined
 */
export declare function requestAdditionalText(gxt: string, slot: number): void;
/**
 * Hash: 0xB99C4E4D9499DF29 | ApiSet: undefined
 */
export declare function resetGlobalActionscriptFlag(flagIndex: number): void;
/**
 * Hash: 0x450930E616475D0D | ApiSet: undefined
 */
export declare function resetHudComponentValues(id: number): void;
/**
 * Hash: 0x12782CE0A636E9F0 | ApiSet: undefined
 */
export declare function resetReticuleValues(): void;
/**
 * Changes the current frontend menu to the desired frontend menu version.
 * Hash: 0x10706DC6AD2D49C0 | ApiSet: undefined
 */
export declare function restartFrontendMenu(menuHash: number | string, highlightedTab: number): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x1DFEDD15019315A9 | ApiSet: undefined
 */
export declare function setAbilityBarVisibilityInMultiplayer(visible: boolean): void;
/**
 * Hash: 0x9969599CCFF5D85E | ApiSet: undefined
 */
export declare function setAbilityBarValue(value: number, maxValue: number): void;
/**
 * **NOTE:** This must be called before you open the text input box.
 * Hash: 0x577599CCED639CA2 | ApiSet: undefined
 */
export declare function setAllowCommaOnTextInput(allow: boolean): void;
/**
 * Allows the user to set a blip as friendly or enemy based on the toggle.
 * Hash: 0x6F6F290102C02AB4 | ApiSet: undefined
 */
export declare function setBlipAsFriendly(blip: number, toggle: boolean): void;
/**
 * Hash: 0xB203913733F27884 | ApiSet: undefined
 */
export declare function setBlipBright(blip: number, toggle: boolean): void;
/**
 * Toggles the big minimap state like in GTA:Online.
 * To get the current state of the minimap, use [`IS_BIGMAP_ACTIVE`](#\_0xFFF65C63).
 * Hash: 0x231C8F89D0539D8F | ApiSet: undefined
 */
export declare function setBigmapActive(toggleBigMap: boolean, showFullMap: boolean): void;
/**
 * Hash: 0x24AC0137444F9FD5 | ApiSet: undefined
 */
export declare function setBlipAsMissionCreatorBlip(blip: number, toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x889329C80FE5963C | ApiSet: undefined
 */
export declare function setAllowAbilityBarInMultiplayer(toggle: boolean): void;
/**
 * Sets whether or not the specified blip should only be displayed when nearby, or on the minimap.
 * Hash: 0xBE8BE4FE60E27B72 | ApiSet: undefined
 */
export declare function setBlipAsShortRange(blip: number, toggle: boolean): void;
/**
 * ```
 * Sets alpha-channel for blip color.
 * Example:
 * `Blip blip = HUD::ADD_BLIP_FOR_ENTITY(entity);`
 * `HUD::SET_BLIP_COLOUR(blip , 3);`
 * `HUD::SET_BLIP_ALPHA(blip , 64);`
 * ```
 * Hash: 0x45FF974EEE1C8734 | ApiSet: undefined
 */
export declare function setBlipAlpha(blip: number, alpha: number): void;
/**
 * Examples result:
 * ![](https://i.imgur.com/skY6vAJ.png)
 * <strong>index:</strong>
 * ```
 * 1 = No distance shown in legend
 * 2 = Distance shown in legend
 * 7 = "Other Players" category, also shows distance in legend
 * 10 = "Property" category
 * 11 = "Owned Property" category
 * 12 - 133 = Custom named categories
 * 134 - 254 = Custom unnamed categories
 * ```
 * `index` wraps around after 255.
 * Blips with categories `7`, `10`, `11` or `12 - 254` (custom categories) will all show under the specific categories listing in the map legend, regardless of sprite or name.
 * <strong>Legend entries</strong>
 * | index | Legend entry | Label |
 * | --- | --- | --- |
 * | 7 | Other Players | `BLIP_OTHPLYR` |
 * | 10 | Property | `BLIP_PROPCAT` |
 * | 11 | Owned Property | `BLIP_APARTCAT` |
 * | 12 - 133 | Custom categories (Named) | `BLIP_CAT_` + `index` |
 * | 134 - 254 | Custom categories (Unnamed) | `-` |
 * Hash: 0x234CDD44D996FD9A | ApiSet: undefined
 */
export declare function setBlipCategory(blip: number, index: number): void;
/**
 * <strong>displayId Behaviour</strong>
 * | display ID 	| Behaviour                                                   	|
 * |------------	|-------------------------------------------------------------	|
 * | 0          	| Doesn't show up, ever, anywhere.                            	|
 * | 1          	| Doesn't show up, ever, anywhere.                            	|
 * | 2          	| Shows on both main map and minimap. (Selectable on map)     	|
 * | 3          	| Shows on main map only. (Selectable on map)                 	|
 * | 4          	| Shows on main map only. (Selectable on map)                 	|
 * | 5          	| Shows on minimap only.                                      	|
 * | 6          	| Shows on both main map and minimap. (Selectable on map)     	|
 * | 7          	| Doesn't show up, ever, anywhere.                            	|
 * | 8          	| Shows on both main map and minimap. (Not selectable on map) 	|
 * | 9          	| Shows on minimap only.                                      	|
 * | 10         	| Shows on both main map and minimap. (Not selectable on map) 	|
 * Anything higher than 10 seems to be exactly the same as 10.
 * Rockstar seem to only use 0, 2, 3, 4, 5 and 8 in the decompiled scripts.
 * Hash: 0x9029B2F3DA924928 | ApiSet: undefined
 */
export declare function setBlipDisplay(blip: number, displayId: number): void;
/**
 * Hash: 0x03D7FB09E75D6B7E | ApiSet: undefined
 */
export declare function setBlipColour(blip: number, color: number): void;
/**
 * Hash: 0xAE2AF67E9D9AF65D | ApiSet: undefined
 */
export declare function setBlipCoords(blip: number, posX: number, posY: number, posZ: number): void;
/**
 * ```
 * Must be toggled before being queued for animation
 * ```
 * Hash: 0xC4278F70131BAA6D | ApiSet: undefined
 */
export declare function setBlipDisplayIndicatorOnBlip(blip: number, toggle: boolean): void;
/**
 * Hash: 0x54318C915D27E4CE | ApiSet: undefined
 */
export declare function setBlipHiddenOnLegend(blip: number, toggle: boolean): void;
/**
 * Hash: 0x2AEE8F8390D2298C | ApiSet: undefined
 */
export declare function setBlipFade(blip: number, opacity: number, duration: number): void;
/**
 * Sets the interval in milliseconds before flashing the blip.
 * Hash: 0xAA51DB313C010A7E | ApiSet: undefined
 */
export declare function setBlipFlashInterval(blip: number, interval: number): void;
/**
 * Flashes blip for time in milliseconds before stopping.
 * Hash: 0xD3CD6FD297AE87CC | ApiSet: undefined
 */
export declare function setBlipFlashTimer(blip: number, duration: number): void;
/**
 * Hash: 0x2E8D9498C56DD0D1 | ApiSet: undefined
 */
export declare function setBlipFlashesAlternate(blip: number, toggle: boolean): void;
/**
 * ```
 * Doesn't work if the label text of gxtEntry is >= 80.
 * ```
 * Hash: 0xEAA0FFE120D92784 | ApiSet: undefined
 */
export declare function setBlipNameFromTextFile(blip: number, gxtEntry: string): void;
/**
 * Hash: 0xE2590BC29220CEBB | ApiSet: undefined
 */
export declare function setBlipHighDetail(blip: number, toggle: boolean): void;
/**
 * Hash: 0xB14552383D39CE3E | ApiSet: undefined
 */
export declare function setBlipFlashes(blip: number, toggle: boolean): void;
/**
 * ```
 * See this topic for more details : gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-35?p=1069477935
 * ```
 * Hash: 0xAE9FC9EF6A9FAC79 | ApiSet: undefined
 */
export declare function setBlipPriority(blip: number, priority: number): void;
/**
 * Hash: 0x837155CD2F63DA09 | ApiSet: undefined
 */
export declare function setBlipRouteColour(blip: number, colour: number): void;
/**
 * ```
 * After some testing, looks like you need to use CEIL() on the rotation (vehicle/ped heading) before using it there.
 * ```
 * Hash: 0xF87683CDF73C3F6E | ApiSet: undefined
 */
export declare function setBlipRotation(blip: number, rotation: number): void;
/**
 * Hash: 0x127DE7B20C60A6A3 | ApiSet: undefined
 */
export declare function setBlipNameToPlayerName(blip: number, player: number | string | Player): void;
/**
 * Hash: 0xD38744167B2FA257 | ApiSet: undefined
 */
export declare function setBlipScale(blip: number, scale: number): void;
/**
 * ```
 * Enable / disable showing route for the Blip-object.
 * ```
 * Hash: 0x4F7D8A9BFB0B43E9 | ApiSet: undefined
 */
export declare function setBlipRoute(blip: number, enabled: boolean): void;
/**
 * Hash: 0x14892474891E09EB | ApiSet: undefined
 */
export declare function setBlipSecondaryColour(blip: number, r: number, g: number, b: number): void;
/**
 * See https://imgur.com/a/lLkEsMN
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xCD6524439909C979 | ApiSet: undefined
 */
export declare function setBlipScaleTransformation(blip: number, xScale: number, yScale: number): void;
/**
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * Hash: 0x13127EC3665E8EE1 | ApiSet: undefined
 */
export declare function setBlipShowCone(blip: number, toggle: boolean): void;
/**
 * ```
 * Does not require whole number/integer rotations.
 * ```
 * Hash: 0xA8B6AFDAC320AC87 | ApiSet: undefined
 */
export declare function setBlipSquaredRotation(blip: number, heading: number): void;
/**
 * ```
 * Makes a blip go small when off the minimap.
 * SET_BLIP_AS_*
 * ```
 * Hash: 0x2B6D467DAB714E8D | ApiSet: undefined
 */
export declare function setBlipShrink(blip: number, toggle: boolean): void;
/**
 * Hash: 0x39BBF623FC803EAC | ApiSet: undefined
 */
export declare function setColourOfNextTextComponent(hudColor: number): void;
/**
 * Set a custom color for the MP HUD, providing a way to customize the HUD's appearance similar to character color changes in MP.
 * ```cpp
 * enum eHudColours {
 * HUD_COLOUR_PURE_WHITE = 0,
 * HUD_COLOUR_WHITE = 1,
 * HUD_COLOUR_BLACK = 2,
 * HUD_COLOUR_GREY = 3,
 * HUD_COLOUR_GREYLIGHT = 4,
 * HUD_COLOUR_GREYDARK = 5,
 * HUD_COLOUR_RED = 6,
 * HUD_COLOUR_REDLIGHT = 7,
 * HUD_COLOUR_REDDARK = 8,
 * HUD_COLOUR_BLUE = 9,
 * HUD_COLOUR_BLUELIGHT = 10,
 * HUD_COLOUR_BLUEDARK = 11,
 * HUD_COLOUR_YELLOW = 12,
 * HUD_COLOUR_YELLOWLIGHT = 13,
 * HUD_COLOUR_YELLOWDARK = 14,
 * HUD_COLOUR_ORANGE = 15,
 * HUD_COLOUR_ORANGELIGHT = 16,
 * HUD_COLOUR_ORANGEDARK = 17,
 * HUD_COLOUR_GREEN = 18,
 * HUD_COLOUR_GREENLIGHT = 19,
 * HUD_COLOUR_GREENDARK = 20,
 * HUD_COLOUR_PURPLE = 21,
 * HUD_COLOUR_PURPLELIGHT = 22,
 * HUD_COLOUR_PURPLEDARK = 23,
 * HUD_COLOUR_PINK = 24,
 * HUD_COLOUR_STAR = 25,
 * HUD_COLOUR_STARLIGHT = 26,
 * HUD_COLOUR_STARDARK = 27,
 * HUD_COLOUR_NET_PLAYER1 = 28,
 * HUD_COLOUR_NET_PLAYER2 = 29,
 * HUD_COLOUR_NET_PLAYER3 = 30,
 * HUD_COLOUR_NET_PLAYER4 = 31,
 * HUD_COLOUR_NET_PLAYER5 = 32,
 * HUD_COLOUR_NET_PLAYER6 = 33,
 * HUD_COLOUR_NET_PLAYER7 = 34,
 * HUD_COLOUR_NET_PLAYER8 = 35,
 * HUD_COLOUR_NET_PLAYER9 = 36,
 * HUD_COLOUR_NET_PLAYER10 = 37,
 * HUD_COLOUR_NET_PLAYER11 = 38,
 * HUD_COLOUR_NET_PLAYER12 = 39,
 * HUD_COLOUR_NET_PLAYER13 = 40,
 * HUD_COLOUR_NET_PLAYER14 = 41,
 * HUD_COLOUR_NET_PLAYER15 = 42,
 * HUD_COLOUR_NET_PLAYER16 = 43,
 * HUD_COLOUR_NET_PLAYER17 = 44,
 * HUD_COLOUR_NET_PLAYER18 = 45,
 * HUD_COLOUR_NET_PLAYER19 = 46,
 * HUD_COLOUR_NET_PLAYER20 = 47,
 * HUD_COLOUR_NET_PLAYER21 = 48,
 * HUD_COLOUR_NET_PLAYER22 = 49,
 * HUD_COLOUR_NET_PLAYER23 = 50,
 * HUD_COLOUR_NET_PLAYER24 = 51,
 * HUD_COLOUR_NET_PLAYER25 = 52,
 * HUD_COLOUR_NET_PLAYER26 = 53,
 * HUD_COLOUR_NET_PLAYER27 = 54,
 * HUD_COLOUR_NET_PLAYER28 = 55,
 * HUD_COLOUR_NET_PLAYER29 = 56,
 * HUD_COLOUR_NET_PLAYER30 = 57,
 * HUD_COLOUR_NET_PLAYER31 = 58,
 * HUD_COLOUR_NET_PLAYER32 = 59,
 * HUD_COLOUR_SIMPLEBLIP_DEFAULT = 60,
 * HUD_COLOUR_MENU_BLUE = 61,
 * HUD_COLOUR_MENU_GREY_LIGHT = 62,
 * HUD_COLOUR_MENU_BLUE_EXTRA_DARK = 63,
 * HUD_COLOUR_MENU_YELLOW = 64,
 * HUD_COLOUR_MENU_YELLOW_DARK = 65,
 * HUD_COLOUR_MENU_GREEN = 66,
 * HUD_COLOUR_MENU_GREY = 67,
 * HUD_COLOUR_MENU_GREY_DARK = 68,
 * HUD_COLOUR_MENU_HIGHLIGHT = 69,
 * HUD_COLOUR_MENU_STANDARD = 70,
 * HUD_COLOUR_MENU_DIMMED = 71,
 * HUD_COLOUR_MENU_EXTRA_DIMMED = 72,
 * HUD_COLOUR_BRIEF_TITLE = 73,
 * HUD_COLOUR_MID_GREY_MP = 74,
 * HUD_COLOUR_NET_PLAYER1_DARK = 75,
 * HUD_COLOUR_NET_PLAYER2_DARK = 76,
 * HUD_COLOUR_NET_PLAYER3_DARK = 77,
 * HUD_COLOUR_NET_PLAYER4_DARK = 78,
 * HUD_COLOUR_NET_PLAYER5_DARK = 79,
 * HUD_COLOUR_NET_PLAYER6_DARK = 80,
 * HUD_COLOUR_NET_PLAYER7_DARK = 81,
 * HUD_COLOUR_NET_PLAYER8_DARK = 82,
 * HUD_COLOUR_NET_PLAYER9_DARK = 83,
 * HUD_COLOUR_NET_PLAYER10_DARK = 84,
 * HUD_COLOUR_NET_PLAYER11_DARK = 85,
 * HUD_COLOUR_NET_PLAYER12_DARK = 86,
 * HUD_COLOUR_NET_PLAYER13_DARK = 87,
 * HUD_COLOUR_NET_PLAYER14_DARK = 88,
 * HUD_COLOUR_NET_PLAYER15_DARK = 89,
 * HUD_COLOUR_NET_PLAYER16_DARK = 90,
 * HUD_COLOUR_NET_PLAYER17_DARK = 91,
 * HUD_COLOUR_NET_PLAYER18_DARK = 92,
 * HUD_COLOUR_NET_PLAYER19_DARK = 93,
 * HUD_COLOUR_NET_PLAYER20_DARK = 94,
 * HUD_COLOUR_NET_PLAYER21_DARK = 95,
 * HUD_COLOUR_NET_PLAYER22_DARK = 96,
 * HUD_COLOUR_NET_PLAYER23_DARK = 97,
 * HUD_COLOUR_NET_PLAYER24_DARK = 98,
 * HUD_COLOUR_NET_PLAYER25_DARK = 99,
 * HUD_COLOUR_NET_PLAYER26_DARK = 100,
 * HUD_COLOUR_NET_PLAYER27_DARK = 101,
 * HUD_COLOUR_NET_PLAYER28_DARK = 102,
 * HUD_COLOUR_NET_PLAYER29_DARK = 103,
 * HUD_COLOUR_NET_PLAYER30_DARK = 104,
 * HUD_COLOUR_NET_PLAYER31_DARK = 105,
 * HUD_COLOUR_NET_PLAYER32_DARK = 106,
 * HUD_COLOUR_BRONZE = 107,
 * HUD_COLOUR_SILVER = 108,
 * HUD_COLOUR_GOLD = 109,
 * HUD_COLOUR_PLATINUM = 110,
 * HUD_COLOUR_GANG1 = 111,
 * HUD_COLOUR_GANG2 = 112,
 * HUD_COLOUR_GANG3 = 113,
 * HUD_COLOUR_GANG4 = 114,
 * HUD_COLOUR_SAME_CREW = 115,
 * HUD_COLOUR_FREEMODE = 116,
 * HUD_COLOUR_PAUSE_BG = 117,
 * HUD_COLOUR_FRIENDLY = 118,
 * HUD_COLOUR_ENEMY = 119,
 * HUD_COLOUR_LOCATION = 120,
 * HUD_COLOUR_PICKUP = 121,
 * HUD_COLOUR_PAUSE_SINGLEPLAYER = 122,
 * HUD_COLOUR_FREEMODE_DARK = 123,
 * HUD_COLOUR_INACTIVE_MISSION = 124,
 * HUD_COLOUR_DAMAGE = 125,
 * HUD_COLOUR_PINKLIGHT = 126,
 * HUD_COLOUR_PM_MITEM_HIGHLIGHT = 127,
 * HUD_COLOUR_SCRIPT_VARIABLE = 128,
 * HUD_COLOUR_YOGA = 129,
 * HUD_COLOUR_TENNIS = 130,
 * HUD_COLOUR_GOLF = 131,
 * HUD_COLOUR_SHOOTING_RANGE = 132,
 * HUD_COLOUR_FLIGHT_SCHOOL = 133,
 * HUD_COLOUR_NORTH_BLUE = 134,
 * HUD_COLOUR_SOCIAL_CLUB = 135,
 * HUD_COLOUR_PLATFORM_BLUE = 136,
 * HUD_COLOUR_PLATFORM_GREEN = 137,
 * HUD_COLOUR_PLATFORM_GREY = 138,
 * HUD_COLOUR_FACEBOOK_BLUE = 139,
 * HUD_COLOUR_INGAME_BG = 140,
 * HUD_COLOUR_DARTS = 141,
 * HUD_COLOUR_WAYPOINT = 142,
 * HUD_COLOUR_MICHAEL = 143,
 * HUD_COLOUR_FRANKLIN = 144,
 * HUD_COLOUR_TREVOR = 145,
 * HUD_COLOUR_GOLF_P1 = 146,
 * HUD_COLOUR_GOLF_P2 = 147,
 * HUD_COLOUR_GOLF_P3 = 148,
 * HUD_COLOUR_GOLF_P4 = 149,
 * HUD_COLOUR_WAYPOINTLIGHT = 150,
 * HUD_COLOUR_WAYPOINTDARK = 151,
 * HUD_COLOUR_PANEL_LIGHT = 152,
 * HUD_COLOUR_MICHAEL_DARK = 153,
 * HUD_COLOUR_FRANKLIN_DARK = 154,
 * HUD_COLOUR_TREVOR_DARK = 155,
 * HUD_COLOUR_OBJECTIVE_ROUTE = 156,
 * HUD_COLOUR_PAUSEMAP_TINT = 157,
 * HUD_COLOUR_PAUSE_DESELECT = 158,
 * HUD_COLOUR_PM_WEAPONS_PURCHASABLE = 159,
 * HUD_COLOUR_PM_WEAPONS_LOCKED = 160,
 * HUD_COLOUR_END_SCREEN_BG = 161,
 * HUD_COLOUR_CHOP = 162,
 * HUD_COLOUR_PAUSEMAP_TINT_HALF = 163,
 * HUD_COLOUR_NORTH_BLUE_OFFICIAL = 164,
 * HUD_COLOUR_SCRIPT_VARIABLE_2 = 165,
 * HUD_COLOUR_H = 166,
 * HUD_COLOUR_HDARK = 167,
 * HUD_COLOUR_T = 168,
 * HUD_COLOUR_TDARK = 169,
 * HUD_COLOUR_HSHARD = 170,
 * HUD_COLOUR_CONTROLLER_MICHAEL = 171
 * HUD_COLOUR_CONTROLLER_FRANKLIN = 172
 * HUD_COLOUR_CONTROLLER_TREVOR = 173
 * HUD_COLOUR_CONTROLLER_CHOP = 174,
 * HUD_COLOUR_VIDEO_EDITOR_VIDEO = 175,
 * HUD_COLOUR_VIDEO_EDITOR_AUDIO = 176,
 * HUD_COLOUR_VIDEO_EDITOR_TEXT = 177,
 * HUD_COLOUR_HB_BLUE = 178,
 * HUD_COLOUR_HB_YELLOW = 179,
 * HUD_COLOUR_VIDEO_EDITOR_SCORE = 180,
 * HUD_COLOUR_VIDEO_EDITOR_AUDIO_FADEOUT = 181,
 * HUD_COLOUR_VIDEO_EDITOR_TEXT_FADEOUT = 182,
 * HUD_COLOUR_VIDEO_EDITOR_SCORE_FADEOUT = 183,
 * HUD_COLOUR_HEIST_BACKGROUND = 184,
 * HUD_COLOUR_VIDEO_EDITOR_AMBIENT = 185,
 * HUD_COLOUR_VIDEO_EDITOR_AMBIENT_FADEOUT = 186,
 * HUD_COLOUR_GANG_BOSS = 187,
 * HUD_COLOUR_GOON = 188,
 * HUD_COLOUR_BOSS = 189,
 * HUD_COLOUR_LOW_FLOW = 190,
 * HUD_COLOUR_LOW_FLOW_DARK = 191,
 * HUD_COLOUR_G1 = 192,
 * HUD_COLOUR_G2 = 193,
 * HUD_COLOUR_G3 = 194,
 * HUD_COLOUR_G4 = 195,
 * HUD_COLOUR_G5 = 196,
 * HUD_COLOUR_G6 = 197,
 * HUD_COLOUR_G7 = 198,
 * HUD_COLOUR_G8 = 199,
 * HUD_COLOUR_G9 = 200,
 * HUD_COLOUR_G10 = 201,
 * HUD_COLOUR_G11 = 202,
 * HUD_COLOUR_G12 = 203,
 * HUD_COLOUR_G13 = 204,
 * HUD_COLOUR_G14 = 205,
 * HUD_COLOUR_G15 = 206,
 * HUD_COLOUR_ADVERSARY = 207,
 * HUD_COLOUR_DEGEN_RED = 208,
 * HUD_COLOUR_DEGEN_YELLOW = 209,
 * HUD_COLOUR_DEGEN_GREEN = 210,
 * HUD_COLOUR_DEGEN_CYAN = 211,
 * HUD_COLOUR_DEGEN_BLUE = 212,
 * HUD_COLOUR_DEGEN_MAGENTA = 213,
 * HUD_COLOUR_STUNT_1 = 214,
 * HUD_COLOUR_STUNT_2 = 215,
 * HUD_COLOUR_SPECIAL_RACE_SERIES = 216
 * HUD_COLOUR_SPECIAL_RACE_SERIES_DARK = 217,
 * HUD_COLOUR_CS = 218
 * HUD_COLOUR_CS_DARK = 219,
 * HUD_COLOUR_TECH_GREEN = 220,
 * HUD_COLOUR_TECH_GREEN_DARK = 221,
 * HUD_COLOUR_TECH_RED = 222,
 * HUD_COLOUR_TECH_GREEN_VERY_DARK = 223,
 * HUD_COLOUR_PLACEHOLDER_01 = 224,
 * HUD_COLOUR_PLACEHOLDER_02 = 225,
 * HUD_COLOUR_PLACEHOLDER_03 = 226,
 * HUD_COLOUR_PLACEHOLDER_04 = 227,
 * HUD_COLOUR_PLACEHOLDER_05 = 228,
 * HUD_COLOUR_PLACEHOLDER_06 = 229,
 * HUD_COLOUR_PLACEHOLDER_07 = 230,
 * HUD_COLOUR_PLACEHOLDER_08 = 231,
 * HUD_COLOUR_PLACEHOLDER_09 = 232,
 * HUD_COLOUR_PLACEHOLDER_10 = 233,
 * HUD_COLOUR_JUNK_ENERGY = 234
 * };
 * ```
 * ```
 * NativeDB Introduced: 2545
 * ```
 * Hash: 0x2ACCB195F3CCD9DE | ApiSet: undefined
 */
export declare function setCustomMpHudColor(hudColorId: number): void;
/**
 * Sets the displayed sprite for a specific blip.
 * There's a [list of sprites](https://docs.fivem.net/game-references/blips/) on the FiveM documentation site.
 * Hash: 0xDF735600A4696DAF | ApiSet: undefined
 */
export declare function setBlipSprite(blip: number, spriteId: number): void;
/**
 * ```
 * SET_*
 * ```
 * Hash: 0x2632482FD6B9AB87 | ApiSet: undefined
 */
export declare function setDirectorModeClearTriggeredFlag(): void;
/**
 * Overrides the position of the main player blip for the current frame.
 * Hash: 0x77E2DD177910E1CF | ApiSet: undefined
 */
export declare function setFakePausemapPlayerPositionThisFrame(x: number, y: number): void;
/**
 * ### Arrow Positions
 * *   0 = Off / No arrow
 * *   1 = Top
 * *   2 = Left
 * *   3 = Bottom
 * *   4 = Right
 * ### Note
 * Any numeric value greater than 4 will result in a right arrow (Index 4)
 * ### Important
 * Needs to be called every frame
 * ![Preview of the provided example code](https://forum.cfx.re/uploads/default/original/4X/7/f/3/7f319bc93c3a00b8829bd4ac8dddc235fbf3a9ef.png)
 * Hash: 0x788E7FD431BD67F1 | ApiSet: undefined
 */
export declare function setFloatingHelpTextStyle(hudIndex: number, style: number, hudColor: number, alpha: number, arrowPosition: number, boxOffset: number): void;
/**
 * Hash: 0x7679CC1BCEBE3D4C | ApiSet: undefined
 */
export declare function setFloatingHelpTextScreenPosition(hudIndex: number, x: number, y: number): void;
/**
 * Hash: 0xB094BC1DB4018240 | ApiSet: undefined
 */
export declare function setFloatingHelpTextToEntity(hudIndex: number, entity: number | Entity, offsetX: number, offsetY: number): void;
/**
 * Hash: 0x784BA7E0ECEB4178 | ApiSet: undefined
 */
export declare function setFloatingHelpTextWorldPosition(hudIndex: number, position: Vector3): void;
/**
 * Hash: 0x745711A75AB09277 | ApiSet: undefined
 */
export declare function setFrontendActive(active: boolean): void;
/**
 * Hash: 0x3DDA37128DD1ACA8 | ApiSet: undefined
 */
export declare function setGpsMultiRouteRender(toggle: boolean): void;
/**
 * ```
 * Only the script that originally called SET_GPS_FLAGS can set them again. Another script cannot set the flags, until the first script that called it has called CLEAR_GPS_FLAGS.
 * Doesn't seem like the flags are actually read by the game at all.
 * ```
 * Hash: 0x5B440763A4C8D15B | ApiSet: undefined
 */
export declare function setGpsFlags(p0: number, p1: number): void;
/**
 * Hash: 0x320D0E0D936A0E9B | ApiSet: undefined
 */
export declare function setGpsFlashes(toggle: boolean): void;
/**
 * Hash: 0x900086F371220B6F | ApiSet: undefined
 */
export declare function setGpsCustomRouteRender(toggle: boolean, radarThickness: number, mapThickness: number): void;
/**
 * Hash: 0xB9C362BABECDDC7A | ApiSet: undefined
 */
export declare function setHelpMessageTextStyle(style: number, hudColor: number, alpha: number, p3: number, p4: number): void;
/**
 * Hash: 0x3F5CC444DCAAA8F2 | ApiSet: undefined
 */
export declare function setHealthHudDisplayValues(health: number, capacity: number, wasAdded: boolean): void;
/**
 * Hash: 0xAABB1F56E2A17CED | ApiSet: undefined
 */
export declare function setHudComponentPosition(id: number, x: number, y: number): void;
/**
 * Hash: 0x7B21E0BB01E8224A | ApiSet: undefined
 */
export declare function setMainPlayerBlipColour(color: number): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x504DFE62A1692296 | ApiSet: undefined
 */
export declare function setInteriorZoomLevelIncreased(toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x7EC8ABA5E74B3D7A | ApiSet: undefined
 */
export declare function setInteriorZoomLevelDecreased(toggle: boolean): void;
/**
 * This native is used to colorize/toggle certain map components like the army base.
 * Component IDs 6 through 14 are used by the freemode event King of the Castle in GTA Online.
 * ### An incomplete list of component IDs:
 * *   **0**: Los Santos International Airport yellow runway markers
 * *   **1**: Sandy Shores Airfield yellow runway markers
 * *   **2**: McKenzie Field yellow runway markers
 * *   **6**: Vespucci Beach lifeguard building
 * *   **7**: Top level zone of Alien Camp (Hippy Camp)
 * *   **8**: Paleto Bay fire station drill tower
 * *   **9** Land Act Dam tower
 * *   **10** Pala Springs Aerial Tramway
 * *   **11** Galileo Observatory power unit
 * *   **12** Small zone (empty "interior") near Central Los Santos Medical Center
 * *   **13** Richman Mansion grotto
 * *   **14** 2 Alien Camp (Hippy Camp) circles
 * *   **15** Fort Zancudo
 * Hash: 0x75A9A10948D1DEA6 | ApiSet: undefined
 */
export declare function setMinimapComponent(componentID: number, toggle: boolean, hudColor: number): number;
/**
 * Hash: 0x06A320535F5F0248 | ApiSet: undefined
 */
export declare function setMaxArmourHudDisplay(maximumValue: number): void;
/**
 * Hash: 0x975D66A0BC17064C | ApiSet: undefined
 */
export declare function setMaxHealthHudDisplay(maximumValue: number): void;
/**
 * ```
 * Argument must be 0.0f or above 38.0f, or it will be ignored.
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * Hash: 0xD201F3FF917A506D | ApiSet: undefined
 */
export declare function setMinimapAltitudeIndicatorLevel(altitude: number, p1: boolean): void;
/**
 * Hash: 0x58FADDED207897DC | ApiSet: undefined
 */
export declare function setMinimapBlockWaypoint(toggle: boolean): void;
/**
 * ```
 * If true, the entire map will be revealed.
 * ```
 * Hash: 0xF8DEE0A5600CBB93 | ApiSet: undefined
 */
export declare function setMinimapHideFow(toggle: boolean): void;
/**
 * Hash: 0x0923DBF87DFF735E | ApiSet: undefined
 */
export declare function setMinimapFowRevealCoordinate(position: Vector3): void;
/**
 * Not much is known so far on what it does *exactly*.
 * All I know for sure is that it draws the specified hole ID on the pause menu map as well as on the mini-map/radar. This native also seems to change some other things related to the pause menu map's behaviour, for example: you can no longer set waypoints, the pause menu map starts up in a 'zoomed in' state. This native does not need to be executed every tick.
 * You need to center the minimap manually as well as change/lock it's zoom and angle in order for it to appear correctly on the minimap.
 * You'll also need to use the `GOLF` scaleform in order to get the correct minmap border to show up.
 * Use [`SET_MINIMAP_GOLF_COURSE_OFF()`](#\_0x35EDD5B2E3FF01C0) to reset the map when you no longer want to display any golf holes (you still need to unlock zoom, position and angle of the radar manually after calling this).
 * Hash: 0x71BDB63DBAF8DA59 | ApiSet: undefined
 */
export declare function setMinimapGolfCourse(hole: number): void;
/**
 * Hash: 0xE45087D85F468BC2 | ApiSet: undefined
 */
export declare function setMissionName2(p0: boolean, name: string): void;
/**
 * Hash: 0x5F28ECF5FC84772F | ApiSet: undefined
 */
export declare function setMissionName(p0: boolean, name: string): void;
/**
 * Hash: 0x35EDD5B2E3FF01C0 | ApiSet: undefined
 */
export declare function setMinimapGolfCourseOff(): void;
/**
 * Changes the mouse style.
 * ```cpp
 * enum eMousePointerStyle {
 * ARROW = 1,
 * ARROW_DIMMED = 2,
 * HAND_OPEN = 3,
 * HAND_GRAB = 4,
 * HAND_MIDDLE_FINGER = 5,
 * ARROW_LEFT = 6,
 * ARROW_RIGHT = 7,
 * ARROW_UP = 8,
 * ARROW_DOWN = 9,
 * ARROW_TRIMMING = 10,
 * ARROW_PLUS = 11,
 * ARROW_MINUS = 12
 * };
 * ```
 * Hash: 0x8DB8CFFD58B62552 | ApiSet: undefined
 */
export declare function setMouseCursorStyle(style: number): void;
/**
 * ```
 * Toggles the North Yankton map
 * ```
 * Hash: 0x9133955F1A2DA957 | ApiSet: undefined
 */
export declare function setMinimapInPrologue(toggle: boolean): void;
/**
 * Hash: 0x1A5CD7752DD28CD3 | ApiSet: undefined
 */
export declare function setMinimapInSpectatorMode(toggle: boolean, ped: number | Ped): void;
/**
 * Enables or disables the sonar sweep animation on the minimap.
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x6B50FC8749632EC1 | ApiSet: undefined
 */
export declare function setMinimapSonarSweep(toggle: boolean): void;
/**
 * Toggles the visibility of the cursor. Do note that if the game loses focus and then regains it, the cursor will become visible again.
 * Hash: 0x98215325A695E78A | ApiSet: undefined
 */
export declare function setMouseCursorVisible(isVisible: boolean): void;
/**
 * Sets the mouse pointer to be active on current frame.
 * Hash: 0xAAE7CE1D63167423 | ApiSet: undefined
 */
export declare function setMouseCursorThisFrame(): void;
/**
 * Hash: 0x7B7723747CCB55B6 | ApiSet: undefined
 */
export declare function setMpGamerTagBigText(gamerTagId: number, string: string): void;
/**
 * Sets a gamer tag's component colour
 * Hash: 0x613ED644950626AE | ApiSet: undefined
 */
export declare function setMpGamerTagColour(gamerTagId: number, component: number, hudColorIndex: number): void;
/**
 * Should be enabled as component (2). Has 0 alpha by default.
 * Hash: 0x3158C77A7E888AB4 | ApiSet: undefined
 */
export declare function setMpGamerTagHealthBarColour(gamerTagId: number, hudColorIndex: number): void;
/**
 * ```
 * Sets flag's sprite transparency. 0-255.
 * ```
 * Hash: 0xD48FE545CD46F857 | ApiSet: undefined
 */
export declare function setMpGamerTagAlpha(gamerTagId: number, component: number, alpha: number): void;
/**
 * ```
 * displays wanted star above head
 * ```
 * Hash: 0x9C16459B2324B2CF | ApiSet: undefined
 */
export declare function setMpGamerTagMpBagLargeCount(gamerTagId: number, count: number): void;
/**
 * Manually sets the player health value for a gamer tag, using the maximum health to calculate what percentage of the bar should be filled.
 * Has no effect unless [\_SET_MP_GAMER_TAG_DISABLE_PLAYER_HEALTH_SYNC](#\_0xD29EC58C2F6B5014) has been called prior to disable synchronisation with the attached ped.
 * Hash: 0x1563FE35E9928E67 | ApiSet: undefined
 */
export declare function setMpGamerTagOverridePlayerHealth(gamerTagId: number, health: number, maximumHealth: number): void;
/**
 * By default, the player health value shown by a gamer tag's health bar is synchronised with the health of the ped it is attached to.
 * This native disables that behaviour, allowing [`_SET_MP_GAMER_TAG_OVERRIDE_PLAYER_HEALTH`](#\_0x1563FE35E9928E67) to have an effect.
 * Hash: 0xD29EC58C2F6B5014 | ApiSet: undefined
 */
export declare function setMpGamerTagDisablePlayerHealthSync(gamerTagId: number, toggle: boolean): void;
/**
 * Sets the health bar of a gamer tag to show the health of the last (or current) vehicle of the ped the gamer tag is attached to.
 * The vehicle health value is stored separate from the player health and using it won't clear any player health overrides.
 * Hash: 0xA67F9C46D612B6F1 | ApiSet: undefined
 */
export declare function setMpGamerTagUseVehicleHealth(gamerTagId: number, toggle: boolean): void;
/**
 * Hash: 0xDEA2B8283BAA3944 | ApiSet: undefined
 */
export declare function setMpGamerTagName(gamerTagId: number, string: string): void;
/**
 * Preview image:
 * ![](https://i.imgur.com/1BTmdyv.png)
 * To change the bank balance use [`STAT_SET_INT`](#\_0xB3271D7AB655B441) with "BANK_BALANCE" to whatever value you need to.
 * Hash: 0xDD21B55DF695CD0A | ApiSet: undefined
 */
export declare function setMultiplayerBankCash(): void;
/**
 * ```cpp
 * enum eMpGamerTagComponent
 * {
 * MP_TAG_GAMER_NAME = 0,
 * MP_TAG_CREW_TAG = 1,
 * MP_TAG_HEALTH_ARMOUR = 2,
 * MP_TAG_BIG_TEXT = 3,
 * MP_TAG_AUDIO_ICON = 4,
 * MP_TAG_USING_MENU = 5,
 * MP_TAG_PASSIVE_MODE = 6,
 * MP_TAG_WANTED_STARS = 7,
 * MP_TAG_DRIVER = 8,
 * MP_TAG_CO_DRIVER = 9,
 * MP_TAG_TAGGED = 10,
 * MP_TAG_GAMER_NAME_NEARBY = 11,
 * MP_TAG_ARROW = 12,
 * MP_TAG_PACKAGES = 13,
 * MP_TAG_INV_IF_PED_FOLLOWING = 14,
 * MP_TAG_RANK_TEXT = 15,
 * MP_TAG_TYPING = 16,
 * MP_TAG_BAG_LARGE = 17,
 * MP_TAG_ARROW = 18,
 * MP_TAG_GANG_CEO = 19,
 * MP_TAG_GANG_BIKER = 20,
 * MP_TAG_BIKER_ARROW = 21,
 * MP_TAG_MC_ROLE_PRESIDENT = 22,
 * MP_TAG_MC_ROLE_VICE_PRESIDENT = 23,
 * MP_TAG_MC_ROLE_ROAD_CAPTAIN = 24,
 * MP_TAG_MC_ROLE_SARGEANT = 25,
 * MP_TAG_MC_ROLE_ENFORCER = 26,
 * MP_TAG_MC_ROLE_PROSPECT = 27,
 * MP_TAG_TRANSMITTER = 28,
 * MP_TAG_BOMB = 29
 * };
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * Hash: 0x63BB75ABEDC1F6A0 | ApiSet: undefined
 */
export declare function setMpGamerTagVisibility(gamerTagId: number, component: number, toggle: boolean): void;
/**
 * This native is deprecated.
 * If you're looking to:
 * *   Toggle the pause menu on, use [`ACTIVATE_FRONTEND_MENU`](#\_0xEF01D36B9C9D0C7B)
 * *   Toggle the pause menu off, use [`SET_FRONTEND_ACTIVE`](#\_0x745711A75AB09277)
 * *   Disable toggling the pause menu, use [`DISABLE_FRONTEND_THIS_FRAME`](#\_0x6D3465A73092F0E6)
 * Hash: 0xDF47FC56C71569CF | ApiSet: undefined
 */
export declare function setPauseMenuActive(toggle: boolean): void;
/**
 * ```
 * displays wanted star above head
 * ```
 * Hash: 0xCF228E2AA03099C3 | ApiSet: undefined
 */
export declare function setMpGamerTagWantedLevel(gamerTagId: number, wantedlvl: number): void;
/**
 * Sets the visibility of all components of the gamer tag to the specified value.
 * Hash: 0xEE76FF7E6A0166B0 | ApiSet: undefined
 */
export declare function setMpGamerTagVisibilityAll(gamerTagId: number, toggle: boolean): void;
/**
 * Hash: 0xFE43368D2AA4F2FC | ApiSet: undefined
 */
export declare function setNewWaypoint(x: number, y: number): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0xFD1D220394BCB824 | ApiSet: undefined
 */
export declare function setMultiplayerHudCash(p0: number, p1: number): void;
/**
 * Hash: 0xE52B8E7F85D39A08 | ApiSet: undefined
 */
export declare function setPedAiBlipGangId(ped: number | Ped, gangId: number): void;
/**
 * Preview image:
 * ![](https://i.imgur.com/1BTmdyv.png)
 * To change money value use [`STAT_SET_INT`](#\_0xB3271D7AB655B441) with "MP0\_WALLET_BALANCE" to whatever value you need to.
 * Hash: 0xC2D15BEF167E27BC | ApiSet: undefined
 */
export declare function setMultiplayerWalletCash(): void;
/**
 * ```
 * if "flag" is true, the AI blip will always be displayed for the specified ped, if it has an AI blip
 * If "flag" is false, the AI blip will only be displayed when the player is in combat with the specified ped, if it has an AI blip
 * ```
 * Hash: 0x0C4BBF625CA98C4E | ApiSet: undefined
 */
export declare function setPedAiBlipForcedOn(ped: number | Ped, toggle: boolean): void;
/**
 * Toggles the pause menu ped sleep state for frontend menus.
 * [Example GIF](https://vespura.com/hi/i/2019-04-01\_15-51\_8ed38\_1014.gif)
 * Hash: 0xECF128344E9FF9F1 | ApiSet: undefined
 */
export declare function setPauseMenuPedSleepState(state: boolean): void;
/**
 * Hash: 0xFCFACD0DB9D7A57D | ApiSet: undefined
 */
export declare function setPedAiBlipSprite(ped: number | Ped, spriteId: number): void;
/**
 * Toggles the light state for the pause menu ped in frontend menus.
 * This is used by R\* in combination with [`SET_PAUSE_MENU_PED_SLEEP_STATE`](#\_0xECF128344E9FF9F1) to toggle the "offline" or "online" state in the "friends" tab of the pause menu in GTA Online.
 * Example:
 * On: ![lights on](https://vespura.com/hi/i/2019-04-01\_16-09\_540ee\_1015.png)
 * Off: ![lights off](https://vespura.com/hi/i/2019-04-01\_16-10\_8b5e7\_1016.png)
 * Hash: 0x3CA6050692BC61B0 | ApiSet: undefined
 */
export declare function setPauseMenuPedLighting(state: boolean): void;
/**
 * Hash: 0x97C65887D4B37FA9 | ApiSet: undefined
 */
export declare function setPedAiBlipNoticeRange(ped: number | Ped, range: number): void;
/**
 * Hash: 0x3EED80DFF7325CAA | ApiSet: undefined
 */
export declare function setPedAiBlipHasCone(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * This native turns on the AI blip on the specified ped. It also disappears automatically when the ped is too far or if the ped is dead. You don't need to control it with other natives.
 * See gtaforums.com/topic/884370-native-research-ai-blips for further information.
 * ```
 * Hash: 0xD30C50DF888D58B5 | ApiSet: undefined
 */
export declare function setPedHasAiBlip(ped: number | Ped, hasCone: boolean): void;
/**
 * ```
 * List of interior hashes: pastebin.com/1FUyXNqY
 * Not for every interior zoom > 0 available.
 * ```
 * Hash: 0x59E727A1C9D3E31A | ApiSet: undefined
 */
export declare function setRadarAsInteriorThisFrame(interior: number | string, x: number, y: number, heading: number, zoom: number): void;
/**
 * Hash: 0x1EAC5F91BCBC5073 | ApiSet: undefined
 */
export declare function setRaceTrackRender(toggle: boolean): void;
/**
 * ```
 * If toggle is true, hides special ability bar / character name in the pause menu
 * If toggle is false, shows special ability bar / character name in the pause menu
 * SET_PLAYER_*
 * ```
 * Hash: 0x808519373FD336A3 | ApiSet: undefined
 */
export declare function setPlayerIsInDirectorMode(toggle: boolean): void;
/**
 * Hash: 0xBD12C5EEE184C337 | ApiSet: undefined
 */
export declare function setRadarZoomPrecise(zoom: number): void;
/**
 * Hash: 0xB13DCB4C6FAAD238 | ApiSet: undefined
 */
export declare function setPedHasAiBlipWithColor(ped: number | Ped, hasCone: boolean, color: number): void;
/**
 * Hash: 0xCB7CC0D58405AD41 | ApiSet: undefined
 */
export declare function setRadarZoomToDistance(zoom: number): void;
/**
 * Hash: 0xE81B7D2A3DAB2D81 | ApiSet: undefined
 */
export declare function setRadarAsExteriorThisFrame(): void;
/**
 * Enabling this on a radius blip will make it outline only.\
 * Please note that this only works on a **radius** blip (i.e. one generated using [`ADD_BLIP_FOR_RADIUS`](#\_0x46818D79B1F7499A)), not a normal blip.
 * **Example result:**\
 * ![example-image](https://i.imgur.com/hS6ki7p.png)
 * Hash: 0x25615540D894B814 | ApiSet: undefined
 */
export declare function setRadiusBlipEdge(blip: number, toggle: boolean): void;
/**
 * ```
 * zoomLevel ranges from 0 to 200
 * ```
 * Hash: 0x096EF57A0C999BBA | ApiSet: undefined
 */
export declare function setRadarZoom(zoomLevel: number): void;
/**
 * ```
 * Sets the color of HUD_COLOUR_SCRIPT_VARIABLE_2
 * ```
 * Hash: 0x16A304E6CB2BFAB9 | ApiSet: undefined
 */
export declare function setScriptVariable2HudColour(r: number, g: number, b: number, a: number): void;
/**
 * ```
 * Sets the color of HUD_COLOUR_SCRIPT_VARIABLE
 * ```
 * Hash: 0xD68A5FF8A3A89874 | ApiSet: undefined
 */
export declare function setScriptVariableHudColour(r: number, g: number, b: number, a: number): void;
/**
 * ```
 * colors you input not same as you think?
 * A: for some reason its R B G A
 * ```
 * Hash: 0xBE6B23FFA53FB442 | ApiSet: undefined
 */
export declare function setTextColour(red: number, green: number, blue: number, alpha: number): void;
/**
 * Hash: 0xF98E4B3E56AFC7B1 | ApiSet: undefined
 */
export declare function setRadarZoomToBlip(blip: number, zoom: number): void;
/**
 * Hash: 0xC02F4DBFB51D988B | ApiSet: undefined
 */
export declare function setTextCentre(align: boolean): void;
/**
 * Hash: 0x1CA3E9EAC9D93E5E | ApiSet: undefined
 */
export declare function setTextDropShadow(): void;
/**
 * ```
 * `HUD::SET_SOCIAL_CLUB_TOUR("Gallery");`
 * `HUD::SET_SOCIAL_CLUB_TOUR("Missions");`
 * `HUD::SET_SOCIAL_CLUB_TOUR("General");`
 * `HUD::SET_SOCIAL_CLUB_TOUR("Playlists");`
 * ```
 * Hash: 0x9E778248D6685FE0 | ApiSet: undefined
 */
export declare function setSocialClubTour(name: string): void;
/**
 * ```cpp
 * enum eTextFonts
 * {
 * FONT_STANDARD = 0,
 * FONT_CURSIVE = 1,
 * FONT_ROCKSTAR_TAG = 2,
 * FONT_LEADERBOAR0D = 3,
 * FONT_CONDENSED = 4,
 * FONT_STYLE_FIXED_WIDTH_NUMBERS = 5,
 * FONT_CONDENSED_NOT_GAMERNAME = 6,
 * FONT_STYLE_PRICEDOWN = 7,
 * FONT_STYLE_TAXI = 8,
 * }
 * ```
 * Hash: 0x66E0276CC5F6B9DA | ApiSet: undefined
 */
export declare function setTextFont(fontType: number): void;
/**
 * Hash: 0xA50ABC31E3CDFAFF | ApiSet: undefined
 */
export declare function setTextLeading(p0: number): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x441603240D202FA6 | ApiSet: undefined
 */
export declare function setTextEdge(p0: number, r: number, g: number, b: number, a: number): void;
/**
 * Hash: 0x2513DFB0FB8400FE | ApiSet: undefined
 */
export declare function setTextOutline(): void;
/**
 * distance - shadow distance in pixels, both horizontal and vertical
 * r, g, b, a - color
 * Hash: 0x465C84BC39F1C351 | ApiSet: undefined
 */
export declare function setTextDropshadow(distance: number, r: number, g: number, b: number, a: number): void;
/**
 * Hash: 0x5F15302936E07111 | ApiSet: undefined
 */
export declare function setTextRenderId(renderId: number): void;
/**
 * Toggles if the text input box can be opened with [`DISPLAY_ONSCREEN_KEYBOARD`](#\_0x00DC833F2568DBF6).
 * Hash: 0x1185A8087587322C | ApiSet: undefined
 */
export declare function setTextInputBoxEnabled(state: boolean): void;
/**
 * ```
 * Types -
 * 0: Center-Justify
 * 1: Left-Justify
 * 2: Right-Justify
 * Right-Justify requires SET_TEXT_WRAP, otherwise it will draw to the far right of the screen
 * ```
 * Hash: 0x4E096588B13FFECA | ApiSet: undefined
 */
export declare function setTextJustification(justifyType: number): void;
/**
 * Switches the display of the in-game minimap to the Cayo Perico map. This native needs to be called every frame to maintain the toggled state effectively.
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x5E1460624D194A38 | ApiSet: undefined
 */
export declare function setUseIslandMap(toggle: boolean): void;
/**
 * ```
 * Size range : 0F to 1.0F
 * p0 is unknown and doesn't seem to have an effect, yet in the game scripts it changes to 1.0F sometimes.
 * ```
 * Hash: 0x07C837F9A01C34C9 | ApiSet: undefined
 */
export declare function setTextScale(scale: number, size: number): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x038C1F517D7FDCF8 | ApiSet: undefined
 */
export declare function setTextProportional(p0: boolean): void;
/**
 * instructionalKey enum list:
 * ```
 * Buttons = {
 * Empty = 0,
 * Select = 1, -- (RETURN)
 * Ok = 2, -- (RETURN)
 * Yes = 4, -- (RETURN)
 * Back = 8, -- (ESC)
 * Cancel = 16, -- (ESC)
 * No = 32, -- (ESC)
 * RetrySpace = 64, -- (SPACE)
 * Restart = 128, -- (SPACE)
 * Skip = 256, -- (SPACE)
 * Quit = 512, -- (ESC)
 * Adjust = 1024, -- (ARROWS)
 * SpaceKey = 2048, -- (SPACE)
 * Share = 4096, -- (SPACE)
 * SignIn = 8192, -- (SPACE)
 * Continue = 16384, -- (RETURN)
 * AdjustLeftRight = 32768, -- (SCROLL L/R)
 * AdjustUpDown = 65536, -- (SCROLL U/D)
 * Overwrite = 131072, -- (SPACE)
 * SocialClubSignup = 262144, -- (RETURN)
 * Confirm = 524288, -- (RETURN)
 * Queue = 1048576, -- (RETURN)
 * RetryReturn = 2097152, -- (RETURN)
 * BackEsc = 4194304, -- (ESC)
 * SocialClub = 8388608, -- (RETURN)
 * Spectate = 16777216, -- (SPACE)
 * OkEsc = 33554432, -- (ESC)
 * CancelTransfer = 67108864, -- (ESC)
 * LoadingSpinner = 134217728,
 * NoReturnToGTA = 268435456, -- (ESC)
 * CancelEsc = 536870912, -- (ESC)
 * }
 * Alt = {
 * Empty = 0,
 * No = 1, -- (SPACE)
 * Host = 2, -- (ESC)
 * SearchForJob = 4, -- (RETURN)
 * ReturnKey = 8, -- (TURN)
 * Freemode = 16, -- (ESC)
 * }
 * ```
 * **Result of the example code:** <https://i.imgur.com/TvmNF4k.png>
 * Hash: 0x15803FEC3B9A872B | ApiSet: undefined
 */
export declare function setWarningMessageWithAlert(labelTitle: string, labelMsg: string, p2: number, p3: number, labelMsg2: string, p5: boolean, p6: number, p7: number, p8: string, p9: string, background: boolean, errorCode: number): void;
/**
 * ```
 * It sets the text in a specified box and wraps the text if it exceeds the boundries. Both values are for X axis. Useful when positioning text set to center or aligned to the right.
 * start - left boundry on screen position (0.0 - 1.0)
 * end - right boundry on screen position (0.0 - 1.0)
 * ```
 * Hash: 0x63145D9C883A1A70 | ApiSet: undefined
 */
export declare function setTextWrap(start: number, end: number): void;
/**
 * Hash: 0x6B3C4650BC8BEE47 | ApiSet: undefined
 */
export declare function setTextRightJustify(toggle: boolean): void;
/**
 * ```
 * This native removes the current waypoint from the map.
 * Example:
 * C#:
 * Function.Call(Hash.SET_WAYPOINT_OFF);
 * C++:
 * `HUD::SET_WAYPOINT_OFF();`
 * ```
 * Hash: 0xA7E4E2D361C2627F | ApiSet: undefined
 */
export declare function setWaypointOff(): void;
/**
 * Hash: 0x0C5A80A9E096D529 | ApiSet: undefined
 */
export declare function setWarningMessageOptionItems(index: number, name: string, cash: number, rp: number, lvl: number, colour: number): boolean;
/**
 * Sets a global mode which makes the pause menu map show 'Destination' instead of 'Waypoint' in the key legend on the
 * bottom of the screen.
 * <!--
 * Name guess:
 * - alphabetical function order, below [SET_USER_RADIO_CONTROL_ENABLED, SET_USE_HI_DOF], above SET_VARIABLE_ON_SOUND.
 * -->
 * Hash: 0x6CDD58146A436083 | ApiSet: undefined
 */
export declare function setUseWaypointAsDestination(toggle: boolean): void;
/**
 * Sets a warning message for one frame with header and upper buttons bit field that don't fit the standard 32 bit set.
 * Hash: 0x38B55259C2E078ED | ApiSet: undefined
 */
export declare function setWarningMessageWithHeaderExtended(headerTextLabel: string, line1TextLabel: string, buttonsBitField: number, buttonsBitFieldUpper: number, line2TextLabel: string, addNumber: boolean, numberToAdd: number, firstSubstring: string, secondSubstring: string, showBackground: boolean, errorCode: number): void;
/**
 * ```cpp
 * enum eInstructionalButtonTypes
 * {
 * NONE = 0,
 * SELECT = 1,
 * OK = 2,
 * YES = 4,
 * BACK = 8,
 * BACK_SELECT = 9,
 * BACK_OK = 10,
 * BACK_YES = 12,
 * CANCEL = 16,
 * CANCEL_SELECT = 17,
 * CANCEL_OK = 18,
 * CANCEL_YES = 20,
 * NO = 32,
 * NO_SELECT = 33,
 * NO_OK = 34,
 * YES_NO = 36,
 * RETRY = 64,
 * RETRY_SELECT = 65,
 * RETRY_OK = 66,
 * RETRY_YES = 68,
 * RETRY_BACK = 72,
 * RETRY_BACK_SELECT = 73,
 * RETRY_BACK_OK = 74,
 * RETRY_BACK_YES = 76,
 * RETRY_CANCEL = 80,
 * RETRY_CANCEL_SELECT = 81,
 * RETRY_CANCEL_OK = 82,
 * RETRY_CANCEL_YES = 84,
 * SKIP = 256,
 * SKIP_SELECT = 257,
 * SKIP_OK = 258,
 * SKIP_YES = 260,
 * SKIP_BACK = 264,
 * SKIP_BACK_SELECT = 265,
 * SKIP_BACK_OK = 266,
 * SKIP_BACK_YES = 268,
 * SKIP_CANCEL = 272,
 * SKIP_CANCEL_SELECT = 273,
 * SKIP_CANCEL_OK = 274,
 * SKIP_CANCEL_YES = 276,
 * CONTINUE = 16384,
 * BACK_CONTINUE = 16392,
 * CANCEL_CONTINUE = 16400,
 * LOADING_SPINNER = 134217728,
 * SELECT_LOADING_SPINNER = 134217729,
 * OK_LOADING_SPINNER = 134217730,
 * YES_LOADING_SPINNER = 134217732,
 * BACK_LOADING_SPINNER = 134217736,
 * BACK_SELECT_LOADING_SPINNER = 134217737,
 * BACK_OK_LOADING_SPINNER = 134217738,
 * BACK_YES_LOADING_SPINNER = 134217740,
 * CANCEL_LOADING_SPINNER = 134217744,
 * CANCEL_SELECT_LOADING_SPINNER = 134217745,
 * CANCEL_OK_LOADING_SPINNER = 134217746,
 * CANCEL_YES_LOADING_SPINNER = 134217748
 * }
 * ```
 * Note: this list is definitely NOT complete, but these are the ones I've been able to find before giving up because it's such a boring thing to look for 'good' combinations.
 * <strong>Result of the example code:</strong>
 * <https://i.imgur.com/imwoimm.png>
 * Hash: 0x7B1776B3B53F8D74 | ApiSet: undefined
 */
export declare function setWarningMessage(entryLine1: string, instructionalKey: number, entryLine2: string, p3: boolean, p4: number, showBg: boolean, errorCode: number): [string, string];
/**
 * ```
 * You can only use text entries. No custom text.
 * ```
 * ```
 * NativeDB Added Parameter 11: Any p10
 * ```
 * Hash: 0x701919482C74B5AB | ApiSet: undefined
 */
export declare function setWarningMessageWithHeaderAndSubstringFlags(entryHeader: string, entryLine1: string, instructionalKey: any, entryLine2: string, p4: boolean, p5: any, p6: any, p9: boolean): [any, any];
/**
 * Enables or disables the blue half circle ![](https://i.imgur.com/iZes9Ec.png) around the specified blip on the left side of the blip. This is used to indicate that the player is in your crew in GTA:O. Color is changeable by using [`SET_BLIP_SECONDARY_COLOUR`](#\_0x14892474891E09EB).
 * To toggle the right side of the circle use: [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#\_0x23C3EB807312F01A).
 * Example code result:
 * ![](https://i.imgur.com/iZ9tNWl.png)
 * Hash: 0xDCFB5D4DB8BF367E | ApiSet: undefined
 */
export declare function showCrewIndicatorOnBlip(blip: number, toggle: boolean): void;
/**
 * Highlights a blip by a half cyan circle on the right side of the blip. ![](https://i.imgur.com/FrV9M4e.png) Indicating that that player is a friend (in GTA:O). This color can not be changed.
 * To toggle the left side (crew member indicator) of the half circle around the blip, use: [`SHOW_CREW_INDICATOR_ON_BLIP`](#\_0xDCFB5D4DB8BF367E).
 * Hash: 0x23C3EB807312F01A | ApiSet: undefined
 */
export declare function showFriendIndicatorOnBlip(blip: number, toggle: boolean): void;
/**
 * Hash: 0xC3B07BA00A83B0F1 | ApiSet: undefined
 */
export declare function setWidescreenFormat(p0: any): void;
/**
 * ```
 * You can only use text entries. No custom text.
 * C# Example :
 * Function.Call(Hash._SET_WARNING_MESSAGE_2, "HUD_QUIT", "HUD_CGIGNORE", 2, "HUD_CGINVITE", 0, -1, 0, 0, 1);
 * you can recreate this easily with scaleforms
 * ---------------
 * Fixed native name, from before nativedb restoration.
 * ```
 * ```
 * NativeDB Added Parameter 10: Any p9
 * ```
 * Hash: 0xDC38CC1E35B6A5D7 | ApiSet: undefined
 */
export declare function setWarningMessageWithHeader(titleMsg: string, entryLine1: string, flags: number, promptMsg: string, p4: boolean, p5: any, background: boolean, showBg: boolean): any;
/**
 * ```
 * Adds a orange checkmark on top of a given blip handle: https://imgur.com/a/aw5OTMF
 * _SHOW_FRIEND_INDICATOR_ON_BLIP* - _SHOW_HEADING_INDICATOR_ON_BLIP*
 * ```
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0xCAC2031EBF79B1A8 | ApiSet: undefined
 */
export declare function showHasCompletedIndicatorOnBlip(blip: number, toggle: boolean): void;
/**
 * This function shows various HUD (Heads-up Display) components.
 * Listed below are the integers and the corresponding HUD component.
 * *   1 : WANTED_STARS
 * *   2 : WEAPON_ICON
 * *   3 : CASH
 * *   4 : MP_CASH
 * *   5 : MP_MESSAGE
 * *   6 : VEHICLE_NAME
 * *   7 : AREA_NAME
 * *   8 : VEHICLE_CLASS
 * *   9 : STREET_NAME
 * *   10 : HELP_TEXT
 * *   11 : FLOATING_HELP_TEXT\_1
 * *   12 : FLOATING_HELP_TEXT\_2
 * *   13 : CASH_CHANGE
 * *   14 : RETICLE
 * *   15 : SUBTITLE_TEXT
 * *   16 : RADIO_STATIONS
 * *   17 : SAVING_GAME
 * *   18 : GAME_STREAM
 * *   19 : WEAPON_WHEEL
 * *   20 : WEAPON_WHEEL_STATS
 * *   21 : HUD_COMPONENTS
 * *   22 : HUD_WEAPONS
 * These integers also work for the [`HIDE_HUD_COMPONENT_THIS_FRAME`](#\_0x6806C51AD12B83B8) native, but instead hides the HUD component.
 * Hash: 0x0B4DF1FA60C0E664 | ApiSet: undefined
 */
export declare function showHudComponentThisFrame(id: number): void;
/**
 * Controls the visibility of the "Contact" instructional buttons on the map screen.
 * ```
 * NativeDB Introduced: 2545
 * ```
 * Hash: 0xC772A904CDE1186F | ApiSet: undefined
 */
export declare function showContactInstructionalButton(toggle: boolean): void;
/**
 * SHOW_\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x4F38DCA127DAAEA2 | ApiSet: undefined
 */
export declare function showScriptedHudComponentThisFrame(id: number): void;
/**
 * Hash: 0x75A16C3DA34F1245 | ApiSet: undefined
 */
export declare function showHeightOnBlip(blip: number, toggle: boolean): void;
/**
 * Hash: 0xA3C0B359DCB848B6 | ApiSet: undefined
 */
export declare function showNumberOnBlip(blip: number, number: number): void;
/**
 * ```
 * Adds the GTA: Online player heading indicator to a blip.
 * ```
 * Hash: 0x5FBCA48327B914DF | ApiSet: undefined
 */
export declare function showHeadingIndicatorOnBlip(blip: number, toggle: boolean): void;
/**
 * Toggles a cyan outline around the blip.
 * Color can be changed with [`SET_BLIP_SECONDARY_COLOUR`](#\_0x14892474891E09EB). Enabling this circle will override the "crew" and "friend" half-circles (see [`SHOW_CREW_INDICATOR_ON_BLIP`](#\_0xDCFB5D4DB8BF367E) and [`SHOW_FRIEND_INDICATOR_ON_BLIP`](#\_0x23C3EB807312F01A)).
 * Hash: 0xB81656BC81FE24D1 | ApiSet: undefined
 */
export declare function showOutlineIndicatorOnBlip(blip: number, toggle: boolean): void;
/**
 * Starts a new GPS custom-route, allowing you to plot lines on the map.
 * Lines are drawn directly between points.
 * The GPS custom route works like the GPS multi route, except it does not follow roads.
 * <strong>Example result:</strong>
 * ![](https://i.imgur.com/BDm5pzt.png)
 * Hash: 0xDB34E8D56FC13B08 | ApiSet: undefined
 */
export declare function startGpsCustomRoute(hudColor: number, displayOnFoot: boolean, followPlayer: boolean): void;
/**
 * Hash: 0x60E892BA4F5BDCA4 | ApiSet: undefined
 */
export declare function showSigninUi(): void;
/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0xF6865E26067B708C | ApiSet: undefined
 */
export declare function showPurchaseInstructionalButton(toggle: boolean): void;
/**
 * ```
 * Adds a green checkmark on top of a blip.
 * ```
 * Hash: 0x74513EA3E505181E | ApiSet: undefined
 */
export declare function showTickOnBlip(blip: number, toggle: boolean): void;
/**
 * Starts a new GPS multi-route, allowing you to create custom GPS paths.
 * GPS functions like the waypoint, except it can contain multiple points it's forced to go through.
 * Once the player has passed a point, the GPS will no longer force its path through it.
 * Works independently from the player-placed waypoint and blip routes.
 * <strong>Example result:</strong>
 * ![](https://i.imgur.com/ZZHQatX.png)
 * Hash: 0x3D3D15AF7BCAAF83 | ApiSet: undefined
 */
export declare function startGpsMultiRoute(hudColor: number, routeFromPlayer: boolean, displayOnFoot: boolean): void;
/**
 * Disables frontend (works in custom frontends, not sure about regular pause menu) navigation keys on keyboard. Not sure about controller. Does not disable mouse controls. No need to call this every tick.
 * To enable the keys again, use [`0x14621BB1DF14E2B2`](#\_0x14621BB1DF14E2B2).
 * Hash: 0xEC9264727EEC0F28 | ApiSet: undefined
 */
export declare function takeControlOfFrontend(): void;
/**
 * Hash: 0xF1A6C18B35BCADE6 | ApiSet: undefined
 */
export declare function showStartMissionInstructionalButton(p0: boolean): void;
/**
 * ```
 * Enables loading screen tips to be be shown (`_0x15CFA549788D35EF` and `_0x488043841BBE156F`), blocks other kinds of notifications from being displayed (at least from current script). Call `0xADED7F5748ACAFE6` to display those again.
 * ```
 * Hash: 0x56C8B608CFD49854 | ApiSet: undefined
 */
export declare function thefeedCommentTeleportPoolOn(): void;
/**
 * Hash: 0x80FE4F3AB4E1B62A | ApiSet: undefined
 */
export declare function thefeedClearFrozenPost(): void;
/**
 * Hash: 0xBA751764F0821256 | ApiSet: undefined
 */
export declare function suppressFrontendRenderingThisFrame(): void;
/**
 * Displays loading screen tips, requires `0x56C8B608CFD49854` to be called beforehand.
 * Hash: 0x15CFA549788D35EF | ApiSet: undefined
 */
export declare function thefeedDisplayLoadingScreenTips(): void;
/**
 * Hash: 0xA13C11E1B5C06BFC | ApiSet: undefined
 */
export declare function thefeedForceRenderOn(): void;
/**
 * Stops loading screen tips shown by invoking either `0x488043841BBE156F` or `0x15CFA549788D35EF`
 * Hash: 0x32888337579A5970 | ApiSet: undefined
 */
export declare function thefeedDisableLoadingScreenTips(): void;
/**
 * Hash: 0x6F1554B0CC2089FA | ApiSet: undefined
 */
export declare function thefeedOnlyShowTooltips(toggle: boolean): void;
/**
 * Hash: 0xA8FDB297A8D25FBA | ApiSet: undefined
 */
export declare function thefeedFlushQueue(): void;
/**
 * ```
 * Returns the handle for the notification currently displayed on the screen. Name may be a hash collision, but describes the function accurately.
 * ```
 * Hash: 0x82352748437638CA | ApiSet: undefined
 */
export declare function thefeedGetFirstVisibleDeleteRemaining(): number;
/**
 * Once called each frame hides all above radar notifications.
 * Hash: 0x25F87B30C382FCA7 | ApiSet: undefined
 */
export declare function thefeedHideThisFrame(): void;
/**
 * ```
 * Requires manual management of game stream handles (i.e., 0xBE4390CB40B3E627).
 * ```
 * Hash: 0xFDEC055AB549E328 | ApiSet: undefined
 */
export declare function thefeedFreezeNextPost(): void;
/**
 * ```
 * Removes a notification instantly instead of waiting for it to disappear
 * ```
 * Hash: 0xBE4390CB40B3E627 | ApiSet: undefined
 */
export declare function thefeedRemoveItem(notificationId: number): void;
/**
 * Hash: 0xFDB423997FA30340 | ApiSet: undefined
 */
export declare function thefeedPause(): void;
/**
 * Hash: 0xE1CD1E48E025E661 | ApiSet: undefined
 */
export declare function thefeedResume(): void;
/**
 * Hash: 0xA9CBFD40B3FA3010 | ApiSet: undefined
 */
export declare function thefeedIsPaused(): boolean;
/**
 * Related to notification color flashing, setting p0 to 0 invalidates a `_SET_NOTIFICATION_FLASH_COLOR` call for the target notification.
 * Hash: 0x17AD8C9706BDD88A | ApiSet: undefined
 */
export declare function thefeedSetAnimpostfxCount(count: number): void;
/**
 * Hash: 0xFDD85225B2DEA55E | ApiSet: undefined
 */
export declare function thefeedResetAllParameters(): void;
/**
 * ```
 * Requires GAME_STREAM_ENUMS.MSGTEXT. Default sounds: "DPAD_WEAPON_SCROLL" and "HUD_FRONTEND_DEFAULT_SOUNDSET"
 * ```
 * Hash: 0x4A0C7C9BB10ABB36 | ApiSet: undefined
 */
export declare function thefeedSetAnimpostfxSound(toggle: boolean): void;
/**
 * Hash: 0x55598D21339CB998 | ApiSet: undefined
 */
export declare function thefeedSetScriptedMenuHeight(pos: number): void;
/**
 * Hash: 0x17430B918701C342 | ApiSet: undefined
 */
export declare function thefeedSetAnimpostfxColor(red: number, green: number, blue: number, alpha: number): void;
/**
 * ```
 * If true, remove all feed components instantly. Otherwise tween/animate close each component
 * ```
 * Hash: 0xBAE4F9B97CD43B30 | ApiSet: undefined
 */
export declare function thefeedSetFlushAnimpostfx(toggle: boolean): void;
/**
 * ```
 * Used in the native scripts to reference "GET_PEDHEADSHOT_TXD_STRING" and "CHAR_DEFAULT".
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x317EBA71D7543F52 | ApiSet: undefined
 */
export declare function thefeedUpdateItemTexture(txdString1: string, txnString1: string, txdString2: string, txnString2: string): void;
/**
 * Hash: 0xD4438C0564490E63 | ApiSet: undefined
 */
export declare function thefeedSpsExtendWidescreenOn(): void;
/**
 * Hash: 0xB695E2CD0A2DA9EE | ApiSet: undefined
 */
export declare function thefeedSpsExtendWidescreenOff(): void;
/**
 * Hash: 0x3E93E06DB8EF1F30 | ApiSet: undefined
 */
export declare function unlockMinimapPosition(): void;
/**
 * ```
 * From the decompiled scripts:
 * `HUD::_92F0DA1E27DB96DC(6);`
 * `HUD::_92F0DA1E27DB96DC(184);`
 * `HUD::_92F0DA1E27DB96DC(190);`
 * sets background color for the next notification
 * 6 = red
 * 184 = green
 * 190 = yellow
 * Here is a list of some colors that can be used: gyazo.com/68bd384455fceb0a85a8729e48216e15
 * ```
 * Hash: 0x92F0DA1E27DB96DC | ApiSet: undefined
 */
export declare function thefeedSetNextPostBackgroundColor(hudColorIndex: number): void;
/**
 * Hash: 0x8183455E16C42E3A | ApiSet: undefined
 */
export declare function unlockMinimapAngle(): void;
/**
 * Hash: 0x6AFDFB93754950C7 | ApiSet: undefined
 */
export declare function toggleStealthRadar(toggle: boolean): void;
/**
 * Hash: 0x72DD432F3CDFC0EE | ApiSet: undefined
 */
export declare function triggerSonarBlip(posX: number, posY: number, posZ: number, radius: number, p4: number): void;
/**
 * ```
 * Related to displaying cash on the HUD
 * `Always called before HUD::CHANGE_FAKE_MP_CASH in decompiled scripts`
 * ```
 * Hash: 0x170F541E1CADD1DE | ApiSet: undefined
 */
export declare function useFakeMpCash(p0: boolean): void;
/**
 * Hash: 0x1D08B970013C34B6 | ApiSet: undefined
 */
export declare function acos(p0: number): number;
/**
 * Hash: 0xF0D31AD191A74F87 | ApiSet: undefined
 */
export declare function absi(value: number): number;
/**
 * Hash: 0x2D4259F1FEB81DA9 | ApiSet: undefined
 */
export declare function addDispatchSpawnBlockingArea(x1: number, y1: number, x2: number, y2: number): any;
/**
 * Hash: 0x73D57CFFDD12C355 | ApiSet: undefined
 */
export declare function absf(value: number): number;
/**
 * Creates and opens a new activity feed post to start filling in.
 * **Note**: This is a PS4 related native, resulting in a nullsub on the PC platform. This native won't do anything when invoked.
 * Hash: 0x4DCDF92BF64236CD | ApiSet: undefined
 */
export declare function activityFeedCreate(captionString: string, condensedCaptionString: string): void;
/**
 * Hash: 0x452736765B31FC4B | ApiSet: undefined
 */
export declare function addPoliceRestart(p0: number, p1: number, p2: number, p3: number, p4: any): any;
/**
 * To remove, see: [`REMOVE_DISPATCH_SPAWN_BLOCKING_AREA`](#\_0x264AC28B01B353A5).
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * Hash: 0x918C7B2D2FF3928B | ApiSet: undefined
 */
export declare function addDispatchSpawnBlockingAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): any;
/**
 * Hash: 0x69FE6DC87BD2A5E9 | ApiSet: undefined
 */
export declare function addReplayStatValue(value: any): void;
/**
 * ```
 * This native is adding a zone, where you can change density settings. For example, you can add a zone on 0.0, 0.0, 0.0 with radius 900.0 and vehicleMultiplier 0.0, and you will not see any new population vehicle spawned in a radius of 900.0 from 0.0, 0.0, 0.0. Returns the id. You can have only 15 zones at the same time. You can remove zone using REMOVE_POP_MULTIPLIER_SPHERE
 * ```
 * Hash: 0x32C7A7E8C43A1F80 | ApiSet: undefined
 */
export declare function addPopMultiplierSphere(position: Vector3, radius: number, pedMultiplier: number, vehicleMultiplier: number, p6: boolean, p7: boolean): number;
/**
 * ```
 * Returns the index of the newly created hospital spawn point.
 * p3 might be radius?
 * ```
 * Hash: 0x1F464EF988465A81 | ApiSet: undefined
 */
export declare function addHospitalRestart(position: Vector3, p3: number, p4: any): number;
/**
 * ```
 * NativeDB Added Parameter 10: BOOL p9
 * ```
 * Hash: 0x67F6413D3220E18D | ApiSet: undefined
 */
export declare function addPopMultiplierArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p6: number, p7: number, p8: boolean): number;
/**
 * Creates a new stunt jump.
 * The radius1 and radius2 might actually not be a radius at all, but that's what it seems to me testing them in-game. But they may be 'angle' floats instead, considering this native is named ADD_STUNT_JUMP\_**ANGLED**.
 * Info about the specific 'parameter sections':
 * <strong>x1, y1, z1, x2, y2, z2 and radius1:</strong>
 * First coordinates are for the jump entry area, and the radius that will be checked around that area. So if you're not exactly within the coordinates, but you are within the outter radius limit then it will still register as entering the stunt jump. Note as mentioned above, the radius is just a guess, I'm not really sure about it's exact purpose.
 * <strong>x3, y3, z3, x4, y4, z4 and radius2:</strong>
 * Next part is the landing area, again starting with the left bottom (nearest to the stunt jump entry zone) coordinate, and the second one being the top right furthest away part of the landing area. Followed by another (most likely) radius float, this is usually slightly larger than the entry zone 'radius' float value, just because you have quite a lot of places where you can land (I'm guessing).
 * <strong>camX, camY and camZ:</strong>
 * The final coordinate in this native is the Camera position. Rotation and zoom/FOV is managed by the game itself, you just need to provide the camera location.
 * <strong>unk1, unk2 and unk3:</strong>
 * Not sure what these are for, but they're always `150, 0, 0` in decompiled scripts.
 * Visualized example in-game:
 * ![](https://d.fivem.dev/2019-03-15\_18-24\_c7802\_846.png)
 * Here is a list of almost all of the stunt jumps from GTA V (taken from decompiled scripts): https://pastebin.com/EW1jBPkY
 * Hash: 0xBBE5D803A5360CBF | ApiSet: undefined
 */
export declare function addStuntJumpAngled(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius1: number, x3: number, y3: number, z3: number, x4: number, y4: number, z4: number, radius2: number, camX: number, camY: number, camZ: number, unk1: number, unk2: number, unk3: number): number;
/**
 * See description of [`ADD_STUNT_JUMP_ANGLED`](#\_0xBBE5D803A5360CBF) for detailed info. The only difference really is this one does not have the radius (or angle, not sure) floats parameters for entry and landing zones.
 * Hash: 0x1A992DA297A4630C | ApiSet: undefined
 */
export declare function addStuntJump(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, x3: number, y3: number, z3: number, x4: number, y4: number, z4: number, camX: number, camY: number, camZ: number, unk1: number, unk2: number, unk3: number): number;
/**
 * ```
 * Adds a point related to CTacticalAnalysis
 * ```
 * Hash: 0xB8721407EE9C3FF6 | ApiSet: undefined
 */
export declare function addTacticalAnalysisPoint(position: Vector3): void;
/**
 * Hash: 0xE0E500246FF73D66 | ApiSet: undefined
 */
export declare function beginReplayStats(p0: any, p1: any): void;
/**
 * Hash: 0xC843060B5765DCE7 | ApiSet: undefined
 */
export declare function asin(value: number): number;
/**
 * Hash: 0x5AA3BEFA29F03AD4 | ApiSet: undefined
 */
export declare function areProfileSettingsValid(): boolean;
/**
 * Hash: 0xDEA36202FC3382DF | ApiSet: undefined
 */
export declare function allowMissionCreatorWarp(toggle: boolean): void;
/**
 * Hash: 0xC79AE21974B01FB2 | ApiSet: undefined
 */
export declare function cleanupAsyncInstall(): void;
/**
 * Hash: 0x8927CBF9D22261A4 | ApiSet: undefined
 */
export declare function atan2(p0: number, p1: number): number;
/**
 * Hash: 0xE6B7B0ACD4E4B75E | ApiSet: undefined
 */
export declare function cancelStuntJump(): void;
/**
 * Hash: 0x0C515FAB3FF9EA92 | ApiSet: undefined
 */
export declare function areStringsEqual(string1: string, string2: string): boolean;
/**
 * ```
 * Example: CLEAR_AREA(0, 0, 0, 30, true, false, false, false);
 * ```
 * Hash: 0xA56F01F3765B93A0 | ApiSet: undefined
 */
export declare function clearArea(position: Vector3, radius: number, p4: boolean, ignoreCopCars: boolean, ignoreObjects: boolean, p7: boolean): void;
/**
 * Closes the onscreen keyboard on console versions of the game.
 * **NOTE:** Do not use this native in FiveM/PC, because [`UPDATE_ONSCREEN_KEYBOARD`](#\_0x0CF2B696BBF945AE) value doesn't get cleaned up and stays as `0`.
 * You should use [`FORCE_CLOSE_TEXT_INPUT_BOX`](#\_0x8817605C2BA76200) instead.
 * Hash: 0x58A39BE597CE99CD | ApiSet: undefined
 */
export declare function cancelOnscreenKeyboard(): void;
/**
 * Hash: 0xA9D1795CD5043663 | ApiSet: undefined
 */
export declare function atan(p0: number): number;
/**
 * ```
 * `MISC::_0x957838AAF91BD12D(x, y, z, radius, false, false, false, false); seem to make all objects go away, peds, vehicles etc. All booleans set to true doesn't seem to change anything.`
 * ```
 * Hash: 0x957838AAF91BD12D | ApiSet: undefined
 */
export declare function clearAreaLeaveVehicleHealth(position: Vector3, radius: number, p4: boolean, p5: boolean, p6: boolean, p7: boolean): void;
/**
 * ```
 * NativeDB Added Parameter 13: Any p12
 * ```
 * Hash: 0x11DB3500F042A8AA | ApiSet: undefined
 */
export declare function clearAngledAreaOfVehicles(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, p7: boolean, p8: boolean, p9: boolean, p10: boolean, p11: boolean): void;
/**
 * Clears an area of cops at the given coordinates and radius.
 * Hash: 0x04F8FC8FCF58F88D | ApiSet: undefined
 */
export declare function clearAreaOfCops(position: Vector3, radius: number, createNetEvent: boolean): void;
/**
 * Hash: 0x9B2BD3773123EA2F | ApiSet: undefined
 */
export declare function blockDispatchServiceResourceCreation(dispatchService: number, toggle: boolean): void;
/**
 * ```
 * This sets bit [offset] of [address] to off.
 * Example:
 * `MISC::CLEAR_BIT(&bitAddress, 1);`
 * To check if this bit has been enabled:
 * `MISC::IS_BIT_SET(bitAddress, 1); // will return 0 afterwards`
 * ```
 * Hash: 0xE80492A9AC099A93 | ApiSet: undefined
 */
export declare function clearBit(offset: number): number;
/**
 * Clears an area of peds at the given coordinates and radius.
 * Hash: 0xBE31FD6CE464AC59 | ApiSet: undefined
 */
export declare function clearAreaOfPeds(position: Vector3, radius: number, createNetEvent: boolean): void;
/**
 * Clears an area of projectiles at the given coordinates and radius.
 * Hash: 0x0A1CB9094635D1A6 | ApiSet: undefined
 */
export declare function clearAreaOfProjectiles(position: Vector3, radius: number, createNetEvent: boolean): void;
/**
 * Hash: 0xA2716D40842EAF79 | ApiSet: undefined
 */
export declare function clearRestartCustomPosition(): void;
/**
 * ```
 * I looked through the PC scripts that this site provides you with a link to find. It shows the last param mainly uses, (0, 2, 6, 16, and 17) so I am going to assume it is a type of flag.
 * ```
 * Hash: 0xDD9B9B385AAC7F5B | ApiSet: undefined
 */
export declare function clearAreaOfObjects(position: Vector3, radius: number, flags: number): void;
/**
 * ```
 * Example: 		CLEAR_AREA_OF_VEHICLES(0, 0, 0, 10000, false, false, false, false, false);
 * ```
 * ```
 * NativeDB Added Parameter 10: BOOL p9
 * ```
 * Hash: 0x01C7B9B38428AEB6 | ApiSet: undefined
 */
export declare function clearAreaOfVehicles(position: Vector3, radius: number, p4: boolean, p5: boolean, p6: boolean, p7: boolean, p8: boolean): void;
/**
 * Hash: 0x1B1AB132A16FDA55 | ApiSet: undefined
 */
export declare function clearReplayStats(): void;
/**
 * Hash: 0x338D2E3477711050 | ApiSet: undefined
 */
export declare function clearOverrideWeather(): void;
/**
 * ```
 * Compares two strings up to a specified number of characters.
 * Parameters:
 * str1 - String to be compared.
 * str2 - String to be compared.
 * matchCase - Comparison will be case-sensitive.
 * maxLength - Maximum number of characters to compare. A value of -1 indicates an infinite length.
 * Returns:
 * A value indicating the relationship between the strings:
 * <0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'A' < 'B', so result = -1)
 * 0 - The contents of both strings are equal.
 * >0 - The first non-matching character in 'str1' is less than the one in 'str2'. (e.g. 'B' > 'A', so result = 1)
 * Examples:
 * `MISC::COMPARE_STRINGS("STRING", "string", false, -1); // 0; equal`
 * `MISC::COMPARE_STRINGS("TESTING", "test", false, 4); // 0; equal`
 * `MISC::COMPARE_STRINGS("R2D2", "R2xx", false, 2); // 0; equal`
 * `MISC::COMPARE_STRINGS("foo", "bar", false, -1); // 4; 'f' > 'b'`
 * `MISC::COMPARE_STRINGS("A", "A", true, 1); // 0; equal`
 * When comparing case-sensitive strings, lower-case characters are greater than upper-case characters:
 * `MISC::COMPARE_STRINGS("A", "a", true, 1); // -1; 'A' < 'a'`
 * `MISC::COMPARE_STRINGS("a", "A", true, 1); // 1; 'a' > 'A'`
 * ```
 * Hash: 0x1E34710ECD4AB0EB | ApiSet: undefined
 */
export declare function compareStrings(str1: string, str2: string, matchCase: boolean, maxLength: number): number;
/**
 * Hash: 0x957E790EA1727B64 | ApiSet: undefined
 */
export declare function clearCloudHat(): void;
/**
 * Clears the active weather type after a specific amount of time determined by `transitionTimeInMs`.
 * Hash: 0x0CF97F497FE7D048 | ApiSet: undefined
 */
export declare function clearWeatherTypeNowPersistNetwork(transitionTimeInMs: number): void;
/**
 * ```
 * NativeDB Added Parameter 6: Any p5
 * NativeDB Added Parameter 7: Any p6
 * ```
 * Hash: 0x05983472F0494E60 | ApiSet: undefined
 */
export declare function createIncidentWithEntity(dispatchService: number, ped: number | Ped, numUnits: number, radius: number): [boolean, number];
/**
 * Hash: 0xCCC39339BEF76CF5 | ApiSet: undefined
 */
export declare function clearWeatherTypePersist(): void;
/**
 * Hash: 0xB3CD58CCA6CDA852 | ApiSet: undefined
 */
export declare function clearTacticalAnalysisPoints(): void;
/**
 * ```
 * NativeDB Added Parameter 8: Any p7
 * NativeDB Added Parameter 9: Any p8
 * ```
 * Hash: 0x3F892CAF67444AE7 | ApiSet: undefined
 */
export declare function createIncident(dispatchService: number, position: Vector3, numUnits: number, radius: number): [boolean, number];
/**
 * Hash: 0x213AEB2B90CBA7AC | ApiSet: undefined
 */
export declare function copyMemory(src: any, size: number): any;
/**
 * ```
 * Delete an incident with a given id.
 * =======================================================
 * Correction, I have change this to int, instead of int*
 * as it doesn't use a pointer to the createdIncident.
 * If you try it you will crash (or) freeze.
 * =======================================================
 * ```
 * Hash: 0x556C1AA270D5A207 | ApiSet: undefined
 */
export declare function deleteIncident(incidentId: number): void;
/**
 * ```
 * Disables the spawn point at the police house on the specified index.
 * policeIndex: The police house index.
 * toggle: true to enable the spawn point, false to disable.
 * - Nacorpio
 * ```
 * Hash: 0x23285DED6EBD7EA3 | ApiSet: undefined
 */
export declare function disablePoliceRestart(policeIndex: number, toggle: boolean): void;
/**
 * Hash: 0xDC518000E39DAE1F | ApiSet: undefined
 */
export declare function deleteStuntJump(p0: number): void;
/**
 * ```
 * The game by default has 5 hospital respawn points. Disabling them all will cause the player to respawn at the last position they were.
 * ```
 * Hash: 0xC8535819C450EBA8 | ApiSet: undefined
 */
export declare function disableHospitalRestart(hospitalIndex: number, toggle: boolean): void;
/**
 * Displays a text input box.
 * ```cpp
 * enum eKeyboardType
 * {
 * ONSCREEN_KEYBOARD_ENGLISH = 0,
 * ONSCREEN_KEYBOARD_LOCALISED = 1,
 * ONSCREEN_KEYBOARD_PASSWORD = 2,
 * ONSCREEN_KEYBOARD_GAMERTAG = 3,
 * ONSCREEN_KEYBOARD_EMAIL = 4,
 * ONSCREEN_KEYBOARD_BASIC_ENGLISH = 5,
 * ONSCREEN_KEYBOARD_FILENAME = 6
 * };
 * ```
 * Hash: 0x00DC833F2568DBF6 | ApiSet: undefined
 */
export declare function displayOnscreenKeyboard(keyboardType: number, windowTitle: string, description: string, defaultText: string, defaultConcat1: string, defaultConcat2: string, defaultConcat3: string, maxInputLength: number): void;
/**
 * Hash: 0xA5272EBEDD4747F6 | ApiSet: undefined
 */
export declare function disableStuntJumpSet(p0: number): void;
/**
 * Hash: 0x50EEAAD86232EE55 | ApiSet: undefined
 */
export declare function doAutoSave(): void;
/**
 * Displays the text input box with support for input with 500 characters.
 * Hash: 0xCA78CFA0366592FE | ApiSet: undefined
 */
export declare function displayOnscreenKeyboardWithLongerInitialString(keyboardType: number, windowTitle: string, defaultText: string, defaultConcat1: string, defaultConcat2: string, defaultConcat3: string, defaultConcat4: string, defaultConcat5: string, defaultConcat6: string, defaultConcat7: string, maxInputLength: number): string;
/**
 * Hash: 0x1327E2FE9746BAEE | ApiSet: undefined
 */
export declare function doesPopMultiplierAreaExist(id: number): boolean;
/**
 * Enables or disables the specified 'dispatch service' type. 'Dispatch services' are used for spawning AI response peds/vehicles for events such as a fire in the street (type 3 - DT_FireDepartment), or gunfire in a gang area (type 11 - DT_Gangs).
 * List of dispatch services:
 * ```cpp
 * enum eDispatchType
 * {
 * DT_Invalid = 0,
 * DT_PoliceAutomobile = 1,
 * DT_PoliceHelicopter = 2,
 * DT_FireDepartment = 3,
 * DT_SwatAutomobile = 4,
 * DT_AmbulanceDepartment = 5,
 * DT_PoliceRiders = 6,
 * DT_PoliceVehicleRequest = 7,
 * DT_PoliceRoadBlock = 8,
 * DT_PoliceAutomobileWaitPulledOver = 9,
 * DT_PoliceAutomobileWaitCruising = 10,
 * DT_Gangs = 11,
 * DT_SwatHelicopter = 13,
 * DT_PoliceBoat = 14,
 * DT_ArmyVehicle = 15,
 * DT_BikerBackup = 15
 * };
 * ```
 * Note that 'dispatch service' has nothing to do with the police scanner (audio), to toggle that, use [SET_AUDIO_FLAG](#\_0xB9EFD5C25018725A) with `'PoliceScannerDisabled'`.
 * Hash: 0xDC0F817884CDD856 | ApiSet: undefined
 */
export declare function enableDispatchService(dispatchService: number, toggle: boolean): void;
/**
 * ```
 * Makes the ped jump around like they're in a tennis match
 * ```
 * Hash: 0x28A04B411933F8A6 | ApiSet: undefined
 */
export declare function enableTennisMode(ped: number | Ped, toggle: boolean, p2: boolean): void;
/**
 * ```
 * Sets the localplayer playerinfo state back to playing (State 0)
 * States are:
 * -1: "Invalid"
 * 0: "Playing"
 * 1: "Died"
 * 2: "Arrested"
 * 3: "Failed Mission"
 * 4: "Left Game"
 * 5: "Respawn"
 * 6: "In MP Cutscene"
 * ```
 * Hash: 0xC0AA53F866B3134D | ApiSet: undefined
 */
export declare function forceGameStatePlaying(): void;
/**
 * ```
 * creates single lightning+thunder at random position
 * ```
 * Hash: 0xF6062E089251C898 | ApiSet: undefined
 */
export declare function forceLightningFlash(): void;
/**
 * Hash: 0xE369A5783B866016 | ApiSet: undefined
 */
export declare function enableStuntJumpSet(p0: number): void;
/**
 * Hash: 0x8B3CA62B1EF19B62 | ApiSet: undefined
 */
export declare function getAllocatedStackSize(): number;
/**
 * ```
 * Finds a position ahead of the player by predicting the players next actions.
 * The positions match path finding node positions.
 * When roads diverge, the position may rapidly change between two or more positions. This is due to the engine not being certain of which path the player will take.
 * ```
 * Hash: 0x6874E2190B0C1972 | ApiSet: undefined
 */
export declare function findSpawnPointInDirection(posX: number, posY: number, posZ: number, dirX: number, dirY: number, dirZ: number, distance: number): [boolean, Vector3];
/**
 * Hash: 0xB335F761606DB47C | ApiSet: undefined
 */
export declare function getBaseElementMetadata(p3: any, p4: boolean): [boolean, any, any];
/**
 * Hash: 0x171BAFB3C60389F4 | ApiSet: undefined
 */
export declare function doesPopMultiplierSphereExist(id: number): boolean;
/**
 * ```
 * Returns value of the '-benchmarkIterations' command line option.
 * ```
 * Hash: 0x4750FC27570311EC | ApiSet: undefined
 */
export declare function getBenchmarkIterationsFromCommandLine(): number;
/**
 * Hash: 0xA23E821FBDF8A5F2 | ApiSet: undefined
 */
export declare function endReplayStats(): void;
/**
 * ```
 * Returns value of the '-benchmarkPass' command line option.
 * ```
 * Hash: 0x1B2366C3F2A5C8DF | ApiSet: undefined
 */
export declare function getBenchmarkPassFromCommandLine(): number;
/**
 * Hash: 0x186FC4BE848E1C92 | ApiSet: undefined
 */
export declare function getAngleBetween2dVectors(x1: number, y1: number, x2: number, y2: number): number;
/**
 * Hash: 0x53158863FCC0893A | ApiSet: undefined
 */
export declare function getBitsInRange(_var: number, rangeStart: number, rangeEnd: number): number;
/**
 * Hash: 0xE599A503B3837E1B | ApiSet: undefined
 */
export declare function getBenchmarkTime(): number;
/**
 * Hash: 0x20AC25E781AE4A84 | ApiSet: undefined
 */
export declare function getCloudHatOpacity(): number;
/**
 * Hash: 0x4C9296CBCD1B971E | ApiSet: undefined
 */
export declare function getFakeWantedLevel(): number;
/**
 * Hash: 0xDFB4138EEFED7B81 | ApiSet: undefined
 */
export declare function getCoordsOfProjectileTypeWithinDistance(ped: number | Ped, weaponHash: number | string, distance: number, ownedByPlayer: boolean): [boolean, Vector3];
/**
 * Hash: 0x8D7A43EC6A5FEA45 | ApiSet: undefined
 */
export declare function getCoordsOfProjectileTypeInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, projectileHash: number | string, ownedByPlayer: boolean): [boolean, Vector3];
/**
 * Returns the distance between two three-dimensional points, optionally ignoring the Z values.
 * If useZ is false, only the 2D plane (X-Y) will be considered for calculating the distance.
 * `Consider using this faster native instead: SYSTEM::VDIST - DVIST always takes in consideration the 3D coordinates.`
 * Hash: 0xF1B760881820C952 | ApiSet: undefined
 */
export declare function getDistanceBetweenCoords(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, useZ: boolean): number;
/**
 * Hash: 0x9CD27B0045628463 | ApiSet: undefined
 */
export declare function getGameTimer(): number;
/**
 * Gets the number of the current frame being displayed.
 * Hash: 0xFC8202EFC642E6F2 | ApiSet: undefined
 */
export declare function getFrameCount(): number;
/**
 * Gets the high precision frame time of the last frame in seconds.
 * *note: the example above is way less precise.*
 * Hash: 0x15C40837039FFAF7 | ApiSet: undefined
 */
export declare function getFrameTime(): number;
/**
 * This native converts its past string to hash. It is hashed using jenkins one at a time method.
 * Hash: 0xD24D37CC275948CC | ApiSet: undefined
 */
export declare function getHashKey(string: string): number;
/**
 * ```
 * Returns pointer to an empty string.
 * GET_C*
 * ```
 * Hash: 0x24DA7D7667FD7B09 | ApiSet: undefined
 */
export declare function getGlobalCharBuffer(): string;
/**
 * Determines the highest ground Z-coordinate directly below a specified 3D coordinate, excluding any objects at that point. Optionally, water can be considered as ground when determining the highest point.
 * ```
 * NativeDB Added Parameter 6: BOOL ignoreDistToWaterLevelCheck - If set to true, the distance to the water level will be ignored when checking for water as ground.
 * ```
 * ```
 * NativeDB Introduced: v505
 * ```
 * Hash: 0x9E82F0F362881B29 | ApiSet: undefined
 */
export declare function getGroundZExcludingObjectsFor3dCoord(position: Vector3, waterAsGround: boolean): [boolean, number];
/**
 * Hash: 0xCBAD6729F7B1F4FC | ApiSet: undefined
 */
export declare function getIndexOfCurrentLevel(): number;
/**
 * This native gets the ground level (ground elevation) and returns the Z coordinate that represents it.
 * Note: This native can only calculate the elevation when the coordinates are within the render distance of the client.
 * ```
 * NativeDB Added Parameter 6: BOOL p5
 * ```
 * Hash: 0xC906A7DAB05C8D2B | ApiSet: undefined
 */
export declare function getGroundZFor3dCoord(position: Vector3, includeWater: boolean): [boolean, number];
/**
 * Attempts to identify the highest ground Z-coordinate and determine the corresponding surface normal directly beneath a specified 3D coordinate.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x8BDC7BFC57A81E76 | ApiSet: undefined
 */
export declare function getGroundZAndNormalFor3dCoord(position: Vector3): [boolean, number, Vector3];
/**
 * ```
 * Although we don't have a jenkins hash for this one, the name is 100% confirmed.
 * ```
 * Hash: 0x9689123E3F213AA5 | ApiSet: undefined
 */
export declare function getIsPlayerInAnimalForm(): boolean;
/**
 * Hash: 0xA33CDCCDA663159E | ApiSet: undefined
 */
export declare function getMissionFlag(): boolean;
/**
 * ```
 * dx = x1 - x2
 * dy = y1 - y2
 * ```
 * Hash: 0x2FFB6B224F4B2926 | ApiSet: undefined
 */
export declare function getHeadingFromVector2d(dx: number, dy: number): number;
/**
 * Hash: 0xEB4A0C2D56441717 | ApiSet: undefined
 */
export declare function getNumDispatchedUnitsForPlayer(dispatchService: number): number;
/**
 * ```
 * Returns true if profile setting 208 is equal to 0.
 * ```
 * Hash: 0x6E04F06094C87047 | ApiSet: undefined
 */
export declare function getIsAutoSaveOff(): boolean;
/**
 * Determines whether a line segment intersects a plane and, if so, returns the parameter value at which this intersection occurs.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xF56DFB7B61BE7276 | ApiSet: undefined
 */
export declare function getLinePlaneIntersection(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, planeX: number, planeY: number, planeZ: number, planeNormalX: number, planeNormalY: number, planeNormalZ: number): [boolean, number];
/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#\_0x29B487C359E19889) for weather types.
 * Hash: 0x711327CD09C8F162 | ApiSet: undefined
 */
export declare function getNextWeatherTypeHashName(): number;
/**
 * ```
 * Gets the dimensions of a model.
 * Calculate (maximum - minimum) to get the size, in which case, Y will be how long the model is.
 * `Example from the scripts: MISC::GET_MODEL_DIMENSIONS(ENTITY::GET_ENTITY_MODEL(PLAYER::PLAYER_PED_ID()), &v_1A, &v_17);`
 * ```
 * Hash: 0x03E8D3D5F549087A | ApiSet: undefined
 */
export declare function getModelDimensions(modelHash: number | string): [Vector3, Vector3];
/**
 * Hash: 0xFEAD16FC8F9DFC0F | ApiSet: undefined
 */
export declare function getNumberOfFreeStacksOfThisSize(stackSize: number): number;
/**
 * Hash: 0x996DD1E1E02F1008 | ApiSet: undefined
 */
export declare function getNumSuccessfulStuntJumps(): number;
/**
 * ```
 * Returns NULL unless UPDATE_ONSCREEN_KEYBOARD() returns 1 in the same tick.
 * ```
 * Hash: 0x8362B09B91893647 | ApiSet: undefined
 */
export declare function getOnscreenKeyboardResult(): string;
/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#\_0x29B487C359E19889) for weather types.
 * Hash: 0x564B884A05EC45A3 | ApiSet: undefined
 */
export declare function getPrevWeatherTypeHashName(): number;
/**
 * Hash: 0x96695E368AD855F3 | ApiSet: undefined
 */
export declare function getRainLevel(): number;
/**
 * ```
 * Returns duration of how long the game has been in power-saving mode (aka "constrained") in milliseconds.
 * ```
 * Hash: 0xABB2FA71C83A1B72 | ApiSet: undefined
 */
export declare function getPowerSavingModeDuration(): number;
/**
 * Hash: 0x82FDE6A57EE4EE44 | ApiSet: undefined
 */
export declare function getProjectileNearPed(ped: number | Ped, weaponHash: number | string, distance: number, ownedByPlayer: boolean): [boolean, Vector3, any];
/**
 * Hash: 0xD2D57F1D764117B1 | ApiSet: undefined
 */
export declare function getRandomEventFlag(): boolean;
/**
 * Hash: 0xC488FF2356EA7791 | ApiSet: undefined
 */
export declare function getProfileSetting(profileSetting: number): number;
/**
 * Hash: 0xD53343AA4FB7DD28 | ApiSet: undefined
 */
export declare function getRandomIntInRange(startRange: number, endRange: number): number;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xF2D49816A804D134 | ApiSet: undefined
 */
export declare function getRandomIntInRange2(startRange: number, endRange: number): number;
/**
 * Hash: 0x8098C8D6597AAE18 | ApiSet: undefined
 */
export declare function getReplayStatAtIndex(index: number): number;
/**
 * Hash: 0x313CE5879CEB6FCD | ApiSet: undefined
 */
export declare function getRandomFloatInRange(startRange: number, endRange: number): number;
/**
 * Hash: 0xDC9274A7EF6B2867 | ApiSet: undefined
 */
export declare function getReplayStatCount(): number;
/**
 * Hash: 0xC5868A966E5BE3AE | ApiSet: undefined
 */
export declare function getSnowLevel(): number;
/**
 * Hash: 0x2B5E102E4A42F2BF | ApiSet: undefined
 */
export declare function getStatusOfMissionRepeatSave(): number;
/**
 * Hash: 0x2B626A0150E4D449 | ApiSet: undefined
 */
export declare function getReplayStatMissionType(): number;
/**
 * Hash: 0xA09F896CE912481F | ApiSet: undefined
 */
export declare function getSizeOfSaveData(p0: boolean): number;
/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#\_0x29B487C359E19889) for weather types.
 * Hash: 0xF3BBE884A14BB413 | ApiSet: undefined
 */
export declare function getWeatherTypeTransition(): [number, number, number];
/**
 * Hash: 0x6856EC3D35C81EA4 | ApiSet: undefined
 */
export declare function getTotalSuccessfulStuntJumps(): number;
/**
 * Hash: 0x17DF68D720AA77F8 | ApiSet: undefined
 */
export declare function getTennisSwingAnimComplete(ped: number | Ped): boolean;
/**
 * ```
 * Hardcoded to always return true.
 * ```
 * Hash: 0x14832BF2ABA53FC5 | ApiSet: undefined
 */
export declare function hasAsyncInstallFinished(): boolean;
/**
 * ```
 * p3 - possibly radius?
 * ```
 * Hash: 0x9870ACFB89A90995 | ApiSet: undefined
 */
export declare function hasBulletImpactedInArea(position: Vector3, p3: number, p4: boolean, p5: boolean): boolean;
/**
 * Hash: 0xA8CF1CC0AFCD3F12 | ApiSet: undefined
 */
export declare function getWindSpeed(): number;
/**
 * ```
 * Hardcoded to return false.
 * ```
 * Hash: 0xE8B9C0EC9E183F35 | ApiSet: undefined
 */
export declare function hasResumedFromSuspend(): boolean;
/**
 * ```
 * This native appears on the cheat_controller script and tracks a combination of buttons, which may be used to toggle cheats in-game. Credits to ThreeSocks for the info. The hash contains the combination, while the "amount" represents the amount of buttons used in a combination. The following page can be used to make a button combination: gta5offset.com/ts/hash/
 * INT_SCORES_SCORTED was a hash collision
 * ```
 * Hash: 0x071E2A839DE82D90 | ApiSet: undefined
 */
export declare function hasButtonCombinationJustBeenEntered(hash: number | string, amount: number): boolean;
/**
 * Used for hunting in singleplayer and for golfing in both sp and online. The [`GET_HEADING_FROM_VECTOR_2D`](#\_0x2FFB6B224F4B2926) native can be used to get the wind heading from the direction.
 * Hash: 0x1F400FEF721170DA | ApiSet: undefined
 */
export declare function getWindDirection(): Vector3;
/**
 * Hash: 0x075F1D57402C93BA | ApiSet: undefined
 */
export declare function haveCreditsReachedEnd(): boolean;
/**
 * ```
 * Get inputted "Cheat code", for example:
 * while (TRUE)
 * {
 * `if (MISC::_557E43C447E700A8(${fugitive}))`
 * {
 * // Do something.
 * }
 * `SYSTEM::WAIT(0);`
 * }
 * Calling this will also set the last saved string hash to zero.
 * ```
 * Hash: 0x557E43C447E700A8 | ApiSet: undefined
 */
export declare function hasCheatStringJustBeenEntered(hash: number | string): boolean;
/**
 * Hash: 0xDC8C5D7CFEAB8394 | ApiSet: undefined
 */
export declare function hasBulletImpactedInBox(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: boolean, p7: boolean): boolean;
/**
 * Hash: 0x21FFB63D8C615361 | ApiSet: undefined
 */
export declare function ignoreNextRestart(toggle: boolean): void;
/**
 * Hash: 0x69240733738C19A0 | ApiSet: undefined
 */
export declare function isAutoSaveInProgress(): boolean;
/**
 * Hash: 0xDE0F6D7450D37351 | ApiSet: undefined
 */
export declare function isBulletInBox(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, ownedByPlayer: boolean): boolean;
/**
 * ```
 * `if (MISC::IS_AUSSIE_VERSION()) {`
 * sub_127a9(&l_31, 1024); // l_31 |= 1024
 * l_129 = 3;
 * sub_129d2("AUSSIE VERSION IS TRUE!?!?!"); // DEBUG
 * }
 * Used to block some of the prostitute stuff due to laws in Australia.
 * ```
 * Hash: 0x9F1935CA1F724008 | ApiSet: undefined
 */
export declare function isAussieVersion(): boolean;
/**
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * For projectiles, see: [`IS_PROJECTILE_TYPE_IN_ANGLED_AREA`](#\_0xF0BC12401061DEA0)
 * Hash: 0x1A8B5F3C01E2B477 | ApiSet: undefined
 */
export declare function isBulletInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, ownedByPlayer: boolean): boolean;
/**
 * Hash: 0xA61B4DF533DCB56E | ApiSet: undefined
 */
export declare function isAreaOccupied(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: boolean, p7: boolean, p8: boolean, p9: boolean, p10: boolean, p11: any, p12: boolean): boolean;
/**
 * Hash: 0x4D982ADB1978442D | ApiSet: undefined
 */
export declare function isDurangoVersion(): boolean;
/**
 * ```
 * Returns true if command line option '-benchmark' is set.
 * ```
 * Hash: 0xA049A5BE0F04F2F8 | ApiSet: undefined
 */
export declare function isCommandLineBenchmarkValueSet(): boolean;
/**
 * ```
 * Returns bit's boolean state from [offset] of [address].
 * Example:
 * `MISC::IS_BIT_SET(bitAddress, 1);`
 * To enable and disable bits, see:
 * `MISC::SET_BIT(&bitAddress, 1);   // enable`
 * `MISC::CLEAR_BIT(&bitAddress, 1); // disable`
 * ```
 * Hash: 0xA921AA820C25702F | ApiSet: undefined
 */
export declare function isBitSet(address: number, offset: number): boolean;
/**
 * ```
 * =======================================================
 * Correction, I have change this to int, instead of int*
 * as it doesn't use a pointer to the createdIncident.
 * If you try it you will crash (or) freeze.
 * =======================================================
 * ```
 * Hash: 0xC8BC6461E629BEAA | ApiSet: undefined
 */
export declare function isIncidentValid(incidentId: number): boolean;
/**
 * Hash: 0x3F2023999AD51C1F | ApiSet: undefined
 */
export declare function isBulletInArea(position: Vector3, radius: number, ownedByPlayer: boolean): boolean;
/**
 * ```
 * NativeDB Introduced: 2545
 * ```
 * Hash: 0xB8C0BB75D8A77DB3 | ApiSet: undefined
 */
export declare function isJapaneseVersion(): boolean;
/**
 * ```
 * This function is hard-coded to always return 0.
 * ```
 * Hash: 0x7EA2B6AF97ECA6ED | ApiSet: undefined
 */
export declare function isFrontendFading(): boolean;
/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#\_0x29B487C359E19889) for weather types.
 * Hash: 0x2FAA3A30BEC0F25D | ApiSet: undefined
 */
export declare function isNextWeatherType(weatherType: string): boolean;
/**
 * Hash: 0x8A75CE2956274ADD | ApiSet: undefined
 */
export declare function isMemoryCardInUse(): boolean;
/**
 * Hash: 0x2B4A15E44DE0F478 | ApiSet: undefined
 */
export declare function isMinigameInProgress(): boolean;
/**
 * ```
 * aka "constrained"
 * ```
 * Hash: 0x684A41975F077262 | ApiSet: undefined
 */
export declare function isInPowerSavingMode(): boolean;
/**
 * Hash: 0xE54E209C35FFA18D | ApiSet: undefined
 */
export declare function isPointObscuredByAMissionEntity(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: any): boolean;
/**
 * Hash: 0x48AF36444B965238 | ApiSet: undefined
 */
export declare function isPcVersion(): boolean;
/**
 * Hash: 0xA72BC0B675B1519E | ApiSet: undefined
 */
export declare function isOrbisVersion(): boolean;
/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#\_0x29B487C359E19889) for weather types.
 * Hash: 0x44F28F86433B10A9 | ApiSet: undefined
 */
export declare function isPrevWeatherType(weatherType: string): boolean;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x1312F4B242609CE3 | ApiSet: undefined
 */
export declare function isPopMultiplierAreaUnk(id: number): boolean;
/**
 * Hash: 0xCCA1072C29D096C2 | ApiSet: undefined
 */
export declare function isPs3Version(): boolean;
/**
 * ```
 * Determines whether there is a projectile of a specific type within the specified coordinates. The coordinates form a axis-aligned bounding box.
 * ```
 * Hash: 0x2E0DC353342C4A6D | ApiSet: undefined
 */
export declare function isProjectileTypeInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, type: number, ownedByPlayer: boolean): boolean;
/**
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * ```
 * NativeDB Removed Parameter 7: float p7
 * ```
 * Hash: 0xF0BC12401061DEA0 | ApiSet: undefined
 */
export declare function isProjectileTypeInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, p7: number, weaponHash: number | string, ownedByPlayer: boolean): boolean;
/**
 * ```
 * Determines whether there is a sniper bullet within the specified coordinates. The coordinates form an axis-aligned bounding box.
 * ```
 * Hash: 0xFEFCF11B01287125 | ApiSet: undefined
 */
export declare function isSniperBulletInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * The BOOL parameters that are documented have not been confirmed. They are just documented from what I've found during testing. They may not work as expected in all cases.
 * Hash: 0xADCDE75E1C60F32D | ApiSet: undefined
 */
export declare function isPositionOccupied(position: Vector3, range: number, p4: boolean, checkVehicles: boolean, checkPeds: boolean, p7: boolean, p8: boolean, ignoreEntity: number | Entity, p10: boolean): boolean;
/**
 * ```
 * This function is hard-coded to always return 0.
 * ```
 * Hash: 0x61A23B7EDA9BDA24 | ApiSet: undefined
 */
export declare function isSniperInverted(): boolean;
/**
 * ```
 * NativeDB Introduced: 2545
 * ```
 * Hash: 0x0A27B2B6282F7169 | ApiSet: undefined
 */
export declare function isSteamVersion(): boolean;
/**
 * ```
 * Determines whether there is a projectile within the specified coordinates. The coordinates form a rectangle.
 * ownedByPlayer = only projectiles fired by the player will be detected.
 * ```
 * Hash: 0x5270A8FBC098C3F8 | ApiSet: undefined
 */
export declare function isProjectileInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, ownedByPlayer: boolean): boolean;
/**
 * Hash: 0xCA042B6957743895 | ApiSet: undefined
 */
export declare function isStringNullOrEmpty(string: string): boolean;
/**
 * Hash: 0x2272B0A1343129F4 | ApiSet: undefined
 */
export declare function isStuntJumpMessageShowing(): boolean;
/**
 * Hash: 0x7A3F19700A4D0525 | ApiSet: undefined
 */
export declare function isStuntJumpInProgress(): boolean;
/**
 * Hash: 0xF22B6C47C6EAB066 | ApiSet: undefined
 */
export declare function isStringNull(string: string): boolean;
/**
 * Hash: 0x34318593248C8FB2 | ApiSet: undefined
 */
export declare function isProjectileTypeWithinDistance(position: Vector3, projHash: number | string, radius: number, ownedByPlayer: boolean): boolean;
/**
 * ```
 * Returns true if the current frontend menu is FE_MENU_VERSION_LANDING_MENU
 * ```
 * Hash: 0x3BBBD13E5041A79E | ApiSet: undefined
 */
export declare function landingMenuIsActive(): boolean;
/**
 * Hash: 0x7B30F65D7B710098 | ApiSet: undefined
 */
export declare function isThisAMinigameScript(): boolean;
/**
 * Hash: 0x5D5479D115290C3F | ApiSet: undefined
 */
export declare function isTennisMode(ped: number | Ped): boolean;
/**
 * ```
 * The following cloudhats are useable:
 * altostratus
 * Cirrus
 * cirrocumulus
 * Clear 01
 * Cloudy 01
 * Contrails
 * Horizon
 * horizonband1
 * horizonband2
 * horizonband3
 * horsey
 * Nimbus
 * Puffs
 * RAIN
 * Snowy 01
 * Stormy 01
 * stratoscumulus
 * Stripey
 * shower
 * Wispy
 * ```
 * Hash: 0xFC4842A34657BFCB | ApiSet: undefined
 */
export declare function loadCloudHat(name: string, transitionTime: number): void;
/**
 * ```
 * CLEAR_*
 * ```
 * Hash: 0x06462A961E94B67C | ApiSet: undefined
 */
export declare function _0x06462A961E94B67C(): void;
/**
 * Hash: 0xF6201B4DAF662A9D | ApiSet: undefined
 */
export declare function isXbox360Version(): boolean;
/**
 * ```
 * HAS_*
 * ```
 * Hash: 0x2107A3773771186D | ApiSet: undefined
 */
export declare function _0x2107A3773771186D(): boolean;
/**
 * ```
 * GET_TENNIS_*; references 0xFBFEC0E9 = interruptswing
 * ```
 * Hash: 0x19BFED045C647C49 | ApiSet: undefined
 */
export declare function _0x19BFED045C647C49(ped: number | Ped): boolean;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x31125FD509D9043F | ApiSet: undefined
 */
export declare function _0x31125FD509D9043F(): any;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x1178E104409FE58C | ApiSet: undefined
 */
export declare function _0x1178E104409FE58C(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x39455BF4F4F55186 | ApiSet: undefined
 */
export declare function _0x39455BF4F4F55186(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any): any;
/**
 * Hash: 0x397BAA01068BAA96 | ApiSet: undefined
 */
export declare function _0x397BAA01068BAA96(): number;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x23227DF0B2115469 | ApiSet: undefined
 */
export declare function _0x23227DF0B2115469(): void;
/**
 * ```
 * GET_C*
 * ```
 * Hash: 0x21C235BC64831E5A | ApiSet: undefined
 */
export declare function _0x21C235BC64831E5A(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: boolean): Vector3;
/**
 * ```
 * Only found 3 times in decompiled scripts. Not a whole lot to go off of.
 * `MISC::_48F069265A0E4BEC(a_0, "Movie_Name_For_This_Player");`
 * `MISC::_48F069265A0E4BEC(&a_0._fB, "Ringtone_For_This_Player");`
 * `MISC::_48F069265A0E4BEC(&a_0._f1EC4._f12[v_A\/\*6\*\/], &v_13); // where v_13 is "MPATMLOGSCRS0" thru "MPATMLOGSCRS15"`
 * ```
 * Hash: 0x48F069265A0E4BEC | ApiSet: undefined
 */
export declare function _0x48F069265A0E4BEC(name: string): any;
/**
 * ```
 * From the scripts:
 * `MISC::_54F157E0336A3822(sub_aa49(a_0), "ForcedStopDirection", v_E);`
 * Related to tennis mode.
 * SET_*
 * ```
 * Hash: 0x54F157E0336A3822 | ApiSet: undefined
 */
export declare function _0x54F157E0336A3822(ped: number | Ped, p1: string, p2: number): void;
/**
 * ```
 * Sets GtaThread+0x14A
 * SET_S*
 * ```
 * Hash: 0x65D2EBB47E1CEC21 | ApiSet: undefined
 */
export declare function _0x65D2EBB47E1CEC21(toggle: boolean): void;
/**
 * Hash: 0x693478ACBD7F18E7 | ApiSet: undefined
 */
export declare function _0x693478ACBD7F18E7(): void;
/**
 * ```
 * HAS_*
 * Probably something like "has game been started for the first time".
 * ```
 * Hash: 0x6FDDF453C0C756EC | ApiSet: undefined
 */
export declare function _0x6FDDF453C0C756EC(): boolean;
/**
 * ```
 * Only found 2 times in decompiled scripts. Not a whole lot to go off of.
 * `MISC::_8269816F6CFD40F8(&a_0._f1F5A._f6[0\/\*8\*\/], "TEMPSTAT_LABEL"); // gets saved in a struct called "g_SaveData_STRING_ScriptSaves"`
 * `MISC::_8269816F6CFD40F8(&a_0._f4B4[v_1A\/\*8\*\/], &v_5); // where v_5 is "Name0" thru "Name9", gets saved in a struct called "OUTFIT_Name"`
 * ```
 * Hash: 0x8269816F6CFD40F8 | ApiSet: undefined
 */
export declare function _0x8269816F6CFD40F8(name: string): any;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x703CC7F60CBB2B57 | ApiSet: undefined
 */
export declare function _0x703CC7F60CBB2B57(p0: any): void;
/**
 * Hash: 0x5B1F2E327B6B6FE1 | ApiSet: undefined
 */
export declare function _0x5B1F2E327B6B6FE1(): any;
/**
 * Hash: 0x7F8F6405F4777AF6 | ApiSet: undefined
 */
export declare function _0x7F8F6405F4777AF6(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: boolean): number;
/**
 * ```
 * I*
 * ```
 * Hash: 0x8D74E26F54B4E5C3 | ApiSet: undefined
 */
export declare function _0x8D74E26F54B4E5C3(p0: string): void;
/**
 * ```
 * Sets bit 3 in GtaThread+0x150
 * SET_T*
 * ```
 * Hash: 0x6F2135B6129620C1 | ApiSet: undefined
 */
export declare function _0x6F2135B6129620C1(toggle: boolean): void;
/**
 * ```
 * Possibly used to clear scenario points.
 * CLEAR_*
 * ```
 * Hash: 0x7EC6F9A478A6A512 | ApiSet: undefined
 */
export declare function _0x7EC6F9A478A6A512(): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x8951EB9C6906D3C8 | ApiSet: undefined
 */
export declare function _0x8951EB9C6906D3C8(): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x97E7E2C04245115B | ApiSet: undefined
 */
export declare function _0x97E7E2C04245115B(p0: any): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0xBA4B8D83BDC75551 | ApiSet: undefined
 */
export declare function _0xBA4B8D83BDC75551(p0: any): void;
/**
 * Does nothing (it's a nullsub). Seems to be PS4 specific.
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x916CA67D26FD1E37 | ApiSet: undefined
 */
export declare function _0x916CA67D26FD1E37(p0: string): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xA0AD167E4B39D9A2 | ApiSet: undefined
 */
export declare function _0xA0AD167E4B39D9A2(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any, p13: any): any;
/**
 * ```
 * GET_SAVE_*
 * GET_SAVE_UNLESS_CUSTOM_DOT ?
 * ```
 * Hash: 0xA4A0065E39C9F25C | ApiSet: undefined
 */
export declare function _0xA4A0065E39C9F25C(): [boolean, Vector3, number, boolean, boolean];
/**
 * Hash: 0xD642319C54AADEB6 | ApiSet: undefined
 */
export declare function _0xD642319C54AADEB6(): any;
/**
 * Hash: 0xD10282B6E3751BA0 | ApiSet: undefined
 */
export declare function _0xD10282B6E3751BA0(): any;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0xEB078CA2B5E82ADD | ApiSet: undefined
 */
export declare function _0xEB078CA2B5E82ADD(p0: any, p1: any): void;
/**
 * Hash: 0xB51B9AB9EF81868C | ApiSet: undefined
 */
export declare function _0xB51B9AB9EF81868C(toggle: boolean): void;
/**
 * ```
 * RESET_*
 * ```
 * Hash: 0xD9F692D349249528 | ApiSet: undefined
 */
export declare function _0xD9F692D349249528(): void;
/**
 * ```
 * SET_*
 * ```
 * Hash: 0xE532EC1A63231B4F | ApiSet: undefined
 */
export declare function _0xE532EC1A63231B4F(p0: number, p1: number): void;
/**
 * ```
 * sets something to 1
 * ```
 * Hash: 0xE3D969D2785FFB5E | ApiSet: undefined
 */
export declare function _0xE3D969D2785FFB5E(): void;
/**
 * Related to tennis mode. Checks for `0x0FCED5ADF = swung`
 * Hash: 0xE95B0C7D5BA3B96B | ApiSet: undefined
 */
export declare function _0xE95B0C7D5BA3B96B(ped: number | Ped): boolean;
/**
 * Hash: 0xEB2104E905C6F2E9 | ApiSet: undefined
 */
export declare function _0xEB2104E905C6F2E9(): any;
/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0xFA3FFB0EEBC288A3 | ApiSet: undefined
 */
export declare function _0xFA3FFB0EEBC288A3(p0: boolean): void;
/**
 * ```
 * Another unknown label type...
 * `MISC::_FAA457EF263E8763(a_0, "Thumb_label");`
 * `MISC::_FAA457EF263E8763(&a_0._f10, "Photo_label");`
 * `MISC::_FAA457EF263E8763(a_0, "GXTlabel");`
 * `MISC::_FAA457EF263E8763(&a_0._f21, "StringComp");`
 * `MISC::_FAA457EF263E8763(&a_0._f43, "SecondStringComp");`
 * `MISC::_FAA457EF263E8763(&a_0._f53, "ThirdStringComp");`
 * `MISC::_FAA457EF263E8763(&a_0._f32, "SenderStringComp");`
 * `MISC::_FAA457EF263E8763(&a_0._f726[v_1A\/\*16\*\/], &v_20); // where v_20 is "LastJobTL_0_1" thru "LastJobTL_2_1", gets saved in a struct called "LAST_JobGamer_TL"`
 * `MISC::_FAA457EF263E8763(&a_0._f4B, "PAID_PLAYER");`
 * `MISC::_FAA457EF263E8763(&a_0._f5B, "RADIO_STATION");`
 * ```
 * Hash: 0xFAA457EF263E8763 | ApiSet: undefined
 */
export declare function _0xFAA457EF263E8763(name: string): any;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0xEBD3205A207939ED | ApiSet: undefined
 */
export declare function _0xEBD3205A207939ED(): any;
/**
 * Hash: 0x9243BAC96D64C050 | ApiSet: undefined
 */
export declare function networkSetScriptIsSafeForNetworkGame(): void;
/**
 * Hash: 0xFB00CA71DA386228 | ApiSet: undefined
 */
export declare function _0xFB00CA71DA386228(): void;
/**
 * ```cpp
 * enum eFontBitField
 * {
 * FONT_BIT_STANDARD = 1,
 * FONT_BIT_CURSIVE = 2,
 * FONT_BIT_ROCKSTAR_TAG = 4
 * FONT_BIT_LEADERBOARD = 8
 * FONT_BIT_CONDENSED = 16
 * FONT_BIT_FIXED_WIDTH_NUMBERS = 32
 * FONT_BIT_CONDENSED_NOT_GAMERNAME = 64
 * FONT_BIT_PRICEDOWN = 128
 * };
 * ```
 * Hash: 0x3ED1438C1F5C6612 | ApiSet: undefined
 */
export declare function nextOnscreenKeyboardResultWillDisplayUsingTheseFonts(fontBitField: number): void;
/**
 * Hash: 0x1162EA8AE9D24EEA | ApiSet: undefined
 */
export declare function overrideSaveHouse(p0: boolean, p1: number, p2: number, p3: number, p4: number, p5: boolean): [boolean, Vector3, number];
/**
 * ```
 * Found in the scripts:
 * `MISC::_11B56FBBF7224868("CONTRAILS");`
 * ```
 * Hash: 0x11B56FBBF7224868 | ApiSet: undefined
 */
export declare function preloadCloudHat(name: string): void;
/**
 * Hash: 0x2C2B3493FBF51C71 | ApiSet: undefined
 */
export declare function pauseDeathArrestRestart(toggle: boolean): void;
/**
 * Hash: 0xE266ED23311F24D4 | ApiSet: undefined
 */
export declare function playTennisSwingAnim(ped: number | Ped, animDict: string, animName: string, p3: number, p4: number, p5: boolean): void;
/**
 * Hash: 0x8FA9C42FC5D7C64B | ApiSet: undefined
 */
export declare function playTennisDiveAnim(ped: number | Ped, p1: number, p2: number, p3: number, p4: number, p5: boolean): void;
/**
 * Hash: 0x72DE52178C291CB5 | ApiSet: undefined
 */
export declare function queueMissionRepeatLoad(): boolean;
/**
 * ```
 * spawns a few distant/out-of-sight peds, vehicles, animals etc each time it is called
 * ```
 * Hash: 0x7472BB270D7B4F3E | ApiSet: undefined
 */
export declare function populateNow(): void;
/**
 * Shows the screen which is visible before you redo a mission? The game will make a restoration point where you will cameback when the mission is over.
 * Hash: 0x44A0BDC559B35F6E | ApiSet: undefined
 */
export declare function queueMissionRepeatSave(): boolean;
/**
 * Quits the game.
 * Hash: 0xEB6891F03362FB12 | ApiSet: undefined
 */
export declare function quitGame(): void;
/**
 * Hash: 0x7CAEC29ECB5DFEBB | ApiSet: undefined
 */
export declare function registerFloatToSave(name: string): any;
/**
 * Hash: 0xC8F4131414C835A1 | ApiSet: undefined
 */
export declare function registerBoolToSave(name: string): any;
/**
 * Hash: 0xEDB1232C5BEAE62F | ApiSet: undefined
 */
export declare function registerTextLabelToSave(name: string): any;
/**
 * Hash: 0x34C9EE5986258415 | ApiSet: undefined
 */
export declare function registerIntToSave(name: string): any;
/**
 * Hash: 0x10C2FA78D0E128A1 | ApiSet: undefined
 */
export declare function registerEnumToSave(name: string): any;
/**
 * Hash: 0xC0714D0A7EEECA54 | ApiSet: undefined
 */
export declare function registerSaveHouse(p0: number, p1: number, p2: number, p3: number, p5: any, p6: any): [any, any];
/**
 * Hash: 0xE6869BECDD8F2403 | ApiSet: undefined
 */
export declare function removePopMultiplierSphere(id: number, p1: boolean): void;
/**
 * Hash: 0xA735353C77334EA0 | ApiSet: undefined
 */
export declare function registerInt64ToSave(name: string): any;
/**
 * Hash: 0x264AC28B01B353A5 | ApiSet: undefined
 */
export declare function removeDispatchSpawnBlockingArea(p0: any): void;
/**
 * Hash: 0xB129E447A2EDA4BF | ApiSet: undefined
 */
export declare function removePopMultiplierArea(id: number, p1: boolean): void;
/**
 * ```
 * Seems to have the same functionality as REGISTER_TEXT_LABEL_TO_SAVE?
 * `MISC::_6F7794F28C6B2535(&a_0._f1, "tlPlateText");`
 * `MISC::_6F7794F28C6B2535(&a_0._f1C, "tlPlateText_pending");`
 * `MISC::_6F7794F28C6B2535(&a_0._f10B, "tlCarAppPlateText");`
 * "tl" prefix sounds like "Text Label"
 * ```
 * Hash: 0x6F7794F28C6B2535 | ApiSet: undefined
 */
export declare function registerTextLabelToSave2(name: string): any;
/**
 * Hash: 0x77A84429DD9F0A15 | ApiSet: undefined
 */
export declare function resetDispatchIdealSpawnDistance(): void;
/**
 * ```
 * Begins with RESET_*. Next character in the name is either D or E.
 * ```
 * Hash: 0x437138B6A830166A | ApiSet: undefined
 */
export declare function resetBenchmarkRecording(): void;
/**
 * ```
 * Appears to remove stealth kill action from memory
 * ```
 * Hash: 0xA6A12939F16D85BE | ApiSet: undefined
 */
export declare function removeStealthKill(hash: number | string, p1: boolean): void;
/**
 * In singleplayer it does exactly what the name implies. In FiveM / GTA:Online it shows the `Disconnecting from GTA Online` warning screen message and quits the game.
 * After quitting, the game process is started again (as the name implies).
 * Hash: 0xE574A662ACAEFBB1 | ApiSet: undefined
 */
export declare function restartGame(): void;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xEB2DB0CAD13154B3 | ApiSet: undefined
 */
export declare function resetDispatchTimeBetweenSpawnAttempts(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x5896F2BD5683A4E1 | ApiSet: undefined
 */
export declare function resetDispatchSpawnLocation(): void;
/**
 * Hash: 0xAC7BFD5C1D83EA75 | ApiSet: undefined
 */
export declare function resetDispatchSpawnBlockingAreas(): void;
/**
 * ```
 * Saves the benchmark recording to %USERPROFILE%\Documents\Rockstar Games\GTA V\Benchmarks and submits some metrics.
 * ```
 * Hash: 0x37DEB0AA183FB6D8 | ApiSet: undefined
 */
export declare function saveBenchmarkRecording(): void;
/**
 * Hash: 0x8EF5573A1F801A5C | ApiSet: undefined
 */
export declare function scriptRaceGetPlayerSplitTime(player: number | string | Player): [boolean, number, number];
/**
 * Records that a player has successfully passed a checkpoint during a scripted race in GTA:Online. This native should be used after initializing the race with [`SCRIPT_RACE_INIT`](#\_0x0A60017F841A54F2).
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x1BB299305C3E8C13 | ApiSet: undefined
 */
export declare function scriptRacePlayerHitCheckpoint(ped: number | Ped, checkpoint: number, lap: number, time: number): void;
/**
 * Initializes a script race in GTA:Online and sets up the helper split time system.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x0A60017F841A54F2 | ApiSet: undefined
 */
export declare function scriptRaceInit(numCheckpoints: number, numLaps: number, numPlayers: number, localPlayer: number | string | Player): void;
/**
 * Allows modification of the cloud opacity. It can also be used in other contexts, such as when the player is in a switch state [`IS_PLAYER_SWITCH_IN_PROGRESS`](#\_0xD9D2CFFF49FAB35F).
 * Hash: 0xF36199225D6D8C86 | ApiSet: undefined
 */
export declare function setCloudsAlpha(opacity: number): void;
/**
 * Hash: 0x1FF6BF9A63E5757F | ApiSet: undefined
 */
export declare function scriptRaceShutdown(): void;
/**
 * ```
 * This sets bit [offset] of [address] to on.
 * The offsets used are different bits to be toggled on and off, typically there is only one address used in a script.
 * Example:
 * `MISC::SET_BIT(&bitAddress, 1);`
 * To check if this bit has been enabled:
 * `MISC::IS_BIT_SET(bitAddress, 1); // will return 1 afterwards`
 * Please note, this method may assign a value to [address] when used.
 * ```
 * Hash: 0x933D6A9EEC1BACD0 | ApiSet: undefined
 */
export declare function setBit(offset: number): number;
/**
 * Hash: 0x438822C279B73B93 | ApiSet: undefined
 */
export declare function setBeastModeActive(player: number | string | Player): void;
/**
 * Hash: 0x6FE601A64180D423 | ApiSet: undefined
 */
export declare function setDispatchIdealSpawnDistance(p0: number): void;
/**
 * Overrides the cloud settings, which are normally controlled by the weather, with the specified named version. This native allows for custom cloud formations and behaviors that deviate from the default settings associated with the game's current weather conditions.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x02DEAAC8F8EA7FE7 | ApiSet: undefined
 */
export declare function setCloudSettingsOverride(overrideSettingsName: string): void;
/**
 * Hash: 0x8EF07E15701D61ED | ApiSet: undefined
 */
export declare function setBitsInRange(rangeStart: number, rangeEnd: number, p3: number): number;
/**
 * Hash: 0xA66C71C98D5F2CFB | ApiSet: undefined
 */
export declare function setExplosiveAmmoThisFrame(player: number | string | Player): void;
/**
 * Hash: 0xD10F442036302D50 | ApiSet: undefined
 */
export declare function setDispatchSpawnLocation(position: Vector3): void;
/**
 * Hash: 0xB938B7E6D3C0620C | ApiSet: undefined
 */
export declare function setCreditsActive(toggle: boolean): void;
/**
 * ```
 * Sets whether the game should fade out after the player is arrested.
 * ```
 * Hash: 0x1E0B4DC0D990A4E7 | ApiSet: undefined
 */
export declare function setFadeOutAfterArrest(toggle: boolean): void;
/**
 * Hash: 0xFF1BED81BFDC0FE0 | ApiSet: undefined
 */
export declare function setExplosiveMeleeThisFrame(player: number | string | Player): void;
/**
 * Hash: 0x44F7CBC1BEB3327D | ApiSet: undefined
 */
export declare function setDispatchTimeBetweenSpawnAttempts(p0: any, p1: number): void;
/**
 * ```
 * Sets whether the game should fade in after the player dies or is arrested.
 * ```
 * Hash: 0xDA66D2796BA33F12 | ApiSet: undefined
 */
export declare function setFadeInAfterDeathArrest(toggle: boolean): void;
/**
 * ```
 * Sets whether the game should fade out after the player dies.
 * ```
 * Hash: 0x4A18E01DF2C87B86 | ApiSet: undefined
 */
export declare function setFadeOutAfterDeath(toggle: boolean): void;
/**
 * Hash: 0x48838ED9937A15D1 | ApiSet: undefined
 */
export declare function setDispatchTimeBetweenSpawnAttemptsMultiplier(p0: any, p1: number): void;
/**
 * Hash: 0xF3D78F59DFE18D79 | ApiSet: undefined
 */
export declare function setFadeInAfterLoad(toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0xA1183BCFEE0F93D1 | ApiSet: undefined
 */
export declare function setForcePlayerToJump(player: number | string | Player): void;
/**
 * ```
 * Sets a visually fake wanted level on the user interface. Used by Rockstar's scripts to "override" regular wanted levels and make custom ones while the real wanted level and multipliers are still in effect.
 * Max is 6, anything above this makes it just 6. Also the mini-map gets the red & blue flashing effect.
 * ```
 * Hash: 0x1454F2448DE30163 | ApiSet: undefined
 */
export declare function setFakeWantedLevel(fakeWantedLevel: number): void;
/**
 * Hash: 0x11879CDD803D30F4 | ApiSet: undefined
 */
export declare function setFireAmmoThisFrame(player: number | string | Player): void;
/**
 * Hash: 0xB08B85D860E7BA3C | ApiSet: undefined
 */
export declare function setIncidentRequestedUnits(incidentId: number, dispatchService: number, numUnits: number): void;
/**
 * ```cpp
 * enum eGravityLevel
 * {
 * GRAV_EARTH = 0, // earth gravity 9.8m/s2
 * GRAV_MOON = 1, // moon gravity 2.4m/s2
 * GRAV_LOW = 2, // very low gravity
 * GRAV_ZERO = 3 // zero gravity
 * }
 * ```
 * Hash: 0x740E14FAD5842351 | ApiSet: undefined
 */
export declare function setGravityLevel(level: number): void;
/**
 * Sets the maximum prop density and changes a loading screen flag from 'loading story mode' to 'loading GTA Online'. It causes a loading screen to show as it reloads map data.
 * Hash: 0x9BAE5AD2508DF078 | ApiSet: undefined
 */
export declare function setInstancePriorityMode(toggle: number): void;
/**
 * ```
 * Make sure to call this from the correct thread if you're using multiple threads because all other threads except the one which is calling SET_GAME_PAUSED will be paused which means you will lose control and the game remains in paused mode until you exit GTA5.exe
 * ```
 * Hash: 0x577D1284D6873711 | ApiSet: undefined
 */
export declare function setGamePaused(toggle: boolean): void;
/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#\_0x29B487C359E19889) for weather types.
 * Hash: 0xA43D5C6FE51ADBEF | ApiSet: undefined
 */
export declare function setOverrideWeather(weatherType: string): void;
/**
 * ```
 * SET_INCIDENT_*
 * ```
 * Hash: 0xD261BA3E7E998072 | ApiSet: undefined
 */
export declare function setIncidentUnk(incidentId: number, p1: number): void;
/**
 * ```
 * Sets an unknown flag used by CScene in determining which entities from CMapData scene nodes to draw, similar to SET_INSTANCE_PRIORITY_MODE.
 * ```
 * Hash: 0xC5F0A8EBD3F361CE | ApiSet: undefined
 */
export declare function setInstancePriorityHint(flag: number): void;
/**
 * Hash: 0x19E00D7322C6F85B | ApiSet: undefined
 */
export declare function setMinigameInProgress(toggle: boolean): void;
/**
 * Controls rain, rain sounds and the creation of puddles.
 * With an `level` higher than `0.5f`, only the creation of puddles gets faster, rain and rain sound won't increase after that.
 * With an `level` of `0.0f` rain and rain sounds are disabled and there won't be any new puddles.
 * To use the rain level of the current weather, call this native with `-1f` as `level`.
 * Hash: 0x643E26EA6E024D92 | ApiSet: undefined
 */
export declare function setRainLevel(level: number): void;
/**
 * ```
 * SET_PLAYER_*
 * ```
 * Hash: 0x9D8D44ADBBA61EF2 | ApiSet: undefined
 */
export declare function setPlayerRockstarEditorDisabled(toggle: boolean): void;
/**
 * ```
 * If toggle is true, the ped's head is shown in the pause menu
 * If toggle is false, the ped's head is not shown in the pause menu
 * ```
 * Hash: 0x4EBB7E87AA0DBED4 | ApiSet: undefined
 */
export declare function setPlayerIsInAnimalForm(toggle: boolean): void;
/**
 * ```
 * If true, the player can't save the game.
 * If the parameter is true, sets the mission flag to true, if the parameter is false, the function does nothing at all.
 * ^ also, if the mission flag is already set, the function does nothing at all
 * ```
 * Hash: 0xC4301E5121A0ED73 | ApiSet: undefined
 */
export declare function setMissionFlag(toggle: boolean): void;
/**
 * Hash: 0x444D98F98C11F3EC | ApiSet: undefined
 */
export declare function setRandomSeed(seed: number): void;
/**
 * Hash: 0x8B05F884CF7E8020 | ApiSet: undefined
 */
export declare function setRandomWeatherType(): void;
/**
 * ```
 * If the parameter is true, sets the random event flag to true, if the parameter is false, the function does nothing at all.
 * Does nothing if the mission flag is set.
 * ```
 * Hash: 0x971927086CFD2158 | ApiSet: undefined
 */
export declare function setRandomEventFlag(toggle: boolean): void;
/**
 * Hash: 0x4F548CABEAE553BC | ApiSet: undefined
 */
export declare function setSaveHouse(p0: any, p1: boolean, p2: boolean): void;
/**
 * ```
 * ignoreVehicle - bypasses vehicle check of the local player (it will not open if you are in a vehicle and this is set to false)
 * ```
 * Hash: 0xC9BF75D28165FF77 | ApiSet: undefined
 */
export declare function setSaveMenuActive(ignoreVehicle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x7F06937B0CDCBC1A | ApiSet: undefined
 */
export declare function setSnowLevel(level: number): void;
/**
 * Hash: 0x706B5EDCAA7FA663 | ApiSet: undefined
 */
export declare function setRestartCustomPosition(position: Vector3, heading: number): void;
/**
 * Activates riot mode. All NPCs are being hostile to each other (including player). Also the game will give weapons (pistols, smgs) to random NPCs.
 * Hash: 0x2587A48BC88DFADF | ApiSet: undefined
 */
export declare function setRiotModeEnabled(toggle: boolean): void;
/**
 * Allows the player to perform super jumps. This function must be called every frame for it to work.
 * It basically OR's a flag for a single frame, allowing the ped to perform a super jump only when the flag is set.
 * Hash: 0x57FFF03E423A4C0B | ApiSet: undefined
 */
export declare function setSuperJumpThisFrame(player: number | string | Player): void;
/**
 * Hash: 0xAA391C728106F7AF | ApiSet: undefined
 */
export declare function setThisScriptCanBePaused(toggle: boolean): void;
/**
 * Normally, blips can only be removed by the script or resource that created them. However, this native function allows a script to bypass this logic and remove blips from any script.
 * Hash: 0xB98236CAAECEF897 | ApiSet: undefined
 */
export declare function setThisScriptCanRemoveBlipsCreatedByAnyScript(toggle: boolean): void;
/**
 * Hash: 0xD79185689F8FD5DF | ApiSet: undefined
 */
export declare function setStuntJumpsCanTrigger(toggle: boolean): void;
/**
 * Immediately changes the game's weather to the specified type, which will then persist for one cycle before the game resumes its natural weather progression.
 * **Note:** This native is not supported in networked sessions. Please refer to [`SET_OVERRIDE_WEATHER`](#\_0xA43D5C6FE51ADBEF) or [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) if you want to override weather in networked sessions.
 * ```
 * NativeDB Introduced: v323
 * ```
 * <strong>Weather Types:</strong>
 * *   CLEAR
 * *   EXTRASUNNY
 * *   CLOUDS
 * *   OVERCAST
 * *   RAIN
 * *   CLEARING
 * *   THUNDER
 * *   SMOG
 * *   FOGGY
 * *   XMAS
 * *   SNOW
 * *   SNOWLIGHT
 * *   BLIZZARD
 * *   HALLOWEEN
 * *   NEUTRAL
 * *   RAIN_HALLOWEEN
 * *   SNOW_HALLOWEEN
 * Hash: 0x29B487C359E19889 | ApiSet: undefined
 */
export declare function setWeatherTypeNow(weatherType: string): void;
/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#\_0x29B487C359E19889) for weather types.
 * Hash: 0xED712CA327900C8A | ApiSet: undefined
 */
export declare function setWeatherTypeNowPersist(weatherType: string): void;
/**
 * ```
 * Maximum value is 1.
 * At a value of 0 the game will still run at a minimum time scale.
 * Slow Motion 1: 0.6
 * Slow Motion 2: 0.4
 * Slow Motion 3: 0.2
 * ```
 * Hash: 0x1D408577D440E81E | ApiSet: undefined
 */
export declare function setTimeScale(timeScale: number): void;
/**
 * Using this native will clamp the wind speed value to a range of 0.0 - 12.0. The wind speed will stay persistent until it is reset (see examples).
 * Hash: 0xEE09ECEDBABE47FC | ApiSet: undefined
 */
export declare function setWindSpeed(speed: number): void;
/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#\_0x29B487C359E19889) for weather types.
 * ```
 * Mixes two weather types. If percentWeather2 is set to 0.0f, then the weather will be entirely of weatherType1, if it is set to 1.0f it will be entirely of weatherType2. If it's set somewhere in between, there will be a mixture of weather behaviors. To test, try this in the RPH console, and change the float to different values between 0 and 1:
 * execute "NativeFunction.Natives.x578C752848ECFA0C(Game.GetHashKey(""RAIN""), Game.GetHashKey(""SMOG""), 0.50f);
 * ```
 * Hash: 0x578C752848ECFA0C | ApiSet: undefined
 */
export declare function setWeatherTypeTransition(weatherType1: number | string, weatherType2: number | string, percentWeather2: number): void;
/**
 * Sets the current weather type to persist indefinitely until changed.
 * **Note:** This native is not supported in networked sessions. Please refer to [`SET_OVERRIDE_WEATHER`](#\_0xA43D5C6FE51ADBEF) or [`SET_WEATHER_TYPE_NOW_PERSIST`](#\_0xED712CA327900C8A) if you want to override weather in networked sessions.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x704983DF373B198F | ApiSet: undefined
 */
export declare function setWeatherTypePersist(weatherType: string): void;
/**
 * Refer to [`SET_WEATHER_TYPE_NOW`](#\_0x29B487C359E19889) for weather types.
 * Hash: 0xFB5045B7C42B75BF | ApiSet: undefined
 */
export declare function setWeatherTypeOvertimePersist(weatherType: string, time: number): void;
/**
 * ```
 * NativeDB Added Parameter 19: Any p18
 * NativeDB Added Parameter 20: Any p19
 * NativeDB Added Parameter 21: Any p20
 * ```
 * Hash: 0xBFE5756E7407064A | ApiSet: undefined
 */
export declare function shootSingleBulletBetweenCoordsIgnoreEntityNew(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, p7: boolean, weaponHash: number | string, ownerPed: number | Ped, isAudible: boolean, isInvisible: boolean, speed: number, entity: number | Entity, p14: boolean, p15: boolean, p16: boolean, p17: boolean): void;
/**
 * Sets the the raw wind speed value. The wind speed will stay persistent until it is reset (see examples).
 * Hash: 0xAC3A74E8384A9919 | ApiSet: undefined
 */
export declare function setWind(speed: number): void;
/**
 * Sets the wind direction. The wind direction will stay persistent until it is reset (see examples).
 * Hash: 0xEB0F4468467B4528 | ApiSet: undefined
 */
export declare function setWindDirection(direction: number): void;
/**
 * ```
 * Begins with START_*. Next character in the name is either D or E.
 * ```
 * Hash: 0x92790862E36C2ADA | ApiSet: undefined
 */
export declare function startBenchmarkRecording(): void;
/**
 * Shoots a bullet from the first vector to the second vector. The weapon used as weaponHash should already be loaded via REQUEST_WEAPON_ASSET, otherwise the bullet may fail to materialise.
 * Hash: 0x867654CBC7606F2C | ApiSet: undefined
 */
export declare function shootSingleBulletBetweenCoords(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, pureAccuracy: boolean, weaponHash: number | string, ownerPed: number | Ped, isAudible: boolean, isInvisible: boolean, speed: number): void;
/**
 * ```
 * entity - entity to ignore
 * ```
 * ```
 * NativeDB Added Parameter 15: Any p14
 * ```
 * Hash: 0xE3A7742E0B7A2F8B | ApiSet: undefined
 */
export declare function shootSingleBulletBetweenCoordsIgnoreEntity(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, damage: number, p7: boolean, weaponHash: number | string, ownerPed: number | Ped, isAudible: boolean, isInvisible: boolean, speed: number, entity: number | Entity): void;
/**
 * This native always come right before SET_ENTITY_QUATERNION where its final 4 parameters are SLERP_NEAR_QUATERNION p9 to p12
 * Hash: 0xF2F6A2FA49278625 | ApiSet: undefined
 */
export declare function slerpNearQuaternion(t: number, position: Vector3, w: number, x1: number, y1: number, z1: number, w1: number): [number, number, number, number];
/**
 * Hash: 0x60FE567DF1B1AF9D | ApiSet: undefined
 */
export declare function startSaveArrayWithSize(size: number, arrayName: string): any;
/**
 * Returns true if the game is using the metric measurement system (profile setting 227), false if imperial is used.
 * Hash: 0xD3D15555431AB793 | ApiSet: undefined
 */
export declare function shouldUseMetricMeasurements(): boolean;
/**
 * Hash: 0x04456F95153C6BE4 | ApiSet: undefined
 */
export declare function stopSaveArray(): void;
/**
 * Hash: 0xA9575F812C6A7997 | ApiSet: undefined
 */
export declare function startSaveData(p1: any, p2: boolean): any;
/**
 * Hash: 0xBF737600CDDBEADD | ApiSet: undefined
 */
export declare function startSaveStructWithSize(size: number, structName: string): any;
/**
 * ```
 * Begins with STOP_*. Next character in the name is either D or E.
 * ```
 * Hash: 0xC7DB36C24634F52B | ApiSet: undefined
 */
export declare function stopBenchmarkRecording(): void;
/**
 * ```
 * Returns false if it's a null or empty string or if the string is too long. outInteger will be set to -999 in that case.
 * If all checks have passed successfully, the return value will be set to whatever strtol(string, 0i64, 10); returns.
 * ```
 * Hash: 0x5A5F40FE637EB584 | ApiSet: undefined
 */
export declare function stringToInt(string: string): [boolean, number];
/**
 * Hash: 0xEB1774DF12BB9F12 | ApiSet: undefined
 */
export declare function stopSaveStruct(): void;
/**
 * Hash: 0x74E20C9145FB66FD | ApiSet: undefined
 */
export declare function stopSaveData(): void;
/**
 * Suppresses or enables a specific type of random event for the current frame.
 * ```cpp
 * enum eEventType {
 * RC_PED_STEAL_VEHICLE = 0,
 * RC_PED_JAY_WALK_LIGHT = 1,
 * RC_COP_PURSUE = 2,
 * RC_COP_PURSUE_VEHICLE_FLEE_SPAWNED = 3,
 * RC_COP_VEHICLE_DRIVING_FAST = 4,
 * RC_COP_VEHICLE_DRIVING_SLOW = 5,
 * RC_DRIVER_RECKLESS = 6,
 * RC_DRIVER_PRO = 7,
 * RC_PED_PURSUE_WHEN_HIT_BY_CAR = 8
 * }
 * ```
 * Hash: 0x1EAE0A6E978894A2 | ApiSet: undefined
 */
export declare function supressRandomEventThisFrame(eventType: number, enable: boolean): void;
/**
 * Hash: 0x632106CC96E82E91 | ApiSet: undefined
 */
export declare function tan(p0: number): number;
/**
 * Returns whether the In-Game Pause Menu Launched the Benchmark Tests.
 * Hash: 0xEA2F2061875EED90 | ApiSet: undefined
 */
export declare function uiStartedEndUserBenchmark(): boolean;
/**
 * For a full list, see [here](https://gist.github.com/4mmonium/f76f3ecef649ed275b260b433ea84494).
 * Hash: 0x9DC711BC69C548DF | ApiSet: undefined
 */
export declare function terminateAllScriptsWithThisName(scriptName: string): void;
/**
 * Enable/disable optional stunt camera.
 * ```
 * NativeDB Introduced: v757
 * ```
 * Hash: 0xFB80AB299D2EE1BD | ApiSet: undefined
 */
export declare function toggleShowOptionalStuntJumpCamera(toggle: boolean): void;
/**
 * Returns the current state of the text input box.
 * ```cpp
 * enum eOSKStatus
 * {
 * OSK_INVALID = -1,
 * OSK_PENDING = 0,
 * OSK_SUCCESS = 1,
 * OSK_CANCELLED = 2,
 * OSK_FAILED = 3
 * };
 * ```
 * Hash: 0x0CF2B696BBF945AE | ApiSet: undefined
 */
export declare function updateOnscreenKeyboard(): number;
/**
 * ```
 * Called 4 times in the b617d scripts:
 * `MISC::_A74802FB8D0B7814("CONTRAILS", 0);`
 * ```
 * Hash: 0xA74802FB8D0B7814 | ApiSet: undefined
 */
export declare function unloadCloudHat(name: string, p1: number): void;
/**
 * Hash: 0xF14878FC50BEC6EE | ApiSet: undefined
 */
export declare function usingMissionCreator(toggle: boolean): void;
/**
 * Hash: 0xA8434F1DFF41D6E7 | ApiSet: undefined
 */
export declare function waterOverrideFadeIn(p0: number): void;
/**
 * Hash: 0x405591EC8FD9096D | ApiSet: undefined
 */
export declare function waterOverrideSetOceanwaveamplitude(amplitude: number): void;
/**
 * Hash: 0x31727907B2C43C55 | ApiSet: undefined
 */
export declare function waterOverrideSetOceannoiseminamplitude(minAmplitude: number): void;
/**
 * Hash: 0xB3E6360DDE733E82 | ApiSet: undefined
 */
export declare function waterOverrideSetOceanwavemaxamplitude(maxAmplitude: number): void;
/**
 * Hash: 0xF751B16FB32ABC1D | ApiSet: undefined
 */
export declare function waterOverrideSetOceanwaveminamplitude(minAmplitude: number): void;
/**
 * Hash: 0xC3C221ADDDE31A11 | ApiSet: undefined
 */
export declare function waterOverrideFadeOut(p0: number): void;
/**
 * Hash: 0x9F5E6BB6B34540DA | ApiSet: undefined
 */
export declare function waterOverrideSetRipplemaxbumpiness(maxBumpiness: number): void;
/**
 * Hash: 0x7C9C0B1EEB1F9072 | ApiSet: undefined
 */
export declare function waterOverrideSetRipplebumpiness(bumpiness: number): void;
/**
 * Hash: 0xB9854DFDE0D833D6 | ApiSet: undefined
 */
export declare function waterOverrideSetRippledisturb(disturb: number): void;
/**
 * Hash: 0xA7A1127490312C36 | ApiSet: undefined
 */
export declare function waterOverrideSetShorewavemaxamplitude(maxAmplitude: number): void;
/**
 * Hash: 0x6216B116083A7CB4 | ApiSet: undefined
 */
export declare function waterOverrideSetRippleminbumpiness(minBumpiness: number): void;
/**
 * Hash: 0xB8F87EAD7533B176 | ApiSet: undefined
 */
export declare function waterOverrideSetShorewaveamplitude(amplitude: number): void;
/**
 * ```
 * This seems to edit the water wave, intensity around your current location.
 * 0.0f = Normal
 * 1.0f = So Calm and Smooth, a boat will stay still.
 * 3.0f = Really Intense.
 * ```
 * Hash: 0xC54A08C85AE4D410 | ApiSet: undefined
 */
export declare function waterOverrideSetStrength(strength: number): void;
/**
 * Hash: 0xC3EAD29AB273ECE8 | ApiSet: undefined
 */
export declare function waterOverrideSetShorewaveminamplitude(minAmplitude: number): void;
/**
 * Hash: 0x170910093218C8B9 | ApiSet: undefined
 */
export declare function _0x170910093218C8B9(): [boolean, any];
/**
 * Hash: 0x0395CB47B022E62C | ApiSet: undefined
 */
export declare function _0x0395CB47B022E62C(): [boolean, any];
/**
 * Hash: 0x613F125BA3BD2EB9 | ApiSet: undefined
 */
export declare function _0x613F125BA3BD2EB9(): boolean;
/**
 * Hash: 0x72EB7BA9B69BF6AB | ApiSet: undefined
 */
export declare function _0x72EB7BA9B69BF6AB(): boolean;
/**
 * Hash: 0x85F6C9ABA1DE2BCF | ApiSet: undefined
 */
export declare function _0x85F6C9ABA1DE2BCF(): any;
/**
 * ```
 * NET_GAMESERVER_*
 * Checks if the transaction status is equal to 3.
 * NativeDB Introduced: v1365
 * ```
 * Hash: 0x79EDAC677CA62F81 | ApiSet: undefined
 */
export declare function _0x79EDAC677CA62F81(transactionId: number): boolean;
/**
 * Hash: 0x357B152EF96C30B6 | ApiSet: undefined
 */
export declare function _0x357B152EF96C30B6(): any;
/**
 * Hash: 0xC13C38E47EA5DF31 | ApiSet: undefined
 */
export declare function _0xC13C38E47EA5DF31(): [boolean, any];
/**
 * Hash: 0xE3E5A7C64CA2C6ED | ApiSet: undefined
 */
export declare function _0xE3E5A7C64CA2C6ED(): any;
/**
 * ```
 * NET_GAMESERVER_*
 * ```
 * Hash: 0x74A0FD0688F1EE45 | ApiSet: undefined
 */
export declare function _0x74A0FD0688F1EE45(p0: number): number;
/**
 * ```
 * NET_GAMESERVER_*
 * Checks if the transaction status is equal to 1.
 * NativeDB Introduced: v1365
 * ```
 * Hash: 0xC830417D630A50F9 | ApiSet: undefined
 */
export declare function _0xC830417D630A50F9(transactionId: number): boolean;
/**
 * ```
 * NativeDB Introduced: v372
 * ```
 * Hash: 0xFA336E7F40C0A0D0 | ApiSet: undefined
 */
export declare function netGameserverBasketDelete(): boolean;
/**
 * Hash: 0xE1A0450ED46A7812 | ApiSet: undefined
 */
export declare function netGameserverBasketApplyServerData(p0: any): [boolean, any];
/**
 * Hash: 0xF30980718C8ED876 | ApiSet: undefined
 */
export declare function netGameserverBasketAddItem(quantity: number): [boolean, any];
/**
 * Hash: 0xA65568121DF2EA26 | ApiSet: undefined
 */
export declare function netGameserverBasketEnd(): boolean;
/**
 * Hash: 0x279F08B1A4B29B7E | ApiSet: undefined
 */
export declare function netGameserverBasketStart(categoryHash: number | string, actionHash: number | string, flags: number): [boolean, number];
/**
 * Hash: 0x27F76CC6C55AD30E | ApiSet: undefined
 */
export declare function netGameserverBasketIsFull(): boolean;
/**
 * Hash: 0x39BE7CEA8D9CC8E6 | ApiSet: undefined
 */
export declare function netGameserverCheckoutStart(transactionId: number): boolean;
/**
 * Hash: 0x3C5FD37B5499582E | ApiSet: undefined
 */
export declare function netGameserverBeginService(categoryHash: number | string, itemHash: number | string, actionTypeHash: number | string, value: number, flags: number): [boolean, number];
/**
 * Hash: 0x3C4487461E9B0DCB | ApiSet: undefined
 */
export declare function netGameserverCatalogIsReady(): boolean;
/**
 * Hash: 0xBD4D7EAF8A30F637 | ApiSet: undefined
 */
export declare function netGameserverCatalogItemExists(name: string): boolean;
/**
 * Hash: 0x112CEF1615A1139F | ApiSet: undefined
 */
export declare function netGameserverDeleteSetTelemetryNonceSeed(): boolean;
/**
 * Hash: 0x0A6D923DFFC9BD89 | ApiSet: undefined
 */
export declare function netGameserverDeleteCharacterSlotGetStatus(): number;
/**
 * Hash: 0x247F0F73A182EA0B | ApiSet: undefined
 */
export declare function netGameserverCatalogItemExistsHash(hash: number | string): boolean;
/**
 * Hash: 0x51F1A8E48C3D2F6D | ApiSet: undefined
 */
export declare function netGameserverDeleteCharacterSlot(slot: number, transfer: boolean, reason: number | string): boolean;
/**
 * Hash: 0xE2A99A9B524BEFFF | ApiSet: undefined
 */
export declare function netGameserverEndService(transactionId: number): boolean;
/**
 * ```
 * Note: only one of the arguments can be set to true at a time
 * ```
 * Hash: 0x35A1B3E1D1315CFA | ApiSet: undefined
 */
export declare function netGameserverGetBalance(inventory: boolean, playerbalance: boolean): boolean;
/**
 * Hash: 0x810E8431C0614BF9 | ApiSet: undefined
 */
export declare function netGameserverIsSessionRefreshPending(): boolean;
/**
 * Hash: 0xCF38DAFBB49EDE5E | ApiSet: undefined
 */
export declare function netGameserverGetCatalogState(): [boolean, number];
/**
 * ```
 * bool is always true in game scripts
 * ```
 * Hash: 0xC27009422FCCA88D | ApiSet: undefined
 */
export declare function netGameserverGetPrice(itemHash: number | string, categoryHash: number | string, p2: boolean): number;
/**
 * Hash: 0x2B949A1E6AEC8F6A | ApiSet: undefined
 */
export declare function netGameserverIsCatalogValid(): boolean;
/**
 * Hash: 0x897433D292B44130 | ApiSet: undefined
 */
export declare function netGameserverGetTransactionManagerData(): [boolean, number, boolean];
/**
 * Hash: 0xB24F0944DA203D9E | ApiSet: undefined
 */
export declare function netGameserverIsSessionValid(charSlot: number): boolean;
/**
 * Hash: 0x2F41D51BA3BCD1F1 | ApiSet: undefined
 */
export declare function netGameserverSessionApplyReceivedData(charSlot: number): boolean;
/**
 * Hash: 0x9507D4271988E1AE | ApiSet: undefined
 */
export declare function netGameserverSetTelemetryNonceSeed(p0: number): boolean;
/**
 * Hash: 0xA135AC892A58FC07 | ApiSet: undefined
 */
export declare function netGameserverStartSession(charSlot: number): boolean;
/**
 * Hash: 0xD47A2C1BA117471D | ApiSet: undefined
 */
export declare function netGameserverTransferBankToWallet(charSlot: number, amount: number): boolean;
/**
 * ```
 * Same as 0x350AA5EBC03D3BD2
 * ```
 * Hash: 0x23789E777D14CE44 | ApiSet: undefined
 */
export declare function netGameserverTransferCashGetStatus(): number;
/**
 * ```
 * Same as 0x23789E777D14CE44
 * ```
 * Hash: 0x350AA5EBC03D3BD2 | ApiSet: undefined
 */
export declare function netGameserverTransferCashGetStatus2(): number;
/**
 * ```
 * Used to be NETWORK_SHOP_CASH_TRANSFER_SET_TELEMETRY_NONCE_SEED
 * ```
 * Hash: 0x498C1E05CE5F7877 | ApiSet: undefined
 */
export declare function netGameserverTransferCashSetTelemetryNonceSeed(): boolean;
/**
 * Hash: 0xC2F7FE5309181C7D | ApiSet: undefined
 */
export declare function netGameserverTransferWalletToBank(charSlot: number, amount: number): boolean;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x7D2708796355B20B | ApiSet: undefined
 */
export declare function netGameserverUseServerTransactions(): boolean;
/**
 * ```
 * Does nothing and always returns false.
 * ```
 * Hash: 0xE260E0BB9CD995AC | ApiSet: undefined
 */
export declare function depositVc(amount: number): boolean;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x0DD362F14F18942A | ApiSet: undefined
 */
export declare function _0x0DD362F14F18942A(amount: number, p1: any, p2: any): void;
/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * NativeDB Added Parameter 2: int p1
 * NativeDB Added Parameter 3: int amount
 * NativeDB Added Parameter 4: int* p3
 * ```
 * Hash: 0x9777734DAD16992F | ApiSet: undefined
 */
export declare function canPayGoon(): boolean;
/**
 * ```
 * Returns false if amount > wallet balance or daily transfer limit has been hit.
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x08E8EEADFD0DC4A0 | ApiSet: undefined
 */
export declare function _0x08E8EEADFD0DC4A0(amount: number): boolean;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x226C284C830D0CA8 | ApiSet: undefined
 */
export declare function _0x226C284C830D0CA8(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x0D30EB83668E63C5 | ApiSet: undefined
 */
export declare function _0x0D30EB83668E63C5(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x112209CE0290C03A | ApiSet: undefined
 */
export declare function _0x112209CE0290C03A(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x1DC9B749E7AE282B | ApiSet: undefined
 */
export declare function _0x1DC9B749E7AE282B(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x2A93C46AAB1EACC9 | ApiSet: undefined
 */
export declare function _0x2A93C46AAB1EACC9(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x2A7CEC72C3443BCC | ApiSet: undefined
 */
export declare function _0x2A7CEC72C3443BCC(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0x2AFC2D19B50797F2 | ApiSet: undefined
 */
export declare function _0x2AFC2D19B50797F2(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x2FAB6614CE22E196 | ApiSet: undefined
 */
export declare function _0x2FAB6614CE22E196(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x4C3B75694F7E0D9C | ApiSet: undefined
 */
export declare function _0x4C3B75694F7E0D9C(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0x4128464231E3CA0B | ApiSet: undefined
 */
export declare function _0x4128464231E3CA0B(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x31BA138F6304FB9F | ApiSet: undefined
 */
export declare function _0x31BA138F6304FB9F(p0: any, p1: any): void;
/**
 * Hash: 0x5F456788B05FAEAC | ApiSet: undefined
 */
export declare function _0x5F456788B05FAEAC(p0: any, p1: any, p2: any): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x5574637681911FDA | ApiSet: undefined
 */
export declare function _0x5574637681911FDA(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x55A1E095DB052FA5 | ApiSet: undefined
 */
export declare function _0x55A1E095DB052FA5(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x6B7E4FB50D5F3D65 | ApiSet: undefined
 */
export declare function _0x6B7E4FB50D5F3D65(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * Hash: 0x675D19C6067CAE08 | ApiSet: undefined
 */
export declare function _0x675D19C6067CAE08(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x65482BFD0923C8A1 | ApiSet: undefined
 */
export declare function _0x65482BFD0923C8A1(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
/**
 * Hash: 0x69EF772B192614C1 | ApiSet: undefined
 */
export declare function _0x69EF772B192614C1(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x7C4FCCD2E4DEB394 | ApiSet: undefined
 */
export declare function _0x7C4FCCD2E4DEB394(): boolean;
/**
 * ```
 * This function is hard-coded to always return 1.
 * ```
 * Hash: 0x6FCF8DDEA146C45B | ApiSet: undefined
 */
export declare function _0x6FCF8DDEA146C45B(p0: any): boolean;
/**
 * Hash: 0x6FD97159FE3C971A | ApiSet: undefined
 */
export declare function _0x6FD97159FE3C971A(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x8E243837643D9583 | ApiSet: undefined
 */
export declare function _0x8E243837643D9583(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xA51338E0DCCD4065 | ApiSet: undefined
 */
export declare function _0xA51338E0DCCD4065(p0: any, p1: any, p2: any): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x90CD7C6871FBF1B4 | ApiSet: undefined
 */
export declare function _0x90CD7C6871FBF1B4(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x870289A558348378 | ApiSet: undefined
 */
export declare function _0x870289A558348378(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * Hardcoded to return 0.
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x9B5016A6433A68C5 | ApiSet: undefined
 */
export declare function _0x9B5016A6433A68C5(): any;
/**
 * Hash: 0xA95F667A755725DA | ApiSet: undefined
 */
export declare function _0xA95F667A755725DA(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x998E18CEB44487FC | ApiSet: undefined
 */
export declare function _0x998E18CEB44487FC(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0xA51B086B0B2C0F7A | ApiSet: undefined
 */
export declare function _0xA51B086B0B2C0F7A(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0xBD0EFB25CCA8F97A | ApiSet: undefined
 */
export declare function _0xBD0EFB25CCA8F97A(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0xA95CFB4E02390842 | ApiSet: undefined
 */
export declare function _0xA95CFB4E02390842(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0xB4C2EC463672474E | ApiSet: undefined
 */
export declare function _0xB4C2EC463672474E(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xB4DEAE67F35E2ACD | ApiSet: undefined
 */
export declare function _0xB4DEAE67F35E2ACD(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0xD29334ED1A256DBF | ApiSet: undefined
 */
export declare function _0xD29334ED1A256DBF(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * ```
 * Does nothing (it's a nullsub).
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xCD0F5B5D932AE473 | ApiSet: undefined
 */
export declare function _0xCD0F5B5D932AE473(): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xC6E74CF8C884C880 | ApiSet: undefined
 */
export declare function _0xC6E74CF8C884C880(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0xDE68E30D89F97132 | ApiSet: undefined
 */
export declare function _0xDE68E30D89F97132(amount: number, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xE0F82D68C7039158 | ApiSet: undefined
 */
export declare function _0xE0F82D68C7039158(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0xB5B58E24868CB09E | ApiSet: undefined
 */
export declare function _0xB5B58E24868CB09E(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * Hash: 0xE23ADC6FCB1F29AE | ApiSet: undefined
 */
export declare function _0xE23ADC6FCB1F29AE(p0: any, p1: any, p2: any): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xCD4D66B43B1DD28D | ApiSet: undefined
 */
export declare function _0xCD4D66B43B1DD28D(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0xED5FD7AF10F5E262 | ApiSet: undefined
 */
export declare function _0xED5FD7AF10F5E262(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xE2BB399D90942091 | ApiSet: undefined
 */
export declare function _0xE2BB399D90942091(p0: any, p1: any): void;
/**
 * ```
 * This function is hard-coded to always return 1.
 * ```
 * Hash: 0xE154B48B68EF72BC | ApiSet: undefined
 */
export declare function _0xE154B48B68EF72BC(p0: any): boolean;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xED76D195E6E3BF7F | ApiSet: undefined
 */
export declare function _0xED76D195E6E3BF7F(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0xFA07759E6FDDD7CF | ApiSet: undefined
 */
export declare function _0xFA07759E6FDDD7CF(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * p1 = 0 (always)
 * p2 = 1 (always)
 * ```
 * Hash: 0x763B4BD305338F19 | ApiSet: undefined
 */
export declare function networkBuyAirstrike(cost: number, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xA3EDDAA42411D3B9 | ApiSet: undefined
 */
export declare function networkBuyBackupGang(p0: number, p1: number, p2: boolean, p3: boolean): void;
/**
 * Hash: 0x30FD873ECE50E9F6 | ApiSet: undefined
 */
export declare function networkBuyContraband(p0: number, p1: number, p2: number | string, p3: boolean, p4: boolean): void;
/**
 * ```
 * p1 is just an assumption. p2 was false and p3 was true.
 * ```
 * Hash: 0x7B718E197453F2D9 | ApiSet: undefined
 */
export declare function networkBuyBounty(amount: number, victim: number | string | Player, p2: boolean, p3: boolean): void;
/**
 * ```
 * p1 = 0 (always)
 * p2 = 1 (always)
 * ```
 * Hash: 0x81AA4610E3FD3A69 | ApiSet: undefined
 */
export declare function networkBuyHeliStrike(cost: number, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0xE2E244AB823B4483 | ApiSet: undefined
 */
export declare function _0xE2E244AB823B4483(amount: number, p1: any): void;
/**
 * Hash: 0xF0077C797F66A355 | ApiSet: undefined
 */
export declare function networkBuyItem(amount: number, item: number | string, p2: any, p3: any, p4: boolean, item_name: string, p6: any, p7: any, p8: any, p9: boolean): void;
/**
 * Hash: 0x650A08A280870AF6 | ApiSet: undefined
 */
export declare function networkBuyProperty(propertyCost: number, propertyName: number | string, p2: boolean, p3: boolean): void;
/**
 * ```
 * The first parameter is the amount spent which is store in a global when this native is called. The global returns 10. Which is the price for both rides.
 * The last 3 parameters are,
 * 2,0,1 in the am_ferriswheel.c
 * 1,0,1 in the am_rollercoaster.c
 * ```
 * Hash: 0x8A7B3952DD64D2B5 | ApiSet: undefined
 */
export declare function networkBuyFairgroundRide(amountSpent: number, p1: any, p2: boolean, p3: boolean): void;
/**
 * Hash: 0xD9B067E55253E3DD | ApiSet: undefined
 */
export declare function networkBuyHealthcare(cost: number, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x75AF80E61248EEBD | ApiSet: undefined
 */
export declare function networkBuySmokes(p0: number, p1: boolean, p2: boolean): void;
/**
 * Hash: 0x1C2473301B1C66BA | ApiSet: undefined
 */
export declare function networkCanShareJobCash(): boolean;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xC62DD18375C99130 | ApiSet: undefined
 */
export declare function networkCanBuyLotteryTicket(cost: number): boolean;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xD987F2489969668C | ApiSet: undefined
 */
export declare function networkBuyLotteryTicket(p0: number, p1: number, p2: boolean, p3: boolean): void;
/**
 * Hash: 0x5D17BE59D2123284 | ApiSet: undefined
 */
export declare function networkCanReceivePlayerCash(p0: any, p1: any, p2: any, p3: any): boolean;
/**
 * Hash: 0x3A54E33660DED67F | ApiSet: undefined
 */
export declare function networkCanBet(amount: number): boolean;
/**
 * NETWORK_C\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xF62F6D9528358FE4 | ApiSet: undefined
 */
export declare function networkCasinoCanGamble(p0: any): boolean;
/**
 * ```
 * NativeDB Added Parameter 6: Any p5
 * ```
 * Hash: 0xAB3CAA6B422164DA | ApiSet: undefined
 */
export declare function networkCanSpendMoney(p0: any, p1: boolean, p2: boolean, p3: boolean, p4: any): boolean;
/**
 * NETWORK_C\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xED44897CB336F480 | ApiSet: undefined
 */
export declare function networkCasinoSellChips(p0: number, p1: number): boolean;
/**
 * NETWORK_C\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x3BD101471C7F9EEC | ApiSet: undefined
 */
export declare function networkCasinoPurchaseChips(p0: number, p1: number): boolean;
/**
 * Same as 0x8968D4D8C6C40C11.
 * NETWORK_C\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x394DCDB9E836B7A9 | ApiSet: undefined
 */
export declare function networkCasinoCanPurchaseChipsWithPvc(): boolean;
/**
 * ```
 * NETWORK_CAN_R??? or NETWORK_CAN_S???
 * ```
 * ```
 * NativeDB Added Parameter 7: Any p6
 * ```
 * Hash: 0x7303E27CC6532080 | ApiSet: undefined
 */
export declare function networkCanSpendMoney2(p0: any, p1: boolean, p2: boolean, p3: boolean, p5: any): [boolean, any];
/**
 * ```
 * Note the 2nd parameters are always 1, 0. I have a feeling it deals with your money, wallet, bank. So when you delete the character it of course wipes the wallet cash at that time. So if that was the case, it would be eg, NETWORK_DELETE_CHARACTER(characterIndex, deleteWalletCash, deleteBankCash);
 * ```
 * Hash: 0x05A50AF38947EB8D | ApiSet: undefined
 */
export declare function networkDeleteCharacter(characterSlot: number, p1: boolean, p2: boolean): void;
/**
 * GTAO_CASINO_HOUSE
 * GTAO_CASINO_INSIDETRACK
 * GTAO_CASINO_LUCKYWHEEL
 * GTAO_CASINO_BLACKJACK
 * GTAO_CASINO_ROULETTE
 * GTAO_CASINO_SLOTS
 * GTAO_CASINO_PURCHASE_CHIPS
 * NETWORK_C\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x158C16F5E4CF41F8 | ApiSet: undefined
 */
export declare function networkCasinoCanUseGamblingType(hash: number | string): boolean;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x18B7AE224B087E26 | ApiSet: undefined
 */
export declare function networkDeductCash(amount: number, p1: string, p2: string, p3: boolean, p4: boolean, p5: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xF6B170F9A02E9E87 | ApiSet: undefined
 */
export declare function networkEarnBountyHunterReward(p0: any): void;
/**
 * Same as 0x394DCDB9E836B7A9.
 * NETWORK_C\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x8968D4D8C6C40C11 | ApiSet: undefined
 */
export declare function networkCasinoCanPurchaseChipsWithPvc2(): boolean;
/**
 * Hash: 0xA921DED15FDF28F5 | ApiSet: undefined
 */
export declare function networkClearCharacterWallet(characterSlot: number): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xFFFBA1B1F7C0B6F4 | ApiSet: undefined
 */
export declare function networkEarnFmbbWageBonus(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x72E7C7B9615FA3C3 | ApiSet: undefined
 */
export declare function networkEarnCasinoHeist(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
/**
 * ```
 * Example for p1: "AM_DISTRACT_COPS"
 * ```
 * Hash: 0xFB6DB092FBAE29E6 | ApiSet: undefined
 */
export declare function networkEarnFromAmbientJob(p0: number, p1: string): any;
/**
 * Hash: 0x0CB1BE0633C024A8 | ApiSet: undefined
 */
export declare function networkEarnBossAgency(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x08B0CA7A6AB3AC32 | ApiSet: undefined
 */
export declare function networkEarnBoss(p0: any, p1: any, p2: any): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x631F1CB8FB4130AA | ApiSet: undefined
 */
export declare function networkEarnFromArenaWar(amount: number, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x5C9B198AF5A54FA6 | ApiSet: undefined
 */
export declare function networkEarnCollectableCompletedCollection(amount: number, p1: any): void;
/**
 * ```
 * DSPORT
 * ```
 * Hash: 0x515B4A22E4D3C6D7 | ApiSet: undefined
 */
export declare function networkEarnFromAiTargetKill(p0: any, p1: any): void;
/**
 * ```
 * For the money bags that drop a max of $40,000. Often called 40k bags.
 * Most likely NETWORK_EARN_FROM_ROB***
 * ```
 * Hash: 0xF514621E8EA463D0 | ApiSet: undefined
 */
export declare function networkEarnFromArmourTruck(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x0F99F70C61F14619 | ApiSet: undefined
 */
export declare function networkEarnFromArenaCareerProgression(amount: number, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xE08256F972C7BB2C | ApiSet: undefined
 */
export declare function networkEarnFromArenaSkillLevelProgression(amount: number, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x5E7AE8AABE8B7C0D | ApiSet: undefined
 */
export declare function networkEarnFromAssassinateTargetKilled2(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xFA700D8A9905F78A | ApiSet: undefined
 */
export declare function networkEarnFromAssassinateTargetKilled(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x3EC7471E6909798A | ApiSet: undefined
 */
export declare function networkEarnCasinoHeistBonus(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xC66D1CF99ED7FE25 | ApiSet: undefined
 */
export declare function networkEarnFromAutoshopIncome(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x36A7FD5A7194B03E | ApiSet: undefined
 */
export declare function networkEarnFromAutoshopBusiness(p0: any, p1: any): void;
/**
 * Hash: 0x61326EE6DF15B0CA | ApiSet: undefined
 */
export declare function networkEarnFromBendJob(amount: number, heistHash: string): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xA82959062361B259 | ApiSet: undefined
 */
export declare function networkEarnFromBbEventCargo(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x71BEC32FA466E105 | ApiSet: undefined
 */
export declare function networkEarnFromBikerIncome(p0: any): void;
/**
 * Hash: 0x131BB5DA15453ACF | ApiSet: undefined
 */
export declare function networkEarnFromBounty(amount: number, p3: any): [number, any];
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x2C5809EB9DF57257 | ApiSet: undefined
 */
export declare function networkEarnFromBikeShopBusiness(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xFDD8D2440DAF1590 | ApiSet: undefined
 */
export declare function networkEarnFromBbEventBonus(amount: number): void;
/**
 * Hash: 0x8586789730B10CAF | ApiSet: undefined
 */
export declare function networkEarnFromBusinessProduct(amount: number, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x42FCE14F50F27291 | ApiSet: undefined
 */
export declare function networkEarnFromBusinessBattle(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x59498BC8B1C8B15C | ApiSet: undefined
 */
export declare function networkEarnFromBusinessHubSource(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x827A5BA1A44ACA6D | ApiSet: undefined
 */
export declare function networkEarnFromBetting(amount: number, p1: string): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x0B39CF0D53F1C883 | ApiSet: undefined
 */
export declare function networkEarnFromBusinessHubSell(p0: any, p1: any, p2: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xEFE9C9A1651B81E6 | ApiSet: undefined
 */
export declare function networkEarnFromCashingOut(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xBC6227792A188E2E | ApiSet: undefined
 */
export declare function networkEarnFromCarclubMembership(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x09E8F18641BE2575 | ApiSet: undefined
 */
export declare function networkEarnFromCasinoMissionParticipation(amount: number): void;
/**
 * Hash: 0x2B171E6B2F64D8DF | ApiSet: undefined
 */
export declare function networkEarnFromChallengeWin(p0: any, p2: boolean): any;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x566FD402B25787DE | ApiSet: undefined
 */
export declare function networkEarnFromCasinoMissionReward(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x973A9781A34F8DEB | ApiSet: undefined
 */
export declare function networkEarnFromCasinoAward(amount: number, hash: number | string): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xA75EAC69F59E96E7 | ApiSet: undefined
 */
export declare function networkEarnFromClubManagementParticipation(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x5517F90043466049 | ApiSet: undefined
 */
export declare function networkEarnFromCollectablesActionFigures(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xAC95ED552157E092 | ApiSet: undefined
 */
export declare function networkEarnFromCasinoStoryMissionReward(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x83AD64F53F4E9483 | ApiSet: undefined
 */
export declare function networkEarnFromCompleteCollection(amount: number): void;
/**
 * Hash: 0xB1CC1B9EC3007A2A | ApiSet: undefined
 */
export declare function networkEarnFromCrateDrop(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x84FF63BD4966F33D | ApiSet: undefined
 */
export declare function networkEarnFromCollectionItem(amount: number, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x5128DF14A5BB86FC | ApiSet: undefined
 */
export declare function networkEarnFromDailyObjectiveEvent(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xCAC672087B4A24AB | ApiSet: undefined
 */
export declare function networkEarnFromDarChallenge(amount: number, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xFA009A62990671D4 | ApiSet: undefined
 */
export declare function networkEarnFromCriminalMastermindBonus(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0xECA658CE2A4E5A72 | ApiSet: undefined
 */
export declare function networkEarnFromContraband(amount: number, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x1FDA0AA679C9919B | ApiSet: undefined
 */
export declare function networkEarnFromFmbbBossWork(p0: any): void;
/**
 * Hash: 0x6EA318C91C1A8786 | ApiSet: undefined
 */
export declare function networkEarnFromDailyObjectives(p0: number, p1: string, p2: number): void;
/**
 * Hash: 0x84C0116D012E8FC2 | ApiSet: undefined
 */
export declare function networkEarnFromDestroyingContraband(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x128A747F4A230952 | ApiSet: undefined
 */
export declare function networkEarnFromDoomsdayFinaleBonus(amount: number, vehicleHash: number | string): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xA9A31475F530DFDA | ApiSet: undefined
 */
export declare function networkEarnFromGangopsAwards(amount: number, unk: string, p2: any): void;
/**
 * Hash: 0xA03D4ACE0A3284CE | ApiSet: undefined
 */
export declare function networkEarnFromGangPickup(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xC5156361F26E2212 | ApiSet: undefined
 */
export declare function networkEarnFromFmbbPhonecallMission(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xA9160796D47A2CF8 | ApiSet: undefined
 */
export declare function networkEarnFromGangopsJobsSetup(amount: number, unk: string): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xED26584F6BDCBBFD | ApiSet: undefined
 */
export declare function networkEarnFromGangopsJobsPrepParticipation(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x2597A0D4A4FC2C77 | ApiSet: undefined
 */
export declare function networkEarnFromGangopsElite(amount: number, unk: string, actIndex: number): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x1C121FC9545E0D52 | ApiSet: undefined
 */
export declare function networkEarnFromGangopsJobsFinale(amount: number, unk: string): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x15BB2A5C757EB91F | ApiSet: undefined
 */
export declare function networkEarnFromGangopsWagesBonus(amount: number, p1: number): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x2DCB19ABAB0380A8 | ApiSet: undefined
 */
export declare function networkEarnFromGangopsWages(amount: number, p1: number): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xE8815FE993896AD3 | ApiSet: undefined
 */
export declare function networkEarnFromHackerTruckMission(p0: any, amount: number, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xDEBBF584665411D0 | ApiSet: undefined
 */
export declare function networkEarnFromJobX2(amount: number, p1: string): void;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x6816FB4416760775 | ApiSet: undefined
 */
export declare function networkEarnFromJobBonus(p0: any): [any, any];
/**
 * Hash: 0xB2CC4836834E8A98 | ApiSet: undefined
 */
export declare function networkEarnFromJob(amount: number, p1: string): void;
/**
 * Hash: 0x4337511FA8221D36 | ApiSet: undefined
 */
export declare function networkEarnFromNotBadsport(amount: number): void;
/**
 * Hash: 0x3F4D00167E41E0AD | ApiSet: undefined
 */
export declare function networkEarnFromPersonalVehicle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
/**
 * Hash: 0x45B8154E077D9E4D | ApiSet: undefined
 */
export declare function networkEarnFromHoldups(amount: number): void;
/**
 * Hash: 0xC8407624CEF2354B | ApiSet: undefined
 */
export declare function networkEarnFromPremiumJob(amount: number, p1: string): void;
/**
 * Hash: 0xF92A014A634442D6 | ApiSet: undefined
 */
export declare function networkEarnFromImportExport(amount: number, modelHash: number | string): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x7A5349B773584675 | ApiSet: undefined
 */
export declare function networkEarnFromRdrBonus(amount: number, p1: any): void;
/**
 * Hash: 0x849648349D77F5C5 | ApiSet: undefined
 */
export declare function networkEarnFromProperty(amount: number, propertyName: number | string): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xDFF49EE984E7AAE8 | ApiSet: undefined
 */
export declare function networkEarnFromRcTimeTrial(amount: number): void;
/**
 * Hash: 0xED1517D3AF17C698 | ApiSet: undefined
 */
export declare function networkEarnFromPickup(amount: number): void;
/**
 * Hash: 0x9251B6ABF2D0A5B4 | ApiSet: undefined
 */
export declare function networkEarnFromSellBunker(amount: number, bunkerHash: number | string): void;
/**
 * Hash: 0x02CE1D6AC0FC73EA | ApiSet: undefined
 */
export declare function networkEarnFromRockstar(amount: number): void;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * NativeDB Added Parameter 3: Any p2
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x8BCB27A057DF7B7F | ApiSet: undefined
 */
export declare function networkEarnFromSellingVehicle(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x45087AE480B233AC | ApiSet: undefined
 */
export declare function networkEarnFromSightseeing(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x0E1E2FF3F4EC11AA | ApiSet: undefined
 */
export declare function networkEarnFromSellBase(amount: number, baseNameHash: number | string): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x676C48776CACBB5A | ApiSet: undefined
 */
export declare function networkEarnFromSpinTheWheelCash(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0xDEE612F2D71B0308 | ApiSet: undefined
 */
export declare function networkEarnFromSmuggling(amount: number, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xB846F547D3792DF6 | ApiSet: undefined
 */
export declare function networkEarnFromTunerAward(p0: any, p1: any, p2: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x5B669CF2299A271F | ApiSet: undefined
 */
export declare function networkEarnFromTargetRefund(amount: number, p1: number): void;
/**
 * Hash: 0xB539BD8A4C1EECF8 | ApiSet: undefined
 */
export declare function networkEarnFromVehicle(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xBCB266247193AC61 | ApiSet: undefined
 */
export declare function networkEarnFromTunerFinale(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * Hash: 0xEDEAD9A91EC768B3 | ApiSet: undefined
 */
export declare function networkEarnFromVehicleExport(amount: number, p1: any, p2: any): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x533073E8A596008C | ApiSet: undefined
 */
export declare function networkEarnFromVehicleAutoshop(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x005ACA7100BD101D | ApiSet: undefined
 */
export declare function networkEarnFromWagePaymentBonus(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x0819DB99FD2FBBD8 | ApiSet: undefined
 */
export declare function networkEarnFromTimeTrialWin(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x35F8DA0E8A31EF1B | ApiSet: undefined
 */
export declare function networkEarnFromWagePayment(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xC10322A8D3E061EE | ApiSet: undefined
 */
export declare function networkEarnFromUpgradeAutoshopLocation(p0: any, p1: any): void;
/**
 * Hash: 0xCDA1C62BE2777802 | ApiSet: undefined
 */
export declare function networkEarnGoon(p0: any, p1: any, p2: any): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xFE65AFE7308E32B2 | ApiSet: undefined
 */
export declare function networkEarnFromVehicleAutoshopBonus(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xD21D111C46BA9F15 | ApiSet: undefined
 */
export declare function networkEarnIslandHeist(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xFB2456B2040A6A67 | ApiSet: undefined
 */
export declare function networkGetIsHighEarner(): boolean;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x5D1E75F91C07DEE5 | ApiSet: undefined
 */
export declare function networkGetEvcBalance(): number;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x9D4FDBB035229669 | ApiSet: undefined
 */
export declare function networkEarnJobBonusHeistAward(p0: any, p1: any, p2: any): void;
/**
 * ```
 * Same as 0xEA560AC9EEB1E19B.
 * ```
 * ```
 * Same as 0xEA560AC9EEB1E19B.
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x13A8DE2FD77D04F3 | ApiSet: undefined
 */
export declare function networkGetPvcTransferBalance(): number;
/**
 * ```
 * NativeDB Added Parameter 1: int amount
 * NativeDB Added Parameter 2: int id
 * ```
 * Hash: 0x3E4ADAFF1830F146 | ApiSet: undefined
 */
export declare function networkEarnFromWarehouse(): void;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x4F54F3B6C202FB4E | ApiSet: undefined
 */
export declare function networkGetPvcBalance(): number;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x11B0A20C493F7E36 | ApiSet: undefined
 */
export declare function networkEarnJobBonusFirstTimeBonus(p0: any, p1: any, p2: any): void;
/**
 * ```
 * Same as 0x13A8DE2FD77D04F3.
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xEA560AC9EEB1E19B | ApiSet: undefined
 */
export declare function networkGetRemainingTransferBalance(): number;
/**
 * ```
 * Returns true if bank balance >= amount.
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xA31FD6A0865B6D14 | ApiSet: undefined
 */
export declare function networkGetVcBankBalanceIsNotLessThan(amount: number): boolean;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x700AF71AE615E6DD | ApiSet: undefined
 */
export declare function networkGetStringBankWalletBalance(): string;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xF9B10B529DCFB33B | ApiSet: undefined
 */
export declare function networkGetStringWalletBalance(characterSlot: number): string;
/**
 * Hash: 0x76EF28DA05EA395A | ApiSet: undefined
 */
export declare function networkGetVcBankBalance(): number;
/**
 * Hash: 0xA40F9C2623F6A8B5 | ApiSet: undefined
 */
export declare function networkGetVcWalletBalance(characterSlot: number): number;
/**
 * Hash: 0x5CBAD97E059E1B94 | ApiSet: undefined
 */
export declare function networkGetVcBalance(): number;
/**
 * Hash: 0xA6FA3979BED01B81 | ApiSet: undefined
 */
export declare function networkGetStringBankBalance(): string;
/**
 * Hash: 0x821418C727FCACD7 | ApiSet: undefined
 */
export declare function networkManualDeleteCharacter(characterSlot: number): void;
/**
 * ```
 * Returns true if wallet balance >= amount.
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xED5AB8860415BABA | ApiSet: undefined
 */
export declare function networkGetVcWalletBalanceIsNotLessThan(amount: number, characterSlot: number): boolean;
/**
 * Hash: 0x3DA5ECD1A56CBA6D | ApiSet: undefined
 */
export declare function networkInitializeCash(wallet: number, bank: number): void;
/**
 * ```
 * Returns true if bank balance + wallet balance >= amount.
 * ```
 * Hash: 0xDC18531D7019A535 | ApiSet: undefined
 */
export declare function networkGetVcBankWalletBalanceIsNotLessThan(amount: number, characterSlot: number): boolean;
/**
 * Hash: 0x5FD5ED82CBBE9989 | ApiSet: undefined
 */
export declare function networkPayEmployeeWage(p0: any, p1: boolean, p2: boolean): void;
/**
 * Hash: 0x81404F3DC124FE5B | ApiSet: undefined
 */
export declare function networkMoneyCanBet(amount: number, p1: boolean, p2: boolean): boolean;
/**
 * Hash: 0xFB18DF9CB95E0105 | ApiSet: undefined
 */
export declare function networkGivePlayerJobshareCash(amount: number): number;
/**
 * Hash: 0xAFE08B35EC0C9EAE | ApiSet: undefined
 */
export declare function networkPayUtilityBill(amount: number, p1: boolean, p2: boolean): void;
/**
 * Hash: 0x56A3B51944C50598 | ApiSet: undefined
 */
export declare function networkReceivePlayerJobshareCash(value: number): number;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0xEAD3D81F2C3A1458 | ApiSet: undefined
 */
export declare function networkSpentArcadeGame(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * Hash: 0x9346E14F2AF74D46 | ApiSet: undefined
 */
export declare function networkPayMatchEntryFee(amount: number, matchId: string, p2: boolean, p3: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x1B882107C23A9022 | ApiSet: undefined
 */
export declare function networkRivalDeliveryCompleted(earnedMoney: number): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x14EAEA58F93B55AF | ApiSet: undefined
 */
export declare function networkSpentArenaJoinSpectator(amount: number, p1: any, p2: boolean, p3: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x9BEA350D7C48061B | ApiSet: undefined
 */
export declare function networkSpentAutoshopModifications(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x43AA7FAC4E6D6687 | ApiSet: undefined
 */
export declare function networkSpentArcadeGeneric(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * ```
 * index
 * -------
 * See function sub_1005 in am_boat_taxi.ysc
 * context
 * ----------
 * "BACKUP_VAGOS"
 * "BACKUP_LOST"
 * "BACKUP_FAMILIES"
 * "HIRE_MUGGER"
 * "HIRE_MERCENARY"
 * "BUY_CARDROPOFF"
 * "HELI_PICKUP"
 * "BOAT_PICKUP"
 * "CLEAR_WANTED"
 * "HEAD_2_HEAD"
 * "CHALLENGE"
 * "SHARE_LAST_JOB"
 * "DEFAULT"
 * reason
 * ---------
 * "NOTREACHTARGET"
 * "TARGET_ESCAPE"
 * "DELIVERY_FAIL"
 * "NOT_USED"
 * "TEAM_QUIT"
 * "SERVER_ERROR"
 * "RECEIVE_LJ_L"
 * "CHALLENGE_PLAYER_LEFT"
 * "DEFAULT"
 * unk
 * -----
 * Unknown bool value
 * ```
 * Hash: 0xF9C812CD7C46E817 | ApiSet: undefined
 */
export declare function networkRefundCash(index: number, context: string, reason: string, unk: boolean): void;
/**
 * Hash: 0xD7CCCBA28C4ECAF0 | ApiSet: undefined
 */
export declare function networkSpentBaService(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x619496D837EFD920 | ApiSet: undefined
 */
export declare function networkSpentArenaPremium(amount: number, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xCA230C9682556CF1 | ApiSet: undefined
 */
export declare function networkSpentBankInterest(p0: number, p1: boolean, p2: boolean): void;
/**
 * Hash: 0x812F5488B1B2A299 | ApiSet: undefined
 */
export declare function networkSpentArrestBail(p0: any, p1: boolean, p2: boolean): void;
/**
 * Hash: 0xB162DC95C0A3317B | ApiSet: undefined
 */
export declare function networkSpentAmmoDrop(p0: any, p1: boolean, p2: boolean): void;
/**
 * Hash: 0x29B260B84947DFCC | ApiSet: undefined
 */
export declare function networkSpentBounty(p0: any, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x7049BF858601DC0F | ApiSet: undefined
 */
export declare function networkSpentArenaSpectatorBox(amount: number, p1: any, p2: boolean, p3: boolean): void;
/**
 * Hash: 0x524EE43A37232C00 | ApiSet: undefined
 */
export declare function networkSpentBoatPickup(p0: any, p1: boolean, p2: boolean): void;
/**
 * Hash: 0x5D97630A8A0EF123 | ApiSet: undefined
 */
export declare function networkSpentBallisticEquipment(amount: number, p1: boolean, p2: boolean): void;
/**
 * Hash: 0xA6DD8458CE24012C | ApiSet: undefined
 */
export declare function networkSpentBullShark(p0: any, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xB40F96D6D252839B | ApiSet: undefined
 */
export declare function networkSpentAutoshopPropertyUtilityFee(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x1C436FD11FFA692F | ApiSet: undefined
 */
export declare function networkSpentBetting(amount: number, p1: number, p3: boolean, p4: boolean): string;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x1BEA0CD93470BB1F | ApiSet: undefined
 */
export declare function networkSpentBountyHunterMission(amount: number, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Added Parameter 1: int amount
 * NativeDB Added Parameter 2: BOOL p1
 * NativeDB Added Parameter 3: BOOL p2
 * ```
 * Hash: 0xFFBE02CD385356BD | ApiSet: undefined
 */
export declare function networkSpentBoss(): boolean;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x54ABA22FA6371249 | ApiSet: undefined
 */
export declare function networkSpentBeachPartyGeneric(p0: any): void;
/**
 * Hash: 0x0035BB914316F1E3 | ApiSet: undefined
 */
export declare function networkSpentBusiness(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x6D3A430D1A809179 | ApiSet: undefined
 */
export declare function networkSpentBuyPassiveMode(p0: any, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xEEB7E5D1FEB20869 | ApiSet: undefined
 */
export declare function networkSpentBuyAutoshop(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x923AEA8E78F8DF0B | ApiSet: undefined
 */
export declare function networkSpentBikeShopModify(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x4EA3F425C7744D21 | ApiSet: undefined
 */
export declare function networkSpentBuyBase(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0xE1B13771A843C4F6 | ApiSet: undefined
 */
export declare function networkSpentBuyWantedlevel(p0: any, p2: boolean, p3: boolean): any;
/**
 * Hash: 0x12D148D26538D0F9 | ApiSet: undefined
 */
export declare function networkSpentBuyBunker(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0xA628A745E2275C5D | ApiSet: undefined
 */
export declare function networkSpentBuyOfftheradar(p0: any, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x1464E17207CD36E2 | ApiSet: undefined
 */
export declare function networkSpentCarclubMembership(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x0CCE73BC7A11E885 | ApiSet: undefined
 */
export declare function networkSpentBuyTiltrotor(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0xAC272C0AE01B4BD8 | ApiSet: undefined
 */
export declare function networkSpentBuyTruck(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x925227803A0EAA1B | ApiSet: undefined
 */
export declare function networkSpentCarclub(p0: any, p1: boolean, p2: boolean, p3: any): void;
/**
 * Hash: 0xACDE7185B374177C | ApiSet: undefined
 */
export declare function networkSpentCallPlayer(p0: any, p2: boolean, p3: boolean): any;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x40D5DA9550B7CB46 | ApiSet: undefined
 */
export declare function networkSpentBuyArena(amount: number, p1: boolean, p2: boolean, p3: string): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xD1E46824E6FB92B5 | ApiSet: undefined
 */
export declare function networkSpentCarclubTakeover(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x948705F6F9C50824 | ApiSet: undefined
 */
export declare function networkSpentCargoSourcing(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x34A6FC4D06C4DA0F | ApiSet: undefined
 */
export declare function networkSpentBuyCasino(amount: number, p1: boolean, p2: boolean): any;
/**
 * Hash: 0xEC03C719DB2F4306 | ApiSet: undefined
 */
export declare function networkSpentCarwash(p0: any, p1: any, p2: any, p3: boolean, p4: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xC991C255AA6D90B2 | ApiSet: undefined
 */
export declare function networkSpentCasinoClubGeneric(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): void;
/**
 * Hash: 0x6E176F1B18BC0637 | ApiSet: undefined
 */
export declare function networkSpentBuyRevealPlayers(p0: any, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x487009DD91D93429 | ApiSet: undefined
 */
export declare function networkSpentCasinoHeistSkipMission(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x88BF9B612B84D3C3 | ApiSet: undefined
 */
export declare function networkSpentCasinoGeneric(amount: number, p1: any, p2: any, p3: any, p4: any): void;
/**
 * Hash: 0x289016EC778D60E0 | ApiSet: undefined
 */
export declare function networkSpentCashDrop(amount: number, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x5BBBD92186E1F1C5 | ApiSet: undefined
 */
export declare function networkSpentEmployAssassins(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0xD30E8392F407C328 | ApiSet: undefined
 */
export declare function networkSpentCasinoHeist(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xFBBE0570EDF39D46 | ApiSet: undefined
 */
export declare function networkSpentCasinoMembership(amount: number, p1: boolean, p2: boolean, p3: number): void;
/**
 * Hash: 0x6A445B64ED7ABEB5 | ApiSet: undefined
 */
export declare function networkSpentFromRockstar(bank: number, p1: boolean, p2: boolean): void;
/**
 * Hash: 0x6B38ECB05A63A685 | ApiSet: undefined
 */
export declare function networkSpentCinema(p0: any, p1: any, p2: boolean, p3: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x2CEB0E0BC2A77C05 | ApiSet: undefined
 */
export declare function networkSpentGunrunningContactService(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x771ADB0E7635B7BF | ApiSet: undefined
 */
export declare function networkSpentGangopsCannon(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x7BF1D73DB2ECA492 | ApiSet: undefined
 */
export declare function networkSpentHeliPickup(p0: any, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xB9F7A469460E7A4A | ApiSet: undefined
 */
export declare function networkSpentFromBank(p0: any, p1: any, p2: any, p3: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xA19EC0786E326E06 | ApiSet: undefined
 */
export declare function networkSpentGangopsStartStrand(type: number, amount: number, p2: boolean, p3: boolean): void;
/**
 * ```
 * Only used once in a script (am_contact_requests)
 * p1 = 0
 * p2 = 1
 * ```
 * Hash: 0xE404BFB981665BF0 | ApiSet: undefined
 */
export declare function networkSpentHireMugger(p0: any, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x5ECE6FD7B4EC8D6A | ApiSet: undefined
 */
export declare function networkSpentGangopsTripSkip(amount: number, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xDA947AE8880D5C18 | ApiSet: undefined
 */
export declare function networkSpentGangopsStartMission(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0xB18AC2ECBB15CB6A | ApiSet: undefined
 */
export declare function networkSpentHangarUtilityCharges(amount: number, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0xB1F1346FD57685D7 | ApiSet: undefined
 */
export declare function networkSpentHangarStaffCharges(amount: number, p1: boolean, p2: boolean): void;
/**
 * Hash: 0xE7B80E2BF9D80BD6 | ApiSet: undefined
 */
export declare function networkSpentHireMercenary(p0: any, p1: boolean, p2: boolean): void;
/**
 * Hash: 0xD9B86B9872039763 | ApiSet: undefined
 */
export declare function networkSpentHoldups(p0: any, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x93AA4165CB67E925 | ApiSet: undefined
 */
export declare function networkSpentImAbility(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0xEE99784E4467689C | ApiSet: undefined
 */
export declare function networkSpentInStripclub(p0: any, p1: boolean, p2: any, p3: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xE86689E5F82DE429 | ApiSet: undefined
 */
export declare function networkSpentIslandHeist(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x28F174A67B8D0C2F | ApiSet: undefined
 */
export declare function networkSpentJobSkip(amount: number, matchId: string, p2: boolean, p3: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xE5F5A060439C2F5D | ApiSet: undefined
 */
export declare function networkSpentMakeItRain(amount: number, p1: boolean, p2: boolean): void;
/**
 * Hash: 0xC1952F3773BA18FE | ApiSet: undefined
 */
export declare function networkSpentImportExportRepair(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0xE7DF4E0545DFB56E | ApiSet: undefined
 */
export declare function networkSpentMoveYacht(amount: number, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x876056684281655D | ApiSet: undefined
 */
export declare function networkSpentNightclubEntryFee(player: number | string | Player, amount: number, p1: any, p2: boolean, p3: boolean): void;
/**
 * Hash: 0x5BCDE0F640C773D2 | ApiSet: undefined
 */
export declare function networkSpentJukebox(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0xB49ECA122467D05F | ApiSet: undefined
 */
export declare function networkSpentPaServiceDancer(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x05F04155A226FBBF | ApiSet: undefined
 */
export declare function networkSpentOrderWarehouseVehicle(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0xD5BB406F4E04019F | ApiSet: undefined
 */
export declare function networkSpentNoCops(p0: any, p1: boolean, p2: boolean): void;
/**
 * Hash: 0x08A1B82B91900682 | ApiSet: undefined
 */
export declare function networkSpentPayGoon(p0: number, p1: number, amount: number): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xDD21B016E4289465 | ApiSet: undefined
 */
export declare function networkSpentNightclubBarDrink(amount: number, p1: any, p2: boolean, p3: boolean): void;
/**
 * Hash: 0xE8B0B270B6E7C76E | ApiSet: undefined
 */
export declare function networkSpentOrderBodyguardVehicle(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x0FE8E1FCD2B86B33 | ApiSet: undefined
 */
export declare function networkSpentPaServiceHeliPickup(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0xDBC966A01C02BCA7 | ApiSet: undefined
 */
export declare function networkSpentPayBoss(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0xB21B89501CFAC79E | ApiSet: undefined
 */
export declare function networkSpentProstitutes(p0: any, p1: boolean, p2: boolean): void;
/**
 * ```
 * According to how I understood this in the freemode script alone,
 * The first parameter is determined by a function named, func_5749 within the freemode script which has a list of all the vehicles and a set price to return which some vehicles deals with globals as well. So the first parameter is basically the set in stone insurance cost it's gonna charge you for that specific vehicle model.
 * The second parameter whoever put it was right, they call GET_ENTITY_MODEL with the vehicle as the paremeter.
 * The third parameter is the network handle as they call their little struct<13> func or atleast how the script decompiled it to look which in lamens terms just returns the network handle of the previous owner based on DECOR_GET_INT(vehicle, "Previous_Owner").
 * The fourth parameter is a bool that returns true/false depending on if your bank balance is greater then 0.
 * The fifth and last parameter is a bool that returns true/false depending on if you have the money for the car based on the cost returned by func_5749. In the freemode script eg,
 * `bool hasTheMoney = MONEY::_GET_BANK_BALANCE() < carCost.`
 * ```
 * Hash: 0x9FF28D88C766E3E8 | ApiSet: undefined
 */
export declare function networkSpentPayVehicleInsurancePremium(amount: number, vehicleModel: number | string, notBankrupt: boolean, hasTheMoney: boolean): number;
/**
 * Hash: 0x7C99101F7FCE2EE5 | ApiSet: undefined
 */
export declare function networkSpentPlayerHealthcare(p0: number, p1: number, p2: boolean, p3: boolean): void;
/**
 * Hash: 0x33981D6804E62F49 | ApiSet: undefined
 */
export declare function networkSpentPurchaseWarehouse(amount: number, data: any, p2: boolean, p3: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0xCCB339CC970452DA | ApiSet: undefined
 */
export declare function networkSpentPurchaseHangar(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0xFC4EE00A7B3BFB76 | ApiSet: undefined
 */
export declare function networkSpentRenameOrganization(p0: any, p1: any, p2: any): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xE284D46FFDB82E36 | ApiSet: undefined
 */
export declare function networkSpentRdrhatchetBonus(amount: number, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xF6C8A544E4CF14FC | ApiSet: undefined
 */
export declare function networkSpentRehireDj(amount: number, p1: any, p2: boolean, p3: boolean): void;
/**
 * Hash: 0x995A65F15F581359 | ApiSet: undefined
 */
export declare function networkSpentRobbedByMugger(amount: number, p1: boolean, p2: boolean): void;
/**
 * Hash: 0x9D26502BB97BFE62 | ApiSet: undefined
 */
export declare function networkSpentRequestHeist(p0: any, p1: boolean, p2: boolean): void;
/**
 * Hash: 0x8204DA7934DF3155 | ApiSet: undefined
 */
export declare function networkSpentRequestJob(p0: any, p1: boolean, p2: boolean): void;
/**
 * Hash: 0x17C3A7D31EAE39F9 | ApiSet: undefined
 */
export declare function networkSpentTaxi(amount: number, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * NativeDB Removed Parameter 4: BOOL p3
 * ```
 * Hash: 0x9A5BD1D0000B339C | ApiSet: undefined
 */
export declare function networkSpentSpinTheWheelPayment(amount: number, p1: any, p2: boolean, p3: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x7E2F4E8F44CAF4E0 | ApiSet: undefined
 */
export declare function networkSpentSalesDisplay(p0: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x3DD3F33A5D55EA6F | ApiSet: undefined
 */
export declare function networkSpentUpgradeBase(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xDD829AA198FDC46C | ApiSet: undefined
 */
export declare function networkSpentUpgradeAutoshop(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x7FE61782AD94CC09 | ApiSet: undefined
 */
export declare function networkSpentTelescope(p0: any, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x6C8BC1488527AAAB | ApiSet: undefined
 */
export declare function networkSpentSubmarine(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x4740D62BC1B4EBEA | ApiSet: undefined
 */
export declare function networkSpentUpgradeCasino(amount: number, p1: boolean, p2: boolean): any;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x615EB504B0788DAF | ApiSet: undefined
 */
export declare function networkSpentUpgradeHangar(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x0C82D21A77C22D49 | ApiSet: undefined
 */
export declare function networkSpentUpgradeBunker(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x037ABB06825D7AB1 | ApiSet: undefined
 */
export declare function networkSpentUpgradeArena(amount: number, p1: boolean, p2: boolean, p3: string): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x165E135D6DFA2907 | ApiSet: undefined
 */
export declare function networkSpentUpgradeTiltrotor(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x89049A84065CE68E | ApiSet: undefined
 */
export declare function networkSpentUpgradeSub(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x365E877C61D6988B | ApiSet: undefined
 */
export declare function networkSpentUpgradeTruck(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x02D24A35A9CC3503 | ApiSet: undefined
 */
export declare function networkSpentVehicleRequested(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * Hash: 0xD99DB210089617FE | ApiSet: undefined
 */
export declare function networkSpentWager(p0: any, p1: any, amount: number): void;
/**
 * Hash: 0x5182A339A3474510 | ApiSet: undefined
 */
export declare function networkSpentVipUtilityCharges(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0xA75CCF58A60A5FD1 | ApiSet: undefined
 */
export declare function networkSpentVehicleExportMods(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
/**
 * Hash: 0x20194D48EAEC9A41 | ApiSet: undefined
 */
export declare function processCashGift(p2: string): [string, number, number];
/**
 * ```
 * Does nothing and always returns 0.
 * ```
 * Hash: 0xF70EFA14FE091429 | ApiSet: undefined
 */
export declare function withdrawVc(amount: number): number;
/**
 * Hash: 0x5F4B6931816E599B | ApiSet: undefined
 */
export declare function disableAllControlActions(padIndex: number): void;
/**
 * ```cpp
 * enum ePadType {
 * PLAYER_CONTROL = 0,
 * CAMERA_CONTROL = 1,
 * FRONTEND_CONTRO = 2
 * };
 * ```
 * Hash: 0xA5FFE9B05F199DE7 | ApiSet: undefined
 */
export declare function enableAllControlActions(padIndex: number): void;
/**
 * ```
 * Returns profile setting 17.
 * ```
 * Hash: 0xFC859E2374407556 | ApiSet: undefined
 */
export declare function getAllowMovementWhileZoomed(): boolean;
/**
 * Hash: 0x7F4724035FDCA1DD | ApiSet: undefined
 */
export declare function disableInputGroup(padIndex: number): void;
/**
 * Hash: 0x80C2FD58D720C801 | ApiSet: undefined
 */
export declare function getControlGroupInstructionalButton(padIndex: number, controlGroup: number, p2: boolean): string;
/**
 * ```
 * formerly called _GET_CONTROL_ACTION_NAME incorrectly
 * p2 appears to always be true.
 * p2 is unused variable in function.
 * EG:
 * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 201, 1) \/\*INPUT_FRONTEND_ACCEPT (e.g. Enter button)\*\/
 * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 202, 1) \/\*INPUT_FRONTEND_CANCEL (e.g. ESC button)\*\/
 * GET_CONTROL_INSTRUCTIONAL_BUTTON (2, 51, 1) \/\*INPUT_CONTEXT (e.g. E button)\*\/
 * gtaforums.com/topic/819070-c-draw-instructional-buttons-scaleform-movie/#entry1068197378
 * 0, 1 and 2 used in the scripts. 0 is by far the most common of them.
 * ```
 * Hash: 0x0499D7B09FC9B407 | ApiSet: undefined
 */
export declare function getControlInstructionalButton(padIndex: number, control: number, p2: boolean): string;
/**
 * [Control values and meaning](https://docs.fivem.net/docs/game-references/controls/#controls)
 * `Example: `CONTROLS::DISABLE_CONTROL_ACTION(2, 19, true)` disables the switching UI from appearing both when using a keyboard and Xbox 360 controller. Needs to be executed each frame.`
 * Control group 1 and 0 gives the same results as 2. Same results for all players.
 * Hash: 0xFE99B66D079CF6BC | ApiSet: undefined
 */
export declare function disableControlAction(padIndex: number, control: number, disable: boolean): void;
/**
 * Hash: 0xD95E79E8686D2C27 | ApiSet: undefined
 */
export declare function getControlValue(padIndex: number, control: number): number;
/**
 * Hash: 0xEC3C9B8D5327B563 | ApiSet: undefined
 */
export declare function getControlNormal(padIndex: number, control: number): number;
/**
 * ```
 * control values and meaning: https://github.com/scripthookvdotnet/scripthookvdotnet/blob/47f8bb02a50e27d4bb982f43a78091feac59b21c/source/scripting_v3/GTA/Control.cs
 * and
 * https://docs.fivem.net/game-references/controls/
 * 0, 1 and 2 used in the scripts.
 * Control values from the decompiled scripts:
 * 0,1,2,3,4,5,6,8,9,10,11,14,15,16,17,19,21,22,24,25,26,30,31,32,33,34,35,36,
 * 37,44,46,47,59,60,65,68,69,70,71,72,73,74,75,76,79,80,81,82,86,95,98,99,100
 * ,101,114,140,141,143,172,173,174,175,176,177,178,179,180,181,187,188,189,19
 * 0,195,196,197,198,199,201,202,203,204,205,206,207,208,209,210,217,218,219,2
 * 20,221,225,228,229,230,231,234,235,236,237,238,239,240,241,242,245,246,257,
 * 261,262,263,264,286,287,288,289,337,338,339,340,341,342,343
 * INPUTGROUP_MOVE
 * INPUTGROUP_LOOK
 * INPUTGROUP_WHEEL
 * INPUTGROUP_CELLPHONE_NAVIGATE
 * INPUTGROUP_CELLPHONE_NAVIGATE_UD
 * INPUTGROUP_CELLPHONE_NAVIGATE_LR
 * INPUTGROUP_FRONTEND_DPAD_ALL
 * INPUTGROUP_FRONTEND_DPAD_UD
 * INPUTGROUP_FRONTEND_DPAD_LR
 * INPUTGROUP_FRONTEND_LSTICK_ALL
 * INPUTGROUP_FRONTEND_RSTICK_ALL
 * INPUTGROUP_FRONTEND_GENERIC_UD
 * INPUTGROUP_FRONTEND_GENERIC_LR
 * INPUTGROUP_FRONTEND_GENERIC_ALL
 * INPUTGROUP_FRONTEND_BUMPERS
 * INPUTGROUP_FRONTEND_TRIGGERS
 * INPUTGROUP_FRONTEND_STICKS
 * INPUTGROUP_SCRIPT_DPAD_ALL
 * INPUTGROUP_SCRIPT_DPAD_UD
 * INPUTGROUP_SCRIPT_DPAD_LR
 * INPUTGROUP_SCRIPT_LSTICK_ALL
 * INPUTGROUP_SCRIPT_RSTICK_ALL
 * INPUTGROUP_SCRIPT_BUMPERS
 * INPUTGROUP_SCRIPT_TRIGGERS
 * INPUTGROUP_WEAPON_WHEEL_CYCLE
 * INPUTGROUP_FLY
 * INPUTGROUP_SUB
 * INPUTGROUP_VEH_MOVE_ALL
 * INPUTGROUP_CURSOR
 * INPUTGROUP_CURSOR_SCROLL
 * INPUTGROUP_SNIPER_ZOOM_SECONDARY
 * INPUTGROUP_VEH_HYDRAULICS_CONTROL
 * Took those in IDA Pro.Not sure in which order they go
 * ```
 * Hash: 0x351220255D64C155 | ApiSet: undefined
 */
export declare function enableControlAction(padIndex: number, control: number, enable: boolean): void;
/**
 * ```
 * Returns profile setting 225.
 * ```
 * Hash: 0x0F70731BACCFBB96 | ApiSet: undefined
 */
export declare function getIsUsingAlternateDriveby(): boolean;
/**
 * Hash: 0x4F8A26A890FD62FB | ApiSet: undefined
 */
export declare function getDisabledControlUnboundNormal(padIndex: number, control: number): number;
/**
 * Hash: 0x11E65974A982637C | ApiSet: undefined
 */
export declare function getDisabledControlNormal(padIndex: number, control: number): number;
/**
 * ```
 * The number of milliseconds since last padIndex registered pressed
 * ```
 * Hash: 0xD7D22F5592AED8BA | ApiSet: undefined
 */
export declare function getTimeSinceLastInput(padIndex: number): number;
/**
 * ```
 * Seems to return values between -1 and 1 for controls like gas and steering.
 * ```
 * Hash: 0x5B84D09CEC5209C5 | ApiSet: undefined
 */
export declare function getControlUnboundNormal(padIndex: number, control: number): number;
/**
 * Returns whether a control was newly released since the last check.
 * Hash: 0x50F940259D3841E6 | ApiSet: undefined
 */
export declare function isControlJustReleased(padIndex: number, control: number): boolean;
/**
 * Returns the local player's targeting mode. See [`SET_PLAYER_TARGETING_MODE`](#\_0xB1906895227793F3).
 * Hash: 0xBB41AFBBBC0A0287 | ApiSet: undefined
 */
export declare function getLocalPlayerAimState(): number;
/**
 * Same behavior as [`GET_LOCAL_PLAYER_AIM_STATE`](#\_0xBB41AFBBBC0A0287) but will also return if player using a keyboard.
 * Hash: 0x59B9A7AF4C95133C | ApiSet: undefined
 */
export declare function getLocalPlayerGamepadAimState(): number;
/**
 * Hash: 0x91AEF906BCA88877 | ApiSet: undefined
 */
export declare function isDisabledControlJustPressed(padIndex: number, control: number): boolean;
/**
 * Hash: 0x1CEA6BFDF248E5D9 | ApiSet: undefined
 */
export declare function isControlEnabled(padIndex: number, control: number): boolean;
/**
 * Returns whether a control was newly pressed since the last check.
 * Hash: 0x580417101DDB492F | ApiSet: undefined
 */
export declare function isControlJustPressed(padIndex: number, control: number): boolean;
/**
 * Hash: 0x77B612531280010D | ApiSet: undefined
 */
export declare function isLookInverted(): boolean;
/**
 * Returns whether a control is currently pressed.
 * Hash: 0xF3A21BCD95725A4A | ApiSet: undefined
 */
export declare function isControlPressed(padIndex: number, control: number): boolean;
/**
 * Hash: 0xE2587F8CBBD87B1D | ApiSet: undefined
 */
export declare function isDisabledControlPressed(padIndex: number, control: number): boolean;
/**
 * Hardcoded to return false.
 * Hash: 0x23F09EADC01449D6 | ApiSet: undefined
 */
export declare function _0x23F09EADC01449D6(padIndex: number): boolean;
/**
 * Returns whether a control is currently *not* pressed.
 * Hash: 0x648EE3E7F38877DD | ApiSet: undefined
 */
export declare function isControlReleased(padIndex: number, control: number): boolean;
/**
 * Hash: 0x13337B38DB572509 | ApiSet: undefined
 */
export declare function isUsingKeyboard2(padIndex: number): boolean;
/**
 * Hash: 0x305C8DCD79DA8B0F | ApiSet: undefined
 */
export declare function isDisabledControlJustReleased(padIndex: number, control: number): boolean;
/**
 * Hash: 0xFB6C4072E9A32E92 | ApiSet: undefined
 */
export declare function isDisabledControlReleased(padIndex: number, control: number): boolean;
/**
 * Hash: 0xA571D46727E2B718 | ApiSet: undefined
 */
export declare function isUsingKeyboard(padIndex: number): boolean;
/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * Hash: 0x25AAA32BDC98F2A3 | ApiSet: undefined
 */
export declare function _0x25AAA32BDC98F2A3(): any;
/**
 * Hash: 0x6CD79468A1E595C6 | ApiSet: undefined
 */
export declare function _0x6CD79468A1E595C6(padIndex: number): boolean;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x14D29BB12D47F68C | ApiSet: undefined
 */
export declare function _0x14D29BB12D47F68C(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * Hash: 0xA0CEFCEA390AAB9B | ApiSet: undefined
 */
export declare function _0xA0CEFCEA390AAB9B(p0: any): void;
/**
 * Hash: 0x5B73C77D9EB66E24 | ApiSet: undefined
 */
export declare function _0x5B73C77D9EB66E24(p0: boolean): void;
/**
 * ```
 * Used with IS_LOOK_INVERTED() and negates its affect.
 * --
 * Not sure how the person above got that description, but here's an actual example:
 * `if (PAD::_GET_LAST_INPUT_METHOD(2)) {`
 * if (a_5) {
 * `if (PAD::IS_LOOK_INVERTED()) {`
 * a_3 *= -1;
 * }
 * `if (PAD::_E1615EC03B3BB4FD()) {`
 * a_3 *= -1;
 * }
 * }
 * }
 * ```
 * Hash: 0xE1615EC03B3BB4FD | ApiSet: undefined
 */
export declare function _0xE1615EC03B3BB4FD(): boolean;
/**
 * ```
 * S*
 * ```
 * Hash: 0x643ED62D5EA3BEBD | ApiSet: undefined
 */
export declare function resetInputMappingScheme(): void;
/**
 * Hash: 0xF239400E16C23E08 | ApiSet: undefined
 */
export declare function _0xF239400E16C23E08(padIndex: number, p1: number): void;
/**
 * Hash: 0xCB0360EFEFB2580D | ApiSet: undefined
 */
export declare function _0xCB0360EFEFB2580D(padIndex: number): void;
/**
 * Hash: 0xFC695459D4D0E219 | ApiSet: undefined
 */
export declare function setCursorLocation(x: number, y: number): boolean;
/**
 * This is for simulating player input.
 * Hash: 0xE8A25867FBA3B05E | ApiSet: undefined
 */
export declare function setControlNormal(padIndex: number, control: number, amount: number): boolean;
/**
 * Hash: 0x798FDEB5B1575088 | ApiSet: undefined
 */
export declare function setPlayerpadShakesWhenControllerDisabled(toggle: boolean): void;
/**
 * Hash: 0x8290252FFF36ACB5 | ApiSet: undefined
 */
export declare function setControlLightEffectColor(padIndex: number, red: number, green: number, blue: number): void;
/**
 * ```
 * p0 always seems to be 0
 * duration in milliseconds
 * frequency should range from about 10 (slow vibration) to 255 (very fast)
 * example:
 * SET_PAD_SHAKE(0, 100, 200);
 * ```
 * Hash: 0x48B3886C1358D0D5 | ApiSet: undefined
 */
export declare function setPadShake(padIndex: number, duration: number, frequency: number): void;
/**
 * Hash: 0xEDE476E5EE29EDB1 | ApiSet: undefined
 */
export declare function setInputExclusive(padIndex: number, control: number): void;
/**
 * Hash: 0x38C16A305E8CDC8D | ApiSet: undefined
 */
export declare function stopPadShake(padIndex: number): void;
/**
 * ```
 * Used in carsteal3 script with p0 = "Carsteal4_spycar".
 * S*
 * ```
 * Hash: 0x3D42B92563939375 | ApiSet: undefined
 */
export declare function switchToInputMappingScheme(name: string): boolean;
/**
 * ```
 * Same as 0x3D42B92563939375
 * S*
 * ```
 * Hash: 0x4683149ED1DDE7A1 | ApiSet: undefined
 */
export declare function switchToInputMappingScheme2(name: string): boolean;
/**
 * p5 only set to true in single player native scripts. Door hashes normally look like `PROP_[int]_DOOR_[int]` for interior doors and `PROP_BUILDING_[int]_DOOR_[int]` exterior doors but you can just make up your own hash if you want.
 * If scriptDoor is true, register the door on the script handler host (note: there's a hardcap on the number of script IDs that can be added to the system at a given time). If scriptDoor and isLocal are both false, the door is considered to be in a "Persists w/o netobj" state.
 * A simple "localized" door-system (with hundreds/thousands of doors) can be created by setting p5, p6, and p7 to false and using EventHandlers to synchronize the states to: [DOOR_SYSTEM_SET_DOOR_STATE](#\_0x6BAB9442830C7F53), [DOOR_SYSTEM_SET_OPEN_RATIO](#\_0xB6E6FBA95C7324AC), [DOOR_SYSTEM_SET_HOLD_OPEN](#\_0xD9B71952F78A2640), etc.
 * Hash: 0x6F8838D03D1DC226 | ApiSet: undefined
 */
export declare function addDoorToSystem(doorHash: number | string, modelHash: number | string, position: Vector3, p5: boolean, scriptDoor: boolean, isLocal: boolean): void;
/**
 * Hash: 0x85B6C850546FDDE2 | ApiSet: undefined
 */
export declare function areEntitiesEntirelyInsideGarage(garageHash: number | string, p1: boolean, p2: boolean, p3: boolean, p4: any): boolean;
/**
 * Hash: 0x8DC39368BDD57755 | ApiSet: undefined
 */
export declare function attachPortablePickupToPed(pickupObject: any, ped: number | Ped): void;
/**
 * Hash: 0xDA05194260CDCDF9 | ApiSet: undefined
 */
export declare function clearGarageArea(garageHash: number | string, isNetwork: boolean): void;
/**
 * Creates an ambient pickup given the hash. Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
 * Hash: 0x673966A0C0FD7171 | ApiSet: undefined
 */
export declare function createAmbientPickup(pickupHash: number | string, posX: number, posY: number, posZ: number, flags: number, value: number, modelHash: number | string, returnHandle: boolean, p8: boolean): any;
/**
 * Hash: 0xE7E4C198B0185900 | ApiSet: undefined
 */
export declare function breakObjectFragmentChild(p0: any, p1: any, p2: boolean): void;
/**
 * Hash: 0x190428512B240692 | ApiSet: undefined
 */
export declare function clearObjectsInsideGarage(garageHash: number | string, vehicles: boolean, peds: boolean, objects: boolean, isNetwork: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x9C93764223E29C50 | ApiSet: undefined
 */
export declare function createNonNetworkedAmbientPickup(pickupHash: any, posX: number, posY: number, posZ: number, flags: number, value: number, modelHash: any, p7: boolean, p8: boolean): any;
/**
 * ```
 * Spawns one or more money pickups.
 * x: The X-component of the world position to spawn the money pickups at.
 * y: The Y-component of the world position to spawn the money pickups at.
 * z: The Z-component of the world position to spawn the money pickups at.
 * value: The combined value of the pickups (in dollars).
 * amount: The number of pickups to spawn.
 * model: The model to use, or 0 for default money model.
 * Example:
 * CREATE_MONEY_PICKUPS(x, y, z, 1000, 3, 0x684a97ae);
 * Spawns 3 spray cans that'll collectively give $1000 when picked up. (Three spray cans, each giving $334, $334, $332 = $1000).
 * ==============================================
 * Max is 2000 in MP. So if you put the amount to 20, but the value to $400,000 eg. They will only be able to pickup 20 - $2,000 bags. So, $40,000
 * ```
 * Hash: 0x0589B5E791CE9B2B | ApiSet: undefined
 */
export declare function createMoneyPickups(position: Vector3, value: number, amount: number, model: number | string): void;
/**
 * Creates an object (prop) with the specified model centered at the specified position.
 * This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
 * Hash: 0x9A294B2138ABB884 | ApiSet: undefined
 */
export declare function createObjectNoOffset(modelHash: number | string, position: Vector3, isNetwork: boolean, netMissionEntity: boolean, doorFlag: boolean): any;
/**
 * Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
 * Hash: 0x2EAF1FDB2FB55698 | ApiSet: undefined
 */
export declare function createPortablePickup(pickupHash: number | string, position: Vector3, placeOnGround: boolean, modelHash: number | string): any;
/**
 * Hash: 0x125494B98A21AAF7 | ApiSet: undefined
 */
export declare function createNonNetworkedPortablePickup(pickupHash: number | string, position: Vector3, placeOnGround: boolean, modelHash: number | string): any;
/**
 * Deletes the specified object.
 * **Note**: If for some reason the entity won't delete, you might want to check if the object is a mission entity.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x539E0AE3E6634B9F | ApiSet: undefined
 */
export declare function deleteObject(object: number | Entity): void;
/**
 * Creates an object (prop) with the specified model at the specified position, offset on the Z axis by the radius of the object's model.
 * This object will initially be owned by the creating script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
 * Hash: 0x509D5878EB39E842 | ApiSet: undefined
 */
export declare function createObject(modelHash: number | string, position: Vector3, isNetwork: boolean, netMissionEntity: boolean, doorFlag: boolean): any;
/**
 * Hash: 0xD9EFB6DBF7DAAEA3 | ApiSet: undefined
 */
export declare function doesPickupObjectExist(pickupObject: any): boolean;
/**
 * Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
 * Hash: 0xFBA08C503DD5FA58 | ApiSet: undefined
 */
export declare function createPickup(pickupHash: number | string, posX: number, posY: number, posZ: number, p4: number, value: number, p6: boolean, modelHash: number | string): any;
/**
 * Hash: 0xAFC1CA75AD4074D1 | ApiSet: undefined
 */
export declare function doesPickupExist(pickup: any): boolean;
/**
 * ```
 * Returns true if a destructible object with this handle exists, false otherwise.
 * ```
 * Hash: 0x52AF537A0C5B8AAD | ApiSet: undefined
 */
export declare function doesRayfireMapObjectExist(object: any): boolean;
/**
 * ```
 * Pickup hashes: pastebin.com/8EuSv2r1
 * flags:
 * 8 (1 << 3): place on ground
 * 512 (1 << 9): spin around
 * ```
 * Hash: 0x891804727E0A98B7 | ApiSet: undefined
 */
export declare function createPickupRotate(pickupHash: number | string, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, flag: number, amount: number, p9: any, p10: boolean, modelHash: number | string): any;
/**
 * ```
 * p5 is usually 0.
 * ```
 * Hash: 0xBFA48E2FF417213F | ApiSet: undefined
 */
export declare function doesObjectOfTypeExistAtCoords(position: Vector3, radius: number, hash: number | string, p5: boolean): boolean;
/**
 * Hardcoded not to work in multiplayer environments.
 * Native name between `SET_LOCAL_PLAYER_VISIBLE_LOCALLY` & `SET_MAX_WANTED_LEVEL`.
 * ```
 * `OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 0, 0.0, 50.0, 0);  //door unlocked`
 * `OBJECT::_9B12F9A24FABEDB0(${prop_gate_prison_01}, 1845.0, 2605.0, 45.0, 1, 0.0, 50.0, 0);  //door locked`
 * ```
 * Hash: 0x9B12F9A24FABEDB0 | ApiSet: undefined
 */
export declare function doorControl(modelHash: number | string, position: Vector3, locked: boolean, xRotMult: number, yRotMult: number, zRotMult: number): void;
/**
 * Hash: 0xCF463D1E9A0AECB1 | ApiSet: undefined
 */
export declare function detachPortablePickupFromPed(pickupObject: any): void;
/**
 * Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
 * Hash: 0xF9C36251F6E48E33 | ApiSet: undefined
 */
export declare function doesPickupOfTypeExistInArea(pickupHash: number | string, position: Vector3, radius: number): boolean;
/**
 * Hash: 0x4BC2854478F3A749 | ApiSet: undefined
 */
export declare function doorSystemGetDoorPendingState(doorHash: number | string): number;
/**
 * Includes networking check: ownership vs. or the door itself **isn't** networked.
 * Hash: 0x03C27E13B42A0E82 | ApiSet: undefined
 */
export declare function doorSystemSetAutomaticRate(doorHash: number | string, rate: number, requestDoor: boolean, forceUpdate: boolean): void;
/**
 * Hash: 0x65499865FCA6E5EC | ApiSet: undefined
 */
export declare function doorSystemGetOpenRatio(doorHash: number | string): number;
/**
 * Search radius: 0.5
 * Hash: 0x589F80B325CC82C5 | ApiSet: undefined
 */
export declare function doorSystemFindExistingDoor(position: Vector3, modelHash: number | string): [boolean, number];
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0xE851471AEFC3374F | ApiSet: undefined
 */
export declare function doorSystemGetAutomaticDistance(doorHash: number | string): number;
/**
 * Includes networking check: ownership vs. or the door itself **isn't** networked.
 * Hash: 0xC485E07E4F0B7958 | ApiSet: undefined
 */
export declare function doorSystemSetSpringRemoved(doorHash: number | string, removed: boolean, requestDoor: boolean, forceUpdate: boolean): void;
/**
 * Hash: 0xDF97CDD4FC08FD34 | ApiSet: undefined
 */
export declare function doorSystemGetIsPhysicsLoaded(doorHash: number | string): boolean;
/**
 * Hash: 0x160AA1B32F6139B8 | ApiSet: undefined
 */
export declare function doorSystemGetDoorState(doorHash: number | string): number;
/**
 * Lockstates not applied and CNetObjDoor's not created until [DOOR_SYSTEM_GET_IS_PHYSICS_LOADED](#\_0xDF97CDD4FC08FD34) returns true.
 * ### Door lock states: (v323)
 * *   **0**: UNLOCKED
 * *   **1**: LOCKED
 * *   **2**: DOORSTATE_FORCE_LOCKED_UNTIL_OUT_OF_AREA
 * *   **3**: DOORSTATE_FORCE_UNLOCKED_THIS_FRAME
 * *   **4**: DOORSTATE_FORCE_LOCKED_THIS_FRAME
 * *   **5**: DOORSTATE_FORCE_OPEN_THIS_FRAME
 * *   **6**: DOORSTATE_FORCE_CLOSED_THIS_FRAME
 * Hash: 0x6BAB9442830C7F53 | ApiSet: undefined
 */
export declare function doorSystemSetDoorState(doorHash: number | string, state: number, requestDoor: boolean, forceUpdate: boolean): void;
/**
 * Resets and brings back all the children of a fragment based object.
 * This should be used when attaching or detaching an object from another entity, especially when the object being detached consists of multiple fragments.
 * Attempting to teleport a fragment-based object using [`SET_ENTITY_COORDS`](#\_0x06843DA7060A026B) such as a flag object, will result in it remaining in place and failing to teleport, given the condition mentioned in the preceding statement.
 * The native should be executed after detaching the object from its parent entity and before calling [`SET_ENTITY_COORDS`](#\_0x06843DA7060A026B).
 * Example given down below.
 * Hash: 0xF9C1681347C8BD15 | ApiSet: undefined
 */
export declare function fixObjectFragment(object: any): void;
/**
 * Hash: 0x9BA001CB45CBF627 | ApiSet: undefined
 */
export declare function doorSystemSetAutomaticDistance(doorHash: number | string, distance: number, requestDoor: boolean, forceUpdate: boolean): void;
/**
 * Includes networking check: ownership vs. or the door itself **isn't** networked.
 * Hash: 0xD9B71952F78A2640 | ApiSet: undefined
 */
export declare function doorSystemSetHoldOpen(doorHash: number | string, toggle: boolean): void;
/**
 * ```
 * Sets the ajar angle of a door.
 * Ranges from -1.0 to 1.0, and 0.0 is closed / default.
 * ```
 * Hash: 0xB6E6FBA95C7324AC | ApiSet: undefined
 */
export declare function doorSystemSetOpenRatio(doorHash: number | string, ajar: number, requestDoor: boolean, forceUpdate: boolean): void;
/**
 * Hash: 0xF2E1A7133DD356A6 | ApiSet: undefined
 */
export declare function enableSavingInGarage(garageHash: number | string, toggle: boolean): void;
/**
 * Hash: 0x163F8B586BC95F2A | ApiSet: undefined
 */
export declare function getCoordsAndRotationOfClosestObjectOfType(position: Vector3, radius: number, modelHash: number | string, rotationOrder: number): [any, Vector3, Vector3];
/**
 * Hash: 0x758A5C1B3B1E1990 | ApiSet: undefined
 */
export declare function forcePickupRegenerate(p0: any): void;
/**
 * Calculates the world coordinates after applying the specified offsets to the given position, relative to a certain heading.
 * This native is similar to [`GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS`](#\_0x1899F328B0E12848), but uses a world position and heading as the reference point.
 * Hash: 0x163E252DE035A133 | ApiSet: undefined
 */
export declare function getOffsetFromCoordAndHeadingInWorldCoords(xPos: number, yPos: number, zPos: number, heading: number, xOffset: number, yOffset: number, zOffset: number): Vector3;
/**
 * Hash: 0xE84EB93729C5F36A | ApiSet: undefined
 */
export declare function getObjectTextureVariation(object: any): number;
/**
 * Hash: 0xB6FBFD079B8D0596 | ApiSet: undefined
 */
export declare function getObjectFragmentDamageHealth(p0: any, p1: boolean): number;
/**
 * ```
 * returns pickup hash.
 * ```
 * Hash: 0x5EAAD83F8CFB4575 | ApiSet: undefined
 */
export declare function getPickupHash(pickupHash: number | string): number;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xD6429A016084F1A5 | ApiSet: undefined
 */
export declare function getPickupHashFromWeapon(weapon: number | string): number;
/**
 * Hash: 0xB3ECA65C7317F174 | ApiSet: undefined
 */
export declare function getPickupGenerationRangeMultiplier(): number;
/**
 * ```
 * Has 8 params in the latest patches.
 * isMission - if true doesn't return mission objects
 * ```
 * Hash: 0xE143FA2249364369 | ApiSet: undefined
 */
export declare function getClosestObjectOfType(position: Vector3, radius: number, modelHash: number | string, isMission: boolean, p6: boolean, p7: boolean): any;
/**
 * Hash: 0x5099BC55630B25AE | ApiSet: undefined
 */
export declare function getPickupObject(pickup: any): any;
/**
 * ```
 * Example:
 * `OBJECT::GET_RAYFIRE_MAP_OBJECT(-809.9619750976562, 170.919, 75.7406997680664, 3.0, "des_tvsmash");`
 * ```
 * Hash: 0xB48FCED898292E52 | ApiSet: undefined
 */
export declare function getRayfireMapObject(position: Vector3, radius: number, name: string): any;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x43C677F1E1158005 | ApiSet: undefined
 */
export declare function getIsArenaPropPhysicsDisabled(entity: any, p1: any): boolean;
/**
 * Hash: 0x225B8B35C88029B3 | ApiSet: undefined
 */
export declare function getPickupCoords(pickup: any): Vector3;
/**
 * ```
 * `object`: The des-object handle to get the animation progress from.
 * Return value is a float between 0.0 and 1.0, 0.0 is the beginning of the animation, 1.0 is the end. Value resets to 0.0 instantly after reaching 1.0.
 * ```
 * Hash: 0x260EE4FDBDF4DB01 | ApiSet: undefined
 */
export declare function getRayfireMapObjectAnimPhase(object: any): number;
/**
 * See [`SET_STATE_OF_RAYFIRE_MAP_OBJECT`](#\_0x5C29F698D404C5E1) to see the different states
 * Get a destructible object's state. Substract 1 to get the real state. For example, if the object just spawned (state 2), the native will return 3.
 * Hash: 0x899BA936634A322E | ApiSet: undefined
 */
export declare function getStateOfRayfireMapObject(object: any): number;
/**
 * Hash: 0x6E16BC2503FF1FF0 | ApiSet: undefined
 */
export declare function getSafePickupCoords(position: Vector3, p3: number, p4: number): Vector3;
/**
 * Hash: 0x08F96CA6C551AD51 | ApiSet: undefined
 */
export declare function getWeaponTypeFromPickupType(pickupHash: number | string): number;
/**
 * Hash: 0x80EC48E6679313F9 | ApiSet: undefined
 */
export declare function hasPickupBeenCollected(pickup: any): boolean;
/**
 * ```
 * locked is 0 if no door is found
 * locked is 0 if door is unlocked
 * locked is 1 if door is found and unlocked.
 * -------------
 * the locked bool is either 0(unlocked)(false) or 1(locked)(true)
 * ```
 * Hash: 0xEDC1A5B84AEF33FF | ApiSet: undefined
 */
export declare function getStateOfClosestDoorOfType(type: number | string, position: Vector3): [boolean, number];
/**
 * Hash: 0x761B0E69AC4D007E | ApiSet: undefined
 */
export declare function hasClosestObjectOfTypeBeenBroken(p0: number, p1: number, p2: number, p3: number, modelHash: number | string, p5: any): boolean;
/**
 * Hash: 0x397DC58FF00298D1 | ApiSet: undefined
 */
export declare function isAnyObjectNearPoint(position: Vector3, range: number, p4: boolean): boolean;
/**
 * Hash: 0x46494A2475701343 | ApiSet: undefined
 */
export declare function hasClosestObjectOfTypeBeenCompletelyDestroyed(position: Vector3, radius: number, modelHash: number | string, p5: boolean): boolean;
/**
 * Hash: 0x867458251D47CCB2 | ApiSet: undefined
 */
export declare function hidePortablePickupWhenDetached(pickup: any, toggle: boolean): void;
/**
 * Hash: 0x673ED815D6E323B7 | ApiSet: undefined
 */
export declare function isAnyEntityEntirelyInsideGarage(garageHash: number | string, p1: boolean, p2: boolean, p3: boolean, p4: any): boolean;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x8ABFB70C49CC43E2 | ApiSet: undefined
 */
export declare function hasObjectBeenBroken(object: any): boolean;
/**
 * Hash: 0xC531EE8A1145A149 | ApiSet: undefined
 */
export declare function isDoorClosed(doorHash: number | string): boolean;
/**
 * ```
 * `if (OBJECT::IS_DOOR_REGISTERED_WITH_SYSTEM(doorHash))`
 * {
 * `OBJECT::REMOVE_DOOR_FROM_SYSTEM(doorHash);`
 * }
 * ```
 * Hash: 0xC153C43EA202C8C1 | ApiSet: undefined
 */
export declare function isDoorRegisteredWithSystem(doorHash: number | string): boolean;
/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * Hash: 0x0378C08504160D0D | ApiSet: undefined
 */
export declare function isObjectAPortablePickup(object: any): boolean;
/**
 * Hash: 0xFC481C641EBBD27D | ApiSet: undefined
 */
export declare function isObjectAPickup(object: any): boolean;
/**
 * Hash: 0x90E47239EA1980B8 | ApiSet: undefined
 */
export declare function isGarageEmpty(garageHash: number | string, p1: boolean, p2: number): boolean;
/**
 * Hash: 0x372EF6699146A1E4 | ApiSet: undefined
 */
export declare function isObjectEntirelyInsideGarage(garageHash: number | string, entity: number | Entity, p2: number, p3: number): boolean;
/**
 * Hash: 0xF0EED5A6BC7B237A | ApiSet: undefined
 */
export declare function isObjectPartiallyInsideGarage(garageHash: number | string, entity: number | Entity, p2: number): boolean;
/**
 * Hash: 0x8C90FE4B381BA60A | ApiSet: undefined
 */
export declare function isObjectNearPoint(objectHash: number | string, position: Vector3, range: number): boolean;
/**
 * Hash: 0x8B32ACE6326A7546 | ApiSet: undefined
 */
export declare function isObjectVisible(object: any): boolean;
/**
 * Hash: 0x11D1E53A726891FE | ApiSet: undefined
 */
export declare function isPickupWeaponObjectValid(object: any): boolean;
/**
 * An **angled area** is an X-Z oriented rectangle with three parameters:
 * 1.  **origin**: the mid-point along a base edge of the rectangle;
 * 2.  **extent**: the mid-point of opposite base edge on the other Z;
 * 3.  **width**: the length of the base edge; (named derived from logging strings `CNetworkRoadNodeWorldStateData`).
 * The oriented rectangle can then be derived from the direction of the two points (`norm(origin - extent)`), its orthonormal, and the width, e.g:
 * 1.  [golf_mp](https://i.imgur.com/JhsQAK9.png)
 * 2.  [am_taxi](https://i.imgur.com/TJWCZaT.jpg)
 * Hash: 0x2A70BAE8883E4C81 | ApiSet: undefined
 */
export declare function isPointInAngledArea(xPos: number, yPos: number, zPos: number, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, p10: boolean, includez: boolean): boolean;
/**
 * Hash: 0x1761DC5D8471CBAA | ApiSet: undefined
 */
export declare function isPlayerPartiallyInsideGarage(garageHash: number | string, player: number | string | Player, p2: number): boolean;
/**
 * ```
 * is this like setting is as no longer needed?
 * ```
 * Hash: 0xADBE4809F19F927A | ApiSet: undefined
 */
export declare function markObjectForDeletion(object: any): void;
/**
 * Hash: 0x024A60DEB0EA69F0 | ApiSet: undefined
 */
export declare function isPlayerEntirelyInsideGarage(garageHash: number | string, player: number | string | Player, p2: number, p3: number): boolean;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x006E4B040ED37EC3 | ApiSet: undefined
 */
export declare function _0x006E4B040ED37EC3(p0: any): void;
/**
 * Hash: 0x0596843B34B95CE5 | ApiSet: undefined
 */
export declare function _0x0596843B34B95CE5(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x1A6CBB06E2D0D79D | ApiSet: undefined
 */
export declare function _0x1A6CBB06E2D0D79D(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x1C57C94A6446492A | ApiSet: undefined
 */
export declare function _0x1C57C94A6446492A(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x2542269291C6AC84 | ApiSet: undefined
 */
export declare function _0x2542269291C6AC84(p0: any): any;
/**
 * Hash: 0x394CD08E31313C28 | ApiSet: undefined
 */
export declare function _0x394CD08E31313C28(): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x31574B1B41268673 | ApiSet: undefined
 */
export declare function _0x31574B1B41268673(p0: any, p1: any): void;
/**
 * Hash: 0x1E3F1B1B891A2AAA | ApiSet: undefined
 */
export declare function _0x1E3F1B1B891A2AAA(p0: any, p1: any): void;
/**
 * Hash: 0x31F924B53EADDF65 | ApiSet: undefined
 */
export declare function _0x31F924B53EADDF65(p0: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x3BD770D281982DB5 | ApiSet: undefined
 */
export declare function _0x3BD770D281982DB5(p0: any, p1: any): any;
/**
 * ```
 * NativeDB Removed Parameter 3: int R
 * NativeDB Removed Parameter 4: int G
 * NativeDB Removed Parameter 5: int B
 * NativeDB Introduced: v757
 * ```
 * Hash: 0x3B2FD68DB5F8331C | ApiSet: undefined
 */
export declare function _0x3B2FD68DB5F8331C(object: any, toggle: boolean, R: number, G: number, B: number): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x27F248C3FEBFAAD3 | ApiSet: undefined
 */
export declare function _0x27F248C3FEBFAAD3(p0: any, p1: any): void;
/**
 * Hash: 0x46F3ADD1E2D5BAF2 | ApiSet: undefined
 */
export declare function _0x46F3ADD1E2D5BAF2(p0: any, p1: any): void;
/**
 * Hash: 0x39A5FB7EAF150840 | ApiSet: undefined
 */
export declare function _0x39A5FB7EAF150840(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x4C134B4DF76025D0 | ApiSet: undefined
 */
export declare function _0x4C134B4DF76025D0(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * Hash: 0x63ECF581BC70E363 | ApiSet: undefined
 */
export declare function _0x63ECF581BC70E363(p0: any, p1: any): void;
/**
 * Hash: 0x641F272B52E2F0F8 | ApiSet: undefined
 */
export declare function _0x641F272B52E2F0F8(p0: any, p1: any): void;
/**
 * Hash: 0x66A49D021870FE88 | ApiSet: undefined
 */
export declare function _0x66A49D021870FE88(): void;
/**
 * Hash: 0x762DB2D380B48D04 | ApiSet: undefined
 */
export declare function _0x762DB2D380B48D04(p0: any): void;
/**
 * Hash: 0x62454A641B41F3C5 | ApiSet: undefined
 */
export declare function _0x62454A641B41F3C5(p0: any): void;
/**
 * Hash: 0x826D1EE4D1CAFC78 | ApiSet: undefined
 */
export declare function _0x826D1EE4D1CAFC78(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x659F9D71F52843F8 | ApiSet: undefined
 */
export declare function _0x659F9D71F52843F8(p0: any, p1: any): void;
/**
 * Clears the fields sets by [N\_0xc7f29ca00f46350e](#\_0xC7F29CA00F46350E) (1604 retail: 0x1424A7A10, 0x1424A7A11) and iterates over the global CDoor's bucket-list.
 * Related to its "Pre-networked state"?
 * Hash: 0x701FDA1E82076BA4 | ApiSet: undefined
 */
export declare function _0x701FDA1E82076BA4(): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x834344A414C7C85D | ApiSet: undefined
 */
export declare function _0x834344A414C7C85D(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x734E1714D077DA9A | ApiSet: undefined
 */
export declare function _0x734E1714D077DA9A(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x8881C98A31117998 | ApiSet: undefined
 */
export declare function _0x8881C98A31117998(p0: any): void;
/**
 * SET_PICKUP_\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x7813E8B8C4AE4799 | ApiSet: undefined
 */
export declare function _0x7813E8B8C4AE4799(pickup: any): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x8DCA505A5C196F05 | ApiSet: undefined
 */
export declare function _0x8DCA505A5C196F05(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v757
 * ```
 * Hash: 0x8CFF648FBD7330F1 | ApiSet: undefined
 */
export declare function _0x8CFF648FBD7330F1(p0: any): void;
/**
 * Hash: 0x8CAAB2BD3EA58BD4 | ApiSet: undefined
 */
export declare function _0x8CAAB2BD3EA58BD4(p0: any): void;
/**
 * Hash: 0x858EC9FD25DE04AA | ApiSet: undefined
 */
export declare function _0x858EC9FD25DE04AA(p0: any, p1: any): void;
/**
 * Some property related to gates. Native name between `DOOR_SYSTEM_SET_AUTOMATIC_RATE` and `DOOR_SYSTEM_SET_DOOR_STATE`.
 * Hash: 0xA85A21582451E951 | ApiSet: undefined
 */
export declare function _0xA85A21582451E951(doorHash: number | string, p1: boolean): void;
/**
 * ```
 * CLEAR_*
 * ```
 * Hash: 0xA2C1F5E92AFE49ED | ApiSet: undefined
 */
export declare function _0xA2C1F5E92AFE49ED(): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xADF084FB8F075D06 | ApiSet: undefined
 */
export declare function _0xADF084FB8F075D06(p0: any): boolean;
/**
 * Hash: 0xA08FE5E49BDC39DD | ApiSet: undefined
 */
export declare function _0xA08FE5E49BDC39DD(p0: any, p1: number, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xB5B7742424BD4445 | ApiSet: undefined
 */
export declare function _0xB5B7742424BD4445(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0xAA059C615DE9DD03 | ApiSet: undefined
 */
export declare function _0xAA059C615DE9DD03(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xAFE24E4D29249E4A | ApiSet: undefined
 */
export declare function _0xAFE24E4D29249E4A(object: any, p1: number, p2: number, p3: boolean): boolean;
/**
 * ```
 * Clears all areas created by 0xD4A7A435B3710D05
 * CLEAR_*
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xB7C6D80FB371659A | ApiSet: undefined
 */
export declare function _0xB7C6D80FB371659A(): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xBFFE53AE7E67FCDC | ApiSet: undefined
 */
export declare function _0xBFFE53AE7E67FCDC(p0: any, p1: any): void;
/**
 * Hash: 0xB2D0BDE54F0E8E5A | ApiSet: undefined
 */
export declare function _0xB2D0BDE54F0E8E5A(object: any, toggle: boolean): void;
/**
 * Hash: 0xEB6F1A9B5510A5D2 | ApiSet: undefined
 */
export declare function _0xEB6F1A9B5510A5D2(p0: any, p1: boolean): void;
/**
 * Hash: 0xC6033D32241F6FB5 | ApiSet: undefined
 */
export declare function _0xC6033D32241F6FB5(object: any, toggle: boolean): void;
/**
 * See [`N_0x701fda1e82076ba4`](#\_0x701FDA1E82076BA4).
 * Hash: 0xC7F29CA00F46350E | ApiSet: undefined
 */
export declare function _0xC7F29CA00F46350E(p0: boolean): void;
/**
 * Hash: 0x58A850EAEE20FAA3 | ApiSet: undefined
 */
export declare function placeObjectOnGroundProperly(object: any): boolean;
/**
 * ```
 * Adds an area that seems to be related to pickup physics behavior.
 * Max amount of areas is 10. Only works in multiplayer.
 * ADD_*
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xD4A7A435B3710D05 | ApiSet: undefined
 */
export declare function _0xD4A7A435B3710D05(position: Vector3, radius: number): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0xD05A3241B9A86F19 | ApiSet: undefined
 */
export declare function _0xD05A3241B9A86F19(p0: any, p1: any): void;
/**
 * Pickup hashes can be found [here](https://gist.github.com/4mmonium/1eabfb6b3996e3aa6b9525a3eccf8a0b).
 * Hash: 0x27F9D613092159CF | ApiSet: undefined
 */
export declare function removeAllPickupsOfType(pickupHash: number | string): void;
/**
 * Hash: 0xF92099527DB8E2A7 | ApiSet: undefined
 */
export declare function _0xF92099527DB8E2A7(p0: any, p1: any): void;
/**
 * Hash: 0xDB41D07A45A6D4B7 | ApiSet: undefined
 */
export declare function _0xDB41D07A45A6D4B7(p0: any): any;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0xE05F6AEEFEB0BB02 | ApiSet: undefined
 */
export declare function _0xE05F6AEEFEB0BB02(p0: any, p1: any, p2: any): void;
/**
 * Casts a ray downward from the object's position and places the object on the surface it hits (including world surface and objects). Use [`PLACE_OBJECT_ON_GROUND_PROPERLY`](#\_0x58A850EAEE20FAA3) to not include objects when determining the surface.
 * Hash: 0xD76EEEF746057FD6 | ApiSet: undefined
 */
export declare function placeObjectOnGroundOrObjectProperly(object: any): boolean;
/**
 * A\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xFDC07C58E8AAB715 | ApiSet: undefined
 */
export declare function _0xFDC07C58E8AAB715(pickupHash: number | string): void;
/**
 * ```
 * draws circular marker at pos
 * -1 = none
 * 0 = red
 * 1 = green
 * 2 = blue
 * 3 = green larger
 * 4 = nothing
 * 5 = green small
 * ```
 * Hash: 0x3430676B11CDF21D | ApiSet: undefined
 */
export declare function renderFakePickupGlow(position: Vector3, colorIndex: number): void;
/**
 * ```
 * Requires a component_at_*_flsh to be attached to the weapon object
 * ```
 * Hash: 0xBCE595371A5FBAAF | ApiSet: undefined
 */
export declare function setCreateWeaponObjectLightSource(object: any, toggle: boolean): void;
/**
 * CDoor and CDoorSystemData still internally allocated (and their associations between doorHash, modelHash, and coordinates).
 * Only its NetObj removed and flag `*(v2 + 192) |= 8u` (1604 retail) toggled.
 * Hash: 0x464D8E1427156FE4 | ApiSet: undefined
 */
export declare function removeDoorFromSystem(doorHash: number | string): void;
/**
 * Hash: 0x92AEFB5F6E294023 | ApiSet: undefined
 */
export declare function preventCollectionOfPortablePickup(object: any, p1: boolean, p2: boolean): void;
/**
 * Hash: 0x406137F8EF90EAF5 | ApiSet: undefined
 */
export declare function setActivateObjectPhysicsAsSoonAsItIsUnfrozen(object: any, toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xB20834A7DD3D8896 | ApiSet: undefined
 */
export declare function setEnableArenaPropPhysicsOnPed(entity: any, toggle: boolean, p2: number, ped: number | Ped): void;
/**
 * Hash: 0x3288D8ACAECD2AB2 | ApiSet: undefined
 */
export declare function removePickup(pickup: any): void;
/**
 * ```
 * Maximum amount of pickup models that can be disallowed is 30.
 * SET_LOCAL_PLAYER_*
 * ```
 * Hash: 0x88EAEC617CD26926 | ApiSet: undefined
 */
export declare function setLocalPlayerCanUsePickupsWithThisModel(modelHash: number | string, toggle: boolean): void;
/**
 * Hash: 0x4A39DB43E47CF3AA | ApiSet: undefined
 */
export declare function removeObjectHighDetailModel(object: any): void;
/**
 * ```
 * Activate the physics to: "xs_prop_arena_{flipper,wall,bollard,turntable,pit}"
 * ```
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x911024442F4898F0 | ApiSet: undefined
 */
export declare function setEnableArenaPropPhysics(entity: any, toggle: boolean, p2: number): void;
/**
 * Hash: 0xF538081986E49E9D | ApiSet: undefined
 */
export declare function setForceObjectThisFrame(position: Vector3, p3: number): void;
/**
 * Hash: 0x0BF3B3BD47D79C08 | ApiSet: undefined
 */
export declare function setMaxNumPortablePickupsCarriedByPlayer(modelHash: number | string, p1: number): void;
/**
 * ```
 * Overrides the climbing/blocking flags of the object, used in the native scripts mostly for "prop_dock_bouy_*"
 * ```
 * Hash: 0x4D89D607CB3DD1D2 | ApiSet: undefined
 */
export declare function setObjectAllowLowLodBuoyancy(object: any, toggle: boolean): void;
/**
 * Hash: 0x78857FC65CADB909 | ApiSet: undefined
 */
export declare function setLocalPlayerCanCollectPortablePickups(p0: boolean): void;
/**
 * Sets color of embedded light source.
 * Only appears in am_mp_nightclub.c for the nightclub dancefloor.
 * Not sure what p1 does, seems to only ever be '1' in scripts.
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x5F048334B4A4E774 | ApiSet: undefined
 */
export declare function setObjectLightColor(object: any, p1: boolean, r: number, g: number, b: number): any;
/**
 * ```
 * `rage::phArchetypeDamp`
 * p9: Some phBoundGeometry margin value, limited to (0.0, 0.1) exclusive.
 * ```
 * Hash: 0xF6DF6E90DE7DF90F | ApiSet: undefined
 */
export declare function setObjectPhysicsParams(object: any, mass: number, gravityFactor: number, linearC: number, linearV: number, linearV2: number, angularC: number, angularV: number, angularV2: number, p9: number, maxAngSpeed: number, buoyancyFactor: number): void;
/**
 * Hash: 0xDF6CA0330F2E737B | ApiSet: undefined
 */
export declare function setObjectStuntPropDuration(object: any, duration: number): void;
/**
 * Overrides a flag on the object which determines if the object should be avoided by a vehicle in task: CTaskVehicleGoToPointWithAvoidanceAutomobile.
 * Tested on vehicles that were created by the vehicle generators.
 * Hash: 0x77F33F2CCF64B3AA | ApiSet: undefined
 */
export declare function setObjectForceVehiclesToAvoid(object: any, toggle: boolean): void;
/**
 * Hash: 0x8A7391690F5AFD81 | ApiSet: undefined
 */
export declare function setObjectTargettable(object: any, targettable: boolean): void;
/**
 * Hash: 0xB39F03368DB0CAA2 | ApiSet: undefined
 */
export declare function setObjectTargettableByPlayer(object: any, setFlag34: boolean, setFlag35: boolean): void;
/**
 * Sets the intensity of Speed Boost and Slow Down props.
 * The corresponding values for Speed Boosts in the Creator are:\
 * Weak: `15`\
 * Normal: `25`\
 * Strong: `35`\
 * Extra Strong: `45`\
 * Ultra Strong: `100`
 * For Slow Downs:\
 * Weak: `44`\
 * Normal: `30`\
 * Strong: `16`
 * Hash: 0x96EE0EBA0163DF80 | ApiSet: undefined
 */
export declare function setObjectStuntPropSpeedup(object: any, intensity: number): void;
/**
 * ```cpp
 * enum eObjectPaintVariants
 * {
 * Pacific = 0,
 * Azure = 1,
 * Nautical = 2,
 * Continental = 3,
 * Battleship = 4,
 * Intrepid = 5,
 * Uniform = 6,
 * Classico = 7,
 * Mediterranean = 8,
 * Command = 9,
 * Mariner = 10,
 * Ruby = 11,
 * Vintage = 12,
 * Pristine = 13,
 * Merchant = 14,
 * Voyager = 15
 * };
 * ```
 * Hash: 0x971DA0055324D033 | ApiSet: undefined
 */
export declare function setObjectTextureVariation(object: any, textureVariation: number): void;
/**
 * Hash: 0x78015C9B4B3ECC9D | ApiSet: undefined
 */
export declare function setPickupRegenerationTime(pickup: any, duration: number): void;
/**
 * Hash: 0x318516E02DE3ECE2 | ApiSet: undefined
 */
export declare function setPickupGenerationRangeMultiplier(multiplier: number): void;
/**
 * ```
 * Hardcoded to not work in multiplayer.
 * Used to lock/unlock doors to interior areas of the game.
 * (Possible) Door Types:
 * pastebin.com/9S2m3qA4
 * Heading is either 1, 0 or -1 in the scripts. Means default closed(0) or opened either into(1) or out(-1) of the interior.
 * Locked means that the heading is locked.
 * p6 is always 0.
 * 225 door types, model names and coords found in stripclub.c4:
 * pastebin.com/gywnbzsH
 * get door info: pastebin.com/i14rbekD
 * ```
 * Hash: 0xF82D8F1926A02C3D | ApiSet: undefined
 */
export declare function setStateOfClosestDoorOfType(type: number | string, position: Vector3, locked: boolean, heading: number, p6: boolean): void;
/**
 * Hash: 0x3ED2B83AB2E82799 | ApiSet: undefined
 */
export declare function setPickupHiddenWhenUncollectable(p0: any, p1: any): void;
/**
 * Hash: 0x1C1B69FAE509BA97 | ApiSet: undefined
 */
export declare function setPickupUncollectable(p0: any, p1: any): void;
/**
 * ```
 * Defines the state of a destructible object.
 * Use the GET_RAYFIRE_MAP_OBJECT native to find an object's handle with its name / coords.
 * State 2 == object just spawned
 * State 4 == Beginning of the animation
 * State 6 == Start animation
 * State 9 == End of the animation
 * ```
 * Hash: 0x5C29F698D404C5E1 | ApiSet: undefined
 */
export declare function setStateOfRayfireMapObject(object: any, state: number): void;
/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * Hash: 0xABDABF4E1EDECBFA | ApiSet: undefined
 */
export declare function setUnkGlobalBoolRelatedToDamage(value: boolean): void;
/**
 * Hash: 0xF12E33034D887F66 | ApiSet: undefined
 */
export declare function setTextureVariationOfClosestObjectOfType(position: Vector3, radius: number, modelHash: number | string, textureVariation: number): boolean;
/**
 * Hash: 0xB252BC036B525623 | ApiSet: undefined
 */
export declare function trackObjectVisibility(object: any): void;
/**
 * ```
 * Disabling/enabling a player from getting pickups. From the scripts:
 * `OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);`
 * `OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);`
 * `OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 1);`
 * `OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_portable_package}, 0);`
 * `OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 0);`
 * `OBJECT::_616093EC6B139DD9(PLAYER::PLAYER_ID(), ${pickup_armour_standard}, 1);`
 * SET_PLAYER_*
 * ```
 * Hash: 0x616093EC6B139DD9 | ApiSet: undefined
 */
export declare function toggleUsePickupsForPlayer(player: number | string | Player, pickupHash: number | string, toggle: boolean): void;
/**
 * Hash: 0x53E0DF1A2A3CF0CA | ApiSet: undefined
 */
export declare function setTeamPickupObject(object: any, p1: any, p2: boolean): void;
/**
 * ```
 * Returns true if the object has finished moving.
 * If false, moves the object towards the specified X, Y and Z coordinates with the specified X, Y and Z speed.
 * See also: https://gtagmodding.com/opcode-database/opcode/034E/
 * Has to be looped until it returns true.
 * ```
 * Hash: 0x2FDFF4107B8C1147 | ApiSet: undefined
 */
export declare function slideObject(object: any, toX: number, toY: number, toZ: number, speedX: number, speedY: number, speedZ: number, collision: boolean): boolean;
/**
 * Hash: 0x387EAD7EE42F6685 | ApiSet: undefined
 */
export declare function addNavmeshRequiredRegion(x: number, y: number, radius: number): void;
/**
 * Hash: 0x8415D95B194A3AEA | ApiSet: undefined
 */
export declare function areAllNavmeshRegionsLoaded(): boolean;
/**
 * Hash: 0xF7B79A50B905A30D | ApiSet: undefined
 */
export declare function areNodesLoadedForArea(x1: number, y1: number, x2: number, y2: number): boolean;
/**
 * Creates a navmesh blocking object, vehicles will avoid driving through this area.
 * Only 32 blocking objects may exist at a given time and must be manually managed. See [`REMOVE_NAVMESH_BLOCKING_OBJECT`](#\_0x46399A7895957C0E) and [`onResourceStop`](https://docs.fivem.net/docs/scripting-reference/events/list/onResourceStop/)
 * ```cpp
 * enum eBlockingObjectFlags {
 * // Default Flag
 * BLOCKING_OBJECT_DEFAULT = 0,
 * // Blocking object will block wander paths
 * BLOCKING_OBJECT_WANDERPATH = 1,
 * // Blocking object will block (regular) shortest-paths
 * BLOCKING_OBJECT_SHORTESTPATH = 2,
 * // Blocking object will block flee paths
 * BLOCKING_OBJECT_FLEEPATH = 4,
 * // Blocking object will block all paths
 * BLOCKING_OBJECT_ALLPATHS = 7,
 * }
 * ```
 * Hash: 0xFCD5C8E06E502F5A | ApiSet: undefined
 */
export declare function addNavmeshBlockingObject(position: Vector3, width: number, length: number, height: number, heading: number, bPermanent: boolean, flags: number): any;
/**
 * Calculates the travel distance between a set of points.
 * Doesn't seem to correlate with distance on gps sometimes.
 * This function returns the value 100000.0 over long distances, seems to be a failure mode result, potentially occurring when not all path nodes are loaded into pathfind.
 * Hash: 0xADD95C7005C4A197 | ApiSet: undefined
 */
export declare function calculateTravelDistanceBetweenPoints(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
/**
 * Clears a disabled GPS route area from a certain index previously set using [`SET_GPS_DISABLED_ZONE_AT_INDEX`](#\_0xD0BC1C6FB18EE154).
 * Hash: 0x2801D0012266DF07 | ApiSet: undefined
 */
export declare function clearGpsDisabledZoneAtIndex(index: number): void;
/**
 * Same as [`GET_CLOSEST_VEHICLE_NODE`](#\_0x240A18690AE96513), but with the node flag `GCNF_INCLUDE_SWITCHED_OFF_NODES` set.
 * Hash: 0x2EABE3B06F58C1BE | ApiSet: undefined
 */
export declare function getClosestMajorVehicleNode(position: Vector3, zMeasureMult: number, zTolerance: number): [boolean, Vector3];
/**
 * Use this if you want to completely disable a large area of navmesh.
 * For smaller areas, use [`ADD_NAVMESH_BLOCKING_OBJECT`](#\_0xFCD5C8E06E502F5A) instead.
 * Hash: 0x4C8872D8CDBE1B8B | ApiSet: undefined
 */
export declare function disableNavmeshInArea(posMinX: number, posMinY: number, posMinZ: number, posMaxX: number, posMaxY: number, posMaxZ: number, bDisable: boolean): void;
/**
 * ```
 * p3 is 0 in the only game script occurrence (trevor3) but 1 doesn't seem to make a difference
 * distToNxJunction seems to be the distance in metres * 10.0f
 * direction:
 * 0 = This happens randomly during the drive for seemingly no reason but if you consider that this native is only used in trevor3, it seems to mean "Next frame, stop whatever's being said and tell the player the direction."
 * 1 = Route is being calculated or the player is going in the wrong direction
 * 2 = Please Proceed the Highlighted Route
 * 3 = In (distToNxJunction) Turn Left
 * 4 = In (distToNxJunction) Turn Right
 * 5 = In (distToNxJunction) Keep Straight
 * 6 = In (distToNxJunction) Turn Sharply To The Left
 * 7 = In (distToNxJunction) Turn Sharply To The Right
 * 8 = Route is being recalculated or the navmesh is confusing. This happens randomly during the drive but consistently at {2044.0358, 2996.6116, 44.9717} if you face towards the bar and the route needs you to turn right. In that particular case, it could be a bug with how the turn appears to be 270 deg. CCW instead of "right." Either way, this seems to be the engine saying "I don't know the route right now."
 * return value set to 0 always
 * ```
 * Hash: 0xF90125F1F79ECDF8 | ApiSet: undefined
 */
export declare function generateDirectionsToCoord(position: Vector3, p3: boolean): [number, number, number, number];
/**
 * Finds an edge (node connection to another node) that satisfies the specified criteria.
 * Hash: 0x132F52BBA570FE92 | ApiSet: undefined
 */
export declare function getClosestRoad(position: Vector3, minimumEdgeLength: number, minimumLaneCount: number, onlyMajorRoads: boolean): [boolean, Vector3, Vector3, number, number, number];
/**
 * Same as [`GET_CLOSEST_VEHICLE_NODE`](#\_0x240A18690AE96513), but with the node flag `GCNF_GET_HEADING` set, causing the native to also return the heading.
 * Hash: 0xFF071FB798B803B0 | ApiSet: undefined
 */
export declare function getClosestVehicleNodeWithHeading(position: Vector3, nodeFlags: number, zMeasureMult: number, zTolerance: number): [boolean, Vector3, number];
/**
 * Hash: 0x0EAEB0DB4B132399 | ApiSet: undefined
 */
export declare function doesNavmeshBlockingObjectExist(p0: any): boolean;
/**
 * ```
 * Returns CGameWorldHeightMap's minimum Z among all grid nodes that intersect with the specified rectangle.
 * ```
 * Hash: 0x3599D741C9AC6310 | ApiSet: undefined
 */
export declare function getHeightmapBottomZForArea(x1: number, y1: number, x2: number, y2: number): number;
/**
 * ```cpp
 * enum eGetClosestNodeFlags {
 * GCNF_INCLUDE_SWITCHED_OFF_NODES = 1,
 * GCNF_INCLUDE_BOAT_NODES = 2,
 * GCNF_IGNORE_SLIPLANES = 4,
 * GCNF_IGNORE_SWITCHED_OFF_DEADENDS = 8,
 * GCNF_GET_HEADING = 256,
 * GCNF_FAVOUR_FACING = 512
 * }
 * ```
 * Hash: 0x240A18690AE96513 | ApiSet: undefined
 */
export declare function getClosestVehicleNode(position: Vector3, nodeFlags: number, zMeasureMult: number, zTolerance: number): [boolean, Vector3];
/**
 * ```
 * Returns CGameWorldHeightMap's maximum Z among all grid nodes that intersect with the specified rectangle.
 * ```
 * Hash: 0x8ABE8608576D9CE3 | ApiSet: undefined
 */
export declare function getHeightmapTopZForArea(x1: number, y1: number, x2: number, y2: number): number;
/**
 * Hash: 0xBBB45C3CF5C8AA85 | ApiSet: undefined
 */
export declare function getGpsBlipRouteLength(): number;
/**
 * Hash: 0x869DAACBBE9FA006 | ApiSet: undefined
 */
export declare function getGpsBlipRouteFound(): boolean;
/**
 * ```
 * Returns CGameWorldHeightMap's minimum Z value at specified point (grid node).
 * ```
 * Hash: 0x336511A34F2E5185 | ApiSet: undefined
 */
export declare function getHeightmapBottomZForPosition(x: number, y: number): number;
/**
 * Gets the next zone that has been disabled using SET_GPS_DISABLED_ZONE_AT_INDEX.
 * ```
 * NativeDB Removed Parameter 1: int index
 * ```
 * Hash: 0xD3A6A0EF48823A8C | ApiSet: undefined
 */
export declare function getNextGpsDisabledZoneIndex(index: number): number;
/**
 * Same as [`GET_CLOSEST_VEHICLE_NODE`](#\_0x240A18690AE96513), but returns the nth closest node instead of the first.
 * Hash: 0xE50E52416CCF948B | ApiSet: undefined
 */
export declare function getNthClosestVehicleNode(position: Vector3, nthClosest: number, nodeFlags: number, zMeasureMult: number, zTolerance: number): [boolean, Vector3];
/**
 * Hash: 0x6448050E9C2A7207 | ApiSet: undefined
 */
export declare function getNthClosestVehicleNodeIdWithHeading(position: Vector3, nthClosest: number, nodeFlags: number, zMeasureMult: number, zTolerance: number): [number, Vector3, number];
/**
 * Like [`GET_CLOSEST_VEHICLE_NODE_WITH_HEADING`](#\_0xFF071FB798B803B0), but returns the nth closest node instead of the first.
 * Hash: 0x45905BE8654AE067 | ApiSet: undefined
 */
export declare function getNthClosestVehicleNodeFavourDirection(position: Vector3, desiredX: number, desiredY: number, desiredZ: number, nthClosest: number, nodeFlags: number, zMeasureMult: number, zTolerance: number): [boolean, Vector3, number];
/**
 * ```
 * Returns CGameWorldHeightMap's maximum Z value at specified point (grid node).
 * ```
 * Hash: 0x29C24BFBED8AB8FB | ApiSet: undefined
 */
export declare function getHeightmapTopZForPosition(x: number, y: number): number;
/**
 * Hash: 0x01708E8DD3FF8C65 | ApiSet: undefined
 */
export declare function getNumNavmeshesExistingInArea(posMinX: number, posMinY: number, posMinZ: number, posMaxX: number, posMaxY: number, posMaxZ: number): number;
/**
 * Hash: 0x16F46FB18C8009E4 | ApiSet: undefined
 */
export declare function getPointOnRoadSide(position: Vector3, p3: number): [boolean, Vector3];
/**
 * Hash: 0x22D7275A79FE8215 | ApiSet: undefined
 */
export declare function getNthClosestVehicleNodeId(position: Vector3, nthClosest: number, nodeFlags: number, zMeasureMult: number, zTolerance: number): number;
/**
 * Get the nth closest vehicle node with its heading and total lane count. If you need specific forward and backward lane counts use [`GET_CLOSEST_ROAD`](#\_0x132F52BBA570FE92).
 * Hash: 0x80CA6A8B6C094CC4 | ApiSet: undefined
 */
export declare function getNthClosestVehicleNodeWithHeading(position: Vector3, nthClosest: number, nodeFlags: number, zMeasureMult: number, zTolerance: number): [boolean, Vector3, number, number];
/**
 * Hash: 0xA0F8A7517A273C05 | ApiSet: undefined
 */
export declare function getRoadBoundaryUsingHeading(position: Vector3, heading: number): [boolean, Vector3];
/**
 * Native to get a position along current player GPS route using supplied slot.
 * This native was previously named `GET_GPS_WAYPOINT_ROUTE_END`, but its named changed.
 * ```cpp
 * enum eGpsSlotType {
 * GPS_SLOT_WAYPOINT = 0,
 * GPS_SLOT_RADAR_BLIP = 1,
 * GPS_SLOT_DISCRETE = 2
 * }
 * ```
 * Hash: 0xF3162836C28F9DA5 | ApiSet: undefined
 */
export declare function getPosAlongGpsTypeRoute(bStartAtPlayerPos: boolean, fDistanceAlongRoute: number, slotType: number): [boolean, Vector3];
/**
 * Hash: 0x93E0DB8440B73A7D | ApiSet: undefined
 */
export declare function getRandomVehicleNode(position: Vector3, radius: number, p4: boolean, p5: boolean, p6: boolean): [boolean, Vector3, number];
/**
 * ```cpp
 * enum eSafePositionFlags {
 * // Only navmesh polygons marked as pavement
 * GSC_FLAG_ONLY_PAVEMENT = 1,
 * // Only navmesh polygons not marked as "isolated"
 * GSC_FLAG_NOT_ISOLATED = 2,
 * // No navmesh polygons created from interiors
 * GSC_FLAG_NOT_INTERIOR = 4,
 * // No navmesh polygons marked as water
 * GSC_FLAG_NOT_WATER = 8,
 * // Only navmesh polygons marked as "network spawn candidate"
 * GSC_FLAG_ONLY_NETWORK_SPAWN = 16,
 * // Specify whether to use a flood-fill from the starting position, as opposed to scanning all polygons within the search volume
 * GSC_FLAG_USE_FLOOD_FILL = 32
 * }
 * ```
 * Hash: 0xB61C8E878A4199CA | ApiSet: undefined
 */
export declare function getSafeCoordForPed(position: Vector3, onlyOnPavement: boolean, flags: number): [boolean, Vector3];
/**
 * ```
 * Returns false for nodes that aren't used for GPS routes.
 * Example:
 * Nodes in Fort Zancudo and LSIA are false
 * ```
 * Hash: 0xA2AE5C478B96E3B6 | ApiSet: undefined
 */
export declare function getVehicleNodeIsGpsAllowed(nodeID: number): boolean;
/**
 * ```
 * Determines the name of the street which is the closest to the given coordinates.
 * x,y,z - the coordinates of the street
 * streetName - returns a hash to the name of the street the coords are on
 * crossingRoad - if the coordinates are on an intersection, a hash to the name of the crossing road
 * `Note: the names are returned as hashes, the strings can be returned using the function HUD::GET_STREET_NAME_FROM_HASH_KEY.`
 * ```
 * Hash: 0x2EB41072B4C1E4C0 | ApiSet: undefined
 */
export declare function getStreetNameAtCoord(position: Vector3): [number, number];
/**
 * Gets the density and flags of the closest node to the specified position.\
 * Density is a value between 0 and 15, indicating how busy the road is.
 * ```cpp
 * enum eVehicleNodeProperties {
 * OFF_ROAD = 1 << 0,
 * ON_PLAYERS_ROAD =  1 << 1,
 * NO_BIG_VEHICLES = 1 << 2,
 * SWITCHED_OFF = 1 << 3,
 * TUNNEL_OR_INTERIOR = 1 << 4,
 * LEADS_TO_DEAD_END = 1 << 5,
 * HIGHWAY = 1 << 6,
 * JUNCTION = 1 << 7,
 * TRAFFIC_LIGHT = 1 << 8,
 * GIVE_WAY = 1 << 9,
 * WATER = 1 << 10,
 * }
 * ```
 * Hash: 0x0568566ACBB5DEDC | ApiSet: undefined
 */
export declare function getVehicleNodeProperties(position: Vector3): [boolean, number, number];
/**
 * ```
 * Returns true when the node is Offroad. Alleys, some dirt roads, and carparks return true.
 * Normal roads where plenty of Peds spawn will return false
 * ```
 * Hash: 0x4F5070AA58F69279 | ApiSet: undefined
 */
export declare function getVehicleNodeIsSwitchedOff(nodeID: number): boolean;
/**
 * ```
 * Calling this with an invalid node id, will crash the game.
 * Note that IS_VEHICLE_NODE_ID_VALID simply checks if nodeId is not zero. It does not actually ensure that the id is valid.
 * Eg. IS_VEHICLE_NODE_ID_VALID(1) will return true, but will crash when calling GET_VEHICLE_NODE_POSITION().
 * ```
 * Hash: 0x703123E5E7D429C2 | ApiSet: undefined
 */
export declare function getVehicleNodePosition(nodeId: number): Vector3;
/**
 * ```
 * Gets a value indicating whether the specified position is on a road.
 * The vehicle parameter is not implemented (ignored).
 * ```
 * Hash: 0x125BF4ABFC536B09 | ApiSet: undefined
 */
export declare function isPointOnRoad(position: Vector3, vehicle: number | Vehicle): boolean;
/**
 * ```
 * IS_*
 * ```
 * Hash: 0x705A844002B39DC0 | ApiSet: undefined
 */
export declare function isNavmeshRequiredRegionOwnedByAnyThread(): boolean;
/**
 * ```
 * This native has been removed in v1180.
 * ```
 * Hash: 0x80E4A6EDDB0BE8D9 | ApiSet: undefined
 */
export declare function loadAllPathNodes(keepInMemory: boolean): boolean;
/**
 * ```
 * Returns whether navmesh for the region is loaded. The region is a rectangular prism defined by it's top left deepest corner to it's bottom right shallowest corner.
 * If you can re-word this so it makes more sense, please do. I'm horrible with words sometimes...
 * ```
 * Hash: 0xF813C7E63F9062A5 | ApiSet: undefined
 */
export declare function isNavmeshLoadedInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * ```
 * Returns true if the id is non zero.
 * ```
 * Hash: 0x1EAF30FCFBF5AF74 | ApiSet: undefined
 */
export declare function isVehicleNodeIdValid(vehicleNodeId: number): boolean;
/**
 * Hash: 0x916F0A3CDEC3445E | ApiSet: undefined
 */
export declare function removeNavmeshRequiredRegions(): void;
/**
 * Hash: 0x46399A7895957C0E | ApiSet: undefined
 */
export declare function removeNavmeshBlockingObject(p0: any): void;
/**
 * ```
 * Used internally for long range tasks
 * ```
 * Hash: 0x07FB139B592FA687 | ApiSet: undefined
 */
export declare function requestPathsPreferAccurateBoundingstruct(x1: number, y1: number, x2: number, y2: number): boolean;
/**
 * Hash: 0xAA76052DDA9BFC3E | ApiSet: undefined
 */
export declare function _0xAA76052DDA9BFC3E(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
/**
 * Hash: 0x0B919E1FB47CC4E0 | ApiSet: undefined
 */
export declare function setAmbientPedRangeMultiplierThisFrame(multiplier: number): void;
/**
 * Hash: 0xDC20483CD3DD5201 | ApiSet: undefined
 */
export declare function setGpsDisabledZone(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
/**
 * Activates Cayo Perico path nodes if passed `1`. GPS navigation will start working, maybe more stuff will change, not sure. It seems if you try to unload (pass `0`) when close to the island, your game might crash.
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xF74B1FFA4A15FBEA | ApiSet: undefined
 */
export declare function setAiGlobalPathNodesType(type: number): void;
/**
 * Disables the GPS route displayed on the minimap while within a certain zone (area). When in a disabled zone and creating a waypoint, the GPS route is not shown on the minimap until you are outside of the zone. When disabled, the direct distance is shown on minimap opposed to distance to travel. Seems to only work before setting a waypoint.
 * You can clear the disabled zone with CLEAR_GPS_DISABLED_ZONE_AT_INDEX.
 * <strong>Setting a waypoint at the same coordinate:</strong>
 * Disabled Zone: <https://i.imgur.com/P9VUuxM.png>
 * Enabled Zone (normal): <https://i.imgur.com/BPi24aw.png>
 * Hash: 0xD0BC1C6FB18EE154 | ApiSet: undefined
 */
export declare function setGpsDisabledZoneAtIndex(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, index: number): void;
/**
 * Hash: 0x72751156E7678833 | ApiSet: undefined
 */
export declare function setIgnoreNoGpsFlag(toggle: boolean): void;
/**
 * ```
 * See: SET_BLIP_ROUTE
 * ```
 * Hash: 0x1FC289A0C3FF470F | ApiSet: undefined
 */
export declare function setIgnoreSecondaryRouteNodes(toggle: boolean): void;
/**
 * ```
 * Toggles a global boolean, name is probably a hash collision but describes its functionality.
 * ```
 * Hash: 0x228E5C6AD4D74BFD | ApiSet: undefined
 */
export declare function setAllPathsCacheBoundingstruct(toggle: boolean): void;
/**
 * ```
 * NativeDB Added Parameter 8: Any p7
 * ```
 * Hash: 0x34F060F4BF92E018 | ApiSet: undefined
 */
export declare function setPedPathsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, unknown: boolean): void;
/**
 * ```
 * NativeDB Added Parameter 7: Any p6
 * ```
 * Hash: 0xE04B48F2CC926253 | ApiSet: undefined
 */
export declare function setPedPathsBackToOriginal(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
/**
 * unknown3 is related to `SEND_SCRIPT_WORLD_STATE_EVENT > CNetworkRoadNodeWorldStateData` in networked environments.
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * Hash: 0x1A5AA1208AF5DB59 | ApiSet: undefined
 */
export declare function setRoadsInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, unknown1: boolean, unknown2: boolean, unknown3: boolean): void;
/**
 * ```
 * missing a last parameter int p6
 * ```
 * ```
 * NativeDB Added Parameter 7: Any p6
 * ```
 * Hash: 0x1EE7063B80FFC77C | ApiSet: undefined
 */
export declare function setRoadsBackToOriginal(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): void;
/**
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * ```
 * NativeDB Added Parameter 8: Any p7
 * bool p7 - always 1
 * ```
 * Hash: 0x0027501B9F3B407E | ApiSet: undefined
 */
export declare function setRoadsBackToOriginalInAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): void;
/**
 * When this is set to false, all nodes in the area get disabled.
 * `GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns true afterwards.
 * If it's true,
 * `GET_VEHICLE_NODE_IS_SWITCHED_OFF` returns false.
 * Hash: 0xBF1A602B5BA52FEE | ApiSet: undefined
 */
export declare function setRoadsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, nodeEnabled: boolean, unknown2: boolean): void;
/**
 * Hash: 0x109E99373F290687 | ApiSet: undefined
 */
export declare function updateNavmeshBlockingObject(object: any, posX: number, posY: number, posZ: number, scaleX: number, scaleY: number, scaleZ: number, heading: number, flags: number): void;
/**
 * Hash: 0x710311ADF0E20730 | ApiSet: undefined
 */
export declare function activatePhysics(entity: number | Entity): void;
/**
 * Hash: 0xE37F721824571784 | ApiSet: undefined
 */
export declare function applyImpulseToCloth(posX: number, posY: number, posZ: number, vecX: number, vecY: number, vecZ: number, impulse: number): void;
/**
 * ```
 * The position supplied can be anywhere, and the entity should anchor relative to that point from it's origin.
 * ```
 * Hash: 0x4B490A6832559A65 | ApiSet: undefined
 */
export declare function attachRopeToEntity(ropeId: number, entity: number | Entity, position: Vector3, p5: boolean): void;
/**
 * Deletes the rope with the specified handle.
 * You should check if the rope exists before trying to delete it, see [DOES_ROPE_EXIST](#\_0xFD5448BE3111ED96).
 * For an example on how to use this native please refer to [ADD_ROPE](#\_0xE832D760399EB220)
 * Hash: 0x52B4829281364649 | ApiSet: undefined
 */
export declare function deleteRope(ropeId: number): void;
/**
 * Hash: 0xBCF3026912A8647D | ApiSet: undefined
 */
export declare function detachRopeFromEntity(ropeId: number, entity: number | Entity): void;
/**
 * ```
 * Creates a rope at the specific position, that extends in the specified direction when not attached to any entities.
 * __
 * Rope does NOT interact with anything you attach it to, in some cases it make interact with the world AFTER it breaks (seems to occur if you set the type to -1).
 * Rope will sometimes contract and fall to the ground like you'd expect it to, but since it doesn't interact with the world the effect is just jaring.
 * ```
 * There are 8 different rope types in the base game. Full rope data can be found in `ropedata.xml`.
 * ```cpp
 * enum ePhysicsRopeType {
 * RopeThin = 0, // Verticies: 1, Radius: 0.03, Textures: rope & rope_n
 * RopeWire6 = 1, // Verticies: 4, Radius: 0.015, Textures: steel_cable & steel_cable_n
 * RopeWire32 = 2, // Verticies: 32, Radius: 0.025, Textures: steel_cable & steel_cable_n
 * RopeMesh = 3, // Verticies: 6, Radius: 0.03, Textures: rope & rope_n
 * RopeThinWire32 = 4, // Verticies: 32, Radius: 0.01, Textures: rope & rope_n
 * RopeReins = 5, // Verticies: 32, Radius: 0.005, Textures: rope & rope_n
 * RopeThin4 = 6, // Verticies: 4, Radius: 0.03, Textures: rope & rope_n
 * RopeWire64 = 7 // Verticies: 64, Radius: 0.025, Textures: steel_cable & steel_cable_n
 * }
 * ```
 * Hash: 0xE832D760399EB220 | ApiSet: undefined
 */
export declare function addRope(position: Vector3, rotX: number, rotY: number, rotZ: number, maxLength: number, ropeType: number, initLength: number, minLength: number, lengthChangeRate: number, onlyPPU: boolean, collisionOn: boolean, lockFromFront: boolean, timeMultiplier: number, breakable: boolean): [number, any];
/**
 * ```
 * Attaches entity 1 to entity 2.
 * ```
 * Hash: 0x3D95EC8B6D940AC3 | ApiSet: undefined
 */
export declare function attachEntitiesToRope(ropeId: number, ent1: number | Entity, ent2: number | Entity, ent1_x: number, ent1_y: number, ent1_z: number, ent2_x: number, ent2_y: number, ent2_z: number, length: number, p10: boolean, p11: boolean, boneName1: string, boneName2: string): void;
/**
 * Hash: 0xAA5D6B1888E4DB20 | ApiSet: undefined
 */
export declare function deleteChildRope(ropeId: number): void;
/**
 * For an example on how to use this native please refer to [ADD_ROPE](#\_0xE832D760399EB220)
 * Hash: 0xFD5448BE3111ED96 | ApiSet: undefined
 */
export declare function doesRopeExist(): [boolean, number];
/**
 * Hash: 0x2E648D16F6E308F3 | ApiSet: undefined
 */
export declare function breakEntityGlass(entity: number | Entity, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: any, p10: boolean): void;
/**
 * Hash: 0x8214A4B5A7A33612 | ApiSet: undefined
 */
export declare function getCgoffset(entity: number | Entity): Vector3;
/**
 * Return if the rope was generated or not by the script where the native is called.
 * Hash: 0x271C9D3ACA5D6409 | ApiSet: undefined
 */
export declare function doesRopeBelongToThisScript(ropeId: number): boolean;
/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0x8C520A929415BCD2 | ApiSet: undefined
 */
export declare function getDamping(entity: number | Entity, type: number): Vector3;
/**
 * Hash: 0x3655F544CD30F0B5 | ApiSet: undefined
 */
export declare function getRopeVertexCount(ropeId: number): number;
/**
 * ```
 * GET_*
 * ```
 * Hash: 0x0C112765300C7E1E | ApiSet: undefined
 */
export declare function getHasObjectFragInst(object: any): boolean;
/**
 * ```
 * Rope presets can be found in the gamefiles. One example is "ropeFamily3", it is NOT a hash but rather a string.
 * ```
 * Hash: 0xCBB203C04D1ABD27 | ApiSet: undefined
 */
export declare function loadRopeData(ropeId: number, rope_preset: string): void;
/**
 * Hash: 0x21BB0FBD3E217C2D | ApiSet: undefined
 */
export declare function getRopeLastVertexCoord(ropeId: number): Vector3;
/**
 * Hash: 0xEA61CA8E80F09E4D | ApiSet: undefined
 */
export declare function getRopeVertexCoord(ropeId: number, vertex: number): Vector3;
/**
 * ```
 * ROPE_*
 * ```
 * Hash: 0x36CCB9BE67B970FD | ApiSet: undefined
 */
export declare function _0x36CCB9BE67B970FD(ropeId: number, p1: boolean): void;
/**
 * ```
 * SET_*
 * ```
 * Hash: 0x9EBD751E5787BAF2 | ApiSet: undefined
 */
export declare function _0x9EBD751E5787BAF2(p0: boolean): void;
/**
 * Hash: 0x84DE3B5FB3E666F0 | ApiSet: undefined
 */
export declare function _0x84DE3B5FB3E666F0(): [boolean, number];
/**
 * ROPE_\*
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0xA1AE736541B0FCA3 | ApiSet: undefined
 */
export declare function _0xA1AE736541B0FCA3(p1: boolean): number;
/**
 * Hash: 0xB1B6216CA2E7B55E | ApiSet: undefined
 */
export declare function _0xB1B6216CA2E7B55E(p0: any, p1: boolean, p2: boolean): void;
/**
 * ```
 * ROPE_*
 * ```
 * Hash: 0xB743F735C03D7810 | ApiSet: undefined
 */
export declare function _0xB743F735C03D7810(ropeId: number, p1: number): void;
/**
 * Hash: 0x2B320CF14146B69A | ApiSet: undefined
 */
export declare function pinRopeVertex(ropeId: number, vertex: number, position: Vector3): void;
/**
 * ```
 * RESET_*
 * ```
 * Hash: 0xCC6E963682533882 | ApiSet: undefined
 */
export declare function _0xCC6E963682533882(object: any): void;
/**
 * ```
 * Most likely ROPE_ATTACH_*
 * ```
 * Hash: 0xBC0CE682D4D05650 | ApiSet: undefined
 */
export declare function _0xBC0CE682D4D05650(ropeId: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: number, p10: number, p11: number, p12: number, p13: number): void;
/**
 * Hash: 0xF159A63806BB5BA8 | ApiSet: undefined
 */
export declare function ropeDrawShadowEnabled(toggle: boolean): number;
/**
 * Hash: 0x5389D48EFA2F079A | ApiSet: undefined
 */
export declare function ropeConvertToSimple(ropeId: number): void;
/**
 * ```
 * Loads rope textures for all ropes in the current scene.
 * ```
 * Hash: 0x9B9039DBF2D258C1 | ApiSet: undefined
 */
export declare function ropeLoadTextures(): void;
/**
 * Hash: 0x73040398DFF9A4A6 | ApiSet: undefined
 */
export declare function ropeGetDistanceBetweenEnds(ropeId: number): number;
/**
 * Hash: 0xF2D0E6A75CC05597 | ApiSet: undefined
 */
export declare function ropeAreTexturesLoaded(): boolean;
/**
 * Hash: 0xDC57A637A20006ED | ApiSet: undefined
 */
export declare function ropeSetUpdateOrder(ropeId: number, p1: any): void;
/**
 * ```
 * Reset a rope to a certain length.
 * ```
 * Hash: 0xC16DE94D9BEA14A0 | ApiSet: undefined
 */
export declare function ropeResetLength(ropeId: number, length: number): void;
/**
 * ```
 * Unloads rope textures for all ropes in the current scene.
 * ```
 * Hash: 0x6CE36C35C1AC8163 | ApiSet: undefined
 */
export declare function ropeUnloadTextures(): void;
/**
 * ```
 * Forces a rope to a certain length.
 * ```
 * Hash: 0xD009F759A723DB1B | ApiSet: undefined
 */
export declare function ropeForceLength(ropeId: number, length: number): void;
/**
 * Hash: 0xC8D667EE52114ABA | ApiSet: undefined
 */
export declare function ropeSetUpdatePinverts(ropeId: number): void;
/**
 * Hash: 0xD8FA3908D7B86904 | ApiSet: undefined
 */
export declare function setCgoffset(entity: number | Entity, position: Vector3): void;
/**
 * Hash: 0x01BA3AED21C16CFB | ApiSet: undefined
 */
export declare function setDisableFragDamage(object: any, toggle: boolean): void;
/**
 * Hash: 0xBE520D9761FF811F | ApiSet: undefined
 */
export declare function setCgAtBoundcenter(entity: number | Entity): void;
/**
 * Related to the lower-end of a vehicles fTractionCurve, e.g., from standing starts and acceleration from low/zero speeds.
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xAA6A6098851C396F | ApiSet: undefined
 */
export declare function setLaunchControlEnabled(toggle: boolean): void;
/**
 * Hash: 0x15F944730C832252 | ApiSet: undefined
 */
export declare function setEntityProofUnk(entity: number | Entity, toggle: boolean): void;
/**
 * Hash: 0xEEA3B200A6FEB65B | ApiSet: undefined
 */
export declare function setDamping(entity: number | Entity, vertex: number, value: number): void;
/**
 * Hash: 0x5CEC1A84620E7D5B | ApiSet: undefined
 */
export declare function setDisableBreaking(object: any, toggle: boolean): void;
/**
 * Hash: 0x538D1179EC1AA9A9 | ApiSet: undefined
 */
export declare function startRopeUnwindingFront(ropeId: number): void;
/**
 * Hash: 0x4B5AE2EEE4A8F180 | ApiSet: undefined
 */
export declare function unpinRopeVertex(ropeId: number, vertex: number): void;
/**
 * Hash: 0x1461C72C889E343E | ApiSet: undefined
 */
export declare function startRopeWinding(ropeId: number): void;
/**
 * Hash: 0xFFF3A50779EFBBB3 | ApiSet: undefined
 */
export declare function stopRopeUnwindingFront(ropeId: number): void;
/**
 * Hash: 0xCB2D4AB84A19AA7C | ApiSet: undefined
 */
export declare function stopRopeWinding(ropeId: number): void;
/**
 * Checks if you're recording.
 * Hash: 0x1897CA71995A90B4 | ApiSet: undefined
 */
export declare function isRecording(): boolean;
/**
 * This will disable the ability to make camera changes in R\* Editor.
 * Hash: 0xAF66DCEE6609B148 | ApiSet: undefined
 */
export declare function disableRockstarEditorCameraChanges(): void;
/**
 * Hash: 0x293220DA1B46CEBC | ApiSet: undefined
 */
export declare function _0x293220DA1B46CEBC(p0: number, p1: number, p2: number): void;
/**
 * Hash: 0x13B350B8AD0EEE10 | ApiSet: undefined
 */
export declare function _0x13B350B8AD0EEE10(): void;
/**
 * Hash: 0x4282E08174868BE3 | ApiSet: undefined
 */
export declare function _0x4282E08174868BE3(): any;
/**
 * Hash: 0x81CBAE94390F9F89 | ApiSet: undefined
 */
export declare function _0x81CBAE94390F9F89(): void;
/**
 * Hash: 0xF854439EFBB3B583 | ApiSet: undefined
 */
export declare function _0xF854439EFBB3B583(): void;
/**
 * Hash: 0x33D47E85B476ABCD | ApiSet: undefined
 */
export declare function _0x33D47E85B476ABCD(p0: boolean): boolean;
/**
 * Hash: 0x644546EC5287471B | ApiSet: undefined
 */
export declare function saveRecordingClip(): boolean;
/**
 * Starts recording a replay.\
 * If already recording a replay, does nothing.
 * Hash: 0xC3AC2FFF9612AC81 | ApiSet: undefined
 */
export declare function startRecording(mode: number): void;
/**
 * Hash: 0x48621C9FCA3EBD28 | ApiSet: undefined
 */
export declare function _0x48621C9FCA3EBD28(p0: number): void;
/**
 * ```
 * -This function appears to be deprecated/ unused. Tracing the call internally leads to a _nullsub -
 * first one seems to be a string of a mission name, second one seems to be a bool/toggle
 * p1 was always 0.
 * ```
 * Hash: 0x208784099002BC30 | ApiSet: undefined
 */
export declare function _0x208784099002BC30(missionNameLabel: string, p1: any): void;
/**
 * Stops recording and saves the recorded clip.
 * Hash: 0x071A5197D6AFC8B3 | ApiSet: undefined
 */
export declare function stopRecordingAndSaveClip(): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x66972397E0757E7A | ApiSet: undefined
 */
export declare function _0x66972397E0757E7A(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0xDF4B952F7D381B95 | ApiSet: undefined
 */
export declare function _0xDF4B952F7D381B95(): any;
/**
 * Stops recording and discards the recorded clip.
 * Hash: 0x88BB3507ED41A240 | ApiSet: undefined
 */
export declare function stopRecordingAndDiscardClip(): void;
/**
 * Disable recording for this frame only.
 * Hash: 0xEB2D525B57F42B40 | ApiSet: undefined
 */
export declare function stopRecordingThisFrame(): void;
/**
 * Hash: 0xE058175F8EAFE79A | ApiSet: undefined
 */
export declare function _0xE058175F8EAFE79A(p0: boolean): void;
/**
 * ```
 * Returns a bool if interior rendering is disabled, if yes, all "normal" rendered interiors are invisible
 * ```
 * Hash: 0x95AB8B5C992C7B58 | ApiSet: undefined
 */
export declare function isInteriorRenderingDisabled(): boolean;
/**
 * Please note that you will need to call DO_SCREEN_FADE_IN after exiting the Rockstar Editor when you call this.
 * ```
 * NativeDB Added Parameter 1: int p0
 * ```
 * Hash: 0x49DA8145672B2725 | ApiSet: undefined
 */
export declare function activateRockstarEditor(): void;
/**
 * ```
 * Disables some other rendering (internal)
 * ```
 * Hash: 0x5AD3932DAEB1E5D3 | ApiSet: undefined
 */
export declare function _0x5AD3932DAEB1E5D3(): void;
/**
 * ```
 * Sets (almost, not sure) all Rockstar Editor values (bIsRecording etc) to 0.
 * ```
 * Hash: 0x3353D13F09307691 | ApiSet: undefined
 */
export declare function resetEditorValues(): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * ```
 * Something to do with phone cameras.
 * startup.c4:
 * void sub_2a3d() {
 * `UNK2::_7E2BD3EF6C205F09("No_Filter", 1);`
 * `UNK2::_7E2BD3EF6C205F09("phone_cam1", 1);`
 * `UNK2::_7E2BD3EF6C205F09("phone_cam2", 1);`
 * `UNK2::_7E2BD3EF6C205F09("phone_cam3", 1);`
 * `UNK2::_7E2BD3EF6C205F09("phone_cam4", 1);`
 * `UNK2::_7E2BD3EF6C205F09("phone_cam5", 1);`
 * `UNK2::_7E2BD3EF6C205F09("phone_cam6", 1);`
 * `UNK2::_7E2BD3EF6C205F09("phone_cam7", 1);`
 * `UNK2::_7E2BD3EF6C205F09("phone_cam9", 1);`
 * `UNK2::_7E2BD3EF6C205F09("phone_cam12", 0);`
 * }
 * ```
 * Hash: 0x7E2BD3EF6C205F09 | ApiSet: undefined
 */
export declare function _0x7E2BD3EF6C205F09(p0: string, p1: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x84B418E93894AC1C | ApiSet: undefined
 */
export declare function _0x84B418E93894AC1C(): any;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x690B76BD2763E068 | ApiSet: undefined
 */
export declare function _0x690B76BD2763E068(): any;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xE5E9746A66359F9D | ApiSet: undefined
 */
export declare function _0xE5E9746A66359F9D(): any;
/**
 * ```
 * Deletes the given context from the background scripts context map.
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xDC2BACD920D0A0DD | ApiSet: undefined
 */
export declare function bgEndContext(contextName: string): void;
/**
 * ```
 * Hashed version of 0x9D5A25BADB742ACD.
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x75B18E49607874C7 | ApiSet: undefined
 */
export declare function bgStartContextHash(contextHash: number | string): void;
/**
 * ```
 * Hashed version of 0xDC2BACD920D0A0DD.
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x107E5CC7CA942BC1 | ApiSet: undefined
 */
export declare function bgEndContextHash(contextHash: number | string): void;
/**
 * ```
 * Inserts the given context into the background scripts context map.
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x9D5A25BADB742ACD | ApiSet: undefined
 */
export declare function bgStartContext(contextName: string): void;
/**
 * Hash: 0xFC04745FBE67C19A | ApiSet: undefined
 */
export declare function doesScriptExist(scriptName: string): boolean;
/**
 * Hash: 0xF86AA3C56BA31381 | ApiSet: undefined
 */
export declare function doesScriptWithNameHashExist(scriptHash: number | string): boolean;
/**
 * ```
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
 * ```
 * Hash: 0x2902843FCD2B2D79 | ApiSet: undefined
 */
export declare function getEventData(eventGroup: number, eventIndex: number, eventDataSize: number): [boolean, number];
/**
 * Hash: 0xC30338E8088E2E21 | ApiSet: undefined
 */
export declare function getIdOfThisThread(): number;
/**
 * ```
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 * ```
 * Hash: 0xD8F66A3A60C62153 | ApiSet: undefined
 */
export declare function getEventAtIndex(eventGroup: number, eventIndex: number): number;
/**
 * Hash: 0x18C1270EA7F199BC | ApiSet: undefined
 */
export declare function getNoLoadingScreen(): boolean;
/**
 * Hash: 0x8A1C8B1738FFE87E | ApiSet: undefined
 */
export declare function getHashOfThisScriptName(): number;
/**
 * ```
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 * ```
 * Hash: 0x5F92A689A06620AA | ApiSet: undefined
 */
export declare function getNumberOfEvents(eventGroup: number): number;
/**
 * ```
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 * ```
 * Hash: 0x936E6168A9BCEDB5 | ApiSet: undefined
 */
export declare function getEventExists(eventGroup: number, eventIndex: number): boolean;
/**
 * ```
 * Gets the number of instances of the specified script is currently running.
 * Actually returns numRefs - 1.
 * if (program)
 * `v3 = rage::scrProgram::GetNumRefs(program) - 1;`
 * return v3;
 * ```
 * Hash: 0x2C83A9DA6BFFC4F9 | ApiSet: undefined
 */
export declare function getNumberOfReferencesOfScriptWithNameHash(scriptHash: number | string): number;
/**
 * Returns if a script has been loaded into the game. Used to see if a script was loaded after requesting.
 * Hash: 0xE6CC9F3BA0FB9EF1 | ApiSet: undefined
 */
export declare function hasScriptLoaded(scriptName: string): boolean;
/**
 * Hash: 0x5F0F0C783EB16C04 | ApiSet: undefined
 */
export declare function hasScriptWithNameHashLoaded(scriptHash: number | string): boolean;
/**
 * Hash: 0x05A42BA9FC8DA96B | ApiSet: undefined
 */
export declare function getNameOfThread(threadId: number): string;
/**
 * ```
 * Sets bit 1 in GtaThread+0x154
 * BG_*
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x760910B49D2B98EA | ApiSet: undefined
 */
export declare function _0x760910B49D2B98EA(): void;
/**
 * Updates the display of the MP/SP loading buttons, and locks the state so that other options are not displayed or changed. This can only be done once.
 * Hash: 0xB1577667C3708F9B | ApiSet: undefined
 */
export declare function lockLoadingScreenButtons(): void;
/**
 * Hash: 0x442E0A7EDE4A738A | ApiSet: undefined
 */
export declare function getThisScriptName(): string;
/**
 * Hash: 0x46E9AE36D8FA6417 | ApiSet: undefined
 */
export declare function isThreadActive(threadId: number): boolean;
/**
 * ```
 * BG_*
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x22E21FBCFC88C149 | ApiSet: undefined
 */
export declare function _0x22E21FBCFC88C149(scriptIndex: number, p1: string): number;
/**
 * ```
 * Returns true if bit 0 in GtaThread+0x154 is set.
 * BG_*
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x836B62713E0534CA | ApiSet: undefined
 */
export declare function _0x836B62713E0534CA(): boolean;
/**
 * Hash: 0x6EB5F71AA68F2E8E | ApiSet: undefined
 */
export declare function requestScript(scriptName: string): void;
/**
 * ```
 * If the function returns 0, the end of the iteration has been reached.
 * ```
 * Hash: 0x30B4FA1C82DD4B9F | ApiSet: undefined
 */
export declare function scriptThreadIteratorGetNextThreadId(): number;
/**
 * ```
 * BG_*
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x0F6F1EBBC4E1D5E6 | ApiSet: undefined
 */
export declare function _0x0F6F1EBBC4E1D5E6(scriptIndex: number, p1: string): boolean;
/**
 * Hash: 0x5262CC1995D07E09 | ApiSet: undefined
 */
export declare function setNoLoadingScreen(toggle: boolean): void;
/**
 * ```
 * BG_*
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x829CD22E043A2577 | ApiSet: undefined
 */
export declare function _0x829CD22E043A2577(p0: number | string): number;
/**
 * ```
 * formerly _REQUEST_STREAMED_SCRIPT
 * ```
 * Hash: 0xD62A67D26D9653E6 | ApiSet: undefined
 */
export declare function requestScriptWithNameHash(scriptHash: number | string): void;
/**
 * Hash: 0xC5BC038960E9DB27 | ApiSet: undefined
 */
export declare function setScriptWithNameHashAsNoLongerNeeded(scriptHash: number | string): void;
/**
 * Hash: 0x078EBE9809CCD637 | ApiSet: undefined
 */
export declare function shutdownLoadingScreen(): void;
/**
 * Starts a new iteration of the current threads.
 * Call this first, then SCRIPT_THREAD_ITERATOR_GET_NEXT_THREAD_ID (0x30B4FA1C82DD4B9F)
 * Hash: 0xDADFADA5A20143A8 | ApiSet: undefined
 */
export declare function scriptThreadIteratorReset(): void;
/**
 * ```
 * eventGroup: 0 = SCRIPT_EVENT_QUEUE_AI (CEventGroupScriptAI), 1 = SCRIPT_EVENT_QUEUE_NETWORK (CEventGroupScriptNetwork)
 * Note: eventDataSize is NOT the size in bytes, it is the size determined by the SIZE_OF operator (RAGE Script operator, not C/C++ sizeof). That is, the size in bytes divided by 8 (script variables are always 8-byte aligned!).
 * playerBits (also known as playersToBroadcastTo) is a bitset that indicates which players this event should be sent to. In order to send the event to specific players only, use (1 << playerIndex). Set all bits if it should be broadcast to all players.
 * ```
 * Hash: 0x5AE99C571D5BBE5D | ApiSet: undefined
 */
export declare function triggerScriptEvent(eventGroup: number, eventDataSize: number, playerBits: number): number;
/**
 * ```
 * See TRIGGER_SCRIPT_EVENT
 * ```
 * Hash: 0xA40CC53DF8E50837 | ApiSet: undefined
 */
export declare function triggerScriptEvent2(eventGroup: number, eventDataSize: number, playerBits: number): number;
/**
 * Hash: 0xC8B189ED9138BCD4 | ApiSet: undefined
 */
export declare function terminateThread(threadId: number): void;
/**
 * Hash: 0xC90D2DCACD56184C | ApiSet: undefined
 */
export declare function setScriptAsNoLongerNeeded(scriptName: string): void;
/**
 * Hash: 0x1090044AD1DA76FA | ApiSet: undefined
 */
export declare function terminateThisThread(): void;
/**
 * Returns the result of a shape test.
 * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
 * Unless the return value is 2, the other return values are undefined.
 * Hash: 0x3D87450E15D98694 | ApiSet: undefined
 */
export declare function getShapeTestResult(shapeTestHandle: number): [number, boolean, Vector3, Vector3, number];
/**
 * Invalidates the entity handle passed by removing the fwScriptGuid from the entity. This should be used when receiving an
 * ambient entity from shape testing natives, but can also be used for other natives returning an 'irrelevant' entity handle.
 * Hash: 0x2B3334BCA57CD799 | ApiSet: undefined
 */
export declare function releaseScriptGuidFromEntity(entity: number | Entity): void;
/**
 * Returns the result of a shape test, also returning the material of any touched surface.
 * When used with an asynchronous shape test, this native should be looped until returning 0 or 2, after which the handle is invalidated.
 * Unless the return value is 2, the other return values are undefined.
 * Hash: 0x65287525D951F6BE | ApiSet: undefined
 */
export declare function getShapeTestResultIncludingMaterial(shapeTestHandle: number): [number, boolean, Vector3, Vector3, number, number];
/**
 * Does the same as [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E), except blocking until the shape test completes.
 * Use [START_SHAPE_TEST_LOS_PROBE](#\_0x7EE9F5D83DD4F90E) instead. Literally. Rockstar named this correctly: it's expensive, and it's synchronous.
 * Hash: 0x377906D8A31E5586 | ApiSet: undefined
 */
export declare function startExpensiveSynchronousShapeTestLosProbe(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flags: number, entity: number | Entity, p8: number): number;
/**
 * See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E) for flags.
 * Hash: 0x052837721A854EC7 | ApiSet: undefined
 */
export declare function startShapeTestBoundingBox(entity: number | Entity, flags1: number, flags2: number): number;
/**
 * See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E) for flags.
 * Hash: 0x37181417CE7C8900 | ApiSet: undefined
 */
export declare function startShapeTestBound(entity: number | Entity, flags1: number, flags2: number): number;
/**
 * For more information, see [`START_EXPENSIVE_SYNCHRONOUS_SHAPE_TEST_LOS_PROBE`](#\_0x377906D8A31E5586) and [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E).
 * Hash: 0xFE466162C4401D18 | ApiSet: undefined
 */
export declare function startShapeTestBox(position: Vector3, x1: number, y1: number, z1: number, rotX: number, rotY: number, rotZ: number, p9: number, flags: number, entity: number | Entity, p12: number): number;
/**
 * Raycast from point to point, where the ray has a radius.
 * Hash: 0x28579D1B8F8AAC80 | ApiSet: undefined
 */
export declare function startShapeTestCapsule(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entity: number | Entity, p9: number): number;
/**
 * Asynchronously starts a line-of-sight (raycast) world probe shape test.
 * ```cpp
 * enum eTraceFlags
 * {
 * None = 0,
 * IntersectWorld = 1,
 * IntersectVehicles = 2,
 * IntersectPeds = 4,
 * IntersectRagdolls = 8,
 * IntersectObjects = 16,
 * IntersectPickup = 32,
 * IntersectGlass = 64,
 * IntersectRiver = 128,
 * IntersectFoliage = 256,
 * IntersectEverything = 511
 * }
 * ```
 * ```cpp
 * enum eTraceOptionFlags
 * {
 * None = 0,
 * OptionIgnoreGlass = 1,
 * OptionIgnoreSeeThrough = 2,
 * OptionIgnoreNoCollision = 4,
 * OptionDefault = 7
 * }
 * ```
 * NOTE: Raycasts that intersect with mission_entites (flag = 2) has limited range and will not register for far away entites. The range seems to be about 30 metres.
 * Use the handle with [GET_SHAPE_TEST_RESULT](#\_0x3D87450E15D98694) or [GET_SHAPE_TEST_RESULT_INCLUDING_MATERIAL](#\_0x65287525D951F6BE) until it returns 0 or 2.
 * Hash: 0x7EE9F5D83DD4F90E | ApiSet: undefined
 */
export declare function startShapeTestLosProbe(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, traceFlags: number, entity: number | Entity, optionFlags: number): number;
/**
 * Since it is only used in the PC version, likely some mouse-friendly shape test. Uses **in** vector arguments.
 * Asynchronous.
 * ```
 * it returns a ShapeTest handle that can be used with GET_SHAPE_TEST_RESULT.
 * In its only usage in game scripts its called with flag set to 511, entity to player_ped_id and flag2 set to 7
 * ```
 * See [`START_SHAPE_TEST_LOS_PROBE`](#\_0x7EE9F5D83DD4F90E) for flags.
 * Hash: 0xFF6BE494C7987F34 | ApiSet: undefined
 */
export declare function startShapeTestSurroundingCoords(flag: number, entity: number | Entity, flag2: number): [number, Vector3, Vector3];
/**
 * Performs the same type of trace as START_SHAPE_TEST_CAPSULE, but with some different hardcoded parameters.
 * Hash: 0xE6AC6C45FBE83004 | ApiSet: undefined
 */
export declare function startShapeTestSweptSphere(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, radius: number, flags: number, entity: number | Entity, p9: number): number;
/**
 * Hash: 0xBC1CC91205EC8D6E | ApiSet: undefined
 */
export declare function isRockstarMessageReadyForScript(): boolean;
/**
 * Hash: 0x19853B5B17D77BCA | ApiSet: undefined
 */
export declare function _0x19853B5B17D77BCA(p0: any): [boolean, any];
/**
 * Hash: 0x116FB94DC4B79F17 | ApiSet: undefined
 */
export declare function _0x116FB94DC4B79F17(p0: string): void;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x2D874D4AE612A65F | ApiSet: undefined
 */
export declare function _0x2D874D4AE612A65F(): any;
/**
 * Hash: 0x16DA8172459434AA | ApiSet: undefined
 */
export declare function _0x16DA8172459434AA(): any;
/**
 * Hash: 0x225798743970412B | ApiSet: undefined
 */
export declare function _0x225798743970412B(): [boolean, number];
/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x450819D8CF90C416 | ApiSet: undefined
 */
export declare function _0x450819D8CF90C416(): boolean;
/**
 * Hash: 0x07DBD622D9533857 | ApiSet: undefined
 */
export declare function _0x07DBD622D9533857(p0: any): any;
/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: char* p1
 * NativeDB Added Parameter 3: char* p2
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x1D12A56FC95BE92E | ApiSet: undefined
 */
export declare function _0x1D12A56FC95BE92E(): boolean;
/**
 * Hash: 0x44ACA259D67651DB | ApiSet: undefined
 */
export declare function _0x44ACA259D67651DB(p1: any): any;
/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: char* p1
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x33DF47CC0642061B | ApiSet: undefined
 */
export declare function _0x33DF47CC0642061B(): boolean;
/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: float* p1
 * NativeDB Added Parameter 3: char* p2
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x2570E26BE63964E3 | ApiSet: undefined
 */
export declare function _0x2570E26BE63964E3(): boolean;
/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: float* p1
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x50A8A36201DBF83E | ApiSet: undefined
 */
export declare function _0x50A8A36201DBF83E(): boolean;
/**
 * Hash: 0x4737980E8A283806 | ApiSet: undefined
 */
export declare function _0x4737980E8A283806(p0: number): [boolean, any];
/**
 * Hash: 0x3001BEF2FECA3680 | ApiSet: undefined
 */
export declare function _0x3001BEF2FECA3680(): boolean;
/**
 * Hash: 0x4A7D6E727F941747 | ApiSet: undefined
 */
export declare function _0x4A7D6E727F941747(): [any, any];
/**
 * Hash: 0x699E4A5C8C893A18 | ApiSet: undefined
 */
export declare function _0x699E4A5C8C893A18(p0: number, p1: string): [boolean, any];
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x4ED9C8D6DA297639 | ApiSet: undefined
 */
export declare function _0x4ED9C8D6DA297639(): any;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x7FFCBFEE44ECFABF | ApiSet: undefined
 */
export declare function _0x7FFCBFEE44ECFABF(): any;
/**
 * Hash: 0x675721C9F644D161 | ApiSet: undefined
 */
export declare function _0x675721C9F644D161(): void;
/**
 * Hash: 0x487912FD248EFDDF | ApiSet: undefined
 */
export declare function _0x487912FD248EFDDF(p0: any, p1: number): boolean;
/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: char* p1
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x9DE5D2F723575ED0 | ApiSet: undefined
 */
export declare function _0x9DE5D2F723575ED0(): boolean;
/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: int* p1
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x710BCDA8071EDED1 | ApiSet: undefined
 */
export declare function _0x710BCDA8071EDED1(): boolean;
/**
 * Hash: 0x6BFB12CE158E3DD4 | ApiSet: undefined
 */
export declare function _0x6BFB12CE158E3DD4(p0: any): boolean;
/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * NativeDB Added Parameter 2: char* p1
 * NativeDB Added Parameter 3: float* p2
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xC5A35C73B68F3C49 | ApiSet: undefined
 */
export declare function _0xC5A35C73B68F3C49(): boolean;
/**
 * Hash: 0x7DB18CA8CAD5B098 | ApiSet: undefined
 */
export declare function _0x7DB18CA8CAD5B098(): any;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x8A4416C0DB05FA66 | ApiSet: undefined
 */
export declare function _0x8A4416C0DB05FA66(): [boolean, any];
/**
 * Hash: 0x9237E334F6E43156 | ApiSet: undefined
 */
export declare function _0x9237E334F6E43156(p0: any): any;
/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Added Parameter 2: int* p1
 * NativeDB Added Parameter 3: char* p2
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xE75A4A2E5E316D86 | ApiSet: undefined
 */
export declare function _0xE75A4A2E5E316D86(): boolean;
/**
 * Hash: 0x8CC469AB4D349B7C | ApiSet: undefined
 */
export declare function _0x8CC469AB4D349B7C(p0: number, p1: string): [boolean, any];
/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xA468E0BE12B12C70 | ApiSet: undefined
 */
export declare function _0xA468E0BE12B12C70(): boolean;
/**
 * Hash: 0x92DA6E70EF249BD1 | ApiSet: undefined
 */
export declare function _0x92DA6E70EF249BD1(p0: string): [boolean, number];
/**
 * ```
 * NativeDB Added Parameter 1: char* p0
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xC2C97EA97711D1AE | ApiSet: undefined
 */
export declare function _0xC2C97EA97711D1AE(): boolean;
/**
 * Hash: 0xD8122C407663B995 | ApiSet: undefined
 */
export declare function _0xD8122C407663B995(): any;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xEA95C0853A27888E | ApiSet: undefined
 */
export declare function _0xEA95C0853A27888E(): void;
/**
 * Hash: 0xF6BAAAF762E1BF40 | ApiSet: undefined
 */
export declare function _0xF6BAAAF762E1BF40(p0: string): [boolean, number];
/**
 * Hash: 0xF22CA0FD74B80E7A | ApiSet: undefined
 */
export declare function _0xF22CA0FD74B80E7A(p0: any): boolean;
/**
 * Hash: 0xFF8F3A92B75ED67A | ApiSet: undefined
 */
export declare function _0xFF8F3A92B75ED67A(): any;
/**
 * Hash: 0xFE4C1D0D3B9CC17E | ApiSet: undefined
 */
export declare function _0xFE4C1D0D3B9CC17E(p0: any, p1: boolean): boolean;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xE4F6E8D07A2F0F51 | ApiSet: undefined
 */
export declare function _0xE4F6E8D07A2F0F51(p0: any): any;
/**
 * Hash: 0x55DF6DB45179236E | ApiSet: undefined
 */
export declare function scEmailMessageClearRecipList(): void;
/**
 * Hash: 0x040ADDCBAFA1018A | ApiSet: undefined
 */
export declare function scInboxGetEmails(offset: number, limit: number): void;
/**
 * Hash: 0xDF649C4E9AFDD788 | ApiSet: undefined
 */
export declare function rockstarMessageGetString(): string;
/**
 * Hash: 0x2330C12A7A605D16 | ApiSet: undefined
 */
export declare function scEmailMessagePushGamerToRecipList(): number;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xA770C8EEC6FB2AC5 | ApiSet: undefined
 */
export declare function scGamerdataGetFloat(name: string): [boolean, number];
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xC85A7127E7AD02AA | ApiSet: undefined
 */
export declare function scGamerdataGetInt(name: string): [boolean, number];
/**
 * ```
 * sfink: from scripts:
 * `func_720(socialclub::_0x8416FE4E4629D7D7("bIgnoreCheaterOverride"));`
 * `func_719(socialclub::_0x8416FE4E4629D7D7("bIgnoreBadSportOverride"));`
 * ```
 * Hash: 0x8416FE4E4629D7D7 | ApiSet: undefined
 */
export declare function scGamerdataGetBool(name: string): boolean;
/**
 * ```
 * Returns the nickname of the logged-in Rockstar Social Club account.
 * ```
 * Hash: 0x198D161F458ECC7F | ApiSet: undefined
 */
export declare function scGetNickname(): string;
/**
 * ```
 * Same as HAS_ACHIEVEMENT_BEEN_PASSED
 * ```
 * Hash: 0x418DC16FAE452C1C | ApiSet: undefined
 */
export declare function scGetHasAchievementBeenPassed(achievement: number): boolean;
/**
 * Hash: 0xBB8EA16ECBC976C4 | ApiSet: undefined
 */
export declare function scInboxGetMessageTypeAtIndex(msgIndex: number): number;
/**
 * Hash: 0x03A93FF1A2CA0864 | ApiSet: undefined
 */
export declare function scInboxGetTotalNumMessages(): number;
/**
 * Hash: 0x93028F1DB42BFD08 | ApiSet: undefined
 */
export declare function scInboxGetMessageIsReadAtIndex(msgIndex: number): boolean;
/**
 * Hash: 0x87E0052F08BD64E6 | ApiSet: undefined
 */
export declare function scInboxMessageGetBountyData(index: number): [boolean, number];
/**
 * Hash: 0xA00EFE4082C4056E | ApiSet: undefined
 */
export declare function scInboxMessageGetDataInt(p0: number, context: string): [boolean, number];
/**
 * Hash: 0xFFE5C16F402D851D | ApiSet: undefined
 */
export declare function scInboxMessageGetDataBool(p0: number, p1: string): boolean;
/**
 * Hash: 0xF3E31D16CBDCB304 | ApiSet: undefined
 */
export declare function scInboxMessageGetString(p0: number): string;
/**
 * Hash: 0x9A2C8064B6C1E41A | ApiSet: undefined
 */
export declare function scInboxMessageDoApply(p0: number): boolean;
/**
 * Hash: 0x2C015348CF19CA1D | ApiSet: undefined
 */
export declare function scInboxMessagePop(p0: number): boolean;
/**
 * Hash: 0x7572EF42FC6A9B6D | ApiSet: undefined
 */
export declare function scInboxMessageGetDataString(p0: number, context: string, out: string): boolean;
/**
 * Hash: 0xA68D3D229F4F3B06 | ApiSet: undefined
 */
export declare function scInboxMessageSendUgcStatUpdateEvent(data: string): void;
/**
 * Social Club native to add license plate for the user
 * Hash: 0x1989C6E6F67E76A8 | ApiSet: undefined
 */
export declare function scLicenseplateAdd(plateText: string, plateData: string): [boolean, number];
/**
 * Hash: 0xDA024BDBD600F44A | ApiSet: undefined
 */
export declare function scInboxMessagePushGamerToEventRecipList(): number;
/**
 * Hash: 0x69D82604A1A5A254 | ApiSet: undefined
 */
export declare function scInboxMessageGetUgcdata(p0: any): [boolean, any];
/**
 * Gets number of plates in the response of the get license plates request.
 * Range: \[0, count) can be used as second argument to \_0x1D4446A62D35B0D0 and \_0x2E89990DDFF670C3
 * Hash: 0x700569DBA175A77C | ApiSet: undefined
 */
export declare function scLicenseplateGetCount(token: number): number;
/**
 * Checks if the "is valid license plate" request is still pending.
 * Hash: 0xD302E99EDF0449CF | ApiSet: undefined
 */
export declare function scLicenseplateGetIsvalidIsPending(token: number): boolean;
/**
 * Returns true if the add license plate text request is still pending.
 * Hash: 0x07C61676E5BB52CD | ApiSet: undefined
 */
export declare function scLicenseplateGetAddIsPending(token: number): boolean;
/**
 * Changes the license plate for the user (no insert).
 * Hash: 0xD0EE05FE193646EA | ApiSet: undefined
 */
export declare function scLicenseplateSetPlateData(oldPlateText: string, newPlateText: string, plateData: string): boolean;
/**
 * SC native to start a request for if license plate text is valid
 * Hash: 0x0F73393BAC7E6730 | ApiSet: undefined
 */
export declare function scLicenseplateIsvalid(plateText: string): [boolean, number];
/**
 * Hash: 0x6AFD2CD753FEEF83 | ApiSet: undefined
 */
export declare function scInboxMessageSendBountyPresenceEvent(data: string): boolean;
/**
 * Gets license plate text related to the get license plate info request
 * Hash: 0x1D4446A62D35B0D0 | ApiSet: undefined
 */
export declare function scLicenseplateGetPlate(token: number, plateIndex: number): string;
/**
 * ```
 * NativeDB Introduced: v323
 * NativeDB Added Parameter 1: Hash attrHash
 * NativeDB Added Parameter 2: float value
 * ```
 * Hash: 0xC4C4575F62534A24 | ApiSet: undefined
 */
export declare function scPresenceAttrSetFloat(): boolean;
/**
 * Returns a status for adding the license plate
 * Hash: 0x8147FFF6A718E1AD | ApiSet: undefined
 */
export declare function scLicenseplateGetAddStatus(token: number): number;
/**
 * Hash: 0x1F1E9682483697C7 | ApiSet: undefined
 */
export declare function scPresenceAttrSetInt(attrHash: number | string, value: number): boolean;
/**
 * Gets the status of the is valid license plate request
 * Hash: 0x5C4EBFFA98BDB41C | ApiSet: undefined
 */
export declare function scLicenseplateGetIsvalidStatus(token: number): number;
/**
 * Hash: 0x1753344C770358AE | ApiSet: undefined
 */
export declare function scProfanityGetCheckIsValid(token: number): boolean;
/**
 * Gets license plate data related to the get license plate info request
 * Hash: 0x2E89990DDFF670C3 | ApiSet: undefined
 */
export declare function scLicenseplateGetPlateData(token: number, plateIndex: number): string;
/**
 * Hash: 0x82E4A58BABC15AE7 | ApiSet: undefined
 */
export declare function scProfanityGetCheckIsPending(token: number): boolean;
/**
 * Starts a task to check an entered string for profanity on the ROS/Social Club services.
 * See also: [`SC_PROFANITY_GET_CHECK_IS_VALID`](#\_0x1753344C770358AE) and [`SC_PROFANITY_GET_CHECK_IS_PENDING`](#\_0x82E4A58BABC15AE7).
 * Hash: 0x75632C5ECD7ED843 | ApiSet: undefined
 */
export declare function scProfanityCheckString(string: string): [boolean, number];
/**
 * Hash: 0xBFA0A56A817C6C7D | ApiSet: undefined
 */
export declare function setHandleRockstarMessageViaScript(toggle: boolean): void;
/**
 * Hash: 0x287F1F75D2803595 | ApiSet: undefined
 */
export declare function scPresenceAttrSetString(attrHash: number | string, value: string): boolean;
/**
 * Hash: 0x85535ACF97FC0969 | ApiSet: undefined
 */
export declare function scProfanityGetStringPassed(token: number): boolean;
/**
 * Hash: 0xEB2BF817463DFA28 | ApiSet: undefined
 */
export declare function scProfanityCheckUgcString(string: string): [boolean, number];
/**
 * Hash: 0x930DE22F07B1CCE3 | ApiSet: undefined
 */
export declare function scProfanityGetStringStatus(token: number): number;
/**
 * Hash: 0xAFAF86043E5874E9 | ApiSet: undefined
 */
export declare function arePlayerFlashingStarsAboutToDrop(player: number | string | Player): boolean;
/**
 * Hash: 0x8621390F0CDCFE1F | ApiSet: undefined
 */
export declare function assistedMovementFlushRoute(): void;
/**
 * Hash: 0xDE7465A27D403C06 | ApiSet: undefined
 */
export declare function canPlayerStartMission(player: number | string | Player): boolean;
/**
 * Hash: 0x0A6EB355EE14A2DB | ApiSet: undefined
 */
export declare function arePlayerStarsGreyedOut(player: number | string | Player): boolean;
/**
 * Hash: 0xAEBF081FFC0A0E5E | ApiSet: undefined
 */
export declare function assistedMovementCloseRoute(): void;
/**
 * Hash: 0xF0B67A4DE6AB5F98 | ApiSet: undefined
 */
export declare function clearPlayerHasDamagedAtLeastOnePed(player: number | string | Player): void;
/**
 * Hash: 0xF297383AA91DCA29 | ApiSet: undefined
 */
export declare function canPedHearPlayer(player: number | string | Player, ped: number | Ped): boolean;
/**
 * Hash: 0x10C54E4389C12B42 | ApiSet: undefined
 */
export declare function clearPlayerParachutePackModelOverride(player: number | string | Player): void;
/**
 * Hash: 0x048189FAC643DEEE | ApiSet: undefined
 */
export declare function changePlayerPed(player: number | string | Player, ped: number | Ped, b2: boolean, resetDamage: boolean): void;
/**
 * ```
 * `This executes at the same as speed as PLAYER::SET_PLAYER_WANTED_LEVEL(player, 0, false);`
 * `PLAYER::GET_PLAYER_WANTED_LEVEL(player); executes in less than half the time. Which means that it's worth first checking if the wanted level needs to be cleared before clearing. However, this is mostly about good code practice and can important in other situations. The difference in time in this example is negligible.`
 * ```
 * Hash: 0xB302540597885499 | ApiSet: undefined
 */
export declare function clearPlayerWantedLevel(player: number | string | Player): void;
/**
 * Hash: 0x4AACB96203D11A31 | ApiSet: undefined
 */
export declare function clearPlayerHasDamagedAtLeastOneNonAnimalPed(player: number | string | Player): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x290D248E25815AE8 | ApiSet: undefined
 */
export declare function clearPlayerReserveParachuteModelOverride(player: number | string | Player): void;
/**
 * Disables vehicle rewards for the current frame.
 * Hash: 0xC142BE3BB9CE125F | ApiSet: undefined
 */
export declare function disablePlayerVehicleRewards(player: number | string | Player): void;
/**
 * Hash: 0x8753997EB5F6EE3F | ApiSet: undefined
 */
export declare function clearPlayerParachuteModelOverride(player: number | string | Player): void;
/**
 * Hash: 0x0F4CC924CF8C7B21 | ApiSet: undefined
 */
export declare function clearPlayerParachuteVariationOverride(player: number | string | Player): void;
/**
 * Inhibits the player from using any method of combat including melee and firearms.\
 * NOTE: Only disables the firing for one frame
 * Hash: 0x5E6CC07646BBEAB8 | ApiSet: undefined
 */
export declare function disablePlayerFiring(player: number | string | Player, toggle: boolean): void;
/**
 * ```
 * Purpose of the BOOL currently unknown.
 * Both, true and false, work
 * ```
 * Hash: 0x94DD7888C10A979E | ApiSet: undefined
 */
export declare function displaySystemSigninUi(unk: boolean): void;
/**
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * Hash: 0x181EC197DAEFE121 | ApiSet: undefined
 */
export declare function enableSpecialAbility(player: number | string | Player, toggle: boolean): void;
/**
 * ```
 * used with 1,2,8,64,128 in the scripts
 * ```
 * Hash: 0xBC8983F38F78ED51 | ApiSet: undefined
 */
export declare function forceCleanup(cleanupFlags: number): void;
/**
 * Hash: 0xF745B37630DF176B | ApiSet: undefined
 */
export declare function forceCleanupForThreadWithThisId(id: number, cleanupFlags: number): void;
/**
 * ```
 * `PLAYER::FORCE_CLEANUP_FOR_ALL_THREADS_WITH_THIS_NAME("pb_prostitute", 1); // Found in decompilation`
 * ```
 * Hash: 0x4C68DDDDF0097317 | ApiSet: undefined
 */
export declare function forceCleanupForAllThreadsWithThisName(name: string, cleanupFlags: number): void;
/**
 * ```
 * Appears only 3 times in the scripts, more specifically in michael1.ysc
 * -
 * This can be used to prevent dying if you are "out of the world"
 * ```
 * Hash: 0x5006D96C995A5827 | ApiSet: undefined
 */
export declare function extendWorldBoundaryForPlayer(position: Vector3): void;
/**
 * Hash: 0x5FC472C501CCADB3 | ApiSet: undefined
 */
export declare function getIsPlayerDrivingOnHighway(playerId: number | string | Player): boolean;
/**
 * Hash: 0x9A41CF4674A12272 | ApiSet: undefined
 */
export declare function getCauseOfMostRecentForceCleanup(): number;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x1FC200409F10E6F1 | ApiSet: undefined
 */
export declare function getNumberOfPlayersInTeam(team: number): number;
/**
 * ```
 * Returns TRUE if it found an entity in your crosshair within range of your weapon. Assigns the handle of the target to the *entity that you pass it.
 * Returns false if no entity found.
 * ```
 * Hash: 0x2975C866E6713290 | ApiSet: undefined
 */
export declare function getEntityPlayerIsFreeAimingAt(player: number | string | Player): [boolean, number];
/**
 * ```
 * For Steam.
 * Always returns 0 in retail version of the game.
 * ```
 * Hash: 0x1C186837D0619335 | ApiSet: undefined
 */
export declare function getAchievementProgress(achievement: number): number;
/**
 * ```
 * Gets the number of players in the current session.
 * If not multiplayer, always returns 1.
 * ```
 * Hash: 0x407C7F91DDB46C16 | ApiSet: undefined
 */
export declare function getNumberOfPlayers(): number;
/**
 * ```
 * Gets the maximum wanted level the player can get.
 * Ranges from 0 to 5.
 * ```
 * Hash: 0x462E0DB9B137DC5F | ApiSet: undefined
 */
export declare function getMaxWantedLevel(): number;
/**
 * Hash: 0x2F395D61F3A1F877 | ApiSet: undefined
 */
export declare function getPlayerCurrentStealthNoise(player: number | string | Player): number;
/**
 * Hash: 0x56105E599CAB0EFA | ApiSet: undefined
 */
export declare function getPlayerFakeWantedLevel(player: number | string | Player): number;
/**
 * ```
 * Returns the group ID the player is member of.
 * ```
 * Hash: 0x0D127585F77030AF | ApiSet: undefined
 */
export declare function getPlayerGroup(player: number | string | Player): number;
/**
 * ```
 * Returns the same as PLAYER_ID and NETWORK_PLAYER_ID_TO_INT
 * ```
 * Hash: 0xA5EDC40EF369B48D | ApiSet: undefined
 */
export declare function getPlayerIndex(): number | string;
/**
 * Hash: 0x5DDFE2FF727F3CA3 | ApiSet: undefined
 */
export declare function getPlayerHasReserveParachute(player: number | string | Player): boolean;
/**
 * Hash: 0x8BC515BAE4AAF8FF | ApiSet: undefined
 */
export declare function getPlayerHealthRechargeLimit(player: number | string | Player): number;
/**
 * ```
 * Returns the Player's Invincible status.
 * This function will always return false if 0x733A643B5B0C53C1 is used to set the invincibility status. To always get the correct result, use this:
 * bool IsPlayerInvincible(Player player)
 * {
 * auto addr = getScriptHandleBaseAddress(GET_PLAYER_PED(player));
 * if (addr)
 * {
 * DWORD flag = *(DWORD *)(addr + 0x188);
 * return ((flag & (1 << 8)) != 0) || ((flag & (1 << 9)) != 0);
 * }
 * return false;
 * }
 * ============================================================
 * This has bothered me for too long, whoever may come across this, where did anyone ever come up with this made up hash? 0x733A643B5B0C53C1 I've looked all over old hash list, and this nativedb I can not find that PC hash anywhere. What native name is it now or was it?
 * ```
 * Hash: 0xB721981B2B939E07 | ApiSet: undefined
 */
export declare function getPlayerInvincible(player: number | string | Player): boolean;
/**
 * Hash: 0x92659B4CE1863CB3 | ApiSet: undefined
 */
export declare function getPlayerMaxArmour(player: number | string | Player): number;
/**
 * Returns the players name from a specified player index
 * Hash: 0x6D0DE6A7B5DA71F8 | ApiSet: undefined
 */
export declare function getPlayerName(player: number | string | Player): string;
/**
 * Hash: 0x6E9C742F340CE5A2 | ApiSet: undefined
 */
export declare function getPlayerParachutePackTintIndex(player: number | string | Player): number;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xC219887CA3E65C41 | ApiSet: undefined
 */
export declare function getPlayerParachuteModelOverride(player: number | string | Player): number;
/**
 * ```
 * Tints:
 * None = -1,
 * Rainbow = 0,
 * Red = 1,
 * SeasideStripes = 2,
 * WidowMaker = 3,
 * Patriot = 4,
 * Blue = 5,
 * Black = 6,
 * Hornet = 7,
 * AirFocce = 8,
 * Desert = 9,
 * Shadow = 10,
 * HighAltitude = 11,
 * Airbone = 12,
 * Sunrise = 13,
 * ```
 * Hash: 0x75D3F7A1B0D9B145 | ApiSet: undefined
 */
export declare function getPlayerParachuteTintIndex(player: number | string | Player): number;
/**
 * Gets the ped for a specified player index.
 * Hash: 0x43A66C31C68491C0 | ApiSet: undefined
 */
export declare function getPlayerPed(playerId: number | string | Player): number;
/**
 * Hash: 0xEF56DBABD3CD4887 | ApiSet: undefined
 */
export declare function getPlayerParachuteSmokeTrailColor(player: number | string | Player): [number, number, number];
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x37FAAA68DCA9D08D | ApiSet: undefined
 */
export declare function getPlayerReserveParachuteModelOverride(player: number | string | Player): number;
/**
 * ```
 * `Does the same like PLAYER::GET_PLAYER_PED`
 * ```
 * Hash: 0x50FAC3A3E030A6E1 | ApiSet: undefined
 */
export declare function getPlayerPedScriptIndex(player: number | string | Player): number;
/**
 * Hash: 0x3F9F16F8E65A7ED7 | ApiSet: undefined
 */
export declare function getPlayerSprintStaminaRemaining(player: number | string | Player): number;
/**
 * ```
 * Tints:
 * None = -1,
 * Rainbow = 0,
 * Red = 1,
 * SeasideStripes = 2,
 * WidowMaker = 3,
 * Patriot = 4,
 * Blue = 5,
 * Black = 6,
 * Hornet = 7,
 * AirFocce = 8,
 * Desert = 9,
 * Shadow = 10,
 * HighAltitude = 11,
 * Airbone = 12,
 * Sunrise = 13,
 * ```
 * Hash: 0xD5A016BC3C09CF40 | ApiSet: undefined
 */
export declare function getPlayerReserveParachuteTintIndex(player: number | string | Player): number;
/**
 * Hash: 0xE902EF951DCE178F | ApiSet: undefined
 */
export declare function getPlayerRgbColour(player: number | string | Player): [number, number, number];
/**
 * Hash: 0xA1FCF8E6AF40B731 | ApiSet: undefined
 */
export declare function getPlayerUnderwaterTimeRemaining(player: number | string | Player): number;
/**
 * Hash: 0x1885BC9B108B4C99 | ApiSet: undefined
 */
export declare function getPlayerSprintTimeRemaining(player: number | string | Player): number;
/**
 * Hash: 0xE28E54788CE8F12D | ApiSet: undefined
 */
export declare function getPlayerWantedLevel(player: number | string | Player): number;
/**
 * ```
 * Returns the time since the character was arrested in (ms) milliseconds.
 * example
 * var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_ARREST();
 * UI.DrawSubtitle(time.ToString());
 * if player has not been arrested, the int returned will be -1.
 * ```
 * Hash: 0x5063F92F07C2A316 | ApiSet: undefined
 */
export declare function getTimeSinceLastArrest(): number;
/**
 * ```
 * Gets the player's team.
 * Does nothing in singleplayer.
 * ```
 * Hash: 0x37039302F4E0A008 | ApiSet: undefined
 */
export declare function getPlayerTeam(player: number | string | Player): number;
/**
 * ```
 * Assigns the handle of locked-on melee target to *entity that you pass it.
 * Returns false if no entity found.
 * ```
 * Hash: 0x13EDE1A5DBF797C9 | ApiSet: undefined
 */
export declare function getPlayerTargetEntity(player: number | string | Player): [boolean, number];
/**
 * ```
 * Returns the time since the character died in (ms) milliseconds.
 * example
 * var time = Function.call<int>(Hash.GET_TIME_SINCE_LAST_DEATH();
 * UI.DrawSubtitle(time.ToString());
 * if player has not died, the int returned will be -1.
 * ```
 * Hash: 0xC7034807558DDFCA | ApiSet: undefined
 */
export declare function getTimeSinceLastDeath(): number;
/**
 * ### Warning
 * This native will return `0` if the last vehicle the player was in was destroyed.
 * ### Alternative
 * You can use [GET_VEHICLE_PED_IS_IN](#\_0x9A9112A0FE9A4713), which will actually get the last vehicle, even if it was destroyed.
 * Hash: 0xB6997A7EB3F5C8C0 | ApiSet: undefined
 */
export declare function getPlayersLastVehicle(): number;
/**
 * Hash: 0x0C92BA89F1AF26F8 | ApiSet: undefined
 */
export declare function getPlayerWantedCentrePosition(player: number | string | Player): Vector3;
/**
 * Hash: 0x5D35ECF3A81A0EE0 | ApiSet: undefined
 */
export declare function getTimeSincePlayerHitVehicle(player: number | string | Player): number;
/**
 * Hash: 0xDB89591E290D9182 | ApiSet: undefined
 */
export declare function getTimeSincePlayerDroveAgainstTraffic(player: number | string | Player): number;
/**
 * Hash: 0xD559D2BE9E37853B | ApiSet: undefined
 */
export declare function getTimeSincePlayerDroveOnPavement(player: number | string | Player): number;
/**
 * ```
 * Drft
 * ```
 * Hash: 0xFDD179EAF45B556C | ApiSet: undefined
 */
export declare function getWantedLevelThreshold(wantedLevel: number): number;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xA72200F51875FEA4 | ApiSet: undefined
 */
export declare function getWantedLevelParoleDuration(): number;
/**
 * Hash: 0xE36A25322DC35F42 | ApiSet: undefined
 */
export declare function getTimeSincePlayerHitPed(player: number | string | Player): number;
/**
 * Hash: 0x867365E111A3B6EB | ApiSet: undefined
 */
export declare function hasAchievementBeenPassed(achievement: number): boolean;
/**
 * ```
 * Remnant from GTA IV. Does nothing in GTA V.
 * ```
 * Hash: 0x085DEB493BE80812 | ApiSet: undefined
 */
export declare function getWantedLevelRadius(player: number | string | Player): number;
/**
 * Hash: 0x3C49C870E66F0A28 | ApiSet: undefined
 */
export declare function givePlayerRagdollControl(player: number | string | Player, toggle: boolean): void;
/**
 * ```
 * Achievements from 0-57
 * more achievements came with update 1.29 (freemode events update), I'd say that they now go to 60, but I'll need to check.
 * ```
 * Hash: 0xBEC7076D64130195 | ApiSet: undefined
 */
export declare function giveAchievementToPlayer(achievement: number): boolean;
/**
 * Hash: 0xBC0753C9CA14B506 | ApiSet: undefined
 */
export declare function hasPlayerBeenShotByCop(player: number | string | Player, ms: number, p2: boolean): boolean;
/**
 * Hash: 0x20CE80B0C2BF4ACC | ApiSet: undefined
 */
export declare function hasPlayerDamagedAtLeastOnePed(player: number | string | Player): boolean;
/**
 * Hash: 0xE4B90F367BD81752 | ApiSet: undefined
 */
export declare function hasPlayerDamagedAtLeastOneNonAnimalPed(player: number | string | Player): boolean;
/**
 * Hash: 0xC968670BFACE42D9 | ApiSet: undefined
 */
export declare function hasForceCleanupOccurred(cleanupFlags: number): boolean;
/**
 * ```
 * Returns true if an unk value is greater than 0.0f
 * ```
 * Hash: 0x38D28DA81E4E9BF9 | ApiSet: undefined
 */
export declare function isPlayerBattleAware(player: number | string | Player): boolean;
/**
 * Hash: 0xD55DDFB47991A294 | ApiSet: undefined
 */
export declare function hasPlayerLeftTheWorld(player: number | string | Player): boolean;
/**
 * ```
 * Returns true when the player is not able to control the cam i.e. when running a benchmark test, switching the player or viewing a cutscene.
 * Note: I am not 100% sure if the native actually checks if the cam control is disabled but it seems promising.
 * ```
 * Hash: 0x7C814D2FB49F40C0 | ApiSet: undefined
 */
export declare function isPlayerCamControlDisabled(): boolean;
/**
 * Hash: 0xD705740BB0A1CF4C | ApiSet: undefined
 */
export declare function hasPlayerBeenSpottedInStolenVehicle(player: number | string | Player): boolean;
/**
 * ```
 * Returns TRUE if the player ('s ped) is climbing at the moment.
 * ```
 * Hash: 0x95E8F73DC65EFB9C | ApiSet: undefined
 */
export declare function isPlayerClimbing(player: number | string | Player): boolean;
/**
 * ```
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 * --------------------------------------------------------
 * `if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::INT_TO_PARTICIPANTINDEX(i)))`
 * ```
 * Hash: 0x9EC6603812C24710 | ApiSet: undefined
 */
export declare function intToParticipantindex(value: number): number;
/**
 * ```
 * Return true while player is being arrested / busted.
 * If atArresting is set to 1, this function will return 1 when player is being arrested (while player is putting his hand up, but still have control)
 * If atArresting is set to 0, this function will return 1 only when the busted screen is shown.
 * ```
 * Hash: 0x388A47C51ABDAC8E | ApiSet: undefined
 */
export declare function isPlayerBeingArrested(player: number | string | Player, atArresting: boolean): boolean;
/**
 * ```
 * Simply returns whatever is passed to it (Regardless of whether the handle is valid or not).
 * ```
 * Hash: 0x41BD2A6B006AF756 | ApiSet: undefined
 */
export declare function intToPlayerindex(value: number): number | string;
/**
 * Hash: 0x424D4687FA1E5652 | ApiSet: undefined
 */
export declare function isPlayerDead(player: number | string | Player): boolean;
/**
 * Hash: 0x65FAEE425DE637B0 | ApiSet: undefined
 */
export declare function isPlayerBluetoothEnable(player: number | string | Player): boolean;
/**
 * ```cpp
 * enum eViolationType {
 * // Checks if the player is driving on pedestrians walk ways
 * VT_PAVED_PEDESTRIAN_AREAS = 0,
 * // Checks if the player is running through red lights
 * // This takes some time to return true.
 * VT_RUNNING_REDS = 1,
 * // checks if the player is driving on the wrong side of the road
 * VT_AGAINST_TRAFFIC = 2
 * };
 * ```
 * Used solely in "Al Di Napoli" with type 2 for a voiceline.
 * Hash: 0xF10B44FD479D69F3 | ApiSet: undefined
 */
export declare function isPlayerDrivingDangerously(player: number | string | Player, type: number): boolean;
/**
 * ```
 * Can the player control himself, used to disable controls for player for things like a cutscene.
 * ---
 * You can't disable controls with this, use SET_PLAYER_CONTROL(...) for this.
 * ```
 * Hash: 0x49C32D60007AFA47 | ApiSet: undefined
 */
export declare function isPlayerControlOn(player: number | string | Player): boolean;
/**
 * ```
 * Gets a value indicating whether the specified player is currently aiming freely.
 * ```
 * Hash: 0x2E397FD2ECD37C87 | ApiSet: undefined
 */
export declare function isPlayerFreeAiming(player: number | string | Player): boolean;
/**
 * Hash: 0xDCCFD3F106C36AB4 | ApiSet: undefined
 */
export declare function isPlayerFreeForAmbientTask(player: number | string | Player): boolean;
/**
 * Hash: 0xFA1E2BF8B10598F9 | ApiSet: undefined
 */
export declare function isPlayerPressingHorn(player: number | string | Player): boolean;
/**
 * ```
 * this function is hard-coded to always return 0.
 * ```
 * Hash: 0x74556E1420867ECA | ApiSet: undefined
 */
export declare function isPlayerLoggingInNp(): boolean;
/**
 * ```
 * Gets a value indicating whether the specified player is currently aiming freely at the specified entity.
 * ```
 * Hash: 0x3C06B5C839B38F7B | ApiSet: undefined
 */
export declare function isPlayerFreeAimingAtEntity(player: number | string | Player, entity: number | Entity): boolean;
/**
 * ```
 * Checks whether the specified player has a Ped, the Ped is not dead, is not injured and is not arrested.
 * ```
 * Hash: 0x5E9564D8246B909A | ApiSet: undefined
 */
export declare function isPlayerPlaying(player: number | string | Player): boolean;
/**
 * Hash: 0x908CBECC2CAA3690 | ApiSet: undefined
 */
export declare function isPlayerReadyForCutscene(player: number | string | Player): boolean;
/**
 * Hash: 0x78CFE51896B6B8A4 | ApiSet: undefined
 */
export declare function isPlayerTargettingAnything(player: number | string | Player): boolean;
/**
 * It returns true if the player is online, suggesting they are also logged in locally. Note that this is an alias for `NETWORK_IS_SIGNED_ONLINE`.
 * Hash: 0xF25D331DC2627BBC | ApiSet: undefined
 */
export declare function isPlayerOnline(): boolean;
/**
 * ```
 * Returns true if the player is riding a train.
 * ```
 * Hash: 0x4EC12697209F2196 | ApiSet: undefined
 */
export declare function isPlayerRidingTrain(player: number | string | Player): boolean;
/**
 * Hash: 0x238DB2A2C23EE9EF | ApiSet: undefined
 */
export declare function isPlayerWantedLevelGreater(player: number | string | Player, wantedLevel: number): boolean;
/**
 * Hash: 0x7912F7FC4F6264B6 | ApiSet: undefined
 */
export declare function isPlayerTargettingEntity(player: number | string | Player, entity: number | Entity): boolean;
/**
 * Hash: 0x8A876A65283DD7D7 | ApiSet: undefined
 */
export declare function isPlayerScriptControlOn(player: number | string | Player): boolean;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x05A1FE504B7F2587 | ApiSet: undefined
 */
export declare function isSpecialAbilityMeterFull(player: number | string | Player): boolean;
/**
 * Hash: 0x02B15662D7F8886F | ApiSet: undefined
 */
export declare function isPlayerTeleportActive(): boolean;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x3E5F7FC85D854E15 | ApiSet: undefined
 */
export declare function isSpecialAbilityActive(player: number | string | Player): boolean;
/**
 * Hash: 0x2382AB11450AE7BA | ApiSet: undefined
 */
export declare function _0x2382AB11450AE7BA(p0: any, p1: any): void;
/**
 * Hash: 0xC6017F6A6CDFA694 | ApiSet: undefined
 */
export declare function isSpecialAbilityUnlocked(playerModel: number | string): boolean;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0xB1D200FE26AEF3CB | ApiSet: undefined
 */
export declare function isSpecialAbilityEnabled(player: number | string | Player): boolean;
/**
 * ```
 * Used with radios:
 * void sub_cf383(auto _a0) {
 * if ((a_0)==1) {
 * `if (MISC::IS_BIT_SET((g_240005._f1), 3)) {`
 * `PLAYER::_2F7CEB6520288061(0);`
 * `AUDIO::SET_AUDIO_FLAG("AllowRadioDuringSwitch", 0);`
 * `AUDIO::SET_MOBILE_PHONE_RADIO_STATE(0);`
 * `AUDIO::SET_AUDIO_FLAG("MobileRadioInGame", 0);`
 * }
 * sub_cf3f6(1);
 * } else {
 * `if (MISC::IS_BIT_SET((g_240005._f1), 3)) {`
 * `PLAYER::_2F7CEB6520288061(1);`
 * `AUDIO::SET_AUDIO_FLAG("AllowRadioDuringSwitch", 1);`
 * `AUDIO::SET_MOBILE_PHONE_RADIO_STATE(1);`
 * `AUDIO::SET_AUDIO_FLAG("MobileRadioInGame", 1);`
 * }
 * sub_cf3f6(0);
 * }
 * }
 * SET_PLAYER_S*
 * ```
 * Hash: 0x2F7CEB6520288061 | ApiSet: undefined
 */
export declare function _0x2F7CEB6520288061(p0: boolean): void;
/**
 * ```
 * 2 matches in 1 script - am_hold_up
 * Used in multiplayer scripts?
 * ```
 * Hash: 0x0032A6DBA562C518 | ApiSet: undefined
 */
export declare function _0x0032A6DBA562C518(): void;
/**
 * Hash: 0x5D511E3867C87139 | ApiSet: undefined
 */
export declare function isSystemUiBeingDisplayed(): boolean;
/**
 * Hash: 0x2F41A3BAE005E5FA | ApiSet: undefined
 */
export declare function _0x2F41A3BAE005E5FA(p0: any, p1: any): void;
/**
 * Hash: 0x36F1B38855F2A8DF | ApiSet: undefined
 */
export declare function _0x36F1B38855F2A8DF(player: number | string | Player): void;
/**
 * ```
 * This has been found in use in the decompiled files.
 * ```
 * Hash: 0x4669B3ED80F24B4E | ApiSet: undefined
 */
export declare function _0x4669B3ED80F24B4E(player: number | string | Player): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x237440E46D918649 | ApiSet: undefined
 */
export declare function _0x237440E46D918649(p0: any): void;
/**
 * ```
 * Name between DISABLE_ALL_CONTROL_ACTIONS and DISABLE_CONTROL_ACTION
 * ```
 * Hash: 0x5501B7A5CDB79D37 | ApiSet: undefined
 */
export declare function _0x5501B7A5CDB79D37(player: number | string | Player): void;
/**
 * ```
 * IS_*
 * ```
 * Hash: 0x690A61A6D13583F6 | ApiSet: undefined
 */
export declare function _0x690A61A6D13583F6(player: number | string | Player): boolean;
/**
 * Hash: 0x31E90B8873A4CD3B | ApiSet: undefined
 */
export declare function _0x31E90B8873A4CD3B(player: number | string | Player, p1: number): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x70A382ADEC069DD3 | ApiSet: undefined
 */
export declare function _0x70A382ADEC069DD3(coordX: number, coordY: number, coordZ: number): void;
/**
 * Hash: 0x55FCC0C390620314 | ApiSet: undefined
 */
export declare function _0x55FCC0C390620314(player1: number | string | Player, player2: number | string | Player, toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x7148E0F43D11F0D9 | ApiSet: undefined
 */
export declare function _0x7148E0F43D11F0D9(): void;
/**
 * Hash: 0x6E4361FF3E8CD7CA | ApiSet: undefined
 */
export declare function _0x6E4361FF3E8CD7CA(p0: any): any;
/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x823EC8E82BA45986 | ApiSet: undefined
 */
export declare function _0x823EC8E82BA45986(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x7BAE68775557AE0B | ApiSet: undefined
 */
export declare function _0x7BAE68775557AE0B(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
/**
 * ```
 * SET_PLAYER_MAX_*
 * ```
 * Hash: 0x8D768602ADEF2245 | ApiSet: undefined
 */
export declare function _0x8D768602ADEF2245(player: number | string | Player, p1: number): void;
/**
 * ADD_\*
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x9097EB6D4BB9A12A | ApiSet: undefined
 */
export declare function _0x9097EB6D4BB9A12A(player: number | string | Player, entity: number | Entity): void;
/**
 * Hash: 0x7E07C78925D5FD96 | ApiSet: undefined
 */
export declare function _0x7E07C78925D5FD96(p0: any): any;
/**
 * Hash: 0x9EDD76E87D5D51BA | ApiSet: undefined
 */
export declare function _0x9EDD76E87D5D51BA(player: number | string | Player): void;
/**
 * ```
 * This has been found in use in the decompiled files.
 * ```
 * Hash: 0xAD73CE5A09E42D12 | ApiSet: undefined
 */
export declare function _0xAD73CE5A09E42D12(player: number | string | Player): void;
/**
 * REMOVE_\*
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x9F260BFB59ADBCA3 | ApiSet: undefined
 */
export declare function _0x9F260BFB59ADBCA3(player: number | string | Player, entity: number | Entity): void;
/**
 * ```
 * `PLAYER::0xBF6993C7(rPtr((&l_122) + 71)); // Found in decompilation`
 * <strong></strong>
 * In "am_hold_up.ysc" used once:
 * `l_8d._f47 = MISC::GET_RANDOM_FLOAT_IN_RANGE(18.0, 28.0);`
 * `PLAYER::_B45EFF719D8427A6((l_8d._f47));`
 * ```
 * Hash: 0xB45EFF719D8427A6 | ApiSet: undefined
 */
export declare function _0xB45EFF719D8427A6(p0: number): void;
/**
 * ```
 * Disables something. Used only once in R* scripts (freemode.ysc).
 * DISABLE_PLAYER_*
 * ```
 * Hash: 0xB885852C39CC265D | ApiSet: undefined
 */
export declare function _0xB885852C39CC265D(): void;
/**
 * ```
 * - This is called after SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME
 * ```
 * Hash: 0xC3376F42B1FACCC6 | ApiSet: undefined
 */
export declare function _0xC3376F42B1FACCC6(player: number | string | Player): void;
/**
 * ```
 * Seems to only appear in scripts used in Singleplayer.
 * Always used like this in scripts
 * `PLAYER::_BC9490CA15AEA8FB(PLAYER::PLAYER_ID());`
 * ```
 * Hash: 0xBC9490CA15AEA8FB | ApiSet: undefined
 */
export declare function _0xBC9490CA15AEA8FB(player: number | string | Player): void;
/**
 * ```
 * Found in "director_mode", "fm_bj_race_controler", "fm_deathmatch_controler", "fm_impromptu_dm_controler", "fm_race_controler", "gb_deathmatch".
 * ```
 * Hash: 0xCAC57395B151135F | ApiSet: undefined
 */
export declare function _0xCAC57395B151135F(player: number | string | Player, p1: boolean): void;
/**
 * ```
 * Returns profile setting 237.
 * GET_*
 * ```
 * Hash: 0xB9CF1F793A9F1BF1 | ApiSet: undefined
 */
export declare function _0xB9CF1F793A9F1BF1(): boolean;
/**
 * Always returns false.
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0xDCC07526B8EC45AF | ApiSet: undefined
 */
export declare function _0xDCC07526B8EC45AF(player: number | string | Player): boolean;
/**
 * Hash: 0xD821056B9ACF8052 | ApiSet: undefined
 */
export declare function _0xD821056B9ACF8052(player: number | string | Player, p1: any): void;
/**
 * ```
 * Returns profile setting 243.
 * GET_*
 * ```
 * Hash: 0xCB645E85E97EA48B | ApiSet: undefined
 */
export declare function _0xCB645E85E97EA48B(): boolean;
/**
 * Hash: 0xDE45D1A1EF45EE61 | ApiSet: undefined
 */
export declare function _0xDE45D1A1EF45EE61(player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0xFAC75988A7D078D3 | ApiSet: undefined
 */
export declare function _0xFAC75988A7D078D3(player: number | string | Player): void;
/**
 * ```
 * 2 occurrences in agency_heist3a. p1 was 0.7f then 0.4f.
 * ```
 * Hash: 0xDD2620B7B9D16FF1 | ApiSet: undefined
 */
export declare function _0xDD2620B7B9D16FF1(player: number | string | Player, p1: number): boolean;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0xFFEE8FA29AB9A18E | ApiSet: undefined
 */
export declare function _0xFFEE8FA29AB9A18E(player: number | string | Player): void;
/**
 * ```
 * Does exactly the same thing as PLAYER_ID()
 * ```
 * Hash: 0xEE68096F9F37341E | ApiSet: undefined
 */
export declare function networkPlayerIdToInt(): number;
/**
 * ```
 * Only 1 match. ob_sofa_michael.
 * `PLAYER::PLAYER_ATTACH_VIRTUAL_BOUND(-804.5928f, 173.1801f, 71.68436f, 0f, 0f, 0.590625f, 1f, 0.7f);1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;`
 * ```
 * Hash: 0xED51733DC73AED51 | ApiSet: undefined
 */
export declare function playerAttachVirtualBound(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number): void;
/**
 * ```
 * 1.0.335.2, 1.0.350.1/2, 1.0.372.2, 1.0.393.2, 1.0.393.4, 1.0.463.1;
 * ```
 * Hash: 0x1DD5897E2FA6E7C9 | ApiSet: undefined
 */
export declare function playerDetachVirtualBound(): void;
/**
 * Returns the entity handle for the local player ped. Note that this entity handle will change after using commands such as SET_PLAYER_MODEL.
 * Hash: 0xD80958FC74E988A6 | ApiSet: undefined
 */
export declare function playerPedId(): number;
/**
 * Returns the player index for the local player.
 * Hash: 0x4F8644AF03D0E0D6 | ApiSet: undefined
 */
export declare function playerId(): number | string;
/**
 * ```
 * `PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(), 37, PLAYER::GET_WANTED_LEVEL_THRESHOLD(1));`
 * From am_armybase.ysc.c4:
 * `PLAYER::REPORT_CRIME(PLAYER::PLAYER_ID(4), 36, PLAYER::GET_WANTED_LEVEL_THRESHOLD(4));`
 * -----
 * This was taken from the GTAV.exe v1.334. The function is called sub_140592CE8. For a full decompilation of the function, see here: pastebin.com/09qSMsN7
 * -----
 * crimeType:
 * 1: Firearms possession
 * 2: Person running a red light ("5-0-5")
 * 3: Reckless driver
 * 4: Speeding vehicle (a "5-10")
 * 5: Traffic violation (a "5-0-5")
 * 6: Motorcycle rider without a helmet
 * 7: Vehicle theft (a "5-0-3")
 * 8: Grand Theft Auto
 * 9: ???
 * 10: ???
 * 11: Assault on a civilian (a "2-40")
 * 12: Assault on an officer
 * 13: Assault with a deadly weapon (a "2-45")
 * 14: Officer shot (a "2-45")
 * 15: Pedestrian struck by a vehicle
 * 16: Officer struck by a vehicle
 * 17: Helicopter down (an "AC"?)
 * 18: Civilian on fire (a "2-40")
 * 19: Officer set on fire (a "10-99")
 * 20: Car on fire
 * 21: Air unit down (an "AC"?)
 * 22: An explosion (a "9-96")
 * 23: A stabbing (a "2-45") (also something else I couldn't understand)
 * 24: Officer stabbed (also something else I couldn't understand)
 * 25: Attack on a vehicle ("MDV"?)
 * 26: Damage to property
 * 27: Suspect threatening officer with a firearm
 * 28: Shots fired
 * 29: ???
 * 30: ???
 * 31: ???
 * 32: ???
 * 33: ???
 * 34: A "2-45"
 * 35: ???
 * 36: A "9-25"
 * 37: ???
 * 38: ???
 * 39: ???
 * 40: ???
 * 41: ???
 * 42: ???
 * 43: Possible disturbance
 * 44: Civilian in need of assistance
 * 45: ???
 * 46: ???
 * ```
 * Hash: 0xE9B09589827545E7 | ApiSet: undefined
 */
export declare function reportCrime(player: number | string | Player, crimeType: number, wantedLvlThresh: number): void;
/**
 * Hash: 0xF3AC26D3CC576528 | ApiSet: undefined
 */
export declare function removePlayerHelmet(player: number | string | Player, p2: boolean): void;
/**
 * Hash: 0x2D03E13C460760D6 | ApiSet: undefined
 */
export declare function resetPlayerArrestState(player: number | string | Player): void;
/**
 * Hash: 0xA6F312FCCE9C1DFE | ApiSet: undefined
 */
export declare function resetPlayerStamina(player: number | string | Player): void;
/**
 * Hash: 0xDC64D2C53493ED12 | ApiSet: undefined
 */
export declare function reportPoliceSpottedPlayer(player: number | string | Player): void;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xDA1DF03D5A315F4E | ApiSet: undefined
 */
export declare function resetWorldBoundaryForPlayer(): void;
/**
 * Adds a percentage to a players stamina
 * Hash: 0xA352C1B864CAFD33 | ApiSet: undefined
 */
export declare function restorePlayerStamina(player: number | string | Player, percentage: number): void;
/**
 * Hash: 0x19531C47A2ABD691 | ApiSet: undefined
 */
export declare function resetPlayerInputGait(player: number | string | Player): void;
/**
 * Hash: 0xB9D0DD990DC141DD | ApiSet: undefined
 */
export declare function resetWantedLevelDifficulty(player: number | string | Player): void;
/**
 * Hash: 0x471D2FF42A94B4F2 | ApiSet: undefined
 */
export declare function setAllRandomPedsFleeThisFrame(player: number | string | Player): void;
/**
 * ```
 * This can be between 1.0f - 14.9f
 * You can change the max in IDA from 15.0. I say 15.0 as the function blrs if what you input is greater than or equal to 15.0 hence why it's 14.9 max default.
 * On PC the multiplier can be between 0.0f and 50.0f (inclusive).
 * ```
 * Hash: 0xCA7DC8329F0A1E9E | ApiSet: undefined
 */
export declare function setAirDragMultiplierForPlayersVehicle(player: number | string | Player, multiplier: number): void;
/**
 * Sets whether all random peds will run away from the player if they are agitated (threatened) (bool=true), or if they will stand their ground (bool=false).
 * Hash: 0x056E0FE8534C2949 | ApiSet: undefined
 */
export declare function setAllRandomPedsFlee(player: number | string | Player, toggle: boolean): void;
/**
 * For Steam.
 * Does nothing and always returns false in the retail version of the game.
 * Hash: 0xC2AFFFDABBDC2C5C | ApiSet: undefined
 */
export declare function setAchievementProgress(achievement: number, progress: number): boolean;
/**
 * Hash: 0x9F343285A00B4BB6 | ApiSet: undefined
 */
export declare function setAutoGiveParachuteWhenEnterPlane(player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0xD2B315B6689D537D | ApiSet: undefined
 */
export declare function setAutoGiveScubaGearWhenExitVehicle(player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0xDB172424876553F4 | ApiSet: undefined
 */
export declare function setDispatchCopsForPlayer(player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0x8EEDA153AD141BA4 | ApiSet: undefined
 */
export declare function setEveryoneIgnorePlayer(player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0x5DC40A8869C22141 | ApiSet: undefined
 */
export declare function setPlayerBluetoothState(player: number | string | Player, state: boolean): void;
/**
 * Hash: 0x2E8AABFA40A84F8C | ApiSet: undefined
 */
export declare function setDisableAmbientMeleeMove(player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0x596976B02B6B5700 | ApiSet: undefined
 */
export declare function setIgnoreLowPriorityShockingEvents(player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0xF401B182DBA8AF53 | ApiSet: undefined
 */
export declare function setPlayerCanLeaveParachuteSmokeTrail(player: number | string | Player, enabled: boolean): void;
/**
 * Hash: 0xAA5F02DB48D704B9 | ApiSet: undefined
 */
export declare function setMaxWantedLevel(maxWantedLevel: number): void;
/**
 * ```
 * Every occurrence was either 0 or 2.
 * ```
 * Hash: 0x9F7BBA2EA6372500 | ApiSet: undefined
 */
export declare function setPlayerClothPackageIndex(index: number): void;
/**
 * ```
 * Sets whether this player can be hassled by gangs.
 * ```
 * Hash: 0xD5E460AD7020A246 | ApiSet: undefined
 */
export declare function setPlayerCanBeHassledByGangs(player: number | string | Player, toggle: boolean): void;
/**
 * Sets whether the player is able to do drive-bys in vehicle (shooting & aiming in vehicles), this also includes middle finger taunts.
 * This is a toggle, it does not have to be ran every frame.
 * Hash: 0x6E8834B52EC20C77 | ApiSet: undefined
 */
export declare function setPlayerCanDoDriveBy(player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0x749FADDF97DFE930 | ApiSet: undefined
 */
export declare function setPlayerClothPinFrames(player: number | string | Player, p1: number): void;
/**
 * ```
 * 6 matches across 4 scripts. 5 occurrences were 240. The other was 255.
 * ```
 * Hash: 0x14D913B777DFF5DA | ApiSet: undefined
 */
export declare function setPlayerClothLockCounter(value: number): void;
/**
 * Hash: 0x7651BC64AE59E128 | ApiSet: undefined
 */
export declare function setPlayerForceSkipAimIntro(player: number | string | Player, toggle: boolean): void;
/**
 * ```
 * Sets whether this player can take cover.
 * ```
 * Hash: 0xD465A8599DFF6814 | ApiSet: undefined
 */
export declare function setPlayerCanUseCover(player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0xEFD79FA81DFBA9CB | ApiSet: undefined
 */
export declare function setPlayerFallDistance(player: number | string | Player, distance: number): void;
/**
 * Hash: 0x7DDAB28D31FAC363 | ApiSet: undefined
 */
export declare function setPlayerHasReserveParachute(player: number | string | Player): void;
/**
 * Hash: 0xC388A0F065F5BC34 | ApiSet: undefined
 */
export declare function setPlayerHealthRechargeLimit(player: number | string | Player, limit: number): void;
/**
 * ```
 * Flags:
 * SPC_AMBIENT_SCRIPT = (1 << 1),
 * SPC_CLEAR_TASKS = (1 << 2),
 * SPC_REMOVE_FIRES = (1 << 3),
 * SPC_REMOVE_EXPLOSIONS = (1 << 4),
 * SPC_REMOVE_PROJECTILES = (1 << 5),
 * SPC_DEACTIVATE_GADGETS = (1 << 6),
 * SPC_REENABLE_CONTROL_ON_DEATH = (1 << 7),
 * SPC_LEAVE_CAMERA_CONTROL_ON = (1 << 8),
 * SPC_ALLOW_PLAYER_DAMAGE = (1 << 9),
 * SPC_DONT_STOP_OTHER_CARS_AROUND_PLAYER = (1 << 10),
 * SPC_PREVENT_EVERYBODY_BACKOFF = (1 << 11),
 * SPC_ALLOW_PAD_SHAKE = (1 << 12)
 * See: https://alloc8or.re/gta5/doc/enums/eSetPlayerControlFlag.txt
 * ```
 * Hash: 0x8D32347D6D4C40A2 | ApiSet: undefined
 */
export declare function setPlayerControl(player: number | string | Player, bHasControl: boolean, flags: number): void;
/**
 * Make the player impervious to all forms of damage.
 * Hash: 0x239528EACDC3E7DE | ApiSet: undefined
 */
export declare function setPlayerInvincible(player: number | string | Player, bInvincible: boolean): void;
/**
 * Hash: 0x75E7D505F2B15902 | ApiSet: undefined
 */
export declare function setPlayerForcedZoom(player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0x0FEE4F80AC44A726 | ApiSet: undefined
 */
export declare function setPlayerForcedAim(player: number | string | Player, toggle: boolean): void;
/**
 * This multiplier is reset to `1.0` every time the player ped is changed, often times via [`SET_PLAYER_MODEL`](#\_0x00A1CADD00108836) or [`CHANGE_PLAYER_PED`](#\_0x048189FAC643DEEE).
 * Hash: 0x5DB660B38DD98A31 | ApiSet: undefined
 */
export declare function setPlayerHealthRechargeMultiplier(player: number | string | Player, regenRate: number): void;
/**
 * ```
 * Affects the range of auto aim target.
 * ```
 * Hash: 0x29961D490E5814FD | ApiSet: undefined
 */
export declare function setPlayerLockonRangeOverride(player: number | string | Player, range: number): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0xEE4EBDD2593BA844 | ApiSet: undefined
 */
export declare function setPlayerHomingRocketDisabled(player: number | string | Player, p1: boolean): void;
/**
 * Hash: 0x6BC97F4F4BB3C04B | ApiSet: undefined
 */
export declare function setPlayerInvincibleKeepRagdollEnabled(player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0xFF300C7649724A0B | ApiSet: undefined
 */
export declare function setPlayerLeavePedBehind(player: number | string | Player, toggle: boolean): void;
/**
 * ```
 * Used to toggle the square up aim.
 * ```
 * Hash: 0x5C8B2F450EE4328E | ApiSet: undefined
 */
export declare function setPlayerLockon(player: number | string | Player, toggle: boolean): void;
/**
 * Establishes a reset flag to prevent the player from entering any vehicle. Not that this native must be called every frame.
 * Hash: 0x1DE37BBF9E9CC14A | ApiSet: undefined
 */
export declare function setPlayerMayNotEnterAnyVehicle(player: number | string | Player): void;
/**
 * ```
 * `Default is 100. Use player id and not ped id. For instance: PLAYER::SET_PLAYER_MAX_ARMOUR(PLAYER::PLAYER_ID(), 100); // main_persistent.ct4`
 * ```
 * Hash: 0x77DFCCF5948B8C71 | ApiSet: undefined
 */
export declare function setPlayerMaxArmour(player: number | string | Player, value: number): void;
/**
 * ```
 * modifier's min value is 0.1
 * ```
 * Hash: 0xAE540335B4ABC4E2 | ApiSet: undefined
 */
export declare function setPlayerMeleeWeaponDefenseModifier(player: number | string | Player, modifier: number): void;
/**
 * Limit the player to only enter this vehicle. Note set vehicle to false if you want them to access any vehicle.
 * Hash: 0x8026FF78F208978A | ApiSet: undefined
 */
export declare function setPlayerMayOnlyEnterThisVehicle(player: number | string | Player, vehicle: number | Vehicle): void;
/**
 * ```
 * NativeDB Added Parameter 3: BOOL p2
 * ```
 * Hash: 0x4A3DC7ECCC321032 | ApiSet: undefined
 */
export declare function setPlayerMeleeWeaponDamageModifier(player: number | string | Player, modifier: number): void;
/**
 * Hash: 0xDB89EF50FF25FCE9 | ApiSet: undefined
 */
export declare function setPlayerNoiseMultiplier(player: number | string | Player, multiplier: number): void;
/**
 * ```
 * example:
 * `PLAYER::SET_PLAYER_PARACHUTE_MODEL_OVERRIDE(PLAYER::PLAYER_ID(), 0x73268708);`
 * ```
 * Hash: 0x977DB4641F6FC3DB | ApiSet: undefined
 */
export declare function setPlayerParachuteModelOverride(player: number | string | Player, model: number | string): void;
/**
 * Hash: 0xDC80A4C2F18A2B64 | ApiSet: undefined
 */
export declare function setPlayerParachutePackModelOverride(player: number | string | Player, model: number | string): void;
/**
 * Set the model for a specific Player. Note that this will destroy the current Ped for the Player and create a new one, any reference to the old ped will be invalid after calling this.
 * As per usual, make sure to request the model first and wait until it has loaded.
 * Hash: 0x00A1CADD00108836 | ApiSet: undefined
 */
export declare function setPlayerModel(player: number | string | Player, model: number | string): void;
/**
 * Hash: 0x8217FD371A4625CF | ApiSet: undefined
 */
export declare function setPlayerParachuteSmokeTrailColor(player: number | string | Player, r: number, g: number, b: number): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x0764486AEDE748DB | ApiSet: undefined
 */
export declare function setPlayerReserveParachuteModelOverride(player: number | string | Player, model: number | string): void;
/**
 * ```
 * p1 was always 5.
 * p4 was always false.
 * ```
 * Hash: 0xD9284A8C0D48352C | ApiSet: undefined
 */
export declare function setPlayerParachuteVariationOverride(player: number | string | Player, p1: number, p2: any, p3: any, p4: boolean): void;
/**
 * ```
 * example:
 * flags: 0-6
 * `PLAYER::SET_PLAYER_RESET_FLAG_PREFER_REAR_SEATS(PLAYER::PLAYER_ID(), 6);`
 * wouldnt the flag be the seatIndex?
 * ```
 * Hash: 0x11D5F725F0E780E0 | ApiSet: undefined
 */
export declare function setPlayerResetFlagPreferRearSeats(player: number | string | Player, flags: number): void;
/**
 * ```
 * tints 0- 13
 * 0 - unkown
 * 1 - unkown
 * 2 - unkown
 * 3 - unkown
 * 4 - unkown
 * ```
 * Hash: 0x93B0FB27C9A04060 | ApiSet: undefined
 */
export declare function setPlayerParachutePackTintIndex(player: number | string | Player, tintIndex: number): void;
/**
 * Hash: 0xC54C95DA968EC5B5 | ApiSet: undefined
 */
export declare function setPlayerSimulateAiming(player: number | string | Player, toggle: boolean): void;
/**
 * ```
 * Tints:
 * None = -1,
 * Rainbow = 0,
 * Red = 1,
 * SeasideStripes = 2,
 * WidowMaker = 3,
 * Patriot = 4,
 * Blue = 5,
 * Black = 6,
 * Hornet = 7,
 * AirFocce = 8,
 * Desert = 9,
 * Shadow = 10,
 * HighAltitude = 11,
 * Airbone = 12,
 * Sunrise = 13,
 * ```
 * Hash: 0xAF04C87F5DC1DF38 | ApiSet: undefined
 */
export declare function setPlayerReserveParachuteTintIndex(player: number | string | Player, index: number): void;
/**
 * ```
 * Values around 1.0f to 2.0f used in game scripts.
 * ```
 * Hash: 0xB2C1A29588A9F47C | ApiSet: undefined
 */
export declare function setPlayerSneakingNoiseMultiplier(player: number | string | Player, multiplier: number): void;
/**
 * ```
 * Tints:
 * None = -1,
 * Rainbow = 0,
 * Red = 1,
 * SeasideStripes = 2,
 * WidowMaker = 3,
 * Patriot = 4,
 * Blue = 5,
 * Black = 6,
 * Hornet = 7,
 * AirFocce = 8,
 * Desert = 9,
 * Shadow = 10,
 * HighAltitude = 11,
 * Airbone = 12,
 * Sunrise = 13,
 * ```
 * Hash: 0xA3D0E54541D9A5E5 | ApiSet: undefined
 */
export declare function setPlayerParachuteTintIndex(player: number | string | Player, tintIndex: number): void;
/**
 * Hash: 0xA01B8075D8B92DF4 | ApiSet: undefined
 */
export declare function setPlayerSprint(player: number | string | Player, toggle: boolean): void;
/**
 * ```
 * Sets your targeting mode.
 * 0 = Assisted Aim - Full
 * 1 = Assisted Aim - Partial
 * 2 = Free Aim - Assisted
 * 3 = Free Aim
 * ```
 * Hash: 0xB1906895227793F3 | ApiSet: undefined
 */
export declare function setPlayerTargetingMode(targetMode: number): void;
/**
 * Hash: 0x5702B917B99DB1CD | ApiSet: undefined
 */
export declare function setPlayerTargetLevel(targetLevel: number): void;
/**
 * Hash: 0x4E9021C1FCDD507A | ApiSet: undefined
 */
export declare function setPlayerStealthPerceptionModifier(player: number | string | Player, value: number): void;
/**
 * Set the player's current team.
 * Hash: 0x0299FA38396A4940 | ApiSet: undefined
 */
export declare function setPlayerTeam(player: number | string | Player, team: number): void;
/**
 * ```
 * modifier's min value is 0.1
 * ```
 * Hash: 0xA50E117CDDF82F0C | ApiSet: undefined
 */
export declare function setPlayerVehicleDamageModifier(player: number | string | Player, modifier: number): void;
/**
 * Seems to lock the underwater timer of the specified player. Set `percentage` to `50.0` will reduce the value of [GET_PLAYER_UNDERWATER_TIME_REMAINING](#\_0xA1FCF8E6AF40B731) to 5.0.
 * If you want to increase the underwater time for ped, use [SET_PED_MAX_TIME_UNDERWATER](#\_0x6BA428C528D9E522) instead.
 * Using this native after [SET_PED_MAX_TIME_UNDERWATER](#\_0x6BA428C528D9E522) **WILL NOT** get what you want. For example, if you set the max time underwater to `100.0` seconds using [SET_PED_MAX_TIME_UNDERWATER](#\_0x6BA428C528D9E522) and then call this native and set the `percentage` to 50.0, you will not get `50.0`, instead `2.0`.
 * Hash: 0xA0D3E4F7AAFB7E78 | ApiSet: undefined
 */
export declare function setPlayerUnderwaterTimeRemaining(player: number | string | Player, percentage: number): any;
/**
 * ```
 * # Predominant call signatures
 * `PLAYER::SET_PLAYER_WANTED_CENTRE_POSITION(PLAYER::PLAYER_ID(), ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1));`
 * # Parameter value ranges
 * `P0: PLAYER::PLAYER_ID()`
 * `P1: ENTITY::GET_ENTITY_COORDS(PLAYER::PLAYER_PED_ID(), 1)`
 * P2: Not set by any call
 * ```
 * Hash: 0x520E541A97A13354 | ApiSet: undefined
 */
export declare function setPlayerWantedCentrePosition(player: number | string | Player, p2: boolean, p3: boolean): Vector3;
/**
 * Hash: 0x39FF19C64EF7DA5B | ApiSet: undefined
 */
export declare function setPlayerWantedLevel(player: number | string | Player, wantedLevel: number, delayedResponse: boolean): void;
/**
 * ```
 * modifier's min value is 0.1
 * ```
 * Hash: 0x4C60E6EFDAFF2462 | ApiSet: undefined
 */
export declare function setPlayerVehicleDefenseModifier(player: number | string | Player, modifier: number): void;
/**
 * The native ensures the 'modifier' parameter is 0.1 or greater.
 * Hash: 0xCE07B9F7817AADA3 | ApiSet: undefined
 */
export declare function setPlayerWeaponDamageModifier(player: number | string | Player, modifier: number): void;
/**
 * Hash: 0x2D83BC011CA14A3C | ApiSet: undefined
 */
export declare function setPlayerWeaponDefenseModifier(player: number | string | Player, modifier: number): void;
/**
 * ```
 * The player will be ignored by the police if toggle is set to true
 * ```
 * Hash: 0x32C62AA929C2DA6A | ApiSet: undefined
 */
export declare function setPoliceIgnorePlayer(player: number | string | Player, toggle: boolean): void;
/**
 * ```
 * Forces any pending wanted level to be applied to the specified player immediately.
 * Call SET_PLAYER_WANTED_LEVEL with the desired wanted level, followed by SET_PLAYER_WANTED_LEVEL_NOW.
 * Second parameter is unknown (always false).
 * ```
 * Hash: 0xE0A7D1E497FFCD6F | ApiSet: undefined
 */
export declare function setPlayerWantedLevelNow(player: number | string | Player, p1: boolean): void;
/**
 * ```
 * If toggle is set to false:
 * The police won't be shown on the (mini)map
 * If toggle is set to true:
 * The police will be shown on the (mini)map
 * ```
 * Hash: 0x43286D561B72B8BF | ApiSet: undefined
 */
export declare function setPoliceRadarBlips(toggle: boolean): void;
/**
 * ```
 * Multiplier goes up to 1.49 any value above will be completely overruled by the game and the multiplier will not take effect, this can be edited in memory however.
 * Just call it one time, it is not required to be called once every tick.
 * Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and SWIM above. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.
 * It is not possible to "decrease" speed. Anything below 1 will be ignored.
 * ```
 * Hash: 0x6DB47AA77FD94E09 | ApiSet: undefined
 */
export declare function setRunSprintMultiplierForPlayer(player: number | string | Player, multiplier: number): void;
/**
 * Hash: 0xBCFDE9EDE4CF27DC | ApiSet: undefined
 */
export declare function setPlayerWeaponDefenseModifier2(player: number | string | Player, modifier: number): void;
/**
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * Hash: 0xB214D570EAD7F81A | ApiSet: undefined
 */
export declare function setSpecialAbility(player: number | string | Player, p1: number): void;
/**
 * ```
 * Swim speed multiplier.
 * Multiplier goes up to 1.49
 * Just call it one time, it is not required to be called once every tick. - Note copied from below native.
 * Note: At least the IDA method if you change the max float multiplier from 1.5 it will change it for both this and RUN_SPRINT below. I say 1.5 as the function blrs if what you input is greater than or equal to 1.5 hence why it's 1.49 max default.
 * ```
 * Hash: 0xA91C6F0FF7D16A13 | ApiSet: undefined
 */
export declare function setSwimMultiplierForPlayer(player: number | string | Player, multiplier: number): void;
/**
 * Hash: 0xA49C426ED0CA4AB7 | ApiSet: undefined
 */
export declare function setSpecialAbilityMultiplier(multiplier: number): void;
/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x49B856B1360C47C7 | ApiSet: undefined
 */
export declare function setWantedLevelHiddenEvasionTime(player: number | string | Player, wantedLevel: number, lossTime: number): void;
/**
 * ```
 * Max value is 1.0
 * ```
 * Hash: 0x9B0BB33B04405E7A | ApiSet: undefined
 */
export declare function setWantedLevelDifficulty(player: number | string | Player, difficulty: number): void;
/**
 * Hash: 0x020E5F00CDA207BA | ApiSet: undefined
 */
export declare function setWantedLevelMultiplier(multiplier: number): void;
/**
 * ```
 * p1 appears as 5, 10, 15, 25, or 30. p2 is always true.
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * Hash: 0xB7B0870EB531D08D | ApiSet: undefined
 */
export declare function specialAbilityChargeAbsolute(player: number | string | Player, p1: number, p2: boolean): void;
/**
 * This is to make the player walk without accepting input.
 * Call this native every frame so you can control the direction of your ped.
 * Hash: 0x477D5D63E63ECA5D | ApiSet: undefined
 */
export declare function simulatePlayerInputGait(player: number | string | Player, amount: number, gaitType: number, rotationSpeed: number, p4: boolean, p5: boolean): void;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x821FDC827D6F4090 | ApiSet: undefined
 */
export declare function specialAbilityActivate(player: any): void;
/**
 * ```
 * 2 matches. p1 was always true.
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * Hash: 0xF733F45FA4497D93 | ApiSet: undefined
 */
export declare function specialAbilityChargeLarge(player: number | string | Player, p1: boolean, p2: boolean): void;
/**
 * ```
 * p1 appears to always be 1 (only comes up twice)
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * Hash: 0xED481732DFF7E997 | ApiSet: undefined
 */
export declare function specialAbilityChargeContinuous(player: number | string | Player, p2: number | Ped): void;
/**
 * ```
 * Only 1 match. Both p1 & p2 were true.
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * Hash: 0xF113E3AA9BC54613 | ApiSet: undefined
 */
export declare function specialAbilityChargeMedium(player: number | string | Player, p1: boolean, p2: boolean): void;
/**
 * ```
 * Every occurrence of p1 & p2 were both true.
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * Hash: 0x2E7B9B683481687D | ApiSet: undefined
 */
export declare function specialAbilityChargeSmall(player: number | string | Player, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0xC9A763D8FE87436A | ApiSet: undefined
 */
export declare function specialAbilityChargeOnMissionFailed(player: number | string | Player): void;
/**
 * ```
 * normalizedValue is from 0.0 - 1.0
 * p2 is always 1
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * Hash: 0xA0696A65F009EE18 | ApiSet: undefined
 */
export declare function specialAbilityChargeNormalized(player: number | string | Player, normalizedValue: number, p2: boolean): void;
/**
 * ```
 * Also known as _RECHARGE_SPECIAL_ABILITY
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * Hash: 0x3DACA8DDC6FD4980 | ApiSet: undefined
 */
export declare function specialAbilityFillMeter(player: number | string | Player, p1: boolean): void;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0xD6A953C6D1492057 | ApiSet: undefined
 */
export declare function specialAbilityDeactivate(player: number | string | Player): void;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0xF145F3BE2EFA9A3B | ApiSet: undefined
 */
export declare function specialAbilityUnlock(playerModel: number | string): void;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x9CB5CE07A3968D5A | ApiSet: undefined
 */
export declare function specialAbilityDeactivateFast(player: number | string | Player): void;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x17F7471EACA78290 | ApiSet: undefined
 */
export declare function specialAbilityDeplete(p0: any): void;
/**
 * ```
 * p1 was always true.
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * Hash: 0x1D506DBBBC51E64B | ApiSet: undefined
 */
export declare function specialAbilityDepleteMeter(player: number | string | Player, p1: boolean): void;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x6A09D0D590A47D13 | ApiSet: undefined
 */
export declare function specialAbilityLock(playerModel: number | string): void;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x375F0E738F861A94 | ApiSet: undefined
 */
export declare function specialAbilityReset(player: number | string | Player): void;
/**
 * Hash: 0xBF9BD71691857E48 | ApiSet: undefined
 */
export declare function startFiringAmnesty(duration: number): void;
/**
 * ```
 * Disables the player's teleportation
 * ```
 * Hash: 0xC449EDED9D73009C | ApiSet: undefined
 */
export declare function stopPlayerTeleport(): void;
/**
 * Teleports the player to the given coordinates.
 * If findCollisionLand is true it will try to find the Z value for you, this however has a timeout of 100 frames.
 * When trying to find the Z value the native will take longer the higher the difference from the given Z to the ground, this combined with the timeout can cause the teleport to just teleport to the given Z value, so try to estimate the z value, so don't just pass in 1000.0.
 * Also if you're in a vehicle and teleportWithVehicle is true it will not find the Z value for you.
 * Hash: 0xAD15F075A4DA0FDE | ApiSet: undefined
 */
export declare function startPlayerTeleport(player: number | string | Player, position: Vector3, heading: number, teleportWithVehicle: boolean, findCollisionLand: boolean, p7: boolean): void;
/**
 * Suppresses a crime for a given player for this frame only.
 * **Note:** This native needs to be executed inside a thread if a crime is meant to be suppressed for a given amount of time.
 * Hash: 0x9A987297ED8BD838 | ApiSet: undefined
 */
export declare function suppressCrimeThisFrame(player: number | string | Player, crimeType: number): void;
/**
 * Hash: 0x340E61DE7F471565 | ApiSet: undefined
 */
export declare function setPlayerWantedLevelNoDrop(player: number | string | Player, wantedLevel: number, delayedResponse: boolean): void;
/**
 * Hash: 0xE23D5873C2394C61 | ApiSet: undefined
 */
export declare function updatePlayerTeleport(player: number | string | Player): boolean;
/**
 * Hash: 0xD45B1FFCCD52FF19 | ApiSet: undefined
 */
export declare function activateDamageTrackerOnNetworkId(netID: number, toggle: boolean): void;
/**
 * Hash: 0x800DD4721A8B008B | ApiSet: undefined
 */
export declare function canRegisterMissionObjects(amount: number): boolean;
/**
 * Hash: 0x69778E7564BADE6D | ApiSet: undefined
 */
export declare function canRegisterMissionEntities(ped_amt: number, vehicle_amt: number, object_amt: number, pickup_amt: number): boolean;
/**
 * Hash: 0xEC5E3AF5289DCA81 | ApiSet: undefined
 */
export declare function badSportPlayerLeftDetected(event: number, amountReceived: number): [boolean, number];
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x966DD84FB6A46017 | ApiSet: undefined
 */
export declare function clearLaunchParams(): void;
/**
 * Hash: 0xBEC0816FF5ACBCDA | ApiSet: undefined
 */
export declare function activateDamageTrackerOnPlayer(player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0x3A3D5568AF297CD5 | ApiSet: undefined
 */
export declare function cloudDidRequestSucceed(handle: number): boolean;
/**
 * Hash: 0x7277F1F2E085EE74 | ApiSet: undefined
 */
export declare function canRegisterMissionVehicles(amount: number): boolean;
/**
 * Hash: 0x0A49D1CB6E34AF72 | ApiSet: undefined
 */
export declare function canRegisterMissionPickups(amount: number): boolean;
/**
 * Hash: 0xC7ABAC5DE675EE3B | ApiSet: undefined
 */
export declare function cloudIsCheckingAvailability(): boolean;
/**
 * Hash: 0xBCBF4FEF9FA5D781 | ApiSet: undefined
 */
export declare function canRegisterMissionPeds(amount: number): boolean;
/**
 * ```
 * Downloads prod.cloud.rockstargames.com/titles/gta5/[platform]/check.json
 * ```
 * Hash: 0x4F18196C8D38768D | ApiSet: undefined
 */
export declare function cloudCheckAvailability(): void;
/**
 * Hash: 0x0B0CC10720653F3B | ApiSet: undefined
 */
export declare function cloudGetAvailabilityCheckResult(): boolean;
/**
 * Hash: 0xC64DED7EF0D2FE37 | ApiSet: undefined
 */
export declare function cloudDeleteMemberFile(p0: string): number;
/**
 * Hash: 0x4C61B39930D045DA | ApiSet: undefined
 */
export declare function cloudHasRequestCompleted(handle: number): boolean;
/**
 * ```
 * Takes the specified time and writes it to the structure specified in the second argument.
 * struct date_time
 * {
 * alignas(8) int year;
 * alignas(8) int month;
 * alignas(8) int day;
 * alignas(8) int hour;
 * alignas(8) int minute;
 * alignas(8) int second;
 * };
 * ```
 * Hash: 0xAC97AF97FA68E5D5 | ApiSet: undefined
 */
export declare function convertPosixTime(posixTime: number): any;
/**
 * Hash: 0xA75E2B6733DA5142 | ApiSet: undefined
 */
export declare function facebookDoUnkCheck(): boolean;
/**
 * Hash: 0x62B9FEC9A11F10EF | ApiSet: undefined
 */
export declare function facebookIsSendingData(): boolean;
/**
 * Hash: 0x43865688AE10F0D7 | ApiSet: undefined
 */
export declare function facebookIsAvailable(): boolean;
/**
 * Hash: 0xDC48473142545431 | ApiSet: undefined
 */
export declare function facebookSetCreateCharacterComplete(): boolean;
/**
 * ```
 * milestoneId:
 * 0 = "percentcomplete"
 * 1 = "storycomplete"
 * 2 = "vehicles"
 * 3 = "properties"
 * 4 = "psych"
 * 5 = "mapreveal"
 * 6 = "prologue"
 * ```
 * Hash: 0x0AE1F1653B554AB9 | ApiSet: undefined
 */
export declare function facebookSetMilestoneComplete(milestoneId: number): boolean;
/**
 * Hash: 0x098AB65B9ED9A9EC | ApiSet: undefined
 */
export declare function facebookSetHeistComplete(heistName: string, cashEarned: number, xpEarned: number): boolean;
/**
 * Returns POSIX timestamp.
 * Renamed from `_GET_POSIX_TIME` to `GET_CLOUD_TIME_AS_INT` because of conflicting native names ([`0xDA488F299A5B164E`](#\_0xDA488F299A5B164E))
 * Hash: 0x9A73240B49945C76 | ApiSet: undefined
 */
export declare function getCloudTimeAsInt(): number;
/**
 * ```
 * Hardcoded to not work in SP.
 * ```
 * Hash: 0x416DBD4CD6ED8DD2 | ApiSet: undefined
 */
export declare function fadeOutLocalPlayer(p0: boolean): void;
/**
 * Hash: 0xCBBD7C4991B64809 | ApiSet: undefined
 */
export declare function filloutPmPlayerList(p1: any, p2: any): [boolean, number];
/**
 * Hash: 0xB4271092CA7EDF48 | ApiSet: undefined
 */
export declare function getCommerceItemName(index: number): string;
/**
 * ```
 * index2 is unused
 * ```
 * Hash: 0x6F44CBF56D79FAC0 | ApiSet: undefined
 */
export declare function getCommerceItemCat(index: number, index2: number): string;
/**
 * Hash: 0x716B6DB9D1886106 | ApiSet: undefined
 */
export declare function filloutPmPlayerListWithNames(p2: any, p3: any): [boolean, any, any];
/**
 * Hash: 0x2A7776C709904AB0 | ApiSet: undefined
 */
export declare function getCommerceItemNumCats(index: number): number;
/**
 * Hash: 0xCA94551B50B4932C | ApiSet: undefined
 */
export declare function getCommerceProductPrice(index: number): string;
/**
 * ```
 * NativeDB Added Parameter 3: int p2
 * ```
 * Hash: 0x722F5D28B61C5EA8 | ApiSet: undefined
 */
export declare function getCommerceItemTexturename(index: number): string;
/**
 * ```
 * Same as GET_CLOUD_TIME_AS_INT but returns the value as a hex string (%I64X).
 * ```
 * Hash: 0xF12E6CD06C73D69E | ApiSet: undefined
 */
export declare function getCloudTimeAsString(): string;
/**
 * Hash: 0xA72835064DD63E4C | ApiSet: undefined
 */
export declare function getMaxNumNetworkPickups(): number;
/**
 * Hash: 0xC7BE335216B5EC7C | ApiSet: undefined
 */
export declare function getMaxNumNetworkObjects(): number;
/**
 * Hash: 0x662635855957C411 | ApiSet: undefined
 */
export declare function getCommerceItemId(index: number): string;
/**
 * Hash: 0x0C1F7D49C39D2289 | ApiSet: undefined
 */
export declare function getMaxNumNetworkPeds(): number;
/**
 * Returns the same value as [`GetNetworkTime`](#\_0x7A5487FE9FAA6B48) in freemode, but as opposed to `GetNetworkTime` it always gets the most recent time, instead of once per tick.
 * Could be used for benchmarking since it can return times in ticks.
 * Hash: 0x89023FBBF9200E9F | ApiSet: undefined
 */
export declare function getNetworkTimeAccurate(): number;
/**
 * Hash: 0x0AFCE529F69B21FF | ApiSet: undefined
 */
export declare function getMaxNumNetworkVehicles(): number;
/**
 * Hash: 0x7A5487FE9FAA6B48 | ApiSet: undefined
 */
export declare function getNetworkTime(): number;
/**
 * Hash: 0x12B6281B6C6706C0 | ApiSet: undefined
 */
export declare function getNumCreatedMissionObjects(p0: boolean): number;
/**
 * Hash: 0xF2EAC213D5EA0623 | ApiSet: undefined
 */
export declare function getNumCommerceItems(): number;
/**
 * Hash: 0xCB215C4B56A7FAE7 | ApiSet: undefined
 */
export declare function getNumCreatedMissionPeds(p0: boolean): number;
/**
 * ```
 * p0 appears to be for MP
 * ```
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0xCF3A965906452031 | ApiSet: undefined
 */
export declare function getNumReservedMissionVehicles(p0: boolean): number;
/**
 * ```
 * p0 appears to be for MP
 * ```
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0xAA81B5F10BC43AC2 | ApiSet: undefined
 */
export declare function getNumReservedMissionObjects(p0: boolean): number;
/**
 * ```
 * p0 appears to be for MP
 * ```
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x1F13D5AE5CB17E17 | ApiSet: undefined
 */
export declare function getNumReservedMissionPeds(p0: boolean): number;
/**
 * Hash: 0x0CD9AB83489430EA | ApiSet: undefined
 */
export declare function getNumCreatedMissionVehicles(p0: boolean): number;
/**
 * ```
 * 0 = succeeded
 * 1 = pending
 * 2 = failed
 * ```
 * Hash: 0x8BD6C6DEA20E82C6 | ApiSet: undefined
 */
export declare function getStatusOfTextureDownload(p0: number): number;
/**
 * Hash: 0x9E23B1777A927DAD | ApiSet: undefined
 */
export declare function getTimeAsString(time: number): string;
/**
 * Hash: 0xEA14EEF5B7CD2C30 | ApiSet: undefined
 */
export declare function isCommerceDataValid(): boolean;
/**
 * Hash: 0x46718ACEEDEAFC84 | ApiSet: undefined
 */
export declare function hasNetworkTimeStarted(): boolean;
/**
 * ```
 * Online version is defined here: update\update.rpf\common\data\version.txt
 * Example:
 * [ONLINE_VERSION_NUMBER]
 * 1.33
 * _GET_ONLINE_VERSION() will return "1.33"
 * ```
 * Hash: 0xFCA9373EF340AC0A | ApiSet: undefined
 */
export declare function getOnlineVersion(): string;
/**
 * ```
 * Subtracts the second argument from the first.
 * ```
 * Hash: 0xA2C6FC031D46FFF0 | ApiSet: undefined
 */
export declare function getTimeDifference(timeA: number, timeB: number): number;
/**
 * Hash: 0x2EAC52B4019E2782 | ApiSet: undefined
 */
export declare function isCommerceStoreOpen(): boolean;
/**
 * Hash: 0xA1607996431332DF | ApiSet: undefined
 */
export declare function isNetworkIdOwnedByParticipant(netId: number): boolean;
/**
 * Hash: 0x6E192E33AD436366 | ApiSet: undefined
 */
export declare function isDamageTrackerActiveOnNetworkId(netID: number): boolean;
/**
 * ```
 * Adds the first argument to the second.
 * ```
 * Hash: 0x017008CCDAD48503 | ApiSet: undefined
 */
export declare function getTimeOffset(timeA: number, timeB: number): number;
/**
 * Hash: 0xB2092A1EAA7FD45F | ApiSet: undefined
 */
export declare function isDamageTrackerActiveOnPlayer(player: number | string | Player): boolean;
/**
 * Hash: 0xDC3A310219E5DA62 | ApiSet: undefined
 */
export declare function isSphereVisibleToPlayer(p0: any, p1: number, p2: number, p3: number, p4: number): boolean;
/**
 * Hash: 0xE73092F4157CD126 | ApiSet: undefined
 */
export declare function isPlayerInCutscene(player: number | string | Player): boolean;
/**
 * Hash: 0x21D04D7BC538C146 | ApiSet: undefined
 */
export declare function isEntityGhostedToLocalPlayer(entity: number | Entity): boolean;
/**
 * ```
 * Returns true if the two times are equal; otherwise returns false.
 * ```
 * Hash: 0xF5BC95857BD6D512 | ApiSet: undefined
 */
export declare function isTimeEqualTo(timeA: number, timeB: number): boolean;
/**
 * Hash: 0x883D79C4071E18B3 | ApiSet: undefined
 */
export declare function isStoreAvailableToUser(): boolean;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x023ACAB2DC9DC4A4 | ApiSet: undefined
 */
export declare function _0x023ACAB2DC9DC4A4(): any;
/**
 * Hash: 0xD82CF8E64C8729D8 | ApiSet: undefined
 */
export declare function isSphereVisibleToAnotherMachine(p0: number, p1: number, p2: number, p3: number): boolean;
/**
 * ```
 * Subtracts the first argument from the second, then returns whether the result is negative.
 * ```
 * Hash: 0xDE350F8651E4346C | ApiSet: undefined
 */
export declare function isTimeMoreThan(timeA: number, timeB: number): boolean;
/**
 * Hash: 0x04918A41BC9B8157 | ApiSet: undefined
 */
export declare function _0x04918A41BC9B8157(p0: any, p1: any, p2: any): any;
/**
 * ```
 * Subtracts the second argument from the first, then returns whether the result is negative.
 * ```
 * Hash: 0xCB2CF5148012C8D0 | ApiSet: undefined
 */
export declare function isTimeLessThan(timeA: number, timeB: number): boolean;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x0CF6CC51AA18F0F8 | ApiSet: undefined
 */
export declare function _0x0CF6CC51AA18F0F8(p0: any, p1: any, p2: any): any;
/**
 * Hash: 0x0EDE326D47CD0F3E | ApiSet: undefined
 */
export declare function _0x0EDE326D47CD0F3E(ped: number | Ped, player: number | string | Player): boolean;
/**
 * Hash: 0x1171A97A3D3981B6 | ApiSet: undefined
 */
export declare function _0x1171A97A3D3981B6(p2: any, p3: any): [boolean, any, any];
/**
 * Hash: 0x041C7F2A6C9894E6 | ApiSet: undefined
 */
export declare function _0x041C7F2A6C9894E6(p0: any, p1: any, p2: any): any;
/**
 * ```
 * NETWORK_SET_*
 * ```
 * Hash: 0x0D77A82DC2D0DA59 | ApiSet: undefined
 */
export declare function _0x0D77A82DC2D0DA59(): [any, any];
/**
 * Hash: 0x07EAB372C8841D99 | ApiSet: undefined
 */
export declare function _0x07EAB372C8841D99(p0: any, p1: any, p2: any): any;
/**
 * ```
 * SET_NETWORK_*
 * ```
 * Hash: 0x13F1FCB111B820B0 | ApiSet: undefined
 */
export declare function _0x13F1FCB111B820B0(p0: boolean): void;
/**
 * Hash: 0x1153FA02A659051C | ApiSet: undefined
 */
export declare function _0x1153FA02A659051C(): void;
/**
 * Hash: 0x144DA052257AE7D8 | ApiSet: undefined
 */
export declare function _0x144DA052257AE7D8(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x17C9E241111A674D | ApiSet: undefined
 */
export declare function _0x17C9E241111A674D(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x0F1A4B45B7693B95 | ApiSet: undefined
 */
export declare function _0x0F1A4B45B7693B95(p0: any, p1: any): void;
/**
 * ```
 * NETWORK_IS_*
 * ```
 * Hash: 0x14922ED3E38761F0 | ApiSet: undefined
 */
export declare function _0x14922ED3E38761F0(): boolean;
/**
 * Hash: 0x140E6A44870A11CE | ApiSet: undefined
 */
export declare function _0x140E6A44870A11CE(): void;
/**
 * Hash: 0x1398582B7F72B3ED | ApiSet: undefined
 */
export declare function _0x1398582B7F72B3ED(p0: any): void;
/**
 * Hash: 0x1D610EB0FEA716D9 | ApiSet: undefined
 */
export declare function _0x1D610EB0FEA716D9(p0: number): boolean;
/**
 * Hash: 0x162C23CA83ED0A62 | ApiSet: undefined
 */
export declare function _0x162C23CA83ED0A62(p0: any): boolean;
/**
 * ```
 * Checks some commerce stuff
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x155467ACA0F55705 | ApiSet: undefined
 */
export declare function _0x155467ACA0F55705(): number;
/**
 * Hash: 0x2302C0264EA58D31 | ApiSet: undefined
 */
export declare function _0x2302C0264EA58D31(): void;
/**
 * ```
 * IS_COMMERCE_*
 * ```
 * Hash: 0x1D4DC17C38FEAFF0 | ApiSet: undefined
 */
export declare function _0x1D4DC17C38FEAFF0(): boolean;
/**
 * Hash: 0x24E4E51FC16305F9 | ApiSet: undefined
 */
export declare function _0x24E4E51FC16305F9(): any;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x1F7BC3539F9E0224 | ApiSet: undefined
 */
export declare function _0x1F7BC3539F9E0224(): void;
/**
 * ```
 * Does nothing (it's a nullsub).
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x2555CF7DA5473794 | ApiSet: undefined
 */
export declare function _0x2555CF7DA5473794(): void;
/**
 * Hash: 0x1F8E00FB18239600 | ApiSet: undefined
 */
export declare function _0x1F8E00FB18239600(p0: any): void;
/**
 * Hash: 0x25D990F8E0E3F13C | ApiSet: undefined
 */
export declare function _0x25D990F8E0E3F13C(): void;
/**
 * Hash: 0x265559DA40B3F327 | ApiSet: undefined
 */
export declare function _0x265559DA40B3F327(p0: any): void;
/**
 * Hash: 0x283B6062A2C01E9B | ApiSet: undefined
 */
export declare function _0x283B6062A2C01E9B(): void;
/**
 * Hash: 0x261E97AD7BCF3D40 | ApiSet: undefined
 */
export declare function _0x261E97AD7BCF3D40(p0: boolean): void;
/**
 * Hash: 0x26F07DD83A5F7F98 | ApiSet: undefined
 */
export declare function _0x26F07DD83A5F7F98(): any;
/**
 * Hash: 0x265635150FB0D82E | ApiSet: undefined
 */
export declare function _0x265635150FB0D82E(): void;
/**
 * Hash: 0x2CE9D95E4051AECD | ApiSet: undefined
 */
export declare function _0x2CE9D95E4051AECD(p0: any): void;
/**
 * Hash: 0x2B1C623823DB0D9D | ApiSet: undefined
 */
export declare function _0x2B1C623823DB0D9D(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): any;
/**
 * Hash: 0x2B51EDBEFC301339 | ApiSet: undefined
 */
export declare function _0x2B51EDBEFC301339(p0: number, p1: string): boolean;
/**
 * Hash: 0x2D5DC831176D0114 | ApiSet: undefined
 */
export declare function _0x2D5DC831176D0114(p0: any): boolean;
/**
 * Hash: 0x2BF66D2E7414F686 | ApiSet: undefined
 */
export declare function _0x2BF66D2E7414F686(): any;
/**
 * Hash: 0x2E0BF682CC778D49 | ApiSet: undefined
 */
export declare function _0x2E0BF682CC778D49(p0: any): boolean;
/**
 * Hash: 0x2E4C123D1C8A710E | ApiSet: undefined
 */
export declare function _0x2E4C123D1C8A710E(p2: any, p3: any, p4: any, p5: any, p6: any): [any, number, number];
/**
 * Hash: 0x2DA41ED6E1FCD7A5 | ApiSet: undefined
 */
export declare function _0x2DA41ED6E1FCD7A5(p0: any): [any, number];
/**
 * I've had this return the player's ped handle sometimes, but also other random entities.
 * Whatever p0 is, it's at least not synced to other players.
 * At least not all the time, some p0 values actually output the same entity, (different handle of course, but same entity).
 * But another p0 value may return an entity for player x, but not for player y (it'll just return -1 even if the entity exists on both clients).
 * Hash: 0x37D5F739FD494675 | ApiSet: undefined
 */
export declare function _0x37D5F739FD494675(p0: any): number;
/**
 * Hash: 0x367EF5E2F439B4C6 | ApiSet: undefined
 */
export declare function _0x367EF5E2F439B4C6(p0: number): void;
/**
 * Hash: 0x32EBD154CB6B8B99 | ApiSet: undefined
 */
export declare function _0x32EBD154CB6B8B99(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0x36391F397731595D | ApiSet: undefined
 */
export declare function _0x36391F397731595D(p0: any): any;
/**
 * Hash: 0x3855FB5EB2C5E8B2 | ApiSet: undefined
 */
export declare function _0x3855FB5EB2C5E8B2(p0: any): any;
/**
 * Hash: 0x39917E1B4CB0F911 | ApiSet: undefined
 */
export declare function _0x39917E1B4CB0F911(p0: boolean): void;
/**
 * Hash: 0x3FA36981311FA4FF | ApiSet: undefined
 */
export declare function _0x3FA36981311FA4FF(netId: number, state: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x38B7C51AB1EDC7D8 | ApiSet: undefined
 */
export declare function _0x38B7C51AB1EDC7D8(entity: number | Entity, toggle: boolean): void;
/**
 * nullsub, doesn't do anything
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x3FC795691834481D | ApiSet: undefined
 */
export declare function _0x3FC795691834481D(p0: any, p1: any): void;
/**
 * ```
 * Sets some voice chat related value.
 * NETWORK_SET_*
 * ```
 * Hash: 0x3C5C1E2C2FF814B1 | ApiSet: undefined
 */
export declare function _0x3C5C1E2C2FF814B1(toggle: boolean): void;
/**
 * Hash: 0x4237E822315D8BA9 | ApiSet: undefined
 */
export declare function _0x4237E822315D8BA9(): boolean;
/**
 * Hash: 0x45E816772E93A9DB | ApiSet: undefined
 */
export declare function _0x45E816772E93A9DB(): any;
/**
 * Hash: 0x4348BFDA56023A2F | ApiSet: undefined
 */
export declare function _0x4348BFDA56023A2F(p0: any, p1: any): any;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x4A9FDE3A5A6D0437 | ApiSet: undefined
 */
export declare function _0x4A9FDE3A5A6D0437(toggle: boolean): void;
/**
 * ```
 * related to:
 * NETWORK_BAIL
 * NETWORK_BAIL_TRANSITION
 * NETWORK_JOIN_GROUP_ACTIVITY
 * NETWORK_JOIN_TRANSITION
 * NETWORK_LAUNCH_TRANSITION
 * NETWORK_SESSION_HOST
 * NETWORK_SESSION_HOST_CLOSED
 * NETWORK_SESSION_HOST_FRIENDS_ONLY
 * NETWORK_SESSION_HOST_SINGLE_PLAYER
 * NETWORK_SESSION_VOICE_LEAVE
 * ```
 * Hash: 0x444C4525ECE0A4B9 | ApiSet: undefined
 */
export declare function _0x444C4525ECE0A4B9(): void;
/**
 * Hash: 0x4AD490AE1536933B | ApiSet: undefined
 */
export declare function _0x4AD490AE1536933B(p0: any, p1: any): any;
/**
 * Hash: 0x4811BBAC21C5FCD5 | ApiSet: undefined
 */
export declare function _0x4811BBAC21C5FCD5(p0: any): void;
/**
 * Hash: 0x4C2A9FDC22377075 | ApiSet: undefined
 */
export declare function _0x4C2A9FDC22377075(): void;
/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x4C9034162368E206 | ApiSet: undefined
 */
export declare function _0x4C9034162368E206(): any;
/**
 * Hash: 0x4D02279C83BE69FE | ApiSet: undefined
 */
export declare function _0x4D02279C83BE69FE(): any;
/**
 * Hash: 0x5324A0E3E4CE3570 | ApiSet: undefined
 */
export declare function _0x5324A0E3E4CE3570(p0: any, p1: any): [boolean, any, any];
/**
 * Hash: 0x53C10C8BD774F2C9 | ApiSet: undefined
 */
export declare function _0x53C10C8BD774F2C9(): any;
/**
 * Hash: 0x4DF7CFFF471A7FB1 | ApiSet: undefined
 */
export declare function _0x4DF7CFFF471A7FB1(p0: any): boolean;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x560B423D73015E77 | ApiSet: undefined
 */
export declare function _0x560B423D73015E77(p0: any): any;
/**
 * Hash: 0x59D421683D31835A | ApiSet: undefined
 */
export declare function _0x59D421683D31835A(p0: any): void;
/**
 * ```
 * _NETWORK_CAN_VIEW_* - _NETWORK_CAN_SESSION*
 * NETWORK_CAN_PLAY_GAMER_USER_CONTENT?
 * ```
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x559EBF901A8C68E0 | ApiSet: undefined
 */
export declare function _0x559EBF901A8C68E0(): [boolean, any];
/**
 * Hash: 0x5ECD378EE64450AB | ApiSet: undefined
 */
export declare function _0x5ECD378EE64450AB(p0: any): void;
/**
 * Hash: 0x5539C3EBF104A53A | ApiSet: undefined
 */
export declare function _0x5539C3EBF104A53A(p0: boolean): void;
/**
 * Hash: 0x5A34CD9C3C5BEC44 | ApiSet: undefined
 */
export declare function _0x5A34CD9C3C5BEC44(p0: any): boolean;
/**
 * ```
 * IS_*
 * ```
 * Hash: 0x59328EB08C5CEB2B | ApiSet: undefined
 */
export declare function _0x59328EB08C5CEB2B(): boolean;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x5C497525F803486B | ApiSet: undefined
 */
export declare function _0x5C497525F803486B(): void;
/**
 * ```
 * Returns true if profile setting 901 is set to true and sets it to false.
 * NETWORK_C*
 * ```
 * Hash: 0x60EDD13EB3AC1FF3 | ApiSet: undefined
 */
export declare function _0x60EDD13EB3AC1FF3(): boolean;
/**
 * Hash: 0x584770794D758C18 | ApiSet: undefined
 */
export declare function _0x584770794D758C18(p0: any): [boolean, any];
/**
 * Hash: 0x5E3AA4CA2B6FB0EE | ApiSet: undefined
 */
export declare function _0x5E3AA4CA2B6FB0EE(p0: any): void;
/**
 * ```
 * NETWORK_GET_NUM_*
 * ```
 * Hash: 0x617F49C2668E6155 | ApiSet: undefined
 */
export declare function _0x617F49C2668E6155(): number;
/**
 * Hash: 0x600F8CB31C7AAB6E | ApiSet: undefined
 */
export declare function _0x600F8CB31C7AAB6E(p0: any): void;
/**
 * ```
 * NETWORK_GET_*
 * ```
 * Hash: 0x64D779659BC37B19 | ApiSet: undefined
 */
export declare function _0x64D779659BC37B19(entity: number | Entity): Vector3;
/**
 * Hardcoded to return false.
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x64E5C4CC82847B73 | ApiSet: undefined
 */
export declare function _0x64E5C4CC82847B73(): boolean;
/**
 * Hash: 0x63B406D7884BFA95 | ApiSet: undefined
 */
export declare function _0x63B406D7884BFA95(): any;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x6BFF5F84102DF80A | ApiSet: undefined
 */
export declare function _0x6BFF5F84102DF80A(player: number | string | Player): void;
/**
 * Hash: 0x67FC09BC554A75E5 | ApiSet: undefined
 */
export declare function _0x67FC09BC554A75E5(): any;
/**
 * Hash: 0x692D58DF40657E8C | ApiSet: undefined
 */
export declare function _0x692D58DF40657E8C(p0: any, p1: any, p2: any, p4: any, p5: boolean): [boolean, any];
/**
 * Hash: 0x6CE50E47F5543D0C | ApiSet: undefined
 */
export declare function _0x6CE50E47F5543D0C(): void;
/**
 * Hash: 0x68103E2247887242 | ApiSet: undefined
 */
export declare function _0x68103E2247887242(): void;
/**
 * ```
 * Sets some voice chat related value.
 * NETWORK_SET_*
 * ```
 * Hash: 0x6A5D89D7769A40D8 | ApiSet: undefined
 */
export declare function _0x6A5D89D7769A40D8(toggle: boolean): void;
/**
 * Hash: 0x702BC4D605522539 | ApiSet: undefined
 */
export declare function _0x702BC4D605522539(p0: any): void;
/**
 * Hash: 0x6FB7BB3607D27FA2 | ApiSet: undefined
 */
export declare function _0x6FB7BB3607D27FA2(): any;
/**
 * ```
 * Does nothing (it's a nullsub).
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x6FD992C4A1C1B986 | ApiSet: undefined
 */
export declare function _0x6FD992C4A1C1B986(): void;
/**
 * ```
 * Has something to do with a host request.
 * NETWORK_RE*
 * ```
 * Hash: 0x741A3D8380319A81 | ApiSet: undefined
 */
export declare function _0x741A3D8380319A81(): void;
/**
 * Hash: 0x742B58F723233ED9 | ApiSet: undefined
 */
export declare function _0x742B58F723233ED9(p0: any): any;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x76B3F29D3F967692 | ApiSet: undefined
 */
export declare function _0x76B3F29D3F967692(p0: any, p1: any): void;
/**
 * ```
 * Checks some commerce stuff
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x754615490A029508 | ApiSet: undefined
 */
export declare function _0x754615490A029508(): number;
/**
 * Hash: 0x7808619F31FF22DB | ApiSet: undefined
 */
export declare function _0x7808619F31FF22DB(): any;
/**
 * Hash: 0x78321BEA235FD8CD | ApiSet: undefined
 */
export declare function _0x78321BEA235FD8CD(p0: any, p1: boolean): boolean;
/**
 * Hash: 0x7D395EA61622E116 | ApiSet: undefined
 */
export declare function _0x7D395EA61622E116(p0: boolean): void;
/**
 * Hash: 0x793FF272D5B365F4 | ApiSet: undefined
 */
export declare function _0x793FF272D5B365F4(): any;
/**
 * ```
 * Hardcoded to return zero.
 * ==== PS4 specific info ====
 * Returns some sort of unavailable reason:
 * -1 = REASON_INVALID
 * 0 = REASON_OTHER
 * 1 = REASON_SYSTEM_UPDATE
 * 2 = REASON_GAME_UPDATE
 * 3 = REASON_SIGNED_OUT
 * 4 = REASON_AGE
 * 5 = REASON_CONNECTION
 * =================================
 * ```
 * Hash: 0x74FB3E29E6D10FA9 | ApiSet: undefined
 */
export declare function _0x74FB3E29E6D10FA9(): number;
/**
 * ```
 * IS_*
 * ```
 * Hash: 0x7EF7649B64D7FF10 | ApiSet: undefined
 */
export declare function _0x7EF7649B64D7FF10(entity: number | Entity): boolean;
/**
 * Hash: 0x77FADDCBE3499DF7 | ApiSet: undefined
 */
export declare function _0x77FADDCBE3499DF7(p0: any): void;
/**
 * Hash: 0x83FE8D7229593017 | ApiSet: undefined
 */
export declare function _0x83FE8D7229593017(): void;
/**
 * Hash: 0x7DB53B37A2F211A0 | ApiSet: undefined
 */
export declare function _0x7DB53B37A2F211A0(): number;
/**
 * NETWORK_SET_\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x8EF52ACAECC51D9C | ApiSet: undefined
 */
export declare function _0x8EF52ACAECC51D9C(toggle: boolean): void;
/**
 * Hash: 0x83660B734994124D | ApiSet: undefined
 */
export declare function _0x83660B734994124D(p0: any, p1: any): [any, number];
/**
 * Hash: 0x8B4FFC790CA131EF | ApiSet: undefined
 */
export declare function _0x8B4FFC790CA131EF(p0: any, p1: any, p2: any, p3: any): any;
/**
 * Hash: 0x7FCC39C46C3C03BD | ApiSet: undefined
 */
export declare function _0x7FCC39C46C3C03BD(p0: number): boolean;
/**
 * Hash: 0x88B588B41FF7868E | ApiSet: undefined
 */
export declare function _0x88B588B41FF7868E(): any;
/**
 * Hash: 0x94538037EE44F5CF | ApiSet: undefined
 */
export declare function _0x94538037EE44F5CF(p0: boolean): void;
/**
 * Hash: 0x8B0C2964BA471961 | ApiSet: undefined
 */
export declare function _0x8B0C2964BA471961(): any;
/**
 * Hash: 0x9465E683B12D3F6B | ApiSet: undefined
 */
export declare function _0x9465E683B12D3F6B(): void;
/**
 * Hash: 0x973D76AA760A6CB6 | ApiSet: undefined
 */
export declare function _0x973D76AA760A6CB6(p0: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x906CA41A4B74ECA4 | ApiSet: undefined
 */
export declare function _0x906CA41A4B74ECA4(): any;
/**
 * Hash: 0x8C8D2739BA44AF0F | ApiSet: undefined
 */
export declare function _0x8C8D2739BA44AF0F(p0: any): boolean;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x9D724B400A7E8FFC | ApiSet: undefined
 */
export declare function _0x9D724B400A7E8FFC(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x95BAF97C82464629 | ApiSet: undefined
 */
export declare function _0x95BAF97C82464629(p0: any, p1: any): void;
/**
 * ```
 * Sets some voice chat related value.
 * NETWORK_SET_*
 * ```
 * Hash: 0x9D7AFCBF21C51712 | ApiSet: undefined
 */
export declare function _0x9D7AFCBF21C51712(toggle: boolean): void;
/**
 * Hash: 0x9FEDF86898F100E9 | ApiSet: undefined
 */
export declare function _0x9FEDF86898F100E9(): any;
/**
 * Hash: 0xA0FA4EC6A05DA44E | ApiSet: undefined
 */
export declare function _0xA0FA4EC6A05DA44E(): any;
/**
 * ```
 * Appears to set whether a transition should be started when the session is migrating.
 * NETWORK_SET_*
 * ```
 * Hash: 0xA2E9C1AB8A92E8CD | ApiSet: undefined
 */
export declare function _0xA2E9C1AB8A92E8CD(toggle: boolean): void;
/**
 * Hash: 0xA12D3A5A3753CC23 | ApiSet: undefined
 */
export declare function _0xA12D3A5A3753CC23(): any;
/**
 * Hash: 0xA306F470D1660581 | ApiSet: undefined
 */
export declare function _0xA306F470D1660581(): any;
/**
 * ```
 * NativeDB Added Parameter 1: Entity entity
 * ```
 * Hash: 0xAA5FAFCD2C5F5E47 | ApiSet: undefined
 */
export declare function _0xAA5FAFCD2C5F5E47(): Vector3;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xA6FCECCF4721D679 | ApiSet: undefined
 */
export declare function _0xA6FCECCF4721D679(p0: any): void;
/**
 * Hash: 0xA8ACB6459542A8C8 | ApiSet: undefined
 */
export declare function _0xA8ACB6459542A8C8(): any;
/**
 * Hash: 0xA7862BC5ED1DFD7E | ApiSet: undefined
 */
export declare function _0xA7862BC5ED1DFD7E(p0: any, p1: any): [boolean, any, any];
/**
 * ```
 * gets 2 floats from the CNetGamePlayer of p0 and stores them in p1 and p2.
 * Possibly waypoint?
 * ```
 * Hash: 0xADB57E5B663CCA8B | ApiSet: undefined
 */
export declare function _0xADB57E5B663CCA8B(p0: number | string | Player): [number, number];
/**
 * Hash: 0xAEAB987727C5A8A4 | ApiSet: undefined
 */
export declare function _0xAEAB987727C5A8A4(p0: any): boolean;
/**
 * Hash: 0xB13E88E655E5A3BC | ApiSet: undefined
 */
export declare function _0xB13E88E655E5A3BC(): void;
/**
 * ```
 * Does nothing (it's a nullsub).
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xAEDF1BC1C133D6E3 | ApiSet: undefined
 */
export declare function _0xAEDF1BC1C133D6E3(): void;
/**
 * Hash: 0xB5D3453C98456528 | ApiSet: undefined
 */
export declare function _0xB5D3453C98456528(): any;
/**
 * Hash: 0xB37E4E6A2388CA7B | ApiSet: undefined
 */
export declare function _0xB37E4E6A2388CA7B(): boolean;
/**
 * Hash: 0xB309EBEA797E001F | ApiSet: undefined
 */
export declare function _0xB309EBEA797E001F(p0: any): any;
/**
 * ```
 * NETWORK_SESSION_IS_*
 * ```
 * Hash: 0xBDB6F89C729CF388 | ApiSet: undefined
 */
export declare function _0xBDB6F89C729CF388(): boolean;
/**
 * Hash: 0xBD545D44CCE70597 | ApiSet: undefined
 */
export declare function _0xBD545D44CCE70597(): boolean;
/**
 * Hash: 0xB746D20B17F2A229 | ApiSet: undefined
 */
export declare function _0xB746D20B17F2A229(): [boolean, any, any];
/**
 * Hash: 0xC32EA7A2F6CA7557 | ApiSet: undefined
 */
export declare function _0xC32EA7A2F6CA7557(): any;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0xB606E6CC59664972 | ApiSet: undefined
 */
export declare function _0xB606E6CC59664972(p0: any): void;
/**
 * Hash: 0xBF22E0F32968E967 | ApiSet: undefined
 */
export declare function _0xBF22E0F32968E967(player: number | string | Player, p1: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0xB9351A07A0D458B1 | ApiSet: undefined
 */
export declare function _0xB9351A07A0D458B1(p0: any): any;
/**
 * Hash: 0xBA7F0B77D80A4EB7 | ApiSet: undefined
 */
export declare function _0xBA7F0B77D80A4EB7(p0: any, p1: any): void;
/**
 * Hash: 0xC434133D9BA52777 | ApiSet: undefined
 */
export declare function _0xC434133D9BA52777(p0: any): [any, number];
/**
 * Hash: 0xC42DD763159F3461 | ApiSet: undefined
 */
export declare function _0xC42DD763159F3461(): boolean;
/**
 * NETWORK_S\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xCA59CCAE5D01E4CE | ApiSet: undefined
 */
export declare function _0xCA59CCAE5D01E4CE(): void;
/**
 * Hash: 0xC87E740D9F3872CC | ApiSet: undefined
 */
export declare function _0xC87E740D9F3872CC(): any;
/**
 * Hash: 0xCA575C391FEA25CC | ApiSet: undefined
 */
export declare function _0xCA575C391FEA25CC(p0: any): void;
/**
 * Hash: 0xCFEB46DCD7D8D5EB | ApiSet: undefined
 */
export declare function _0xCFEB46DCD7D8D5EB(p0: boolean): void;
/**
 * ```
 * NETWORK_SESSION_IS_*
 * ```
 * Hash: 0xD313DE83394AF134 | ApiSet: undefined
 */
export declare function _0xD313DE83394AF134(): boolean;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0xD6D7478CA62B8D41 | ApiSet: undefined
 */
export declare function _0xD6D7478CA62B8D41(p0: any, p1: any): void;
/**
 * Hash: 0xE16AA70CE9BEEDC3 | ApiSet: undefined
 */
export declare function _0xE16AA70CE9BEEDC3(p0: any): any;
/**
 * ```
 * NETWORK_IS_TRANSITION_*
 * ```
 * Hash: 0xC571D0E77D8BBC29 | ApiSet: undefined
 */
export declare function _0xC571D0E77D8BBC29(): boolean;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xDB663CC9FF3407A9 | ApiSet: undefined
 */
export declare function _0xDB663CC9FF3407A9(player: number | string | Player): number;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xE42D626EEC94E5D9 | ApiSet: undefined
 */
export declare function _0xE42D626EEC94E5D9(p0: any, p1: any, p2: any, p3: any): [number, number, number];
/**
 * Hash: 0xE6717E652B8C8D8A | ApiSet: undefined
 */
export declare function _0xE6717E652B8C8D8A(p0: any, p1: any): void;
/**
 * Hash: 0xCFEB8AF24FC1D0BB | ApiSet: undefined
 */
export declare function networkBlockJoinQueueInvites(toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0xEA8C0DDB10E2822A | ApiSet: undefined
 */
export declare function _0xEA8C0DDB10E2822A(p0: any, p1: any): void;
/**
 * Hash: 0xD7B6C73CAD419BCF | ApiSet: undefined
 */
export declare function _0xD7B6C73CAD419BCF(p0: boolean): void;
/**
 * Hash: 0xEBF8284D8CADEB53 | ApiSet: undefined
 */
export declare function _0xEBF8284D8CADEB53(): void;
/**
 * Hash: 0xEBFA8D50ADDC54C4 | ApiSet: undefined
 */
export declare function _0xEBFA8D50ADDC54C4(p0: any): boolean;
/**
 * ```
 * NETWORK_RE*
 * ```
 * Hash: 0xF083835B70BA9BFE | ApiSet: undefined
 */
export declare function _0xF083835B70BA9BFE(): void;
/**
 * Hash: 0xEBCAB9E5048434F4 | ApiSet: undefined
 */
export declare function _0xEBCAB9E5048434F4(): any;
/**
 * Hash: 0xF6F4383B7C92F11A | ApiSet: undefined
 */
export declare function _0xF6F4383B7C92F11A(p0: any): void;
/**
 * Hash: 0xF49ABC20D8552257 | ApiSet: undefined
 */
export declare function _0xF49ABC20D8552257(p0: any): void;
/**
 * Hash: 0xF814FEC6A19FD6E0 | ApiSet: undefined
 */
export declare function _0xF814FEC6A19FD6E0(): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0xFAC18E7356BD3210 | ApiSet: undefined
 */
export declare function _0xFAC18E7356BD3210(): void;
/**
 * Hash: 0xF287F506767CC8A9 | ApiSet: undefined
 */
export declare function _0xF287F506767CC8A9(): any;
/**
 * Hash: 0xFAE628F1E9ADB239 | ApiSet: undefined
 */
export declare function _0xFAE628F1E9ADB239(p0: number | string, p1: number, p2: number | string): void;
/**
 * Hash: 0xFA2888E3833C8E96 | ApiSet: undefined
 */
export declare function _0xFA2888E3833C8E96(): void;
/**
 * ```
 * gets the entity id of a network id
 * ```
 * Hash: 0xBFFEAB45A9A9094A | ApiSet: undefined
 */
export declare function netToEnt(netHandle: number): number;
/**
 * ```
 * NETWORK_RE*
 * Triggers a CEventNetworkInviteConfirmed event
 * ```
 * Hash: 0x62A0296C1BB1CEB3 | ApiSet: undefined
 */
export declare function networkAcceptInvite(): boolean;
/**
 * Hash: 0xFB680D403909DC70 | ApiSet: undefined
 */
export declare function _0xFB680D403909DC70(p0: any, p1: any): void;
/**
 * ```
 * p0 is always 0. p1 is pointing to a global.
 * ```
 * Hash: 0xFB1F9381E80FA13F | ApiSet: undefined
 */
export declare function _0xFB1F9381E80FA13F(p0: number): [any, any];
/**
 * Hash: 0xFD75DABC0957BF33 | ApiSet: undefined
 */
export declare function _0xFD75DABC0957BF33(p0: boolean): void;
/**
 * Hash: 0x972BC203BBC4C4D5 | ApiSet: undefined
 */
export declare function networkAccessTunableFloatHash(tunableContext: number | string, tunableName: number | string): [boolean, number];
/**
 * ```
 * gets the object id of a network id
 * ```
 * Hash: 0xD8515F5FEA14CB3F | ApiSet: undefined
 */
export declare function netToObj(netHandle: number): any;
/**
 * ```
 * gets the ped id of a network id
 * ```
 * Hash: 0xBDCD95FC216A8B3E | ApiSet: undefined
 */
export declare function netToPed(netHandle: number): number;
/**
 * Hash: 0x367B936610BA360C | ApiSet: undefined
 */
export declare function netToVeh(netHandle: number): number;
/**
 * Hash: 0xAA6A47A573ABB75A | ApiSet: undefined
 */
export declare function networkAccessTunableBool(tunableContext: string, tunableName: string): boolean;
/**
 * Hash: 0xFA91550DF9318B22 | ApiSet: undefined
 */
export declare function networkAcceptPresenceInvite(p0: any): boolean;
/**
 * Hash: 0xEA16B69D93D71A45 | ApiSet: undefined
 */
export declare function networkAccessTunableBoolHash(tunableContext: number | string, tunableName: number | string): boolean;
/**
 * Hash: 0xE5608CA7BC163A5F | ApiSet: undefined
 */
export declare function networkAccessTunableFloat(tunableContext: string, tunableName: string): [boolean, number];
/**
 * Hash: 0x8BE1146DFD5D4468 | ApiSet: undefined
 */
export declare function networkAccessTunableInt(tunableContext: string, tunableName: string): [boolean, number];
/**
 * Hash: 0x40FCE03E50E8DBE8 | ApiSet: undefined
 */
export declare function networkAccessTunableIntHash(tunableContext: number | string, tunableName: number | string): [boolean, number];
/**
 * To remove, see: [`NETWORK_REMOVE_ENTITY_AREA`](#\_0x93CF869BAA0C4874).
 * See [`IS_POINT_IN_ANGLED_AREA`](#\_0x2A70BAE8883E4C81) for the definition of an angled area.
 * Hash: 0x376C6375BA60293A | ApiSet: undefined
 */
export declare function networkAddEntityAngledArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number): any;
/**
 * Hash: 0xC88156EBB786F8D5 | ApiSet: undefined
 */
export declare function networkActionFollowInvite(): any;
/**
 * Hash: 0x25B99872D588A101 | ApiSet: undefined
 */
export declare function networkAddEntityDisplayedBoundaries(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): any;
/**
 * Hash: 0x494C8FB299290269 | ApiSet: undefined
 */
export declare function networkAddEntityArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number): any;
/**
 * Hash: 0x8E02D73914064223 | ApiSet: undefined
 */
export declare function networkAddFriend(message: string): [boolean, number];
/**
 * Adds an entity to a network synchronised scene.
 * Hash: 0xF2404D68CBC855FA | ApiSet: undefined
 */
export declare function networkAddEntityToSynchronisedScene(entity: number | Entity, netScene: number, animDict: string, animName: string, blendIn: number, blendOut: number, flag: number): void;
/**
 * ```
 * ..
 * ```
 * Hash: 0x236406F60CF216D6 | ApiSet: undefined
 */
export declare function networkAddFollowers(p1: number): number;
/**
 * Adds a map entity to a network synchronized scene. This native function is utilized only once as of game build 2944 within the casino_slots script.
 * Please note that it's only possible to add a single map entity to synchronised scenes.
 * It's advisable to initially locate the object and retrieve its actual coordinates using [`GET_CLOSEST_OBJECT_OF_TYPE`](#\_0xE143FA2249364369).
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x45F35C0EDC33B03B | ApiSet: undefined
 */
export declare function networkAddMapEntityToSynchronisedScene(netScene: number, modelHash: number | string, position: Vector3, animDict: string, animName: string, blendInSpeed: number, blendOutSpeed: number, flags: number): void;
/**
 * Hash: 0xCF8BD3B0BD6D42D7 | ApiSet: undefined
 */
export declare function networkAddSynchronisedSceneCamera(netScene: number, animDict: string, animName: string): void;
/**
 * Adds a ped to a networked synchronized scene but extends [`NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE`](#\_0x742A637471BCECD9) to support IK flags.
 * There is barely any difference between this and [`NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE`](#\_0x742A637471BCECD9).
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xA5EAFE473E45C442 | ApiSet: undefined
 */
export declare function networkAddPedToSynchronisedSceneWithIk(ped: number | Ped, netSceneID: number, animDict: string, animClip: string, blendIn: number, blendOut: number, sceneFlags: number, ragdollFlags: number, moverBlendInDelta: number, ikFlags: number): void;
/**
 * Adds a ped to a networked synchronised scene.
 * Synchronized scene playback flags (Also works in other `NETWORK_ADD_*_TO_SYNCHRONISED_SCENE` natives):
 * | Value     |                  Name                     |                                                             Notes                                                                |
 * | :-------: | :---------------------------------------: | :------------------------------------------------------------------------------------------------------------------------------: |
 * | `0`       |  None                                     | No flag set.                                                                                                                     |
 * | `1`       | USE_PHYSICS                               | Allows the ped to have physics during the scene.                                                                                 |
 * | `2`       | TAG_SYNC_OUT                              | The task will do a tag synchronized blend out with the movement behaviour of the ped.                                            |
 * | `4`       | DONT_INTERRUPT                            | The scene will not be interrupted by external events.                                                                            |
 * | `8`       | ON_ABORT_STOP_SCENE                       | The scene will be stopped if the scripted task is aborted.                                                                       |
 * | `16`      | ABORT_ON_WEAPON_DAMAGE                    | The scene will be stopped if the ped is damaged by a weapon.                                                                     |
 * | `32`      | BLOCK_MOVER_UPDATE                        | The task will not update the mover.                                                                                              |
 * | `64`      | LOOP_WITHIN_SCENE                         | Animations within this scene will be looped until the scene is finished.                                                         |
 * | `128`     | PRESERVE_VELOCITY                         | The task will keep it's velocity when the scene is cleaned up/stopped. Do note that the `USE_PHYSICS` flag must also be present. |
 * | `256`     | EXPAND_PED_CAPSULE_FROM_SKELETON          | The task will apply the `ExpandPedCapsuleFromSkeleton` reset flag to the ped (See [`SET_PED_RESET_FLAG`](#\_0xC1E8A365BF3B29F2)). |
 * | `512`     | ACTIVATE_RAGDOLL_ON_COLLISION             | The ped will be ragdoll if it comes in contact with an object.                                                                   |
 * | `1024`    | HIDE_WEAPON                               | The ped's current weapon will be hidden during the scene.                                                                        |
 * | `2048`    | ABORT_ON_DEATH                            | The synchronised scene will be aborted if the ped dies.                                                                          |
 * | `4096`    | VEHICLE_ABORT_ON_LARGE_IMPACT             | If the scene is running on a vehicle, then it will be aborted if the vehicle takes a heavy collision with another vehicle.       |
 * | `8192`    | VEHICLE_ALLOW_PLAYER_ENTRY                | If the scene is on a vehicle, it allows players to enter it.                                                                     |
 * | `16384`   | PROCESS_ATTACHMENTS_ON_START              | Attachments will be processed at the start of the scene.                                                                         |
 * | `32768`   | NET_ON_EARLY_NON_PED_STOP_RETURN_TO_START | A non-ped entity will be returned to their starting position if the scene finishes early.                                        |
 * | `65536`   | SET_PED_OUT_OF_VEHICLE_AT_START           | If the ped is in a vehicle when the scene starts, it will be set out of the vehicle.                                             |
 * | `131072`  | NET_DISREGARD_ATTACHMENT_CHECKS           | Attachment checks will be disregarded when the scene is running.                                                                 |
 * These flags can be combined with the `|` operator.
 * Hash: 0x742A637471BCECD9 | ApiSet: undefined
 */
export declare function networkAddPedToSynchronisedScene(ped: number | Ped, netScene: number, animDict: string, animClip: string, blendInSpeed: number, blendOutSpeed: number, syncedSceneFlags: number, ragdollFlags: number, moverBlendInDelta: number, ikFlags: number): void;
/**
 * Hash: 0xFAFC23AEE23868DB | ApiSet: undefined
 */
export declare function networkAllocateTunablesRegistrationDataMap(): boolean;
/**
 * Hash: 0x15337C7C268A27B2 | ApiSet: undefined
 */
export declare function networkAmIBlockedByGamer(): [boolean, any];
/**
 * Allows scripts to use attachment commands on entities (eg. [`ATTACH_ENTITY_TO_ENTITY`](#\_0x6B9BBD38AB0796DF)) that are not controlled by the client.
 * **Note:** This is only local and does not affect entities on other machines. This is used by the ferris wheel script to sync players on carts.
 * Hash: 0x267C78C60E806B9A | ApiSet: undefined
 */
export declare function networkAllowRemoteAttachmentModification(entity: number | Entity, toggle: boolean): void;
/**
 * Hash: 0xDF02A2C93F1F26DA | ApiSet: undefined
 */
export declare function networkAmIMutedByGamer(): [boolean, any];
/**
 * Hash: 0x521638ADA1BA0D18 | ApiSet: undefined
 */
export declare function networkApplyTransitionParameter(p0: number, p1: number): void;
/**
 * Hash: 0x87F395D957D4353D | ApiSet: undefined
 */
export declare function networkAmIBlockedByPlayer(player: number | string | Player): boolean;
/**
 * Hash: 0x9D6981DFC91A8604 | ApiSet: undefined
 */
export declare function networkAmIMutedByPlayer(player: number | string | Player): boolean;
/**
 * Hash: 0xE66C690248F11150 | ApiSet: undefined
 */
export declare function networkApplyPedScarData(ped: number | Ped, p1: number): void;
/**
 * Hash: 0x99B72C7ABDE5C910 | ApiSet: undefined
 */
export declare function networkApplyCachedPlayerHeadBlendData(ped: number | Ped, player: number | string | Player): boolean;
/**
 * Hash: 0xEBEFC2E77084F599 | ApiSet: undefined
 */
export declare function networkApplyTransitionParameterString(p0: number, string: string, p2: boolean): void;
/**
 * ```
 * Getter for SET_NETWORK_CUTSCENE_ENTITIES.
 * ```
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x66D6A5E9C511214A | ApiSet: undefined
 */
export declare function networkAreCutsceneEntities(): boolean;
/**
 * Hash: 0x57DBA049E110F217 | ApiSet: undefined
 */
export declare function networkAreHandlesTheSame(): [boolean, number, number];
/**
 * Hash: 0xDBD2056652689917 | ApiSet: undefined
 */
export declare function networkApplyVoiceProximityOverride(position: Vector3): void;
/**
 * Hash: 0x2615AA2A695930C1 | ApiSet: undefined
 */
export declare function networkAreTransitionDetailsValid(p0: any): boolean;
/**
 * Hash: 0xBA9775570DB788CF | ApiSet: undefined
 */
export declare function networkAreSocialClubPoliciesCurrent(): boolean;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x023782EFC70585EE | ApiSet: undefined
 */
export declare function networkBailTransitionQuickmatch(): void;
/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * NativeDB Added Parameter 2: int p1
 * NativeDB Added Parameter 3: int p2
 * ```
 * Hash: 0xEAA572036990CD1B | ApiSet: undefined
 */
export declare function networkBailTransition(): void;
/**
 * Hash: 0x478DCBD2A98B705A | ApiSet: undefined
 */
export declare function networkAttachSynchronisedSceneToEntity(netScene: number, entity: number | Entity, bone: number): void;
/**
 * Hash: 0xBD0BE0BFC927EAC1 | ApiSet: undefined
 */
export declare function networkCacheLocalPlayerHeadBlendData(): void;
/**
 * ```
 * NativeDB Added Parameter 1: int p0
 * NativeDB Added Parameter 2: int p1
 * NativeDB Added Parameter 3: int p2
 * ```
 * Hash: 0x95914459A87EBA28 | ApiSet: undefined
 */
export declare function networkBail(): void;
/**
 * Hash: 0x6B07B9CE4D390375 | ApiSet: undefined
 */
export declare function networkBlockKickedPlayers(p0: boolean): void;
/**
 * Hash: 0x34F9E9049454A7A0 | ApiSet: undefined
 */
export declare function networkBlockInvites(toggle: boolean): void;
/**
 * Hash: 0x580CE4438479CC61 | ApiSet: undefined
 */
export declare function networkCanBail(): boolean;
/**
 * Hash: 0xA150A4F065806B1F | ApiSet: undefined
 */
export declare function networkCanCommunicateWithGamer(): [boolean, number];
/**
 * ```
 * 11 - Need to download tunables.
 * 12 - Need to download background script.
 * Returns 1 if the multiplayer is loaded, otherwhise 0.
 * ```
 * Hash: 0xAF50DA1A3F8B1BA4 | ApiSet: undefined
 */
export declare function networkCanAccessMultiplayer(): [boolean, number];
/**
 * Hash: 0x07DD29D5E22763F1 | ApiSet: undefined
 */
export declare function networkCanPlayMultiplayerWithGamer(): [boolean, any];
/**
 * Hash: 0x135F9B7B7ADD2185 | ApiSet: undefined
 */
export declare function networkCanGamerPlayMultiplayerWithMe(): [boolean, any];
/**
 * Hash: 0x7E782A910C362C25 | ApiSet: undefined
 */
export declare function networkCanEnterMultiplayer(): boolean;
/**
 * Hash: 0xC927EC229934AF60 | ApiSet: undefined
 */
export declare function networkCanSetWaypoint(): boolean;
/**
 * Hash: 0xB57A49545BA53CE7 | ApiSet: undefined
 */
export declare function networkCanViewGamerUserContent(): [boolean, any];
/**
 * Hash: 0x4EEBC3694E49C572 | ApiSet: undefined
 */
export declare function networkCanSessionEnd(): boolean;
/**
 * ```
 * Same as NETWORK_CAN_COMMUNICATE_WITH_GAMER
 * NETWORK_CAN_*
 * ```
 * Hash: 0x8F5D1AD832AEB06C | ApiSet: undefined
 */
export declare function networkCanCommunicateWithGamer2(): [boolean, any];
/**
 * Hash: 0xFB8F2A6F3DF08CBE | ApiSet: undefined
 */
export declare function networkCancelRespawnSearch(): void;
/**
 * Hash: 0xEEEDA5E6D7080987 | ApiSet: undefined
 */
export declare function networkChangeTransitionSlots(p0: any, p1: any): void;
/**
 * Hash: 0x83F28CE49FBBFFBA | ApiSet: undefined
 */
export declare function networkCheckCommunicationPrivileges(p0: number, p1: number, p2: boolean): boolean;
/**
 * Hash: 0xB3F64A6A91432477 | ApiSet: undefined
 */
export declare function networkClanAnyDownloadMembershipPending(): boolean;
/**
 * ```
 * Only documented...
 * ```
 * Hash: 0x729E3401F0430686 | ApiSet: undefined
 */
export declare function networkClanAnimation(animDict: string, animName: string): boolean;
/**
 * Hash: 0x595F028698072DD9 | ApiSet: undefined
 */
export declare function networkCheckUserContentPrivileges(p0: number, p1: number, p2: boolean): boolean;
/**
 * Hash: 0x5B9E023DC6EBEDC0 | ApiSet: undefined
 */
export declare function networkClanDownloadMembershipPending(): [boolean, any];
/**
 * Checks if the friendDataIndex in the friend data manager contains the data for the specified networkHandle
 * Hash: 0x44B37CDCAE765AAE | ApiSet: undefined
 */
export declare function networkCheckDataManagerSucceededForHandle(friendDataIndex: number): [boolean, number];
/**
 * Hash: 0xAAB11F6C4ADBC2C1 | ApiSet: undefined
 */
export declare function networkClanGetMembershipCount(): [number, number];
/**
 * Hash: 0xA989044E70010ABE | ApiSet: undefined
 */
export declare function networkClanDownloadMembership(): [boolean, number];
/**
 * Hash: 0x48DE78AF2C8885B8 | ApiSet: undefined
 */
export declare function networkClanGetMembershipDesc(p1: number): [boolean, number];
/**
 * Hash: 0x1F471B79ACC90BEF | ApiSet: undefined
 */
export declare function networkClanGetLocalMembershipsCount(): number;
/**
 * Checks if a crew/membership for a player, from the cache (i.e. downloaded via NETWORK_CLAN_DOWNLOAD_MEMBERSHIP) is valid.
 * Hash: 0x48A59CF88D43DF0E | ApiSet: undefined
 */
export declare function networkClanGetMembershipValid(membershipIndex: number): [boolean, number];
/**
 * Hash: 0xA134777FF7F33331 | ApiSet: undefined
 */
export declare function networkClanIsEmblemReady(p0: any): [boolean, any];
/**
 * Hash: 0x5835D9CD92E83184 | ApiSet: undefined
 */
export declare function networkClanGetEmblemTxdName(): [boolean, any, string];
/**
 * Retrieves a membership for a player, from the cache (i.e. downloaded via NETWORK_CLAN_DOWNLOAD_MEMBERSHIP).
 * Test C++ code:
 * https://pastebin.com/CD8wni4C
 * Hash: 0xC8BC2011F67B3411 | ApiSet: undefined
 */
export declare function networkClanGetMembership(membershipIndex: number): [boolean, number, number];
/**
 * ```
 * bufferSize is 35 in the scripts.
 * `bufferSize is the elementCount of p0(desc), sizeof(p0) == 280 == p1*8 == 35 * 8, p2(netHandle) is obtained from NETWORK::NETWORK_HANDLE_FROM_PLAYER.  And no, I can't explain why 35 * sizeof(int) == 280 and not 140, but I'll get back to you on that.`
 * the answer is: because p0 an int64_t* / int64_t[35].  and FYI p2 is an int64_t[13]
 * pastebin.com/cSZniHak
 * ```
 * Hash: 0xEEE6EACBE8874FBA | ApiSet: undefined
 */
export declare function networkClanPlayerGetDesc(bufferSize: number): [boolean, number, number];
/**
 * Hash: 0x9FAAA4F4FC71F87F | ApiSet: undefined
 */
export declare function networkClanJoin(clanDesc: number): boolean;
/**
 * ```
 * bufferSize is 35 in the scripts.
 * ```
 * Hash: 0xF45352426FF3A4F0 | ApiSet: undefined
 */
export declare function networkClanGetUiFormattedTag(bufferSize: number, formattedTag: string): number;
/**
 * ```
 * bufferSize is 35 in the scripts.
 * ```
 * Hash: 0x7543BB439F63792B | ApiSet: undefined
 */
export declare function networkClanIsRockstarClan(bufferSize: number): [boolean, number];
/**
 * Hash: 0x13518FF1C6B28938 | ApiSet: undefined
 */
export declare function networkClanRequestEmblem(p0: any): boolean;
/**
 * Hash: 0xBB6E6FEE99D866B2 | ApiSet: undefined
 */
export declare function networkClanRemoteMembershipsAreInCache(): [boolean, number];
/**
 * Hash: 0xB124B57F571D8F18 | ApiSet: undefined
 */
export declare function networkClanPlayerIsActive(): [boolean, number];
/**
 * Hash: 0x113E6E3E50E286B0 | ApiSet: undefined
 */
export declare function networkClanReleaseEmblem(p0: any): void;
/**
 * Hash: 0x6D14CCEE1B40381A | ApiSet: undefined
 */
export declare function networkClearFoundGamers(): void;
/**
 * Hash: 0x058F43EC59A8631A | ApiSet: undefined
 */
export declare function networkClearFollowers(): void;
/**
 * Hash: 0x579CCED0265D4896 | ApiSet: undefined
 */
export declare function networkClanServiceIsValid(): boolean;
/**
 * Hash: 0xD972DF67326F966E | ApiSet: undefined
 */
export declare function networkClearClockTimeOverride(): void;
/**
 * Hash: 0x439BFDE3CD0610F6 | ApiSet: undefined
 */
export declare function networkClearFollowInvite(): any;
/**
 * Hash: 0xFB3272229A82C759 | ApiSet: undefined
 */
export declare function networkClearTransitionCreatorHandle(): void;
/**
 * Hash: 0x1888694923EF4591 | ApiSet: undefined
 */
export declare function networkClearGroupActivity(): void;
/**
 * Hash: 0x86E0660E4F5C956D | ApiSet: undefined
 */
export declare function networkClearGetGamerStatus(): void;
/**
 * Hash: 0xE036A705F989E049 | ApiSet: undefined
 */
export declare function networkClearVoiceChannel(): void;
/**
 * Hash: 0x43F4DBA69710E01E | ApiSet: undefined
 */
export declare function networkCloseTransitionMatchmaking(): void;
/**
 * Hash: 0xF03755696450470C | ApiSet: undefined
 */
export declare function networkClearVoiceProximityOverride(): void;
/**
 * Hash: 0xC2B82527CA77053E | ApiSet: undefined
 */
export declare function networkClearPropertyId(): void;
/**
 * Creates a networked synchronized scene.
 * Be sure to actually start the scene with [`NETWORK_START_SYNCHRONISED_SCENE`](#\_0x9A1B3FCDB36C8697) after you're done adding peds or entities to the scene.
 * Hash: 0x7CD6BC4C2BBDD526 | ApiSet: undefined
 */
export declare function networkCreateSynchronisedScene(position: Vector3, xRot: number, yRot: number, zRot: number, rotationOrder: number, holdLastFrame: boolean, looped: boolean, phaseToStopScene: number, phaseToStartScene: number, animSpeed: number): number;
/**
 * Hash: 0xF9B83B77929D8863 | ApiSet: undefined
 */
export declare function networkDidFindGamersSucceed(): boolean;
/**
 * This is what R\* uses to hide players in MP interiors.
 * To manage player visibility with NetworkConcealPlayer, here’s a solid approach:
 * <strong>General Population (players not in any instance):</strong>
 * *   Use NetworkConcealPlayer to hide players who are in any instance. This way, general population players won’t see or interact with instance players.
 * <strong>Instance Players (players in a specific instance):</strong>
 * *   Use NetworkConcealPlayer to hide players who aren’t in the same instance. Instance players can still see and interact with the general population but not with players in other instances.
 * This setup keeps instance players separate from each other while allowing interaction with the general population.
 * Hash: 0xBBDF066252829606 | ApiSet: undefined
 */
export declare function networkConcealPlayer(player: number | string | Player, toggle: boolean, bAllowDamagingWhileConcealed: boolean): void;
/**
 * Hash: 0x1632BE0AC1E62876 | ApiSet: undefined
 */
export declare function networkConcealEntity(entity: number | Entity, toggle: boolean): void;
/**
 * Hash: 0x407091CF6037118E | ApiSet: undefined
 */
export declare function networkDisableProximityMigration(netID: number): void;
/**
 * Hash: 0x9DD368BF06983221 | ApiSet: undefined
 */
export declare function networkDisableInvincibleFlashing(player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0xC505036A35AFD01B | ApiSet: undefined
 */
export declare function networkDisableLeaveRemotePedBehind(toggle: boolean): void;
/**
 * ```
 * Hardcoded to return -1.
 * ```
 * Hash: 0xD66C9E72B3CC4982 | ApiSet: undefined
 */
export declare function networkDisplaynamesFromHandlesStart(p1: any): [number, any];
/**
 * Hash: 0x5AE17C6B0134B7F1 | ApiSet: undefined
 */
export declare function networkDidGetGamerStatusSucceed(): boolean;
/**
 * ```
 * p2 is true 3/4 of the occurrences I found.
 * 'players' is the number of players for a session. On PS3/360 it's always 18. On PC it's 32.
 * ```
 * Hash: 0x3AAD8B2FCA1E289F | ApiSet: undefined
 */
export declare function networkDoTransitionToFreemode(p1: any, p2: boolean, players: number, p4: boolean): [boolean, any];
/**
 * ```
 * NativeDB Added Parameter 5: Any p4
 * NativeDB Added Parameter 6: Any p5
 * ```
 * Hash: 0x71FB0EBCD4915D56 | ApiSet: undefined
 */
export declare function networkDoTransitionQuickmatch(p0: any, p1: any, p2: any, p3: any): boolean;
/**
 * Hash: 0x3E9BB38102A589B0 | ApiSet: undefined
 */
export declare function networkDoTransitionToGame(p0: boolean, maxPlayers: number): boolean;
/**
 * ```
 * NativeDB Added Parameter 5: Any p4
 * NativeDB Added Parameter 6: Any p5
 * ```
 * Hash: 0xA091A5E44F0072E5 | ApiSet: undefined
 */
export declare function networkDoTransitionQuickmatchAsync(p0: any, p1: any, p2: any, p3: any): boolean;
/**
 * Hash: 0x85E5F8B9B898B20A | ApiSet: undefined
 */
export declare function networkDoesTunableExist(tunableContext: string, tunableName: string): boolean;
/**
 * Hash: 0x4665F51EFED00034 | ApiSet: undefined
 */
export declare function networkDoTransitionToNewGame(p0: boolean, maxPlayers: number, p2: boolean): boolean;
/**
 * ```
 * NativeDB Added Parameter 7: Any p6
 * NativeDB Added Parameter 8: Any p7
 * ```
 * Hash: 0x9C4AB58491FDC98A | ApiSet: undefined
 */
export declare function networkDoTransitionQuickmatchWithGroup(p0: any, p1: any, p2: any, p3: any, p5: any): [boolean, any];
/**
 * Hash: 0x9E80A5BA8109F974 | ApiSet: undefined
 */
export declare function networkDoTransitionToNewFreemode(players: number, p3: boolean, p4: boolean, p5: boolean): [boolean, any, any];
/**
 * Hash: 0xD0AFAFF5A51D72F7 | ApiSet: undefined
 */
export declare function networkEndTutorialSession(): void;
/**
 * Hash: 0x18A47D074708FD68 | ApiSet: undefined
 */
export declare function networkDoesEntityExistWithNetworkId(netId: number): boolean;
/**
 * Hash: 0x38CE16C96BD11344 | ApiSet: undefined
 */
export declare function networkDoesNetworkIdExist(netId: number): boolean;
/**
 * Hash: 0x2A5E0621DD815A9A | ApiSet: undefined
 */
export declare function networkExplodeHeli(heli: number | Vehicle, isAudible: boolean, isInvisible: boolean, netScriptEntityId: number): void;
/**
 * Hash: 0xE4E53E1419D81127 | ApiSet: undefined
 */
export declare function networkDoesTunableExistHash(tunableContext: number | string, tunableName: number | string): boolean;
/**
 * Hash: 0xE64A3CA08DFA37A9 | ApiSet: undefined
 */
export declare function networkEntityAreaDoesExist(areaHandle: number): boolean;
/**
 * Hash: 0x4A2D4E8BF4265B0F | ApiSet: undefined
 */
export declare function networkEntityAreaIsOccupied(areaHandle: number): boolean;
/**
 * ```
 * In the console script dumps, this is only referenced once.
 * `NETWORK::NETWORK_EXPLODE_VEHICLE(vehicle, 1, 0, 0);`
 * ^^^^^ That must be PC script dumps? In X360 Script Dumps it is reference a few times with 2 differences in the parameters.
 * Which as you see below is 1, 0, 0 + 1, 1, 0 + 1, 0, and a *param?
 * am_plane_takedown.c
 * network_explode_vehicle(net_to_veh(Local_40.imm_2), 1, 1, 0);
 * armenian2.c
 * network_explode_vehicle(Local_80[6 <2>], 1, 0, 0);
 * fm_horde_controler.c
 * network_explode_vehicle(net_to_veh(*uParam0), 1, 0, *uParam0);
 * fm_mission_controller.c, has 6 hits so not going to list them.
 * Side note, setting the first parameter to 0 seems to mute sound or so?
 * Seems it's like ADD_EXPLOSION, etc. the first 2 params. The 3rd atm no need to worry since it always seems to be 0.
 * ```
 * Hash: 0x301A42153C9AD707 | ApiSet: undefined
 */
export declare function networkExplodeVehicle(vehicle: number | Vehicle, isAudible: boolean, isInvisible: boolean, p3: boolean): void;
/**
 * Fade the given entity back in, usually used after the entity has been faded out with [NETWORK_FADE_OUT_ENTITY](#\_0xDE564951F95E09ED)
 * When used on a entity which isn't invisible or faded out then the native will still work, it will just instanly make the ped invisible before fading in.
 * **Additional Parameters**:
 * *   **flash**: If set to true the entity will flash while fading in.
 * Hash: 0x1F4ED342ACEFE62D | ApiSet: undefined
 */
export declare function networkFadeInEntity(entity: number | Entity, bNetwork: boolean): void;
/**
 * ```
 * normal - transition like when your coming out of LSC
 * slow - transition like when you walk into a mission
 * ```
 * Hash: 0xDE564951F95E09ED | ApiSet: undefined
 */
export declare function networkFadeOutEntity(entity: number | Entity, normal: boolean, slow: boolean): void;
/**
 * Hash: 0x64F62AFB081E260D | ApiSet: undefined
 */
export declare function networkFinishBroadcastingData(): void;
/**
 * Hash: 0xF7B2CFDE5C9F700D | ApiSet: undefined
 */
export declare function networkFindMatchedGamers(p0: any, p1: number, p2: number, p3: number): boolean;
/**
 * Hash: 0xE532D6811B3A4D2A | ApiSet: undefined
 */
export declare function networkFindGamersInCrew(p0: any): boolean;
/**
 * Hash: 0x73E2B500410DA5A2 | ApiSet: undefined
 */
export declare function networkGetActivityPlayerNum(p0: boolean): number;
/**
 * Hash: 0xC9B43A33D09CADA7 | ApiSet: undefined
 */
export declare function networkForceLocalUseOfSyncedSceneCamera(sceneId: number): void;
/**
 * Hash: 0xF2FD55CB574BCC55 | ApiSet: undefined
 */
export declare function networkGamerHasHeadset(): [boolean, any];
/**
 * Hash: 0xB071E27958EF4CF0 | ApiSet: undefined
 */
export declare function networkGamertagFromHandlePending(): boolean;
/**
 * Hash: 0x9F0C0A981D73FA56 | ApiSet: undefined
 */
export declare function networkGamertagFromHandleStart(): [boolean, number];
/**
 * Hash: 0xFD00798DBA7523DD | ApiSet: undefined
 */
export declare function networkGamertagFromHandleSucceeded(): boolean;
/**
 * ```
 * Same as _NETWORK_GET_AVERAGE_LATENCY_FOR_PLAYER (0xD414BE129BB81B32)
 * ```
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x0E3A041ED6AC2B45 | ApiSet: undefined
 */
export declare function networkGetAverageLatencyForPlayer2(player: number | string | Player): number;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xD414BE129BB81B32 | ApiSet: undefined
 */
export declare function networkGetAverageLatencyForPlayer(player: number | string | Player): number;
/**
 * Hash: 0x9614B71F8ADB982B | ApiSet: undefined
 */
export declare function networkGetAgeGroup(): number;
/**
 * Hash: 0x74881E6BCAE2327C | ApiSet: undefined
 */
export declare function networkGetCurrentlySelectedGamerHandleFromInviteMenu(): [boolean, any];
/**
 * ```
 * Return the content modifier id (the tunables context if you want) of a specific content.
 * It takes the content hash (which is the mission id hash), and return the content modifier id, used as the tunables context.
 * The mission id can be found on the Social club, for example, 'socialclub.rockstargames.com/games/gtav/jobs/job/A8M6Bz8MLEC5xngvDCzGwA'
 * 'A8M6Bz8MLEC5xngvDCzGwA' is the mission id, so the game hash this and use it as the parameter for this native.
 * ```
 * Hash: 0x187382F8A3E0A6C3 | ApiSet: undefined
 */
export declare function networkGetContentModifierListId(contentHash: number | string): number;
/**
 * Hash: 0x97A770BEEF227E2B | ApiSet: undefined
 */
export declare function networkGetBackgroundLoadingRecipients(p0: any, p1: any): [boolean, any, any];
/**
 * Hash: 0x7A1ADEEF01740A24 | ApiSet: undefined
 */
export declare function networkGetDestroyerOfNetworkId(netId: number): [number, number];
/**
 * Hash: 0x4CACA84440FA26F6 | ApiSet: undefined
 */
export declare function networkGetDestroyerOfEntity(p0: any, p1: any): [boolean, number];
/**
 * ```
 * NETWORK_GET_*
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x350C23949E43686C | ApiSet: undefined
 */
export declare function networkGetAveragePacketLossForPlayer(player: number | string | Player): number;
/**
 * Get the local entity handle of the given network id
 * Through this native you can get back the entity that you previously converted to netid with [NetworkGetNetworkIdFromEntity](#\_0x9E35DAB6) or with the `ToNet` natives
 * Hash: 0xCE4E5D9B0A4FF560 | ApiSet: undefined
 */
export declare function networkGetEntityFromNetworkId(netId: number): number;
/**
 * Hash: 0x58CC181719256197 | ApiSet: undefined
 */
export declare function networkGetDisplaynamesFromHandles(p0: any, p1: any, p2: any): number;
/**
 * Hash: 0xC7827959479DCC78 | ApiSet: undefined
 */
export declare function networkGetEntityIsNetworked(entity: number | Entity): boolean;
/**
 * Hash: 0x815F18AD865F057F | ApiSet: undefined
 */
export declare function networkGetEntityNetScriptId(entity: number | Entity): number;
/**
 * Hash: 0x0991549DE4D64762 | ApiSet: undefined
 */
export declare function networkGetEntityIsLocal(entity: number | Entity): boolean;
/**
 * Hash: 0x203F1CFD823B27A4 | ApiSet: undefined
 */
export declare function networkGetFriendCount(): number;
/**
 * Hash: 0x02A8BEC6FD9AF660 | ApiSet: undefined
 */
export declare function networkGetGamerStatusResult(p1: any): [boolean, any];
/**
 * Hash: 0x4164F227D052E293 | ApiSet: undefined
 */
export declare function networkGetFriendNameFromIndex(friendIndex: number): string;
/**
 * ```
 * scriptName examples:
 * "freemode", "AM_CR_SecurityVan", ...
 * Most of the time, these values are used:
 * p1 = -1
 * p2 = 0
 * ```
 * Hash: 0x1D6A14F1F9A736FC | ApiSet: undefined
 */
export declare function networkGetHostOfScript(scriptName: string, p1: number, p2: number): number | string;
/**
 * Hash: 0x42B2DAA6B596F5F8 | ApiSet: undefined
 */
export declare function networkGetEntityKillerOfPlayer(player: number | string | Player): [number, number];
/**
 * Hash: 0x2CC848A861D01493 | ApiSet: undefined
 */
export declare function networkGetGamerStatusFromQueue(): boolean;
/**
 * Hash: 0x426141162EBE5CDB | ApiSet: undefined
 */
export declare function networkGetGamertagFromHandle(): [string, number];
/**
 * ```
 * Used by NetBlender
 * ```
 * Hash: 0x33DE49EDF4DDE77A | ApiSet: undefined
 */
export declare function networkGetLastVelocityReceived(entity: number | Entity): Vector3;
/**
 * Hash: 0x9DCFF2AFB68B3476 | ApiSet: undefined
 */
export declare function networkGetFoundGamer(p1: any): [boolean, any];
/**
 * Hash: 0x6D03BFBD643B2A02 | ApiSet: undefined
 */
export declare function networkGetGlobalMultiplayerClock(): [number, number, number];
/**
 * Hash: 0xE11EBBB2A783FE8B | ApiSet: undefined
 */
export declare function networkGetFriendName(friendIndex: number): string;
/**
 * Hash: 0x638A3A81733086DB | ApiSet: undefined
 */
export declare function networkGetInstanceIdOfThisScript(): number;
/**
 * Hash: 0xC7B4D79B01FA7A5C | ApiSet: undefined
 */
export declare function networkGetHostOfThisScript(): number | string;
/**
 * Hash: 0xAFEBB0D5D8F687D2 | ApiSet: undefined
 */
export declare function networkGetMaxFriends(): number;
/**
 * ```
 * Seems to always return 0, but it's used in quite a few loops.
 * `for (num3 = 0; num3 < NETWORK::0xCCD8C02D(); num3++)`
 * {
 * `if (NETWORK::NETWORK_IS_PARTICIPANT_ACTIVE(PLAYER::0x98F3B274(num3)) != 0)`
 * {
 * `var num5 = NETWORK::NETWORK_GET_PLAYER_INDEX(PLAYER::0x98F3B274(num3));`
 * ```
 * Hash: 0xA6C90FBC38E395EE | ApiSet: undefined
 */
export declare function networkGetMaxNumParticipants(): number;
/**
 * ```
 * Retrieves the local player's NetworkHandle* and stores it in the given buffer.
 * * Currently unknown struct
 * ```
 * Hash: 0xE86051786B66CD8E | ApiSet: undefined
 */
export declare function networkGetLocalHandle(bufferSize: number): number;
/**
 * Get the network id of the given entity
 * An entity network id represents a given entity for other clients, it's a handle shared between clients, can be reconverted to a client entity handle.\
 * These (entity network IDs) can and will be reused, the network id will not change.
 * If you need to refer to an entity across machines (clients, or the server), you should use its network id.
 * Read more at [Network and local IDs](https://docs.fivem.net/docs/scripting-manual/networking/ids/)
 * Hash: 0xA11700682F3AD45C | ApiSet: undefined
 */
export declare function networkGetNetworkIdFromEntity(entity: number | Entity): number;
/**
 * Hash: 0x18D0456E86604654 | ApiSet: undefined
 */
export declare function networkGetNumParticipants(): number;
/**
 * Returns a local synchronized scene handle of a networked synchronised scene.
 * Hash: 0x02C40BF885C567B6 | ApiSet: undefined
 */
export declare function networkGetLocalSceneFromNetworkId(netSceneId: number): number;
/**
 * ```
 * Returns the amount of players connected in the current session. Only works when connected to a session/server.
 * ```
 * Hash: 0xA4A79DD2D9600654 | ApiSet: undefined
 */
export declare function networkGetNumConnectedPlayers(): number;
/**
 * Hash: 0xD38C4A6D047C019D | ApiSet: undefined
 */
export declare function networkGetNumBodyTrackers(): number;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xFF8FCF9FFC458A1C | ApiSet: undefined
 */
export declare function networkGetNumUnackedForPlayer(player: number | string | Player): number;
/**
 * Hash: 0xA1B043EE79A916FB | ApiSet: undefined
 */
export declare function networkGetNumFoundGamers(): number;
/**
 * Hash: 0xCEFA968912D0F78D | ApiSet: undefined
 */
export declare function networkGetNumPresenceInvites(): number;
/**
 * Hash: 0x01ABCE5E7CBDA196 | ApiSet: undefined
 */
export declare function networkGetPlatformPartyUnk(): number;
/**
 * Hash: 0x1B84DF6AF2A46938 | ApiSet: undefined
 */
export declare function networkGetParticipantIndex(index: number): number;
/**
 * Hash: 0x3658E8CD94FC121A | ApiSet: undefined
 */
export declare function networkGetNumScriptParticipants(p1: any, p2: any): [number, any];
/**
 * ```
 * NETWORK_GET_*
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x52C1EADAF7B10302 | ApiSet: undefined
 */
export declare function networkGetOldestResendCountForPlayer(player: number | string | Player): number;
/**
 * Returns the coordinates of another player.
 * Does not work if you enter your own player id as p0 (will return `(0.0, 0.0, 0.0)` in that case).
 * Hash: 0x125E6D638B8605D4 | ApiSet: undefined
 */
export declare function networkGetPlayerCoords(player: number | string | Player): Vector3;
/**
 * Hash: 0x120364DE2845DAF8 | ApiSet: undefined
 */
export declare function networkGetPlatformPartyMembers(dataSize: number): [number, any];
/**
 * Hash: 0xCE5F689CF5A0A49D | ApiSet: undefined
 */
export declare function networkGetPlayerFromGamerHandle(): [number | string, number];
/**
 * Hash: 0x24FB80D107371267 | ApiSet: undefined
 */
export declare function networkGetPlayerIndex(player: number | string | Player): number;
/**
 * ```
 * Returns the Player associated to a given Ped when in an online session.
 * ```
 * Hash: 0x6C0E2E0125610278 | ApiSet: undefined
 */
export declare function networkGetPlayerIndexFromPed(ped: number | Ped): number | string;
/**
 * Hash: 0x82377B65E943F72D | ApiSet: undefined
 */
export declare function networkGetPlayerOwnsWaypoint(player: number | string | Player): boolean;
/**
 * Hash: 0x21A1684A25C2867F | ApiSet: undefined
 */
export declare function networkGetPlayerLoudness(player: number | string | Player): number;
/**
 * Hash: 0x24409FC4C55CB22D | ApiSet: undefined
 */
export declare function networkGetPresenceInviteContentId(p0: any): string;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x257ED0FADF750BCF | ApiSet: undefined
 */
export declare function networkGetPositionHashOfThisScript(): any;
/**
 * Hash: 0x3B39236746714134 | ApiSet: undefined
 */
export declare function networkGetPlayerTutorialSessionInstance(player: number | string | Player): number;
/**
 * Hash: 0x38D5B0FEBB086F75 | ApiSet: undefined
 */
export declare function networkGetPresenceInviteHandle(p0: any): [boolean, any];
/**
 * Hash: 0x3DBF2DF0AEB7D289 | ApiSet: undefined
 */
export declare function networkGetPresenceInviteFromAdmin(p0: any): boolean;
/**
 * Hash: 0xD39B3FFF8FFDD5BF | ApiSet: undefined
 */
export declare function networkGetPresenceInvitePlaylistLength(p0: any): any;
/**
 * Hash: 0xDFF09646E12EC386 | ApiSet: undefined
 */
export declare function networkGetPresenceInviteId(p0: any): any;
/**
 * Hash: 0xC080FF658B2E41DA | ApiSet: undefined
 */
export declare function networkGetPrimaryClanDataNew(): [boolean, any, any];
/**
 * Returns the Name of the inviter of the specific selected Invite.
 * Hash: 0x4962CC4AA2F345B7 | ApiSet: undefined
 */
export declare function networkGetPresenceInviteInviter(inviteIndex: number): string;
/**
 * The Native returns a hash of the session id as string from the specific invite index!
 * Hash: 0x26E1CD96B0903D60 | ApiSet: undefined
 */
export declare function networkGetPresenceInviteSessionId(inviteIndex: number): number;
/**
 * Hash: 0xCE86D8191B762107 | ApiSet: undefined
 */
export declare function networkGetPrimaryClanDataStart(p1: any): [boolean, any];
/**
 * Hash: 0x8806CEBFABD3CE05 | ApiSet: undefined
 */
export declare function networkGetPresenceInviteIsTournament(p0: any): boolean;
/**
 * Hash: 0x728C4CC7920CD102 | ApiSet: undefined
 */
export declare function networkGetPresenceInvitePlaylistCurrent(p0: any): any;
/**
 * Hash: 0x042E4B70B93E6054 | ApiSet: undefined
 */
export declare function networkGetPrimaryClanDataCancel(): void;
/**
 * Hash: 0xB5074DB804E28CE7 | ApiSet: undefined
 */
export declare function networkGetPrimaryClanDataPending(): any;
/**
 * Hash: 0x9AA46BADAD0E27ED | ApiSet: undefined
 */
export declare function networkGetPrimaryClanDataClear(): any;
/**
 * Hash: 0x5B4F04F19376A0BA | ApiSet: undefined
 */
export declare function networkGetPrimaryClanDataSuccess(): any;
/**
 * Hash: 0x599E4FA1F87EB5FF | ApiSet: undefined
 */
export declare function networkGetRandomInt(): number;
/**
 * Hash: 0x6C34F1208B8923FD | ApiSet: undefined
 */
export declare function networkGetRespawnResultFlags(p0: any): any;
/**
 * Hash: 0x66B59CFFD78467AF | ApiSet: undefined
 */
export declare function networkGetRosPrivilege9(): boolean;
/**
 * ```
 * Same as GET_RANDOM_INT_IN_RANGE
 * ```
 * Hash: 0xE30CF56F1EFA5F43 | ApiSet: undefined
 */
export declare function networkGetRandomIntRanged(rangeStart: number, rangeEnd: number): number;
/**
 * Hash: 0x84F0F13120B4E098 | ApiSet: undefined
 */
export declare function networkGetTalkerProximity(): number;
/**
 * ```
 * Based on scripts such as in freemode.c how they call their vars vVar and fVar the 2nd and 3rd param it a Vector3 and Float, but the first is based on get_random_int_in_range..
 * ```
 * Hash: 0x371EA43692861CF1 | ApiSet: undefined
 */
export declare function networkGetRespawnResult(randomInt: number): [Vector3, number];
/**
 * Hash: 0x593570C289A77688 | ApiSet: undefined
 */
export declare function networkGetRosPrivilege24(): boolean;
/**
 * Hash: 0x57D158647A6BFABF | ApiSet: undefined
 */
export declare function networkGetScriptStatus(): number;
/**
 * ```
 * Returns count.
 * ```
 * Hash: 0x73B000F7FBC55829 | ApiSet: undefined
 */
export declare function networkGetTransitionMembers(dataCount: number): [number, any];
/**
 * Hash: 0x2910669969E9535E | ApiSet: undefined
 */
export declare function networkGetThisScriptIsNetworkScript(): boolean;
/**
 * Hash: 0x91B87C55093DE351 | ApiSet: undefined
 */
export declare function networkGetRosPrivilege25(): boolean;
/**
 * Hash: 0x5ED0356A0CE3A34F | ApiSet: undefined
 */
export declare function networkGetTimeoutTime(): number;
/**
 * ```
 * Actually returns the version (TUNABLE_VERSION)
 * ```
 * Hash: 0x10BD227A753B0D84 | ApiSet: undefined
 */
export declare function networkGetTunableCloudCrc(): number;
/**
 * Hash: 0xD45CB817D7E177D2 | ApiSet: undefined
 */
export declare function networkHandleFromFriend(friendIndex: number, bufferSize: number): number;
/**
 * Hash: 0xDFFA5BE8381C3314 | ApiSet: undefined
 */
export declare function networkGetTargetingMode(): number;
/**
 * Hash: 0x65042B9774C4435E | ApiSet: undefined
 */
export declare function networkGetTransitionHost(): [boolean, number];
/**
 * ```
 * Returns a handle to networkHandle* from the specified player handle and stores it in a given buffer.
 * * Currently unknown struct
 * Example:
 * `std::vector<UINT64> GetPlayerNetworkHandle(Player player) {`
 * const int size = 13;
 * `uint64_t *buffer = std::make_unique<uint64_t[]>(size).get();`
 * `NETWORK::NETWORK_HANDLE_FROM_PLAYER(player, reinterpret_cast<int *>(buffer), 13);`
 * for (int i = 0; i < size; i++) {
 * `Log::Msg("networkhandle[%i]: %llx", i, buffer[i]);`
 * }
 * `std::vector<UINT64> result(buffer, buffer + sizeof(buffer));`
 * return result;
 * }
 * ```
 * Hash: 0x388EB2B86C73B6B3 | ApiSet: undefined
 */
export declare function networkHandleFromPlayer(player: number | string | Player, bufferSize: number): number;
/**
 * Hash: 0xCF61D4B4702EE9EB | ApiSet: undefined
 */
export declare function networkGetTotalNumPlayers(): number;
/**
 * ```
 * NETWORK_*
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x3765C3A3E8192E10 | ApiSet: undefined
 */
export declare function networkGetUnreliableResendCountForPlayer(player: number | string | Player): number;
/**
 * ```
 * Returns a NetworkHandle* from the specified member ID and stores it in a given buffer.
 * * Currently unknown struct
 * ```
 * Hash: 0xA0FD21BED61E5C4C | ApiSet: undefined
 */
export declare function networkHandleFromMemberId(memberId: string, bufferSize: number): number;
/**
 * Hash: 0x1353F87E89946207 | ApiSet: undefined
 */
export declare function networkHasAgeRestrictedProfile(): boolean;
/**
 * Hash: 0x237D5336A9A54108 | ApiSet: undefined
 */
export declare function networkHasCachedPlayerHeadBlendData(player: number | string | Player): boolean;
/**
 * Hash: 0x01BF60A500E28887 | ApiSet: undefined
 */
export declare function networkHasControlOfEntity(entity: number | Entity): boolean;
/**
 * ```
 * Returns a NetworkHandle* from the specified user ID and stores it in a given buffer.
 * * Currently unknown struct
 * ```
 * Hash: 0xDCD51DD8F87AEC5C | ApiSet: undefined
 */
export declare function networkHandleFromUserId(userId: string, bufferSize: number): number;
/**
 * Hash: 0xCB3C68ADB06195DF | ApiSet: undefined
 */
export declare function networkHasControlOfDoor(doorHash: number | string): boolean;
/**
 * Hash: 0x5BC9495F0B3B6FA6 | ApiSet: undefined
 */
export declare function networkHasControlOfPickup(pickup: any): boolean;
/**
 * Hash: 0x4D36070FE0215186 | ApiSet: undefined
 */
export declare function networkHasControlOfNetworkId(netId: number): boolean;
/**
 * Hash: 0xB07D3185E11657A5 | ApiSet: undefined
 */
export declare function networkHasEntityBeenRegisteredWithThisThread(entity: number | Entity): boolean;
/**
 * Hash: 0x76D9B976C4C09FDE | ApiSet: undefined
 */
export declare function networkHasFollowInvite(): boolean;
/**
 * ```
 * Returns true if dinput8.dll is present in the game directory.
 * You will get following error message if that is true: "You are attempting to access GTA Online servers with an altered version of the game."
 * ```
 * Hash: 0x659CF2EF7F550C4F | ApiSet: undefined
 */
export declare function networkHasGameBeenAltered(): boolean;
/**
 * Hash: 0x71DC455F5CD1C2B1 | ApiSet: undefined
 */
export declare function networkHasInviteBeenAcked(): [boolean, number];
/**
 * Hash: 0x7284A47B3540E6CF | ApiSet: undefined
 */
export declare function networkHasInvitedGamerToTransition(): [boolean, any];
/**
 * Hash: 0x4D86CD31E8976ECE | ApiSet: undefined
 */
export declare function networkHasInvitedGamer(): [boolean, any];
/**
 * Hash: 0x9AC9CCBFA8C29795 | ApiSet: undefined
 */
export declare function networkHasPlayerStartedTransition(player: number | string | Player): boolean;
/**
 * Hash: 0xE870F9F1F7B4F1FA | ApiSet: undefined
 */
export declare function networkHasHeadset(): boolean;
/**
 * ```
 * index is always 18 in scripts
 * ```
 * Hash: 0xA699957E60D80214 | ApiSet: undefined
 */
export declare function networkHasRosPrivilege(index: number): boolean;
/**
 * Hash: 0xC22912B1D85F26B1 | ApiSet: undefined
 */
export declare function networkHasRosPrivilegeEndDate(privilege: number): [boolean, number, Vector3];
/**
 * Hash: 0xAC8C7B9B88C4A668 | ApiSet: undefined
 */
export declare function networkHasPendingInvite(): boolean;
/**
 * Hash: 0x76BF03FADBF154F5 | ApiSet: undefined
 */
export declare function networkHasSocialNetworkingSharingPriv(): boolean;
/**
 * Hash: 0x5D10B3795F3FC886 | ApiSet: undefined
 */
export declare function networkHasReceivedHostBroadcastData(): boolean;
/**
 * Hash: 0x67A5589628E0CFF6 | ApiSet: undefined
 */
export declare function networkHasSocialClubAccount(): boolean;
/**
 * Hash: 0x3F9990BF5F22759C | ApiSet: undefined
 */
export declare function networkHasTransitionInviteBeenAcked(): [boolean, number];
/**
 * Hash: 0x58575AC3CF2CA8EC | ApiSet: undefined
 */
export declare function networkHashFromGamerHandle(): [number, number];
/**
 * Hash: 0xAEEF48CDF5B6CE7C | ApiSet: undefined
 */
export declare function networkHaveCommunicationPrivileges(p0: number, player: number | string | Player): boolean;
/**
 * ```
 * Returns whether the signed-in user has valid Rockstar Online Services (ROS) credentials.
 * ```
 * Hash: 0x85443FF4C328F53B | ApiSet: undefined
 */
export declare function networkHasValidRosCredentials(): boolean;
/**
 * Hash: 0x5EA784D197556507 | ApiSet: undefined
 */
export declare function networkHaveOnlinePrivilege2(): boolean;
/**
 * Hash: 0xBC1D768F2F5D6C05 | ApiSet: undefined
 */
export declare function networkHashFromPlayerHandle(player: number | string | Player): number;
/**
 * Hash: 0xCCA4318E1AB03F1F | ApiSet: undefined
 */
export declare function networkHasViewGamerUserContentResult(): [boolean, any];
/**
 * Hash: 0x422D396F80A96547 | ApiSet: undefined
 */
export declare function networkHaveRosLeaderboardWritePriv(): boolean;
/**
 * Hash: 0xA0AD7E2AF5349F61 | ApiSet: undefined
 */
export declare function networkHaveRosCreateTicketPriv(): boolean;
/**
 * Hash: 0x8020A73847E0CA7D | ApiSet: undefined
 */
export declare function networkHaveRosBannedPriv(): boolean;
/**
 * Hash: 0x5F91D5D0B36AA310 | ApiSet: undefined
 */
export declare function networkHaveRosMultiplayerPriv(): boolean;
/**
 * Hash: 0x25CB5A9F37BFD063 | ApiSet: undefined
 */
export declare function networkHaveOnlinePrivileges(): boolean;
/**
 * From what I can tell it looks like it does the following:
 * Creates/hosts a new transition to another online session, using this in FiveM will result in other players being disconencted from the server/preventing them from joining. This is most likely because I entered the wrong session parameters since they're pretty much all unknown right now.
 * You also need to use `NetworkJoinTransition(Player player)` and `NetworkLaunchTransition()`.
 * Hash: 0xA60BB5CE242BB254 | ApiSet: undefined
 */
export declare function networkHostTransition(p0: number, p1: number, p2: number, p3: number, p4: any, p5: boolean, p6: boolean, p7: number, p8: any, p9: number): boolean;
/**
 * Hash: 0x72D918C99BCACC54 | ApiSet: undefined
 */
export declare function networkHaveUserContentPrivileges(p0: number): boolean;
/**
 * Hash: 0x12103B9E0C9F92FB | ApiSet: undefined
 */
export declare function networkIsActivitySpectator(): boolean;
/**
 * Hash: 0x606E4D3E3CCCF3EB | ApiSet: undefined
 */
export declare function networkHaveRosSocialClubPriv(): boolean;
/**
 * Hash: 0x05095437424397FA | ApiSet: undefined
 */
export declare function networkIsActivitySession(): boolean;
/**
 * Hash: 0x6EA101606F6E4D81 | ApiSet: undefined
 */
export declare function networkIsAddingFriend(): any;
/**
 * Hash: 0x9D80CD1D0E6327DE | ApiSet: undefined
 */
export declare function networkInviteGamers(p1: any): [boolean, any, any, any];
/**
 * Hash: 0x4A595C32F77DFF76 | ApiSet: undefined
 */
export declare function networkInviteGamersToTransition(p1: any): [boolean, any];
/**
 * Hash: 0x2763BBAA72A7BCB9 | ApiSet: undefined
 */
export declare function networkIsActivitySpectatorFromHandle(): [boolean, number];
/**
 * Hash: 0xEFFB25453D8600F9 | ApiSet: undefined
 */
export declare function networkIsCableConnected(): boolean;
/**
 * ```
 * This would be nice to see if someone is in party chat, but 2 sad notes.
 * 1) It only becomes true if said person is speaking in that party at the time.
 * 2) It will never, become true unless you are in that party with said person.
 * ```
 * Hash: 0x8DE9945BCC9AEC52 | ApiSet: undefined
 */
export declare function networkIsChattingInPlatformParty(): [boolean, number];
/**
 * Hash: 0xD7C95D322FF57522 | ApiSet: undefined
 */
export declare function networkIsClockTimeOverridden(): boolean;
/**
 * ```
 * NETWORK_IS_*
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x16D3D49902F697BB | ApiSet: undefined
 */
export declare function networkIsConnectionEndpointRelayServer(player: number | string | Player): boolean;
/**
 * Hash: 0x9A4CF4F48AD77302 | ApiSet: undefined
 */
export declare function networkIsCloudAvailable(): boolean;
/**
 * Hash: 0x8132C0EB8B2B3293 | ApiSet: undefined
 */
export declare function networkIsCloudBackgroundScriptRequestPending(): boolean;
/**
 * Hash: 0x87EB7A3FFCB314DB | ApiSet: undefined
 */
export declare function networkIsFriendHandleOnline(): [boolean, number];
/**
 * Hash: 0xC01E93FAC20C3346 | ApiSet: undefined
 */
export declare function networkIsDoorNetworked(doorHash: number | string): boolean;
/**
 * Hash: 0x425A44533437B64D | ApiSet: undefined
 */
export declare function networkIsFriendOnline(name: string): boolean;
/**
 * Note: This only works for vehicles, which appears to be a bug (since the setter *does* work for every entity type and the name is 99% correct).
 * Hash: 0x71302EC70689052A | ApiSet: undefined
 */
export declare function networkIsEntityConcealed(entity: number | Entity): boolean;
/**
 * Hash: 0x422F32CC7E56ABAD | ApiSet: undefined
 */
export declare function networkIsEntityFading(entity: number | Entity): boolean;
/**
 * Hash: 0x1A24A179F9B31654 | ApiSet: undefined
 */
export declare function networkIsFriend(): [boolean, number];
/**
 * Hash: 0xDDDF64C91BFCF0AA | ApiSet: undefined
 */
export declare function networkIsFindingGamers(): boolean;
/**
 * Hash: 0x57005C18827F3A28 | ApiSet: undefined
 */
export declare function networkIsFriendInMultiplayer(friendName: string): boolean;
/**
 * Hash: 0xE944C4F5AF1B5883 | ApiSet: undefined
 */
export declare function networkIsGamerBlockedByMe(): [boolean, any];
/**
 * Hash: 0x0F10B05DDF8D16E9 | ApiSet: undefined
 */
export declare function networkIsGamerInMySession(): [boolean, number];
/**
 * Hash: 0xBAD8F2A42B844821 | ApiSet: undefined
 */
export declare function networkIsFriendIndexOnline(friendIndex: number): boolean;
/**
 * ```
 * In scripts R* calls 'NETWORK_GET_FRIEND_NAME' in this param.
 * ```
 * Hash: 0x2EA9A3BEDF3F17B8 | ApiSet: undefined
 */
export declare function networkIsFriendInSameTitle(friendName: string): boolean;
/**
 * Hash: 0xCE60DE011B6C7978 | ApiSet: undefined
 */
export declare function networkIsGamerMutedByMe(): [boolean, number];
/**
 * Hash: 0x10FAB35428CCC9D7 | ApiSet: undefined
 */
export declare function networkIsGameInProgress(): boolean;
/**
 * Hash: 0x71C33B22606CD88A | ApiSet: undefined
 */
export declare function networkIsGamerTalking(): [boolean, number];
/**
 * Hash: 0x94A8394D150B013A | ApiSet: undefined
 */
export declare function networkIsGettingGamerStatus(): boolean;
/**
 * Hash: 0x6F79B93B0A8E4133 | ApiSet: undefined
 */
export declare function networkIsHandleValid(bufferSize: number): [boolean, number];
/**
 * ```
 * If you are host, returns true else returns false.
 * ```
 * Hash: 0x8DB296B814EDDA07 | ApiSet: undefined
 */
export declare function networkIsHost(): boolean;
/**
 * Hash: 0x83CD99A1E6061AB5 | ApiSet: undefined
 */
export declare function networkIsHostOfThisScript(): boolean;
/**
 * ```
 * Hardcoded to return false.
 * ```
 * Hash: 0x2FC5650B0271CB57 | ApiSet: undefined
 */
export declare function networkIsInPlatformParty(): boolean;
/**
 * Hash: 0x6CC27C9FA2040220 | ApiSet: undefined
 */
export declare function networkIsInMpCutscene(): boolean;
/**
 * ```
 * Hardcoded to return false.
 * ```
 * Hash: 0xFD8B834A8BA05048 | ApiSet: undefined
 */
export declare function networkIsInPlatformPartyChat(): boolean;
/**
 * Hash: 0xCA97246103B63917 | ApiSet: undefined
 */
export declare function networkIsInSession(): boolean;
/**
 * Hash: 0x68049AEFF83D8F0A | ApiSet: undefined
 */
export declare function networkIsInTransition(): boolean;
/**
 * ```
 * Note according to IDA TU27 X360(Console),
 * This native & 'NETWORK_IS_PARTY_MEMBER' both jump to the same location.
 * Side note: This location just stops where it's at once jumped to.
 * Screenshot for side note,
 * h t t p ://i.imgur.com/m2ci1mF.png
 * h t t p://i.imgur.com/Z0Wx2B6.png
 * ```
 * Hash: 0x966C2BC2A7FE3F30 | ApiSet: undefined
 */
export declare function networkIsInParty(): boolean;
/**
 * Checks if the networkHandle is the same as any other user that is signed in on the local machine.
 * For example, if your console has two or more users signed in (on different controllers), the profile that is not controlling the game would be "inactive".
 * Hash: 0x7E58745504313A2E | ApiSet: undefined
 */
export declare function networkIsInactiveProfile(): [boolean, number];
/**
 * Hash: 0xADA24309FE08DACF | ApiSet: undefined
 */
export declare function networkIsInTutorialSession(): boolean;
/**
 * Hash: 0x8A8694B48715B000 | ApiSet: undefined
 */
export declare function networkIsLocalPlayerInvincible(): boolean;
/**
 * Hash: 0x048746E388762E11 | ApiSet: undefined
 */
export declare function networkIsInSpectatorMode(): boolean;
/**
 * Hash: 0x9747292807126EDA | ApiSet: undefined
 */
export declare function networkIsMultiplayerDisabled(): boolean;
/**
 * Hash: 0x74698374C45701D2 | ApiSet: undefined
 */
export declare function networkIsOfflineInvitePending(): boolean;
/**
 * Hash: 0xC0D2AF00BCC234CA | ApiSet: undefined
 */
export declare function networkIsLocalTalking(): boolean;
/**
 * ```
 * Note according to IDA TU27 X360(Console),
 * This native & 'NETWORK_IS_PARTY_MEMBER' both jump to the same location.
 * Side note: This location just stops where it's at once jumped to.
 * Screenshot for side note,
 * h t t p ://i.imgur.com/m2ci1mF.png
 * h t t p://i.imgur.com/Z0Wx2B6.png
 * ```
 * Hash: 0x676ED266AADD31E0 | ApiSet: undefined
 */
export declare function networkIsPartyMember(): [boolean, number];
/**
 * Hash: 0x6FF8FF40B6357D45 | ApiSet: undefined
 */
export declare function networkIsParticipantActive(p0: number): boolean;
/**
 * Returns true if the specified network id is controlled by someone else.
 * Hash: 0x7242F8B741CE1086 | ApiSet: undefined
 */
export declare function networkIsNetworkIdAClone(netId: number): boolean;
/**
 * ```
 * This function is hard-coded to always return 0.
 * ```
 * Hash: 0x0BE73DA6984A6E33 | ApiSet: undefined
 */
export declare function networkIsPendingFriend(p0: any): any;
/**
 * Hash: 0x3CA58F6CB7CBD784 | ApiSet: undefined
 */
export declare function networkIsPlayerAParticipant(player: number | string | Player): boolean;
/**
 * Hash: 0x57AF1F8E27483721 | ApiSet: undefined
 */
export declare function networkIsPlayerBlockedByMe(player: number | string | Player): boolean;
/**
 * Hash: 0xB8DFD30D6973E135 | ApiSet: undefined
 */
export declare function networkIsPlayerActive(player: number | string | Player): boolean;
/**
 * Hash: 0x8C71288AE68EDE39 | ApiSet: undefined
 */
export declare function networkIsPlayerMutedByMe(player: number | string | Player): boolean;
/**
 * Hash: 0x93DC1BE4E1ABE9D1 | ApiSet: undefined
 */
export declare function networkIsPlayerConnected(player: number | string | Player): boolean;
/**
 * Hash: 0x1AD5B71586B94820 | ApiSet: undefined
 */
export declare function networkIsPlayerAParticipantOnScript(player1: number | string | Player, script: string, player2: number | string | Player): boolean;
/**
 * Hash: 0x63F9EE203C3619F2 | ApiSet: undefined
 */
export declare function networkIsPlayerInMpCutscene(player: number | string | Player): boolean;
/**
 * ```
 * This checks if player is playing on gta online or not.
 * Please add an if and block your mod if this is "true".
 * ```
 * Hash: 0x9DE624D2FC4B603F | ApiSet: undefined
 */
export declare function networkIsSessionStarted(): boolean;
/**
 * Hash: 0x631DC5DFF4B110E3 | ApiSet: undefined
 */
export declare function networkIsPlayerFading(player: number | string | Player): boolean;
/**
 * ```
 * returns true if someone is screaming or talking in a microphone
 * ```
 * Hash: 0x031E11F3D447647E | ApiSet: undefined
 */
export declare function networkIsPlayerTalking(player: number | string | Player): boolean;
/**
 * Hash: 0x919B3C98ED8292F9 | ApiSet: undefined
 */
export declare function networkIsPlayerConcealed(player: number | string | Player): boolean;
/**
 * Hash: 0x8D11E61A4ABF49CC | ApiSet: undefined
 */
export declare function networkIsPsnAvailable(): boolean;
/**
 * Hash: 0xD83C2B94E7508980 | ApiSet: undefined
 */
export declare function networkIsSessionActive(): boolean;
/**
 * ```
 * NETWORK_ARE_*
 * ```
 * Hash: 0x9DE986FC9A87C474 | ApiSet: undefined
 */
export declare function networkIsPlayerEqualToIndex(player: number | string | Player, index: number): boolean;
/**
 * ```
 * Returns whether the player is signed into Social Club.
 * ```
 * Hash: 0x054354A99211EB96 | ApiSet: undefined
 */
export declare function networkIsSignedIn(): boolean;
/**
 * Hash: 0x9D40DF90FAD26098 | ApiSet: undefined
 */
export declare function networkIsScriptActive(scriptName: string, player: number | string | Player, p2: boolean, p3: any): boolean;
/**
 * ```
 * NativeDB Introduced: v2245
 * ```
 * Hash: 0xDA7DE67F5FE5EE13 | ApiSet: undefined
 */
export declare function networkIsScriptActiveByHash(scriptHash: number | string, p1: number, p2: boolean, p3: number): boolean;
/**
 * Hash: 0xF4435D66A8E2905E | ApiSet: undefined
 */
export declare function networkIsSessionBusy(): boolean;
/**
 * ```
 * Same as _IS_TEXT_CHAT_ACTIVE, except it does not check if the text chat HUD component is initialized, and therefore may crash.
 * ```
 * Hash: 0x5FCF4D7069B09026 | ApiSet: undefined
 */
export declare function networkIsTextChatActive(): boolean;
/**
 * ```
 * Returns whether the game is not in offline mode.
 * seemed not to work for some ppl
 * ```
 * Hash: 0x1077788E268557C2 | ApiSet: undefined
 */
export declare function networkIsSignedOnline(): boolean;
/**
 * Hash: 0xD1110739EEADB592 | ApiSet: undefined
 */
export declare function networkIsThisScriptMarked(p0: any, p1: boolean, p2: any): boolean;
/**
 * Hash: 0x0DBD5D7E3C5BEC3B | ApiSet: undefined
 */
export declare function networkIsTransitionClosedCrew(): boolean;
/**
 * Hash: 0x520F3282A53D26B7 | ApiSet: undefined
 */
export declare function networkIsTransitionBusy(): boolean;
/**
 * Hash: 0x6512765E3BE78C50 | ApiSet: undefined
 */
export declare function networkIsTransitionClosedFriends(): boolean;
/**
 * Hash: 0x5DC577201723960A | ApiSet: undefined
 */
export declare function networkIsTransitionSolo(): boolean;
/**
 * Hash: 0x0B824797C9BF2159 | ApiSet: undefined
 */
export declare function networkIsTransitionHost(): boolean;
/**
 * Hash: 0x6B5C83BA3EFE6A10 | ApiSet: undefined
 */
export declare function networkIsTransitionHostFromHandle(): [boolean, number];
/**
 * Hash: 0x53FA83401D9C07FE | ApiSet: undefined
 */
export declare function networkIsTransitionStarted(): boolean;
/**
 * Hash: 0x5A6AA44FF8E931E6 | ApiSet: undefined
 */
export declare function networkIsTransitionPrivate(): boolean;
/**
 * Hash: 0x292564C735375EDF | ApiSet: undefined
 */
export declare function networkIsTransitionMatchmaking(): boolean;
/**
 * Hash: 0x37A4494483B9F5C9 | ApiSet: undefined
 */
export declare function networkIsTransitionOpenToMatchmaking(): boolean;
/**
 * Hash: 0xFFE1E5B792D92B34 | ApiSet: undefined
 */
export declare function networkJoinPreviouslyFailedTransition(): boolean;
/**
 * Hash: 0x9D7696D8F4FA6CB7 | ApiSet: undefined
 */
export declare function networkIsTransitionToGame(): boolean;
/**
 * Hash: 0xD0A484CB2F829FBE | ApiSet: undefined
 */
export declare function networkIsTransitionVisibilityLocked(): boolean;
/**
 * Hash: 0x0467C11ED88B7D28 | ApiSet: undefined
 */
export declare function networkIsTunableCloudRequestPending(): boolean;
/**
 * Hash: 0x35F0B98A8387274D | ApiSet: undefined
 */
export declare function networkIsTutorialSessionChangePending(): boolean;
/**
 * Hash: 0x2DCF46CB1A4F0884 | ApiSet: undefined
 */
export declare function networkLaunchTransition(): boolean;
/**
 * Hash: 0xA06509A691D12BE4 | ApiSet: undefined
 */
export declare function networkJoinGroupActivity(): any;
/**
 * Hash: 0x59DF79317F85A7E0 | ApiSet: undefined
 */
export declare function networkJoinPreviouslyFailedSession(): boolean;
/**
 * Hash: 0x5728BB6D63E3FF1D | ApiSet: undefined
 */
export declare function networkMarkTransitionGamerAsFullyJoined(): [boolean, any];
/**
 * Hash: 0xD23A1A815D21DB19 | ApiSet: undefined
 */
export declare function networkLeaveTransition(): boolean;
/**
 * ```
 * int handle[76];
 * NETWORK_HANDLE_FROM_FRIEND(iSelectedPlayer, &handle[0], 13);
 * Player uVar2 = NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(&handle[0]);
 * NETWORK_JOIN_TRANSITION(uVar2);
 * nothing doin.
 * ```
 * Hash: 0x9D060B08CD63321A | ApiSet: undefined
 */
export declare function networkJoinTransition(player: number | string | Player): boolean;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x42BF1D2E723B6D7E | ApiSet: undefined
 */
export declare function networkOverrideClockMillisecondsPerGameMinute(ms: number): void;
/**
 * Hash: 0xC82630132081BB6F | ApiSet: undefined
 */
export declare function networkMemberIdFromGamerHandle(): [string, number];
/**
 * ```
 * This is used alongside the native,
 * 'NETWORK_OVERRIDE_RECEIVE_RESTRICTIONS'. Read its description for more info.
 * ```
 * Hash: 0x97DD4C5944CC2E6A | ApiSet: undefined
 */
export declare function networkOverrideSendRestrictions(player: number | string | Player, toggle: boolean): void;
/**
 * Overrides the game clock time for the local player, allowing for manipulation of the in-game time. This native is effective in both multiplayer and singleplayer modes.
 * **Note:** Passing wrong data (e.g. hours above 23) will cause the game to crash.
 * Hash: 0xE679E3E06E363892 | ApiSet: undefined
 */
export declare function networkOverrideClockTime(hours: number, minutes: number, seconds: number): void;
/**
 * Hash: 0x2B3A8F7CA3A38FDE | ApiSet: undefined
 */
export declare function networkOpenTransitionMatchmaking(): void;
/**
 * ```
 * Could possibly bypass being muted or automatically muted
 * ```
 * Hash: 0x3039AE5AD2C9C0C4 | ApiSet: undefined
 */
export declare function networkOverrideChatRestrictions(player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0x6F697A66CE78674E | ApiSet: undefined
 */
export declare function networkOverrideTeamRestrictions(team: number, toggle: boolean): void;
/**
 * ```
 * R* uses this to hear all player when spectating.
 * It allows you to hear other online players when their chat is on none, crew and or friends
 * ```
 * Hash: 0xDDF73E2B1FEC5AB4 | ApiSet: undefined
 */
export declare function networkOverrideReceiveRestrictions(player: number | string | Player, toggle: boolean): void;
/**
 * ```
 * p0 is always false in scripts.
 * ```
 * Hash: 0x0FF2862B61A58AF9 | ApiSet: undefined
 */
export declare function networkOverrideReceiveRestrictionsAll(toggle: boolean): void;
/**
 * Hash: 0xA7E30DE9272B6D49 | ApiSet: undefined
 */
export declare function networkOverrideCoordsAndHeading(entity: number | Entity, position: Vector3, heading: number): void;
/**
 * Hash: 0xAF66059A131AA269 | ApiSet: undefined
 */
export declare function networkOverrideTransitionChat(p0: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xF0BC9BCD24A511D5 | ApiSet: undefined
 */
export declare function networkPedForceGameStateUpdate(ped: number | Ped): void;
/**
 * Hash: 0x57B192B4D4AD23D5 | ApiSet: undefined
 */
export declare function networkOverrideSendRestrictionsAll(toggle: boolean): void;
/**
 * Hash: 0x19D8DA0E5A68045A | ApiSet: undefined
 */
export declare function networkPlayerIsBadsport(): boolean;
/**
 * Hash: 0x172F75B6EE2233BA | ApiSet: undefined
 */
export declare function networkPlayerGetCheaterReason(): number;
/**
 * ```
 * Returns the name of a given player. Returns "**Invalid**" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist.
 * ```
 * Hash: 0x7718D2E2060837D2 | ApiSet: undefined
 */
export declare function networkPlayerGetName(player: number | string | Player): string;
/**
 * Hash: 0x3FB99A8B08D18FD6 | ApiSet: undefined
 */
export declare function networkPlayerHasHeadset(player: number | string | Player): boolean;
/**
 * Hash: 0x655B91F1495A9090 | ApiSet: undefined
 */
export declare function networkPlayerIsCheater(): boolean;
/**
 * ```
 * Takes a 24 char buffer. Returns the buffer or "**Invalid**" if CPlayerInfo of the given player cannot be retrieved or the player doesn't exist.
 * ```
 * Hash: 0x4927FC39CD0869A0 | ApiSet: undefined
 */
export declare function networkPlayerGetUserid(player: number | string | Player): [string, number];
/**
 * Hash: 0x85A0EF54A500882C | ApiSet: undefined
 */
export declare function networkQueueGamerForStatus(): [boolean, any];
/**
 * Hash: 0x06FAACD625D80CAA | ApiSet: undefined
 */
export declare function networkRegisterEntityAsNetworked(entity: number | Entity): void;
/**
 * Hash: 0x3E9B2F01C50DF595 | ApiSet: undefined
 */
export declare function networkRegisterHostBroadcastVariables(numVars: number): number;
/**
 * Hash: 0x565E430DB3B05BEC | ApiSet: undefined
 */
export declare function networkPlayerIndexIsCheater(player: number | string | Player): boolean;
/**
 * ```
 * Checks if a specific value (BYTE) in CPlayerInfo is nonzero.
 * Returns always false in Singleplayer.
 * No longer used for dev checks since first mods were released on PS3 & 360.
 * R* now checks with the is_dlc_present native for the dlc hash 2532323046,
 * if that is present it will unlock dev stuff.
 * ```
 * Hash: 0x544ABDDA3B409B6D | ApiSet: undefined
 */
export declare function networkPlayerIsRockstarDev(player: number | string | Player): boolean;
/**
 * Forces the "Are you sure you want to quit Grand Theft Auto V?" warning message (Same as when you Alt+F4) to show.
 * Doesn't work in singleplayer.
 * Hash: 0x45A83257ED02D9BC | ApiSet: undefined
 */
export declare function networkQuitMpToDesktop(): void;
/**
 * Hash: 0x726E0375C7A26368 | ApiSet: undefined
 */
export declare function networkRemoveAllTransitionInvite(): void;
/**
 * Hash: 0x1950DAE9848A4739 | ApiSet: undefined
 */
export declare function networkRegisterTunableFloatHash(contextHash: number | string, nameHash: number | string): [boolean, number];
/**
 * Hash: 0x7524B431B2E6F7EE | ApiSet: undefined
 */
export declare function networkRemoveTransitionInvite(): any;
/**
 * Hash: 0x697F508861875B42 | ApiSet: undefined
 */
export declare function networkRegisterTunableBoolHash(contextHash: number | string, nameHash: number | string): [boolean, boolean];
/**
 * Hash: 0x3C891A251567DFCE | ApiSet: undefined
 */
export declare function networkQueryRespawnResults(): [any, any];
/**
 * Hash: 0xF0210268DB0974B1 | ApiSet: undefined
 */
export declare function networkRemovePresenceInvite(p0: any): boolean;
/**
 * Hash: 0x42FB3B532D526E6C | ApiSet: undefined
 */
export declare function networkRequestCloudTunables(): void;
/**
 * Hash: 0x924426BFFD82E915 | ApiSet: undefined
 */
export declare function networkRequestCloudBackgroundScripts(): boolean;
/**
 * Hash: 0x93CF869BAA0C4874 | ApiSet: undefined
 */
export declare function networkRemoveEntityArea(p0: any): boolean;
/**
 * Hash: 0x3364AA97340CA215 | ApiSet: undefined
 */
export declare function networkRegisterPlayerBroadcastVariables(numVars: number): number;
/**
 * Hash: 0xB69317BF5E782347 | ApiSet: undefined
 */
export declare function networkRequestControlOfEntity(entity: number | Entity): boolean;
/**
 * Hash: 0x5626D9D6810730D5 | ApiSet: undefined
 */
export declare function networkReportMyself(): void;
/**
 * Hash: 0x870DDFD5A4A796E4 | ApiSet: undefined
 */
export declare function networkRequestControlOfDoor(doorID: number): boolean;
/**
 * Hash: 0x3A8B55FDA4C8DDEF | ApiSet: undefined
 */
export declare function networkRegisterTunableIntHash(contextHash: number | string, nameHash: number | string): [boolean, number];
/**
 * Hash: 0xA670B3662FAFFBD0 | ApiSet: undefined
 */
export declare function networkRequestControlOfNetworkId(netId: number): boolean;
/**
 * ```
 * p4 and p5 are always 0 in scripts
 * ```
 * Hash: 0x9769F811D1785B03 | ApiSet: undefined
 */
export declare function networkRespawnCoords(player: number | string | Player, position: Vector3, p4: boolean, p5: boolean): void;
/**
 * Hash: 0x72433699B4E6DD64 | ApiSet: undefined
 */
export declare function networkResetBodyTracker(): void;
/**
 * Hash: 0xC3C7A6AFDB244624 | ApiSet: undefined
 */
export declare function networkSendInviteViaPresence(p2: any, p3: any): [boolean, number, any];
/**
 * Revives our local player who was previously dead.
 * **Note:** Call this once you resurrect the player (this does not need to be called every frame).
 * ```cpp
 * enum ePlayerSpawnLocation {
 * // system will decide
 * SPAWN_LOCATION_AUTOMATIC = 0,
 * SPAWN_LOCATION_NEAR_DEATH = 1,
 * SPAWN_LOCATION_NEAR_TEAM_MATES = 2,
 * // script defined area
 * SPAWN_LOCATION_MISSION_AREA = 3,
 * SPAWN_LOCATION_NEAR_OTHER_PLAYERS = 4,
 * SPAWN_LOCATION_NEAR_CURRENT_POSITION = 5,
 * SPAWN_LOCATION_AT_CURRENT_POSITION = 6,
 * SPAWN_LOCATION_NET_TEST_BED = 7,
 * SPAWN_LOCATION_CUSTOM_SPAWN_POINTS = 8,
 * SPAWN_LOCATION_OUTSIDE_SIMEON_GARAGE = 9,
 * SPAWN_LOCATION_NEAR_SPECIFIC_COORDS = 10,
 * SPAWN_LOCATION_AT_SPECIFIC_COORDS = 11,
 * SPAWN_LOCATION_AT_AIRPORT_ARRIVALS = 12,
 * SPAWN_LOCATION_AT_SPECIFIC_COORDS_IF_POSSIBLE = 13,
 * SPAWN_LOCATION_IN_SPECIFIC_ANGLED_AREA = 14,
 * SPAWN_LOCATION_NEAREST_RESPAWN_POINT = 15,
 * SPAWN_LOCATION_AT_SPECIFIC_COORDS_RACE_CORONA = 16,
 * SPAWN_LOCATION_INSIDE_GARAGE = 17,
 * SPAWN_LOCATION_INSIDE_PROPERTY = 18,
 * SPAWN_LOCATION_INSIDE_PROPERTY_OR_GARAGE = 19,
 * SPAWN_LOCATION_NEAR_DEATH_IMPROMPTU = 20,
 * SPAWN_LOCATION_NEAR_CURRENT_POSITION_SPREAD_OUT = 21,
 * SPAWN_LOCATION_NEAREST_RESPAWN_POINT_TO_SPECIFIC_COORDS = 22,
 * SPAWN_LOCATION_NEAREST_HOSPITAL = 23,
 * SPAWN_LOCATION_NEAREST_POLICE_STATION = 24,
 * SPAWN_LOCATION_NEAREST_HOTEL_TO_SPECIFIC_COORDS = 25,
 * SPAWN_LOCATION_MISSION_AREA_NEAR_CURRENT_POSITION = 26,
 * SPAWN_LOCATION_PRIVATE_YACHT = 27,
 * SPAWN_LOCATION_PRIVATE_YACHT_APARTMENT = 28,
 * SPAWN_LOCATION_PRIVATE_FRIEND_YACHT = 29,
 * SPAWN_LOCATION_PRIVATE_YACHT_NEAR_SHORE = 30,
 * SPAWN_LOCATION_NEAR_GANG_BOSS = 31,
 * SPAWN_LOCATION_NEAR_SPECIFIC_COORDS_WITH_GANG = 32,
 * SPAWN_LOCATION_GANG_DM = 33,
 * SPAWN_LOCATION_GANG_BOSS_PRIVATE_YACHT = 34,
 * SPAWN_LOCATION_OFFICE = 35,
 * SPAWN_LOCATION_CLUBHOUSE = 36,
 * SPAWN_LOCATION_NEAR_CURRENT_POSITION_AS_POSSIBLE = 37,
 * SPAWN_LOCATION_NEAR_CURRENT_PERCEIVED_POSITION = 38,
 * SPAWN_LOCATION_IE_WAREHOUSE = 39,
 * SPAWN_LOCATION_BUNKER = 40,
 * SPAWN_LOCATION_HANGAR = 41,
 * SPAWN_LOCATION_DEFUNCT_BASE = 42,
 * SPAWN_LOCATION_NIGHTCLUB = 43,
 * SPAWN_LOCATION_ARENA_GARAGE = 44,
 * SPAWN_LOCATION_CASINO = 45,
 * SPAWN_LOCATION_CASINO_APARTMENT = 46,
 * SPAWN_LOCATION_CASINO_OUTSIDE = 47,
 * SPAWN_LOCATION_ARCADE = 48,
 * SPAWN_LOCATION_CASINO_NIGHTCLUB = 49,
 * SPAWN_LOCATION_SUBMARINE = 50,
 * SPAWN_LOCATION_HEIST_ISLAND_NEAR_DEATH = 51,
 * SPAWN_LOCATION_HEIST_ISLAND_BEACH_PARTY = 52,
 * SPAWN_LOCATION_LAND_NEAR_SUBMARINE = 53,
 * SPAWN_LOCATION_CAR_MEET = 54,
 * SPAWN_LOCATION_AUTO_SHOP = 55,
 * SPAWN_LOCATION_FIXER_HQ = 56,
 * SPAWN_LOCATION_SITTING_SMOKING = 57,
 * SPAWN_LOCATION_DRUNK_WAKE_UP_MUSIC_STUDIO = 58,
 * SPAWN_LOCATION_MUSIC_STUDIO = 59,
 * TOTAL_SPAWN_LOCATIONS = 60
 * };
 * ```
 * ```cpp
 * enum eSpawnReason {
 * SPAWN_REASON_DEATH = 0,
 * SPAWN_REASON_TRANSITION,
 * SPAWN_REASON_MANUAL,
 * SPAWN_REASON_RESTORE_CHARACTER,
 * SPAWN_REASON_IN_VEHICLE
 * };
 * ```
 * ### Added parameters
 * *   **bUnpauseRenderPhases**: This boolean parameter will unpause the render phases when set to `true`.
 * *   **iSpawnLocation**: This integer parameter sets the player's spawn location metric for telemetry. See `ePlayerSpawnLocation` enum.
 * *   **iSpawnReason**: This integer parameter sets the player's spawn reason metric for telemetry. See `eSpawnReason` enum.
 * Hash: 0xEA23C49EAA83ACFB | ApiSet: undefined
 */
export declare function networkResurrectLocalPlayer(position: Vector3, heading: number, nInvincibilityTime: number, bLeaveDeadPed: boolean): void;
/**
 * ```
 * the first arg seems to be the network player handle (&handle) and the second var is pretty much always "" and the third seems to be a number between 0 and ~10 and the 4th is is something like 0 to 5 and I guess the 5th is a bool cuz it is always 0 or 1
 * does this send an invite to a player?
 * ```
 * Hash: 0x31D1D2B858D25E6B | ApiSet: undefined
 */
export declare function networkSendTransitionGamerInstruction(p1: string, p2: number, p3: number, p4: boolean): [boolean, number];
/**
 * ```
 * String "NETWORK_SEND_PRESENCE_TRANSITION_INVITE" is contained in the function in ida so this one is correct.
 * ```
 * Hash: 0xC116FF9B4D488291 | ApiSet: undefined
 */
export declare function networkSendPresenceTransitionInvite(p2: any, p3: any): [boolean, any, any];
/**
 * Hash: 0xCAE55F48D3D7875C | ApiSet: undefined
 */
export declare function networkSessionAddActiveMatchmakingGroup(groupId: number): void;
/**
 * Hash: 0xF1B84178F8674195 | ApiSet: undefined
 */
export declare function networkSeedRandomNumberGenerator(seed: number): void;
/**
 * Hash: 0xA73667484D7037C3 | ApiSet: undefined
 */
export declare function networkSessionBlockJoinRequests(toggle: boolean): void;
/**
 * Hash: 0xBE3E347A87ACEB82 | ApiSet: undefined
 */
export declare function networkSessionActivityQuickmatch(p0: any, p1: any, p2: any, p3: any): boolean;
/**
 * Hash: 0xB4AB419E0D86ACAE | ApiSet: undefined
 */
export declare function networkSessionChangeSlots(p0: number, p1: boolean): void;
/**
 * ```
 * Message is limited to 64 characters.
 * ```
 * Hash: 0x3A214F2EC889B100 | ApiSet: undefined
 */
export declare function networkSendTextMessage(message: string): [boolean, number];
/**
 * Hash: 0x2FBF47B1B36D36F9 | ApiSet: undefined
 */
export declare function networkSessionCancelInvite(): void;
/**
 * ```
 * unknown params
 * p0 = 0, 2, or 999 (The global is 999 by default.)
 * p1 = 0 (Always in every script it's found in atleast.)
 * p2 = 0, 3, or 4 (Based on a var that is determined by a function.)
 * p3 = maxPlayers (It's obvious in x360 scripts it's always 18)
 * p4 = 0 (Always in every script it's found in atleast.)
 * p5 = 0 or 1. (1 if network_can_enter_multiplayer, but set to 0 if other checks after that are passed.)
 * p5 is reset to 0 if,
 * Global_1315318 = 0 or Global_1315323 = 9 or 12 or (Global_1312629 = 0 && Global_1312631 = true/1) those are passed.
 * ```
 * Hash: 0x330ED4D05491934F | ApiSet: undefined
 */
export declare function networkSessionEnter(p0: any, p1: any, p2: any, maxPlayers: number, p4: any, p5: any): any;
/**
 * ```
 * p0 is always false and p1 varies.
 * NETWORK_SESSION_END(0, 1)
 * NETWORK_SESSION_END(0, 0)
 * Results in: "Connection to session lost due to an unknown network error. Please return to Grand Theft Auto V and try again later."
 * ```
 * Hash: 0xA02E59562D711006 | ApiSet: undefined
 */
export declare function networkSessionEnd(p0: boolean, p1: boolean): boolean;
/**
 * Hash: 0xD6D09A6F32F49EF1 | ApiSet: undefined
 */
export declare function networkSessionGetKickVote(player: number | string | Player): boolean;
/**
 * Hash: 0xE57397B4A3429DD0 | ApiSet: undefined
 */
export declare function networkSessionGetInviter(): number;
/**
 * Hash: 0x94BC51E9449D917F | ApiSet: undefined
 */
export declare function networkSessionCrewMatchmaking(p0: number, p1: number, p2: number, maxPlayers: number, p4: boolean): boolean;
/**
 * Hash: 0xA29177F7703B5644 | ApiSet: undefined
 */
export declare function networkSessionForceCancelInvite(): void;
/**
 * Hash: 0x2CFC76E0D087C994 | ApiSet: undefined
 */
export declare function networkSessionFriendMatchmaking(p0: number, p1: number, maxPlayers: number, p3: boolean): boolean;
/**
 * ```
 * Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
 * ```
 * Hash: 0x6F3D4ED9BEE4E61D | ApiSet: undefined
 */
export declare function networkSessionHost(p0: number, maxPlayers: number, p2: boolean): boolean;
/**
 * Hash: 0xED34C0C02C098BB7 | ApiSet: undefined
 */
export declare function networkSessionHostClosed(p0: number, maxPlayers: number): boolean;
/**
 * Hash: 0x56CE820830EF040B | ApiSet: undefined
 */
export declare function networkSessionGetMatchmakingGroupFree(p0: number): number;
/**
 * Hash: 0x74732C6CA90DA2B4 | ApiSet: undefined
 */
export declare function networkSessionIsClosedCrew(): boolean;
/**
 * Hash: 0x53AFD64C6758F2F9 | ApiSet: undefined
 */
export declare function networkSessionGetPrivateSlots(): number;
/**
 * Hash: 0xCEF70AA5B3F89BA1 | ApiSet: undefined
 */
export declare function networkSessionIsPrivate(): boolean;
/**
 * Hash: 0xFBCFA2EA2E206890 | ApiSet: undefined
 */
export declare function networkSessionIsClosedFriends(): boolean;
/**
 * ```
 * Does nothing in online but in offline it will cause the screen to fade to black. Nothing happens past then, the screen will sit at black until you restart GTA. Other stuff must be needed to actually host a session.
 * ```
 * Hash: 0xB9CFD27A5D578D83 | ApiSet: undefined
 */
export declare function networkSessionHostFriendsOnly(p0: number, maxPlayers: number): boolean;
/**
 * ```
 * Loads up the map that is loaded when beeing in mission creator
 * Player gets placed in a mix between online/offline mode
 * p0 is always 2 in R* scripts.
 * Appears to be patched in gtav b757 (game gets terminated) alonside with most other network natives to prevent online modding ~ghost30812
 * ```
 * Hash: 0xC74C33FCA52856D5 | ApiSet: undefined
 */
export declare function networkSessionHostSinglePlayer(p0: number): void;
/**
 * ```
 * Only works as host.
 * ```
 * Hash: 0xFA8904DC5F304220 | ApiSet: undefined
 */
export declare function networkSessionKickPlayer(player: number | string | Player): void;
/**
 * Hash: 0xBA416D68C631496A | ApiSet: undefined
 */
export declare function networkSessionIsVisible(): boolean;
/**
 * Hash: 0x855BC38818F6F684 | ApiSet: undefined
 */
export declare function networkSessionIsInVoiceSession(): boolean;
/**
 * Hash: 0xF3929C2379B60CCE | ApiSet: undefined
 */
export declare function networkSessionIsSolo(): boolean;
/**
 * Hash: 0xC6F8AB8A4189CF3A | ApiSet: undefined
 */
export declare function networkSessionJoinInvite(): void;
/**
 * Hash: 0xEF0912DDF7C4CB4B | ApiSet: undefined
 */
export declare function networkSessionIsVoiceSessionBusy(): boolean;
/**
 * Hash: 0x271CC6AB59EBF9A5 | ApiSet: undefined
 */
export declare function networkSessionMarkVisible(toggle: boolean): void;
/**
 * ```
 * playerTypes:
 * 0 = regular joiner
 * 4 = spectator
 * 8 = unknown
 * ```
 * Hash: 0x8B6A4DD0AF9CE215 | ApiSet: undefined
 */
export declare function networkSessionSetMatchmakingGroupMax(playerType: number, playerCount: number): void;
/**
 * Hash: 0x3442775428FD2DAA | ApiSet: undefined
 */
export declare function networkSessionLeaveSinglePlayer(): void;
/**
 * Hash: 0xF1EEA2DDA9FFA69D | ApiSet: undefined
 */
export declare function networkSessionSetMatchmakingMentalState(p0: any): void;
/**
 * Hash: 0x3F52E880AAF6C8CA | ApiSet: undefined
 */
export declare function networkSessionSetMatchmakingPropertyId(p0: boolean): void;
/**
 * Hash: 0x49EC8030F5015F8B | ApiSet: undefined
 */
export declare function networkSessionSetMatchmakingGroup(matchmakingGroup: number): void;
/**
 * Hash: 0xC19F6C8E7865A6FF | ApiSet: undefined
 */
export declare function networkSessionValidateJoin(p0: boolean): void;
/**
 * ```
 * Only one occurence in the scripts:
 * auto sub_cb43(auto a_0, auto a_1) {
 * if (g_2594CB._f1) {
 * `if (NETWORK::_855BC38818F6F684()) {`
 * `NETWORK::_ABD5E88B8A2D3DB2(&a_0._fB93);`
 * g_2594CB._f14\/\*{13}\*\/ = a_0._fB93;
 * g_2594CB._f4\/\*"64"\*\/ = a_1;
 * return 1;
 * }
 * }
 * return 0;
 * }
 * other:
 * looks like it passes a player in the paramater
 * Contains string "NETWORK_VOICE_CONNECT_TO_PLAYER" in ida
 * ```
 * Hash: 0xABD5E88B8A2D3DB2 | ApiSet: undefined
 */
export declare function networkSessionVoiceConnectToPlayer(): any;
/**
 * Hash: 0x9C1556705F864230 | ApiSet: undefined
 */
export declare function networkSessionVoiceHost(): void;
/**
 * Hash: 0x7F8413B7FC2AA6B9 | ApiSet: undefined
 */
export declare function networkSessionVoiceRespondToRequest(p0: boolean, p1: number): void;
/**
 * Hash: 0x23DFB504655D0CE4 | ApiSet: undefined
 */
export declare function networkSessionWasInvited(): boolean;
/**
 * Hash: 0x6793E42BE02B575D | ApiSet: undefined
 */
export declare function networkSessionVoiceLeave(): void;
/**
 * Hash: 0x75138790B4359A74 | ApiSet: undefined
 */
export declare function networkSetActivitySpectator(toggle: boolean): void;
/**
 * Hash: 0x5C707A667DF8B9FA | ApiSet: undefined
 */
export declare function networkSetChoiceMigrateOptions(toggle: boolean, player: number | string | Player): void;
/**
 * Hash: 0x0E4F77F7B9D74D84 | ApiSet: undefined
 */
export declare function networkSetActivityPlayerMax(playerCount: number): void;
/**
 * Hash: 0x5B8ED3DB018927B1 | ApiSet: undefined
 */
export declare function networkSessionVoiceSetTimeout(timeout: number): void;
/**
 * Hash: 0x796A87B3B68D1F3D | ApiSet: undefined
 */
export declare function networkSetCurrentDataManagerHandle(): [boolean, any];
/**
 * Hash: 0x9D277B76D1D12222 | ApiSet: undefined
 */
export declare function networkSetActivitySpectatorMax(maxSpectators: number): void;
/**
 * Hash: 0xD830567D88A1E873 | ApiSet: undefined
 */
export declare function networkSetEntityCanBlend(entity: number | Entity, toggle: boolean): void;
/**
 * ```cpp
 * enum eMpSettingSpawn
 * {
 * MP_SETTING_SPAWN_NULL = 0,
 * MP_SETTING_SPAWN_PROPERTY = 1,
 * MP_SETTING_SPAWN_LAST_POSITION = 2,
 * MP_SETTING_SPAWN_GARAGE = 3,
 * MP_SETTING_SPAWN_RANDOM = 4,
 * MP_SETTING_SPAWN_PRIVATE_YACHT = 5,
 * MP_SETTING_SPAWN_OFFICE = 6,
 * MP_SETTING_SPAWN_CLUBHOUSE = 7,
 * MP_SETTING_SPAWN_IE_WAREHOUSE = 8,
 * MP_SETTING_SPAWN_BUNKER = 9,
 * MP_SETTING_SPAWN_HANGAR = 10,
 * MP_SETTING_SPAWN_DEFUNCT_BASE = 11,
 * MP_SETTING_SPAWN_NIGHTCLUB = 12,
 * MP_SETTING_SPAWN_ARENA_GARAGE = 13,
 * MP_SETTING_SPAWN_CASINO_APARTMENT = 14,
 * MP_SETTING_SPAWN_ARCADE = 15,
 * MP_SETTING_SPAWN_SUBMARINE = 16,
 * MP_SETTING_SPAWN_CAR_MEET = 17,
 * MP_SETTING_SPAWN_AUTO_SHOP = 18,
 * MP_SETTING_SPAWN_FIXER_HQ = 19,
 * MP_SETTING_SPAWN_MAX = 20,
 * };
 * ```
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0xAA6D5451DC3448B6 | ApiSet: undefined
 */
export declare function networkSetCurrentSpawnSetting(mpSettingSpawn: number | string): void;
/**
 * Hash: 0xF808475FA571D823 | ApiSet: undefined
 */
export declare function networkSetFriendlyFireOption(toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x2C863ACDCD12B3DB | ApiSet: undefined
 */
export declare function networkSetCurrentMissionId(missionId: string): void;
/**
 * Hash: 0x4BA166079D658ED4 | ApiSet: undefined
 */
export declare function networkSetEntityGhostedWithOwner(entity: number | Entity, p1: boolean): void;
/**
 * Hash: 0x9CA5DE655269FEC4 | ApiSet: undefined
 */
export declare function networkSetInMpCutscene(p0: boolean, p1: boolean): void;
/**
 * ```
 * if set to true other network players can't see it
 * if set to false other network player can see it
 * =========================================
 * ^^ I attempted this by grabbing an object with GET_ENTITY_PLAYER_IS_FREE_AIMING_AT and setting this naive no matter the toggle he could still see it.
 * pc or last gen?
 * ^^ last-gen
 * ```
 * Hash: 0xF1CA12B18AEF5298 | ApiSet: undefined
 */
export declare function networkSetEntityInvisibleToNetwork(entity: number | Entity, toggle: boolean): void;
/**
 * Hash: 0x7206F674F2A3B1BB | ApiSet: undefined
 */
export declare function networkSetCurrentlySelectedGamerHandleFromInviteMenu(): [boolean, any];
/**
 * Hash: 0x423DE3854BB50894 | ApiSet: undefined
 */
export declare function networkSetInSpectatorMode(toggle: boolean, playerPed: number | Ped): void;
/**
 * Hash: 0x2D95C7E2D7E07307 | ApiSet: undefined
 */
export declare function networkSetLocalPlayerInvincibleTime(time: number): void;
/**
 * Hash: 0xCA2C8073411ECDB6 | ApiSet: undefined
 */
export declare function networkSetGamerInvitedToTransition(): number;
/**
 * Hash: 0xFC18DB55AE19E046 | ApiSet: undefined
 */
export declare function networkSetInFreeCamMode(toggle: boolean): void;
/**
 * Hash: 0x419594E137637120 | ApiSet: undefined
 */
export declare function networkSetInSpectatorModeExtended(toggle: boolean, playerPed: number | Ped, p2: boolean): void;
/**
 * Sets whether or not an object (created using `CREATE_OBJECT`, or similar) should have its position/rotation synchronized,
 * even if it is a 'static' object (for example, having flag 32 - Static - set in its archetype definition).
 * This has to be called during the same frame the object is created/registered for network, as otherwise it may already
 * have a remote clone created.
 * Once a remote clone is created, changing this value will not have any effect on said clone.
 * Hash: 0x0379DAF89BA09AA5 | ApiSet: undefined
 */
export declare function networkSetObjectForceStaticBlend(object: any, enabled: boolean): void;
/**
 * Hash: 0x3B3D11CD9FFCDFC9 | ApiSet: undefined
 */
export declare function networkSetMissionFinished(): void;
/**
 * Hash: 0x524FF0AEFF9C3973 | ApiSet: undefined
 */
export declare function networkSetLocalPlayerSyncLookAt(toggle: boolean): void;
/**
 * Hash: 0x70DA3BF8DACD3210 | ApiSet: undefined
 */
export declare function networkSetOverrideSpectatorMode(toggle: boolean): void;
/**
 * ```
 * On PC it's a nullsub which means it does absolutely nothing.
 * Now that Discord supports Rich Presence, R* might finally implement this for PC. Or maybe in future games like RDR2, GTA VI...
 * ```
 * Hash: 0x1DCCACDCFC569362 | ApiSet: undefined
 */
export declare function networkSetRichPresence(p0: number, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x66F010A4B031A331 | ApiSet: undefined
 */
export declare function networkSetInviteOnCallForInviteMenu(): number;
/**
 * ```
 * value must be < 255
 * ```
 * Hash: 0x1775961C2FBBCB5C | ApiSet: undefined
 */
export declare function networkSetPropertyId(id: number): void;
/**
 * Hash: 0x1B857666604B1A74 | ApiSet: undefined
 */
export declare function networkSetPlayerIsPassive(toggle: boolean): void;
/**
 * Hash: 0x7AC752103856FB20 | ApiSet: undefined
 */
export declare function networkSetScriptReadyForEvents(toggle: boolean): void;
/**
 * Hash: 0xF46A1E03E8755980 | ApiSet: undefined
 */
export declare function networkSetNoSpectatorChat(toggle: boolean): void;
/**
 * Hash: 0xCBF12D65F95AD686 | ApiSet: undefined
 */
export declare function networkSetTalkerProximity(value: number): void;
/**
 * This native does absolutely nothing, just a nullsub
 * Hash: 0x3E200C2BCF4164EB | ApiSet: undefined
 */
export declare function networkSetRichPresenceString(p0: number, textLabel: string): void;
/**
 * Hash: 0xD5B4883AC32F24C3 | ApiSet: undefined
 */
export declare function networkSetTeamOnlyChat(toggle: boolean): void;
/**
 * Hash: 0x30DE938B516F0AD2 | ApiSet: undefined
 */
export declare function networkSetTransitionActivityId(p0: any): void;
/**
 * Hash: 0x0C978FDA19692C2C | ApiSet: undefined
 */
export declare function networkSetTransitionVisibilityLock(p0: boolean, p1: boolean): void;
/**
 * Hash: 0x1CA59E306ECB80A5 | ApiSet: undefined
 */
export declare function networkSetThisScriptIsNetworkScript(maxNumMissionParticipants: number, p1: boolean, instanceId: number): void;
/**
 * ```
 * Used by Metric VEHICLE_DIST_DRIVEN
 * ```
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x8C70252FC40F320B | ApiSet: undefined
 */
export declare function networkSetVehicleTestDrive(toggle: boolean): void;
/**
 * Hash: 0xEF6212C2EFEF1A23 | ApiSet: undefined
 */
export declare function networkSetVoiceChannel(channel: number): void;
/**
 * Hash: 0xEF26739BCD9907D5 | ApiSet: undefined
 */
export declare function networkSetTransitionCreatorHandle(): any;
/**
 * p8, p9, p10 is another coordinate, or zero, often related to `GET_BLIP_COORDS` in the decompiled scripts.
 * Hash: 0x4BA92A18502BCA61 | ApiSet: undefined
 */
export declare function networkStartRespawnSearchInAngledAreaForPlayer(player: number | string | Player, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, width: number, p8: number, p9: number, p10: number, flags: number): boolean;
/**
 * ```
 * Allow vehicle wheels to be destructible even when the Vehicle entity is invincible.
 * ```
 * ```
 * NativeDB Introduced: v1365
 * ```
 * Hash: 0x890E2C5ABED7236D | ApiSet: undefined
 */
export declare function networkSetVehicleWheelsDestructible(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * One of the first things it does is get the players ped.
 * Then it calls a function that is used in some tasks and ped based functions.
 * ```
 * p5, p6, p7 is another coordinate (or zero), often related to `GET_BLIP_COORDS`, in the decompiled scripts.
 * Hash: 0x5A6FFA2433E2F14C | ApiSet: undefined
 */
export declare function networkStartRespawnSearchForPlayer(player: number | string | Player, position: Vector3, radius: number, p5: number, p6: number, p7: number, flags: number): boolean;
/**
 * Hash: 0xBABEC9E69A91C57B | ApiSet: undefined
 */
export declare function networkSetVoiceActive(toggle: boolean): void;
/**
 * Hash: 0x9A1B3FCDB36C8697 | ApiSet: undefined
 */
export declare function networkStartSynchronisedScene(netScene: number): void;
/**
 * ```
 * Example:
 * int playerHandle;
 * NETWORK_HANDLE_FROM_PLAYER(selectedPlayer, &playerHandle, 13);
 * NETWORK_SHOW_PROFILE_UI(&playerHandle);
 * ```
 * Hash: 0x859ED1CEA343FCA8 | ApiSet: undefined
 */
export declare function networkShowProfileUi(): number;
/**
 * ```
 * Returns true if the NAT type is Strict (3) and a certain number of connections have failed.
 * ```
 * Hash: 0x82A2B386716608F1 | ApiSet: undefined
 */
export declare function networkShouldShowConnectivityTroubleshooting(): boolean;
/**
 * Hash: 0x17E0198B3882C2CB | ApiSet: undefined
 */
export declare function networkStartSoloTutorialSession(): void;
/**
 * Hash: 0xC3BFED92026A2AAD | ApiSet: undefined
 */
export declare function networkTransitionTrack(hash: number | string, p1: number, p2: number, state: number, p4: number): void;
/**
 * ```
 * Always returns -1. Seems to be XB1 specific.
 * ```
 * Hash: 0xDEB2B99A1AF1A2A6 | ApiSet: undefined
 */
export declare function networkStartUserContentPermissionsCheck(netHandle: any): number;
/**
 * Hash: 0xC254481A4574CB2F | ApiSet: undefined
 */
export declare function networkStopSynchronisedScene(netScene: number): void;
/**
 * Hash: 0xB7C7F6AD6424304B | ApiSet: undefined
 */
export declare function networkUpdatePlayerScars(): void;
/**
 * Hash: 0xA0682D67EF1FBA3D | ApiSet: undefined
 */
export declare function networkSuppressInvite(toggle: boolean): void;
/**
 * ```
 * Returns defaultValue if the tunable doesn't exist.
 * ```
 * Hash: 0xC7420099936CE286 | ApiSet: undefined
 */
export declare function networkTryAccessTunableBoolHash(tunableContext: number | string, tunableName: number | string, defaultValue: boolean): boolean;
/**
 * ```
 * Lets objects spawn online simply do it like this:
 * int createdObject = OBJ_TO_NET(CREATE_OBJECT_NO_OFFSET(oball, pCoords.x, pCoords.y, pCoords.z, 1, 0, 0));
 * ```
 * Hash: 0x99BFDC94A603E541 | ApiSet: undefined
 */
export declare function objToNet(object: any): number;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xC1447451DDB512F0 | ApiSet: undefined
 */
export declare function networkUgcNav(p0: any, p1: any): void;
/**
 * Hash: 0x7368E683BB9038D6 | ApiSet: undefined
 */
export declare function networkUnregisterNetworkedEntity(entity: number | Entity): void;
/**
 * ```
 * Return the local Participant ID
 * ```
 * Hash: 0x90986E8876CE0A83 | ApiSet: undefined
 */
export declare function participantId(): number | string;
/**
 * ```
 * Has a 3rd param (int) since patch [???].
 * ```
 * ```
 * NativeDB Added Parameter 3: int p2
 * ```
 * Hash: 0x58C21165F6545892 | ApiSet: undefined
 */
export declare function openCommerceStore(p0: string, p1: string): void;
/**
 * Hash: 0xE26CCFF8094D8C74 | ApiSet: undefined
 */
export declare function refreshPlayerListStats(p0: number): boolean;
/**
 * Hash: 0xCD71A4ECAB22709E | ApiSet: undefined
 */
export declare function networkUseLogarithmicBlendingThisFrame(entity: number | Entity): void;
/**
 * ```
 * Old name: _NETWORK_SET_NETWORK_ID_DYNAMIC
 * ```
 * Hash: 0x2B1813ABA29016C5 | ApiSet: undefined
 */
export declare function networkUseHighPrecisionBlending(netID: number, toggle: boolean): void;
/**
 * ```
 * Used in am_mp_property_ext and am_mp_property_int
 * ```
 * ```
 * NativeDB Added Parameter 2: Ped ped
 * ```
 * Hash: 0x715135F4B82AC90D | ApiSet: undefined
 */
export declare function removeAllStickyBombsFromEntity(entity: number | Entity): void;
/**
 * ```
 * gets the network id of a ped
 * ```
 * Hash: 0x0EDEC3C276198689 | ApiSet: undefined
 */
export declare function pedToNet(ped: number | Ped): number;
/**
 * ```
 * Return the local Participant ID.
 * This native is exactly the same as 'PARTICIPANT_ID' native.
 * ```
 * Hash: 0x57A3BDDAD8E5AA0A | ApiSet: undefined
 */
export declare function participantIdToInt(): number;
/**
 * Hash: 0x42613035157E4208 | ApiSet: undefined
 */
export declare function reserveNetworkLocalVehicles(amount: number): void;
/**
 * ```
 * Internal logging string: SCRIPT_RESERVING_LOCAL_PEDS
 * ```
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x2C8DF5D129595281 | ApiSet: undefined
 */
export declare function reserveNetworkLocalPeds(amount: number): void;
/**
 * Hash: 0x72D0706CD6CCDB58 | ApiSet: undefined
 */
export declare function releaseAllCommerceItemImages(): void;
/**
 * Hash: 0xB60FEBA45333D36F | ApiSet: undefined
 */
export declare function reserveNetworkMissionPeds(amount: number): void;
/**
 * ```
 * NativeDB Added Parameter 1: Player player
 * NativeDB Added Parameter 2: int a
 * NativeDB Added Parameter 3: int b
 * ```
 * Hash: 0x472841A026D26D8B | ApiSet: undefined
 */
export declare function remoteCheatDetected(): boolean;
/**
 * ```
 * Internal logging string: SCRIPT_RESERVING_LOCAL_OBJECTS
 * ```
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x797F9C5E661D920E | ApiSet: undefined
 */
export declare function reserveNetworkLocalObjects(amount: number): void;
/**
 * Hash: 0xA2F952104FC6DD4B | ApiSet: undefined
 */
export declare function requestCommerceItemImage(index: number): boolean;
/**
 * Sets the alpha value used by [`_SET_LOCAL_PLAYER_AS_GHOST`](#\_0x5FFE9B4144F9712F), [`SET_NETWORK_VEHICLE_AS_GHOST`](#\_0x6274C4712850841E), and [`_NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER`](#\_0x4BA166079D658ED4).
 * Hash: 0x17330EBF2F2124A8 | ApiSet: undefined
 */
export declare function resetGhostedEntityAlpha(): void;
/**
 * Hash: 0x4E5C93BD0C32FBF8 | ApiSet: undefined
 */
export declare function reserveNetworkMissionObjects(amount: number): void;
/**
 * Hash: 0xE0031D3C8F36AB82 | ApiSet: undefined
 */
export declare function setEntityVisibleInCutscene(p0: any, p1: boolean, p2: boolean): void;
/**
 * Hash: 0x815E5E3073DA1D67 | ApiSet: undefined
 */
export declare function setBalanceAddMachine(): [boolean, string, string];
/**
 * Hash: 0xD1065D68947E7B6E | ApiSet: undefined
 */
export declare function setLocalPlayerVisibleInCutscene(p0: boolean, p1: boolean): void;
/**
 * Hash: 0x76B02E21ED27A469 | ApiSet: undefined
 */
export declare function reserveNetworkMissionVehicles(amount: number): void;
/**
 * Hash: 0xB8322EEB38BE7C26 | ApiSet: undefined
 */
export declare function setBalanceAddMachines(dataCount: number): [boolean, any, string];
/**
 * ```
 * `Enables a periodic ShapeTest within the NetBlender and invokes rage::netBlenderLinInterp::GoStraightToTarget (or some functional wrapper).`
 * ```
 * Hash: 0x838DA0936A24ED4D | ApiSet: undefined
 */
export declare function setNetworkEnableVehiclePositionCorrection(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Sets the provided entity visible for yourself for the current frame.
 * Hash: 0x241E289B5C059EDC | ApiSet: undefined
 */
export declare function setEntityLocallyVisible(entity: number | Entity): void;
/**
 * Formerly incorrectly named `USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR` due to incorrect treatment of console vs. PC native registration.
 * Native name guessed through ordering.
 * ```
 * NativeDB Added Parameter 2: BOOL p1
 * ```
 * Hash: 0x5FFE9B4144F9712F | ApiSet: undefined
 */
export declare function setLocalPlayerAsGhost(toggle: boolean): void;
/**
 * Sets the provided entity not visible for yourself for the current frame.
 * Hash: 0xE135A9FF3F5D05D8 | ApiSet: undefined
 */
export declare function setEntityLocallyInvisible(entity: number | Entity): void;
/**
 * Hash: 0xE5F773C1A1D9D168 | ApiSet: undefined
 */
export declare function setLocalPlayerInvisibleLocally(p0: boolean): void;
/**
 * Hash: 0xAAA553E7DD28A457 | ApiSet: undefined
 */
export declare function setNetworkCutsceneEntities(toggle: boolean): void;
/**
 * Sets the alpha value used by [`_SET_LOCAL_PLAYER_AS_GHOST`](#\_0x5FFE9B4144F9712F), [`SET_NETWORK_VEHICLE_AS_GHOST`](#\_0x6274C4712850841E), and [`_NETWORK_SET_ENTITY_GHOSTED_WITH_OWNER`](#\_0x4BA166079D658ED4).
 * 'Solidness' cannot be achieved using 255 - this will have the opposite effect of it defaulting to 128 it seems (or just having no effect at all).
 * Hash: 0x658500AE6D723A7E | ApiSet: undefined
 */
export declare function setGhostedEntityAlpha(alpha: number): void;
/**
 * ```
 * Whether or not another player is allowed to take control of the entity
 * ```
 * Hash: 0x299EEB23175895FC | ApiSet: undefined
 */
export declare function setNetworkIdCanMigrate(netId: number, toggle: boolean): void;
/**
 * Hash: 0x7619364C82D3BF14 | ApiSet: undefined
 */
export declare function setLocalPlayerVisibleLocally(p0: boolean): void;
/**
 * Hash: 0xE05E81A888FA63C8 | ApiSet: undefined
 */
export declare function setNetworkIdExistsOnAllMachines(netId: number, toggle: boolean): void;
/**
 * Hash: 0xA8A024587329F36A | ApiSet: undefined
 */
export declare function setNetworkIdAlwaysExistsForPlayer(netId: number, player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0x6274C4712850841E | ApiSet: undefined
 */
export declare function setNetworkVehicleAsGhost(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * `rage::netBlenderLinInterp::GetPositionMaxForUpdateLevel`
 * ```
 * Hash: 0xA2A707979FE754DC | ApiSet: undefined
 */
export declare function setNetworkVehiclePositionUpdateMultiplier(vehicle: number | Vehicle, multiplier: number): void;
/**
 * Hash: 0xA6928482543022B4 | ApiSet: undefined
 */
export declare function setNetworkIdVisibleInCutscene(netId: number, p1: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Added Parameter 3: Any p2
 * NativeDB Added Parameter 4: Any p3
 * ```
 * Hash: 0xEC51713AB6EC36E8 | ApiSet: undefined
 */
export declare function setNetworkVehicleRespotTimer(netId: number, time: number): void;
/**
 * Enables ghosting between specific players. Name is between `_SET_RELATIONSHIP_GROUP_DONT_AFFECT_WANTED_LEVEL` and `SET_ROADS_BACK_TO_ORIGINAL`.
 * Hash: 0xA7C511FA1C5BDA38 | ApiSet: undefined
 */
export declare function setRelationshipToPlayer(player: number | string | Player, p1: boolean): void;
/**
 * Hash: 0x12B37D54667DB0B8 | ApiSet: undefined
 */
export declare function setPlayerInvisibleLocally(player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0xFAA10F1FAFB11AF2 | ApiSet: undefined
 */
export declare function setPlayerVisibleLocally(player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0x3448505B6E35262D | ApiSet: undefined
 */
export declare function textureDownloadGetName(p0: number): string;
/**
 * Hash: 0x5776ED562C134687 | ApiSet: undefined
 */
export declare function textureDownloadHasFailed(p0: number): boolean;
/**
 * ```
 * Access to the store for shark cards etc...
 * ```
 * Hash: 0x9641A9FF718E9C5E | ApiSet: undefined
 */
export declare function setStoreEnabled(toggle: boolean): void;
/**
 * Hash: 0x0B203B4AFDE53A4F | ApiSet: undefined
 */
export declare function titleTextureDownloadRequest(FilePath: string, Name: string, p2: boolean): number;
/**
 * Disconnects you from the session, and starts loading single player, however you still remain connected to the server (only if you're the host, if you're not then you also (most likely) get disconnected from the server) and other players will not be able to join until you exit the game.
 * If you're already in SP then it'll re-load singleplayer.
 * You might need to DoScreenFadeIn and ShutdownLoadingScreen otherwise you probably won't end up loading into SP at all.
 * Somewhat related note: opening the pause menu after loading into this 'singleplayer' mode crashes the game.
 * Hash: 0x9ECA15ADFE141431 | ApiSet: undefined
 */
export declare function shutdownAndLoadMostRecentSave(): boolean;
/**
 * ```
 * Starts a new singleplayer game (at the prologue).
 * ```
 * Hash: 0x593850C16A36B692 | ApiSet: undefined
 */
export declare function shutdownAndLaunchSinglePlayerGame(): void;
/**
 * Hash: 0x16160DA74A8E74A2 | ApiSet: undefined
 */
export declare function textureDownloadRequest(FilePath: string, Name: string, p3: boolean): [number, number];
/**
 * Hash: 0x61A885D3F7CFEE9A | ApiSet: undefined
 */
export declare function ugcClearOfflineQuery(): void;
/**
 * Hash: 0xE9B99B6853181409 | ApiSet: undefined
 */
export declare function ugcCancelQuery(): void;
/**
 * Hash: 0x17440AA15D1D3739 | ApiSet: undefined
 */
export declare function ugcClearCreateResult(): void;
/**
 * Hash: 0xBA96394A0EECFA65 | ApiSet: undefined
 */
export declare function ugcClearQueryResults(): void;
/**
 * Hash: 0x487EB90B98E9FB19 | ApiSet: undefined
 */
export declare function textureDownloadRelease(p0: number): void;
/**
 * Hash: 0xA1E5E0204A6FCC70 | ApiSet: undefined
 */
export declare function ugcClearModifyResult(): void;
/**
 * ```
 * p1 = 6
 * ```
 * Hash: 0x46FB3ED415C7641C | ApiSet: undefined
 */
export declare function triggerScriptCrcCheckOnPlayer(player: number | string | Player, p1: number, scriptHash: number | string): boolean;
/**
 * Hash: 0x152D90E4C1B4738A | ApiSet: undefined
 */
export declare function ugcCopyContent(): [boolean, any, any];
/**
 * Hash: 0xD5A4B59980401588 | ApiSet: undefined
 */
export declare function ugcGetBookmarkedContent(p0: any, p1: any): [boolean, any, any];
/**
 * Hash: 0x941E5306BCD7C2C7 | ApiSet: undefined
 */
export declare function ugcDidGetSucceed(): any;
/**
 * Hash: 0xA7BAB11E7C9C6C5A | ApiSet: undefined
 */
export declare function ugcGetContentCategory(p0: number): number;
/**
 * Hash: 0x40F7E66472DF3E5C | ApiSet: undefined
 */
export declare function ugcGetCachedDescription(p0: any, p1: any): string;
/**
 * Hash: 0x37025B27D9B658B1 | ApiSet: undefined
 */
export declare function ugcGetContentFileVersion(p0: any, p1: any): any;
/**
 * Hash: 0xA9240A96C74CCA13 | ApiSet: undefined
 */
export declare function ugcGetContentIsVerified(p0: any): boolean;
/**
 * Hash: 0x993CBE59D350D225 | ApiSet: undefined
 */
export declare function ugcGetContentHasPlayerBookmarked(p0: any): boolean;
/**
 * Hash: 0x3A17A27D75C74887 | ApiSet: undefined
 */
export declare function ugcGetContentHash(): number;
/**
 * Hash: 0x7CF0448787B23758 | ApiSet: undefined
 */
export declare function ugcGetContentDescriptionHash(p0: any): number;
/**
 * Hash: 0x32DD916F3F7C9672 | ApiSet: undefined
 */
export declare function ugcGetContentLanguage(p0: any): any;
/**
 * Hash: 0xBF09786A7FCAB582 | ApiSet: undefined
 */
export declare function ugcGetContentName(p0: any): string;
/**
 * Hash: 0x70EA8DA57840F9BE | ApiSet: undefined
 */
export declare function ugcGetContentHasPlayerRecord(p0: any): boolean;
/**
 * Hash: 0xBAF6BABF9E7CCC13 | ApiSet: undefined
 */
export declare function ugcGetContentPath(p0: number): [string, number];
/**
 * ```
 * Return the mission id of a job.
 * ```
 * Hash: 0x55AA95F481D694D2 | ApiSet: undefined
 */
export declare function ugcGetContentId(p0: number): string;
/**
 * Hash: 0xE0A6138401BCB837 | ApiSet: undefined
 */
export declare function ugcGetContentNum(): any;
/**
 * Hash: 0x3054F114121C21EA | ApiSet: undefined
 */
export declare function ugcGetContentIsPublished(p0: any): boolean;
/**
 * Hash: 0x1ACCFBA3D8DAB2EE | ApiSet: undefined
 */
export declare function ugcGetContentRating(p0: any, p1: any): any;
/**
 * Hash: 0x4E548C0D7AE39FF9 | ApiSet: undefined
 */
export declare function ugcGetContentRatingNegativeCount(p0: any, p1: any): any;
/**
 * Hash: 0x87E5C46C187FE0AE | ApiSet: undefined
 */
export declare function ugcGetContentRatingPositiveCount(p0: any, p1: any): any;
/**
 * Hash: 0xCFD115B373C0DF63 | ApiSet: undefined
 */
export declare function ugcGetContentUpdatedDate(p0: any): any;
/**
 * Hash: 0xCD67AD041A394C9C | ApiSet: undefined
 */
export declare function ugcGetContentUserId(p0: number): string;
/**
 * Hash: 0x759299C5BB31D2A9 | ApiSet: undefined
 */
export declare function ugcGetContentRatingCount(p0: any, p1: any): any;
/**
 * Hash: 0xC55A0B40FFB1ED23 | ApiSet: undefined
 */
export declare function ugcGetCreateContentId(): string;
/**
 * Hash: 0x769951E2455E2EB5 | ApiSet: undefined
 */
export declare function ugcGetContentTotal(): any;
/**
 * Hash: 0x9F6E2821885CAEE2 | ApiSet: undefined
 */
export declare function ugcGetCrewContent(p0: any, p1: any, p2: any): [boolean, any, any];
/**
 * Hash: 0x703F12425ECA8BF5 | ApiSet: undefined
 */
export declare function ugcGetContentUserName(p0: any): string;
/**
 * Hash: 0xF9E1CCAE8BA4C281 | ApiSet: undefined
 */
export declare function ugcGetFriendContent(p0: any, p1: any): [boolean, any, any];
/**
 * Hash: 0xFBC5E768C7A77A6A | ApiSet: undefined
 */
export declare function ugcGetCreateResult(): any;
/**
 * Hash: 0x597F8DBA9B206FC7 | ApiSet: undefined
 */
export declare function ugcGetCreatorNum(): any;
/**
 * Hash: 0x678BB03C1A3BD51E | ApiSet: undefined
 */
export declare function ugcGetGetByCategory(p0: any, p1: any, p2: any): [boolean, any, any];
/**
 * Hash: 0x3195F8DD0D531052 | ApiSet: undefined
 */
export declare function ugcGetMyContent(p0: any, p1: any): [boolean, any, any];
/**
 * ```
 * Return the root content id of a job.
 * ```
 * Hash: 0xC0173D6BFF4E0348 | ApiSet: undefined
 */
export declare function ugcGetRootContentId(p0: number): string;
/**
 * Hash: 0x5A0A3D1A186A5508 | ApiSet: undefined
 */
export declare function ugcGetModifyResult(): any;
/**
 * Hash: 0xD53ACDBEF24A46E8 | ApiSet: undefined
 */
export declare function ugcIsGetting(): boolean;
/**
 * Hash: 0xEDF7F927136C224B | ApiSet: undefined
 */
export declare function ugcGetQueryResult(): any;
/**
 * Hash: 0x5E24341A7F92A74B | ApiSet: undefined
 */
export declare function ugcHasCreateFinished(): boolean;
/**
 * Hash: 0x299EF3C576773506 | ApiSet: undefined
 */
export declare function ugcHasModifyFinished(): boolean;
/**
 * Hash: 0x02ADA21EA2F6918F | ApiSet: undefined
 */
export declare function ugcHasGetFinished(): boolean;
/**
 * Hash: 0xF53E48461B71EECB | ApiSet: undefined
 */
export declare function ugcIsLanguageSupported(p0: any): boolean;
/**
 * Hash: 0x5CAE833B0EE0C500 | ApiSet: undefined
 */
export declare function ugcPoliciesMakePrivate(p0: any): boolean;
/**
 * Hash: 0xC7397A83F7A2A462 | ApiSet: undefined
 */
export declare function ugcQueryByContentIds(count: number, latestVersion: boolean, contentTypeName: string): [boolean, any];
/**
 * Hash: 0x1DE0F5F50D723CAA | ApiSet: undefined
 */
export declare function ugcPublish(contentId: string, baseContentId: string, contentTypeName: string): boolean;
/**
 * Hash: 0x274A1519DFC1094F | ApiSet: undefined
 */
export declare function ugcSetBookmarked(contentId: string, bookmarked: boolean, contentTypeName: string): boolean;
/**
 * Hash: 0x158EC424F35EC469 | ApiSet: undefined
 */
export declare function ugcQueryByContentId(contentId: string, latestVersion: boolean, contentTypeName: string): boolean;
/**
 * Hash: 0x6D4CB481FAC835E8 | ApiSet: undefined
 */
export declare function ugcQueryRecentlyCreatedContent(offset: number, count: number, contentTypeName: string, p3: number): boolean;
/**
 * Hash: 0x308F96458B7087CC | ApiSet: undefined
 */
export declare function ugcTextureDownloadRequest(p1: any, p2: any, p3: any, p5: boolean): [any, any, any];
/**
 * Hash: 0x9BF438815F5D96EA | ApiSet: undefined
 */
export declare function ugcQueryMyContent(p0: any, p1: any, p3: any, p4: any, p5: any): [boolean, any];
/**
 * Hash: 0x7FD2990AF016795E | ApiSet: undefined
 */
export declare function ugcRequestContentDataFromParams(contentTypeName: string, contentId: string, p2: number, p3: number, p4: number): number;
/**
 * Hash: 0x5E0165278F6339EE | ApiSet: undefined
 */
export declare function ugcRequestCachedDescription(p0: number): number;
/**
 * Hash: 0xD05D1A6C74DA3498 | ApiSet: undefined
 */
export declare function ugcSetDeleted(p1: boolean): [boolean, any, any];
/**
 * Hash: 0x171DF6A0C07FB3DC | ApiSet: undefined
 */
export declare function ugcRequestContentDataFromIndex(p0: number, p1: number): number;
/**
 * ```
 * calls from vehicle to net.
 * ```
 * Hash: 0xB4C94523F023419C | ApiSet: undefined
 */
export declare function vehToNet(vehicle: number | Vehicle): number;
/**
 * Hash: 0xF98DDE0A8ED09323 | ApiSet: undefined
 */
export declare function ugcSetQueryDataFromOffline(p0: boolean): void;
/**
 * Hash: 0x77758139EC9B66C7 | ApiSet: undefined
 */
export declare function usePlayerColourInsteadOfTeamColour(toggle: boolean): void;
/**
 * Hash: 0x5619BFA07CFD7833 | ApiSet: undefined
 */
export declare function addPedDecorationFromHashesInCorona(ped: number | Ped, collection: number | string, overlay: number | string): void;
/**
 * ```
 * Same as SET_PED_ARMOUR, but ADDS 'amount' to the armor the Ped already has.
 * ```
 * Hash: 0x5BA652A0CD14DF2F | ApiSet: undefined
 */
export declare function addArmourToPed(ped: number | Ped, amount: number): void;
/**
 * ```
 * Applies an Item from a PedDecorationCollection to a ped. These include tattoos and shirt decals.
 * collection - PedDecorationCollection filename hash
 * overlay - Item name hash
 * Example:
 * Entry inside "mpbeach_overlays.xml" -
 * <Item>
 * <uvPos x="0.500000" y="0.500000" />
 * <scale x="0.600000" y="0.500000" />
 * <rotation value="0.000000" />
 * <nameHash>FM_Hair_Fuzz</nameHash>
 * <txdHash>mp_hair_fuzz</txdHash>
 * <txtHash>mp_hair_fuzz</txtHash>
 * <zone>ZONE_HEAD</zone>
 * <type>TYPE_TATTOO</type>
 * <faction>FM</faction>
 * <garment>All</garment>
 * <gender>GENDER_DONTCARE</gender>
 * <award />
 * <awardLevel />
 * </Item>
 * Code:
 * `PED::_0x5F5D1665E352A839(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("mpbeach_overlays"), MISC::GET_HASH_KEY("fm_hair_fuzz"))`
 * ```
 * Hash: 0x5F5D1665E352A839 | ApiSet: undefined
 */
export declare function addPedDecorationFromHashes(ped: number | Ped, collection: number | string, overlay: number | string): void;
/**
 * Sets an area where scenarios are blocked
 * Hash: 0x1B5C85C612E5256E | ApiSet: undefined
 */
export declare function addScenarioBlockingArea(posMinX: number, posMinY: number, posMinZ: number, posMaxX: number, posMaxY: number, posMaxZ: number, network: boolean, cancelActive: boolean, blockPeds: boolean, blockVehicles: boolean): number;
/**
 * ```
 * Can't select void. This function returns nothing. The hash of the created relationship group is output in the second parameter.
 * ```
 * Hash: 0xF372BC22FCB88606 | ApiSet: undefined
 */
export declare function addRelationshipGroup(name: string): [any, number];
/**
 * ```
 * damages a ped with the given amount
 * ----
 * armorFirst means it will damage/lower the armor first before damaging the player.
 * setting damageAmount to a negative amount will cause the player or the armor (depending on armorFirst) to be healed by damageAmount instead.
 * ```
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * Hash: 0x697157CED63F18D4 | ApiSet: undefined
 */
export declare function applyDamageToPed(ped: number | Ped, damageAmount: number, armorFirst: boolean): void;
/**
 * ```
 * scar
 * blushing
 * cs_flush_anger
 * cs_flush_anger_face
 * bruise
 * bruise_large
 * herpes
 * ArmorBullet
 * basic_dirt_cloth
 * basic_dirt_skin
 * cs_trev1_dirt
 * ```
 * Hash: 0x397C38AA7B4A5F83 | ApiSet: undefined
 */
export declare function applyPedDamageDecal(ped: number | Ped, damageZone: number, xOffset: number, yOffset: number, heading: number, scale: number, alpha: number, variation: number, fadeIn: boolean, decalName: string): void;
/**
 * ```
 * Found one occurence in re_crashrescue.c4
 * `PED::APPLY_PED_BLOOD(l_4B, 3, 0.0, 0.0, 0.0, "wound_sheet");`
 * ```
 * Hash: 0x83F7E01C7B769A26 | ApiSet: undefined
 */
export declare function applyPedBlood(ped: number | Ped, boneIndex: number, xRot: number, yRot: number, zRot: number, woundType: string): void;
/**
 * Hash: 0x816F6981C60BF53B | ApiSet: undefined
 */
export declare function applyPedBloodDamageByZone(ped: number | Ped, p1: any, p2: number, p3: number, p4: any): void;
/**
 * Hash: 0xE43A13C9E4CCCBCF | ApiSet: undefined
 */
export declare function blockPedDeadBodyShockingEvents(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x3311E47B91EDCBBC | ApiSet: undefined
 */
export declare function applyPedBloodByZone(ped: number | Ped, p1: any, p2: number, p3: number): any;
/**
 * Hash: 0xEACEEDA81751915C | ApiSet: undefined
 */
export declare function canCreateRandomBikeRider(): boolean;
/**
 * Applies blood damage to a ped with specific parameters for zone, UV offsets, rotation, scale, and initial aging.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xEF0D582CBF2D9B0F | ApiSet: undefined
 */
export declare function applyPedBloodSpecific(ped: number | Ped, component: number, u: number, v: number, rotation: number, scale: number, forcedFrame: number, preAge: number, bloodName: string): void;
/**
 * Hash: 0x5EE2CAFF7F17770D | ApiSet: undefined
 */
export declare function canCreateRandomCops(): boolean;
/**
 * ```
 * Damage Packs:
 * "SCR_TrevorTreeBang"
 * "HOSPITAL_0"
 * "HOSPITAL_1"
 * "HOSPITAL_2"
 * "HOSPITAL_3"
 * "HOSPITAL_4"
 * "HOSPITAL_5"
 * "HOSPITAL_6"
 * "HOSPITAL_7"
 * "HOSPITAL_8"
 * "HOSPITAL_9"
 * "SCR_Dumpster"
 * "BigHitByVehicle"
 * "SCR_Finale_Michael_Face"
 * "SCR_Franklin_finb"
 * "SCR_Finale_Michael"
 * "SCR_Franklin_finb2"
 * "Explosion_Med"
 * "SCR_Torture"
 * "SCR_TracySplash"
 * "Skin_Melee_0"
 * Additional damage packs:
 * gist.github.com/alexguirre/f3f47f75ddcf617f416f3c8a55ae2227
 * ```
 * Hash: 0x46DF918788CB093F | ApiSet: undefined
 */
export declare function applyPedDamagePack(ped: number | Ped, damagePack: string, damage: number, mult: number): void;
/**
 * Hash: 0xB8EB95E5B4E56978 | ApiSet: undefined
 */
export declare function canCreateRandomDriver(): boolean;
/**
 * ```
 * Prevents the ped from going limp.
 * [Example: Can prevent peds from falling when standing on moving vehicles.]
 * ```
 * Hash: 0x128F79EDCECE4FD5 | ApiSet: undefined
 */
export declare function canPedRagdoll(ped: number | Ped): boolean;
/**
 * Hash: 0x272E4723B56A3B96 | ApiSet: undefined
 */
export declare function attachSynchronizedSceneToEntity(sceneID: number, entity: number | Entity, boneIndex: number): void;
/**
 * Hash: 0x6CD5A433374D4CFB | ApiSet: undefined
 */
export declare function canPedSeeHatedPed(ped1: number | Ped, ped2: number | Ped): boolean;
/**
 * Hash: 0xE6CA85E7259CE16B | ApiSet: undefined
 */
export declare function clearAllPedVehicleForcedSeatUsage(ped: number | Ped): void;
/**
 * Hash: 0x3E8349C08E4B82E4 | ApiSet: undefined
 */
export declare function canCreateRandomPed(unk: boolean): boolean;
/**
 * Hash: 0xEAD42DE3610D0721 | ApiSet: undefined
 */
export declare function canPedInCombatSeeTarget(ped: number | Ped, target: number | Ped): boolean;
/**
 * Hash: 0x726256CC1EEB182F | ApiSet: undefined
 */
export declare function clearFacialIdleAnimOverride(ped: number | Ped): void;
/**
 * Hash: 0x51AC07A44D4F5B8A | ApiSet: undefined
 */
export declare function canKnockPedOffVehicle(ped: number | Ped): boolean;
/**
 * Hash: 0x8844BBFCE30AA9E9 | ApiSet: undefined
 */
export declare function clearPedAlternateWalkAnim(ped: number | Ped, p1: number): void;
/**
 * Hash: 0xCD8A7537A9B52F06 | ApiSet: undefined
 */
export declare function clearAllPedProps(ped: number | Ped): void;
/**
 * ```
 * CLEAR_PED_*
 * ```
 * Hash: 0xC79196DCB36F6121 | ApiSet: undefined
 */
export declare function clearPedCoverClipsetOverride(ped: number | Ped): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x637822DC2AFEEBF8 | ApiSet: undefined
 */
export declare function clearFacialClipsetOverride(ped: number | Ped): void;
/**
 * Hash: 0x4AFE3690D7E0B5AC | ApiSet: undefined
 */
export declare function clearPedDriveByClipsetOverride(ped: number | Ped): void;
/**
 * Hash: 0x6585D955A68452A5 | ApiSet: undefined
 */
export declare function clearPedEnvDirt(ped: number | Ped): void;
/**
 * Hash: 0xD8D19675ED5FBDCE | ApiSet: undefined
 */
export declare function clearPedAlternateMovementAnim(ped: number | Ped, stance: number, p2: number): void;
/**
 * Clears the blood on a ped.
 * Hash: 0x8FE22675A5A45817 | ApiSet: undefined
 */
export declare function clearPedBloodDamage(ped: number | Ped): void;
/**
 * Hash: 0xE3B27E70CEAB9F0C | ApiSet: undefined
 */
export declare function clearPedDecorationsLeaveScars(ped: number | Ped): void;
/**
 * Hash: 0x0E5173C163976E38 | ApiSet: undefined
 */
export declare function clearPedDecorations(ped: number | Ped): void;
/**
 * ```
 * Somehow related to changing ped's clothes.
 * ```
 * Hash: 0x56E3B78C5408D9F4 | ApiSet: undefined
 */
export declare function clearPedBloodDamageByZone(ped: number | Ped, p1: number): void;
/**
 * Hash: 0x1280804F7CFD2D6C | ApiSet: undefined
 */
export declare function clearPedParachutePackVariation(ped: number | Ped): void;
/**
 * ```
 * p1: from 0 to 5 in the b617d scripts.
 * p2: "blushing" and "ALL" found in the b617d scripts.
 * ```
 * Hash: 0x523C79AEEFCC4A2A | ApiSet: undefined
 */
export declare function clearPedDamageDecalByZone(ped: number | Ped, p1: number, p2: string): void;
/**
 * Hash: 0x0943E5B8E078E76E | ApiSet: undefined
 */
export declare function clearPedProp(ped: number | Ped, propId: number): void;
/**
 * Hash: 0x8EF6B7AC68E2F01B | ApiSet: undefined
 */
export declare function clearPedLastDamageBone(ped: number | Ped): void;
/**
 * ```
 * It clears the wetness of the selected Ped/Player. Clothes have to be wet to notice the difference.
 * ```
 * Hash: 0x9C720776DAA43E7E | ApiSet: undefined
 */
export declare function clearPedWetness(ped: number | Ped): void;
/**
 * ```
 * Clears the relationship between two groups. This should be called twice (once for each group).
 * Relationship types:
 * 0 = Companion
 * 1 = Respect
 * 2 = Like
 * 3 = Neutral
 * 4 = Dislike
 * 5 = Hate
 * 255 = Pedestrians
 * (Credits: Inco)
 * Example:
 * `PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);`
 * `PED::CLEAR_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);`
 * ```
 * Hash: 0x5E29243FB56FC6D4 | ApiSet: undefined
 */
export declare function clearRelationshipBetweenGroups(relationship: number, group1: number | string, group2: number | string): void;
/**
 * Removes the scubagear (for mp male: component id: 8, drawableId: 123, textureId: any) from peds. Does not play the 'remove scuba gear' animation, but instantly removes it.
 * Hash: 0xB50EB4CCB29704AC | ApiSet: undefined
 */
export declare function clearPedScubaGearVariation(ped: number | Ped): void;
/**
 * Hash: 0x2E05208086BA0651 | ApiSet: undefined
 */
export declare function clearPedNonCreationArea(): void;
/**
 * ```
 * There seem to be 26 flags
 * ```
 * Hash: 0xD86D101FCFD00A4B | ApiSet: undefined
 */
export declare function clearRagdollBlockingFlags(ped: number | Ped, flags: number): void;
/**
 * Hash: 0x687C0B594907D2E8 | ApiSet: undefined
 */
export declare function clearPedStoredHatProp(ped: number | Ped): void;
/**
 * Used one time in fmmc_launcher.c instead of CLONE_PED because ?
 * Hash: 0x668FD40BCBA5DE48 | ApiSet: undefined
 */
export declare function clonePedEx(ped: number | Ped, heading: number, isNetwork: boolean, bScriptHostPed: boolean, p4: any): number;
/**
 * Creates a copy of the passed ped, optionally setting it as local and/or shallow-copying the head blend data.
 * Hash: 0xEF29A16337FACADB | ApiSet: undefined
 */
export declare function clonePed(ped: number | Ped, isNetwork: boolean, bScriptHostPed: boolean, copyHeadBlendFlag: boolean): number;
/**
 * ```
 * Creates a new NaturalMotion message.
 * startImmediately: If set to true, the character will perform the message the moment it receives it by GIVE_PED_NM_MESSAGE. If false, the Ped will get the message but won't perform it yet. While it's a boolean value, if negative, the message will not be initialized.
 * messageId: The ID of the NaturalMotion message.
 * If a message already exists, this function does nothing. A message exists until the point it has been successfully dispatched by GIVE_PED_NM_MESSAGE.
 * ```
 * Hash: 0x418EF2A1BCE56685 | ApiSet: undefined
 */
export declare function createNmMessage(startImmediately: boolean, messageId: number): void;
/**
 * ```
 * Copies ped's components and props to targetPed.
 * ```
 * Hash: 0xE952D6431689AD9A | ApiSet: undefined
 */
export declare function clonePedToTarget(ped: number | Ped, targetPed: number | Ped): void;
/**
 * ```
 * Creates a new ped group.
 * Groups can contain up to 8 peds.
 * The parameter is unused.
 * Returns a handle to the created group, or 0 if a group couldn't be created.
 * ```
 * Hash: 0x90370EBE0FEE1A3D | ApiSet: undefined
 */
export declare function createGroup(unused: number): number;
/**
 * Hash: 0x148B08C2D2ACB884 | ApiSet: undefined
 */
export declare function clonePedToTargetEx(ped: number | Ped, targetPed: number | Ped, p2: any): void;
/**
 * ```
 * vb.net
 * Dim ped_handle As Integer
 * With Game.Player.Character
 * Dim pos As Vector3 = .Position + .ForwardVector * 3
 * ped_handle = Native.Function.Call(Of Integer)(Hash.CREATE_RANDOM_PED, pos.X, pos.Y, pos.Z)
 * End With
 * Creates a Ped at the specified location, returns the Ped Handle.
 * Ped will not act until SET_PED_AS_NO_LONGER_NEEDED is called.
 * ```
 * Hash: 0xB4AC7D0CF06BFE8F | ApiSet: undefined
 */
export declare function createRandomPed(posX: number, posY: number, posZ: number): number;
/**
 * Hash: 0x8C4F3BF23B6237DB | ApiSet: undefined
 */
export declare function createParachuteBagObject(ped: number | Ped, p1: boolean, p2: boolean): any;
/**
 * Hash: 0x7DD959874C1FD534 | ApiSet: undefined
 */
export declare function createPedInsideVehicle(vehicle: number | Vehicle, pedType: number, modelHash: number | string, seat: number, isNetwork: boolean, bScriptHostPed: boolean): number;
/**
 * Hash: 0x62EC273D00187DCA | ApiSet: undefined
 */
export declare function createSynchronizedScene2(position: Vector3, radius: number, object: number | string): number;
/**
 * Creates a ped (biped character, pedestrian, actor) with the specified model at the specified position and heading.
 * This ped will initially be owned by the creating script as a mission entity, and the model should be loaded already
 * (e.g. using REQUEST_MODEL).
 * Hash: 0xD49F9B0955C367DE | ApiSet: undefined
 */
export declare function createPed(pedType: number, modelHash: number | string, position: Vector3, heading: number, isNetwork: boolean, bScriptHostPed: boolean): number;
/**
 * ```
 * p6 always 2 (but it doesnt seem to matter...)
 * roll and pitch 0
 * yaw to Ped.rotation
 * ```
 * Hash: 0x8C18E0F9080ADD73 | ApiSet: undefined
 */
export declare function createSynchronizedScene(position: Vector3, roll: number, pitch: number, yaw: number, p6: number): number;
/**
 * Hash: 0xA21C118553BBDF02 | ApiSet: undefined
 */
export declare function disableHeadBlendPaletteColor(ped: number | Ped): void;
/**
 * Hash: 0x9B62392B474F44A0 | ApiSet: undefined
 */
export declare function createRandomPedAsDriver(vehicle: number | Vehicle, returnHandle: boolean): number;
/**
 * Hash: 0x6D38F1F04CBB37EA | ApiSet: undefined
 */
export declare function detachSynchronizedScene(sceneID: number): void;
/**
 * Hash: 0x600048C60D5C2C51 | ApiSet: undefined
 */
export declare function disablePedHeatscaleOverride(ped: number | Ped): void;
/**
 * ```
 * Deletes the specified ped, then sets the handle pointed to by the pointer to NULL.
 * ```
 * Hash: 0x9614299DCB53E54B | ApiSet: undefined
 */
export declare function deletePed(ped: number | Ped): void;
/**
 * Hash: 0xCC6E3B6BB69501F1 | ApiSet: undefined
 */
export declare function doesRelationshipGroupExist(groupHash: number | string): boolean;
/**
 * Hash: 0xAFF4710E2A0A6C12 | ApiSet: undefined
 */
export declare function dropAmbientProp(ped: number | Ped): void;
/**
 * Hash: 0x7C6B0C22F9F40BBE | ApiSet: undefined
 */
export declare function doesGroupExist(groupId: number): boolean;
/**
 * Hash: 0x4668D80430D6C299 | ApiSet: undefined
 */
export declare function finalizeHeadBlend(ped: number | Ped): void;
/**
 * Hash: 0x8A24B067D175A7BD | ApiSet: undefined
 */
export declare function doesScenarioBlockingAreaExist(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * Hash: 0x2208438012482A1A | ApiSet: undefined
 */
export declare function forcePedAiAndAnimationUpdate(ped: number | Ped, p1: boolean, p2: boolean): void;
/**
 * Applies lethal damage (FLT_MAX) to the `SKEL_Head` bone of the specified ped using the weapon passed, leading to the
 * ped's untimely demise.
 * The naming of the native is a legacy leftover (formerly EXPLODE_CHAR_HEAD in GTA3) as in the early 3D GTA games, lethal
 * damage to a ped head would 'explode' it.
 * Do note that this native function does not work in multiplayer/network environment.
 * Hash: 0x2D05CED3A38D0F3A | ApiSet: undefined
 */
export declare function explodePedHead(ped: number | Ped, weaponHash: number | string): void;
/**
 * ```cpp
 * enum ePedMotionState
 * {
 * MOTIONSTATE_NONE = -294553821, // MotionState_None
 * MOTIONSTATE_IDLE = -1871534317, // MotionState_Idle
 * MOTIONSTATE_WALK = -668482597, // MotionState_Walk
 * MOTIONSTATE_RUN = -530524, // MotionState_Run
 * MOTIONSTATE_SPRINT = -1115154469, // MotionState_Sprint
 * MOTIONSTATE_CROUCH_IDLE = 1140525470, // MotionState_Crouch_Idle
 * MOTIONSTATE_CROUCH_WALK = 147004056, // MotionState_Crouch_Walk
 * MOTIONSTATE_CROUCH_RUN = 898879241, // MotionState_Crouch_Run
 * MOTIONSTATE_DONOTHING = 247561816, // MotionState_DoNothing
 * MOTIONSTATE_ANIMATEDVELOCITY = 1427811395, // MotionState_AnimatedVelocity
 * MOTIONSTATE_INVEHICLE = -1797663347, // MotionState_InVehicle
 * MOTIONSTATE_AIMING = 1063765679, // MotionState_Aiming
 * MOTIONSTATE_DIVING_IDLE = 1212730861, // MotionState_Diving_Idle
 * MOTIONSTATE_DIVING_SWIM = -1855028596, // MotionState_Diving_Swim
 * MOTIONSTATE_SWIMMING_TREADWATER = -776007225, // MotionState_Swimming_TreadWater
 * MOTIONSTATE_DEAD = 230360860, // MotionState_Dead
 * MOTIONSTATE_STEALTH_IDLE = 1110276645, // MotionState_Stealth_Idle
 * MOTIONSTATE_STEALTH_WALK = 69908130, // MotionState_Stealth_Walk
 * MOTIONSTATE_STEALTH_RUN = -83133983, // MotionState_Stealth_Run
 * MOTIONSTATE_PARACHUTING = -1161760501, // MotionState_Parachuting
 * MOTIONSTATE_ACTIONMODE_IDLE = -633298724, // MotionState_ActionMode_Idle
 * MOTIONSTATE_ACTIONMODE_WALK = -762290521, // MotionState_ActionMode_Walk
 * MOTIONSTATE_ACTIONMODE_RUN = 834330132, // MotionState_ActionMode_Run
 * MOTIONSTATE_JETPACK = 1398696542 // MotionState_Jetpack
 * }
 * ```
 * Hash: 0xF28965D04F570DCA | ApiSet: undefined
 */
export declare function forcePedMotionState(ped: number | Ped, motionStateHash: number | string, shouldReset: boolean, updateState: number, forceAIPreCameraUpdate: boolean): boolean;
/**
 * ```
 * p0: Ped Handle
 * p1: int i | 0 <= i <= 27
 * p1 probably refers to the attributes configured in combatbehavior.meta. There are 13. Example:
 * <BlindFireChance value="0.1"/>
 * <WeaponShootRateModifier value="1.0"/>
 * <TimeBetweenBurstsInCover value="1.25"/>
 * <BurstDurationInCover value="2.0"/>
 * <TimeBetweenPeeks value="10.0"/>
 * <WeaponAccuracy value="0.18"/>
 * <FightProficiency value="0.8"/>
 * <StrafeWhenMovingChance value="1.0"/>
 * <WalkWhenStrafingChance value="0.0"/>
 * <AttackWindowDistanceForCover value="55.0"/>
 * <TimeToInvalidateInjuredTarget value="9.0"/>
 * <TriggerChargeTime_Near value="4.0"/>
 * <TriggerChargeTime_Far value="10.0"/>
 * -------------Confirmed by editing combatbehavior.meta:
 * p1:
 * 0=BlindFireChance
 * 1=BurstDurationInCover
 * 3=TimeBetweenBurstsInCover
 * 4=TimeBetweenPeeks
 * 5=StrafeWhenMovingChance
 * 8=WalkWhenStrafingChance
 * 11=AttackWindowDistanceForCover
 * 12=TimeToInvalidateInjuredTarget
 * 16=OptimalCoverDistance
 * ```
 * Hash: 0x52DFF8A10508090A | ApiSet: undefined
 */
export declare function getCombatFloat(ped: number | Ped, p1: number): number;
/**
 * Hash: 0xFF287323B0E2C69A | ApiSet: undefined
 */
export declare function freezePedCameraRotation(ped: number | Ped): void;
/**
 * Hash: 0x16E42E800B472221 | ApiSet: undefined
 */
export declare function forcePedToOpenParachute(ped: number | Ped): void;
/**
 * Hash: 0xCD5003B097200F36 | ApiSet: undefined
 */
export declare function getDeadPedPickupCoords(ped: number | Ped, p1: number, p2: number): Vector3;
/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0xBE22B26DD764C040 | ApiSet: undefined
 */
export declare function getAnimInitialOffsetPosition(animDict: string, animName: string, position: Vector3, xRot: number, yRot: number, zRot: number, p8: number, p9: number): Vector3;
/**
 * ```
 * p1 may be a BOOL representing whether or not the group even exists
 * ```
 * Hash: 0x8DE69FE35CA09A45 | ApiSet: undefined
 */
export declare function getGroupSize(groupID: number): [any, number];
/**
 * ```
 * Gets the closest ped in a radius.
 * Ped Types:
 * Any ped = -1
 * Player = 1
 * Male = 4
 * Female = 5
 * Cop = 6
 * Human = 26
 * SWAT = 27
 * Animal = 28
 * Army = 29
 * ------------------
 * P4 P5 P7 P8
 * 1  0  x  x  = return nearest walking Ped
 * 1  x  0  x  = return nearest walking Ped
 * x  1  1  x  = return Ped you are using
 * 0  0  x  x  = no effect
 * 0  x  0  x  = no effect
 * x = can be 1 or 0. Does not have any obvious changes.
 * This function does not return ped who is:
 * 1. Standing still
 * 2. Driving
 * 3. Fleeing
 * 4. Attacking
 * This function only work if the ped is:
 * 1. walking normally.
 * 2. waiting to cross a road.
 * `Note: PED::GET_PED_NEARBY_PEDS works for more peds.`
 * ```
 * Hash: 0xC33AB876A77F8164 | ApiSet: undefined
 */
export declare function getClosestPed(position: Vector3, radius: number, p4: boolean, p5: boolean, p7: boolean, p8: boolean, pedType: number): [boolean, number];
/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0x4B805E6046EE9E47 | ApiSet: undefined
 */
export declare function getAnimInitialOffsetRotation(animDict: string, animName: string, position: Vector3, xRot: number, yRot: number, zRot: number, p8: number, p9: number): Vector3;
/**
 * ```
 * Function just returns 0
 * void __fastcall ped__get_mount(NativeContext *a1)
 * {
 * NativeContext *v1; // rbx@1
 * v1 = a1;
 * GetAddressOfPedFromScriptHandle(a1->Args->Arg1);
 * v1->Returns->Item1= 0;
 * }
 * ```
 * Hash: 0xE7E11B8DCBED1058 | ApiSet: undefined
 */
export declare function getMount(ped: number | Ped): number;
/**
 * Hash: 0x5486A79D9FBD342D | ApiSet: undefined
 */
export declare function getJackTarget(ped: number | Ped): number;
/**
 * Hash: 0x18A3E9EE1297FD39 | ApiSet: undefined
 */
export declare function getMeleeTargetForPed(ped: number | Ped): number;
/**
 * ```
 * Used for freemode (online) characters.
 * ```
 * Hash: 0xE5C0CF872C2AD150 | ApiSet: undefined
 */
export declare function getNumHairColors(): number;
/**
 * ```
 * Need to check behavior when drawableId = -1
 * ```
 * Hash: 0xA6E7F1CEB523E171 | ApiSet: undefined
 */
export declare function getNumberOfPedPropTextureVariations(ped: number | Ped, propId: number, drawableId: number): number;
/**
 * Hash: 0xD1F7CA1535D22818 | ApiSet: undefined
 */
export declare function getNumMakeupColors(): number;
/**
 * Hash: 0x27561561732A7842 | ApiSet: undefined
 */
export declare function getNumberOfPedDrawableVariations(ped: number | Ped, componentId: number): number;
/**
 * Hash: 0x8F7156A3142A6BAD | ApiSet: undefined
 */
export declare function getNumberOfPedTextureVariations(ped: number | Ped, componentId: number, drawableId: number): number;
/**
 * Hash: 0x9483AF821605B1D8 | ApiSet: undefined
 */
export declare function getPedArmour(ped: number | Ped): number;
/**
 * Hash: 0x5FAF9754E789FB47 | ApiSet: undefined
 */
export declare function getNumberOfPedPropDrawableVariations(ped: number | Ped, propId: number): number;
/**
 * ```
 * from fm_mission_controller.c4 (variable names changed for clarity):
 * `int groupID = PLAYER::GET_PLAYER_GROUP(PLAYER::PLAYER_ID());`
 * `PED::GET_GROUP_SIZE(group, &unused, &groupSize);`
 * if (groupSize >= 1) {
 * . . . . for (int memberNumber = 0; memberNumber < groupSize; memberNumber++) {
 * `. . . . . . . . Ped ped1 = PED::GET_PED_AS_GROUP_MEMBER(groupID, memberNumber);`
 * . . . . . . . . //and so on
 * ```
 * Hash: 0x51455483CF23ED97 | ApiSet: undefined
 */
export declare function getPedAsGroupMember(groupID: number, memberNumber: number): number;
/**
 * Hash: 0x37F4AD56ECBC0CD6 | ApiSet: undefined
 */
export declare function getPedAccuracy(ped: number | Ped): number;
/**
 * ```
 * Returns the ped's alertness (0-3).
 * Values :
 * 0 : Neutral
 * 1 : Heard something (gun shot, hit, etc)
 * 2 : Knows (the origin of the event)
 * 3 : Fully alerted (is facing the event?)
 * If the Ped does not exist, returns -1.
 * ```
 * Hash: 0xF6AA118530443FD2 | ApiSet: undefined
 */
export declare function getPedAlertness(ped: number | Ped): number;
/**
 * Hash: 0xF9D9F7F2DB8E2FA0 | ApiSet: undefined
 */
export declare function getPedCombatRange(ped: number | Ped): number;
/**
 * ```cpp
 * enum ePedBoneId : uint16_t
 * {
 * SKEL_ROOT = 0x0,
 * SKEL_Pelvis = 0x2E28,
 * SKEL_L_Thigh = 0xE39F,
 * SKEL_L_Calf = 0xF9BB,
 * SKEL_L_Foot = 0x3779,
 * SKEL_L_Toe0 = 0x83C,
 * EO_L_Foot = 0x84C5,
 * EO_L_Toe = 0x68BD,
 * IK_L_Foot = 0xFEDD,
 * PH_L_Foot = 0xE175,
 * MH_L_Knee = 0xB3FE,
 * SKEL_R_Thigh = 0xCA72,
 * SKEL_R_Calf = 0x9000,
 * SKEL_R_Foot = 0xCC4D,
 * SKEL_R_Toe0 = 0x512D,
 * EO_R_Foot = 0x1096,
 * EO_R_Toe = 0x7163,
 * IK_R_Foot = 0x8AAE,
 * PH_R_Foot = 0x60E6,
 * MH_R_Knee = 0x3FCF,
 * RB_L_ThighRoll = 0x5C57,
 * RB_R_ThighRoll = 0x192A,
 * SKEL_Spine_Root = 0xE0FD,
 * SKEL_Spine0 = 0x5C01,
 * SKEL_Spine1 = 0x60F0,
 * SKEL_Spine2 = 0x60F1,
 * SKEL_Spine3 = 0x60F2,
 * SKEL_L_Clavicle = 0xFCD9,
 * SKEL_L_UpperArm = 0xB1C5,
 * SKEL_L_Forearm = 0xEEEB,
 * SKEL_L_Hand = 0x49D9,
 * SKEL_L_Finger00 = 0x67F2,
 * SKEL_L_Finger01 = 0xFF9,
 * SKEL_L_Finger02 = 0xFFA,
 * SKEL_L_Finger10 = 0x67F3,
 * SKEL_L_Finger11 = 0x1049,
 * SKEL_L_Finger12 = 0x104A,
 * SKEL_L_Finger20 = 0x67F4,
 * SKEL_L_Finger21 = 0x1059,
 * SKEL_L_Finger22 = 0x105A,
 * SKEL_L_Finger30 = 0x67F5,
 * SKEL_L_Finger31 = 0x1029,
 * SKEL_L_Finger32 = 0x102A,
 * SKEL_L_Finger40 = 0x67F6,
 * SKEL_L_Finger41 = 0x1039,
 * SKEL_L_Finger42 = 0x103A,
 * PH_L_Hand = 0xEB95,
 * IK_L_Hand = 0x8CBD,
 * RB_L_ForeArmRoll = 0xEE4F,
 * RB_L_ArmRoll = 0x1470,
 * MH_L_Elbow = 0x58B7,
 * SKEL_R_Clavicle = 0x29D2,
 * SKEL_R_UpperArm = 0x9D4D,
 * SKEL_R_Forearm = 0x6E5C,
 * SKEL_R_Hand = 0xDEAD,
 * SKEL_R_Finger00 = 0xE5F2,
 * SKEL_R_Finger01 = 0xFA10,
 * SKEL_R_Finger02 = 0xFA11,
 * SKEL_R_Finger10 = 0xE5F3,
 * SKEL_R_Finger11 = 0xFA60,
 * SKEL_R_Finger12 = 0xFA61,
 * SKEL_R_Finger20 = 0xE5F4,
 * SKEL_R_Finger21 = 0xFA70,
 * SKEL_R_Finger22 = 0xFA71,
 * SKEL_R_Finger30 = 0xE5F5,
 * SKEL_R_Finger31 = 0xFA40,
 * SKEL_R_Finger32 = 0xFA41,
 * SKEL_R_Finger40 = 0xE5F6,
 * SKEL_R_Finger41 = 0xFA50,
 * SKEL_R_Finger42 = 0xFA51,
 * PH_R_Hand = 0x6F06,
 * IK_R_Hand = 0x188E,
 * RB_R_ForeArmRoll = 0xAB22,
 * RB_R_ArmRoll = 0x90FF,
 * MH_R_Elbow = 0xBB0,
 * SKEL_Neck_1 = 0x9995,
 * SKEL_Head = 0x796E,
 * IK_Head = 0x322C,
 * FACIAL_facialRoot = 0xFE2C,
 * FB_L_Brow_Out_000 = 0xE3DB,
 * FB_L_Lid_Upper_000 = 0xB2B6,
 * FB_L_Eye_000 = 0x62AC,
 * FB_L_CheekBone_000 = 0x542E,
 * FB_L_Lip_Corner_000 = 0x74AC,
 * FB_R_Lid_Upper_000 = 0xAA10,
 * FB_R_Eye_000 = 0x6B52,
 * FB_R_CheekBone_000 = 0x4B88,
 * FB_R_Brow_Out_000 = 0x54C,
 * FB_R_Lip_Corner_000 = 0x2BA6,
 * FB_Brow_Centre_000 = 0x9149,
 * FB_UpperLipRoot_000 = 0x4ED2,
 * FB_UpperLip_000 = 0xF18F,
 * FB_L_Lip_Top_000 = 0x4F37,
 * FB_R_Lip_Top_000 = 0x4537,
 * FB_Jaw_000 = 0xB4A0,
 * FB_LowerLipRoot_000 = 0x4324,
 * FB_LowerLip_000 = 0x508F,
 * FB_L_Lip_Bot_000 = 0xB93B,
 * FB_R_Lip_Bot_000 = 0xC33B,
 * FB_Tongue_000 = 0xB987,
 * RB_Neck_1 = 0x8B93,
 * SPR_L_Breast = 0xFC8E,
 * SPR_R_Breast = 0x885F,
 * IK_Root = 0xDD1C,
 * SKEL_Neck_2 = 0x5FD4,
 * SKEL_Pelvis1 = 0xD003,
 * SKEL_PelvisRoot = 0x45FC,
 * SKEL_SADDLE = 0x9524,
 * MH_L_CalfBack = 0x1013,
 * MH_L_ThighBack = 0x600D,
 * SM_L_Skirt = 0xC419,
 * MH_R_CalfBack = 0xB013,
 * MH_R_ThighBack = 0x51A3,
 * SM_R_Skirt = 0x7712,
 * SM_M_BackSkirtRoll = 0xDBB,
 * SM_L_BackSkirtRoll = 0x40B2,
 * SM_R_BackSkirtRoll = 0xC141,
 * SM_M_FrontSkirtRoll = 0xCDBB,
 * SM_L_FrontSkirtRoll = 0x9B69,
 * SM_R_FrontSkirtRoll = 0x86F1,
 * SM_CockNBalls_ROOT = 0xC67D,
 * SM_CockNBalls = 0x9D34,
 * MH_L_Finger00 = 0x8C63,
 * MH_L_FingerBulge00 = 0x5FB8,
 * MH_L_Finger10 = 0x8C53,
 * MH_L_FingerTop00 = 0xA244,
 * MH_L_HandSide = 0xC78A,
 * MH_Watch = 0x2738,
 * MH_L_Sleeve = 0x933C,
 * MH_R_Finger00 = 0x2C63,
 * MH_R_FingerBulge00 = 0x69B8,
 * MH_R_Finger10 = 0x2C53,
 * MH_R_FingerTop00 = 0xEF4B,
 * MH_R_HandSide = 0x68FB,
 * MH_R_Sleeve = 0x92DC,
 * FACIAL_jaw = 0xB21,
 * FACIAL_underChin = 0x8A95,
 * FACIAL_L_underChin = 0x234E,
 * FACIAL_chin = 0xB578,
 * FACIAL_chinSkinBottom = 0x98BC,
 * FACIAL_L_chinSkinBottom = 0x3E8F,
 * FACIAL_R_chinSkinBottom = 0x9E8F,
 * FACIAL_tongueA = 0x4A7C,
 * FACIAL_tongueB = 0x4A7D,
 * FACIAL_tongueC = 0x4A7E,
 * FACIAL_tongueD = 0x4A7F,
 * FACIAL_tongueE = 0x4A80,
 * FACIAL_L_tongueE = 0x35F2,
 * FACIAL_R_tongueE = 0x2FF2,
 * FACIAL_L_tongueD = 0x35F1,
 * FACIAL_R_tongueD = 0x2FF1,
 * FACIAL_L_tongueC = 0x35F0,
 * FACIAL_R_tongueC = 0x2FF0,
 * FACIAL_L_tongueB = 0x35EF,
 * FACIAL_R_tongueB = 0x2FEF,
 * FACIAL_L_tongueA = 0x35EE,
 * FACIAL_R_tongueA = 0x2FEE,
 * FACIAL_chinSkinTop = 0x7226,
 * FACIAL_L_chinSkinTop = 0x3EB3,
 * FACIAL_chinSkinMid = 0x899A,
 * FACIAL_L_chinSkinMid = 0x4427,
 * FACIAL_L_chinSide = 0x4A5E,
 * FACIAL_R_chinSkinMid = 0xF5AF,
 * FACIAL_R_chinSkinTop = 0xF03B,
 * FACIAL_R_chinSide = 0xAA5E,
 * FACIAL_R_underChin = 0x2BF4,
 * FACIAL_L_lipLowerSDK = 0xB9E1,
 * FACIAL_L_lipLowerAnalog = 0x244A,
 * FACIAL_L_lipLowerThicknessV = 0xC749,
 * FACIAL_L_lipLowerThicknessH = 0xC67B,
 * FACIAL_lipLowerSDK = 0x7285,
 * FACIAL_lipLowerAnalog = 0xD97B,
 * FACIAL_lipLowerThicknessV = 0xC5BB,
 * FACIAL_lipLowerThicknessH = 0xC5ED,
 * FACIAL_R_lipLowerSDK = 0xA034,
 * FACIAL_R_lipLowerAnalog = 0xC2D9,
 * FACIAL_R_lipLowerThicknessV = 0xC6E9,
 * FACIAL_R_lipLowerThicknessH = 0xC6DB,
 * FACIAL_nose = 0x20F1,
 * FACIAL_L_nostril = 0x7322,
 * FACIAL_L_nostrilThickness = 0xC15F,
 * FACIAL_noseLower = 0xE05A,
 * FACIAL_L_noseLowerThickness = 0x79D5,
 * FACIAL_R_noseLowerThickness = 0x7975,
 * FACIAL_noseTip = 0x6A60,
 * FACIAL_R_nostril = 0x7922,
 * FACIAL_R_nostrilThickness = 0x36FF,
 * FACIAL_noseUpper = 0xA04F,
 * FACIAL_L_noseUpper = 0x1FB8,
 * FACIAL_noseBridge = 0x9BA3,
 * FACIAL_L_nasolabialFurrow = 0x5ACA,
 * FACIAL_L_nasolabialBulge = 0xCD78,
 * FACIAL_L_cheekLower = 0x6907,
 * FACIAL_L_cheekLowerBulge1 = 0xE3FB,
 * FACIAL_L_cheekLowerBulge2 = 0xE3FC,
 * FACIAL_L_cheekInner = 0xE7AB,
 * FACIAL_L_cheekOuter = 0x8161,
 * FACIAL_L_eyesackLower = 0x771B,
 * FACIAL_L_eyeball = 0x1744,
 * FACIAL_L_eyelidLower = 0x998C,
 * FACIAL_L_eyelidLowerOuterSDK = 0xFE4C,
 * FACIAL_L_eyelidLowerOuterAnalog = 0xB9AA,
 * FACIAL_L_eyelashLowerOuter = 0xD7F6,
 * FACIAL_L_eyelidLowerInnerSDK = 0xF151,
 * FACIAL_L_eyelidLowerInnerAnalog = 0x8242,
 * FACIAL_L_eyelashLowerInner = 0x4CCF,
 * FACIAL_L_eyelidUpper = 0x97C1,
 * FACIAL_L_eyelidUpperOuterSDK = 0xAF15,
 * FACIAL_L_eyelidUpperOuterAnalog = 0x67FA,
 * FACIAL_L_eyelashUpperOuter = 0x27B7,
 * FACIAL_L_eyelidUpperInnerSDK = 0xD341,
 * FACIAL_L_eyelidUpperInnerAnalog = 0xF092,
 * FACIAL_L_eyelashUpperInner = 0x9B1F,
 * FACIAL_L_eyesackUpperOuterBulge = 0xA559,
 * FACIAL_L_eyesackUpperInnerBulge = 0x2F2A,
 * FACIAL_L_eyesackUpperOuterFurrow = 0xC597,
 * FACIAL_L_eyesackUpperInnerFurrow = 0x52A7,
 * FACIAL_forehead = 0x9218,
 * FACIAL_L_foreheadInner = 0x843,
 * FACIAL_L_foreheadInnerBulge = 0x767C,
 * FACIAL_L_foreheadOuter = 0x8DCB,
 * FACIAL_skull = 0x4221,
 * FACIAL_foreheadUpper = 0xF7D6,
 * FACIAL_L_foreheadUpperInner = 0xCF13,
 * FACIAL_L_foreheadUpperOuter = 0x509B,
 * FACIAL_R_foreheadUpperInner = 0xCEF3,
 * FACIAL_R_foreheadUpperOuter = 0x507B,
 * FACIAL_L_temple = 0xAF79,
 * FACIAL_L_ear = 0x19DD,
 * FACIAL_L_earLower = 0x6031,
 * FACIAL_L_masseter = 0x2810,
 * FACIAL_L_jawRecess = 0x9C7A,
 * FACIAL_L_cheekOuterSkin = 0x14A5,
 * FACIAL_R_cheekLower = 0xF367,
 * FACIAL_R_cheekLowerBulge1 = 0x599B,
 * FACIAL_R_cheekLowerBulge2 = 0x599C,
 * FACIAL_R_masseter = 0x810,
 * FACIAL_R_jawRecess = 0x93D4,
 * FACIAL_R_ear = 0x1137,
 * FACIAL_R_earLower = 0x8031,
 * FACIAL_R_eyesackLower = 0x777B,
 * FACIAL_R_nasolabialBulge = 0xD61E,
 * FACIAL_R_cheekOuter = 0xD32,
 * FACIAL_R_cheekInner = 0x737C,
 * FACIAL_R_noseUpper = 0x1CD6,
 * FACIAL_R_foreheadInner = 0xE43,
 * FACIAL_R_foreheadInnerBulge = 0x769C,
 * FACIAL_R_foreheadOuter = 0x8FCB,
 * FACIAL_R_cheekOuterSkin = 0xB334,
 * FACIAL_R_eyesackUpperInnerFurrow = 0x9FAE,
 * FACIAL_R_eyesackUpperOuterFurrow = 0x140F,
 * FACIAL_R_eyesackUpperInnerBulge = 0xA359,
 * FACIAL_R_eyesackUpperOuterBulge = 0x1AF9,
 * FACIAL_R_nasolabialFurrow = 0x2CAA,
 * FACIAL_R_temple = 0xAF19,
 * FACIAL_R_eyeball = 0x1944,
 * FACIAL_R_eyelidUpper = 0x7E14,
 * FACIAL_R_eyelidUpperOuterSDK = 0xB115,
 * FACIAL_R_eyelidUpperOuterAnalog = 0xF25A,
 * FACIAL_R_eyelashUpperOuter = 0xE0A,
 * FACIAL_R_eyelidUpperInnerSDK = 0xD541,
 * FACIAL_R_eyelidUpperInnerAnalog = 0x7C63,
 * FACIAL_R_eyelashUpperInner = 0x8172,
 * FACIAL_R_eyelidLower = 0x7FDF,
 * FACIAL_R_eyelidLowerOuterSDK = 0x1BD,
 * FACIAL_R_eyelidLowerOuterAnalog = 0x457B,
 * FACIAL_R_eyelashLowerOuter = 0xBE49,
 * FACIAL_R_eyelidLowerInnerSDK = 0xF351,
 * FACIAL_R_eyelidLowerInnerAnalog = 0xE13,
 * FACIAL_R_eyelashLowerInner = 0x3322,
 * FACIAL_L_lipUpperSDK = 0x8F30,
 * FACIAL_L_lipUpperAnalog = 0xB1CF,
 * FACIAL_L_lipUpperThicknessH = 0x37CE,
 * FACIAL_L_lipUpperThicknessV = 0x38BC,
 * FACIAL_lipUpperSDK = 0x1774,
 * FACIAL_lipUpperAnalog = 0xE064,
 * FACIAL_lipUpperThicknessH = 0x7993,
 * FACIAL_lipUpperThicknessV = 0x7981,
 * FACIAL_L_lipCornerSDK = 0xB1C,
 * FACIAL_L_lipCornerAnalog = 0xE568,
 * FACIAL_L_lipCornerThicknessUpper = 0x7BC,
 * FACIAL_L_lipCornerThicknessLower = 0xDD42,
 * FACIAL_R_lipUpperSDK = 0x7583,
 * FACIAL_R_lipUpperAnalog = 0x51CF,
 * FACIAL_R_lipUpperThicknessH = 0x382E,
 * FACIAL_R_lipUpperThicknessV = 0x385C,
 * FACIAL_R_lipCornerSDK = 0xB3C,
 * FACIAL_R_lipCornerAnalog = 0xEE0E,
 * FACIAL_R_lipCornerThicknessUpper = 0x54C3,
 * FACIAL_R_lipCornerThicknessLower = 0x2BBA,
 * MH_MulletRoot = 0x3E73,
 * MH_MulletScaler = 0xA1C2,
 * MH_Hair_Scale = 0xC664,
 * MH_Hair_Crown = 0x1675,
 * SM_Torch = 0x8D6,
 * FX_Light = 0x8959,
 * FX_Light_Scale = 0x5038,
 * FX_Light_Switch = 0xE18E,
 * BagRoot = 0xAD09,
 * BagPivotROOT = 0xB836,
 * BagPivot = 0x4D11,
 * BagBody = 0xAB6D,
 * BagBone_R = 0x937,
 * BagBone_L = 0x991,
 * SM_LifeSaver_Front = 0x9420,
 * SM_R_Pouches_ROOT = 0x2962,
 * SM_R_Pouches = 0x4141,
 * SM_L_Pouches_ROOT = 0x2A02,
 * SM_L_Pouches = 0x4B41,
 * SM_Suit_Back_Flapper = 0xDA2D,
 * SPR_CopRadio = 0x8245,
 * SM_LifeSaver_Back = 0x2127,
 * MH_BlushSlider = 0xA0CE,
 * SKEL_Tail_01 = 0x347,
 * SKEL_Tail_02 = 0x348,
 * MH_L_Concertina_B = 0xC988,
 * MH_L_Concertina_A = 0xC987,
 * MH_R_Concertina_B = 0xC8E8,
 * MH_R_Concertina_A = 0xC8E7,
 * MH_L_ShoulderBladeRoot = 0x8711,
 * MH_L_ShoulderBlade = 0x4EAF,
 * MH_R_ShoulderBladeRoot = 0x3A0A,
 * MH_R_ShoulderBlade = 0x54AF,
 * FB_R_Ear_000 = 0x6CDF,
 * SPR_R_Ear = 0x63B6,
 * FB_L_Ear_000 = 0x6439,
 * SPR_L_Ear = 0x5B10,
 * FB_TongueA_000 = 0x4206,
 * FB_TongueB_000 = 0x4207,
 * FB_TongueC_000 = 0x4208,
 * SKEL_L_Toe1 = 0x1D6B,
 * SKEL_R_Toe1 = 0xB23F,
 * SKEL_Tail_03 = 0x349,
 * SKEL_Tail_04 = 0x34A,
 * SKEL_Tail_05 = 0x34B,
 * SPR_Gonads_ROOT = 0xBFDE,
 * SPR_Gonads = 0x1C00,
 * FB_L_Brow_Out_001 = 0xE3DB,
 * FB_L_Lid_Upper_001 = 0xB2B6,
 * FB_L_Eye_001 = 0x62AC,
 * FB_L_CheekBone_001 = 0x542E,
 * FB_L_Lip_Corner_001 = 0x74AC,
 * FB_R_Lid_Upper_001 = 0xAA10,
 * FB_R_Eye_001 = 0x6B52,
 * FB_R_CheekBone_001 = 0x4B88,
 * FB_R_Brow_Out_001 = 0x54C,
 * FB_R_Lip_Corner_001 = 0x2BA6,
 * FB_Brow_Centre_001 = 0x9149,
 * FB_UpperLipRoot_001 = 0x4ED2,
 * FB_UpperLip_001 = 0xF18F,
 * FB_L_Lip_Top_001 = 0x4F37,
 * FB_R_Lip_Top_001 = 0x4537,
 * FB_Jaw_001 = 0xB4A0,
 * FB_LowerLipRoot_001 = 0x4324,
 * FB_LowerLip_001 = 0x508F,
 * FB_L_Lip_Bot_001 = 0xB93B,
 * FB_R_Lip_Bot_001 = 0xC33B,
 * FB_Tongue_001 = 0xB987
 * };
 * ```
 * Hash: 0x3F428D08BE5AAE31 | ApiSet: undefined
 */
export declare function getPedBoneIndex(ped: number | Ped, boneId: number): number;
/**
 * Hash: 0x5CCE68DBD5FE93EC | ApiSet: undefined
 */
export declare function getPedAsGroupLeader(groupID: number): number;
/**
 * ```
 * Gets the position of the specified bone of the specified ped.
 * ped: The ped to get the position of a bone from.
 * boneId: The ID of the bone to get the position from. This is NOT the index.
 * offsetX: The X-component of the offset to add to the position relative to the bone's rotation.
 * offsetY: The Y-component of the offset to add to the position relative to the bone's rotation.
 * offsetZ: The Z-component of the offset to add to the position relative to the bone's rotation.
 * ```
 * Hash: 0x17C07FC640E86B4E | ApiSet: undefined
 */
export declare function getPedBoneCoords(ped: number | Ped, boneId: number, offsetX: number, offsetY: number, offsetZ: number): Vector3;
/**
 * Hash: 0xDEA92412FCAEB3F5 | ApiSet: undefined
 */
export declare function getPedCombatMovement(ped: number | Ped): number;
/**
 * See [`SET_PED_CONFIG_FLAG`](#\_0x1913FE4CBF41C463).
 * Hash: 0x7EE53118C892B513 | ApiSet: undefined
 */
export declare function getPedConfigFlag(ped: number | Ped, flagId: number, p2: boolean): boolean;
/**
 * ```
 * Returns the hash of the weapon/model/object that killed the ped.
 * ```
 * Hash: 0x16FFE42AB2D2DC59 | ApiSet: undefined
 */
export declare function getPedCauseOfDeath(ped: number | Ped): number;
/**
 * Hash: 0x3C06B8786DD94CD1 | ApiSet: undefined
 */
export declare function getPedDefensiveAreaPosition(ped: number | Ped, p1: boolean): Vector3;
/**
 * ```cpp
 * enum ePedDecorationZone
 * {
 * ZONE_TORSO = 0,
 * ZONE_HEAD = 1,
 * ZONE_LEFT_ARM = 2,
 * ZONE_RIGHT_ARM = 3,
 * ZONE_LEFT_LEG = 4,
 * ZONE_RIGHT_LEG = 5,
 * ZONE_UNKNOWN = 6,
 * ZONE_NONE = 7
 * };
 * ```
 * Hash: 0x9FD452BFBE7A7A8B | ApiSet: undefined
 */
export declare function getPedDecorationZoneFromHashes(collection: number | string, overlay: number | string): number;
/**
 * Hash: 0xF60165E1D2C5370B | ApiSet: undefined
 */
export declare function getPedCurrentMovementSpeed(ped: number | Ped): [boolean, number, number];
/**
 * Hash: 0x71EAB450D86954A1 | ApiSet: undefined
 */
export declare function getPedDecorationsState(ped: number | Ped): number;
/**
 * Use [`SetPedIlluminatedClothingGlowIntensity`](#\_0x4E90D746056E273D) to set the illuminated clothing glow intensity for a specific ped.
 * Hash: 0x1461B28A06717D68 | ApiSet: undefined
 */
export declare function getPedEmissiveIntensity(ped: number | Ped): number;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xBA656A3BB01BDEA3 | ApiSet: undefined
 */
export declare function getPedEventData(ped: number | Ped, eventType: number): [boolean, any];
/**
 * ```
 * Ids
 * 0 - Head
 * 1 - Beard
 * 2 - Hair
 * 3 - Torso
 * 4 - Legs
 * 5 - Hands
 * 6 - Foot
 * 7 - Scarfs/Neck Accessories
 * 8 - Accessories 1
 * 9 - Accessories 2
 * 10- Decals
 * 11 - Auxiliary parts for torso
 * ```
 * Hash: 0x67F3780DD425D4FC | ApiSet: undefined
 */
export declare function getPedDrawableVariation(ped: number | Ped, componentId: number): number;
/**
 * A getter for [`_SET_PED_EYE_COLOR`](#\_0x50B56988B170AFDF).
 * Hash: 0x76BBA2CEE66D47E9 | ApiSet: undefined
 */
export declare function getPedEyeColor(ped: number | Ped): number;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x65671A4FB8218930 | ApiSet: undefined
 */
export declare function getPedDiesInWater(ped: number | Ped): boolean;
/**
 * ```
 * Returns the group id of which the specified ped is a member of.
 * ```
 * Hash: 0xF162E133B4E7A675 | ApiSet: undefined
 */
export declare function getPedGroupIndex(ped: number | Ped): number;
/**
 * Hash: 0x9C14D30395A51A3C | ApiSet: undefined
 */
export declare function getPedEnveffScale(ped: number | Ped): number;
/**
 * ```
 * Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
 * Used when calling SET_PED_HEAD_BLEND_DATA.
 * ```
 * Hash: 0x68D353AB88B97E0C | ApiSet: undefined
 */
export declare function getPedHeadBlendFirstIndex(type: number): number;
/**
 * ```
 * Used with freemode (online) characters.
 * ```
 * Hash: 0xCF1CE768BB43480E | ApiSet: undefined
 */
export declare function getPedHeadOverlayNum(overlayID: number): number;
/**
 * ```
 * Gets the offset the specified ped has moved since the previous tick.
 * If worldSpace is false, the returned offset is relative to the ped. That is, if the ped has moved 1 meter right and 5 meters forward, it'll return 1,5,0.
 * If worldSpace is true, the returned offset is relative to the world. That is, if the ped has moved 1 meter on the X axis and 5 meters on the Y axis, it'll return 1,5,0.
 * ```
 * Hash: 0xE0AF41401ADF87E3 | ApiSet: undefined
 */
export declare function getPedExtractedDisplacement(ped: number | Ped, worldSpace: boolean): Vector3;
/**
 * ```
 * The pointer is to a padded struct that matches the arguments to SET_PED_HEAD_BLEND_DATA(...). There are 4 bytes of padding after each field.
 * pass this struct in the second parameter
 * typedef struct
 * {
 * int shapeFirst, shapeSecond, shapeThird;
 * int skinFirst, skinSecond, skinThird;
 * float shapeMix, skinMix, thirdMix;
 * } headBlendData;
 * ```
 * Hash: 0x2746BD9D88C5C5D0 | ApiSet: undefined
 */
export declare function getPedHeadBlendData(ped: number | Ped): [boolean, any];
/**
 * Hash: 0x451294E859ECC018 | ApiSet: undefined
 */
export declare function getPedHelmetStoredHatPropIndex(ped: number | Ped): number;
/**
 * Input: Haircolor index, value between 0 and 63 (inclusive).
 * Output: RGB values for the haircolor specified in the input.
 * This is used with the hair color swatches scaleform.
 * Use [`_0x013E5CFC38CD5387`](#\_0x013E5CFC38CD5387) to get the makeup colors.
 * Hash: 0x4852FC386E2E1BB5 | ApiSet: undefined
 */
export declare function getPedHairRgbColor(hairColorIndex: number): [number, number, number];
/**
 * Hash: 0x9D728C1E12BF5518 | ApiSet: undefined
 */
export declare function getPedHelmetStoredHatTexIndex(ped: number | Ped): number;
/**
 * Hash: 0x4700A416E8324EF3 | ApiSet: undefined
 */
export declare function getPedMaxHealth(ped: number | Ped): number;
/**
 * ```
 * Type equals 0 for male non-dlc, 1 for female non-dlc, 2 for male dlc, and 3 for female dlc.
 * ```
 * Hash: 0x5EF37013A6539C9D | ApiSet: undefined
 */
export declare function getPedHeadBlendNumHeads(type: number): number;
/**
 * ```
 * Likely a char, if that overlay is not set, e.i. "None" option, returns 255;
 * This might be the once removed native GET_PED_HEAD_OVERLAY.
 * ```
 * Hash: 0xA60EF3B6461A4D43 | ApiSet: undefined
 */
export declare function getPedHeadOverlayValue(ped: number | Ped, overlayID: number): number;
/**
 * Input: Makeup color index, value between 0 and 63 (inclusive).
 * Output: RGB values for the makeup color specified in the input.
 * This is used with the makeup color swatches scaleform.
 * Use [`_0x4852FC386E2E1BB5`](#\_0x4852FC386E2E1BB5) to get the hair colors.
 * Hash: 0x013E5CFC38CD5387 | ApiSet: undefined
 */
export declare function getPedMakeupRgbColor(makeupColorIndex: number): [number, number, number];
/**
 * Hash: 0x3F69145BBA87BAE7 | ApiSet: undefined
 */
export declare function getPedMoney(ped: number | Ped): number;
/**
 * Hash: 0xD75960F6BD9EA49C | ApiSet: undefined
 */
export declare function getPedLastDamageBone(ped: number | Ped): [boolean, number];
/**
 * ```
 * Returns size of array, passed into the second variable.
 * See below for usage information.
 * This function actually requires a struct, where the first value is the maximum number of elements to return.  Here is a sample of how I was able to get it to work correctly, without yet knowing the struct format.
 * //Setup the array
 * const int numElements = 10;
 * const int arrSize = numElements * 2 + 2;
 * Any veh[arrSize];
 * //0 index is the size of the array
 * veh[0] = numElements;
 * `int count = PED::GET_PED_NEARBY_VEHICLES(PLAYER::PLAYER_PED_ID(), veh);`
 * if (veh != NULL)
 * {
 * //Simple loop to go through results
 * for (int i = 0; i < count; i++)
 * {
 * int offsettedID = i * 2 + 2;
 * //Make sure it exists
 * `if (veh[offsettedID] != NULL && ENTITY::DOES_ENTITY_EXIST(veh[offsettedID]))`
 * {
 * //Do something
 * }
 * }
 * }
 * Here's the right way to do it (console and pc):
 * pastebin.com/SsFej963
 * ```
 * Hash: 0xCFF869CBFA210D82 | ApiSet: undefined
 */
export declare function getPedNearbyVehicles(ped: number | Ped): [number, number];
/**
 * ```
 * -1: no landing
 * 0: landing on both feet
 * 1: stumbling
 * 2: rolling
 * 3: ragdoll
 * ```
 * Hash: 0x8B9F1FC6AE8166C0 | ApiSet: undefined
 */
export declare function getPedParachuteLandingType(ped: number | Ped): number;
/**
 * Hash: 0xE3DD5F2A84B42281 | ApiSet: undefined
 */
export declare function getPedPaletteVariation(ped: number | Ped, componentId: number): number;
/**
 * Hash: 0xEAF5F7E5AE7C6C9D | ApiSet: undefined
 */
export declare function getPedParachuteTintIndex(ped: number | Ped): number;
/**
 * Hash: 0xE131A28626F81AB2 | ApiSet: undefined
 */
export declare function getPedPropTextureIndex(ped: number | Ped, componentId: number): number;
/**
 * Console/PC structure definitions and example: pastebin.com/SsFej963
 * For FiveM/Cfx.Re use-cases refer to: [`GET_GAME_POOL`](#\_0x2B9D4F50).
 * Hash: 0x23F8F5FC7E8C4A6B | ApiSet: undefined
 */
export declare function getPedNearbyPeds(ped: number | Ped, ignore: number): [number, number];
/**
 * Hash: 0x898CC20EA75BACD8 | ApiSet: undefined
 */
export declare function getPedPropIndex(ped: number | Ped, componentId: number): number;
/**
 * ```
 * Returns:
 * -1: Normal
 * 0: Wearing parachute on back
 * 1: Parachute opening
 * 2: Parachute open
 * 3: Falling to doom (e.g. after exiting parachute)
 * Normal means no parachute?
 * ```
 * Hash: 0x79CFD9827CC979B6 | ApiSet: undefined
 */
export declare function getPedParachuteState(ped: number | Ped): number;
/**
 * Hash: 0x2057EF813397A772 | ApiSet: undefined
 */
export declare function getPedRagdollBoneIndex(ped: number | Ped, bone: number): number;
/**
 * Hash: 0xAF9E59B1B1FBF2A0 | ApiSet: undefined
 */
export declare function getPedResetFlag(ped: number | Ped, flagId: number): boolean;
/**
 * Hash: 0x7DBDD04862D95F04 | ApiSet: undefined
 */
export declare function getPedRelationshipGroupHash(ped: number | Ped): number;
/**
 * Hash: 0x42FDD0F017B1E38E | ApiSet: undefined
 */
export declare function getPedRelationshipGroupDefaultHash(ped: number | Ped): number;
/**
 * ```
 * Returns the Entity (Ped, Vehicle, or ?Object?) that killed the 'ped'
 * Is best to check if the Ped is dead before asking for its killer.
 * ```
 * Hash: 0x93C8B64DEB84728C | ApiSet: undefined
 */
export declare function getPedSourceOfDeath(ped: number | Ped): number;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x32C27A11307B01CC | ApiSet: undefined
 */
export declare function getPedTaskCombatTarget(ped: number | Ped, p1: any): number;
/**
 * ```
 * Returns whether the entity is in stealth mode
 * ```
 * Hash: 0x7C2AC9CA66575FBF | ApiSet: undefined
 */
export declare function getPedStealthMovement(ped: number | Ped): boolean;
/**
 * Hash: 0x04A355E041E004E6 | ApiSet: undefined
 */
export declare function getPedTextureVariation(ped: number | Ped, componentId: number): number;
/**
 * Hash: 0x1E98817B311AE98A | ApiSet: undefined
 */
export declare function getPedTimeOfDeath(ped: number | Ped): number;
/**
 * Ped types:
 * ```cpp
 * enum ePedType
 * {
 * PED_TYPE_PLAYER_0 = 0,
 * PED_TYPE_PLAYER_1 = 1,
 * PED_TYPE_NETWORK_PLAYER = 2,
 * PED_TYPE_PLAYER_2 = 3,
 * PED_TYPE_CIVMALE = 4,
 * PED_TYPE_CIVFEMALE = 5,
 * PED_TYPE_COP = 6,
 * PED_TYPE_GANG_ALBANIAN = 7,
 * PED_TYPE_GANG_BIKER_1 = 8,
 * PED_TYPE_GANG_BIKER_2 = 9,
 * PED_TYPE_GANG_ITALIAN = 10,
 * PED_TYPE_GANG_RUSSIAN = 11,
 * PED_TYPE_GANG_RUSSIAN_2 = 12,
 * PED_TYPE_GANG_IRISH = 13,
 * PED_TYPE_GANG_JAMAICAN = 14,
 * PED_TYPE_GANG_AFRICAN_AMERICAN = 15,
 * PED_TYPE_GANG_KOREAN = 16,
 * PED_TYPE_GANG_CHINESE_JAPANESE = 17,
 * PED_TYPE_GANG_PUERTO_RICAN = 18,
 * PED_TYPE_DEALER = 19,
 * PED_TYPE_MEDIC = 20,
 * PED_TYPE_FIREMAN = 21,
 * PED_TYPE_CRIMINAL = 22,
 * PED_TYPE_BUM = 23,
 * PED_TYPE_PROSTITUTE = 24,
 * PED_TYPE_SPECIAL = 25,
 * PED_TYPE_MISSION = 26,
 * PED_TYPE_SWAT = 27,
 * PED_TYPE_ANIMAL = 28,
 * PED_TYPE_ARMY = 29
 * };
 * ```
 * Hash: 0xFF059E1E4C01E63C | ApiSet: undefined
 */
export declare function getPedType(ped: number | Ped): number;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xEF2C71A32CAD5FBD | ApiSet: undefined
 */
export declare function getPedVisualFieldCenterAngle(ped: number | Ped): number;
/**
 * ```
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
 * ```
 * Hash: 0xDB4EACD4AD0A5D6B | ApiSet: undefined
 */
export declare function getPedheadshotTxdString(id: number): string;
/**
 * Hash: 0x9B128DC36C1E04CF | ApiSet: undefined
 */
export declare function getPedsJacker(ped: number | Ped): number;
/**
 * ```
 * Gets a random ped in the x/y/zRadius near the x/y/z coordinates passed.
 * Ped Types:
 * Any = -1
 * Player = 1
 * Male = 4
 * Female = 5
 * Cop = 6
 * Human = 26
 * SWAT = 27
 * Animal = 28
 * Army = 29
 * ```
 * Hash: 0x876046A8E3A4B71C | ApiSet: undefined
 */
export declare function getRandomPedAtCoord(position: Vector3, xRadius: number, yRadius: number, zRadius: number, pedType: number): number;
/**
 * Hash: 0x6A3975DEA89F9A17 | ApiSet: undefined
 */
export declare function getPlayerPedIsFollowing(ped: number | Ped): number | string;
/**
 * ```
 * Gets the relationship between two peds. This should be called twice (once for each ped).
 * Relationship types:
 * 0 = Companion
 * 1 = Respect
 * 2 = Like
 * 3 = Neutral
 * 4 = Dislike
 * 5 = Hate
 * 255 = Pedestrians
 * (Credits: Inco)
 * Example:
 * `PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, l_1017, 0xA49E591C);`
 * `PED::GET_RELATIONSHIP_BETWEEN_PEDS(2, 0xA49E591C, l_1017);`
 * ```
 * Hash: 0xEBA5AD3A0EAF7121 | ApiSet: undefined
 */
export declare function getRelationshipBetweenPeds(ped1: number | Ped, ped2: number | Ped): number;
/**
 * Hash: 0xF92691AED837A5FC | ApiSet: undefined
 */
export declare function getVehiclePedIsEntering(ped: number | Ped): number;
/**
 * Hash: 0xD80932D577274D40 | ApiSet: undefined
 */
export declare function getSynchronizedSceneRate(sceneID: number): number;
/**
 * ```
 * Gets the relationship between two groups. This should be called twice (once for each group).
 * Relationship types:
 * 0 = Companion
 * 1 = Respect
 * 2 = Like
 * 3 = Neutral
 * 4 = Dislike
 * 5 = Hate
 * 255 = Pedestrians
 * Example:
 * `PED::GET_RELATIONSHIP_BETWEEN_GROUPS(l_1017, 0xA49E591C);`
 * `PED::GET_RELATIONSHIP_BETWEEN_GROUPS(0xA49E591C, l_1017);`
 * ```
 * Hash: 0x9E6B70061662AE5C | ApiSet: undefined
 */
export declare function getRelationshipBetweenGroups(group1: number | string, group2: number | string): number;
/**
 * ```
 * Gets ID of vehicle player using. It means it can get ID at any interaction with vehicle. Enter\exit for example. And that means it is faster than GET_VEHICLE_PED_IS_IN but less safe.
 * ```
 * Hash: 0x6094AD011A2EA87D | ApiSet: undefined
 */
export declare function getVehiclePedIsUsing(ped: number | Ped): number;
/**
 * Hash: 0x6F4C85ACD641BCD2 | ApiSet: undefined
 */
export declare function getSeatPedIsTryingToEnter(ped: number | Ped): number;
/**
 * Hash: 0xE4A310B1D7FA73CC | ApiSet: undefined
 */
export declare function getSynchronizedScenePhase(sceneID: number): number;
/**
 * Hash: 0x654CD0A825161131 | ApiSet: undefined
 */
export declare function hasPedHeadBlendFinished(ped: number | Ped): boolean;
/**
 * ```
 * GET_TIME_*
 * ```
 * Hash: 0x36B77BB84687C318 | ApiSet: undefined
 */
export declare function getTimeOfLastPedWeaponDamage(ped: number | Ped, weaponHash: number | string): number;
/**
 * Hash: 0x814FA8BE5449445D | ApiSet: undefined
 */
export declare function getVehiclePedIsTryingToEnter(ped: number | Ped): number;
/**
 * Retrieves the vehicle the specified ped is currently in, or the last vehicle they were in.
 * Hash: 0x9A9112A0FE9A4713 | ApiSet: undefined
 */
export declare function getVehiclePedIsIn(ped: number | Ped, lastVehicle: boolean): number;
/**
 * ```
 * Sends the message that was created by a call to CREATE_NM_MESSAGE to the specified Ped.
 * If a message hasn't been created already, this function does nothing.
 * If the Ped is not ragdolled with Euphoria enabled, this function does nothing.
 * The following call can be used to ragdoll the Ped with Euphoria enabled: SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
 * Call order:
 * SET_PED_TO_RAGDOLL
 * CREATE_NM_MESSAGE
 * GIVE_PED_NM_MESSAGE
 * Multiple messages can be chained. Eg. to make the ped stagger and swing his arms around, the following calls can be made:
 * SET_PED_TO_RAGDOLL(ped, 4000, 5000, 1, 1, 1, 0);
 * CREATE_NM_MESSAGE(true, 0); // stopAllBehaviours - Stop all other behaviours, in case the Ped is already doing some Euphoria stuff.
 * GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
 * CREATE_NM_MESSAGE(true, 1151); // staggerFall - Attempt to walk while falling.
 * GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
 * CREATE_NM_MESSAGE(true, 372); // armsWindmill - Swing arms around.
 * GIVE_PED_NM_MESSAGE(ped); // Dispatch message to Ped.
 * ```
 * Hash: 0xB158DFCCC56E5C5B | ApiSet: undefined
 */
export declare function givePedNmMessage(ped: number | Ped): void;
/**
 * Hash: 0xE4B5F4BF2CB24E65 | ApiSet: undefined
 */
export declare function hasActionModeAssetLoaded(asset: string): boolean;
/**
 * Gives the ped a helmet. Can be removed by invoking [`REMOVE_PED_HELMET`](#\_0xA7B2458D0AD6DED8).
 * ```cpp
 * enum ePedCompFlags {
 * PV_FLAG_NONE                  = 0, // 0
 * PV_FLAG_BULKY                 = 1, // 1<<0
 * PV_FLAG_JOB                   = 2, // 1<<1
 * PV_FLAG_SUNNY                 = 4, // 1<<2
 * PV_FLAG_WET                   = 8, // 1<<3
 * PV_FLAG_COLD                  = 16, // 1<<4
 * PV_FLAG_NOT_IN_CAR            = 32, // 1<<5
 * PV_FLAG_BIKE_ONLY             = 64, // 1<<6
 * PV_FLAG_NOT_INDOORS           = 128, // 1<<7
 * PV_FLAG_FIRE_RETARDENT        = 256, // 1<<8
 * PV_FLAG_ARMOURED              = 512, // 1<<9
 * PV_FLAG_LIGHTLY_ARMOURED      = 1024, // 1<<10
 * PV_FLAG_HIGH_DETAIL           = 2048, // 1<<11
 * PV_FLAG_DEFAULT_HELMET        = 4096, // 1<<12
 * PV_FLAG_RANDOM_HELMET         = 8192, // 1<<13
 * PV_FLAG_SCRIPT_HELMET         = 16384, // 1<<14
 * PV_FLAG_FLIGHT_HELMET         = 32768, // 1<<15
 * PV_FLAG_HIDE_IN_FIRST_PERSON  = 65536, // 1<<16
 * PV_FLAG_USE_PHYSICS_HAT_2     = 131072, // 1<<17
 * PV_FLAG_PILOT_HELMET          = 262144 // 1<<18
 * };
 * ```
 * Hash: 0x54C7C4A94367717E | ApiSet: undefined
 */
export declare function givePedHelmet(ped: number | Ped, cannotRemove: boolean, helmetFlag: number, textureIndex: number): void;
/**
 * Hash: 0x876928DDDFCCC9CD | ApiSet: undefined
 */
export declare function hasPedheadshotImgUploadFailed(): boolean;
/**
 * Hash: 0x66680A92700F43DF | ApiSet: undefined
 */
export declare function hasPedPreloadVariationDataFinished(ped: number | Ped): boolean;
/**
 * Hash: 0x784002A632822099 | ApiSet: undefined
 */
export declare function hasPedPreloadPropDataFinished(ped: number | Ped): boolean;
/**
 * Hash: 0xE977FC5B08AF3441 | ApiSet: undefined
 */
export declare function hasStealthModeAssetLoaded(asset: string): boolean;
/**
 * Hash: 0xE8A169E666CBC541 | ApiSet: undefined
 */
export declare function hasPedheadshotImgUploadSucceeded(): boolean;
/**
 * Hash: 0x4759CC730F947C81 | ApiSet: undefined
 */
export declare function instantlyFillPedPopulation(): void;
/**
 * Hash: 0x68772DB2B2526F9F | ApiSet: undefined
 */
export declare function isAnyHostilePedNearPoint(ped: number | Ped, position: Vector3, radius: number): boolean;
/**
 * Hash: 0x8507BCB710FA6DC0 | ApiSet: undefined
 */
export declare function hasPedReceivedEvent(ped: number | Ped, eventId: number): boolean;
/**
 * Hash: 0x62AB793144DE75DC | ApiSet: undefined
 */
export declare function hidePedBloodDamageByZone(ped: number | Ped, p1: any, p2: boolean): void;
/**
 * Hash: 0x083961498679DC9F | ApiSet: undefined
 */
export declare function isAnyPedNearPoint(position: Vector3, radius: number): boolean;
/**
 * ```
 * Returns true if the given ped has a valid pointer to CPlayerInfo in its CPed class. That's all.
 * ```
 * Hash: 0x12534C348C6CB68B | ApiSet: undefined
 */
export declare function isPedAPlayer(ped: number | Ped): boolean;
/**
 * Hash: 0x7350823473013C02 | ApiSet: undefined
 */
export declare function haveAllStreamingRequestsCompleted(ped: number | Ped): boolean;
/**
 * ```
 * xyz - relative to the world origin.
 * ```
 * Hash: 0x16EC4839969F9F5E | ApiSet: undefined
 */
export declare function isCopPedInArea3d(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): boolean;
/**
 * Hash: 0xE0A0AEC214B1FABA | ApiSet: undefined
 */
export declare function isConversationPedDead(ped: number | Ped): boolean;
/**
 * Hash: 0x863B23EFDE9C5DF2 | ApiSet: undefined
 */
export declare function isPedBeingStealthKilled(ped: number | Ped): boolean;
/**
 * Verifies whether a ped is firing within a specific area.
 * Hash: 0xA0D3D71EA1086C55 | ApiSet: undefined
 */
export declare function isAnyPedShootingInArea(minX: number, minY: number, minZ: number, maxX: number, maxY: number, maxZ: number, bHighlightArea: boolean, bDo3DCheck: boolean): boolean;
/**
 * Hash: 0x9A497FE2DF198913 | ApiSet: undefined
 */
export declare function isPedBeingJacked(ped: number | Ped): boolean;
/**
 * ```
 * p1 is always 0
 * ```
 * Hash: 0x4FBACCE3B4138EE8 | ApiSet: undefined
 */
export declare function isPedBeingStunned(ped: number | Ped, p1: number): boolean;
/**
 * Hash: 0x604E810189EE3A59 | ApiSet: undefined
 */
export declare function isPedBlushColorValid(colorID: number): boolean;
/**
 * Hash: 0xF41B5D290C99A3D6 | ApiSet: undefined
 */
export declare function isPedBlushColorValid2(colorId: number): boolean;
/**
 * Hash: 0x3998B1276A3300E5 | ApiSet: undefined
 */
export declare function isPedAimingFromCover(ped: number | Ped): boolean;
/**
 * Checks if the component variation is valid, this works great for randomizing components using loops.
 * Hash: 0xE825F6B6CEA7671D | ApiSet: undefined
 */
export declare function isPedComponentVariationValid(ped: number | Ped, componentId: number, drawableId: number, textureId: number): boolean;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x09E7ECA981D9B210 | ApiSet: undefined
 */
export declare function isPedBodyBlemishValid(colorID: number): boolean;
/**
 * Hash: 0x5527B8246FEF9B11 | ApiSet: undefined
 */
export declare function isPedDiving(ped: number | Ped): boolean;
/**
 * Hash: 0x53E8CB4F48BFE623 | ApiSet: undefined
 */
export declare function isPedClimbing(ped: number | Ped): boolean;
/**
 * Hash: 0xD125AE748725C6BC | ApiSet: undefined
 */
export declare function isPedDucking(ped: number | Ped): boolean;
/**
 * ```
 * angle is ped's view cone
 * ```
 * Hash: 0xD71649DB0A545AA3 | ApiSet: undefined
 */
export declare function isPedFacingPed(ped: number | Ped, otherPed: number | Ped, angle: number): boolean;
/**
 * Determines if a ped is dead. Contrary to what the name might suggest, it does not always detect when a ped is in the 'dying' phase (transitioning to death). The exception is when `checkMeleeDeathFlags` is set to `true`, which then includes peds in the midst of melee takedown moves as being in a dying state, even if the death task has not yet started.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x3317DEDB88C95038 | ApiSet: undefined
 */
export declare function isPedDeadOrDying(ped: number | Ped, checkMeleeDeathFlags: boolean): boolean;
/**
 * Hash: 0xFB92A102F1C4DFA3 | ApiSet: undefined
 */
export declare function isPedFalling(ped: number | Ped): boolean;
/**
 * ```
 * Gets a value indicating whether this ped's health is below its fatally injured threshold. The default threshold is 100.
 * If the handle is invalid, the function returns true.
 * ```
 * Hash: 0xD839450756ED5A80 | ApiSet: undefined
 */
export declare function isPedFatallyInjured(ped: number | Ped): boolean;
/**
 * Hash: 0xBB062B2B5722478E | ApiSet: undefined
 */
export declare function isPedGettingIntoAVehicle(ped: number | Ped): boolean;
/**
 * Hash: 0xBA63D9FE45412247 | ApiSet: undefined
 */
export declare function isPedDefensiveAreaActive(ped: number | Ped, p1: boolean): boolean;
/**
 * Hash: 0x451D05012CCEC234 | ApiSet: undefined
 */
export declare function isPedDoingBeastJump(ped: number | Ped): boolean;
/**
 * Hash: 0x9BB01E3834671191 | ApiSet: undefined
 */
export declare function isPedGroupMember(ped: number | Ped, groupId: number): boolean;
/**
 * Hash: 0xB2C086CC1BF8F2BF | ApiSet: undefined
 */
export declare function isPedDoingDriveby(ped: number | Ped): boolean;
/**
 * ```
 * Presumably returns the Entity that the Ped is currently diving out of the way of.
 * var num3;
 * `if (PED::IS_PED_EVASIVE_DIVING(A_0, &num3) != 0)`
 * `if (ENTITY::IS_ENTITY_A_VEHICLE(num3) != 0)`
 * ```
 * Hash: 0x414641C26E105898 | ApiSet: undefined
 */
export declare function isPedEvasiveDiving(ped: number | Ped): [boolean, number];
/**
 * Hash: 0xE0D36E5D9E99CC21 | ApiSet: undefined
 */
export declare function isPedHairColorValid(colorID: number): boolean;
/**
 * Hash: 0x9F65DBC537E59AD5 | ApiSet: undefined
 */
export declare function isPedGoingIntoCover(ped: number | Ped): boolean;
/**
 * Hash: 0xBBCCE00B381F8482 | ApiSet: undefined
 */
export declare function isPedFleeing(ped: number | Ped): boolean;
/**
 * Hash: 0xED6D8E27A43B8CDE | ApiSet: undefined
 */
export declare function isPedHairColorValid2(colorId: number): boolean;
/**
 * Hash: 0x5CD3CB88A7F8850D | ApiSet: undefined
 */
export declare function isPedHeadtrackingPed(ped1: number | Ped, ped2: number | Ped): boolean;
/**
 * Hash: 0x1C86D8AEF8254B78 | ApiSet: undefined
 */
export declare function isPedHangingOnToVehicle(ped: number | Ped): boolean;
/**
 * ```
 * Returns true/false if the ped is/isn't humanoid.
 * ```
 * Hash: 0xB980061DA992779D | ApiSet: undefined
 */
export declare function isPedHuman(ped: number | Ped): boolean;
/**
 * Hash: 0xFCF37A457CB96DC0 | ApiSet: undefined
 */
export declare function isPedHeadingTowardsPosition(ped: number | Ped, position: Vector3, p4: number): boolean;
/**
 * ```
 * Returns whether the specified ped is hurt.
 * ```
 * Hash: 0x5983BB449D7FDB12 | ApiSet: undefined
 */
export declare function isPedHurt(ped: number | Ped): boolean;
/**
 * Hash: 0x813A0A7C9D2E831F | ApiSet: undefined
 */
export declare function isPedHeadtrackingEntity(ped: number | Ped, entity: number | Entity): boolean;
/**
 * Hash: 0xB9496CE47546DB2C | ApiSet: undefined
 */
export declare function isPedHelmetUnk(ped: number | Ped): boolean;
/**
 * Hash: 0x0BD04E29640C9C12 | ApiSet: undefined
 */
export declare function isPedInAnyPoliceVehicle(ped: number | Ped): boolean;
/**
 * Hash: 0x5FFF4CFC74D8FB80 | ApiSet: undefined
 */
export declare function isPedInAnyPlane(ped: number | Ped): boolean;
/**
 * Hash: 0x2E0E1C2B4F6CB339 | ApiSet: undefined
 */
export declare function isPedInAnyBoat(ped: number | Ped): boolean;
/**
 * Hash: 0x298B91AE825E5705 | ApiSet: undefined
 */
export declare function isPedInAnyHeli(ped: number | Ped): boolean;
/**
 * Hash: 0x6E575D6A898AB852 | ApiSet: undefined
 */
export declare function isPedInAnyTaxi(ped: number | Ped): boolean;
/**
 * Returns whether the specified ped is in any vehicle. If `atGetIn` is set to true, also returns true if the ped is
 * currently in the process of entering a vehicle (a specific stage check for `CTaskEnterVehicle`).
 * Hash: 0x997ABD671D25CA0B | ApiSet: undefined
 */
export declare function isPedInAnyVehicle(ped: number | Ped, atGetIn: boolean): boolean;
/**
 * Hash: 0xFBFC01CCFB35D99E | ApiSet: undefined
 */
export declare function isPedInAnySub(ped: number | Ped): boolean;
/**
 * Hash: 0x6F972C1AB75A1ED0 | ApiSet: undefined
 */
export declare function isPedInAnyTrain(ped: number | Ped): boolean;
/**
 * Hash: 0x845333B3150583AB | ApiSet: undefined
 */
export declare function isPedInCoverFacingLeft(ped: number | Ped): boolean;
/**
 * Hash: 0x9134873537FA419C | ApiSet: undefined
 */
export declare function isPedInFlyingVehicle(ped: number | Ped): boolean;
/**
 * Examines whether the ped is engaged in combat; when given a target ped index, it confirms if the ped is actively fighting the specified target, returning true if engaged and false if not.
 * Hash: 0x4859F1FC66A6278E | ApiSet: undefined
 */
export declare function isPedInCombat(ped: number | Ped, target: number | Ped): boolean;
/**
 * ```
 * p1 is nearly always 0 in the scripts.
 * ```
 * Hash: 0x60DFD0691A170B88 | ApiSet: undefined
 */
export declare function isPedInCover(ped: number | Ped, exceptUseWeapon: boolean): boolean;
/**
 * Hash: 0x5891CAC5D4ACFF74 | ApiSet: undefined
 */
export declare function isPedInGroup(ped: number | Ped): boolean;
/**
 * ```
 * Notes: The function only returns true while the ped is:
 * A.) Swinging a random melee attack (including pistol-whipping)
 * B.) Reacting to being hit by a melee attack (including pistol-whipping)
 * C.) Is locked-on to an enemy (arms up, strafing/skipping in the default fighting-stance, ready to dodge+counter).
 * You don't have to be holding the melee-targetting button to be in this stance; you stay in it by default for a few seconds after swinging at someone. If you do a sprinting punch, it returns true for the duration of the punch animation and then returns false again, even if you've punched and made-angry many peds
 * ```
 * Hash: 0x4E209B2C1EAD5159 | ApiSet: undefined
 */
export declare function isPedInMeleeCombat(ped: number | Ped): boolean;
/**
 * Hash: 0x6A03BF943D767C93 | ApiSet: undefined
 */
export declare function isPedInHighCover(ped: number | Ped): boolean;
/**
 * Hash: 0x796D90EFB19AA332 | ApiSet: undefined
 */
export declare function isPedInModel(ped: number | Ped, modelHash: number | string): boolean;
/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0x082D79E15302F0C2 | ApiSet: undefined
 */
export declare function isPedInSphereAreaOfAnyEnemyPeds(ped: number | Ped, position: Vector3, range: number): boolean;
/**
 * Hash: 0x7DCE8BDA0F1C1200 | ApiSet: undefined
 */
export declare function isPedInParachuteFreeFall(ped: number | Ped): boolean;
/**
 * ```
 * Gets a value indicating whether the specified ped is in the specified vehicle.
 * If 'atGetIn' is false, the function will not return true until the ped is sitting in the vehicle and is about to close the door. If it's true, the function returns true the moment the ped starts to get onto the seat (after opening the door). Eg. if false, and the ped is getting into a submersible, the function will not return true until the ped has descended down into the submersible and gotten into the seat, while if it's true, it'll return true the moment the hatch has been opened and the ped is about to descend into the submersible.
 * ```
 * Hash: 0xA3EE4A07279BB9DB | ApiSet: undefined
 */
export declare function isPedInVehicle(ped: number | Ped, vehicle: number | Vehicle, atGetIn: boolean): boolean;
/**
 * Hash: 0x4AE4FF911DFB61DA | ApiSet: undefined
 */
export declare function isPedJacking(ped: number | Ped): boolean;
/**
 * ```
 * Returns true/false if the ped is/isn't male.
 * ```
 * Hash: 0x6D9F5FAA7488BA46 | ApiSet: undefined
 */
export declare function isPedMale(ped: number | Ped): boolean;
/**
 * Indicates whether this ped's health is below its injured threshold.
 * The default threshold is 100, these are stored in the `pedhealth.meta` file located in `common:\data\`
 * ### Below are some of the values
 * | InjuredHealthThreshold | Name      |
 * |------------------------|-----------|
 * | 100.000000             | Strong    |
 * | 100.000000             | Average   |
 * | 100.000000             | Weak      |
 * Hash: 0x84A2DD9AC37C35C1 | ApiSet: undefined
 */
export declare function isPedInjured(ped: number | Ped): boolean;
/**
 * Hash: 0xCEDABC5900A0BF97 | ApiSet: undefined
 */
export declare function isPedJumping(ped: number | Ped): boolean;
/**
 * Hash: 0x3E802F11FBE27674 | ApiSet: undefined
 */
export declare function isPedLipstickColorValid2(colorId: number): boolean;
/**
 * Hash: 0x94495889E22C6479 | ApiSet: undefined
 */
export declare function isPedOnAnyBike(ped: number | Ped): boolean;
/**
 * Hash: 0x433DDFFE2044B636 | ApiSet: undefined
 */
export declare function isPedJumpingOutOfVehicle(ped: number | Ped): boolean;
/**
 * Hash: 0x01FEE67DB37F59B2 | ApiSet: undefined
 */
export declare function isPedOnFoot(ped: number | Ped): boolean;
/**
 * Hash: 0x0525A2C2562F3CD4 | ApiSet: undefined
 */
export declare function isPedLipstickColorValid(colorID: number): boolean;
/**
 * Hash: 0xEC5F66E459AF3BB2 | ApiSet: undefined
 */
export declare function isPedOnSpecificVehicle(ped: number | Ped, vehicle: number | Vehicle): boolean;
/**
 * Hash: 0xC9D55B1A358A5BF7 | ApiSet: undefined
 */
export declare function isPedModel(ped: number | Ped, modelHash: number | string): boolean;
/**
 * ```
 * `Same function call as PED::GET_MOUNT, aka just returns 0`
 * ```
 * Hash: 0x460BC76A0E10655E | ApiSet: undefined
 */
export declare function isPedOnMount(ped: number | Ped): boolean;
/**
 * ```
 * IS_PED_*
 * Returns true if the ped is currently opening a door (CTaskOpenDoor).
 * ```
 * Hash: 0x26AF0E8E30BD2A2C | ApiSet: undefined
 */
export declare function isPedOpeningADoor(ped: number | Ped): boolean;
/**
 * ```
 * Gets a value indicating whether the specified ped is on top of any vehicle.
 * Return 1 when ped is on vehicle.
 * Return 0 when ped is not on a vehicle.
 * ```
 * Hash: 0x67722AEB798E5FAB | ApiSet: undefined
 */
export declare function isPedOnVehicle(ped: number | Ped): boolean;
/**
 * Hash: 0xEBD0EDBA5BE957CF | ApiSet: undefined
 */
export declare function isPedPerformingDependentComboLimit(ped: number | Ped): boolean;
/**
 * Hash: 0xD6A86331A537A7B9 | ApiSet: undefined
 */
export declare function isPedProne(ped: number | Ped): boolean;
/**
 * Hash: 0xFD4CCDBCC59941B7 | ApiSet: undefined
 */
export declare function isPedPerformingStealthKill(ped: number | Ped): boolean;
/**
 * Hash: 0xDCCA191DF9980FD7 | ApiSet: undefined
 */
export declare function isPedPerformingMeleeAction(ped: number | Ped): boolean;
/**
 * Hash: 0xC70B5FAE151982D8 | ApiSet: undefined
 */
export declare function isPedPlantingBomb(ped: number | Ped): boolean;
/**
 * Hash: 0xD1871251F3B5ACD7 | ApiSet: undefined
 */
export declare function isPedRunningMeleeTask(ped: number | Ped): boolean;
/**
 * ```
 * If the ped handle passed through the parenthesis is in a ragdoll state this will return true.
 * ```
 * Hash: 0x47E4E977581C5B55 | ApiSet: undefined
 */
export declare function isPedRagdoll(ped: number | Ped): boolean;
/**
 * Hash: 0x625B774D75C87068 | ApiSet: undefined
 */
export declare function isPedRespondingToEvent(ped: number | Ped, event: any): boolean;
/**
 * ```
 * Returns whether the specified ped is reloading.
 * ```
 * Hash: 0x24B100C68C645951 | ApiSet: undefined
 */
export declare function isPedReloading(ped: number | Ped): boolean;
/**
 * Hash: 0x81AA517FBBA05D39 | ApiSet: undefined
 */
export declare function isPedShaderEffectValid(ped: number | Ped): boolean;
/**
 * Hash: 0x2AFE52F782F25775 | ApiSet: undefined
 */
export declare function isPedRunningMobilePhoneTask(ped: number | Ped): boolean;
/**
 * Hash: 0xE3B6097CC25AA69E | ApiSet: undefined
 */
export declare function isPedRunningRagdollTask(ped: number | Ped): boolean;
/**
 * Hash: 0x7E9DFE24AC1E58EF | ApiSet: undefined
 */
export declare function isPedShootingInArea(ped: number | Ped, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p7: boolean, p8: boolean): boolean;
/**
 * ```
 * Returns true if the ped doesn't do any movement. If the ped is being pushed forwards by using APPLY_FORCE_TO_ENTITY for example, the function returns false.
 * ```
 * Hash: 0x530944F6F4B8A214 | ApiSet: undefined
 */
export declare function isPedStopped(ped: number | Ped): boolean;
/**
 * ```
 * Returns whether the specified ped is shooting.
 * ```
 * Hash: 0x34616828CD07F1A1 | ApiSet: undefined
 */
export declare function isPedShooting(ped: number | Ped): boolean;
/**
 * Hash: 0xC024869A53992F34 | ApiSet: undefined
 */
export declare function isPedSwimmingUnderWater(ped: number | Ped): boolean;
/**
 * ```
 * Detect if ped is in any vehicle
 * [True/False]
 * ```
 * Hash: 0x826AA586EDB9FEF8 | ApiSet: undefined
 */
export declare function isPedSittingInAnyVehicle(ped: number | Ped): boolean;
/**
 * ```
 * Detect if ped is sitting in the specified vehicle
 * [True/False]
 * ```
 * Hash: 0xA808AA1D79230FC2 | ApiSet: undefined
 */
export declare function isPedSittingInVehicle(ped: number | Ped, vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x9DE327631295B4C2 | ApiSet: undefined
 */
export declare function isPedSwimming(ped: number | Ped): boolean;
/**
 * Hash: 0x3795688A307E1EB6 | ApiSet: undefined
 */
export declare function isPedSwappingWeapon(Ped: number | Ped): boolean;
/**
 * Hash: 0x4C5E1F087CD10BB7 | ApiSet: undefined
 */
export declare function isPedTracked(ped: number | Ped): boolean;
/**
 * If the ped is attempting to enter a locked vehicle.
 * Hash: 0x44D28D5DDFE5F68C | ApiSet: undefined
 */
export declare function isPedTryingToEnterALockedVehicle(ped: number | Ped): boolean;
/**
 * Hash: 0x14590DDBEDB1EC85 | ApiSet: undefined
 */
export declare function isPedTakingOffHelmet(ped: number | Ped): boolean;
/**
 * See [`TASK_START_SCENARIO_IN_PLACE`](#\_0x142A02425FF02BD9) for a list of scenarios.
 * Hash: 0x1BF094736DD62C2E | ApiSet: undefined
 */
export declare function isPedUsingScenario(ped: number | Ped, scenario: string): boolean;
/**
 * Hash: 0x00E73468D085F745 | ApiSet: undefined
 */
export declare function isPedUsingActionMode(ped: number | Ped): boolean;
/**
 * Hash: 0x57AB4A3080F85143 | ApiSet: undefined
 */
export declare function isPedUsingAnyScenario(ped: number | Ped): boolean;
/**
 * Hash: 0xEBB376779A760AA8 | ApiSet: undefined
 */
export declare function isPedheadshotImgUploadAvailable(): boolean;
/**
 * Hash: 0x117C70D1F5730B5E | ApiSet: undefined
 */
export declare function isPedVaulting(ped: number | Ped): boolean;
/**
 * ```
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
 * ```
 * Hash: 0x7085228842B13A67 | ApiSet: undefined
 */
export declare function isPedheadshotReady(id: number): boolean;
/**
 * Hash: 0x62522002E0C391BA | ApiSet: undefined
 */
export declare function isSynchronizedSceneLooped(sceneID: number): boolean;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x88274C11CF0D866D | ApiSet: undefined
 */
export declare function isScubaGearLightEnabled(ped: number | Ped): boolean;
/**
 * ```
 * Returns true if the ped passed through the parenthesis is wearing a helmet.
 * ```
 * Hash: 0xF33BDFE19B309B19 | ApiSet: undefined
 */
export declare function isPedWearingHelmet(ped: number | Ped): boolean;
/**
 * ```
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
 * ```
 * Hash: 0xA0A9668F158129A2 | ApiSet: undefined
 */
export declare function isPedheadshotValid(id: number): boolean;
/**
 * ```
 * returns whether or not a ped is visible within your FOV, not this check auto's to false after a certain distance.
 * Target needs to be tracked.. won't work otherwise.
 * ```
 * Hash: 0x91C8E617F64188AC | ApiSet: undefined
 */
export declare function isTrackedPedVisible(ped: number | Ped): boolean;
/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0x6EC47A344923E1ED | ApiSet: undefined
 */
export declare function isScriptedScenarioPedUsingConditionalAnim(ped: number | Ped, animDict: string, anim: string): boolean;
/**
 * Hash: 0x7F2F4F13AC5257EF | ApiSet: undefined
 */
export declare function isSynchronizedSceneHoldLastFrame(sceneID: number): boolean;
/**
 * Hash: 0x45BBCBA77C29A841 | ApiSet: undefined
 */
export declare function knockPedOffVehicle(ped: number | Ped): void;
/**
 * ```
 * Returns true if a synchronized scene is running
 * ```
 * Hash: 0x25D39B935A038A26 | ApiSet: undefined
 */
export declare function isSynchronizedSceneRunning(sceneId: number): boolean;
/**
 * Hash: 0x6FD7816A36615F48 | ApiSet: undefined
 */
export declare function knockOffPedProp(ped: number | Ped, p1: boolean, p2: boolean, p3: boolean, p4: boolean): void;
/**
 * Hash: 0x0B3E35AC043707D9 | ApiSet: undefined
 */
export declare function _0x0B3E35AC043707D9(p0: any, p1: any): void;
/**
 * Hash: 0x03EA03AF85A85CB7 | ApiSet: undefined
 */
export declare function _0x03EA03AF85A85CB7(ped: number | Ped, p1: boolean, p2: boolean, p3: boolean, p4: boolean, p5: boolean, p6: boolean, p7: boolean, p8: any): boolean;
/**
 * ```
 * In agency_heist3b.c4, its like this 90% of the time:
 * `PED::_110F526AB784111F(ped, 0.099);`
 * `PED::SET_PED_ENVEFF_SCALE(ped, 1.0);`
 * `PED::_D69411AA0CEBF9E9(ped, 87, 81, 68);`
 * `PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);`
 * and its like this 10% of the time:
 * `PED::_110F526AB784111F(ped, 0.2);`
 * `PED::SET_PED_ENVEFF_SCALE(ped, 0.65);`
 * `PED::_D69411AA0CEBF9E9(ped, 74, 69, 60);`
 * `PED::SET_ENABLE_PED_ENVEFF_SCALE(ped, 1);`
 * ```
 * Hash: 0x110F526AB784111F | ApiSet: undefined
 */
export declare function _0x110F526AB784111F(ped: number | Ped, p1: number): void;
/**
 * Hash: 0x06087579E7AA85A9 | ApiSet: undefined
 */
export declare function _0x06087579E7AA85A9(p0: any, p1: any, p2: number, p3: number, p4: number, p5: number): boolean;
/**
 * ```
 * Only appears in lamar1 script.
 * ```
 * Hash: 0x1A330D297AAC6BC1 | ApiSet: undefined
 */
export declare function _0x1A330D297AAC6BC1(ped: number | Ped, p1: number): void;
/**
 * ```
 * SET_PED_STE*
 * ```
 * Hash: 0x2016C603D6B8987C | ApiSet: undefined
 */
export declare function _0x2016C603D6B8987C(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x0F62619393661D6E | ApiSet: undefined
 */
export declare function _0x0F62619393661D6E(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0x061CB768363D6424 | ApiSet: undefined
 */
export declare function _0x061CB768363D6424(ped: number | Ped, toggle: boolean): void;
/**
 * [`SET_VEHICLE_STEER_BIAS`](#\_0x42A8EC77D5150CBE) for peds, e.g., `_SET_PED_STEER_BIAS`.
 * Hash: 0x288DF530C92DAD6F | ApiSet: undefined
 */
export declare function _0x288DF530C92DAD6F(ped: number | Ped, value: number): void;
/**
 * Hash: 0x2735233A786B1BEF | ApiSet: undefined
 */
export declare function _0x2735233A786B1BEF(ped: number | Ped, p1: number): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x1216E0BFA72CC703 | ApiSet: undefined
 */
export declare function _0x1216E0BFA72CC703(p0: any, p1: any): void;
/**
 * Hash: 0x2F3C3D9F50681DE4 | ApiSet: undefined
 */
export declare function _0x2F3C3D9F50681DE4(p0: any, p1: boolean): void;
/**
 * ```
 * GET_*
 * ```
 * Hash: 0x1E77FA7A62EE6C4C | ApiSet: undefined
 */
export declare function _0x1E77FA7A62EE6C4C(p0: any): any;
/**
 * Hash: 0x25361A96E0F7E419 | ApiSet: undefined
 */
export declare function _0x25361A96E0F7E419(p0: any, p1: any, p2: any, p3: any): any;
/**
 * Hash: 0x2F074C904D85129E | ApiSet: undefined
 */
export declare function _0x2F074C904D85129E(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): void;
/**
 * Hash: 0x2B694AFCF64E6994 | ApiSet: undefined
 */
export declare function _0x2B694AFCF64E6994(ped: number | Ped, p1: boolean): void;
/**
 * ```
 * Checks if the specified unknown flag is set in the ped's model.
 * The engine itself seems to exclusively check for flags 1 and 4 (Might be inlined code of the check that checks for other flags).
 * Game scripts exclusively check for flags 1 and 4.
 * ```
 * Hash: 0x46B05BCAE43856B0 | ApiSet: undefined
 */
export declare function _0x46B05BCAE43856B0(ped: number | Ped, flag: number): boolean;
/**
 * Hash: 0x412F1364FA066CFB | ApiSet: undefined
 */
export declare function _0x412F1364FA066CFB(p0: any): any;
/**
 * Hash: 0x2DFC81C9B9608549 | ApiSet: undefined
 */
export declare function _0x2DFC81C9B9608549(ped: number | Ped): [boolean, number];
/**
 * Hash: 0x3E9679C1DFCF422C | ApiSet: undefined
 */
export declare function _0x3E9679C1DFCF422C(p0: any, p1: any): void;
/**
 * ```
 * SET_PED_ALLOW*
 * ```
 * Hash: 0x49E50BDB8BA4DAB2 | ApiSet: undefined
 */
export declare function _0x49E50BDB8BA4DAB2(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * GET_*
 * ```
 * Hash: 0x511F1A683387C7E2 | ApiSet: undefined
 */
export declare function _0x511F1A683387C7E2(ped: number | Ped): number;
/**
 * Hash: 0x336B3D200AB007CB | ApiSet: undefined
 */
export declare function _0x336B3D200AB007CB(p0: any, p1: number, p2: number, p3: number, p4: number): any;
/**
 * Hash: 0x5A7F62FDA59759BD | ApiSet: undefined
 */
export declare function _0x5A7F62FDA59759BD(): void;
/**
 * Hash: 0x425AECF167663F48 | ApiSet: undefined
 */
export declare function _0x425AECF167663F48(ped: number | Ped, p1: boolean): void;
/**
 * Hash: 0x5407B7288D0478B7 | ApiSet: undefined
 */
export declare function _0x5407B7288D0478B7(p0: any): number;
/**
 * Hash: 0x733C87D4CE22BEA2 | ApiSet: undefined
 */
export declare function _0x733C87D4CE22BEA2(ped: number | Ped): void;
/**
 * Hash: 0x9A77DFD295E29B09 | ApiSet: undefined
 */
export declare function _0x9A77DFD295E29B09(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x9911F4A24485F653 | ApiSet: undefined
 */
export declare function _0x9911F4A24485F653(p0: boolean): void;
/**
 * Hash: 0x9E30E91FB03A2CAF | ApiSet: undefined
 */
export declare function _0x9E30E91FB03A2CAF(): [boolean, any, any];
/**
 * Hash: 0x5B6010B3CBC29095 | ApiSet: undefined
 */
export declare function _0x5B6010B3CBC29095(p0: any, p1: boolean): void;
/**
 * Hash: 0x9C6A6C19B6C0C496 | ApiSet: undefined
 */
export declare function _0x9C6A6C19B6C0C496(ped: number | Ped): [boolean, number];
/**
 * ```
 * Only called once in the scripts:
 * `if (sub_1abd() && (!PED::_A3F3564A5B3646C0(l_8C))) {`
 * if (sub_52e3("RESNA_CELLR", 0)) {
 * `PED::SET_PED_CAN_PLAY_GESTURE_ANIMS(l_8C, 1);`
 * `PED::SET_PED_CAN_PLAY_AMBIENT_ANIMS(l_8C, 1);`
 * `PED::SET_PED_CAN_PLAY_VISEME_ANIMS(l_8C, 1, 0);`
 * l_184 += 1;
 * }
 * }
 * Checks something related to the mobile phone task.
 * IS_*
 * ```
 * Hash: 0xA3F3564A5B3646C0 | ApiSet: undefined
 */
export declare function _0xA3F3564A5B3646C0(ped: number | Ped): boolean;
/**
 * ```
 * REQUEST_*
 * ```
 * Hash: 0x75BA1CB3B7D40CAF | ApiSet: undefined
 */
export declare function _0x75BA1CB3B7D40CAF(ped: number | Ped, p1: boolean): void;
/**
 * Hash: 0x711794453CFD692B | ApiSet: undefined
 */
export declare function _0x711794453CFD692B(p0: any, p1: any): void;
/**
 * ```
 * CLEAR_PED_*
 * ```
 * Hash: 0x80054D7FCC70EEC6 | ApiSet: undefined
 */
export declare function _0x80054D7FCC70EEC6(ped: number | Ped): void;
/**
 * ```
 * SET_A*
 * ```
 * Hash: 0x87DDEB611B329A9C | ApiSet: undefined
 */
export declare function _0x87DDEB611B329A9C(multiplier: number): void;
/**
 * Hash: 0x820E9892A77E97CD | ApiSet: undefined
 */
export declare function _0x820E9892A77E97CD(p0: any, p1: any): void;
/**
 * Hash: 0xAAA6A3698A69E048 | ApiSet: undefined
 */
export declare function _0xAAA6A3698A69E048(p0: any): any;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0xB282749D5E028163 | ApiSet: undefined
 */
export declare function _0xB282749D5E028163(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xAD27D957598E49E9 | ApiSet: undefined
 */
export declare function _0xAD27D957598E49E9(ped: number | Ped, p1: any, p2: number, hash: number | string, p4: any, p5: any): void;
/**
 * Hash: 0xA52D5247A4227E14 | ApiSet: undefined
 */
export declare function _0xA52D5247A4227E14(p0: any): void;
/**
 * ```
 * _SET_PED_HEAD_* - _SET_PED_HEARING_*
 * _SET_PED_HEALTH_...
 * ```
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0xB3352E018D6F89DF | ApiSet: undefined
 */
export declare function _0xB3352E018D6F89DF(toggle: boolean): void;
/**
 * Hash: 0xB8B52E498014F5B0 | ApiSet: undefined
 */
export declare function _0xB8B52E498014F5B0(ped: number | Ped): boolean;
/**
 * Hash: 0xA660FAF550EB37E5 | ApiSet: undefined
 */
export declare function _0xA660FAF550EB37E5(p0: any, p1: boolean): void;
/**
 * Hash: 0xA9B61A329BFDCBEA | ApiSet: undefined
 */
export declare function _0xA9B61A329BFDCBEA(p0: any, p1: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0xC30BDAEE47256C13 | ApiSet: undefined
 */
export declare function _0xC30BDAEE47256C13(p0: any): any;
/**
 * Hash: 0xD33DAA36272177C4 | ApiSet: undefined
 */
export declare function _0xD33DAA36272177C4(ped: number | Ped): void;
/**
 * ```
 * SET_PED_*
 * ```
 * Hash: 0xAFC976FD0580C7B3 | ApiSet: undefined
 */
export declare function _0xAFC976FD0580C7B3(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0xE906EC930F5FE7C8 | ApiSet: undefined
 */
export declare function _0xE906EC930F5FE7C8(p0: any, p1: any): void;
/**
 * Hash: 0xC2EE020F5FB4DB53 | ApiSet: undefined
 */
export declare function _0xC2EE020F5FB4DB53(ped: number | Ped): void;
/**
 * Hash: 0xEA9960D07DADCF10 | ApiSet: undefined
 */
export declare function _0xEA9960D07DADCF10(p0: any): number;
/**
 * ```
 * SET_PED_*
 * Has most likely to do with some shooting attributes as it sets the float which is in the same range as shootRate.
 * ```
 * Hash: 0xEC4B4B3B9908052A | ApiSet: undefined
 */
export declare function _0xEC4B4B3B9908052A(ped: number | Ped, unk: number): void;
/**
 * Hash: 0xC56FBF2F228E1DAC | ApiSet: undefined
 */
export declare function _0xC56FBF2F228E1DAC(modelHash: number | string, p1: any, p2: any): any;
/**
 * ```
 * REQUEST_*
 * ```
 * Hash: 0xCD018C591F94CB43 | ApiSet: undefined
 */
export declare function _0xCD018C591F94CB43(ped: number | Ped, p1: boolean): void;
/**
 * Initial guess of native: `_IS_PED_WEARING_MOTORCYCLE_HELMET`.
 * Hash: 0xF2385935BFFD4D92 | ApiSet: undefined
 */
export declare function _0xF2385935BFFD4D92(ped: number | Ped): boolean;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0xDFE68C4B787E1BFB | ApiSet: undefined
 */
export declare function _0xDFE68C4B787E1BFB(ped: number | Ped): void;
/**
 * Hash: 0xCEDA60A74219D064 | ApiSet: undefined
 */
export declare function _0xCEDA60A74219D064(p0: any, p1: boolean): void;
/**
 * ```
 * SET_PED_ALLOW*
 * toggle was always false except in one instance (b678).
 * The one time this is set to true seems to do with when you fail the mission.
 * ```
 * Hash: 0xF2BEBCDFAFDAA19E | ApiSet: undefined
 */
export declare function _0xF2BEBCDFAFDAA19E(toggle: boolean): void;
/**
 * Native to check whether [`_SET_PED_SCUBA_GEAR_VARIATION`](#\_0x36C6984C3ED0C911) is enabled/actived.
 * Hash: 0xFEC9A3B1820F3331 | ApiSet: undefined
 */
export declare function _0xFEC9A3B1820F3331(ped: number | Ped): boolean;
/**
 * ```
 * Related to Peds dropping pickup_health_snack; p0 is a value between [0.0, 1.0] that corresponds to drop rate
 * ```
 * Hash: 0xFF4803BC019852D9 | ApiSet: undefined
 */
export declare function _0xFF4803BC019852D9(p0: number, p1: any): void;
/**
 * ```
 * GET_*
 * ```
 * Hash: 0xF033419D1B81FAE8 | ApiSet: undefined
 */
export declare function _0xF033419D1B81FAE8(p0: any): any;
/**
 * ```
 * FORCE_*
 * ```
 * Hash: 0xED3C76ADFA6D07C4 | ApiSet: undefined
 */
export declare function _0xED3C76ADFA6D07C4(ped: number | Ped): void;
/**
 * Hash: 0xE1E65CA8AC9C00ED | ApiSet: undefined
 */
export declare function playFacialAnim(ped: number | Ped, animName: string, animDict: string): void;
/**
 * Hash: 0xFD325494792302D7 | ApiSet: undefined
 */
export declare function _0xFD325494792302D7(ped: number | Ped, toggle: boolean): void;
/**
 * SET_A\*
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xFAB944D4D481ACCB | ApiSet: undefined
 */
export declare function _0xFAB944D4D481ACCB(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x5D517B27CF6ECD04 | ApiSet: undefined
 */
export declare function releasePedheadshotImgUpload(id: number): void;
/**
 * ```
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
 * ```
 * Hash: 0x4462658788425076 | ApiSet: undefined
 */
export declare function registerPedheadshot(ped: number | Ped): number;
/**
 * Hash: 0xF79F9DEF0AADE61A | ApiSet: undefined
 */
export declare function releasePedPreloadPropData(ped: number | Ped): void;
/**
 * Hash: 0xBA8805A1108A2515 | ApiSet: undefined
 */
export declare function registerPedheadshot3(ped: number | Ped): number;
/**
 * Hash: 0x8EB2F69076AF7053 | ApiSet: undefined
 */
export declare function removeGroup(groupId: number): void;
/**
 * ```
 * Based on TASK_COMBAT_HATED_TARGETS_AROUND_PED, the parameters are likely similar (PedHandle, and area to attack in).
 * ```
 * Hash: 0x9222F300BF8354FE | ApiSet: undefined
 */
export declare function registerHatedTargetsAroundPed(ped: number | Ped, radius: number): void;
/**
 * Hash: 0x13E940F88470FA51 | ApiSet: undefined
 */
export declare function removeActionModeAsset(asset: string): void;
/**
 * Hash: 0x5AAB586FFEC0FD96 | ApiSet: undefined
 */
export declare function releasePedPreloadVariationData(ped: number | Ped): void;
/**
 * ```
 * Ped will no longer get angry when you stay near him.
 * ```
 * Hash: 0x74D4E028107450A9 | ApiSet: undefined
 */
export declare function removePedDefensiveArea(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * Judging purely from a quick disassembly, if the ped is in a vehicle, the ped will be deleted immediately. If not, it'll be marked as no longer needed.
 * ```
 * Hash: 0xAC6D445B994DF95E | ApiSet: undefined
 */
export declare function removePedElegantly(): number;
/**
 * Similar to REGISTER_PEDHEADSHOT but creates a transparent background instead of black.
 * <strong>Result of the example code:</strong>
 * <https://i.imgur.com/iHz8ztn.png>
 * Hash: 0x953563CE563143AF | ApiSet: undefined
 */
export declare function registerPedheadshotTransparent(ped: number | Ped): number;
/**
 * Hash: 0xED74007FFB146BC2 | ApiSet: undefined
 */
export declare function removePedFromGroup(ped: number | Ped): void;
/**
 * ```
 * `PED::REGISTER_TARGET(l_216, PLAYER::PLAYER_PED_ID()); from re_prisonbreak.txt.`
 * l_216 = RECSBRobber1
 * ```
 * Hash: 0x2F25D9AEFA34FBA2 | ApiSet: undefined
 */
export declare function registerTarget(ped: number | Ped, target: number | Ped): void;
/**
 * Remove a helmet from a ped
 * Hash: 0xA7B2458D0AD6DED8 | ApiSet: undefined
 */
export declare function removePedHelmet(ped: number | Ped, instantly: boolean): void;
/**
 * Hash: 0x2BC338A7B21F4608 | ApiSet: undefined
 */
export declare function requestPedVehicleVisibilityTracking(ped: number | Ped, p1: boolean): void;
/**
 * Hash: 0xB6BA2444AB393DA2 | ApiSet: undefined
 */
export declare function removeRelationshipGroup(groupHash: number | string): void;
/**
 * Hash: 0xFDDB234CF74073D9 | ApiSet: undefined
 */
export declare function removePedPreferredCoverSet(ped: number | Ped): void;
/**
 * Hash: 0x31D16B74C6E29D66 | ApiSet: undefined
 */
export declare function removeScenarioBlockingArea(scenarioBlockingIndex: number, bNetwork: boolean): void;
/**
 * Hash: 0x9219857D21F0E842 | ApiSet: undefined
 */
export declare function removeStealthModeAsset(asset: string): void;
/**
 * Hash: 0x2A0A62FCDEE16D4F | ApiSet: undefined
 */
export declare function requestStealthModeAsset(asset: string): void;
/**
 * Hash: 0x290E2780BB7AA598 | ApiSet: undefined
 */
export declare function requestActionModeAsset(asset: string): void;
/**
 * Hash: 0xD37401D78A929A49 | ApiSet: undefined
 */
export declare function removeScenarioBlockingAreas(): void;
/**
 * Hash: 0xF0DAEF2F545BEE25 | ApiSet: undefined
 */
export declare function requestPedheadshotImgUpload(id: number): boolean;
/**
 * Hash: 0x63DAB4CCB3273205 | ApiSet: undefined
 */
export declare function resetGroupFormationDefaultSpacing(groupHandle: number): void;
/**
 * Hash: 0x46E56A7CD1D63C3F | ApiSet: undefined
 */
export declare function resetAiMeleeWeaponDamageModifier(): void;
/**
 * Hash: 0x7D7A2E43E74E2EB8 | ApiSet: undefined
 */
export declare function requestPedVisibilityTracking(ped: number | Ped): void;
/**
 * Hash: 0x22EF8FF8778030EB | ApiSet: undefined
 */
export declare function resetPedInVehicleContext(ped: number | Ped): void;
/**
 * Hash: 0xEA16670E7BA4743C | ApiSet: undefined
 */
export declare function resetAiWeaponDamageModifier(): void;
/**
 * Hash: 0x3AC1F7B898F30C05 | ApiSet: undefined
 */
export declare function resetPedVisibleDamage(ped: number | Ped): void;
/**
 * Hash: 0xAA74EC0CB0AAEA2C | ApiSet: undefined
 */
export declare function resetPedMovementClipset(ped: number | Ped, transitionSpeed: number): void;
/**
 * Hash: 0x20510814175EA477 | ApiSet: undefined
 */
export declare function resetPedStrafeClipset(ped: number | Ped): void;
/**
 * ```
 * Resets the value for the last vehicle driven by the Ped.
 * ```
 * Hash: 0xBB8DE8CF6A8DD8BB | ApiSet: undefined
 */
export declare function resetPedLastVehicle(ped: number | Ped): void;
/**
 * Hash: 0x97B0DB5B4AA74E77 | ApiSet: undefined
 */
export declare function resetPedWeaponMovementClipset(ped: number | Ped): void;
/**
 * Hash: 0x9FA4664CF62E47E8 | ApiSet: undefined
 */
export declare function resetPedRagdollTimer(ped: number | Ped): void;
/**
 * Hash: 0x66460DEDDD417254 | ApiSet: undefined
 */
export declare function setAiMeleeWeaponDamageModifier(modifier: number): void;
/**
 * ```
 * This function will simply bring the dead person back to life.
 * Try not to use it alone, since using this function alone, will make peds fall through ground in hell(well for the most of the times).
 * Instead, before calling this function, you may want to declare the position, where your Resurrected ped to be spawn at.(For instance, Around 2 floats of Player's current position.)
 * Also, disabling any assigned task immediately helped in the number of scenarios, where If you want peds to perform certain decided tasks.
 * ```
 * Hash: 0x71BC8E838B9C6035 | ApiSet: undefined
 */
export declare function resurrectPed(ped: number | Ped): void;
/**
 * ```
 * It will revive/cure the injured ped. The condition is ped must not be dead.
 * Upon setting and converting the health int, found, if health falls below 5, the ped will lay on the ground in pain(Maximum default health is 100).
 * This function is well suited there.
 * ```
 * Hash: 0x8D8ACD8388CD99CE | ApiSet: undefined
 */
export declare function reviveInjuredPed(ped: number | Ped): void;
/**
 * Prevents ambient peds from dropping their weapons for the current frame.
 * ```
 * NativeDB Introduced: v3258
 * ```
 * Hash: 0xC73EFFC5E043A8BA | ApiSet: undefined
 */
export declare function setBlockAmbientPedsFromDroppingWeaponsThisFrame(): void;
/**
 * Hash: 0x1B1E2A40A65B8521 | ApiSet: undefined
 */
export declare function setAiWeaponDamageModifier(value: number): void;
/**
 * Hash: 0x6B0E6172C9A4D902 | ApiSet: undefined
 */
export declare function setAmbientPedsDropMoney(p0: boolean): void;
/**
 * Hash: 0xFF41B4B141ED981C | ApiSet: undefined
 */
export declare function setCombatFloat(ped: number | Ped, combatType: number, p2: number): void;
/**
 * Hash: 0x102E68B2024D536D | ApiSet: undefined
 */
export declare function setCreateRandomCops(toggle: boolean): void;
/**
 * ```
 * Scripts use 0.2, 0.5 and 1.0. Value must be >= 0.0 && <= 1.0
 * ```
 * Hash: 0xDED5AF5A0EA4B297 | ApiSet: undefined
 */
export declare function setDriverRacingModifier(driver: number | Ped, modifier: number): void;
/**
 * Hash: 0x444CB7D7DBE6973D | ApiSet: undefined
 */
export declare function setCreateRandomCopsOnScenarios(toggle: boolean): void;
/**
 * ```
 * Setting ped to true allows the ped to shoot "friendlies".
 * p2 set to true when toggle is also true seams to make peds permanently unable to aim at, even if you set p2 back to false.
 * p1 = false & p2 = false for unable to aim at.
 * p1 = true & p2 = false for able to aim at.
 * ```
 * Hash: 0xB3B1CB349FF9C75D | ApiSet: undefined
 */
export declare function setCanAttackFriendly(ped: number | Ped, toggle: boolean, p2: boolean): void;
/**
 * Sets the IsHandCuffed (120) config flag on the ped. This blocks the ped from switching weapons (with the exception of switching to `weapon_unarmed`), makes the ped ragdoll on getting punched and forces a different get-up animation after ragdolling. The ped can also not vault over or climb on top of objects.
 * Used in combination with [SET_ENABLE_BOUND_ANKLES](#\_0xC52E0F855C58FC2E) in decompiled scripts.
 * Hash: 0xDF1AF8B5D56542FA | ApiSet: undefined
 */
export declare function setEnableHandcuffs(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * `works with TASK::TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS to make a ped completely oblivious to all events going on around him`
 * ```
 * Hash: 0x9F8AA94D6D97DBF4 | ApiSet: undefined
 */
export declare function setBlockingOfNonTemporaryEvents(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * Enables diving motion when underwater.
 * ```
 * Hash: 0xF99F62004024D506 | ApiSet: undefined
 */
export declare function setEnableScuba(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * The function specifically verifies the value is equal to, or less than 1.0f. If it is greater than 1.0f, the function does nothing at all.
 * ```
 * Hash: 0xB195FFA8042FC5C3 | ApiSet: undefined
 */
export declare function setDriverAbility(driver: number | Ped, ability: number): void;
/**
 * Hash: 0x8A4986851C4EF6E7 | ApiSet: undefined
 */
export declare function setCreateRandomCopsNotOnScenarios(toggle: boolean): void;
/**
 * Hash: 0xD2C5AA0C0E8D0F1E | ApiSet: undefined
 */
export declare function setEnablePedEnveffScale(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * range 0.0f - 1.0f
 * ```
 * Hash: 0xA731F608CA104E3C | ApiSet: undefined
 */
export declare function setDriverAggressiveness(driver: number | Ped, aggressiveness: number): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xEE2476B9EE4A094F | ApiSet: undefined
 */
export declare function setEnableScubaGearLight(ped: number | Ped, toggle: boolean): void;
/**
 * Used with [SET_ENABLE_HANDCUFFS](#\_0xDF1AF8B5D56542FA) in decompiled scripts. From my observations, I have noticed that while being ragdolled you are not able to get up but you can still run. Your legs can also bend.
 * Hash: 0xC52E0F855C58FC2E | ApiSet: undefined
 */
export declare function setEnableBoundAnkles(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0xFFC24B988B938B38 | ApiSet: undefined
 */
export declare function setFacialIdleAnimOverride(ped: number | Ped, animName: string, animDict: string): void;
/**
 * Hash: 0x129466ED55140F8D | ApiSet: undefined
 */
export declare function setForceFootstepUpdate(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0xCB968B53FC7F916D | ApiSet: undefined
 */
export declare function setForceStepType(ped: number | Ped, p1: boolean, type: number, p3: number): void;
/**
 * Clipsets:
 * "facials@gen_female@base"
 * "facials@gen_male@base"
 * "facials@p_m_zero@base"
 * Typically followed with [SET_FACIAL_IDLE_ANIM_OVERRIDE](#\_0xFFC24B988B938B38):
 * "mood_drunk\_1"
 * "mood_stressed\_1"
 * "mood_happy\_1"
 * "mood_talking\_1"
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x5687C7F05B39E401 | ApiSet: undefined
 */
export declare function setFacialClipsetOverride(ped: number | Ped, animDict: string): void;
/**
 * Sets the IK target for a given IK part belonging to the ped.
 * **Please note:** The IK target will only be valid for one update, so it needs to be set for as long as it is needed (to avoid IK targets not being cleared and getting stuck enabled).
 * ```cpp
 * enum eIkPart {
 * IK_PART_INVALID = 0,
 * // head
 * IK_PART_HEAD = 1,
 * // spine
 * IK_PART_SPINE = 2,
 * // Left Arm
 * IK_PART_ARM_LEFT = 3,
 * // Right Arm
 * IK_PART_ARM_RIGHT = 4,
 * // Left Leg
 * IK_PART_LEG_LEFT = 5,
 * // Right Leg
 * IK_PART_LEG_RIGHT = 6
 * };
 * ```
 * ```cpp
 * enum eIkTargetFlags {
 * ITF_DEFAULT = 0,
 * // arm target relative to the handbone
 * ITF_ARM_TARGET_WRT_HANDBON = 1,
 * // arm target relative to the pointhelper
 * ITF_ARM_TARGET_WRT_POINTHELPER = 2,
 * // arm target relative to the ikhelper
 * ITF_ARM_TARGET_WRT_IKHELPE = 4,
 * // use animation tags directly
 * ITF_IK_TAG_MODE_NORMAL = 8,
 * // use animation tags in ALLOW mode
 * ITF_IK_TAG_MODE_ALLOW = 16,
 * // use animation tags in BLOCK mode
 * ITF_IK_TAG_MODE_BLOCK = 32,
 * // solve for orientation in addition to position
 * ITF_ARM_USE_ORIENTATION = 64
 * };
 * ```
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xC32779C16FCEECD9 | ApiSet: undefined
 */
export declare function setIkTarget(ped: number | Ped, ikIndex: number, entityLookAt: number | Entity, boneLookAt: number, offsetX: number, offsetY: number, offsetZ: number, ikTargetFlags: number, blendInDuration: number, blendOutDuration: number): void;
/**
 * ```
 * 0: Freedom to move
 * 1: Circle Around Leader
 * 2: Alternative Circle Around Leader
 * 3: Line, with Leader at center
 * 4: Arrow Formation
 * 5: "V" Formation
 * 6: Line Follow Formation
 * 7: Single Formation
 * 8: Pairwise
 * ```
 * Hash: 0xCE2F5FC3AF7E8C1E | ApiSet: undefined
 */
export declare function setGroupFormation(groupId: number, formationType: number): void;
/**
 * ```
 * Sets the range at which members will automatically leave the group.
 * ```
 * Hash: 0x4102C7858CFEE4E4 | ApiSet: undefined
 */
export declare function setGroupSeparationRange(groupHandle: number, separationRange: number): void;
/**
 * Hash: 0x1D9D45004C28C916 | ApiSet: undefined
 */
export declare function setGroupFormationSpacing(groupId: number, p1: number, p2: number, p3: number): void;
/**
 * ```
 * name: "MP_FEMALE_ACTION" found multiple times in the b617d scripts.
 * ```
 * Hash: 0x781DE8FA214E87D2 | ApiSet: undefined
 */
export declare function setMovementModeOverride(ped: number | Ped, name: string): void;
/**
 * ```
 * accuracy = 0-100, 100 being perfectly accurate
 * ```
 * Hash: 0x7AEFB85C1D49DEB6 | ApiSet: undefined
 */
export declare function setPedAccuracy(ped: number | Ped, accuracy: number): void;
/**
 * ```
 * value ranges from 0 to 3.
 * ```
 * Hash: 0xDBA71115ED9941A6 | ApiSet: undefined
 */
export declare function setPedAlertness(ped: number | Ped, value: number): void;
/**
 * Preview: https://gfycat.com/MaleRareAmazonparrot
 * Hash: 0xCC9682B8951C5229 | ApiSet: undefined
 */
export declare function setHeadBlendPaletteColor(ped: number | Ped, r: number, g: number, b: number, id: number): void;
/**
 * ```
 * stance:
 * 0 = idle
 * 1 = walk
 * 2 = running
 * p5 = usually set to true
 * ```
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0x90A43CC281FFAB46 | ApiSet: undefined
 */
export declare function setPedAlternateMovementAnim(ped: number | Ped, stance: number, animDictionary: string, animationName: string, p4: number, p5: boolean): void;
/**
 * Hash: 0xDA1F1B7BE1A8766F | ApiSet: undefined
 */
export declare function setPedAllowedToDuck(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x3C028C636A414ED9 | ApiSet: undefined
 */
export declare function setPedAllowVehiclesOverride(ped: number | Ped, toggle: boolean): void;
/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0x6C60394CB4F75E9A | ApiSet: undefined
 */
export declare function setPedAlternateWalkAnim(ped: number | Ped, animDict: string, animName: string, p3: number, p4: boolean): void;
/**
 * ```
 * Sets the armor of the specified ped.
 * ped: The Ped to set the armor of.
 * amount: A value between 0 and 100 indicating the value to set the Ped's armor to.
 * ```
 * Hash: 0xCEA04D83135264CC | ApiSet: undefined
 */
export declare function setPedArmour(ped: number | Ped, amount: number): void;
/**
 * ```
 * Enable/disable ped shadow (ambient occlusion). https://gfycat.com/thankfulesteemedgecko
 * ```
 * Hash: 0x2B5AA717A181FB4C | ApiSet: undefined
 */
export declare function setPedAoBlobRendering(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * Turns the desired ped into a cop. If you use this on the player ped, you will become almost invisible to cops dispatched for you. You will also report your own crimes, get a generic cop voice, get a cop-vision-cone on the radar, and you will be unable to shoot at other cops. SWAT and Army will still shoot at you. Toggling ped as "false" has no effect; you must change p0's ped model to disable the effect.
 * ```
 * Hash: 0xBB03C38DD3FB7FFD | ApiSet: undefined
 */
export declare function setPedAsCop(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0xC7F76DF27A5045A1 | ApiSet: undefined
 */
export declare function setPedAngledDefensiveArea(ped: number | Ped, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: boolean, p9: boolean): void;
/**
 * Hash: 0x9F3480FE65DB31B5 | ApiSet: undefined
 */
export declare function setPedAsGroupMember(ped: number | Ped, groupId: number): void;
/**
 * Hash: 0x2A7819605465FBCE | ApiSet: undefined
 */
export declare function setPedAsGroupLeader(ped: number | Ped, groupId: number): void;
/**
 * Hash: 0x02A0C9720B854BFA | ApiSet: undefined
 */
export declare function setPedAsEnemy(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x4F5F651ACCC9C4CF | ApiSet: undefined
 */
export declare function setPedBoundsOrientation(ped: number | Ped, p1: number, p2: number, p3: number, p4: number, p5: number): void;
/**
 * Hash: 0x576594E8D64375E2 | ApiSet: undefined
 */
export declare function setPedBlocksPathingWhenDead(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x6C3B4D6D13B4C841 | ApiSet: undefined
 */
export declare function setPedCanArmIk(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x137BBD05230DB22D | ApiSet: undefined
 */
export declare function setPedBlendFromParents(ped: number | Ped, father: number | Ped, mother: number | Ped, fathersSide: number, mothersSide: number): void;
/**
 * Hash: 0xC1670E958EEE24E5 | ApiSet: undefined
 */
export declare function setPedCanBeDraggedOut(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x638C03B0F9878F57 | ApiSet: undefined
 */
export declare function setPedCanBeTargetedWhenInjured(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * state: https://alloc8or.re/gta5/doc/enums/eKnockOffVehicle.txt
 * ```
 * Hash: 0x7A6535691B477C48 | ApiSet: undefined
 */
export declare function setPedCanBeKnockedOffVehicle(ped: number | Ped, state: number): void;
/**
 * Hash: 0x63F58F7C80513AAD | ApiSet: undefined
 */
export declare function setPedCanBeTargetted(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0xBF1CA77833E58F2C | ApiSet: undefined
 */
export declare function setPedCanBeTargettedByTeam(ped: number | Ped, team: number, toggle: boolean): void;
/**
 * Hash: 0x6B7A646C242A7059 | ApiSet: undefined
 */
export declare function setPedCanEvasiveDive(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * It simply makes the said ped to cower behind cover object(wall, desk, car)
 * Peds flee attributes must be set to not to flee, first. Else, most of the peds, will just flee from gunshot sounds or any other panic situations.
 * ```
 * Hash: 0xCB7553CDCEF4A735 | ApiSet: undefined
 */
export declare function setPedCanCowerInCover(ped: number | Ped, toggle: boolean): void;
/**
 * It makes the ped lose (or not lose) their props (like glasses or helmets/hat) when someone punches or pushes the ped.
 * This is probably what's being used in GTA:O to keep players from knocking other player's hats/glasses off when in combat.
 * Hash: 0xE861D0B05C7662B8 | ApiSet: undefined
 */
export declare function setPedCanLosePropsOnDamage(ped: number | Ped, loseProps: boolean, p2: number): void;
/**
 * Hash: 0xC7EF1BA83230BA07 | ApiSet: undefined
 */
export declare function setPedCanBeShotInVehicle(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0xC11C18092C5530DC | ApiSet: undefined
 */
export declare function setPedCanHeadIk(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x73518ECE2485412B | ApiSet: undefined
 */
export declare function setPedCanLegIk(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x4328652AE5769C71 | ApiSet: undefined
 */
export declare function setPedCanBeTargetedWithoutLos(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x33A60D8BDD6E508C | ApiSet: undefined
 */
export declare function setPedCanPlayInjuredAnims(ped: number | Ped, p1: boolean): void;
/**
 * Hash: 0xDF993EE5E90ABA25 | ApiSet: undefined
 */
export declare function setPedCanRagdollFromPlayerImpact(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x66B57B72E0836A76 | ApiSet: undefined
 */
export declare function setPedCanBeTargettedByPlayer(ped: number | Ped, player: number | string | Player, toggle: boolean): void;
/**
 * Hash: 0xED7F7EFE9FABF340 | ApiSet: undefined
 */
export declare function setPedCanSwitchWeapon(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x0EB0585D15254740 | ApiSet: undefined
 */
export declare function setPedCanPlayAmbientBaseAnims(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x6373D1349925A70E | ApiSet: undefined
 */
export declare function setPedCanPlayAmbientAnims(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0xF5846EDB26A98A24 | ApiSet: undefined
 */
export declare function setPedCanTorsoReactIk(ped: number | Ped, p1: boolean): void;
/**
 * Hash: 0xBAF20C5432058024 | ApiSet: undefined
 */
export declare function setPedCanPlayGestureAnims(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0xB128377056A54E2A | ApiSet: undefined
 */
export declare function setPedCanRagdoll(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0xC514825C507E3736 | ApiSet: undefined
 */
export declare function setPedCanPeekInCover(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x78C4E9961DB3EB5B | ApiSet: undefined
 */
export declare function setPedClothPackageIndex(ped: number | Ped, p1: number): void;
/**
 * ```
 * p2 usually 0
 * ```
 * Hash: 0xF833DDBA3B104D43 | ApiSet: undefined
 */
export declare function setPedCanPlayVisemeAnims(ped: number | Ped, toggle: boolean, p2: boolean): void;
/**
 * Hash: 0xF2B7106D37947CE0 | ApiSet: undefined
 */
export declare function setPedCanTorsoIk(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x1CCE141467FF42A2 | ApiSet: undefined
 */
export declare function setPedCanSmashGlass(ped: number | Ped, p1: boolean, p2: boolean): void;
/**
 * ```
 * Overrides the ped's collision capsule radius for the current tick.
 * Must be called every tick to be effective.
 * Setting this to 0.001 will allow warping through some objects.
 * ```
 * Hash: 0x364DF566EC833DE2 | ApiSet: undefined
 */
export declare function setPedCapsule(ped: number | Ped, value: number): void;
/**
 * ```
 * This only will teleport the ped to the group leader if the group leader teleports (sets coords).
 * Only works in singleplayer
 * ```
 * Hash: 0x2E2F4240B3F24647 | ApiSet: undefined
 */
export declare function setPedCanTeleportToGroupLeader(pedHandle: number | Ped, groupHandle: number, toggle: boolean): void;
/**
 * Hash: 0xEC4686EC06434678 | ApiSet: undefined
 */
export declare function setPedCanUseAutoConversationLookat(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x6647C5F6F5792496 | ApiSet: undefined
 */
export declare function setPedCanTorsoVehicleIk(ped: number | Ped, p1: boolean): void;
/**
 * Hash: 0x82A3D6D9CC2CB8E3 | ApiSet: undefined
 */
export declare function setPedClothProne(p0: any, p1: any): void;
/**
 * ```
 * Found in the b617d scripts:
 * `PED::_9DBA107B4937F809(v_7, "trevor_heist_cover_2h");`
 * SET_PED_MO*
 * ```
 * Hash: 0x9DBA107B4937F809 | ApiSet: undefined
 */
export declare function setPedCoverClipsetOverride(ped: number | Ped, p1: string): void;
/**
 * These combat attributes seem to be the same as the BehaviourFlags from combatbehaviour.meta.
 * So far, these are the equivalents found:
 * ```cpp
 * enum eCombatAttribute
 * {
 * CA_INVALID = -1,
 * // AI will only use cover if this is set
 * CA_USE_COVER = 0,
 * // AI will only use vehicles if this is set
 * CA_USE_VEHICLE = 1,
 * // AI will only driveby from a vehicle if this is set
 * CA_DO_DRIVEBYS = 2,
 * // Will be forced to stay in a ny vehicel if this isn't set
 * CA_LEAVE_VEHICLES = 3,
 * // This ped can make decisions on whether to strafe or not based on distance to destination, recent bullet events, etc.
 * CA_CAN_USE_DYNAMIC_STRAFE_DECISIONS	= 4,
 * // Ped will always fight upon getting threat response task
 * CA_ALWAYS_FIGHT = 5,
 * // If in combat and in a vehicle, the ped will flee rather than attacking
 * CA_FLEE_WHILST_IN_VEHICLE = 6,
 * // If in combat and chasing in a vehicle, the ped will keep a distance behind rather than ramming
 * CA_JUST_FOLLOW_VEHICLE = 7,
 * // Deprecated
 * CA_PLAY_REACTION_ANIMS = 8,
 * // Peds will scan for and react to dead peds found
 * CA_WILL_SCAN_FOR_DEAD_PEDS = 9,
 * // Deprecated
 * CA_IS_A_GUARD = 10,
 * // The ped will seek cover only
 * CA_JUST_SEEK_COVER = 11,
 * // Ped will only blind fire when in cover
 * CA_BLIND_FIRE_IN_COVER = 12,
 * // Ped may advance
 * CA_AGGRESSIVE = 13,
 * // Ped can investigate events such as distant gunfire, footsteps, explosions etc
 * CA_CAN_INVESTIGATE = 14,
 * // Ped can use a radio to call for backup (happens after a reaction)
 * CA_CAN_USE_RADIO = 15,
 * // Deprecated
 * CA_CAN_CAPTURE_ENEMY_PEDS = 16,
 * // Ped will always flee upon getting threat response task
 * CA_ALWAYS_FLEE = 17,
 * // Ped can do unarmed taunts in vehicle
 * CA_CAN_TAUNT_IN_VEHICLE = 20,
 * // Ped will be able to chase their targets if both are on foot and the target is running away
 * CA_CAN_CHASE_TARGET_ON_FOOT = 21,
 * // Ped can drag injured peds to safety
 * CA_WILL_DRAG_INJURED_PEDS_TO_SAFETY = 22,
 * // Ped will require LOS to the target it is aiming at before shooting
 * CA_REQUIRES_LOS_TO_SHOOT = 23,
 * // Ped is allowed to use proximity based fire rate (increasing fire rate at closer distances)
 * CA_USE_PROXIMITY_FIRING_RATE = 24,
 * // Normally peds can switch briefly to a secondary target in combat, setting this will prevent that
 * CA_DISABLE_SECONDARY_TARGET = 25,
 * // This will disable the flinching combat entry reactions for peds, instead only playing the turn and aim anims
 * CA_DISABLE_ENTRY_REACTIONS = 26,
 * // Force ped to be 100% accurate in all situations (added by Jay Reinebold)
 * CA_PERFECT_ACCURACY = 27,
 * // If we don't have cover and can't see our target it's possible we will advance, even if the target is in cover
 * CA_CAN_USE_FRUSTRATED_ADVANCE	= 28,
 * // This will have the ped move to defensive areas and within attack windows before performing the cover search
 * CA_MOVE_TO_LOCATION_BEFORE_COVER_SEARCH = 29,
 * // Allow shooting of our weapon even if we don't have LOS (this isn't X-ray vision as it only affects weapon firing)
 * CA_CAN_SHOOT_WITHOUT_LOS = 30,
 * // Ped will try to maintain a min distance to the target, even if using defensive areas (currently only for cover finding + usage)
 * CA_MAINTAIN_MIN_DISTANCE_TO_TARGET = 31,
 * // Allows ped to use steamed variations of peeking anims
 * CA_CAN_USE_PEEKING_VARIATIONS	= 34,
 * // Disables pinned down behaviors
 * CA_DISABLE_PINNED_DOWN = 35,
 * // Disables pinning down others
 * CA_DISABLE_PIN_DOWN_OTHERS = 36,
 * // When defensive area is reached the area is cleared and the ped is set to use defensive combat movement
 * CA_OPEN_COMBAT_WHEN_DEFENSIVE_AREA_IS_REACHED = 37,
 * // Disables bullet reactions
 * CA_DISABLE_BULLET_REACTIONS = 38,
 * // Allows ped to bust the player
 * CA_CAN_BUST = 39,
 * // This ped is ignored by other peds when wanted
 * CA_IGNORED_BY_OTHER_PEDS_WHEN_WANTED = 40,
 * // Ped is allowed to "jack" vehicles when needing to chase a target in combat
 * CA_CAN_COMMANDEER_VEHICLES = 41,
 * // Ped is allowed to flank
 * CA_CAN_FLANK = 42,
 * // Ped will switch to advance if they can't find cover
 * CA_SWITCH_TO_ADVANCE_IF_CANT_FIND_COVER = 43,
 * // Ped will switch to defensive if they are in cover
 * CA_SWITCH_TO_DEFENSIVE_IF_IN_COVER = 44,
 * // Ped will clear their primary defensive area when it is reached
 * CA_CLEAR_PRIMARY_DEFENSIVE_AREA_WHEN_REACHED = 45,
 * // Ped is allowed to fight armed peds when not armed
 * CA_CAN_FIGHT_ARMED_PEDS_WHEN_NOT_ARMED = 46,
 * // Ped is not allowed to use tactical points if set to use defensive movement (will only use cover)
 * CA_ENABLE_TACTICAL_POINTS_WHEN_DEFENSIVE = 47,
 * // Ped cannot adjust cover arcs when testing cover safety (atm done on corner cover points when  ped usingdefensive area + no LOS)
 * CA_DISABLE_COVER_ARC_ADJUSTMENTS = 48,
 * // Ped may use reduced accuracy with large number of enemies attacking the same local player target
 * CA_USE_ENEMY_ACCURACY_SCALING	= 49,
 * // Ped is allowed to charge the enemy position
 * CA_CAN_CHARGE = 50,
 * // When defensive area is reached the area is cleared and the ped is set to use will advance movement
 * CA_REMOVE_AREA_SET_WILL_ADVANCE_WHEN_DEFENSIVE_AREA_REACHED = 51,
 * // Use the vehicle attack mission during combat (only works on driver)
 * CA_USE_VEHICLE_ATTACK = 52,
 * // Use the vehicle attack mission during combat if the vehicle has mounted guns (only works on driver)
 * CA_USE_VEHICLE_ATTACK_IF_VEHICLE_HAS_MOUNTED_GUNS = 53,
 * // Always equip best weapon in combat
 * CA_ALWAYS_EQUIP_BEST_WEAPON = 54,
 * // Ignores in water at depth visibility check
 * CA_CAN_SEE_UNDERWATER_PEDS = 55,
 * // Will prevent this ped from aiming at any AI targets that are in helicopters
 * CA_DISABLE_AIM_AT_AI_TARGETS_IN_HELIS = 56,
 * // Disables peds seeking due to no clear line of sight
 * CA_DISABLE_SEEK_DUE_TO_LINE_OF_SIGHT = 57,
 * // To be used when releasing missions peds if we don't want them fleeing from combat (mission peds already prevent flee)
 * CA_DISABLE_FLEE_FROM_COMBAT = 58,
 * // Disables target changes during vehicle pursuit
 * CA_DISABLE_TARGET_CHANGES_DURING_VEHICLE_PURSUIT = 59,
 * // Ped may throw a smoke grenade at player loitering in combat
 * CA_CAN_THROW_SMOKE_GRENADE = 60,
 * // Will clear a set defensive area if that area cannot be reached
 * CA_CLEAR_AREA_SET_DEFENSIVE_IF_DEFENSIVE_CANNOT_BE_REACHED = 62,
 * // Disable block from pursue during vehicle chases
 * CA_DISABLE_BLOCK_FROM_PURSUE_DURING_VEHICLE_CHASE = 64,
 * // Disable spin out during vehicle chases
 * CA_DISABLE_SPIN_OUT_DURING_VEHICLE_CHASE = 65,
 * // Disable cruise in front during block during vehicle chases
 * CA_DISABLE_CRUISE_IN_FRONT_DURING_BLOCK_DURING_VEHICLE_CHASE = 66,
 * // Makes it more likely that the ped will continue targeting a target with blocked los for a few seconds
 * CA_CAN_IGNORE_BLOCKED_LOS_WEIGHTING = 67,
 * // Disables the react to buddy shot behaviour.
 * CA_DISABLE_REACT_TO_BUDDY_SHOT = 68,
 * // Prefer pathing using navmesh over road nodes
 * CA_PREFER_NAVMESH_DURING_VEHICLE_CHASE = 69,
 * // Ignore road edges when avoiding
 * CA_ALLOWED_TO_AVOID_OFFROAD_DURING_VEHICLE_CHASE = 70,
 * // Permits ped to charge a target outside the assigned defensive area.
 * CA_PERMIT_CHARGE_BEYOND_DEFENSIVE_AREA = 71,
 * // This ped will switch to an RPG if target is in a vehicle, otherwise will use alternate weapon.
 * CA_USE_ROCKETS_AGAINST_VEHICLES_ONLY = 72,
 * // Disables peds moving to a tactical point without clear los
 * CA_DISABLE_TACTICAL_POINTS_WITHOUT_CLEAR_LOS = 73,
 * // Disables pull alongside during vehicle chase
 * CA_DISABLE_PULL_ALONGSIDE_DURING_VEHICLE_CHASE = 74,
 * // If set on a ped, they will not flee when all random peds flee is set to TRUE (they are still able to flee due to other reasons)
 * CA_DISABLE_ALL_RANDOMS_FLEE = 78,
 * // This ped will send out a script DeadPedSeenEvent when they see a dead ped
 * CA_WILL_GENERATE_DEAD_PED_SEEN_SCRIPT_EVENTS = 79,
 * // This will use the receiving peds sense range rather than the range supplied to the communicate event
 * CA_USE_MAX_SENSE_RANGE_WHEN_RECEIVING_EVENTS = 80,
 * // When aiming from a vehicle the ped will only aim at targets on his side of the vehicle
 * CA_RESTRICT_IN_VEHICLE_AIMING_TO_CURRENT_SIDE = 81,
 * // LOS to the target is blocked we return to our default position and direction until we have LOS (no aiming)
 * CA_USE_DEFAULT_BLOCKED_LOS_POSITION_AND_DIRECTION = 82,
 * // LOS to the target is blocked we return to our default position and direction until we have LOS (no aiming)
 * CA_REQUIRES_LOS_TO_AIM = 83,
 * // Allow vehicles spawned infront of target facing away to enter cruise and wait to block approaching target
 * CA_CAN_CRUISE_AND_BLOCK_IN_VEHICLE = 84,
 * // Peds flying aircraft will prefer to target other aircraft over entities on the ground
 * CA_PREFER_AIR_COMBAT_WHEN_IN_AIRCRAFT = 85,
 * //Allow peds flying aircraft to use dog fighting behaviours
 * CA_ALLOW_DOG_FIGHTING = 86,
 * // This will make the weight of targets who aircraft vehicles be reduced greatly compared to targets on foot or in ground based vehicles
 * CA_PREFER_NON_AIRCRAFT_TARGETS = 87,
 * //When peds are tasked to go to combat, they keep searching for a known target for a while before forcing an unknown one
 * CA_PREFER_KNOWN_TARGETS_WHEN_COMBAT_CLOSEST_TARGET = 88,
 * // Only allow mounted weapons to fire if within the correct attack angle (default 25-degree cone). On a flag in order to keep exiting behaviour and only fix in specific cases.
 * CA_FORCE_CHECK_ATTACK_ANGLE_FOR_MOUNTED_GUNS = 89,
 * // Blocks the firing state for passenger-controlled mounted weapons. Existing flags CA_USE_VEHICLE_ATTACK and CA_USE_VEHICLE_ATTACK_IF_VEHICLE_HAS_MOUNTED_GUNS only work for drivers.
 * CA_BLOCK_FIRE_FOR_VEHICLE_PASSENGER_MOUNTED_GUNS = 90
 * };
 * ```
 * Hash: 0x9F7794730795E019 | ApiSet: undefined
 */
export declare function setPedCombatAttributes(ped: number | Ped, attributeIndex: number, enabled: boolean): void;
/**
 * ```
 * 100 would equal attack
 * less then 50ish would mean run away
 * Only the values 0, 1 and 2 occur in the decompiled scripts. Most likely refers directly to the values also described in combatbehaviour.meta:
 * 0: CA_Poor
 * 1: CA_Average
 * 2: CA_Professional
 * Tested this and got the same results as the first explanation here. Could not find any difference between 0, 1 and 2.
 * ```
 * Hash: 0xC7622C0D36B2FDA8 | ApiSet: undefined
 */
export declare function setPedCombatAbility(ped: number | Ped, p1: number): void;
/**
 * ```
 * p1: Only "CODE_HUMAN_STAND_COWER" found in the b617d scripts.
 * ```
 * Hash: 0xA549131166868ED3 | ApiSet: undefined
 */
export declare function setPedCowerHash(ped: number | Ped, p1: string): void;
/**
 * ```
 * 0 - Stationary (Will just stand in place)
 * 1 - Defensive (Will try to find cover and very likely to blind fire)
 * 2 - Offensive (Will attempt to charge at enemy but take cover as well)
 * 3 - Suicidal Offensive (Will try to flank enemy in a suicidal attack)
 * ```
 * Hash: 0x4D9CA1009AFBD057 | ApiSet: undefined
 */
export declare function setPedCombatMovement(ped: number | Ped, combatMovement: number): void;
/**
 * Define the scope within which the ped will engage in combat with the target.
 * ```cpp
 * enum eCombatRange {
 * CR_NEAR = 0, // keeps within 5-15m
 * CR_MEDIUM = 1, // keeps within 7-30m
 * CR_FAR = 2, // keeps within 15-40m
 * CR_VERY_FAR = 3 // keeps within 22-45m
 * };
 * ```
 * Hash: 0x3C606747B23E497B | ApiSet: undefined
 */
export declare function setPedCombatRange(ped: number | Ped, range: number): void;
/**
 * Hash: 0x4EF47FE21698A8B6 | ApiSet: undefined
 */
export declare function setPedDefensiveAreaAttachedToPed(ped: number | Ped, attachPed: number | Ped, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: number, p9: boolean, p10: boolean): void;
/**
 * This native is used to set component variation on a ped. Components, drawables and textures IDs are related to the ped model.
 * ### MP Freemode list of components
 * **0**: Face
 * **1**: Mask
 * **2**: Hair
 * **3**: Torso
 * **4**: Leg
 * **5**: Parachute / bag
 * **6**: Shoes
 * **7**: Accessory
 * **8**: Undershirt
 * **9**: Kevlar
 * **10**: Badge
 * **11**: Torso 2
 * List of Component IDs
 * ```cpp
 * // Components
 * enum ePedVarComp
 * {
 * PV_COMP_INVALID = 0xFFFFFFFF,
 * PV_COMP_HEAD = 0, // "HEAD"
 * PV_COMP_BERD = 1, // "BEARD"
 * PV_COMP_HAIR = 2, // "HAIR"
 * PV_COMP_UPPR = 3, // "UPPER"
 * PV_COMP_LOWR = 4, // "LOWER"
 * PV_COMP_HAND = 5, // "HAND"
 * PV_COMP_FEET = 6, // "FEET"
 * PV_COMP_TEEF = 7, // "TEETH"
 * PV_COMP_ACCS = 8, // "ACCESSORIES"
 * PV_COMP_TASK = 9, // "TASK"
 * PV_COMP_DECL = 10, // "DECL"
 * PV_COMP_JBIB = 11, // "JBIB"
 * PV_COMP_MAX = 12,
 * };
 * ```
 * Hash: 0x262B14F48D29DE80 | ApiSet: undefined
 */
export declare function setPedComponentVariation(ped: number | Ped, componentId: number, drawableId: number, textureId: number, paletteId: number): void;
/**
 * Hash: 0x87052FE446E07247 | ApiSet: undefined
 */
export declare function setPedCoordsNoGang(ped: number | Ped, posX: number, posY: number, posZ: number): void;
/**
 * ```
 * teleports ped to coords along with the vehicle ped is in
 * ```
 * Hash: 0x9AFEFF481A85AB2E | ApiSet: undefined
 */
export declare function setPedCoordsKeepVehicle(ped: number | Ped, posX: number, posY: number, posZ: number): void;
/**
 * ```cpp
 * // Potential names and hash collisions included as comments
 * enum ePedConfigFlags {
 * CPED_CONFIG_FLAG_CreatedByFactory = 0,
 * CPED_CONFIG_FLAG_CanBeShotInVehicle = 1,
 * CPED_CONFIG_FLAG_NoCriticalHits = 2,
 * CPED_CONFIG_FLAG_DrownsInWater = 3,
 * CPED_CONFIG_FLAG_DrownsInSinkingVehicle = 4,
 * CPED_CONFIG_FLAG_DiesInstantlyWhenSwimming = 5,
 * CPED_CONFIG_FLAG_HasBulletProofVest = 6,
 * CPED_CONFIG_FLAG_UpperBodyDamageAnimsOnly = 7,
 * CPED_CONFIG_FLAG_NeverFallOffSkis = 8,
 * CPED_CONFIG_FLAG_NeverEverTargetThisPed = 9,
 * CPED_CONFIG_FLAG_ThisPedIsATargetPriority = 10,
 * CPED_CONFIG_FLAG_TargettableWithNoLos = 11,
 * CPED_CONFIG_FLAG_DoesntListenToPlayerGroupCommands = 12,
 * CPED_CONFIG_FLAG_NeverLeavesGroup = 13,
 * CPED_CONFIG_FLAG_DoesntDropWeaponsWhenDead = 14,
 * CPED_CONFIG_FLAG_SetDelayedWeaponAsCurrent = 15,
 * CPED_CONFIG_FLAG_KeepTasksAfterCleanUp = 16,
 * CPED_CONFIG_FLAG_BlockNonTemporaryEvents = 17,
 * CPED_CONFIG_FLAG_HasAScriptBrain = 18,
 * CPED_CONFIG_FLAG_WaitingForScriptBrainToLoad = 19,
 * CPED_CONFIG_FLAG_AllowMedicsToReviveMe = 20,
 * CPED_CONFIG_FLAG_MoneyHasBeenGivenByScript = 21,
 * CPED_CONFIG_FLAG_NotAllowedToCrouch = 22,
 * CPED_CONFIG_FLAG_DeathPickupsPersist = 23,
 * CPED_CONFIG_FLAG_IgnoreSeenMelee = 24,
 * CPED_CONFIG_FLAG_ForceDieIfInjured = 25,
 * CPED_CONFIG_FLAG_DontDragMeOutCar = 26,
 * CPED_CONFIG_FLAG_StayInCarOnJack = 27,
 * CPED_CONFIG_FLAG_ForceDieInCar = 28,
 * CPED_CONFIG_FLAG_GetOutUndriveableVehicle = 29,
 * CPED_CONFIG_FLAG_WillRemainOnBoatAfterMissionEnds = 30,
 * CPED_CONFIG_FLAG_DontStoreAsPersistent = 31,
 * CPED_CONFIG_FLAG_WillFlyThroughWindscreen = 32,
 * CPED_CONFIG_FLAG_DieWhenRagdoll = 33,
 * CPED_CONFIG_FLAG_HasHelmet = 34,
 * CPED_CONFIG_FLAG_UseHelmet = 35,
 * CPED_CONFIG_FLAG_DontTakeOffHelmet = 36,
 * CPED_CONFIG_FLAG_HideInCutscene = 37,
 * CPED_CONFIG_FLAG_PedIsEnemyToPlayer = 38,
 * CPED_CONFIG_FLAG_DisableEvasiveDives = 39,
 * CPED_CONFIG_FLAG_PedGeneratesDeadBodyEvents = 40,
 * CPED_CONFIG_FLAG_DontAttackPlayerWithoutWantedLevel = 41,
 * CPED_CONFIG_FLAG_DontInfluenceWantedLevel = 42,
 * CPED_CONFIG_FLAG_DisablePlayerLockon = 43,
 * CPED_CONFIG_FLAG_DisableLockonToRandomPeds = 44,
 * CPED_CONFIG_FLAG_AllowLockonToFriendlyPlayers = 45,
 * _0xDB115BFA = 46,
 * CPED_CONFIG_FLAG_PedBeingDeleted = 47,
 * CPED_CONFIG_FLAG_BlockWeaponSwitching = 48,
 * CPED_CONFIG_FLAG_BlockGroupPedAimedAtResponse = 49,
 * CPED_CONFIG_FLAG_WillFollowLeaderAnyMeans = 50,
 * CPED_CONFIG_FLAG_BlippedByScript = 51,
 * CPED_CONFIG_FLAG_DrawRadarVisualField = 52,
 * CPED_CONFIG_FLAG_StopWeaponFiringOnImpact = 53,
 * CPED_CONFIG_FLAG_DissableAutoFallOffTests = 54,
 * CPED_CONFIG_FLAG_SteerAroundDeadBodies = 55,
 * CPED_CONFIG_FLAG_ConstrainToNavMesh = 56,
 * CPED_CONFIG_FLAG_SyncingAnimatedProps = 57,
 * CPED_CONFIG_FLAG_IsFiring = 58,
 * CPED_CONFIG_FLAG_WasFiring = 59,
 * CPED_CONFIG_FLAG_IsStanding = 60,
 * CPED_CONFIG_FLAG_WasStanding = 61,
 * CPED_CONFIG_FLAG_InVehicle = 62,
 * CPED_CONFIG_FLAG_OnMount = 63,
 * CPED_CONFIG_FLAG_AttachedToVehicle = 64,
 * CPED_CONFIG_FLAG_IsSwimming = 65,
 * CPED_CONFIG_FLAG_WasSwimming = 66,
 * CPED_CONFIG_FLAG_IsSkiing = 67,
 * CPED_CONFIG_FLAG_IsSitting = 68,
 * CPED_CONFIG_FLAG_KilledByStealth = 69,
 * CPED_CONFIG_FLAG_KilledByTakedown = 70,
 * CPED_CONFIG_FLAG_Knockedout = 71,
 * CPED_CONFIG_FLAG_ClearRadarBlipOnDeath = 72,
 * CPED_CONFIG_FLAG_JustGotOffTrain = 73,
 * CPED_CONFIG_FLAG_JustGotOnTrain = 74,
 * CPED_CONFIG_FLAG_UsingCoverPoint = 75,
 * CPED_CONFIG_FLAG_IsInTheAir = 76,
 * CPED_CONFIG_FLAG_KnockedUpIntoAir = 77,
 * CPED_CONFIG_FLAG_IsAimingGun = 78,
 * CPED_CONFIG_FLAG_HasJustLeftCar = 79,
 * CPED_CONFIG_FLAG_TargetWhenInjuredAllowed = 80,
 * CPED_CONFIG_FLAG_CurrLeftFootCollNM = 81,
 * CPED_CONFIG_FLAG_PrevLeftFootCollNM = 82,
 * CPED_CONFIG_FLAG_CurrRightFootCollNM = 83,
 * CPED_CONFIG_FLAG_PrevRightFootCollNM = 84,
 * CPED_CONFIG_FLAG_HasBeenBumpedInCar = 85,
 * CPED_CONFIG_FLAG_InWaterTaskQuitToClimbLadder = 86,
 * CPED_CONFIG_FLAG_NMTwoHandedWeaponBothHandsConstrained = 87,
 * CPED_CONFIG_FLAG_CreatedBloodPoolTimer = 88,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromAnyPedImpact = 89,
 * CPED_CONFIG_FLAG_GroupPedFailedToEnterCover = 90,
 * CPED_CONFIG_FLAG_AlreadyChattedOnPhone = 91,
 * CPED_CONFIG_FLAG_AlreadyReactedToPedOnRoof = 92,
 * CPED_CONFIG_FLAG_ForcePedLoadCover = 93,
 * CPED_CONFIG_FLAG_BlockCoweringInCover = 94,
 * CPED_CONFIG_FLAG_BlockPeekingInCover = 95,
 * CPED_CONFIG_FLAG_JustLeftCarNotCheckedForDoors = 96,
 * CPED_CONFIG_FLAG_VaultFromCover = 97,
 * CPED_CONFIG_FLAG_AutoConversationLookAts = 98,
 * CPED_CONFIG_FLAG_UsingCrouchedPedCapsule = 99,
 * CPED_CONFIG_FLAG_HasDeadPedBeenReported = 100,
 * CPED_CONFIG_FLAG_ForcedAim = 101,
 * CPED_CONFIG_FLAG_SteersAroundPeds = 102,
 * CPED_CONFIG_FLAG_SteersAroundObjects = 103,
 * CPED_CONFIG_FLAG_OpenDoorArmIK = 104,
 * CPED_CONFIG_FLAG_ForceReload = 105,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromVehicleImpact = 106,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromBulletImpact = 107,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromExplosions = 108,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromFire = 109,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromElectrocution = 110,
 * CPED_CONFIG_FLAG_IsBeingDraggedToSafety = 111,
 * CPED_CONFIG_FLAG_HasBeenDraggedToSafety = 112,
 * CPED_CONFIG_FLAG_KeepWeaponHolsteredUnlessFired = 113,
 * CPED_CONFIG_FLAG_ForceScriptControlledKnockout = 114,
 * CPED_CONFIG_FLAG_FallOutOfVehicleWhenKilled = 115,
 * CPED_CONFIG_FLAG_GetOutBurningVehicle = 116,
 * CPED_CONFIG_FLAG_BumpedByPlayer = 117,
 * CPED_CONFIG_FLAG_RunFromFiresAndExplosions = 118,
 * CPED_CONFIG_FLAG_TreatAsPlayerDuringTargeting = 119,
 * CPED_CONFIG_FLAG_IsHandCuffed = 120,
 * CPED_CONFIG_FLAG_IsAnkleCuffed = 121,
 * CPED_CONFIG_FLAG_DisableMelee = 122,
 * CPED_CONFIG_FLAG_DisableUnarmedDrivebys = 123,
 * CPED_CONFIG_FLAG_JustGetsPulledOutWhenElectrocuted = 124,
 * CPED_CONFIG_FLAG_UNUSED_REPLACE_ME = 125,
 * CPED_CONFIG_FLAG_WillNotHotwireLawEnforcementVehicle = 126,
 * CPED_CONFIG_FLAG_WillCommandeerRatherThanJack = 127,
 * CPED_CONFIG_FLAG_CanBeAgitated = 128,
 * CPED_CONFIG_FLAG_ForcePedToFaceLeftInCover = 129,
 * CPED_CONFIG_FLAG_ForcePedToFaceRightInCover = 130,
 * CPED_CONFIG_FLAG_BlockPedFromTurningInCover = 131,
 * CPED_CONFIG_FLAG_KeepRelationshipGroupAfterCleanUp = 132,
 * CPED_CONFIG_FLAG_ForcePedToBeDragged = 133,
 * CPED_CONFIG_FLAG_PreventPedFromReactingToBeingJacked = 134,
 * CPED_CONFIG_FLAG_IsScuba = 135,
 * CPED_CONFIG_FLAG_WillArrestRatherThanJack = 136,
 * CPED_CONFIG_FLAG_RemoveDeadExtraFarAway = 137,
 * CPED_CONFIG_FLAG_RidingTrain = 138,
 * CPED_CONFIG_FLAG_ArrestResult = 139,
 * CPED_CONFIG_FLAG_CanAttackFriendly = 140,
 * CPED_CONFIG_FLAG_WillJackAnyPlayer = 141,
 * CPED_CONFIG_FLAG_BumpedByPlayerVehicle = 142,
 * CPED_CONFIG_FLAG_DodgedPlayerVehicle = 143,
 * CPED_CONFIG_FLAG_WillJackWantedPlayersRatherThanStealCar = 144,
 * CPED_CONFIG_FLAG_NoCopWantedAggro = 145,
 * CPED_CONFIG_FLAG_DisableLadderClimbing = 146,
 * CPED_CONFIG_FLAG_StairsDetected = 147,
 * CPED_CONFIG_FLAG_SlopeDetected = 148,
 * CPED_CONFIG_FLAG_HelmetHasBeenShot = 149,
 * CPED_CONFIG_FLAG_CowerInsteadOfFlee = 150,
 * CPED_CONFIG_FLAG_CanActivateRagdollWhenVehicleUpsideDown = 151,
 * CPED_CONFIG_FLAG_AlwaysRespondToCriesForHelp = 152,
 * CPED_CONFIG_FLAG_DisableBloodPoolCreation = 153,
 * CPED_CONFIG_FLAG_ShouldFixIfNoCollision = 154,
 * CPED_CONFIG_FLAG_CanPerformArrest = 155,
 * CPED_CONFIG_FLAG_CanPerformUncuff = 156,
 * CPED_CONFIG_FLAG_CanBeArrested = 157,
 * CPED_CONFIG_FLAG_MoverConstrictedByOpposingCollisions = 158,
 * CPED_CONFIG_FLAG_PlayerPreferFrontSeatMP = 159,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromImpactObject = 160,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromMelee = 161,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromWaterJet = 162,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromDrowning = 163,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromFalling = 164,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromRubberBullet = 165,
 * CPED_CONFIG_FLAG_IsInjured = 166,
 * CPED_CONFIG_FLAG_DontEnterVehiclesInPlayersGroup = 167,
 * CPED_CONFIG_FLAG_SwimmingTasksRunning = 168,
 * CPED_CONFIG_FLAG_PreventAllMeleeTaunts = 169,
 * CPED_CONFIG_FLAG_ForceDirectEntry = 170,
 * CPED_CONFIG_FLAG_AlwaysSeeApproachingVehicles = 171,
 * CPED_CONFIG_FLAG_CanDiveAwayFromApproachingVehicles = 172,
 * CPED_CONFIG_FLAG_AllowPlayerToInterruptVehicleEntryExit = 173,
 * CPED_CONFIG_FLAG_OnlyAttackLawIfPlayerIsWanted = 174,
 * CPED_CONFIG_FLAG_PlayerInContactWithKinematicPed = 175,
 * CPED_CONFIG_FLAG_PlayerInContactWithSomethingOtherThanKinematicPed = 176,
 * CPED_CONFIG_FLAG_PedsJackingMeDontGetIn = 177,
 * CPED_CONFIG_FLAG_AdditionalRappellingPed = 178,
 * CPED_CONFIG_FLAG_PedIgnoresAnimInterruptEvents = 179,
 * CPED_CONFIG_FLAG_IsInCustody = 180,
 * CPED_CONFIG_FLAG_ForceStandardBumpReactionThresholds = 181,
 * CPED_CONFIG_FLAG_LawWillOnlyAttackIfPlayerIsWanted = 182,
 * CPED_CONFIG_FLAG_IsAgitated = 183,
 * CPED_CONFIG_FLAG_PreventAutoShuffleToDriversSeat = 184,
 * CPED_CONFIG_FLAG_UseKinematicModeWhenStationary = 185,
 * CPED_CONFIG_FLAG_EnableWeaponBlocking = 186,
 * CPED_CONFIG_FLAG_HasHurtStarted = 187,
 * CPED_CONFIG_FLAG_DisableHurt = 188,
 * CPED_CONFIG_FLAG_PlayerIsWeird = 189,
 * CPED_CONFIG_FLAG_PedHadPhoneConversation = 190,
 * CPED_CONFIG_FLAG_BeganCrossingRoad = 191,
 * CPED_CONFIG_FLAG_WarpIntoLeadersVehicle = 192,
 * CPED_CONFIG_FLAG_DoNothingWhenOnFootByDefault = 193,
 * CPED_CONFIG_FLAG_UsingScenario = 194,
 * CPED_CONFIG_FLAG_VisibleOnScreen = 195,
 * CPED_CONFIG_FLAG_DontCollideWithKinematic = 196,
 * CPED_CONFIG_FLAG_ActivateOnSwitchFromLowPhysicsLod = 197,
 * CPED_CONFIG_FLAG_DontActivateRagdollOnPedCollisionWhenDead = 198,
 * CPED_CONFIG_FLAG_DontActivateRagdollOnVehicleCollisionWhenDead = 199,
 * CPED_CONFIG_FLAG_HasBeenInArmedCombat = 200,
 * CPED_CONFIG_FLAG_UseDiminishingAmmoRate = 201,
 * CPED_CONFIG_FLAG_Avoidance_Ignore_All = 202,
 * CPED_CONFIG_FLAG_Avoidance_Ignored_by_All = 203,
 * CPED_CONFIG_FLAG_Avoidance_Ignore_Group1 = 204,
 * CPED_CONFIG_FLAG_Avoidance_Member_of_Group1 = 205,
 * CPED_CONFIG_FLAG_ForcedToUseSpecificGroupSeatIndex = 206,
 * CPED_CONFIG_FLAG_LowPhysicsLodMayPlaceOnNavMesh = 207,
 * CPED_CONFIG_FLAG_DisableExplosionReactions = 208,
 * CPED_CONFIG_FLAG_DodgedPlayer = 209,
 * CPED_CONFIG_FLAG_WaitingForPlayerControlInterrupt = 210,
 * CPED_CONFIG_FLAG_ForcedToStayInCover = 211,
 * CPED_CONFIG_FLAG_GeneratesSoundEvents = 212,
 * CPED_CONFIG_FLAG_ListensToSoundEvents = 213,
 * CPED_CONFIG_FLAG_AllowToBeTargetedInAVehicle = 214,
 * CPED_CONFIG_FLAG_WaitForDirectEntryPointToBeFreeWhenExiting = 215,
 * CPED_CONFIG_FLAG_OnlyRequireOnePressToExitVehicle = 216,
 * CPED_CONFIG_FLAG_ForceExitToSkyDive = 217,
 * CPED_CONFIG_FLAG_SteersAroundVehicles = 218,
 * CPED_CONFIG_FLAG_AllowPedInVehiclesOverrideTaskFlags = 219,
 * CPED_CONFIG_FLAG_DontEnterLeadersVehicle = 220,
 * CPED_CONFIG_FLAG_DisableExitToSkyDive = 221,
 * CPED_CONFIG_FLAG_ScriptHasDisabledCollision = 222,
 * CPED_CONFIG_FLAG_UseAmbientModelScaling = 223,
 * CPED_CONFIG_FLAG_DontWatchFirstOnNextHurryAway = 224,
 * CPED_CONFIG_FLAG_DisablePotentialToBeWalkedIntoResponse = 225,
 * CPED_CONFIG_FLAG_DisablePedAvoidance = 226,
 * CPED_CONFIG_FLAG_ForceRagdollUponDeath = 227,
 * CPED_CONFIG_FLAG_CanLosePropsOnDamage = 228,
 * CPED_CONFIG_FLAG_DisablePanicInVehicle = 229,
 * CPED_CONFIG_FLAG_AllowedToDetachTrailer = 230,
 * CPED_CONFIG_FLAG_HasShotBeenReactedToFromFront = 231,
 * CPED_CONFIG_FLAG_HasShotBeenReactedToFromBack = 232,
 * CPED_CONFIG_FLAG_HasShotBeenReactedToFromLeft = 233,
 * CPED_CONFIG_FLAG_HasShotBeenReactedToFromRight = 234,
 * CPED_CONFIG_FLAG_AllowBlockDeadPedRagdollActivation = 235,
 * CPED_CONFIG_FLAG_IsHoldingProp = 236,
 * CPED_CONFIG_FLAG_BlocksPathingWhenDead = 237,
 * CPED_CONFIG_FLAG_ForcePlayNormalScenarioExitOnNextScriptCommand = 238,
 * CPED_CONFIG_FLAG_ForcePlayImmediateScenarioExitOnNextScriptCommand = 239,
 * CPED_CONFIG_FLAG_ForceSkinCharacterCloth = 240,
 * CPED_CONFIG_FLAG_LeaveEngineOnWhenExitingVehicles = 241,
 * CPED_CONFIG_FLAG_PhoneDisableTextingAnimations = 242,
 * CPED_CONFIG_FLAG_PhoneDisableTalkingAnimations = 243,
 * CPED_CONFIG_FLAG_PhoneDisableCameraAnimations = 244,
 * CPED_CONFIG_FLAG_DisableBlindFiringInShotReactions = 245,
 * CPED_CONFIG_FLAG_AllowNearbyCoverUsage = 246,
 * CPED_CONFIG_FLAG_InStrafeTransition = 247,
 * CPED_CONFIG_FLAG_CanPlayInCarIdles = 248,
 * CPED_CONFIG_FLAG_CanAttackNonWantedPlayerAsLaw = 249,
 * CPED_CONFIG_FLAG_WillTakeDamageWhenVehicleCrashes = 250,
 * CPED_CONFIG_FLAG_AICanDrivePlayerAsRearPassenger = 251,
 * CPED_CONFIG_FLAG_PlayerCanJackFriendlyPlayers = 252,
 * CPED_CONFIG_FLAG_OnStairs = 253,
 * CPED_CONFIG_FLAG_SimulatingAiming = 254,
 * CPED_CONFIG_FLAG_AIDriverAllowFriendlyPassengerSeatEntry = 255,
 * CPED_CONFIG_FLAG_ParentCarIsBeingRemoved = 256,
 * CPED_CONFIG_FLAG_AllowMissionPedToUseInjuredMovement = 257,
 * CPED_CONFIG_FLAG_CanLoseHelmetOnDamage = 258,
 * CPED_CONFIG_FLAG_NeverDoScenarioExitProbeChecks = 259,
 * CPED_CONFIG_FLAG_SuppressLowLODRagdollSwitchWhenCorpseSettles = 260,
 * CPED_CONFIG_FLAG_PreventUsingLowerPrioritySeats = 261,
 * CPED_CONFIG_FLAG_JustLeftVehicleNeedsReset = 262,
 * CPED_CONFIG_FLAG_TeleportIfCantReachPlayer = 263,
 * CPED_CONFIG_FLAG_PedsInVehiclePositionNeedsReset = 264,
 * CPED_CONFIG_FLAG_PedsFullyInSeat = 265,
 * CPED_CONFIG_FLAG_AllowPlayerLockOnIfFriendly = 266,
 * CPED_CONFIG_FLAG_UseCameraHeadingForDesiredDirectionLockOnTest = 267,
 * CPED_CONFIG_FLAG_TeleportToLeaderVehicle = 268,
 * CPED_CONFIG_FLAG_Avoidance_Ignore_WeirdPedBuffer = 269,
 * CPED_CONFIG_FLAG_OnStairSlope = 270,
 * CPED_CONFIG_FLAG_HasPlayedNMGetup = 271,
 * CPED_CONFIG_FLAG_DontBlipCop = 272,
 * CPED_CONFIG_FLAG_SpawnedAtExtendedRangeScenario = 273,
 * CPED_CONFIG_FLAG_WalkAlongsideLeaderWhenClose = 274,
 * CPED_CONFIG_FLAG_KillWhenTrapped = 275,
 * CPED_CONFIG_FLAG_EdgeDetected = 276,
 * CPED_CONFIG_FLAG_AlwaysWakeUpPhysicsOfIntersectedPeds = 277,
 * CPED_CONFIG_FLAG_EquippedAmbientLoadOutWeapon = 278,
 * CPED_CONFIG_FLAG_AvoidTearGas = 279,
 * CPED_CONFIG_FLAG_StoppedSpeechUponFreezing = 280,
 * CPED_CONFIG_FLAG_DisableGoToWritheWhenInjured = 281,
 * CPED_CONFIG_FLAG_OnlyUseForcedSeatWhenEnteringHeliInGroup = 282,
 * CPED_CONFIG_FLAG_ThrownFromVehicleDueToExhaustion = 283,
 * CPED_CONFIG_FLAG_UpdateEnclosedSearchRegion = 284,
 * CPED_CONFIG_FLAG_DisableWeirdPedEvents = 285,
 * CPED_CONFIG_FLAG_ShouldChargeNow = 286,
 * CPED_CONFIG_FLAG_RagdollingOnBoat = 287,
 * CPED_CONFIG_FLAG_HasBrandishedWeapon = 288,
 * CPED_CONFIG_FLAG_AllowMinorReactionsAsMissionPed = 289,
 * CPED_CONFIG_FLAG_BlockDeadBodyShockingEventsWhenDead = 290,
 * CPED_CONFIG_FLAG_PedHasBeenSeen = 291,
 * CPED_CONFIG_FLAG_PedIsInReusePool = 292,
 * CPED_CONFIG_FLAG_PedWasReused = 293,
 * CPED_CONFIG_FLAG_DisableShockingEvents = 294,
 * CPED_CONFIG_FLAG_MovedUsingLowLodPhysicsSinceLastActive = 295,
 * CPED_CONFIG_FLAG_NeverReactToPedOnRoof = 296,
 * CPED_CONFIG_FLAG_ForcePlayFleeScenarioExitOnNextScriptCommand = 297,
 * CPED_CONFIG_FLAG_JustBumpedIntoVehicle = 298,
 * CPED_CONFIG_FLAG_DisableShockingDrivingOnPavementEvents = 299,
 * CPED_CONFIG_FLAG_ShouldThrowSmokeNow = 300,
 * CPED_CONFIG_FLAG_DisablePedConstraints = 301,
 * CPED_CONFIG_FLAG_ForceInitialPeekInCover = 302,
 * CPED_CONFIG_FLAG_CreatedByDispatch = 303,
 * CPED_CONFIG_FLAG_PointGunLeftHandSupporting = 304,
 * CPED_CONFIG_FLAG_DisableJumpingFromVehiclesAfterLeader = 305,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromPlayerPedImpact = 306,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromAiRagdollImpact = 307,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromPlayerRagdollImpact = 308,
 * CPED_CONFIG_FLAG_DisableQuadrupedSpring = 309,
 * CPED_CONFIG_FLAG_IsInCluster = 310,
 * CPED_CONFIG_FLAG_ShoutToGroupOnPlayerMelee = 311,
 * CPED_CONFIG_FLAG_IgnoredByAutoOpenDoors = 312,
 * CPED_CONFIG_FLAG_PreferInjuredGetup = 313,
 * CPED_CONFIG_FLAG_ForceIgnoreMeleeActiveCombatant = 314,
 * CPED_CONFIG_FLAG_CheckLoSForSoundEvents = 315,
 * CPED_CONFIG_FLAG_JackedAbandonedCar = 316,
 * CPED_CONFIG_FLAG_CanSayFollowedByPlayerAudio = 317,
 * CPED_CONFIG_FLAG_ActivateRagdollFromMinorPlayerContact = 318,
 * CPED_CONFIG_FLAG_HasPortablePickupAttached = 319,
 * CPED_CONFIG_FLAG_ForcePoseCharacterCloth = 320,
 * CPED_CONFIG_FLAG_HasClothCollisionBounds = 321,
 * CPED_CONFIG_FLAG_HasHighHeels = 322,
 * CPED_CONFIG_FLAG_TreatAsAmbientPedForDriverLockOn = 323,
 * CPED_CONFIG_FLAG_DontBehaveLikeLaw = 324,
 * CPED_CONFIG_FLAG_SpawnedAtScenario = 325,
 * CPED_CONFIG_FLAG_DisablePoliceInvestigatingBody = 326,
 * CPED_CONFIG_FLAG_DisableWritheShootFromGround = 327,
 * CPED_CONFIG_FLAG_LowerPriorityOfWarpSeats = 328,
 * CPED_CONFIG_FLAG_DisableTalkTo = 329,
 * CPED_CONFIG_FLAG_DontBlip = 330,
 * CPED_CONFIG_FLAG_IsSwitchingWeapon = 331,
 * CPED_CONFIG_FLAG_IgnoreLegIkRestrictions = 332,
 * CPED_CONFIG_FLAG_ScriptForceNoTimesliceIntelligenceUpdate = 333,
 * CPED_CONFIG_FLAG_JackedOutOfMyVehicle = 334,
 * CPED_CONFIG_FLAG_WentIntoCombatAfterBeingJacked = 335,
 * CPED_CONFIG_FLAG_DontActivateRagdollForVehicleGrab = 336,
 * CPED_CONFIG_FLAG_ForcePackageCharacterCloth = 337,
 * CPED_CONFIG_FLAG_DontRemoveWithValidOrder = 338,
 * CPED_CONFIG_FLAG_AllowTaskDoNothingTimeslicing = 339,
 * CPED_CONFIG_FLAG_ForcedToStayInCoverDueToPlayerSwitch = 340,
 * CPED_CONFIG_FLAG_ForceProneCharacterCloth = 341,
 * CPED_CONFIG_FLAG_NotAllowedToJackAnyPlayers = 342,
 * CPED_CONFIG_FLAG_InToStrafeTransition = 343,
 * CPED_CONFIG_FLAG_KilledByStandardMelee = 344,
 * CPED_CONFIG_FLAG_AlwaysLeaveTrainUponArrival = 345,
 * CPED_CONFIG_FLAG_ForcePlayDirectedNormalScenarioExitOnNextScriptCommand = 346,
 * CPED_CONFIG_FLAG_OnlyWritheFromWeaponDamage = 347,
 * CPED_CONFIG_FLAG_UseSloMoBloodVfx = 348,
 * CPED_CONFIG_FLAG_EquipJetpack = 349,
 * CPED_CONFIG_FLAG_PreventDraggedOutOfCarThreatResponse = 350,
 * CPED_CONFIG_FLAG_ScriptHasCompletelyDisabledCollision = 351,
 * CPED_CONFIG_FLAG_NeverDoScenarioNavChecks = 352,
 * CPED_CONFIG_FLAG_ForceSynchronousScenarioExitChecking = 353,
 * CPED_CONFIG_FLAG_ThrowingGrenadeWhileAiming = 354,
 * CPED_CONFIG_FLAG_HeadbobToRadioEnabled = 355,
 * CPED_CONFIG_FLAG_ForceDeepSurfaceCheck = 356,
 * CPED_CONFIG_FLAG_DisableDeepSurfaceAnims = 357,
 * CPED_CONFIG_FLAG_DontBlipNotSynced = 358,
 * CPED_CONFIG_FLAG_IsDuckingInVehicle = 359,
 * CPED_CONFIG_FLAG_PreventAutoShuffleToTurretSeat = 360,
 * CPED_CONFIG_FLAG_DisableEventInteriorStatusCheck = 361,
 * CPED_CONFIG_FLAG_HasReserveParachute = 362,
 * CPED_CONFIG_FLAG_UseReserveParachute = 363,
 * CPED_CONFIG_FLAG_TreatDislikeAsHateWhenInCombat = 364,
 * CPED_CONFIG_FLAG_OnlyUpdateTargetWantedIfSeen = 365,
 * CPED_CONFIG_FLAG_AllowAutoShuffleToDriversSeat = 366,
 * CPED_CONFIG_FLAG_DontActivateRagdollFromSmokeGrenade = 367,
 * CPED_CONFIG_FLAG_LinkMBRToOwnerOnChain = 368,
 * CPED_CONFIG_FLAG_AmbientFriendBumpedByPlayer = 369,
 * CPED_CONFIG_FLAG_AmbientFriendBumpedByPlayerVehicle = 370,
 * CPED_CONFIG_FLAG_InFPSUnholsterTransition = 371,
 * CPED_CONFIG_FLAG_PreventReactingToSilencedCloneBullets = 372,
 * CPED_CONFIG_FLAG_DisableInjuredCryForHelpEvents = 373,
 * CPED_CONFIG_FLAG_NeverLeaveTrain = 374,
 * CPED_CONFIG_FLAG_DontDropJetpackOnDeath = 375,
 * CPED_CONFIG_FLAG_UseFPSUnholsterTransitionDuringCombatRoll = 376,
 * CPED_CONFIG_FLAG_ExitingFPSCombatRoll = 377,
 * CPED_CONFIG_FLAG_ScriptHasControlOfPlayer = 378,
 * CPED_CONFIG_FLAG_PlayFPSIdleFidgetsForProjectile = 379,
 * CPED_CONFIG_FLAG_DisableAutoEquipHelmetsInBikes = 380,
 * CPED_CONFIG_FLAG_DisableAutoEquipHelmetsInAircraft = 381,
 * CPED_CONFIG_FLAG_WasPlayingFPSGetup = 382,
 * CPED_CONFIG_FLAG_WasPlayingFPSMeleeActionResult = 383,
 * CPED_CONFIG_FLAG_PreferNoPriorityRemoval = 384,
 * CPED_CONFIG_FLAG_FPSFidgetsAbortedOnFire = 385,
 * CPED_CONFIG_FLAG_ForceFPSIKWithUpperBodyAnim = 386,
 * CPED_CONFIG_FLAG_SwitchingCharactersInFirstPerson = 387,
 * CPED_CONFIG_FLAG_IsClimbingLadder = 388,
 * CPED_CONFIG_FLAG_HasBareFeet = 389,
 * CPED_CONFIG_FLAG_UNUSED_REPLACE_ME_2 = 390,
 * CPED_CONFIG_FLAG_GoOnWithoutVehicleIfItIsUnableToGetBackToRoad = 391,
 * CPED_CONFIG_FLAG_BlockDroppingHealthSnacksOnDeath = 392,
 * CPED_CONFIG_FLAG_ResetLastVehicleOnVehicleExit = 393,
 * CPED_CONFIG_FLAG_ForceThreatResponseToNonFriendToFriendMeleeActions = 394,
 * CPED_CONFIG_FLAG_DontRespondToRandomPedsDamage = 395,
 * CPED_CONFIG_FLAG_AllowContinuousThreatResponseWantedLevelUpdates = 396,
 * CPED_CONFIG_FLAG_KeepTargetLossResponseOnCleanup = 397,
 * CPED_CONFIG_FLAG_PlayersDontDragMeOutOfCar = 398,
 * CPED_CONFIG_FLAG_BroadcastRepondedToThreatWhenGoingToPointShooting = 399,
 * CPED_CONFIG_FLAG_IgnorePedTypeForIsFriendlyWith = 400,
 * CPED_CONFIG_FLAG_TreatNonFriendlyAsHateWhenInCombat = 401,
 * CPED_CONFIG_FLAG_DontLeaveVehicleIfLeaderNotInVehicle = 402,
 * CPED_CONFIG_FLAG_ChangeFromPermanentToAmbientPopTypeOnMigration = 403,
 * CPED_CONFIG_FLAG_AllowMeleeReactionIfMeleeProofIsOn = 404,
 * CPED_CONFIG_FLAG_UsingLowriderLeans = 405,
 * CPED_CONFIG_FLAG_UsingAlternateLowriderLeans = 406,
 * CPED_CONFIG_FLAG_UseNormalExplosionDamageWhenBlownUpInVehicle = 407,
 * CPED_CONFIG_FLAG_DisableHomingMissileLockForVehiclePedInside = 408,
 * CPED_CONFIG_FLAG_DisableTakeOffScubaGear = 409,
 * CPED_CONFIG_FLAG_IgnoreMeleeFistWeaponDamageMult = 410,
 * CPED_CONFIG_FLAG_LawPedsCanFleeFromNonWantedPlayer = 411,
 * CPED_CONFIG_FLAG_ForceBlipSecurityPedsIfPlayerIsWanted = 412,
 * CPED_CONFIG_FLAG_IsHolsteringWeapon = 413,
 * CPED_CONFIG_FLAG_UseGoToPointForScenarioNavigation = 414,
 * CPED_CONFIG_FLAG_DontClearLocalPassengersWantedLevel = 415,
 * CPED_CONFIG_FLAG_BlockAutoSwapOnWeaponPickups = 416,
 * CPED_CONFIG_FLAG_ThisPedIsATargetPriorityForAI = 417,
 * CPED_CONFIG_FLAG_IsSwitchingHelmetVisor = 418,
 * CPED_CONFIG_FLAG_ForceHelmetVisorSwitch = 419,
 * CPED_CONFIG_FLAG_IsPerformingVehicleMelee = 420,
 * CPED_CONFIG_FLAG_UseOverrideFootstepPtFx = 421,
 * CPED_CONFIG_FLAG_DisableVehicleCombat = 422,
 * CPED_CONFIG_FLAG_TreatAsFriendlyForTargetingAndDamage = 423,
 * CPED_CONFIG_FLAG_AllowBikeAlternateAnimations = 424,
 * CPED_CONFIG_FLAG_TreatAsFriendlyForTargetingAndDamageNonSynced = 425,
 * CPED_CONFIG_FLAG_UseLockpickVehicleEntryAnimations = 426,
 * CPED_CONFIG_FLAG_IgnoreInteriorCheckForSprinting = 427,
 * CPED_CONFIG_FLAG_SwatHeliSpawnWithinLastSpottedLocation = 428,
 * CPED_CONFIG_FLAG_DisableStartEngine = 429,
 * CPED_CONFIG_FLAG_IgnoreBeingOnFire = 430,
 * CPED_CONFIG_FLAG_DisableTurretOrRearSeatPreference = 431,
 * CPED_CONFIG_FLAG_DisableWantedHelicopterSpawning = 432,
 * CPED_CONFIG_FLAG_UseTargetPerceptionForCreatingAimedAtEvents = 433,
 * CPED_CONFIG_FLAG_DisableHomingMissileLockon = 434,
 * CPED_CONFIG_FLAG_ForceIgnoreMaxMeleeActiveSupportCombatants = 435,
 * CPED_CONFIG_FLAG_StayInDefensiveAreaWhenInVehicle = 436,
 * CPED_CONFIG_FLAG_DontShoutTargetPosition = 437,
 * CPED_CONFIG_FLAG_DisableHelmetArmor = 438,
 * CPED_CONFIG_FLAG_CreatedByConcealedPlayer = 439,
 * CPED_CONFIG_FLAG_PermanentlyDisablePotentialToBeWalkedIntoResponse = 440,
 * CPED_CONFIG_FLAG_PreventVehExitDueToInvalidWeapon = 441,
 * CPED_CONFIG_FLAG_IgnoreNetSessionFriendlyFireCheckForAllowDamage = 442,
 * CPED_CONFIG_FLAG_DontLeaveCombatIfTargetPlayerIsAttackedByPolice = 443,
 * CPED_CONFIG_FLAG_CheckLockedBeforeWarp = 444,
 * CPED_CONFIG_FLAG_DontShuffleInVehicleToMakeRoom = 445,
 * CPED_CONFIG_FLAG_GiveWeaponOnGetup = 446,
 * CPED_CONFIG_FLAG_DontHitVehicleWithProjectiles = 447,
 * CPED_CONFIG_FLAG_DisableForcedEntryForOpenVehiclesFromTryLockedDoor = 448,
 * CPED_CONFIG_FLAG_FiresDummyRockets = 449,
 * CPED_CONFIG_FLAG_PedIsArresting = 450,
 * CPED_CONFIG_FLAG_IsDecoyPed = 451,
 * CPED_CONFIG_FLAG_HasEstablishedDecoy = 452,
 * CPED_CONFIG_FLAG_BlockDispatchedHelicoptersFromLanding = 453,
 * CPED_CONFIG_FLAG_DontCryForHelpOnStun = 454,
 * CPED_CONFIG_FLAG_HitByTranqWeapon = 455,
 * CPED_CONFIG_FLAG_CanBeIncapacitated = 456,
 * CPED_CONFIG_FLAG_ForcedAimFromArrest = 457,
 * CPED_CONFIG_FLAG_DontChangeTargetFromMelee = 458,
 * _0x4376ABF2 = 459,
 * CPED_CONFIG_FLAG_RagdollFloatsIndefinitely = 460,
 * CPED_CONFIG_FLAG_BlockElectricWeaponDamage = 461,
 * _0x262A3B8E = 462,
 * _0x1AA79A25 = 463,
 * }
 * ```
 * Hash: 0x1913FE4CBF41C463 | ApiSet: undefined
 */
export declare function setPedConfigFlag(ped: number | Ped, flagId: number, value: boolean): void;
/**
 * Hash: 0xD718A22995E2B4BC | ApiSet: undefined
 */
export declare function setPedDiesInSinkingVehicle(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0xE4723DB6E736CCFF | ApiSet: undefined
 */
export declare function setPedDefensiveSphereAttachedToVehicle(ped: number | Ped, target: number | Vehicle, xOffset: number, yOffset: number, zOffset: number, radius: number, p6: boolean): void;
/**
 * Hash: 0x56CEF0AC79073BDE | ApiSet: undefined
 */
export declare function setPedDiesInWater(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0xAA5A7ECE2AA8FE70 | ApiSet: undefined
 */
export declare function setPedDesiredHeading(ped: number | Ped, heading: number): void;
/**
 * ```
 * Sets Ped Default Clothes
 * ```
 * Hash: 0x45EEE61580806D63 | ApiSet: undefined
 */
export declare function setPedDefaultComponentVariation(ped: number | Ped): void;
/**
 * ```
 * This is the SET_CHAR_DUCKING from GTA IV, that makes Peds duck. This function does nothing in GTA V. It cannot set the ped as ducking in vehicles, and IS_PED_DUCKING will always return false.
 * ```
 * Hash: 0x030983CA930B692D | ApiSet: undefined
 */
export declare function setPedDucking(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x413C6C763A4AFFAD | ApiSet: undefined
 */
export declare function setPedDefensiveAreaDirection(ped: number | Ped, p1: number, p2: number, p3: number, p4: boolean): void;
/**
 * Hash: 0x5BA7919BED300023 | ApiSet: undefined
 */
export declare function setPedDiesWhenInjured(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0xF9B8F91AAD3B953E | ApiSet: undefined
 */
export declare function setPedDefensiveSphereAttachedToPed(ped: number | Ped, target: number | Ped, xOffset: number, yOffset: number, zOffset: number, radius: number, p6: boolean): void;
/**
 * **Usage:** Call this native every frame
 * Hash: 0x95E3D6257B166CF2 | ApiSet: undefined
 */
export declare function setPedDensityMultiplierThisFrame(multiplier: number): void;
/**
 * Hash: 0xED34AB6C5CB36520 | ApiSet: undefined
 */
export declare function setPedDriveByClipsetOverride(ped: number | Ped, clipset: string): void;
/**
 * Hash: 0x2A30922C90C9B42C | ApiSet: undefined
 */
export declare function setPedDiesInVehicle(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0xEEB64139BA29A7CF | ApiSet: undefined
 */
export declare function setPedDiesInstantlyInWater(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * Something related to the environmental effects natives.
 * In the "agency_heist3b" script, p1 - p3 are always under 100 - usually they are {87, 81, 68}. If SET_PED_ENVEFF_SCALE is set to 0.65 (instead of the usual 1.0), they use {74, 69, 60}
 * ```
 * Hash: 0xD69411AA0CEBF9E9 | ApiSet: undefined
 */
export declare function setPedEnveffColorModulator(ped: number | Ped, r: number, g: number, b: number): void;
/**
 * Hash: 0x97A790315D3831FD | ApiSet: undefined
 */
export declare function setPedEnableWeaponBlocking(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * FIRING_PATTERN_BURST_FIRE = 0xD6FF6D61 ( 1073727030 )
 * FIRING_PATTERN_BURST_FIRE_IN_COVER = 0x026321F1 ( 40051185 )
 * FIRING_PATTERN_BURST_FIRE_DRIVEBY = 0xD31265F2 ( -753768974 )
 * FIRING_PATTERN_FROM_GROUND = 0x2264E5D6 ( 577037782 )
 * FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 0x7A845691 ( 2055493265 )
 * FIRING_PATTERN_FULL_AUTO = 0xC6EE6B4C ( -957453492 )
 * FIRING_PATTERN_SINGLE_SHOT = 0x5D60E4E0 ( 1566631136 )
 * FIRING_PATTERN_BURST_FIRE_PISTOL = 0xA018DB8A ( -1608983670 )
 * FIRING_PATTERN_BURST_FIRE_SMG = 0xD10DADEE ( 1863348768 )
 * FIRING_PATTERN_BURST_FIRE_RIFLE = 0x9C74B406 ( -1670073338 )
 * FIRING_PATTERN_BURST_FIRE_MG = 0xB573C5B4 ( -1250703948 )
 * FIRING_PATTERN_BURST_FIRE_PUMPSHOTGUN = 0x00BAC39B ( 12239771 )
 * FIRING_PATTERN_BURST_FIRE_HELI = 0x914E786F ( -1857128337 )
 * FIRING_PATTERN_BURST_FIRE_MICRO = 0x42EF03FD ( 1122960381 )
 * FIRING_PATTERN_SHORT_BURSTS = 0x1A92D7DF ( 445831135 )
 * FIRING_PATTERN_SLOW_FIRE_TANK = 0xE2CA3A71 ( -490063247 )
 * if anyone is interested firing pattern info: pastebin.com/Px036isB
 * ```
 * Hash: 0x9AC577F5A12AD8A9 | ApiSet: undefined
 */
export declare function setPedFiringPattern(ped: number | Ped, patternHash: number | string): void;
/**
 * This native sets the glow intensity of illuminated clothing items.
 * This native does **NOT** need to be executed every tick.
 * This native is **NOT** synced with other connected players, you will have to set the opacity on the ped on all clients individually.
 * Glow intensity is a value between `0.0` and `1.0`.
 * In some older decompiled scripts this is known as `_SET_PED_REFLECTION_INTENSITY`.
 * Since there's no joaat hash for this, I find `_SET_PED_ILLUMINATED_CLOTHING_GLOW_INTENSITY` more descriptive than `_SET_PED_REFLECTION_INTENSITY`.
 * Use [`GetPedIlluminatedClothingGlowIntensity`](#\_0x1461B28A06717D68) to get the illuminated clothing glow intensity of a specific ped.
 * Intensity: `1.0`:
 * ![](https://www.vespura.com/hi/i/2018-11-13\_17-03\_c2e23\_229.png)
 * Intensity: `0.0`:
 * ![](https://www.vespura.com/hi/i/2018-11-13\_17-03\_35c33\_230.png)
 * **Examples code result**:
 * ![](https://www.vespura.com/hi/i/2018-11-13\_17-11\_10199\_232.gif)
 * (Direct link if embed doesn't work: [here](https://www.vespura.com/hi/i/2018-11-13\_17-11\_10199\_232.gif))
 * Hash: 0x4E90D746056E273D | ApiSet: undefined
 */
export declare function setPedEmissiveIntensity(ped: number | Ped, intensity: number): void;
/**
 * Sets the various freemode face features, e.g. nose length, chin shape.
 * <strong>Indexes (From 0 to 19):</strong>
 * Parentheses indicate morph scale/direction as in (-1.0 to 1.0)
 * *   **0**: Nose Width (Thin/Wide)
 * *   **1**: Nose Peak (Up/Down)
 * *   **2**: Nose Length (Long/Short)
 * *   **3**: Nose Bone Curveness (Crooked/Curved)
 * *   **4**: Nose Tip (Up/Down)
 * *   **5**: Nose Bone Twist (Left/Right)
 * *   **6**: Eyebrow (Up/Down)
 * *   **7**: Eyebrow (In/Out)
 * *   **8**: Cheek Bones (Up/Down)
 * *   **9**: Cheek Sideways Bone Size (In/Out)
 * *   **10**: Cheek Bones Width (Puffed/Gaunt)
 * *   **11**: Eye Opening (Both) (Wide/Squinted)
 * *   **12**: Lip Thickness (Both) (Fat/Thin)
 * *   **13**: Jaw Bone Width (Narrow/Wide)
 * *   **14**: Jaw Bone Shape (Round/Square)
 * *   **15**: Chin Bone (Up/Down)
 * *   **16**: Chin Bone Length (In/Out or Backward/Forward)
 * *   **17**: Chin Bone Shape (Pointed/Square)
 * *   **18**: Chin Hole (Chin Bum)
 * *   **19**: Neck Thickness (Thin/Thick)
 * <strong>Note:</strong>
 * You may need to call [`SetPedHeadBlendData`](#\_0x9414E18B9434C2FE) prior to calling this native in order for it to work.
 * Hash: 0x71A5C1DBA060049E | ApiSet: undefined
 */
export declare function setPedFaceFeature(ped: number | Ped, index: number, scale: number): void;
/**
 * Hash: 0x7FB17BA2E7DECA5B | ApiSet: undefined
 */
export declare function setPedGeneratesDeadBodyEvents(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * Values look to be between 0.0 and 1.0
 * From decompiled scripts: 0.0, 0.6, 0.65, 0.8, 1.0
 * You are correct, just looked in IDA it breaks from the function if it's less than 0.0f or greater than 1.0f.
 * ```
 * Hash: 0xBF29516833893561 | ApiSet: undefined
 */
export declare function setPedEnveffScale(ped: number | Ped, value: number): void;
/**
 * Used for freemode (online) characters.
 * Indices:
 * 1.  black
 * 2.  very light blue/green
 * 3.  dark blue
 * 4.  brown
 * 5.  darker brown
 * 6.  light brown
 * 7.  blue
 * 8.  light blue
 * 9.  pink
 * 10. yellow
 * 11. purple
 * 12. black
 * 13. dark green
 * 14. light brown
 * 15. yellow/black pattern
 * 16. light colored spiral pattern
 * 17. shiny red
 * 18. shiny half blue/half red
 * 19. half black/half light blue
 * 20. white/red perimter
 * 21. green snake
 * 22. red snake
 * 23. dark blue snake
 * 24. dark yellow
 * 25. bright yellow
 * 26. all black
 * 27. red small pupil
 * 28. devil blue/black
 * 29. white small pupil
 * 30. glossed over
 * Hash: 0x50B56988B170AFDF | ApiSet: undefined
 */
export declare function setPedEyeColor(ped: number | Ped, index: number): void;
/**
 * ```
 * From the scripts:
 * `PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),`
 * "ANIM_GROUP_GESTURE_MISS_FRA0");
 * `PED::SET_PED_GESTURE_GROUP(PLAYER::PLAYER_PED_ID(),`
 * "ANIM_GROUP_GESTURE_MISS_DocksSetup1");
 * ```
 * Hash: 0xDDF803377F94AAA8 | ApiSet: undefined
 */
export declare function setPedGestureGroup(ped: number | Ped, animGroupGesture: string): void;
/**
 * Hash: 0xBC0ED94165A48BC2 | ApiSet: undefined
 */
export declare function setPedGetOutUpsideDownVehicle(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * bit 15 (0x8000) = force cower
 * ```
 * Hash: 0x70A2D1137C8ED7C9 | ApiSet: undefined
 */
export declare function setPedFleeAttributes(ped: number | Ped, attributeFlags: number, enable: boolean): void;
/**
 * Hash: 0x0BDDB8D9EC6BCF3C | ApiSet: undefined
 */
export declare function setPedGroupMemberPassengerIndex(ped: number | Ped, index: number): void;
/**
 * ```
 * enable or disable the gravity of a ped
 * Examples:
 * `PED::SET_PED_GRAVITY(PLAYER::PLAYER_PED_ID(), 0x00000001);`
 * `PED::SET_PED_GRAVITY(Local_289[iVar0 \/\*20\*\/], 0x00000001);`
 * ```
 * Hash: 0x9FF447B6B6AD960A | ApiSet: undefined
 */
export declare function setPedGravity(ped: number | Ped, toggle: boolean): void;
/**
 * Sets the tint index for the hair on the specified ped.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x4CFFC65454C93A49 | ApiSet: undefined
 */
export declare function setPedHairTint(ped: number | Ped, colorID: number, highlightColorID: number): void;
/**
 * Hash: 0x33A8F7F7D5F7F33C | ApiSet: undefined
 */
export declare function setPedHearingRange(ped: number | Ped, value: number): void;
/**
 * ```
 * OverlayID ranges from 0 to 12, index from 0 to _GET_NUM_OVERLAY_VALUES(overlayID)-1, and opacity from 0.0 to 1.0.
 * overlayID       Part                  Index, to disable
 * 0               Blemishes             0 - 23, 255
 * 1               Facial Hair           0 - 28, 255
 * 2               Eyebrows              0 - 33, 255
 * 3               Ageing                0 - 14, 255
 * 4               Makeup                0 - 74, 255
 * 5               Blush                 0 - 6, 255
 * 6               Complexion            0 - 11, 255
 * 7               Sun Damage            0 - 10, 255
 * 8               Lipstick              0 - 9, 255
 * 9               Moles/Freckles        0 - 17, 255
 * 10              Chest Hair            0 - 16, 255
 * 11              Body Blemishes        0 - 11, 255
 * 12              Add Body Blemishes    0 - 1, 255
 * ```
 * <strong>Note:</strong>
 * You may need to call [`SetPedHeadBlendData`](#\_0x9414E18B9434C2FE) prior to calling this native in order for it to work.
 * Hash: 0x48F44967FA05CC1E | ApiSet: undefined
 */
export declare function setPedHeadOverlay(ped: number | Ped, overlayID: number, index: number, opacity: number): void;
/**
 * ```
 * Used for freemode (online) characters.
 * Called after SET_PED_HEAD_OVERLAY().
 * ```
 * <strong>Note:</strong>
 * You may need to call [`SetPedHeadBlendData`](#\_0x9414E18B9434C2FE) prior to calling this native in order for it to work.
 * Hash: 0x497BF74A7B9CB952 | ApiSet: undefined
 */
export declare function setPedHeadOverlayColor(ped: number | Ped, overlayID: number, colorType: number, colorID: number, secondColorID: number): void;
/**
 * Hash: 0xC1F6EBF9A3D55538 | ApiSet: undefined
 */
export declare function setPedHeatscaleOverride(ped: number | Ped, heatScale: number): void;
/**
 * ```
 * NativeDB Added Parameter 3: BOOL p2
 * ```
 * Hash: 0x26D83693ED99291C | ApiSet: undefined
 */
export declare function setPedHelmetPropIndex(ped: number | Ped, propIndex: number): void;
/**
 * Hash: 0xC0E78D5C2CE3EB25 | ApiSet: undefined
 */
export declare function setPedHelmetFlag(ped: number | Ped, helmetFlag: number): void;
/**
 * For more info please refer to [this](https://gtaforums.com/topic/858970-all-gtao-face-ids-pedset-ped-head-blend-data-explained) topic.
 * <strong>Other information:</strong>
 * IDs start at zero and go Male Non-DLC, Female Non-DLC, Male DLC, and Female DLC.</br>
 * This native function is often called prior to calling natives such as:
 * *   [`SetPedHairColor`](#\_0xA23FE32C)
 * *   [`SetPedHeadOverlayColor`](#\_0x78935A27)
 * *   [`SetPedHeadOverlay`](#\_0xD28DBA90)
 * *   [`SetPedFaceFeature`](#\_0x6C8D4458)
 * Hash: 0x9414E18B9434C2FE | ApiSet: undefined
 */
export declare function setPedHeadBlendData(ped: number | Ped, shapeFirstID: number, shapeSecondID: number, shapeThirdID: number, skinFirstID: number, skinSecondID: number, skinThirdID: number, shapeMix: number, skinMix: number, thirdMix: number, isParent: boolean): void;
/**
 * Hash: 0x3F7325574E41B44D | ApiSet: undefined
 */
export declare function setPedHelmetUnk(ped: number | Ped, p1: boolean, p2: number, p3: number): void;
/**
 * Sets whether a pedestrian should wear a helmet.
 * Hash: 0x560A43136EB58105 | ApiSet: undefined
 */
export declare function setPedHelmet(ped: number | Ped, bEnable: boolean): void;
/**
 * Hash: 0xF107E836A70DCE05 | ApiSet: undefined
 */
export declare function setPedIdRange(ped: number | Ped, value: number): void;
/**
 * ```
 * `PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_PASSENGER"));`
 * `PED::SET_PED_IN_VEHICLE_CONTEXT(l_128, MISC::GET_HASH_KEY("MINI_PROSTITUTE_LOW_RESTRICTED_PASSENGER"));`
 * `PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT"));`
 * `PED::SET_PED_IN_VEHICLE_CONTEXT(l_3212, MISC::GET_HASH_KEY("MISS_FAMILY1_JIMMY_SIT_REAR"));`
 * `PED::SET_PED_IN_VEHICLE_CONTEXT(l_95, MISC::GET_HASH_KEY("MISS_FAMILY2_JIMMY_BICYCLE"));`
 * `PED::SET_PED_IN_VEHICLE_CONTEXT(num3, MISC::GET_HASH_KEY("MISSFBI2_MICHAEL_DRIVEBY"));`
 * `PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISS_ARMENIAN3_FRANKLIN_TENSE"));`
 * `PED::SET_PED_IN_VEHICLE_CONTEXT(PLAYER::PLAYER_PED_ID(), MISC::GET_HASH_KEY("MISSFBI5_TREVOR_DRIVING"));`
 * ```
 * Hash: 0x530071295899A8C6 | ApiSet: undefined
 */
export declare function setPedInVehicleContext(ped: number | Ped, context: number | string): void;
/**
 * Hash: 0xF1550C4BD22582E2 | ApiSet: undefined
 */
export declare function setPedHelmetTextureIndex(ped: number | Ped, textureIndex: number): void;
/**
 * Hash: 0x52D59AB61DDC05DD | ApiSet: undefined
 */
export declare function setPedHighlyPerceptive(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x570389D1C3DE3C6B | ApiSet: undefined
 */
export declare function setPedIncreasedAvoidanceRadius(ped: number | Ped): void;
/**
 * ```
 * "IK" stands for "Inverse kinematics." I assume this has something to do with how the ped uses his legs to balance. In the scripts, the second parameter is always an int with a value of 2, 0, or sometimes 1
 * ```
 * Hash: 0xC396F5B86FF9FEBD | ApiSet: undefined
 */
export declare function setPedLegIkMode(ped: number | Ped, mode: number): void;
/**
 * Hash: 0xDC2C5C242AAC342B | ApiSet: undefined
 */
export declare function setPedLodMultiplier(ped: number | Ped, multiplier: number): void;
/**
 * Hash: 0xF75B0D629E1C063D | ApiSet: undefined
 */
export declare function setPedIntoVehicle(ped: number | Ped, vehicle: number | Vehicle, seatIndex: number): void;
/**
 * Hash: 0x433083750C5E064A | ApiSet: undefined
 */
export declare function setPedMaxMoveBlendRatio(ped: number | Ped, value: number): void;
/**
 * Set the maximum time a ped can stay underwater. Maximum seems to be 50 seconds.
 * Hash: 0x6BA428C528D9E522 | ApiSet: undefined
 */
export declare function setPedMaxTimeUnderwater(ped: number | Ped, value: number): void;
/**
 * Hash: 0x43C851690662113D | ApiSet: undefined
 */
export declare function setPedMaxTimeInWater(ped: number | Ped, value: number): void;
/**
 * Hash: 0x971D38760FBC02EF | ApiSet: undefined
 */
export declare function setPedKeepTask(ped: number | Ped, toggle: boolean): void;
/**
 * Overwrites the minimum time the ped will stay on the ground for after being stunned. Setting this while the ped is stunned will not alter the duration of the current stun but will still effect future stuns.
 * Passing -1 into the second parameter `minTimeInMs` will reset the modifier, making it use the weapons original `DamageTime` as the stun duration (see `update/update.rpf/common/data/ai/weapons.meta`)
 * **NOTE**: Unlike what the native name implies, this works on any weapon that has its `DamageType` in the `weapons.meta` set to `ELECTRIC`.
 * Hash: 0xFA0675AB151073FA | ApiSet: undefined
 */
export declare function setPedMinGroundTimeForStungun(ped: number | Ped, minTimeInMs: number): void;
/**
 * ```
 * Maximum possible amount of money on MP is 2000. ~JX
 * -----------------------------------------------------------------------------
 * Maximum amount that a ped can theoretically have is 65535 (0xFFFF) since the amount is stored as an unsigned short (uint16_t) value.
 * ```
 * Hash: 0xA9C8960E8684C1B5 | ApiSet: undefined
 */
export declare function setPedMoney(ped: number | Ped, amount: number): void;
/**
 * Hash: 0xE163A4BCE4DE6F11 | ApiSet: undefined
 */
export declare function setPedModelIsSuppressed(model: number | string, toggle: boolean): void;
/**
 * Hash: 0xF5F6378C4F3419D3 | ApiSet: undefined
 */
export declare function setPedMaxHealth(ped: number | Ped, value: number): void;
/**
 * Hash: 0x01A898D26E2333DD | ApiSet: undefined
 */
export declare function setPedMinMoveBlendRatio(ped: number | Ped, value: number): void;
/**
 * Hash: 0x0A986918B102B448 | ApiSet: undefined
 */
export declare function setPedMotionBlur(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * List of movement clipsets:
 * Thanks to elsewhat for list.
 * "ANIM_GROUP_MOVE_BALLISTIC"
 * "ANIM_GROUP_MOVE_LEMAR_ALLEY"
 * "clipset@move@trash_fast_turn"
 * "FEMALE_FAST_RUNNER"
 * "missfbi4prepp1_garbageman"
 * "move_characters@franklin@fire"
 * "move_characters@Jimmy@slow@"
 * "move_characters@michael@fire"
 * "move_f@flee@a"
 * "move_f@scared"
 * "move_f@sexy@a"
 * "move_heist_lester"
 * "move_injured_generic"
 * "move_lester_CaneUp"
 * "move_m@bag"
 * "MOVE_M@BAIL_BOND_NOT_TAZERED"
 * "MOVE_M@BAIL_BOND_TAZERED"
 * "move_m@brave"
 * "move_m@casual@d"
 * "move_m@drunk@moderatedrunk"
 * "MOVE_M@DRUNK@MODERATEDRUNK"
 * "MOVE_M@DRUNK@MODERATEDRUNK_HEAD_UP"
 * "MOVE_M@DRUNK@SLIGHTLYDRUNK"
 * "MOVE_M@DRUNK@VERYDRUNK"
 * "move_m@fire"
 * "move_m@gangster@var_e"
 * "move_m@gangster@var_f"
 * "move_m@gangster@var_i"
 * "move_m@JOG@"
 * "MOVE_M@PRISON_GAURD"
 * "MOVE_P_M_ONE"
 * "MOVE_P_M_ONE_BRIEFCASE"
 * "move_p_m_zero_janitor"
 * "move_p_m_zero_slow"
 * "move_ped_bucket"
 * "move_ped_crouched"
 * "move_ped_mop"
 * "MOVE_M@FEMME@"
 * "MOVE_F@FEMME@"
 * "MOVE_M@GANGSTER@NG"
 * "MOVE_F@GANGSTER@NG"
 * "MOVE_M@POSH@"
 * "MOVE_F@POSH@"
 * "MOVE_M@TOUGH_GUY@"
 * "MOVE_F@TOUGH_GUY@"
 * ~ NotCrunchyTaco
 * ```
 * Hash: 0xAF8A94EDE7712BEF | ApiSet: undefined
 */
export declare function setPedMovementClipset(ped: number | Ped, clipSet: string, transitionSpeed: number): void;
/**
 * ```
 * NOTE: Debugging functions are not present in the retail version of the game.
 * *untested but char *name could also be a hash for a localized string
 * ```
 * Hash: 0x98EFA132A4117BE1 | ApiSet: undefined
 */
export declare function setPedNameDebug(ped: number | Ped, name: string): void;
/**
 * ```
 * The distance between these points, is the diagonal of a box (remember it's 3D).
 * ```
 * Hash: 0xEE01041D559983EA | ApiSet: undefined
 */
export declare function setPedNonCreationArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): void;
/**
 * ```
 * Min: 0.00
 * Max: 10.00
 * Can be used in combo with fast run cheat.
 * When value is set to 10.00:
 * Sprinting without fast run cheat: 66 m/s
 * Sprinting with fast run cheat: 77 m/s
 * Needs to be looped!
 * Note: According to IDA for the Xbox360 xex, when they check bgt they seem to have the min to 0.0f, but the max set to 1.15f not 10.0f.
 * ```
 * Hash: 0x085BF80FA50A39D1 | ApiSet: undefined
 */
export declare function setPedMoveRateOverride(ped: number | Ped, value: number): void;
/**
 * ```
 * i could be time. Only example in the decompiled scripts uses it as -1.
 * ```
 * Hash: 0xAAD6D1ACF08F4612 | ApiSet: undefined
 */
export declare function setPedPinnedDown(ped: number | Ped, pinned: boolean, i: number): any;
/**
 * Hash: 0xFE07FF6495D52E2A | ApiSet: undefined
 */
export declare function setPedPanicExitScenario(ped: number | Ped, position: Vector3): any;
/**
 * Hash: 0x9E8C908F41584ECD | ApiSet: undefined
 */
export declare function setPedMoveAnimsBlendOut(ped: number | Ped): void;
/**
 * Hash: 0x333FC8DB079B7186 | ApiSet: undefined
 */
export declare function setPedParachuteTintIndex(ped: number | Ped, tintIndex: number): void;
/**
 * Hash: 0x3DBFC55D5C9BB447 | ApiSet: undefined
 */
export declare function setPedNeverLeavesGroup(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x2B16A3BFF1FBCE49 | ApiSet: undefined
 */
export declare function setPedPreloadPropData(ped: number | Ped, componentId: number, drawableId: number, textureId: number): boolean;
/**
 * Sets the palette index of a ped's phone.
 * | Value | Color      |
 * | :---: | :-----:    |
 * |  `0`  | Light Blue |
 * |  `1`  | Green      |
 * |  `2`  | Red        |
 * |  `3`  | Orange     |
 * |  `4`  | Grey       |
 * |  `5`  | Purple     |
 * |  `6`  | Pink       |
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x83A169EABCDB10A2 | ApiSet: undefined
 */
export declare function setPedPhonePaletteIdx(ped: number | Ped, index: number): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * ```
 * Points to the same function as for example GET_RANDOM_VEHICLE_MODEL_IN_MEMORY and it does absolutely nothing.
 * ```
 * Hash: 0x94D94BF1A75AED3D | ApiSet: undefined
 */
export declare function setPedPlaysHeadOnHornAnimWhenDiesInVehicle(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0xADB3F206518799E8 | ApiSet: undefined
 */
export declare function setPedRelationshipGroupDefaultHash(ped: number | Ped, hash: number | string): void;
/**
 * Hash: 0x8421EB4DA7E391B9 | ApiSet: undefined
 */
export declare function setPedPreferredCoverSet(ped: number | Ped, itemSet: any): void;
/**
 * ```
 * from extreme3.c4
 * `PED::_39D55A620FCB6A3A(PLAYER::PLAYER_PED_ID(), 8, PED::GET_PED_DRAWABLE_VARIATION(PLAYER::PLAYER_PED_ID(), 8), PED::GET_PED_TEXTURE_VARIATION(PLAYER::PLAYER_PED_ID(), 8));`
 * p1 is probably componentId
 * ```
 * Hash: 0x39D55A620FCB6A3A | ApiSet: undefined
 */
export declare function setPedPreloadVariationData(ped: number | Ped, slot: number, drawableId: number, textureId: number): any;
/**
 * This native is used to set prop variation on a ped. Components, drawables and textures IDs are related to the ped model.
 * ### MP Freemode list of props
 * **0**: Hats
 * **1**: Glasses
 * **2**: Ears
 * **6**: Watches
 * **7**: Bracelets
 * List of Prop IDs
 * ```cpp
 * enum eAnchorPoints
 * {
 * ANCHOR_HEAD = 0, // "p_head"
 * ANCHOR_EYES = 1, // "p_eyes"
 * ANCHOR_EARS = 2, // "p_ears"
 * ANCHOR_MOUTH = 3, // "p_mouth"
 * ANCHOR_LEFT_HAND = 4, // "p_lhand"
 * ANCHOR_RIGHT_HAND = 5, // "p_rhand"
 * ANCHOR_LEFT_WRIST = 6, // "p_lwrist"
 * ANCHOR_RIGHT_WRIST = 7, // "p_rwrist"
 * ANCHOR_HIP = 8, // "p_lhip"
 * ANCHOR_LEFT_FOOT = 9, // "p_lfoot"
 * ANCHOR_RIGHT_FOOT = 10, // "p_rfoot"
 * ANCHOR_PH_L_HAND = 11, // "ph_lhand"
 * ANCHOR_PH_R_HAND = 12, // "ph_rhand"
 * NUM_ANCHORS = 13,
 * };
 * ```
 * Hash: 0x93376B65A266EB5F | ApiSet: undefined
 */
export declare function setPedPropIndex(ped: number | Ped, componentId: number, drawableId: number, textureId: number, attach: boolean): void;
/**
 * Hash: 0xC80A74AC829DDD92 | ApiSet: undefined
 */
export declare function setPedRelationshipGroupHash(ped: number | Ped, hash: number | string): void;
/**
 * ```
 * This is only called once in the scripts.
 * sub_1CD9(&l_49, 0, getElem(3, &l_34, 4), "MICHAEL", 0, 1);
 * sub_1CA8("WORLD_HUMAN_SMOKING", 2);
 * `PED::SET_PED_PRIMARY_LOOKAT(getElem(3, &l_34, 4), PLAYER::PLAYER_PED_ID());`
 * ```
 * Hash: 0xCD17B554996A8D9E | ApiSet: undefined
 */
export declare function setPedPrimaryLookat(ped: number | Ped, lookAt: number | Ped): void;
/**
 * Causes Ped to ragdoll on collision with any object (e.g Running into trashcan). If applied to player you will sometimes trip on the sidewalk.
 * Needs to be recalled after each ragdoll from a Collision.
 * Hash: 0xF0A4F1BBF4FA7497 | ApiSet: undefined
 */
export declare function setPedRagdollOnCollision(ped: number | Ped, toggle: boolean): void;
/**
 * This native sets a scuba mask for freemode models and an oxygen bottle for player_\* models. It works on freemode and player_\* models.
 * Hash: 0x36C6984C3ED0C911 | ApiSet: undefined
 */
export declare function setPedScubaGearVariation(ped: number | Ped): void;
/**
 * Hash: 0x01F6594B923B9251 | ApiSet: undefined
 */
export declare function setPedRagdollForceFall(ped: number | Ped): void;
/**
 * ```
 * p1 is always 0 in R* scripts; and a quick disassembly seems to indicate that p1 is unused.
 * ```
 * Hash: 0xC8A9481A01E63C28 | ApiSet: undefined
 */
export declare function setPedRandomComponentVariation(ped: number | Ped, p1: number): void;
/**
 * `PED::SET_PED_RESET_FLAG(PLAYER::PLAYER_PED_ID(), 240, 1);`
 * Known values:
 * Hash: 0xC1E8A365BF3B29F2 | ApiSet: undefined
 */
export declare function setPedResetFlag(ped: number | Ped, flagId: number, doReset: boolean): void;
/**
 * Hash: 0xF29CF591C4BF6CEE | ApiSet: undefined
 */
export declare function setPedSeeingRange(ped: number | Ped, value: number): void;
/**
 * Hash: 0xC44AA05345C992C6 | ApiSet: undefined
 */
export declare function setPedRandomProps(ped: number | Ped): void;
/**
 * Hash: 0xEEED8FAFEC331A70 | ApiSet: undefined
 */
export declare function setPedShouldPlayFleeScenarioExit(ped: number | Ped, p1: any, p2: any, p3: any): any;
/**
 * Hash: 0xE88DA0751C22A2AD | ApiSet: undefined
 */
export declare function setPedReserveParachuteTintIndex(ped: number | Ped, p1: any): void;
/**
 * ```
 * shootRate 0-1000
 * ```
 * Hash: 0x614DA022990752DC | ApiSet: undefined
 */
export declare function setPedShootRate(ped: number | Ped, shootRate: number): void;
/**
 * Hash: 0xEDF4079F9D54C9A1 | ApiSet: undefined
 */
export declare function setPedStayInVehicleWhenJacked(ped: number | Ped, toggle: boolean): void;
/**
 * When this ped receives its next script task, they will exit from their scenario using the normal scenario exit.
 * Exiting the scenario may take several frames while the ped is playing the exit animation.
 * If the ped is not currently using a scenario at the time of the command or 0,0,0 is specified as the reaction position,
 * then the ped will by default attempt to direct their exit forwards.
 * Hash: 0xEC6935EBE0847B90 | ApiSet: undefined
 */
export declare function setPedShouldPlayDirectedScenarioExit(ped: number | Ped, position: Vector3): boolean;
/**
 * Fires a weapon at a coordinate using a ped.
 * Hash: 0x96A05E4FB321B1BA | ApiSet: undefined
 */
export declare function setPedShootsAtCoord(ped: number | Ped, position: Vector3, toggle: boolean): void;
/**
 * Hash: 0xA3A9299C4F2ADB98 | ApiSet: undefined
 */
export declare function setPedShouldPlayNormalScenarioExit(ped: number | Ped): void;
/**
 * Hash: 0x9D3151A373974804 | ApiSet: undefined
 */
export declare function setPedSphereDefensiveArea(ped: number | Ped, position: Vector3, radius: number, p5: boolean, p6: boolean): void;
/**
 * Hash: 0xF1C03A5352243A30 | ApiSet: undefined
 */
export declare function setPedShouldPlayImmediateScenarioExit(ped: number | Ped): void;
/**
 * Hash: 0xEB6FB9D48DDE23EC | ApiSet: undefined
 */
export declare function setPedSteersAroundVehicles(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x1509C089ADC208BF | ApiSet: undefined
 */
export declare function setPedSteersAroundObjects(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x46F2193B3AD1D891 | ApiSet: undefined
 */
export declare function setPedSteersAroundPeds(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * p1 is usually 0 in the scripts. action is either 0 or a pointer to "DEFAULT_ACTION".
 * ```
 * Hash: 0x88CBB5CEB96B7BD2 | ApiSet: undefined
 */
export declare function setPedStealthMovement(ped: number | Ped, p1: boolean, action: string): void;
/**
 * Hash: 0x29A28F3F8CF6D854 | ApiSet: undefined
 */
export declare function setPedStrafeClipset(ped: number | Ped, clipSet: string): void;
/**
 * Allows marine animals to survive outside of water (R\* is using it for sharks).
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0x100CD221F572F6E1 | ApiSet: undefined
 */
export declare function setPedSurvivesBeingOutOfWater(ped: number | Ped, toggle: boolean): boolean;
/**
 * Ped no longer takes critical damage modifiers if set to FALSE.
 * Example: Headshotting a player no longer one shots them. Instead they will take the same damage as a torso shot.
 * Hash: 0xEBD76F2359F190AC | ApiSet: undefined
 */
export declare function setPedSuffersCriticalHits(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * Sweat is set to 100.0 or 0.0 in the decompiled scripts.
 * ```
 * Hash: 0x27B0405F59637D1F | ApiSet: undefined
 */
export declare function setPedSweat(ped: number | Ped, sweat: number): void;
/**
 * ```
 * Only 1 and 2 appear in the scripts. combatbehaviour.meta seems to only have TLR_SearchForTarget for all peds, but we don't know if that's 1 or 2.
 * ```
 * Hash: 0x0703B9079823DA4A | ApiSet: undefined
 */
export declare function setPedTargetLossResponse(ped: number | Ped, responseType: number): void;
/**
 * Hash: 0x112942C6E708F70B | ApiSet: undefined
 */
export declare function setPedToInformRespectedFriends(ped: number | Ped, radius: number, maxFriends: number): void;
/**
 * ```
 * p2 is usually -1 in the scripts. action is either 0 or "DEFAULT_ACTION".
 * ```
 * Hash: 0xD75ACCF5E0FB5367 | ApiSet: undefined
 */
export declare function setPedUsingActionMode(ped: number | Ped, p1: boolean, p2: number, action: string): void;
/**
 * p4/p5: Unusued in TU27
 * ### Ragdoll Types
 * **0**: CTaskNMRelax
 * **1**: CTaskNMScriptControl: Hardcoded not to work in networked environments.
 * **Else**: CTaskNMBalance
 * Hash: 0xAE99FB955581844A | ApiSet: undefined
 */
export declare function setPedToRagdoll(ped: number | Ped, minTime: number, maxTime: number, ragdollType: number, bAbortIfInjured: boolean, bAbortIfDead: boolean, bForceScriptControl: boolean): boolean;
/**
 * ```cpp
 * enum eNMFallType {
 * TYPE_FROM_HIGH = 0,
 * TYPE_OVER_WALL = 1,
 * TYPE_DOWN_STAIRS = 2,
 * TYPE_DIE_TYPES = 3,
 * TYPE_DIE_FROM_HIGH = 4,
 * TYPE_DIE_OVER_WALL = 5,
 * TYPE_DIE_DOWN_STAIRS = 6
 * }
 * ```
 * ```
 * Return variable is never used in R*'s scripts.
 * Not sure what p2 does. It seems like it would be a time judging by it's usage in R*'s scripts, but didn't seem to affect anything in my testings.
 * x, y, and z are coordinates, most likely to where the ped will fall.
 * p7 is probably the force of the fall, but untested, so I left the variable name the same.
 * p8 to p13 are always 0f in R*'s scripts.
 * (Simplified) Example of the usage of the function from R*'s scripts:
 * `ped::set_ped_to_ragdoll_with_fall(ped, 1500, 2000, 1, -entity::get_entity_forward_vector(ped), 1f, 0f, 0f, 0f, 0f, 0f, 0f);`
 * ```
 * Hash: 0xD76632D99E4966C8 | ApiSet: undefined
 */
export declare function setPedToRagdollWithFall(ped: number | Ped, minTime: number, maxTime: number, nFallType: number, dirX: number, dirY: number, dirZ: number, fGroundHeight: number, grab1X: number, grab1Y: number, grab1Z: number, grab2X: number, grab2Y: number, grab2Z: number): boolean;
/**
 * Hash: 0x332B562EEDA62399 | ApiSet: undefined
 */
export declare function setPedToLoadCover(ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * NativeDB Added Parameter 5: Any p4
 * ```
 * Hash: 0x952F06BEECD775CC | ApiSet: undefined
 */
export declare function setPedVehicleForcedSeatUsage(ped: number | Ped, vehicle: number | Vehicle, seatIndex: number, flags: number): void;
/**
 * Hash: 0x3B6405E8AB34A907 | ApiSet: undefined
 */
export declare function setPedVisualFieldCenterAngle(ped: number | Ped, angle: number): void;
/**
 * Hash: 0x70793BDCA1E854D4 | ApiSet: undefined
 */
export declare function setPedVisualFieldMaxAngle(ped: number | Ped, value: number): void;
/**
 * ```
 * This native refers to the field of vision the ped has above them, starting at 0 degrees. 90f would let the ped see enemies directly above of them.
 * ```
 * Hash: 0x78D0B67629D75856 | ApiSet: undefined
 */
export declare function setPedVisualFieldMaxElevationAngle(ped: number | Ped, angle: number): void;
/**
 * Hash: 0x9C74B0BC831B753A | ApiSet: undefined
 */
export declare function setPedVisualFieldPeripheralRange(ped: number | Ped, range: number): void;
/**
 * ```
 * This native refers to the field of vision the ped has below them, starting at 0 degrees. The angle value should be negative.
 * ```
 * Hash: 0x7A276EB2C224D70F | ApiSet: undefined
 */
export declare function setPedVisualFieldMinElevationAngle(ped: number | Ped, angle: number): void;
/**
 * ```
 * It adds the wetness level to the player clothing/outfit. As if player just got out from water surface.
 * ```
 * Hash: 0x44CB6447D2571AA0 | ApiSet: undefined
 */
export declare function setPedWetnessHeight(ped: number | Ped, height: number): void;
/**
 * Hash: 0x2622E35B77D3ACA2 | ApiSet: undefined
 */
export declare function setPedWeaponMovementClipset(ped: number | Ped, clipSet: string): void;
/**
 * ```
 * Min and max are usually 100.0 and 200.0
 * ```
 * Hash: 0xD8C3BE3EE94CAF2D | ApiSet: undefined
 */
export declare function setPopControlSphereThisFrame(position: Vector3, min: number, max: number): void;
/**
 * ```
 * Sets the relationship between two groups. This should be called twice (once for each group).
 * Relationship types:
 * 0 = Companion
 * 1 = Respect
 * 2 = Like
 * 3 = Neutral
 * 4 = Dislike
 * 5 = Hate
 * 255 = Pedestrians
 * Example:
 * `PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, l_1017, 0xA49E591C);`
 * `PED::SET_RELATIONSHIP_BETWEEN_GROUPS(2, 0xA49E591C, l_1017);`
 * ```
 * Hash: 0xBF25EB89375A37AD | ApiSet: undefined
 */
export declare function setRelationshipBetweenGroups(relationship: number, group1: number | string, group2: number | string): void;
/**
 * Hash: 0x2DB492222FB21E26 | ApiSet: undefined
 */
export declare function setPedVisualFieldMinAngle(ped: number | Ped, value: number): void;
/**
 * Hash: 0x5615E0C5EB2BC6E2 | ApiSet: undefined
 */
export declare function setRelationshipGroupDontAffectWantedLevel(group: number | string, p1: boolean): void;
/**
 * ```
 * `combined with PED::SET_PED_WETNESS_HEIGHT(), this native makes the ped drenched in water up to the height specified in the other function`
 * ```
 * Hash: 0xB5485E4907B53019 | ApiSet: undefined
 */
export declare function setPedWetnessEnabledThisFrame(ped: number | Ped): void;
/**
 * ```
 * Sets a value indicating whether scenario peds should be returned by the next call to a command that returns peds. Eg. GET_CLOSEST_PED.
 * ```
 * Hash: 0x14F19A8782C8071E | ApiSet: undefined
 */
export declare function setScenarioPedsToBeReturnedByNextCommand(value: boolean): void;
/**
 * Set the number of scenario peds on the entire map
 * Hash: 0x7A556143A1C03898 | ApiSet: undefined
 */
export declare function setScenarioPedDensityMultiplierThisFrame(interiorMult: number, exteriorMult: number): void;
/**
 * Hash: 0x5086C7843552CF85 | ApiSet: undefined
 */
export declare function setScriptedConversionCoordThisFrame(position: Vector3): void;
/**
 * ```
 * Works for both player and peds, but some flags don't seem to work for the player (1, for example)
 * 1 - Blocks ragdolling when shot.
 * 2 - Blocks ragdolling when hit by a vehicle. The ped still might play a falling animation.
 * 4 - Blocks ragdolling when set on fire.
 * -----------------------------------------------------------------------
 * There seem to be 26 flags
 * ```
 * Hash: 0x26695EC767728D84 | ApiSet: undefined
 */
export declare function setRagdollBlockingFlags(ped: number | Ped, flags: number): void;
/**
 * Hash: 0x28157D43CF600981 | ApiSet: undefined
 */
export declare function setScenarioPedsSpawnInSphereArea(position: Vector3, range: number, p4: number): void;
/**
 * Hash: 0xD9A897A4C6C2974F | ApiSet: undefined
 */
export declare function setSynchronizedSceneLooped(sceneID: number, toggle: boolean): void;
/**
 * Hash: 0x5917BBA32D06C230 | ApiSet: undefined
 */
export declare function setScriptedAnimSeatOffset(ped: number | Ped, p1: number): void;
/**
 * Hash: 0x734292F4F0ABF6D0 | ApiSet: undefined
 */
export declare function setSynchronizedScenePhase(sceneID: number, phase: number): void;
/**
 * Hash: 0x394B9CD12435C981 | ApiSet: undefined
 */
export declare function setSynchronizedSceneHoldLastFrame(sceneID: number, toggle: boolean): void;
/**
 * Hash: 0xA635C11B8C44AFC2 | ApiSet: undefined
 */
export declare function spawnpointsGetNumSearchResults(): number;
/**
 * Hash: 0xB6C49F8A5E295A5D | ApiSet: undefined
 */
export declare function setSynchronizedSceneRate(sceneID: number, rate: number): void;
/**
 * Hash: 0x6ACF6B7225801CD7 | ApiSet: undefined
 */
export declare function setSynchronizedSceneOrigin(sceneID: number, position: Vector3, roll: number, pitch: number, yaw: number, p7: boolean): void;
/**
 * Hash: 0xA586FBEB32A53DBB | ApiSet: undefined
 */
export declare function spawnpointsIsSearchComplete(): boolean;
/**
 * Hash: 0xB782F8238512BAD5 | ApiSet: undefined
 */
export declare function spawnpointsGetSearchResultFlags(p0: any): any;
/**
 * Hash: 0x280C7E3AC7F56E90 | ApiSet: undefined
 */
export declare function spawnpointsGetSearchResult(randomInt: number): [number, number, number];
/**
 * Hash: 0xFEE4A5459472A9F8 | ApiSet: undefined
 */
export declare function spawnpointsCancelSearch(): void;
/**
 * Hash: 0xB2AFF10216DEFA2F | ApiSet: undefined
 */
export declare function spawnpointsStartSearchInAngledArea(position: Vector3, p3: number, p4: number, p5: number, p6: number, interiorFlags: number, scale: number, duration: number): void;
/**
 * Hash: 0xF445DE8DA80A1792 | ApiSet: undefined
 */
export declare function spawnpointsIsSearchFailed(): boolean;
/**
 * Hash: 0x3C67506996001F5E | ApiSet: undefined
 */
export declare function spawnpointsIsSearchActive(): boolean;
/**
 * Hash: 0xB47BD05FA66B40CF | ApiSet: undefined
 */
export declare function stopAnyPedModelBeingSuppressed(): void;
/**
 * Hash: 0x2DF9038C90AD5264 | ApiSet: undefined
 */
export declare function spawnpointsStartSearch(p0: number, p1: number, p2: number, p3: number, p4: number, interiorFlags: number, scale: number, duration: number): void;
/**
 * Kicks the ped from the current vehicle and keeps the rendering-focus on this ped (also disables its collision). If doing this for your player ped, you'll still be able to drive the vehicle.\
 * Only to be used in very specific situations where the ped needs to be inside the car still but not attached.
 * Hash: 0xF9ACF4A08098EA25 | ApiSet: undefined
 */
export declare function specialFunctionDoNotUse(ped: number | Ped, noCollisionUntilClear: boolean): void;
/**
 * ```
 * gtaforums.com/topic/885580-ped-headshotmugshot-txd/
 * ```
 * Hash: 0x96B1361D9B24C2FF | ApiSet: undefined
 */
export declare function unregisterPedheadshot(id: number): void;
/**
 * Hash: 0xCD9CC7E200A52A6F | ApiSet: undefined
 */
export declare function takeOwnershipOfSynchronizedScene(scene: number): void;
/**
 * Hash: 0xC158D28142A34608 | ApiSet: undefined
 */
export declare function stopPedWeaponFiringWhenDropped(ped: number | Ped): void;
/**
 * See [`SET_PED_HEAD_BLEND_DATA`](#\_0x9414E18B9434C2FE)
 * Hash: 0x723538F61C647C5A | ApiSet: undefined
 */
export declare function updatePedHeadBlendData(ped: number | Ped, shapeMix: number, skinMix: number, thirdMix: number): void;
/**
 * Hash: 0x61767F73EACEED21 | ApiSet: undefined
 */
export declare function wasPedKnockedOut(ped: number | Ped): boolean;
/**
 * Verifies whether ped was eliminated through stealth.
 * Hash: 0xF9800AA1A771B000 | ApiSet: undefined
 */
export declare function wasPedKilledByStealth(ped: number | Ped): boolean;
/**
 * Hash: 0x7F08E26039C7347C | ApiSet: undefined
 */
export declare function wasPedKilledByTakedown(ped: number | Ped): boolean;
/**
 * ```
 * Despite this function's name, it simply returns whether the specified handle is a Ped.
 * ```
 * Hash: 0x11B499C1E0FF8559 | ApiSet: undefined
 */
export declare function wasPedSkeletonUpdated(ped: number | Ped): boolean;
/**
 * ```
 * I'm guessing this rounds a float value up to the next whole number, and FLOOR rounds it down
 * ```
 * Hash: 0x11E019C8F43ACC8A | ApiSet: undefined
 */
export declare function ceil(value: number): number;
/**
 * Returns the cosine of the given number.
 * Hash: 0xD0FFB162F40A139C | ApiSet: undefined
 */
export declare function cos(value: number): number;
/**
 * Hash: 0xF34EE736CF047844 | ApiSet: undefined
 */
export declare function floor(value: number): number;
/**
 * Hash: 0xF2DB717A73826179 | ApiSet: undefined
 */
export declare function round(value: number): number;
/**
 * Hash: 0xE3621CC40F31FE2E | ApiSet: undefined
 */
export declare function pow(base: number, exponent: number): number;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xE816E655DE37FE20 | ApiSet: undefined
 */
export declare function log10(value: number): number;
/**
 * Sets the value for the timer A in milliseconds
 * Hash: 0xC1B1E9A034A63A62 | ApiSet: undefined
 */
export declare function settimera(value: number): void;
/**
 * ```
 * 0 = high
 * 1 = normal
 * 2 = low
 * ```
 * Hash: 0x42B65DEEF2EDF2A1 | ApiSet: undefined
 */
export declare function setThreadPriority(priority: number): void;
/**
 * Sets the value for the timer B in milliseconds
 * Hash: 0x5AE11BC36633DE4E | ApiSet: undefined
 */
export declare function settimerb(value: number): void;
/**
 * Left bit shifts a value.
 * It is advised you use the `<<` operator instead of this native. It does the same and is faster.
 * Hash: 0xEDD95A39E5544DE8 | ApiSet: undefined
 */
export declare function shiftLeft(value: number, bitShift: number): number;
/**
 * Returns the sine of the given number.
 * Hash: 0x0BADBFA3B172435F | ApiSet: undefined
 */
export declare function sin(value: number): number;
/**
 * Right bit shifts a value.
 * It is advised you use the `>>` operator instead of this native. It does the same and is faster.
 * Hash: 0x97EF1E5BCE9DC075 | ApiSet: undefined
 */
export declare function shiftRight(value: number, bitShift: number): number;
/**
 * ```
 * Examples:
 * `g_384A = SYSTEM::START_NEW_SCRIPT("cellphone_flashhand", 1424);`
 * `l_10D = SYSTEM::START_NEW_SCRIPT("taxiService", 1828);`
 * `SYSTEM::START_NEW_SCRIPT("AM_MP_YACHT", 5000);`
 * `SYSTEM::START_NEW_SCRIPT("emergencycall", 512);`
 * `SYSTEM::START_NEW_SCRIPT("emergencycall", 512);`
 * `SYSTEM::START_NEW_SCRIPT("FM_maintain_cloud_header_data", 1424);`
 * `SYSTEM::START_NEW_SCRIPT("FM_Mission_Controller", 31000);`
 * `SYSTEM::START_NEW_SCRIPT("tennis_family", 3650);`
 * `SYSTEM::START_NEW_SCRIPT("Celebrations", 3650);`
 * Decompiled examples of usage when starting a script:
 * `SCRIPT::REQUEST_SCRIPT(a_0);`
 * `if (SCRIPT::HAS_SCRIPT_LOADED(a_0)) {`
 * `SYSTEM::START_NEW_SCRIPT(a_0, v_3);`
 * `SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(a_0);`
 * return 1;
 * }
 * or:
 * v_2 = "MrsPhilips2";
 * `SCRIPT::REQUEST_SCRIPT(v_2);`
 * `while (!SCRIPT::HAS_SCRIPT_LOADED(v_2)) {`
 * `SCRIPT::REQUEST_SCRIPT(v_2);`
 * `SYSTEM::WAIT(0);`
 * }
 * sub_8792(36);
 * `SYSTEM::START_NEW_SCRIPT(v_2, 17000);`
 * `SCRIPT::SET_SCRIPT_AS_NO_LONGER_NEEDED(v_2);`
 * All native script names: pastebin.com/K9adDsu4 and pastebin.com/yLNWicUi
 * ```
 * Hash: 0xE81651AD79516E48 | ApiSet: undefined
 */
export declare function startNewScript(scriptName: string, stackSize: number): number;
/**
 * ```
 * return : script thread id, 0 if failed
 * Pass pointer to struct of args in p1, size of struct goes into p2
 * ```
 * Hash: 0xB8BA7F44DF1575E1 | ApiSet: undefined
 */
export declare function startNewScriptWithArgs(scriptName: string, argCount: number, stackSize: number): [number, any];
/**
 * Hash: 0x71D93B57D07F9804 | ApiSet: undefined
 */
export declare function sqrt(value: number): number;
/**
 * Hash: 0xC4BB298BD441BE78 | ApiSet: undefined
 */
export declare function startNewScriptWithNameHashAndArgs(scriptHash: number | string, argCount: number, stackSize: number): [number, any];
/**
 * Hash: 0xC9D9444186B5A374 | ApiSet: undefined
 */
export declare function timerb(): number;
/**
 * ```
 * Counts up. Every 1000 is 1 real-time second. Use SETTIMERA(int value) to set the timer (e.g.: SETTIMERA(0)).
 * ```
 * Hash: 0x83666F9FB8FEBD4B | ApiSet: undefined
 */
export declare function timera(): number;
/**
 * Hash: 0xEB1C67C3A5333A92 | ApiSet: undefined
 */
export declare function startNewScriptWithNameHash(scriptHash: number | string, stackSize: number): number;
/**
 * ```
 * Gets the current frame time.
 * ```
 * Hash: 0x0000000050597EE2 | ApiSet: undefined
 */
export declare function timestep(): number;
/**
 * Calculates the distance between two points in 3D space. For performance reasons, consider using direct mathematical calculations for distance, as they can be more efficient than calling this native function.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x2A488C176D52CCA5 | ApiSet: undefined
 */
export declare function vdist(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
/**
 * Hash: 0xBBDA792448DB5A89 | ApiSet: undefined
 */
export declare function toFloat(value: number): number;
/**
 * ```
 * Calculates the magnitude of a vector.
 * ```
 * Hash: 0x652D2EEEF1D3E62C | ApiSet: undefined
 */
export declare function vmag(position: Vector3): number;
/**
 * Calculates distance between vectors but does not perform Sqrt operations. Its way faster than [`VDIST`](#\_0x2A488C176D52CCA5), but it's not faster than direct mathematical calculations.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xB7A628320EFF8E47 | ApiSet: undefined
 */
export declare function vdist2(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
/**
 * ```
 * Calculates the magnitude of a vector but does not perform Sqrt operations. (Its way faster)
 * ```
 * Hash: 0xA8CEACB4F35AE058 | ApiSet: undefined
 */
export declare function vmag2(position: Vector3): number;
/**
 * ```
 * Pauses execution of the current script, please note this behavior is only seen when called from one of the game script files(ysc). In order to wait an asi script use "static void WAIT(DWORD time);" found in main.h
 * ```
 * Hash: 0x4EDE34FBADD967A6 | ApiSet: undefined
 */
export declare function wait(ms: number): void;
/**
 * Hash: 0x8E2A065ABDAE6994 | ApiSet: undefined
 */
export declare function allowPlayerSwitchAscent(): void;
/**
 * Hash: 0x0BC3144DEB678666 | ApiSet: undefined
 */
export declare function addModelToCreatorBudget(modelHash: number | string): boolean;
/**
 * Hash: 0x9BADDC94EF83B823 | ApiSet: undefined
 */
export declare function beginSrl(): void;
/**
 * Hash: 0xAD5FDF34B81BFE79 | ApiSet: undefined
 */
export declare function allowPlayerSwitchDescent(): void;
/**
 * Hash: 0x31B73D1EA9F01DA2 | ApiSet: undefined
 */
export declare function clearFocus(): void;
/**
 * Hash: 0x2DA49C3B79856961 | ApiSet: undefined
 */
export declare function doesAnimDictExist(animDict: string): boolean;
/**
 * Hash: 0x43D1680C6D19A8E9 | ApiSet: undefined
 */
export declare function allowPlayerSwitchPan(): void;
/**
 * Hash: 0x74DE2E8739086740 | ApiSet: undefined
 */
export declare function allowPlayerSwitchOutro(): void;
/**
 * ```
 * x1, y1, z1 -- Coords of your ped model
 * x2, y2, z2 -- Coords of the ped you want to switch to
 * ```
 * Hash: 0xB5D7B26B45720E05 | ApiSet: undefined
 */
export declare function getIdealPlayerSwitchType(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): number;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xF741BD853611592D | ApiSet: undefined
 */
export declare function getGlobalWaterType(): number;
/**
 * Hash: 0xCE58B1CFB9290813 | ApiSet: undefined
 */
export declare function clearHdArea(): void;
/**
 * Hash: 0xBD605B8E0E18B3BB | ApiSet: undefined
 */
export declare function disableSwitchOutroFx(): void;
/**
 * Hash: 0x0C15B0E443B2349D | ApiSet: undefined
 */
export declare function getLodscale(): number;
/**
 * Hash: 0x20F898A5D9782800 | ApiSet: undefined
 */
export declare function getPlayerShortSwitchState(): number;
/**
 * Hash: 0xD4793DFF3AF2ABCD | ApiSet: undefined
 */
export declare function enableSwitchPauseBeforeDescent(): void;
/**
 * Hash: 0x08C2D6C52A3104BB | ApiSet: undefined
 */
export declare function getPlayerSwitchInterpOutDuration(): number;
/**
 * Clear the current srl and stop rendering the area selected by PREFETCH_SRL and started with BEGIN_SRL.
 * Hash: 0x0A41540E63C9EE17 | ApiSet: undefined
 */
export declare function endSrl(): void;
/**
 * Hash: 0x78C0D93253149435 | ApiSet: undefined
 */
export declare function getPlayerSwitchJumpCutIndex(): number;
/**
 * Hash: 0x4060057271CEBC89 | ApiSet: undefined
 */
export declare function getNumberOfStreamingRequests(): number;
/**
 * ```
 * 0.0 = no memory used
 * 1.0 = all memory used
 * Maximum model memory (as defined in common\data\missioncreatordata.meta) is 100 MiB
 * GET_*
 * ```
 * Hash: 0x3D3D8B3BE5A83D35 | ApiSet: undefined
 */
export declare function getUsedCreatorModelMemoryPercentage(): number;
/**
 * Hash: 0x470555300D10B2A5 | ApiSet: undefined
 */
export declare function getPlayerSwitchState(): number;
/**
 * Hash: 0x5B48A06DD0E792A5 | ApiSet: undefined
 */
export declare function getPlayerSwitchInterpOutCurrentTime(): any;
/**
 * Gets whether the specified animation set has finished loading. An animation set provides movement animations for a ped.
 * Animation set and clip set are synonymous. See [`SET_PED_MOVEMENT_CLIPSET`](#\_0xAF8A94EDE7712BEF).
 * Hash: 0xC4EA073D86FB29B0 | ApiSet: undefined
 */
export declare function hasAnimSetLoaded(animSet: string): boolean;
/**
 * ```
 * Alias for HAS_ANIM_SET_LOADED.
 * ```
 * Hash: 0x318234F4F3738AF3 | ApiSet: undefined
 */
export declare function hasClipSetLoaded(clipSet: string): boolean;
/**
 * Hash: 0xB3C94A90D9FC9E62 | ApiSet: undefined
 */
export declare function getPlayerSwitchType(): number;
/**
 * Hash: 0x8702416E512EC454 | ApiSet: undefined
 */
export declare function hasNamedPtfxAssetLoaded(fxName: string): boolean;
/**
 * Hash: 0xD031A9162D01088C | ApiSet: undefined
 */
export declare function hasAnimDictLoaded(animDict: string): boolean;
/**
 * Hash: 0x2DDFF3FB9075D747 | ApiSet: undefined
 */
export declare function isEntityFocus(entity: number | Entity): boolean;
/**
 * Hash: 0x22CCA434E368F03A | ApiSet: undefined
 */
export declare function hasCollisionForModelLoaded(model: number | string): boolean;
/**
 * Returns whether the specified model (archetype) is currently loaded.
 * Note that this will return 'true' even if the model has been requested and loaded by something other than the current script, if you're intending to actually use the model in a later frame, you should call REQUEST_MODEL anyway.
 * Hash: 0x98A4EB5D89A0C952 | ApiSet: undefined
 */
export declare function hasModelLoaded(model: number | string): boolean;
/**
 * ```
 * Returns whether the specified model represents a vehicle.
 * ```
 * Hash: 0x19AAC8F07BFEC53E | ApiSet: undefined
 */
export declare function isModelAVehicle(model: number | string): boolean;
/**
 * Hash: 0x75816577FEA6DAD5 | ApiSet: undefined
 */
export declare function isModelAPed(model: number | string): boolean;
/**
 * ```
 * Returns whether the specified model exists in the game.
 * ```
 * Hash: 0xC0296A2EDF545E92 | ApiSet: undefined
 */
export declare function isModelValid(model: number | string): boolean;
/**
 * Hash: 0x41CA5A33160EA4AB | ApiSet: undefined
 */
export declare function isNetworkLoadingScene(): boolean;
/**
 * Hash: 0xCA7D9B86ECA7481B | ApiSet: undefined
 */
export declare function hasPtfxAssetLoaded(): boolean;
/**
 * Hash: 0x88A741E44A2B3495 | ApiSet: undefined
 */
export declare function isIplActive(iplName: string): boolean;
/**
 * Hash: 0xA41A05B6CB741B85 | ApiSet: undefined
 */
export declare function isNewLoadSceneActive(): boolean;
/**
 * Hash: 0xB5A4DB34FE89B88A | ApiSet: undefined
 */
export declare function initCreatorBudget(): void;
/**
 * Hash: 0xBD6E84632DD4CB3F | ApiSet: undefined
 */
export declare function loadAllObjectsNow(): void;
/**
 * ```
 * Check if model is in cdimage(rpf)
 * ```
 * Hash: 0x35B9E0803292B641 | ApiSet: undefined
 */
export declare function isModelInCdimage(model: number | string): boolean;
/**
 * Hash: 0xDFA80CB25D0A19B3 | ApiSet: undefined
 */
export declare function isSwitchReadyForDescent(): boolean;
/**
 * Hash: 0x01B8247A7A8B9AD1 | ApiSet: undefined
 */
export declare function isNewLoadSceneLoaded(): boolean;
/**
 * ```
 * Returns true if the player is currently switching, false otherwise.
 * (When the camera is in the sky moving from Trevor to Franklin for example)
 * ```
 * Hash: 0xD9D2CFFF49FAB35F | ApiSet: undefined
 */
export declare function isPlayerSwitchInProgress(): boolean;
/**
 * Hash: 0x5B74EA8CFD5E3E7E | ApiSet: undefined
 */
export declare function isSwitchSkippingDescent(): boolean;
/**
 * Returns true when the srl from BEGIN_SRL is loaded.
 * Hash: 0xD0263801A4C5B0BB | ApiSet: undefined
 */
export declare function isSrlLoaded(): boolean;
/**
 * Hash: 0x4448EB75B4904BDB | ApiSet: undefined
 */
export declare function loadScene(position: Vector3): void;
/**
 * Hash: 0xBC9823AB80A3DCAC | ApiSet: undefined
 */
export declare function isStreamvolActive(): boolean;
/**
 * Hash: 0x03F1A106BDA7DD3E | ApiSet: undefined
 */
export declare function _0x03F1A106BDA7DD3E(): void;
/**
 * Hash: 0x0811381EF5062FEC | ApiSet: undefined
 */
export declare function _0x0811381EF5062FEC(p0: number | Entity): void;
/**
 * 0 - default
 * 1 - HeistIsland
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x7E3F55ED251B76D3 | ApiSet: undefined
 */
export declare function loadGlobalWaterType(waterType: number): void;
/**
 * Hash: 0x472397322E92A856 | ApiSet: undefined
 */
export declare function _0x472397322E92A856(): void;
/**
 * Hash: 0x1E9057A74FD73E23 | ApiSet: undefined
 */
export declare function _0x1E9057A74FD73E23(): void;
/**
 * Hash: 0x20C6C7E4EB082A7F | ApiSet: undefined
 */
export declare function _0x20C6C7E4EB082A7F(p0: boolean): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x4E52E752C76E7E7A | ApiSet: undefined
 */
export declare function _0x4E52E752C76E7E7A(p0: any): void;
/**
 * Hash: 0x63EB2B972A218CAC | ApiSet: undefined
 */
export declare function _0x63EB2B972A218CAC(): void;
/**
 * Hash: 0x5068F488DDB54DD8 | ApiSet: undefined
 */
export declare function _0x5068F488DDB54DD8(): any;
/**
 * ```
 * Probably IS_SWITCH_*
 * ```
 * Hash: 0x933BBEEB8C61B5F4 | ApiSet: undefined
 */
export declare function _0x933BBEEB8C61B5F4(): boolean;
/**
 * Hash: 0x95A7DABDDBB78AE7 | ApiSet: undefined
 */
export declare function _0x95A7DABDDBB78AE7(iplName1: string, iplName2: string): void;
/**
 * Hash: 0x71E7B2E657449AAD | ApiSet: undefined
 */
export declare function _0x71E7B2E657449AAD(): any;
/**
 * Hash: 0xBED8CA5FF5E04113 | ApiSet: undefined
 */
export declare function _0xBED8CA5FF5E04113(p0: number, p1: number, p2: number, p3: number): void;
/**
 * Hash: 0xBEB2D9A1D9A8F55A | ApiSet: undefined
 */
export declare function _0xBEB2D9A1D9A8F55A(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0xF4A0DADB70F57FA6 | ApiSet: undefined
 */
export declare function _0xF4A0DADB70F57FA6(): void;
/**
 * Hash: 0xEF39EE20C537E98C | ApiSet: undefined
 */
export declare function _0xEF39EE20C537E98C(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
/**
 * Hash: 0xF8155A7F03DDFC8E | ApiSet: undefined
 */
export declare function _0xF8155A7F03DDFC8E(p0: any): void;
/**
 * Hash: 0x64E630FAF5F60F44 | ApiSet: undefined
 */
export declare function networkStopLoadScene(): void;
/**
 * Hash: 0xFB199266061F820A | ApiSet: undefined
 */
export declare function _0xFB199266061F820A(): boolean;
/**
 * Hash: 0xC4582015556D1C46 | ApiSet: undefined
 */
export declare function networkUpdateLoadScene(): boolean;
/**
 * Hash: 0xC197616D221FF4A4 | ApiSet: undefined
 */
export declare function newLoadSceneStop(): void;
/**
 * ```
 * if (!sub_8f12("START LOAD SCENE SAFE")) {
 * `if (CUTSCENE::GET_CUTSCENE_TIME() > 4178) {`
 * `STREAMING::_ACCFB4ACF53551B0(1973.845458984375, 3818.447265625, 32.43629837036133, 15.0, 2);`
 * sub_8e9e("START LOAD SCENE SAFE", 1);
 * }
 * }
 * `(Previously known as STREAMING::_NEW_LOAD_SCENE_START_SAFE)`
 * ```
 * Hash: 0xACCFB4ACF53551B0 | ApiSet: undefined
 */
export declare function newLoadSceneStartSphere(position: Vector3, radius: number, p4: any): boolean;
/**
 * ```
 * Alias for REMOVE_ANIM_SET.
 * ```
 * Hash: 0x01F73A131C18CD94 | ApiSet: undefined
 */
export declare function removeClipSet(clipSet: string): void;
/**
 * ```
 * `radius` value is usually between `3f` and `7000f` in original 1868 scripts.
 * `p7` is 0, 1, 2, 3 or 4 used in decompiled scripts, 0 is by far the most common.
 * Returns True if success, used only 7 times in decompiled scripts of 1868
 * ```
 * Hash: 0x212A8D0D2BABFAC2 | ApiSet: undefined
 */
export declare function newLoadSceneStart(posX: number, posY: number, posZ: number, offsetX: number, offsetY: number, offsetZ: number, radius: number, p7: number): boolean;
/**
 * This native is used to attribute the SRL that BeginSrl is going to load. This is usually used for 'in-game' cinematics (not cutscenes but camera stuff) instead of SetFocusArea because it loads a specific area of the map which is pretty useful when the camera moves from distant areas.
 * For instance, GTA:O opening cutscene.
 * https://pastebin.com/2EeKVeLA : a list of SRL found in srllist.meta
 * https://pastebin.com/zd9XYUWY : here is the content of a SRL file opened with codewalker.
 * Hash: 0x3D245789CE12982C | ApiSet: undefined
 */
export declare function prefetchSrl(srl: string): void;
/**
 * ```
 * This allows you to override "extended distance scaling" setting. Needs to be called each frame.
 * Max scaling seems to be 200.0, normal is 1.0
 * See https://gfycat.com/DetailedHauntingIncatern
 * ```
 * Hash: 0xA76359FC80B2438E | ApiSet: undefined
 */
export declare function overrideLodscaleThisFrame(scaling: number): void;
/**
 * Hash: 0x88C6814073DD4A73 | ApiSet: undefined
 */
export declare function removePtfxAsset(): void;
/**
 * Hash: 0xF66A602F829E2A06 | ApiSet: undefined
 */
export declare function removeAnimDict(animDict: string): void;
/**
 * Unloads the specified animation set. An animation set provides movement animations for a ped.
 * Animation set and clip set are synonymous. See [`SET_PED_MOVEMENT_CLIPSET`](#\_0xAF8A94EDE7712BEF).
 * Hash: 0x16350528F93024B3 | ApiSet: undefined
 */
export declare function removeAnimSet(animSet: string): void;
/**
 * IPL list can be found [here](https://gist.github.com/4mmonium/4c8a076b5f712a7cc64666003009a2e7).
 * Hash: 0xEE6C5AD3ECE0A82D | ApiSet: undefined
 */
export declare function removeIpl(iplName: string): void;
/**
 * Hash: 0xF086AD9354FAC3A3 | ApiSet: undefined
 */
export declare function removeModelFromCreatorBudget(modelHash: number | string): void;
/**
 * Hash: 0xD3BD40951412FEF6 | ApiSet: undefined
 */
export declare function requestAnimDict(animDict: string): void;
/**
 * Hash: 0x5F61EBBE1A00F96D | ApiSet: undefined
 */
export declare function removeNamedPtfxAsset(fxName: string): void;
/**
 * Hash: 0x07503F7948F491A7 | ApiSet: undefined
 */
export declare function requestCollisionAtCoord(position: Vector3): void;
/**
 * Hash: 0xC9156DC11411A9EA | ApiSet: undefined
 */
export declare function requestAdditionalCollisionAtCoord(position: Vector3): void;
/**
 * Hash: 0x923CB32A3B874FCB | ApiSet: undefined
 */
export declare function requestCollisionForModel(model: number | string): void;
/**
 * Hash: 0xD2A71E1A77418A49 | ApiSet: undefined
 */
export declare function requestClipSet(clipSet: string): void;
/**
 * Starts loading the specified animation set. An animation set provides movement animations for a ped. See [`SET_PED_MOVEMENT_CLIPSET`](#\_0xAF8A94EDE7712BEF).
 * Hash: 0x6EA47DAE7FAD0EED | ApiSet: undefined
 */
export declare function requestAnimSet(animSet: string): void;
/**
 * ```
 * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "V_FIB01_cur_elev");`
 * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");`
 * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "V_Office_gnd_lifts");`
 * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BB, "limbo");`
 * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "v_fib01_jan_elev");`
 * `STREAMING::REQUEST_MODELS_IN_ROOM(l_13BC, "limbo");`
 * ```
 * Hash: 0x8A7A40100EDFEC58 | ApiSet: undefined
 */
export declare function requestModelsInRoom(interior: number, roomName: string): void;
/**
 * Request a model (archetype) to be loaded for use by the current script. Use SET_MODEL_AS_NO_LONGER_NEEDED when done using the model in script.
 * Hash: 0x963D27A58DF860AC | ApiSet: undefined
 */
export declare function requestModel(model: number | string): void;
/**
 * Calls [`REQUEST_MODEL`](#\_0x963D27A58DF860AC) with the `STRFLAG_PRIORITY_LOAD` and `STRFLAG_FORCE_LOAD` set.
 * Hash: 0xA0261AEF7ACFC51E | ApiSet: undefined
 */
export declare function requestMenuPedModel(model: number | string): void;
/**
 * ```
 * Exemple: REQUEST_IPL("TrevorsTrailerTrash");
 * ```
 * Hash: 0x41B4893843BBDB74 | ApiSet: undefined
 */
export declare function requestIpl(iplName: string): void;
/**
 * ```
 * Override the area where the camera will render the terrain.
 * p3, p4 and p5 are usually set to 0.0
 * ```
 * Hash: 0xBB7454BAFF08FE25 | ApiSet: undefined
 */
export declare function setFocusPosAndVel(position: Vector3, offsetX: number, offsetY: number, offsetZ: number): void;
/**
 * ```
 * maps script name (thread + 0xD0) by lookup via scriptfx.dat - does nothing when script name is empty
 * ```
 * Hash: 0x944955FB2A3935C8 | ApiSet: undefined
 */
export declare function requestPtfxAsset(): void;
/**
 * ```
 * From the b678d decompiled scripts:
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("core_snow");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("fm_mission_controler");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("proj_xmas_firework");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_apartment_mp");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_biolab_heist");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_fireworks");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_parachute");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_indep_wheelsmoke");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_cig_plane");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_creator");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_mp_tankbattle");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_ornate_heist");`
 * `STREAMING::REQUEST_NAMED_PTFX_ASSET("scr_prison_break_heist_station");`
 * ```
 * Hash: 0xB80D8756B4668AB6 | ApiSet: undefined
 */
export declare function requestNamedPtfxAsset(fxName: string): void;
/**
 * Hash: 0x717CD6E6FAEBBEDC | ApiSet: undefined
 */
export declare function setGamePausesForStreaming(toggle: boolean): void;
/**
 * Hash: 0xE37B76C387BE28ED | ApiSet: undefined
 */
export declare function setInteriorActive(interiorID: number, toggle: boolean): void;
/**
 * ```
 * It seems to make the entity's coords mark the point from which LOD-distances are measured. In my testing, setting a vehicle as the focus entity and moving that vehicle more than 300 distance units away from the player will make the level of detail around the player go down drastically (shadows disappear, textures go extremely low res, etc). The player seems to be the default focus entity.
 * ```
 * Hash: 0x198F77705FA0931D | ApiSet: undefined
 */
export declare function setFocusEntity(entity: number | Entity): void;
/**
 * ```
 * This is a NOP function. It does nothing at all.
 * ```
 * Hash: 0x42CBE54462D92634 | ApiSet: undefined
 */
export declare function setDitchPoliceModels(toggle: boolean): void;
/**
 * Releases the script ownership assigned by REQUEST_MODEL. This command should be used when done using a specific model hash in script.
 * Hash: 0xE532F5D78798DAAB | ApiSet: undefined
 */
export declare function setModelAsNoLongerNeeded(model: number | string): void;
/**
 * Sets the memory budget level for ped population.
 * Hash: 0x8C95333CFC3340F3 | ApiSet: undefined
 */
export declare function setPedPopulationBudget(budgetLevel: number): void;
/**
 * Hash: 0xB85F26619073E775 | ApiSet: undefined
 */
export declare function setHdArea(position: Vector3, radius: number): void;
/**
 * ```
 * Possible p0 values:
 * "prologue"
 * "Prologue_Main"
 * ```
 * Hash: 0xAF12610C644A35C9 | ApiSet: undefined
 */
export declare function setMapdatacullboxEnabled(name: string, toggle: boolean): void;
/**
 * Hash: 0x5F2013F8BC24EE69 | ApiSet: undefined
 */
export declare function setPlayerShortSwitchStyle(style: number): void;
/**
 * ```
 * All names can be found in playerswitchestablishingshots.meta
 * ```
 * Hash: 0x0FDE9DBFC0A6BC65 | ApiSet: undefined
 */
export declare function setPlayerSwitchEstablishingShot(name: string): void;
/**
 * Enables the specified island. For more information, see islandhopper.meta
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x9A9D1BA639675CF1 | ApiSet: undefined
 */
export declare function setIslandEnabled(islandName: string, toggle: boolean): void;
/**
 * Hash: 0x77B5F9A36BF96710 | ApiSet: undefined
 */
export declare function setReducePedModelBudget(toggle: boolean): void;
/**
 * Hash: 0xC208B673CE446B61 | ApiSet: undefined
 */
export declare function setPlayerSwitchOutro(cameraCoordX: number, cameraCoordY: number, cameraCoordZ: number, camRotationX: number, camRotationY: number, camRotationZ: number, camFov: number, camFarClip: number, rotationOrder: number): void;
/**
 * Hash: 0x80C527893080CCF3 | ApiSet: undefined
 */
export declare function setReduceVehicleModelBudget(toggle: boolean): void;
/**
 * Hash: 0xCCE26000E9A6FAD7 | ApiSet: undefined
 */
export declare function shutdownCreatorBudget(): void;
/**
 * Hash: 0x40AEFD1A244741F2 | ApiSet: undefined
 */
export declare function setRenderHdOnly(toggle: boolean): void;
/**
 * Hash: 0x95C0A5BBDC189AA1 | ApiSet: undefined
 */
export declare function stopPlayerSwitch(): void;
/**
 * ```cpp
 * enum ePlayerSwitchType
 * {
 * SWITCH_TYPE_AUTO = 0,
 * SWITCH_TYPE_LONG = 1,
 * SWITCH_TYPE_MEDIUM = 2,
 * SWITCH_TYPE_SHORT = 3
 * };
 * ```
 * ```cpp
 * enum eSwitchFlags {
 * SKIP_INTRO = 1,
 * SKIP_OUTRO = 2,
 * PAUSE_BEFORE_PAN = 4,
 * PAUSE_BEFORE_OUTRO = 8,
 * SKIP_PAN = 16,
 * UNKNOWN_DEST = 32,
 * DESCENT_ONLY = 64,
 * START_FROM_CAMPOS = 128,
 * PAUSE_BEFORE_ASCENT = 256,
 * PAUSE_BEFORE_DESCENT = 512,
 * ALLOW_SNIPER_AIM_INTRO = 1024,
 * ALLOW_SNIPER_AIM_OUTRO = 2048,
 * SKIP_TOP_DESCENT = 4096,
 * SUPPRESS_OUTRO_FX = 8192,
 * SUPPRESS_INTRO_FX = 16384,
 * DELAY_ASCENT_FX = 32768
 * }
 * ```
 * Hash: 0xFAA23F2CBA159D67 | ApiSet: undefined
 */
export declare function startPlayerSwitch(from: number | Ped, to: number | Ped, flags: number, switchType: number): void;
/**
 * Hash: 0x6E0C692677008888 | ApiSet: undefined
 */
export declare function setStreaming(toggle: boolean): void;
/**
 * ```
 * Always returns zero.
 * ```
 * Hash: 0x0AD9710CEE2F590F | ApiSet: undefined
 */
export declare function streamvolCreateLine(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: any): any;
/**
 * Hash: 0x1EE7D8DF4425F053 | ApiSet: undefined
 */
export declare function streamvolDelete(unused: any): void;
/**
 * Hash: 0xA74A541C6884E7B8 | ApiSet: undefined
 */
export declare function setSrlTime(p0: number): void;
/**
 * ```
 * Always returns zero.
 * ```
 * Hash: 0x219C7B8D53E429FD | ApiSet: undefined
 */
export declare function streamvolCreateSphere(position: Vector3, rad: number, p4: any, p5: any): any;
/**
 * Hash: 0x7D41E9D2D17C5B2D | ApiSet: undefined
 */
export declare function streamvolHasLoaded(unused: any): boolean;
/**
 * Hash: 0xCB9E1EB3BE2AF4E9 | ApiSet: undefined
 */
export declare function setVehiclePopulationBudget(p0: number): void;
/**
 * Hash: 0x07C313F94746702C | ApiSet: undefined
 */
export declare function streamvolIsValid(unused: any): boolean;
/**
 * You can check if the player is in a Switch state with [`IS_PLAYER_SWITCH_IN_PROGRESS`](#\_0xD9D2CFFF49FAB35F).
 * ***Note:** Doesn't act normally when used on Mount Chiliad.*
 * Hash: 0xAAB3200ED59016BC | ApiSet: undefined
 */
export declare function switchToMultiFirstpart(ped: number | Ped, flags: number, switchType: number): void;
/**
 * ```
 * Always returns zero.
 * ```
 * Hash: 0x1F3F018BC3AFA77C | ApiSet: undefined
 */
export declare function streamvolCreateFrustum(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number, p7: any, p8: any): any;
/**
 * After using [`SWITCH_TO_MULTI_FIRSTPART`](#\_0xAAB3200ED59016BC) , use this native to smoothly return the camera to the player's character.
 * Hash: 0xD8295AF639FD9CB8 | ApiSet: undefined
 */
export declare function switchToMultiSecondpart(ped: number | Ped): void;
/**
 * Hash: 0x80C75307B1C42837 | ApiSet: undefined
 */
export declare function getPackedBoolStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
/**
 * ```
 * Needs more research. Gets the stat name of a masked int?
 * section - values used in the decompiled scripts:
 * "_NGPSTAT_INT"
 * "_MP_NGPSTAT_INT"
 * "_MP_LRPSTAT_INT"
 * "_MP_APAPSTAT_INT"
 * "_MP_LR2PSTAT_INT"
 * "_MP_BIKEPSTAT_INT"
 * "_MP_IMPEXPPSTAT_INT"
 * "_MP_GUNRPSTAT_INT"
 * "_NGDLCPSTAT_INT"
 * "_MP_NGDLCPSTAT_INT"
 * "_DLCSMUGCHARPSTAT_INT"
 * "_GANGOPSPSTAT_INT"
 * "_BUSINESSBATPSTAT_INT"
 * "_ARENAWARSPSTAT_INT"
 * "_CASINOPSTAT_INT"
 * "_CASINOHSTPSTAT_INT"
 * ```
 * Hash: 0x2B4CDCA6F07FF3DA | ApiSet: undefined
 */
export declare function getNgstatIntHash(index: number, spStat: boolean, charStat: boolean, character: number, section: string): number;
/**
 * ```
 * Needs more research. Gets the stat name of a masked bool?
 * section - values used in the decompiled scripts:
 * "_NGPSTAT_BOOL"
 * "_NGTATPSTAT_BOOL"
 * "_NGDLCPSTAT_BOOL"
 * "_DLCBIKEPSTAT_BOOL"
 * "_DLCGUNPSTAT_BOOL"
 * "_GUNTATPSTAT_BOOL"
 * "_DLCSMUGCHARPSTAT_BOOL"
 * "_GANGOPSPSTAT_BOOL"
 * "_BUSINESSBATPSTAT_BOOL"
 * "_ARENAWARSPSTAT_BOOL"
 * "_CASINOPSTAT_BOOL"
 * "_CASINOHSTPSTAT_BOOL"
 * "_HEIST3TATTOOSTAT_BOOL"
 * ```
 * Hash: 0xBA52FF538ED2BC71 | ApiSet: undefined
 */
export declare function getNgstatBoolHash(index: number, spStat: boolean, charStat: boolean, character: number, section: string): number;
/**
 * Hash: 0x792271AB35C356A4 | ApiSet: undefined
 */
export declare function hiredLimo(p0: any, p1: any): void;
/**
 * Hash: 0xC4BB08EE7907471E | ApiSet: undefined
 */
export declare function getPackedTuBoolStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
/**
 * Hash: 0x61E111E323419E07 | ApiSet: undefined
 */
export declare function getPackedIntStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
/**
 * Hash: 0xD16C2AD6B8E32854 | ApiSet: undefined
 */
export declare function getPackedTuIntStatKey(index: number, spStat: boolean, charStat: boolean, character: number): number;
/**
 * Hash: 0xA9CDB1E3F0A49883 | ApiSet: undefined
 */
export declare function leaderboards2ReadByRow(p2: any, p4: any, p6: any): [boolean, any, any, any, any];
/**
 * Hash: 0x5CE587FB5A42C8C4 | ApiSet: undefined
 */
export declare function leaderboards2ReadByRadius(p1: any): [boolean, any, any];
/**
 * Hash: 0xC30713A383BFBF0E | ApiSet: undefined
 */
export declare function leaderboards2ReadByHandle(): [boolean, any, any];
/**
 * Hash: 0xF1AE5DCDBFCA2721 | ApiSet: undefined
 */
export declare function leaderboards2ReadByPlatform(gamerHandleCsv: string, platformName: string): [boolean, any];
/**
 * Hash: 0xE662C8B759D08F3C | ApiSet: undefined
 */
export declare function leaderboards2ReadByScoreFloat(p1: number, p2: any): [boolean, any];
/**
 * Hash: 0x7EEC7E4F6984A16A | ApiSet: undefined
 */
export declare function leaderboards2ReadByScoreInt(p1: any, p2: any): [boolean, any];
/**
 * Hash: 0x918B101666F9CB83 | ApiSet: undefined
 */
export declare function leaderboards2ReadFriendsByRow(p2: any, p3: boolean, p4: any, p5: any): [boolean, any, any];
/**
 * Hash: 0xBA2C7DB0C129449A | ApiSet: undefined
 */
export declare function leaderboards2ReadByRank(p1: any, p2: any): [boolean, any];
/**
 * Hash: 0xC980E62E33DF1D5C | ApiSet: undefined
 */
export declare function leaderboards2WriteDataForEventType(): [boolean, any, any];
/**
 * Hash: 0xB9BB18E2C40142ED | ApiSet: undefined
 */
export declare function leaderboardsCacheDataRow(): [boolean, any];
/**
 * Hash: 0xAE2206545888AE49 | ApiSet: undefined
 */
export declare function leaderboards2WriteData(): [boolean, any];
/**
 * Hash: 0xC38DC1E90D22547C | ApiSet: undefined
 */
export declare function leaderboards2ReadRankPrediction(): [boolean, any, any, any];
/**
 * Hash: 0x9120E8DBA3D69273 | ApiSet: undefined
 */
export declare function leaderboardsGetCacheDataRow(p0: any, p1: any): [boolean, any];
/**
 * Hash: 0x428EAF89E24F6C36 | ApiSet: undefined
 */
export declare function leaderboardsDeaths(statName: number | string, value: number): void;
/**
 * Hash: 0x9C51349BE6CDFE2C | ApiSet: undefined
 */
export declare function leaderboardsGetCacheExists(p0: any): boolean;
/**
 * Hash: 0xF04C1C27DA35F6C8 | ApiSet: undefined
 */
export declare function leaderboardsGetCacheTime(p0: any): any;
/**
 * Hash: 0x58A651CD201D89AD | ApiSet: undefined
 */
export declare function leaderboardsGetCacheNumberOfRows(p0: any): number;
/**
 * Hash: 0xD4B02A6B476E1FDC | ApiSet: undefined
 */
export declare function leaderboardsClearCacheData(): void;
/**
 * Hash: 0xBF4FEF46DB7894D3 | ApiSet: undefined
 */
export declare function leaderboardsGetColumnType(p0: any, p1: any, p2: any): any;
/**
 * Hash: 0x7CCE5C737A665701 | ApiSet: undefined
 */
export declare function leaderboardsReadClear(p0: any, p1: any, p2: any): any;
/**
 * Hash: 0x2FB19228983E832C | ApiSet: undefined
 */
export declare function leaderboardsReadSuccessful(p0: any, p1: any, p2: any): boolean;
/**
 * Hash: 0xC4B5467A1886EA7E | ApiSet: undefined
 */
export declare function leaderboardsGetColumnId(p0: any, p1: any, p2: any): any;
/**
 * Hash: 0x117B45156D7EFF2E | ApiSet: undefined
 */
export declare function leaderboardsGetNumberOfColumns(p0: any, p1: any): any;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x0077F15613D36993 | ApiSet: undefined
 */
export declare function _0x0077F15613D36993(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0xA31FD15197B192BD | ApiSet: undefined
 */
export declare function leaderboardsReadAnyPending(): boolean;
/**
 * Hash: 0x06EAF70AE066441E | ApiSet: undefined
 */
export declare function _0x06EAF70AE066441E(p0: any): void;
/**
 * Hash: 0xA34CB6E6F0DF4A0B | ApiSet: undefined
 */
export declare function leaderboardsReadClearAll(): any;
/**
 * Hash: 0xAC392C8483342AC2 | ApiSet: undefined
 */
export declare function leaderboardsReadPending(p0: any, p1: any, p2: any): boolean;
/**
 * Hash: 0x2E65248609523599 | ApiSet: undefined
 */
export declare function leaderboardsWriteAddColumnLong(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0x03C2EEBB04B3FB72 | ApiSet: undefined
 */
export declare function _0x03C2EEBB04B3FB72(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
/**
 * Hash: 0x0BCA1D2C47B0D269 | ApiSet: undefined
 */
export declare function leaderboardsWriteAddColumn(p0: any, p1: any, p2: number): void;
/**
 * Hash: 0x015B03EE1C43E6EC | ApiSet: undefined
 */
export declare function _0x015B03EE1C43E6EC(p0: any): void;
/**
 * Hash: 0x0B565B0AAE56A0E8 | ApiSet: undefined
 */
export declare function _0x0B565B0AAE56A0E8(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
/**
 * Hash: 0x0D01D20616FC73FB | ApiSet: undefined
 */
export declare function _0x0D01D20616FC73FB(p0: any, p1: any): void;
/**
 * Hash: 0x0A9C7F36E5D7B683 | ApiSet: undefined
 */
export declare function _0x0A9C7F36E5D7B683(p0: any): void;
/**
 * Hash: 0x0B8B7F74BF061C6D | ApiSet: undefined
 */
export declare function _0x0B8B7F74BF061C6D(): any;
/**
 * Hash: 0x14EDA9EE27BD1626 | ApiSet: undefined
 */
export declare function _0x14EDA9EE27BD1626(p0: any): void;
/**
 * Hash: 0x164C5FF663790845 | ApiSet: undefined
 */
export declare function _0x164C5FF663790845(p0: any): void;
/**
 * Hash: 0x14E0B2D1AD1044E0 | ApiSet: undefined
 */
export declare function _0x14E0B2D1AD1044E0(): [any, any, any, any];
/**
 * Hash: 0x1A7CE7CD3E653485 | ApiSet: undefined
 */
export declare function _0x1A7CE7CD3E653485(p0: any): void;
/**
 * Hash: 0x1A8EA222F9C67DBB | ApiSet: undefined
 */
export declare function _0x1A8EA222F9C67DBB(): [any, number];
/**
 * ```
 * `STATS::0x343B27E2(0);`
 * `STATS::0x343B27E2(1);`
 * `STATS::0x343B27E2(2);`
 * `STATS::0x343B27E2(3);`
 * `STATS::0x343B27E2(4);`
 * `STATS::0x343B27E2(5);`
 * `STATS::0x343B27E2(6);`
 * `STATS::0x343B27E2(7);`
 * Identical in ingamehud & maintransition.
 * ```
 * Hash: 0x26D7399B9587FE89 | ApiSet: undefined
 */
export declare function _0x26D7399B9587FE89(p0: number): void;
/**
 * Hash: 0x27AA1C973CACFE63 | ApiSet: undefined
 */
export declare function _0x27AA1C973CACFE63(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
/**
 * Hash: 0x282B6739644F4347 | ApiSet: undefined
 */
export declare function _0x282B6739644F4347(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x2818FF6638CB09DE | ApiSet: undefined
 */
export declare function _0x2818FF6638CB09DE(p0: any): void;
/**
 * Hash: 0x2CD90358F67D0AA8 | ApiSet: undefined
 */
export declare function _0x2CD90358F67D0AA8(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x2D7A9B577E72385E | ApiSet: undefined
 */
export declare function _0x2D7A9B577E72385E(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x316DB59CD14C1774 | ApiSet: undefined
 */
export declare function _0x316DB59CD14C1774(p0: any): void;
/**
 * Hash: 0x28ECB8AC2F607DB2 | ApiSet: undefined
 */
export declare function _0x28ECB8AC2F607DB2(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x2FA3173480008493 | ApiSet: undefined
 */
export declare function _0x2FA3173480008493(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * Hash: 0x32CAC93C9DE73D32 | ApiSet: undefined
 */
export declare function _0x32CAC93C9DE73D32(): any;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x2E0259BABC27A327 | ApiSet: undefined
 */
export declare function _0x2E0259BABC27A327(p0: any): void;
/**
 * Hash: 0x33D72899E24C3365 | ApiSet: undefined
 */
export declare function _0x33D72899E24C3365(p0: any, p1: any): any;
/**
 * Hash: 0x34770B9CE0E03B91 | ApiSet: undefined
 */
export declare function _0x34770B9CE0E03B91(p0: any): [boolean, any];
/**
 * Hash: 0x3DE3AA516FB126A4 | ApiSet: undefined
 */
export declare function _0x3DE3AA516FB126A4(p0: any): void;
/**
 * Hash: 0x3EBEAC6C3F81F6BD | ApiSet: undefined
 */
export declare function _0x3EBEAC6C3F81F6BD(p0: any): void;
/**
 * Hash: 0x38491439B6BA7F7D | ApiSet: undefined
 */
export declare function _0x38491439B6BA7F7D(p0: any, p1: any): number;
/**
 * ```
 * Sets profile setting 934
 * ```
 * Hash: 0x38BAAA5DD4C9D19F | ApiSet: undefined
 */
export declare function _0x38BAAA5DD4C9D19F(value: number): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x4DC416F246A41FC8 | ApiSet: undefined
 */
export declare function _0x4DC416F246A41FC8(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * Hash: 0x419615486BBF1956 | ApiSet: undefined
 */
export declare function _0x419615486BBF1956(p0: any): void;
/**
 * Hash: 0x4C89FE2BDEB3F169 | ApiSet: undefined
 */
export declare function _0x4C89FE2BDEB3F169(): any;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x4AFF7E02E485E92B | ApiSet: undefined
 */
export declare function _0x4AFF7E02E485E92B(): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x53C31853EC9531FF | ApiSet: undefined
 */
export declare function _0x53C31853EC9531FF(p0: any): void;
/**
 * Hash: 0x55A8BECAF28A4EB7 | ApiSet: undefined
 */
export declare function _0x55A8BECAF28A4EB7(): any;
/**
 * ```
 * STAT_SET_*
 * ```
 * Hash: 0x5688585E6D563CD8 | ApiSet: undefined
 */
export declare function _0x5688585E6D563CD8(p0: number): void;
/**
 * Hash: 0x44919CC079BB60BF | ApiSet: undefined
 */
export declare function _0x44919CC079BB60BF(p0: any): void;
/**
 * Hash: 0x5BD5F255321C4AAF | ApiSet: undefined
 */
export declare function _0x5BD5F255321C4AAF(p0: any): any;
/**
 * ```
 * Sets profile setting 935
 * ```
 * Hash: 0x55384438FC55AD8E | ApiSet: undefined
 */
export declare function _0x55384438FC55AD8E(value: number): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x5BF29846C6527C54 | ApiSet: undefined
 */
export declare function _0x5BF29846C6527C54(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x4FCDBD3F0A813C25 | ApiSet: undefined
 */
export declare function _0x4FCDBD3F0A813C25(p0: any, p1: any): void;
/**
 * Hash: 0x5A556B229A169402 | ApiSet: undefined
 */
export declare function _0x5A556B229A169402(): boolean;
/**
 * Hash: 0x5FF2C33B13A02A11 | ApiSet: undefined
 */
export declare function _0x5FF2C33B13A02A11(p0: any): void;
/**
 * Hash: 0x53CAE13E9B426993 | ApiSet: undefined
 */
export declare function _0x53CAE13E9B426993(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x5CDAED54B34B0ED0 | ApiSet: undefined
 */
export declare function _0x5CDAED54B34B0ED0(p0: any): void;
/**
 * ```
 * example from completionpercentage_controller.ysc.c4
 * `if (STATS::_5EAD2BF6484852E4()) {`
 * `MISC::SET_BIT(g_17b95._f20df._ff10, 15);`
 * `STATS::_11FF1C80276097ED(0xe9ec4dd1, 200, 0);`
 * }
 * ```
 * Hash: 0x5EAD2BF6484852E4 | ApiSet: undefined
 */
export declare function _0x5EAD2BF6484852E4(): boolean;
/**
 * Hash: 0x6551B1F7F6CD46EA | ApiSet: undefined
 */
export declare function _0x6551B1F7F6CD46EA(p0: any): void;
/**
 * Hash: 0x60EEDC12AF66E846 | ApiSet: undefined
 */
export declare function _0x60EEDC12AF66E846(p0: any): void;
/**
 * Hash: 0x629526ABA383BCAA | ApiSet: undefined
 */
export declare function _0x629526ABA383BCAA(): void;
/**
 * Hash: 0x6483C25849031C4F | ApiSet: undefined
 */
export declare function _0x6483C25849031C4F(p0: any, p1: any, p2: any): any;
/**
 * Hash: 0x6A60E43998228229 | ApiSet: undefined
 */
export declare function _0x6A60E43998228229(p0: any): void;
/**
 * Hash: 0x678F86D8FC040BDB | ApiSet: undefined
 */
export declare function _0x678F86D8FC040BDB(p0: any): void;
/**
 * Hash: 0x6BC0ACD0673ACEBE | ApiSet: undefined
 */
export declare function _0x6BC0ACD0673ACEBE(p0: any): [number, number];
/**
 * Hash: 0x6E0A5253375C4584 | ApiSet: undefined
 */
export declare function _0x6E0A5253375C4584(): any;
/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x6A7F19756F1A9016 | ApiSet: undefined
 */
export declare function _0x6A7F19756F1A9016(): boolean;
/**
 * Hash: 0x6DEE77AFF8C21BD1 | ApiSet: undefined
 */
export declare function _0x6DEE77AFF8C21BD1(): [boolean, number, number];
/**
 * Hash: 0x6BCCF9948492FD85 | ApiSet: undefined
 */
export declare function _0x6BCCF9948492FD85(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * Hash: 0x723C1CE13FBFDB67 | ApiSet: undefined
 */
export declare function _0x723C1CE13FBFDB67(p0: any, p1: any): void;
/**
 * Hash: 0x71B008056E5692D6 | ApiSet: undefined
 */
export declare function _0x71B008056E5692D6(): void;
/**
 * Hash: 0x6F361B8889A792A3 | ApiSet: undefined
 */
export declare function _0x6F361B8889A792A3(): void;
/**
 * Hash: 0x7033EEFD9B28088E | ApiSet: undefined
 */
export declare function _0x7033EEFD9B28088E(p0: any): void;
/**
 * Hash: 0x73001E34F85137F8 | ApiSet: undefined
 */
export declare function _0x73001E34F85137F8(p0: any): void;
/**
 * ```
 * Sets profile setting 940 and 941
 * _SET_F* - _SET_G*
 * ```
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x79D310A861697CC9 | ApiSet: undefined
 */
export declare function _0x79D310A861697CC9(profileSetting: number, settingValue: number): void;
/**
 * Hash: 0x7B18DA61F6BAE9D5 | ApiSet: undefined
 */
export declare function _0x7B18DA61F6BAE9D5(p0: any): void;
/**
 * Hash: 0x7D36291161859389 | ApiSet: undefined
 */
export declare function _0x7D36291161859389(p0: any): void;
/**
 * Hash: 0x7F2C4CDF2E82DF4C | ApiSet: undefined
 */
export declare function _0x7F2C4CDF2E82DF4C(p0: any): boolean;
/**
 * Hash: 0x7E6946F68A38B74F | ApiSet: undefined
 */
export declare function _0x7E6946F68A38B74F(p0: any): boolean;
/**
 * Hash: 0x7D8BA05688AD64C7 | ApiSet: undefined
 */
export declare function _0x7D8BA05688AD64C7(p0: any): void;
/**
 * ```
 * _PLAYSTATS_ROB_ARMOURD_TRUCK
 * ```
 * Hash: 0x7EEC2A316C250073 | ApiSet: undefined
 */
export declare function _0x7EEC2A316C250073(p0: any, p1: any, p2: any): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x830C3A44EB3F2CF9 | ApiSet: undefined
 */
export declare function _0x830C3A44EB3F2CF9(p0: any): void;
/**
 * Hash: 0x84A810B375E69C0E | ApiSet: undefined
 */
export declare function _0x84A810B375E69C0E(): any;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x810B5FCC52EC7FF0 | ApiSet: undefined
 */
export declare function _0x810B5FCC52EC7FF0(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x84DFC579C2FC214C | ApiSet: undefined
 */
export declare function _0x84DFC579C2FC214C(p0: any): void;
/**
 * Hash: 0x88087EE1F28024AE | ApiSet: undefined
 */
export declare function _0x88087EE1F28024AE(p0: any): void;
/**
 * Hash: 0x8B9CDBD6C566C38C | ApiSet: undefined
 */
export declare function _0x8B9CDBD6C566C38C(): any;
/**
 * Hash: 0x8D8ADB562F09A245 | ApiSet: undefined
 */
export declare function _0x8D8ADB562F09A245(p0: any): void;
/**
 * Hash: 0x8989CBD7B4E82534 | ApiSet: undefined
 */
export declare function _0x8989CBD7B4E82534(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
/**
 * Hash: 0x930F504203F561C9 | ApiSet: undefined
 */
export declare function _0x930F504203F561C9(p0: any): void;
/**
 * Hash: 0x88578F6EC36B4A3A | ApiSet: undefined
 */
export declare function _0x88578F6EC36B4A3A(p0: any, p1: any): any;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x92FC0EEDFAC04A14 | ApiSet: undefined
 */
export declare function _0x92FC0EEDFAC04A14(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
/**
 * Hash: 0x8EC74CEB042E7CFF | ApiSet: undefined
 */
export declare function _0x8EC74CEB042E7CFF(p0: any): void;
/**
 * Hash: 0x98E2BC1CA26287C3 | ApiSet: undefined
 */
export declare function _0x98E2BC1CA26287C3(): void;
/**
 * Hash: 0x9B4BD21D69B1E609 | ApiSet: undefined
 */
export declare function _0x9B4BD21D69B1E609(): void;
/**
 * Hash: 0x8C9D11605E59D955 | ApiSet: undefined
 */
export declare function _0x8C9D11605E59D955(p0: any): void;
/**
 * Hash: 0x9A62EC95AE10E011 | ApiSet: undefined
 */
export declare function _0x9A62EC95AE10E011(): number;
/**
 * Hash: 0x96E6D5150DBF1C09 | ApiSet: undefined
 */
export declare function _0x96E6D5150DBF1C09(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0xA0F93D5465B3094D | ApiSet: undefined
 */
export declare function _0xA0F93D5465B3094D(): [boolean, any];
/**
 * Hash: 0xA3C53804BDB68ED2 | ApiSet: undefined
 */
export declare function _0xA3C53804BDB68ED2(p0: any, p1: any): void;
/**
 * Hash: 0x9EC8858184CD253A | ApiSet: undefined
 */
export declare function _0x9EC8858184CD253A(): any;
/**
 * Hash: 0xA761D4AC6115623D | ApiSet: undefined
 */
export declare function _0xA761D4AC6115623D(): any;
/**
 * ```
 * `STATS::0xE3247582(0);`
 * `STATS::0xE3247582(1);`
 * `STATS::0xE3247582(2);`
 * `STATS::0xE3247582(3);`
 * `STATS::0xE3247582(4);`
 * `STATS::0xE3247582(5);`
 * `STATS::0xE3247582(6);`
 * ```
 * Hash: 0xA78B8FA58200DA56 | ApiSet: undefined
 */
export declare function _0xA78B8FA58200DA56(p0: number): void;
/**
 * Hash: 0xA6F54BB2FFCA35EA | ApiSet: undefined
 */
export declare function _0xA6F54BB2FFCA35EA(p0: any): void;
/**
 * Hash: 0xAA525DFF66BB82F5 | ApiSet: undefined
 */
export declare function _0xAA525DFF66BB82F5(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0xA736CF7FB7C5BFF4 | ApiSet: undefined
 */
export declare function _0xA736CF7FB7C5BFF4(): [any, any, any, any];
/**
 * Hash: 0xAFF47709F1D5DCCE | ApiSet: undefined
 */
export declare function _0xAFF47709F1D5DCCE(): any;
/**
 * Hash: 0xA8733668D1047B51 | ApiSet: undefined
 */
export declare function _0xA8733668D1047B51(p0: any): void;
/**
 * ```
 * This function is hard-coded to always return 1.
 * NETWORK_IS_*
 * ```
 * Hash: 0xB3DA2606774A8E2D | ApiSet: undefined
 */
export declare function _0xB3DA2606774A8E2D(): boolean;
/**
 * Hash: 0xBA9749CC94C1FD85 | ApiSet: undefined
 */
export declare function _0xBA9749CC94C1FD85(): any;
/**
 * Hash: 0xA943FD1722E11EFD | ApiSet: undefined
 */
export declare function _0xA943FD1722E11EFD(): any;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xB26F670685631727 | ApiSet: undefined
 */
export declare function _0xB26F670685631727(p0: any): void;
/**
 * Hash: 0xBAA2F0490E146BE8 | ApiSet: undefined
 */
export declare function _0xBAA2F0490E146BE8(p0: any): void;
/**
 * Hash: 0xB1D2BB1E1631F5B1 | ApiSet: undefined
 */
export declare function _0xB1D2BB1E1631F5B1(): boolean;
/**
 * Hash: 0xBF371CD2B64212FD | ApiSet: undefined
 */
export declare function _0xBF371CD2B64212FD(p0: any): void;
/**
 * Hash: 0xBE3DB208333D9844 | ApiSet: undefined
 */
export declare function _0xBE3DB208333D9844(): any;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xC01D2470F22CDE5A | ApiSet: undefined
 */
export declare function _0xC01D2470F22CDE5A(): void;
/**
 * Hash: 0xBFAFDB5FAAA5C5AB | ApiSet: undefined
 */
export declare function _0xBFAFDB5FAAA5C5AB(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0xC03FAB2C2F92289B | ApiSet: undefined
 */
export declare function _0xC03FAB2C2F92289B(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xC1E963C58664B556 | ApiSet: undefined
 */
export declare function _0xC1E963C58664B556(p0: any): void;
/**
 * Hash: 0xBED9F5693F34ED17 | ApiSet: undefined
 */
export declare function _0xBED9F5693F34ED17(statName: number | string, p1: number): [boolean, number];
/**
 * Hash: 0xC0E0D686DDFC6EAE | ApiSet: undefined
 */
export declare function _0xC0E0D686DDFC6EAE(): any;
/**
 * Sets profile setting 939
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xC67E2DA1CBE759E2 | ApiSet: undefined
 */
export declare function _0xC67E2DA1CBE759E2(): void;
/**
 * Hash: 0xC141B8917E0017EC | ApiSet: undefined
 */
export declare function _0xC141B8917E0017EC(): void;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xC14BD9F5337219B2 | ApiSet: undefined
 */
export declare function _0xC14BD9F5337219B2(p0: any): void;
/**
 * Hash: 0xC6E0E2616A7576BB | ApiSet: undefined
 */
export declare function _0xC6E0E2616A7576BB(): any;
/**
 * Hash: 0xD1C9B92BDD3F151D | ApiSet: undefined
 */
export declare function _0xD1C9B92BDD3F151D(p0: any, p1: any, p2: any): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xD4367D310F079DB0 | ApiSet: undefined
 */
export declare function _0xD4367D310F079DB0(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0xCC25A4553DFBF9EA | ApiSet: undefined
 */
export declare function _0xCC25A4553DFBF9EA(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * Hash: 0xDAF80797FC534BEC | ApiSet: undefined
 */
export declare function _0xDAF80797FC534BEC(p0: any): void;
/**
 * Hash: 0xC847B43F369AC0B5 | ApiSet: undefined
 */
export declare function _0xC847B43F369AC0B5(): void;
/**
 * Hash: 0xD558BEC0BBA7E8D2 | ApiSet: undefined
 */
export declare function _0xD558BEC0BBA7E8D2(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0xDFBD93BF2943E29B | ApiSet: undefined
 */
export declare function _0xDFBD93BF2943E29B(p0: any): void;
/**
 * Hash: 0xE496A53BA5F50A56 | ApiSet: undefined
 */
export declare function _0xE496A53BA5F50A56(p0: any): any;
/**
 * Hash: 0xD1A1EE3B4FA8E760 | ApiSet: undefined
 */
export declare function _0xD1A1EE3B4FA8E760(p0: any): void;
/**
 * Hash: 0xDEAAF77EB3687E97 | ApiSet: undefined
 */
export declare function _0xDEAAF77EB3687E97(p0: any): [any, any];
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xD6CA58B3B53A0F22 | ApiSet: undefined
 */
export declare function _0xD6CA58B3B53A0F22(p0: any): void;
/**
 * Hash: 0xE8853FBCE7D8D0D6 | ApiSet: undefined
 */
export declare function _0xE8853FBCE7D8D0D6(): any;
/**
 * ```
 * STAT_LOAD_*
 * ```
 * Hash: 0xECB41AC6AB754401 | ApiSet: undefined
 */
export declare function _0xECB41AC6AB754401(): boolean;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xDFCDB14317A9B361 | ApiSet: undefined
 */
export declare function _0xDFCDB14317A9B361(p0: any): void;
/**
 * Hash: 0xE3261D791EB44ACB | ApiSet: undefined
 */
export declare function _0xE3261D791EB44ACB(p0: any): void;
/**
 * Hash: 0xF11F01D98113536A | ApiSet: undefined
 */
export declare function _0xF11F01D98113536A(): [any, number];
/**
 * Hash: 0xF06A6F41CB445443 | ApiSet: undefined
 */
export declare function _0xF06A6F41CB445443(p0: any): void;
/**
 * Hash: 0xEDBF6C9B0D2C65C8 | ApiSet: undefined
 */
export declare function _0xEDBF6C9B0D2C65C8(p0: any): void;
/**
 * Hash: 0xF534D94DFA2EAD26 | ApiSet: undefined
 */
export declare function _0xF534D94DFA2EAD26(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0xF9096193DF1F99D4 | ApiSet: undefined
 */
export declare function _0xF9096193DF1F99D4(p0: any): void;
/**
 * Hash: 0xCEA553E35C2246E1 | ApiSet: undefined
 */
export declare function orderedBossVehicle(p0: any, p1: any, vehicleHash: number | string): void;
/**
 * Hash: 0x79AB33F0FBFAC40C | ApiSet: undefined
 */
export declare function playstatsAcquiredHiddenPackage(p0: any): void;
/**
 * Hash: 0xF8C54A461C3E11DC | ApiSet: undefined
 */
export declare function _0xF8C54A461C3E11DC(): [any, any, any, any];
/**
 * ```
 * Sets profile setting 933
 * ```
 * Hash: 0xF1A1803D3476F215 | ApiSet: undefined
 */
export declare function _0xF1A1803D3476F215(value: number): void;
/**
 * Hash: 0xFCC228E07217FCAC | ApiSet: undefined
 */
export declare function _0xFCC228E07217FCAC(p0: any): void;
/**
 * Hash: 0xF9F2922717B819EC | ApiSet: undefined
 */
export declare function _0xF9F2922717B819EC(): any;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x6F4F599753F8200A | ApiSet: undefined
 */
export declare function playstatsArenaWarSpectator(p0: number, p1: number, p2: number, p3: number, p4: number): void;
/**
 * Hash: 0xA071E0ED98F91286 | ApiSet: undefined
 */
export declare function playstatsActivityDone(p0: any, p1: any): void;
/**
 * Hash: 0x46F917F6B4128FE4 | ApiSet: undefined
 */
export declare function playstatsAwardXp(amount: number, type: number | string, category: number | string): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x533A7D1EA58DF958 | ApiSet: undefined
 */
export declare function playstatsArcadegame(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xB479D9F0D48A1BC5 | ApiSet: undefined
 */
export declare function playstatsArenaWarsEnded(): any;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x1187CB58D7F3BED7 | ApiSet: undefined
 */
export declare function playstatsCarclubChallenge(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x47B32F5611E6E483 | ApiSet: undefined
 */
export declare function playstatsAwardBadsport(id: number): void;
/**
 * Hash: 0xD6781E42755531F7 | ApiSet: undefined
 */
export declare function playstatsBuyContraband(): any;
/**
 * Hash: 0x5009DFD741329729 | ApiSet: undefined
 */
export declare function playstatsBackgroundScriptAction(action: string, value: number): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xD5451C7BF151EB6F | ApiSet: undefined
 */
export declare function playstatsCasinoBlackjackLight(p0: any): void;
/**
 * Hash: 0x516FC96EB88EEFE5 | ApiSet: undefined
 */
export declare function playstatsBanAlert(p0: number): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x69C922B677621428 | ApiSet: undefined
 */
export declare function playstatsCarclubPrize(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xFF14D6FEEC507BBE | ApiSet: undefined
 */
export declare function playstatsCarclubPoints(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x3EAE97309727E7AD | ApiSet: undefined
 */
export declare function playstatsCasinoBlackjack(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x23A3CBCD50D54E47 | ApiSet: undefined
 */
export declare function playstatsCasinoInsidetrackLight(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x1A0D4A6C336B7BC5 | ApiSet: undefined
 */
export declare function playstatsCasinoMissionEnded(): any;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x0999F3F090EC5012 | ApiSet: undefined
 */
export declare function playstatsCasinoChip(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x95101C443A84E7F1 | ApiSet: undefined
 */
export declare function playstatsCasinoRoulette(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xE60054A0FAE8227F | ApiSet: undefined
 */
export declare function playstatsCasinoSlotmachineLight(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x049F059625058A86 | ApiSet: undefined
 */
export declare function playstatsCasinoInsidetrack(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x0C432C1435F5E4FA | ApiSet: undefined
 */
export declare function playstatsCasinoLuckyseven(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xFCCCAC2BD3C1F180 | ApiSet: undefined
 */
export declare function playstatsCasinoStoryMissionEnded(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xF740FB339D471C35 | ApiSet: undefined
 */
export declare function playstatsCasinoThreecardpoker(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xEF5EC67D392B830A | ApiSet: undefined
 */
export declare function playstatsCasinoSlotmachine(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x6572ABA3DE1197FC | ApiSet: undefined
 */
export declare function playstatsCasinoRouletteLight(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xC9001364B4388F22 | ApiSet: undefined
 */
export declare function playstatsCasinoThreecardpokerLight(p0: any): void;
/**
 * Hash: 0x34B973047A2268B9 | ApiSet: undefined
 */
export declare function playstatsClothChange(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * Hash: 0x0A50D2604E05CB94 | ApiSet: undefined
 */
export declare function playstatsChangeMcEmblem(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0xCD0A8A9338681CF2 | ApiSet: undefined
 */
export declare function playstatsCollectible(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
/**
 * Hash: 0x6058665D72302D3F | ApiSet: undefined
 */
export declare function playstatsCheatApplied(cheat: string): void;
/**
 * Hash: 0xAFC7E5E075A96F46 | ApiSet: undefined
 */
export declare function playstatsCrateCreated(p0: number, p1: number, p2: number): void;
/**
 * Hash: 0xB7257BA2550EA10A | ApiSet: undefined
 */
export declare function playstatsCopyRankIntoNewSlot(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
/**
 * ```
 * NativeDB Added Parameter 7: Any p6
 * NativeDB Added Parameter 8: Any p7
 * ```
 * Hash: 0x1CAE5D2E3F9A07F0 | ApiSet: undefined
 */
export declare function playstatsCrateDropMissionDone(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
/**
 * Hash: 0x848B66100EE33B05 | ApiSet: undefined
 */
export declare function playstatsDupeDetection(): any;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x66C7BB2416ED3FCE | ApiSet: undefined
 */
export declare function playstatsDroneUsage(p0: number, p1: number, p2: number): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x0BC254FF3A911501 | ApiSet: undefined
 */
export declare function playstatsDarMissionEnd(): any;
/**
 * Hash: 0x2605663BD4F23B5D | ApiSet: undefined
 */
export declare function playstatsDefendContraband(): any;
/**
 * Hash: 0x501478855A6074CE | ApiSet: undefined
 */
export declare function playstatsEarnedMcPoints(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x878FF156D36E9956 | ApiSet: undefined
 */
export declare function playstatsEnterSessionPack(): any;
/**
 * Hash: 0x46326E13DA4E0546 | ApiSet: undefined
 */
export declare function playstatsDirectorMode(): any;
/**
 * Hash: 0x0F71DE29AB2258F1 | ApiSet: undefined
 */
export declare function playstatsFriendActivity(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xFA5B74BAB8A7EF99 | ApiSet: undefined
 */
export declare function playstatsExtraEvent(p0: any): void;
/**
 * Hash: 0x0EACDF8487D5155A | ApiSet: undefined
 */
export declare function playstatsGunrunMissionEnded(): any;
/**
 * Hash: 0xCB00196B31C39EB1 | ApiSet: undefined
 */
export declare function playstatsHoldUpMissionDone(p0: any, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x1E1497D0D2108115 | ApiSet: undefined
 */
export declare function playstatsH2InstanceEnd(p1: any, p2: any, p3: any): any;
/**
 * ```
 * longest time being ilde?
 * ```
 * Hash: 0x5DA3A8DE8CB6226F | ApiSet: undefined
 */
export declare function playstatsIdleKick(time: number): void;
/**
 * Hash: 0xF5BB8DAC426A52C0 | ApiSet: undefined
 */
export declare function playstatsJobBend(): [any, any, any, any];
/**
 * Hash: 0x2B69F5074C894811 | ApiSet: undefined
 */
export declare function playstatsImportExportMissionDone(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0xC5BE134EC7BA96A0 | ApiSet: undefined
 */
export declare function playstatsLeaveJobChain(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * ```
 * NativeDB Removed Parameter 4: Any p3
 * NativeDB Removed Parameter 5: Any p4
 * NativeDB Removed Parameter 6: Any p5
 * NativeDB Removed Parameter 7: Any p6
 * ```
 * Hash: 0xBC80E22DED931E3D | ApiSet: undefined
 */
export declare function playstatsMatchStarted(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xD8AFB345A9C5CCBB | ApiSet: undefined
 */
export declare function playstatsH2FmprepEnd(): any;
/**
 * Hash: 0xF4FF020A08BC8863 | ApiSet: undefined
 */
export declare function playstatsHeistSaveCheat(hash: number | string, p1: number): void;
/**
 * Hash: 0xC900596A63978C1D | ApiSet: undefined
 */
export declare function playstatsMissionCheckpoint(p1: any, p2: any, p3: any): any;
/**
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0x887DAD63CF5B7908 | ApiSet: undefined
 */
export declare function playstatsInventory(p0: any): void;
/**
 * Hash: 0x7C4BB33A8CED7324 | ApiSet: undefined
 */
export declare function playstatsMissionOver(p1: any, p2: any, p3: boolean, p4: boolean, p5: boolean): any;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x9572BD4DD6B72122 | ApiSet: undefined
 */
export declare function playstatsPegasaircraft(modelHash: number | string): void;
/**
 * Hash: 0xC19A2925C34D2231 | ApiSet: undefined
 */
export declare function playstatsMissionStarted(p1: any, p2: any, p3: boolean): any;
/**
 * Hash: 0x9C375C315099DDE4 | ApiSet: undefined
 */
export declare function playstatsRaceCheckpoint(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0x69DEA3E9DB727B4C | ApiSet: undefined
 */
export declare function playstatsOddjobDone(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0x93054C88E6AA7C44 | ApiSet: undefined
 */
export declare function playstatsNpcInvite(): any;
/**
 * ```
 * NativeDB Introduced: v1734
 * ```
 * Hash: 0x35EEC6C2BC821A71 | ApiSet: undefined
 */
export declare function playstatsPassiveMode(p0: boolean, p1: number, p2: number, p3: number): void;
/**
 * Hash: 0x203B381133817079 | ApiSet: undefined
 */
export declare function playstatsPiMenuHideSettings(): any;
/**
 * Hash: 0xBA739D6D5A05D6E7 | ApiSet: undefined
 */
export declare function playstatsPropChange(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x90D0622866E80445 | ApiSet: undefined
 */
export declare function playstatsQuickfixTool(element: number, item: string): void;
/**
 * ```
 * NativeDB Removed Parameter 5: Any p4
 * NativeDB Removed Parameter 6: Any p5
 * NativeDB Removed Parameter 7: Any p6
 * NativeDB Removed Parameter 8: Any p7
 * NativeDB Removed Parameter 9: Any p8
 * NativeDB Removed Parameter 10: Any p9
 * ```
 * Hash: 0xADDD1C754E2E2914 | ApiSet: undefined
 */
export declare function playstatsRaceToPointMissionDone(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
/**
 * Hash: 0x04D90BA8207ADA2D | ApiSet: undefined
 */
export declare function playstatsRecoverContraband(): any;
/**
 * Hash: 0x71862B1D855F32E1 | ApiSet: undefined
 */
export declare function playstatsRandomMissionDone(name: string, p1: any, p2: any, p3: any): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x1A67DFBF1F5C3835 | ApiSet: undefined
 */
export declare function playstatsRobberyPrep(p0: any): void;
/**
 * Hash: 0xC7F2DE41D102BFB4 | ApiSet: undefined
 */
export declare function playstatsRankUp(rank: number): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xBBA55BE9AAAABF44 | ApiSet: undefined
 */
export declare function playstatsRobberyFinale(p0: any): void;
/**
 * Hash: 0x121FB4DDDC2D5291 | ApiSet: undefined
 */
export declare function playstatsRosBet(amount: number, act: number, player: number | string | Player, cm: number): void;
/**
 * Hash: 0xC729991A9065376E | ApiSet: undefined
 */
export declare function playstatsSellContraband(): any;
/**
 * Sets a byte that is then used in session_host and session_join metrics when hosting or joining a session
 * Hash: 0xD1032E482629049E | ApiSet: undefined
 */
export declare function playstatsSetJoinType(joinType: number): void;
/**
 * Hash: 0xBE509B0A3693DE8B | ApiSet: undefined
 */
export declare function playstatsSpentPiCustomLoadout(amount: number): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x6731DE84A38BFAD0 | ApiSet: undefined
 */
export declare function playstatsSpectatorWheelSpin(p0: number, p1: number, p2: number, p3: number): void;
/**
 * Hash: 0x176852ACAAC173D1 | ApiSet: undefined
 */
export declare function playstatsShopItem(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x320C35147D5B5DDD | ApiSet: undefined
 */
export declare function playstatsSmugMissionEnded(): any;
/**
 * ```
 * PLAYSTATS_START_INVITE_DESPAWNING?
 * ```
 * Hash: 0x098760C7461724CD | ApiSet: undefined
 */
export declare function playstatsStartOfflineMode(): void;
/**
 * Allows stunts to be triggered and sent as a `CEventNetworkStuntPerformed` event.
 * Event types are shown below:
 * ```cpp
 * enum eTrackedStuntType
 * {
 * ST_FRONTFLIP = 0,
 * ST_BACKFLIP = 1,
 * ST_SPIN = 2,
 * ST_WHEELIE = 3,
 * ST_STOPPIE = 4,
 * ST_BOWLING_PIN = 5,
 * ST_FOOTBALL = 6,
 * ST_ROLL = 7
 * };
 * ```
 * Hash: 0x928DBFB892638EF3 | ApiSet: undefined
 */
export declare function playstatsStartTrackingStunts(): void;
/**
 * Disallows CEventNetworkStuntPerformed to be triggered (Resets [`PLAYSTATS_START_TRACKING_STUNTS`](#\_0x928DBFB892638EF3)).
 * Hash: 0x8A800DACCC0DA55D | ApiSet: undefined
 */
export declare function playstatsStopTrackingStunts(): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x35E39E5570358630 | ApiSet: undefined
 */
export declare function playstatsStoneHatchetEnd(): any;
/**
 * Hash: 0xE95C8A1875A02CA4 | ApiSet: undefined
 */
export declare function playstatsWeaponModeChange(weaponHash: number | string, componentHashTo: number | string, componentHashFrom: number | string): void;
/**
 * Hash: 0xDDF24D535060F811 | ApiSet: undefined
 */
export declare function playstatsWebsiteVisited(scaleformHash: number | string, p1: number): void;
/**
 * ```
 * Sets profile setting 866
 * SET_*
 * ```
 * Hash: 0xDAC073C7901F9E15 | ApiSet: undefined
 */
export declare function setHasContentUnlocksFlags(value: number): void;
/**
 * Hash: 0x11FF1C80276097ED | ApiSet: undefined
 */
export declare function presenceEventUpdatestatInt(statHash: number | string, value: number, p2: number): void;
/**
 * ```
 * Sets profile setting 501
 * ```
 * Hash: 0xF6792800AC95350D | ApiSet: undefined
 */
export declare function setSaveMigrationTransactionId(transactionId: number): void;
/**
 * ```
 * Example:
 * for (v_2 = 0; v_2 <= 4; v_2 += 1) {
 * `STATS::STAT_CLEAR_SLOT_FOR_RELOAD(v_2);`
 * }
 * ```
 * Hash: 0xEB0A72181D4AA4AD | ApiSet: undefined
 */
export declare function statClearSlotForReload(statSlot: number): any;
/**
 * Hash: 0x11B5E6D2AE73F48E | ApiSet: undefined
 */
export declare function statGetBool(statHash: number | string, p2: any): [boolean, boolean];
/**
 * Hash: 0x30A6614C1F7799B8 | ApiSet: undefined
 */
export declare function presenceEventUpdatestatFloat(statHash: number | string, value: number, p2: number): void;
/**
 * ```
 * p2 - Default value? Seems to be -1 most of the time.
 * ```
 * Hash: 0x10FE3F1B79F9B071 | ApiSet: undefined
 */
export declare function statGetBoolMasked(statName: number | string, mask: number, p2: number): boolean;
/**
 * Hash: 0xB475F27C6A994D65 | ApiSet: undefined
 */
export declare function setProfileSettingPrologueComplete(): void;
/**
 * Hash: 0xD7AE6C9C9C6AC54C | ApiSet: undefined
 */
export declare function statGetFloat(statHash: number | string, p2: any): [boolean, number];
/**
 * Hash: 0x5473D4195058B2E4 | ApiSet: undefined
 */
export declare function statGetLicensePlate(statName: number | string): string;
/**
 * Hash: 0x49A49BED12794D70 | ApiSet: undefined
 */
export declare function statDeleteSlot(p0: any): any;
/**
 * Hash: 0x7583B4BE4C5A41B5 | ApiSet: undefined
 */
export declare function statGetNumberOfMinutes(statName: number | string): number;
/**
 * Hash: 0x8B0FACEFC36C824B | ApiSet: undefined
 */
export declare function statGetDate(statHash: number | string, p2: any, p3: any): [boolean, any];
/**
 * ```
 * Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_BOOL_MASKED"?
 * ```
 * Hash: 0xF4D8E7AC2A27758C | ApiSet: undefined
 */
export declare function statGetPackedBoolMask(p0: number): number;
/**
 * ```
 * p2 appears to always be -1
 * ```
 * Hash: 0x767FBC2AC802EF3D | ApiSet: undefined
 */
export declare function statGetInt(statHash: number | string, p2: number): [boolean, number];
/**
 * Hash: 0x567384DFA67029E6 | ApiSet: undefined
 */
export declare function statGetCancelSaveMigrationStatus(): number;
/**
 * Hash: 0xF2D4B2FE415AAFC3 | ApiSet: undefined
 */
export declare function statGetNumberOfHours(statName: number | string): number;
/**
 * Hash: 0xE0E854F5280FB769 | ApiSet: undefined
 */
export declare function statGetNumberOfDays(statName: number | string): number;
/**
 * Hash: 0x655185A06D9EEAAB | ApiSet: undefined
 */
export declare function statGetMaskedInt(p0: any, p2: any, p3: any, p4: any): [boolean, any];
/**
 * Hash: 0x2CE056FF3723F00B | ApiSet: undefined
 */
export declare function statGetNumberOfSeconds(statName: number | string): number;
/**
 * ```
 * Needs more research. Seems to return "STAT_UNKNOWN" if no such user id exists.
 * ```
 * Hash: 0x2365C388E393BBE2 | ApiSet: undefined
 */
export declare function statGetUserId(p0: any): string;
/**
 * Hash: 0xA1750FFAFA181661 | ApiSet: undefined
 */
export declare function statLoadPending(p0: any): boolean;
/**
 * ```
 * Needs more research. Possibly used to calculate the "mask" when calling "STAT_SET_MASKED_INT"?
 * ```
 * Hash: 0x94F12ABF9C79E339 | ApiSet: undefined
 */
export declare function statGetPackedIntMask(p0: number): number;
/**
 * Hash: 0xCE5AA445ABA8DEE0 | ApiSet: undefined
 */
export declare function statGetSaveMigrationConsumeContentUnlockStatus(): [number, number];
/**
 * Hash: 0x350F82CCB186AA1B | ApiSet: undefined
 */
export declare function statGetPos(p0: any, p4: any): [boolean, any, any, any];
/**
 * Hash: 0x886913BBEACA68C1 | ApiSet: undefined
 */
export declare function statGetSaveMigrationStatus(): [number, any];
/**
 * Hash: 0xA651443F437B1CE6 | ApiSet: undefined
 */
export declare function statLoad(p0: number): boolean;
/**
 * ```
 * p1 is always -1 in the script files
 * ```
 * Hash: 0xE50384ACC2C3DB74 | ApiSet: undefined
 */
export declare function statGetString(statHash: number | string, p1: number): string;
/**
 * Hash: 0x9B5A68C6489E9909 | ApiSet: undefined
 */
export declare function statIncrement(statName: number | string, value: number): void;
/**
 * ```
 * NativeDB Added Parameter 4: Any p3
 * ```
 * Hash: 0xE07BCA305B82D2FD | ApiSet: undefined
 */
export declare function statSave(p0: number, p1: boolean, p2: number): boolean;
/**
 * ```
 * platformName must be one of the following: ps3, xbox360, ps4, xboxone
 * ```
 * Hash: 0xA5C80D8E768A9E66 | ApiSet: undefined
 */
export declare function statMigrateSave(platformName: string): boolean;
/**
 * Hash: 0xF434A10BA01C37D0 | ApiSet: undefined
 */
export declare function statSetBlockSaves(toggle: boolean): void;
/**
 * Hash: 0x3270F67EED31FBC1 | ApiSet: undefined
 */
export declare function statSaveMigrationConsumeContentUnlock(contentId: number | string, srcPlatform: string, srcGamerHandle: string): boolean;
/**
 * Hash: 0x4FEF53183C3C6414 | ApiSet: undefined
 */
export declare function statSaveMigrationCancel(): boolean;
/**
 * Hash: 0xC70DDCE56D0D3A99 | ApiSet: undefined
 */
export declare function statSaveMigrationStatusStart(): boolean;
/**
 * Hash: 0xBBB6AD006F1BBEA3 | ApiSet: undefined
 */
export declare function statSavePendingOrRequested(): boolean;
/**
 * Hash: 0x047CBED6F6F8B63C | ApiSet: undefined
 */
export declare function statSetCheatIsActive(): void;
/**
 * Hash: 0x7D3A583856F2C5AC | ApiSet: undefined
 */
export declare function statSavePending(): boolean;
/**
 * ```
 * Example:
 * `STATS::STAT_SET_BOOL(MISC::GET_HASH_KEY("MPPLY_MELEECHLENGECOMPLETED"), trur, true);`
 * ```
 * Hash: 0x4B33C4243DE0C432 | ApiSet: undefined
 */
export declare function statSetBool(statName: number | string, value: boolean, save: boolean): boolean;
/**
 * Hash: 0x5BC62EC1937B9E5B | ApiSet: undefined
 */
export declare function statSetBoolMasked(statName: number | string, value: boolean, mask: number, save: boolean): boolean;
/**
 * ```
 * p1 always true.
 * ```
 * Hash: 0xC2F84B7F9C4D0C61 | ApiSet: undefined
 */
export declare function statSetCurrentPosixTime(statName: number | string, p1: boolean): boolean;
/**
 * ```
 * Example:
 * `STATS::STAT_SET_FLOAT(MISC::GET_HASH_KEY("MP0_WEAPON_ACCURACY"), 66.6f, true);`
 * ```
 * Hash: 0x4851997F37FE9B3C | ApiSet: undefined
 */
export declare function statSetFloat(statName: number | string, value: number, save: boolean): boolean;
/**
 * ```
 * 'value' is a structure to a structure, 'numFields' is how many fields there are in said structure (usually 7).
 * The structure looks like this:
 * int year
 * int month
 * int day
 * int hour
 * int minute
 * int second
 * int millisecond
 * `The decompiled scripts use TIME::GET_POSIX_TIME to fill this structure.`
 * ```
 * Hash: 0x2C29BFB64F4FCBE4 | ApiSet: undefined
 */
export declare function statSetDate(statName: number | string, numFields: number, save: boolean): [boolean, any];
/**
 * Hash: 0x69FF13266D7296DA | ApiSet: undefined
 */
export declare function statSetLicensePlate(statName: number | string, str: string): boolean;
/**
 * ```
 * The following values have been found in the decompiled scripts:
 * "RC_ABI1"
 * "RC_ABI2"
 * "RC_BA1"
 * "RC_BA2"
 * "RC_BA3"
 * "RC_BA3A"
 * "RC_BA3C"
 * "RC_BA4"
 * "RC_DRE1"
 * "RC_EPS1"
 * "RC_EPS2"
 * "RC_EPS3"
 * "RC_EPS4"
 * "RC_EPS5"
 * "RC_EPS6"
 * "RC_EPS7"
 * "RC_EPS8"
 * "RC_EXT1"
 * "RC_EXT2"
 * "RC_EXT3"
 * "RC_EXT4"
 * "RC_FAN1"
 * "RC_FAN2"
 * "RC_FAN3"
 * "RC_HAO1"
 * "RC_HUN1"
 * "RC_HUN2"
 * "RC_JOS1"
 * "RC_JOS2"
 * "RC_JOS3"
 * "RC_JOS4"
 * "RC_MAU1"
 * "RC_MIN1"
 * "RC_MIN2"
 * "RC_MIN3"
 * "RC_MRS1"
 * "RC_MRS2"
 * "RC_NI1"
 * "RC_NI1A"
 * "RC_NI1B"
 * "RC_NI1C"
 * "RC_NI1D"
 * "RC_NI2"
 * "RC_NI3"
 * "RC_OME1"
 * "RC_OME2"
 * "RC_PA1"
 * "RC_PA2"
 * "RC_PA3"
 * "RC_PA3A"
 * "RC_PA3B"
 * "RC_PA4"
 * "RC_RAM1"
 * "RC_RAM2"
 * "RC_RAM3"
 * "RC_RAM4"
 * "RC_RAM5"
 * "RC_SAS1"
 * "RC_TON1"
 * "RC_TON2"
 * "RC_TON3"
 * "RC_TON4"
 * "RC_TON5"
 * ```
 * Hash: 0x17695002FD8B2AE0 | ApiSet: undefined
 */
export declare function statSetGxtLabel(statName: number | string, value: string, save: boolean): boolean;
/**
 * Hash: 0xDB283FDE680FE72E | ApiSet: undefined
 */
export declare function statSetPos(statName: number | string, position: Vector3, save: boolean): boolean;
/**
 * Hash: 0xB3271D7AB655B441 | ApiSet: undefined
 */
export declare function statSetInt(statName: number | string, value: number, save: boolean): boolean;
/**
 * Hash: 0x8CDDF1E452BABE11 | ApiSet: undefined
 */
export declare function statSetUserId(statName: number | string, value: string, save: boolean): boolean;
/**
 * Hash: 0x7BBB1B54583ED410 | ApiSet: undefined
 */
export declare function statSetMaskedInt(statName: number | string, p1: any, p2: any, p3: number, save: boolean): boolean;
/**
 * ```
 * Does not take effect immediately, unfortunately.
 * profileSetting seems to only be 936, 937 and 938 in scripts
 * ```
 * Hash: 0x68F01422BE1D838F | ApiSet: undefined
 */
export declare function statSetProfileSettingValue(profileSetting: number, value: number): void;
/**
 * Hash: 0xA87B2335D12531D7 | ApiSet: undefined
 */
export declare function statSetString(statName: number | string, value: string, save: boolean): boolean;
/**
 * Hash: 0x0D0A9F0E7BD91E3C | ApiSet: undefined
 */
export declare function statSlotIsLoaded(p0: any): boolean;
/**
 * ```
 * Gets the aggressiveness factor of the ocean waves.
 * ```
 * Hash: 0x2B2A2CC86778B619 | ApiSet: undefined
 */
export declare function getDeepOceanScaler(): number;
/**
 * Retrieves the depth of the water beneath the specified position, accounting for the waves.
 * **Note:** The result might vary depending on the specific frame when this command is executed due to wave fluctuations.
 * Hash: 0xF6829842C06AE524 | ApiSet: undefined
 */
export declare function getWaterHeight(position: Vector3): [boolean, number];
/**
 * Retrieves the depth of the water beneath the specified position, disregarding wave effects.
 * **Note:** The result remains consistent across different frames as it doesn't consider wave fluctuations.
 * Hash: 0x8EE6B53CE13A9794 | ApiSet: undefined
 */
export declare function getWaterHeightNoWaves(position: Vector3): [boolean, number];
/**
 * ```
 * p0 is the handle returned from _0xFDBF4CDBC07E1706
 * ```
 * Hash: 0xB1252E3E59A82AAF | ApiSet: undefined
 */
export declare function removeCurrentRise(p0: number): void;
/**
 * Hash: 0x547237AA71AB44DE | ApiSet: undefined
 */
export declare function _0x547237AA71AB44DE(p0: number): void;
/**
 * ```
 * Sets the water height for a given position and radius.
 * ```
 * Hash: 0xC443FD757C3BA637 | ApiSet: undefined
 */
export declare function modifyWater(x: number, y: number, height: number, radius: number): void;
/**
 * ```
 * Sets the waves intensity back to original (1.0 in most cases).
 * ```
 * Hash: 0x5E5E99285AE812DB | ApiSet: undefined
 */
export declare function resetDeepOceanScaler(): void;
/**
 * Only 8 current rises can exist. If rises need to be changed, use REMOVE_EXTRA_CALMING_QUAD and then ADD_EXTRA_CALMING_QUAD again.
 * After removing a rise, you will be able to add a rise again.
 * Hash: 0xFDBF4CDBC07E1706 | ApiSet: undefined
 */
export declare function addExtraCalmingQuad(xLow: number, yLow: number, xHigh: number, yHigh: number, height: number): number;
/**
 * Hash: 0xFFA5D878809819DB | ApiSet: undefined
 */
export declare function testProbeAgainstWater(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number): [boolean, Vector3];
/**
 * ```
 * Sets a value that determines how aggressive the ocean waves will be. Values of 2.0 or more make for very aggressive waves like you see during a thunderstorm.
 * Works only ~200 meters around the player.
 * ```
 * Hash: 0xB96B00E976BE977F | ApiSet: undefined
 */
export declare function setDeepOceanScaler(intensity: number): void;
/**
 * Hash: 0x2B3451FA1E3142E2 | ApiSet: undefined
 */
export declare function testVerticalProbeAgainstAllWater(position: Vector3, flag: number): [boolean, number];
/**
 * Flags are identical to START_SHAPE_TEST\*, however, 128 is automatically set.
 * Hash: 0x8974647ED222EA5F | ApiSet: undefined
 */
export declare function testProbeAgainstAllWater(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, flag: number): [boolean, Vector3];
/**
 * Hash: 0x2472622CE1F2D45F | ApiSet: undefined
 */
export declare function addAmmoToPedByType(ped: number | Ped, ammoType: number | string, ammo: number): void;
/**
 * Hash: 0x78F0424C34306220 | ApiSet: undefined
 */
export declare function addAmmoToPed(ped: number | Ped, weaponHash: number | string, ammo: number): void;
/**
 * Hash: 0xAC678E40BE7C74D2 | ApiSet: undefined
 */
export declare function clearEntityLastWeaponDamage(entity: number | Entity): void;
/**
 * Does NOT seem to work with HAS_PED_BEEN_DAMAGED_BY_WEAPON. Use CLEAR_ENTITY_LAST_WEAPON_DAMAGE and HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON instead.
 * Hash: 0x0E98F88A24C5F4B8 | ApiSet: undefined
 */
export declare function clearPedLastWeaponDamage(ped: number | Ped): void;
/**
 * ```
 * this returns if you can use the weapon while using a parachute
 * ```
 * Hash: 0xBC7BE5ABC0879F74 | ApiSet: undefined
 */
export declare function canUseWeaponOnParachute(weaponHash: number | string): boolean;
/**
 * Create a weapon object that cannot be attached to a ped. If you want to create a weapon object that can be attached to a ped, use [`CREATE_OBJECT`](#\_0x509D5878EB39E842) instead.
 * ```
 * NativeDB Added Parameter 9: BOOL bRegisterAsNetworkObject
 * NativeDB Added Parameter 10: BOOL bScriptHostObject
 * ```
 * Hash: 0x9541D3CF0D398F36 | ApiSet: undefined
 */
export declare function createWeaponObject(weaponHash: number | string, ammoCount: number, position: Vector3, bCreateDefaultComponents: boolean, scale: number, customModelHash: number): any;
/**
 * Hash: 0x5CEE3DF569CECAB0 | ApiSet: undefined
 */
export declare function doesWeaponTakeWeaponComponent(weaponHash: number | string, componentHash: number | string): boolean;
/**
 * Hash: 0x9DA58CDBF6BDBC08 | ApiSet: undefined
 */
export declare function createAirDefenceAngledArea(srcCoord1X: number, srcCoord1Y: number, srcCoord1Z: number, srcCoord2X: number, srcCoord2Y: number, srcCoord2Z: number, fWidth: number, weaponPositionX: number, weaponPositionY: number, weaponPositionZ: number, weaponHash: number | string): number;
/**
 * Hash: 0xCD79A550999D7D4F | ApiSet: undefined
 */
export declare function doesAirDefenseZoneExist(zoneId: number): boolean;
/**
 * Hash: 0x2E1202248937775C | ApiSet: undefined
 */
export declare function getAmmoInClip(ped: number | Ped, weaponHash: number | string): [boolean, number];
/**
 * ```
 * Enables laser sight on any weapon.
 * It doesn't work. Neither on tick nor OnKeyDown
 * ```
 * Hash: 0xC8B46D7727D864AA | ApiSet: undefined
 */
export declare function enableLaserSightRendering(toggle: boolean): void;
/**
 * ```
 * `WEAPON::EXPLODE_PROJECTILES(PLAYER::PLAYER_PED_ID(), func_221(0x00000003), 0x00000001);`
 * ```
 * Hash: 0xFC4BD125DE7611E4 | ApiSet: undefined
 */
export declare function explodeProjectiles(ped: number | Ped, weaponHash: number | string, p2: boolean): void;
/**
 * Both coordinates are from objects in the decompiled scripts.
 * Native related to [\_0xECDC202B25E5CF48](#\_0xECDC202B25E5CF48) p1 value. The only weapon hash used in the decompiled scripts is weapon_air_defence_gun. These two natives are used by the yacht script, decompiled scripts suggest it and the weapon hash used (valkyrie's rockets) are also used by yachts.
 * Hash: 0x91EF34584710BE99 | ApiSet: undefined
 */
export declare function createAirDefenceSphere(position: Vector3, radius: number, weaponPositionX: number, weaponPositionY: number, weaponPositionZ: number, weaponHash: number | string): number;
/**
 * ```
 * `WEAPON::GET_AMMO_IN_PED_WEAPON(PLAYER::PLAYER_PED_ID(), a_0)`
 * From decompiled scripts
 * Returns total ammo in weapon
 * GTALua Example :
 * natives.WEAPON.GET_AMMO_IN_PED_WEAPON(plyPed, WeaponHash)
 * ```
 * Hash: 0x015A522136D7F951 | ApiSet: undefined
 */
export declare function getAmmoInPedWeapon(ped: number | Ped, weaponhash: number | string): number;
/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0x2857938C5D407AFA | ApiSet: undefined
 */
export declare function getAmmoInVehicleWeaponClip(vehicle: number | Vehicle, seat: number, ammo: number): boolean;
/**
 * Hash: 0x44F1012B69313374 | ApiSet: undefined
 */
export declare function fireAirDefenseWeapon(zoneId: number, position: Vector3): void;
/**
 * Hash: 0x1017582BCD3832DC | ApiSet: undefined
 */
export declare function getCurrentPedVehicleWeapon(ped: number | Ped): [boolean, number];
/**
 * Hash: 0x8483E98E8B888AE2 | ApiSet: undefined
 */
export declare function getBestPedWeapon(ped: number | Ped, ignoreAmmoCount: boolean): number;
/**
 * ```
 * gadgetHash - was always 0xFBAB5776 ("GADGET_PARACHUTE").
 * ```
 * Hash: 0xF731332072F5156C | ApiSet: undefined
 */
export declare function getIsPedGadgetEquipped(ped: number | Ped, gadgetHash: number | string): boolean;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x3B390A939AF0B5FC | ApiSet: undefined
 */
export declare function getCurrentPedWeaponEntityIndex(ped: number | Ped): number;
/**
 * ```
 * The return value seems to indicate returns true if the hash of the weapon object weapon equals the weapon hash.
 * p2 seems to be 1 most of the time; and is not implemented.
 * ```
 * Hash: 0x3A87E44BB9A01D54 | ApiSet: undefined
 */
export declare function getCurrentPedWeapon(ped: number | Ped, p2: boolean): [boolean, number];
/**
 * Hash: 0xDC16122C7A20C933 | ApiSet: undefined
 */
export declare function getMaxAmmo(ped: number | Ped, weaponHash: number | string): [boolean, number];
/**
 * Hash: 0x840F03E9041E2C9C | ApiSet: undefined
 */
export declare function getLockonDistanceOfCurrentPedWeapon(ped: number | Ped): number;
/**
 * ```
 * p2 is mostly 1 in the scripts.
 * ```
 * Hash: 0xA38DCFFCEA8962FA | ApiSet: undefined
 */
export declare function getMaxAmmoInClip(ped: number | Ped, weaponHash: number | string, p2: boolean): number;
/**
 * Hash: 0x585847C5E4E11709 | ApiSet: undefined
 */
export declare function getMaxAmmoByType(ped: number | Ped, ammoType: number | string): [boolean, number];
/**
 * Hash: 0x814C9D19DFD69679 | ApiSet: undefined
 */
export declare function getMaxRangeOfCurrentPedWeapon(ped: number | Ped): number;
/**
 * ```
 * Pass ped. Pass address of Vector3.
 * The coord will be put into the Vector3.
 * The return will determine whether there was a coord found or not.
 * ```
 * Hash: 0x6C4D0409BA1A2BC2 | ApiSet: undefined
 */
export declare function getPedLastWeaponImpactCoord(ped: number | Ped): [boolean, Vector3];
/**
 * ```
 * Returns the current ammo type of the specified ped's specified weapon.
 * MkII magazines will change the return value, like Pistol MkII returning AMMO_PISTOL without any components and returning AMMO_PISTOL_TRACER after Tracer Rounds component is attached.
 * Use 0xF489B44DD5AF4BD9 if you always want AMMO_PISTOL.
 * ```
 * Hash: 0x7FEAD38B326B9F74 | ApiSet: undefined
 */
export declare function getPedAmmoTypeFromWeapon(ped: number | Ped, weaponHash: number | string): number;
/**
 * Hash: 0x39D22031557946C1 | ApiSet: undefined
 */
export declare function getPedAmmoByType(ped: number | Ped, ammoType: number | string): number;
/**
 * Hash: 0xEFFED78E9011134D | ApiSet: undefined
 */
export declare function getPedWeapontypeInSlot(ped: number | Ped, weaponSlot: number | string): number;
/**
 * Hash: 0x2B9EEDC07BD06B9F | ApiSet: undefined
 */
export declare function getPedWeaponTintIndex(ped: number | Ped, weaponHash: number | string): number;
/**
 * ```
 * Returns the base/default ammo type of the specified ped's specified weapon.
 * Use GET_PED_AMMO_TYPE_FROM_WEAPON if you want current ammo type (like AMMO_MG_INCENDIARY/AMMO_MG_TRACER while using MkII magazines) and use this if you want base ammo type. (AMMO_MG)
 * ```
 * Hash: 0xF489B44DD5AF4BD9 | ApiSet: undefined
 */
export declare function getPedAmmoTypeFromWeapon2(ped: number | Ped, weaponHash: number | string): number;
/**
 * Hash: 0x0A6DB4965674D243 | ApiSet: undefined
 */
export declare function getSelectedPedWeapon(ped: number | Ped): number;
/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0xD0AD348FFD7A6868 | ApiSet: undefined
 */
export declare function getVehicleWeaponReloadTime(vehicle: number | Vehicle, seat: number): number;
/**
 * Hash: 0xF0A60040BE558F2D | ApiSet: undefined
 */
export declare function getPedWeaponLiveryColor(ped: number | Ped, weaponHash: number | string, camoComponentHash: number | string): number;
/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0xC8C6F4B1CDEB40EF | ApiSet: undefined
 */
export declare function getTimeBeforeVehicleWeaponReloadFinishes(vehicle: number | Vehicle, seat: number): number;
/**
 * Hash: 0xB3CAF387AE12E9F8 | ApiSet: undefined
 */
export declare function getWeaponComponentHudStats(componentHash: number | string): [boolean, number];
/**
 * ```
 * // Returns the size of the default weapon component clip.
 * Use it like this:
 * char cClipSize[32];
 * Hash cur;
 * `if (WEAPON::GET_CURRENT_PED_WEAPON(playerPed, &cur, 1))`
 * {
 * `if (WEAPON::IS_WEAPON_VALID(cur))`
 * {
 * `int iClipSize = WEAPON::GET_WEAPON_CLIP_SIZE(cur);`
 * sprintf_s(cClipSize, "ClipSize: %.d", iClipSize);
 * vDrawString(cClipSize, 0.5f, 0.5f);
 * }
 * }
 * ```
 * Hash: 0x583BE370B1EC6EB4 | ApiSet: undefined
 */
export declare function getWeaponClipSize(weaponHash: number | string): number;
/**
 * Hash: 0x0DB57B41EC1DB083 | ApiSet: undefined
 */
export declare function getWeaponComponentTypeModel(componentHash: number | string): number;
/**
 * Hash: 0x4D1CB8DC40208A17 | ApiSet: undefined
 */
export declare function getWeaponComponentVariantExtraComponentModel(componentHash: number | string, extraComponentIndex: number): number;
/**
 * ```
 * 0=unknown (or incorrect weaponHash)
 * 1= no damage (flare,snowball, petrolcan)
 * 2=melee
 * 3=bullet
 * 4=force ragdoll fall
 * 5=explosive (RPG, Railgun, grenade)
 * 6=fire(molotov)
 * 8=fall(WEAPON_HELI_CRASH)
 * 10=electric
 * 11=barbed wire
 * 12=extinguisher
 * 13=gas
 * 14=water cannon(WEAPON_HIT_BY_WATER_CANNON)
 * ```
 * Hash: 0x3BE0BB12D25FB305 | ApiSet: undefined
 */
export declare function getWeaponDamageType(weaponHash: number | string): number;
/**
 * Hash: 0xB3EA4FEABF41464B | ApiSet: undefined
 */
export declare function getWeaponObjectLiveryColor(weaponObject: any, camoComponentHash: number | string): number;
/**
 * This native does not return damages of weapons from the melee and explosive group.
 * Hash: 0x3133B907D8B32053 | ApiSet: undefined
 */
export declare function getWeaponDamage(weaponHash: number | string, componentHash: number | string): number;
/**
 * Hash: 0x6558AC7C17BFEF58 | ApiSet: undefined
 */
export declare function getWeaponComponentVariantExtraComponentCount(componentHash: number | string): number;
/**
 * ```
 * Drops the current weapon and returns the object
 * Unknown behavior when unarmed.
 * ```
 * Hash: 0xCAE1DC9A0E22A16D | ApiSet: undefined
 */
export declare function getWeaponObjectFromPed(ped: number | Ped, p1: boolean): any;
/**
 * Hash: 0xCD183314F7CD2E57 | ApiSet: undefined
 */
export declare function getWeaponObjectTintIndex(weapon: any): number;
/**
 * Hash: 0x5DCF6C5CAB2E9BF7 | ApiSet: undefined
 */
export declare function getWeaponTintCount(weaponHash: number | string): number;
/**
 * ```
 * // members should be aligned to 8 bytes by default but it's best to use alignas here, just to be sure
 * struct WeaponHudStatsData
 * {
 * alignas(8) uint8_t hudDamage; // 0x0000
 * alignas(8) uint8_t hudSpeed; // 0x0008
 * alignas(8) uint8_t hudCapacity; // 0x0010
 * alignas(8) uint8_t hudAccuracy; // 0x0018
 * alignas(8) uint8_t hudRange; // 0x0020
 * };
 * Usage:
 * WeaponHudStatsData data;
 * if (GET_WEAPON_HUD_STATS(weaponHash, (Any*)&data))
 * {
 * // uint8_t damagePercentage = data.hudDamage etc...
 * }
 * ```
 * Hash: 0xD92C739EE34C9EBA | ApiSet: undefined
 */
export declare function getWeaponHudStats(weaponHash: number | string): [boolean, any];
/**
 * Gets and returns the hash of the group of the specified weapon (group names can be found/changed under "Group" in the weapons' meta file).
 * Note that the group is **not** the same as the location on the weapon wheel.
 * Hash: 0xC3287EE3050FB74C | ApiSet: undefined
 */
export declare function getWeapontypeGroup(weaponHash: number | string): number;
/**
 * Hash: 0x4215460B9B8B7FA0 | ApiSet: undefined
 */
export declare function getWeapontypeSlot(weaponHash: number | string): number;
/**
 * ```
 * Returns the model of any weapon.
 * Can also take an ammo hash?
 * `sub_6663a(&l_115B, WEAPON::GET_WEAPONTYPE_MODEL(${ammo_rpg}));`
 * ```
 * Hash: 0xF46CDC33180FDA94 | ApiSet: undefined
 */
export declare function getWeapontypeModel(weaponHash: number | string): number;
/**
 * Hash: 0x065D2AACAD8CF7A4 | ApiSet: undefined
 */
export declare function getWeaponTimeBetweenShots(weaponHash: number | string): number;
/**
 * List of all available loadouts:
 * ```
 * LOADOUT_DEFAULT
 * LOADOUT_ANIMAL
 * LOADOUT_COUGAR
 * LOADOUT_HILLBILLY
 * LOADOUT_CULT
 * LOADOUT_CHEAT_0
 * LOADOUT_CHEAT_1
 * LOADOUT_GUARD
 * LOADOUT_NETWORK_BOT
 * LOADOUT_LOST
 * LOADOUT_LOST_L1
 * LOADOUT_LOST_L2
 * LOADOUT_LOST_L3
 * LOADOUT_MEXICAN
 * LOADOUT_MEXICAN_L1
 * LOADOUT_MEXICAN_L2
 * LOADOUT_MEXICAN_L3
 * LOADOUT_FAMILY
 * LOADOUT_ASIAN
 * LOADOUT_SECUR
 * LOADOUT_POLICE_GUARD
 * LOADOUT_COP
 * LOADOUT_COP_L1
 * LOADOUT_COP_L2
 * LOADOUT_COP_L3
 * LOADOUT_SWAT
 * LOADOUT_SWAT_NO_LASER
 * LOADOUT_COP_SHOTGUN
 * LOADOUT_FIREMAN
 * LOADOUT_COP_HELI
 * LOADOUT_COP_BOAT
 * LOADOUT_ARMY
 * LOADOUT_ANIMAL_RETRIEVER
 * LOADOUT_SMALL_DOG
 * LOADOUT_TIGER_SHARK
 * LOADOUT_HAMMERHEAD_SHARK
 * LOADOUT_KILLER_WHALE
 * LOADOUT_BOAR
 * LOADOUT_PIG
 * LOADOUT_COYOTE
 * LOADOUT_DEER
 * LOADOUT_HEN
 * LOADOUT_RABBIT
 * LOADOUT_CAT
 * LOADOUT_COW
 * ```
 * Hash: 0x68F8BE6AF5CDF8A6 | ApiSet: undefined
 */
export declare function giveLoadoutToPed(ped: number | Ped, loadoutHash: number | string): void;
/**
 * Hash: 0xD966D51AA5B28BB9 | ApiSet: undefined
 */
export declare function giveWeaponComponentToPed(ped: number | Ped, weaponHash: number | string, componentHash: number | string): void;
/**
 * ```
 * Gives a weapon to PED with a delay, example:
 * `WEAPON::GIVE_DELAYED_WEAPON_TO_PED(PED::PLAYER_PED_ID(), MISC::GET_HASH_KEY("WEAPON_PISTOL"), 1000, false)`
 * ```
 * Hash: 0xB282DC6EBD803C75 | ApiSet: undefined
 */
export declare function giveDelayedWeaponToPed(ped: number | Ped, weaponHash: number | string, ammoCount: number, bForceInHand: boolean): void;
/**
 * Hash: 0xB1FA61371AF7C4B7 | ApiSet: undefined
 */
export declare function giveWeaponObjectToPed(weaponObject: any, ped: number | Ped): void;
/**
 * ```
 * It determines what weapons caused damage:
 * If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
 * If you want to define any melee weapon, second parameter=0, third parameter=1.
 * If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
 * ```
 * Hash: 0x2D343D2219CD027A | ApiSet: undefined
 */
export declare function hasPedBeenDamagedByWeapon(ped: number | Ped, weaponHash: number | string, weaponType: number): boolean;
/**
 * ```
 * addonHash:
 * `(use WEAPON::GET_WEAPON_COMPONENT_TYPE_MODEL() to get hash value)`
 * ${component_at_ar_flsh}, ${component_at_ar_supp}, ${component_at_pi_flsh}, ${component_at_scope_large}, ${component_at_ar_supp_02}
 * ```
 * Hash: 0x33E179436C0B31DB | ApiSet: undefined
 */
export declare function giveWeaponComponentToWeaponObject(weaponObject: any, addonHash: number | string): void;
/**
 * ```
 * It determines what weapons caused damage:
 * If you want to define only a specific weapon, second parameter=weapon hash code, third parameter=0
 * If you want to define any melee weapon, second parameter=0, third parameter=1.
 * If you want to identify any weapon (firearms, melee, rockets, etc.), second parameter=0, third parameter=2.
 * ```
 * Hash: 0x131D401334815E94 | ApiSet: undefined
 */
export declare function hasEntityBeenDamagedByWeapon(entity: number | Entity, weaponHash: number | string, weaponType: number): boolean;
/**
 * ```
 * Third Parameter = unsure, but pretty sure it is weapon hash
 * --> get_hash_key("weapon_stickybomb")
 * Fourth Parameter = unsure, almost always -1
 * ```
 * Hash: 0x717C8481234E3B88 | ApiSet: undefined
 */
export declare function hasVehicleGotProjectileAttached(driver: number | Ped, vehicle: number | Vehicle, weaponHash: number | string, p3: any): boolean;
/**
 * Hash: 0x76A18844E743BF91 | ApiSet: undefined
 */
export declare function hasWeaponGotWeaponComponent(weapon: any, addonHash: number | string): boolean;
/**
 * Hash: 0xBF0FD6E56C964FCB | ApiSet: undefined
 */
export declare function giveWeaponToPed(ped: number | Ped, weaponHash: number | string, ammoCount: number, isHidden: boolean, bForceInHand: boolean): void;
/**
 * Hash: 0xC593212475FAE340 | ApiSet: undefined
 */
export declare function hasPedGotWeaponComponent(ped: number | Ped, weaponHash: number | string, componentHash: number | string): boolean;
/**
 * Checks if the ped is currently equipped with a weapon matching a bit specified using a bitwise-or in typeFlags.
 * | Bit value | Effect            |
 * |-----------|-------------------|
 * | 1         | Melee weapons     |
 * | 2         | Explosive weapons |
 * | 4         | Any other weapons |
 * Not specifying any bit will lead to the native *always* returning 'false', and for example specifying '4 | 2' will check for any weapon except fists and melee weapons.
 * Hash: 0x475768A975D5AD17 | ApiSet: undefined
 */
export declare function isPedArmed(ped: number | Ped, typeFlags: number): boolean;
/**
 * ```
 * p2 should be FALSE, otherwise it seems to always return FALSE
 * Bool does not check if the weapon is current equipped, unfortunately.
 * ```
 * Hash: 0x8DECB02F88F428BC | ApiSet: undefined
 */
export declare function hasPedGotWeapon(ped: number | Ped, weaponHash: number | string, p2: boolean): boolean;
/**
 * Hash: 0x0D78DE0572D3969E | ApiSet: undefined
 */
export declare function isPedWeaponComponentActive(ped: number | Ped, weaponHash: number | string, componentHash: number | string): boolean;
/**
 * Hash: 0x36E353271F0E90EE | ApiSet: undefined
 */
export declare function hasWeaponAssetLoaded(weaponHash: number | string): boolean;
/**
 * ```
 * Hides the players weapon during a cutscene.
 * ```
 * Hash: 0x6F6981D2253C208F | ApiSet: undefined
 */
export declare function hidePedWeaponForScriptedCutscene(ped: number | Ped, toggle: boolean): void;
/**
 * Forces a ped to reload only if they are able to; if they have a full magazine, they will not reload.
 * Hash: 0x20AE33F3AC9C0033 | ApiSet: undefined
 */
export declare function makePedReload(ped: number | Ped): boolean;
/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0x8062F07153F4446F | ApiSet: undefined
 */
export declare function hasWeaponReloadingInVehicle(vehicle: number | Vehicle, seat: number): boolean;
/**
 * Hash: 0xDAB963831DBFD3F4 | ApiSet: undefined
 */
export declare function isAnyAirDefenseZoneInsideSphere(position: Vector3, radius: number): [boolean, number];
/**
 * Hash: 0x4B7620C47217126C | ApiSet: undefined
 */
export declare function isFlashLightOn(ped: number | Ped): boolean;
/**
 * ```
 * This native returns a true or false value.
 * Ped ped = The ped whose weapon you want to check.
 * ```
 * Hash: 0x65F0C5AE05943EC7 | ApiSet: undefined
 */
export declare function isPedCurrentWeaponSilenced(ped: number | Ped): boolean;
/**
 * ```
 * SET_WEAPON_OBJECT_*
 * ```
 * Hash: 0x977CA98939E82E4B | ApiSet: undefined
 */
export declare function _0x977CA98939E82E4B(weaponObject: any, p1: number): void;
/**
 * Hash: 0xB80CA294F2F26749 | ApiSet: undefined
 */
export declare function isPedWeaponReadyToShoot(ped: number | Ped): boolean;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xE6D2CEDD370FF98E | ApiSet: undefined
 */
export declare function _0xE6D2CEDD370FF98E(p0: any, p1: any): void;
/**
 * Hash: 0x937C71165CF334B3 | ApiSet: undefined
 */
export declare function isWeaponValid(weaponHash: number | string): boolean;
/**
 * Hash: 0xA2C9AC24B4061285 | ApiSet: undefined
 */
export declare function _0xA2C9AC24B4061285(ped: number | Ped, weaponHash: number | string): number;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x24C024BA8379A70A | ApiSet: undefined
 */
export declare function _0x24C024BA8379A70A(p0: any, p1: any): void;
/**
 * Hash: 0x1E45B34ADEBEE48E | ApiSet: undefined
 */
export declare function removeAllAirDefenseZones(): void;
/**
 * Hash: 0x8C0D57EA686FAD87 | ApiSet: undefined
 */
export declare function refillAmmoInstantly(ped: number | Ped): boolean;
/**
 * Hash: 0xE4DCEC7FD5B739A5 | ApiSet: undefined
 */
export declare function _0xE4DCEC7FD5B739A5(ped: number | Ped): void;
/**
 * Parameter `p1` does not seem to be used or referenced in game binaries.\
 * **Note:** When called for networked entities, a `CRemoveAllWeaponsEvent` will be created per request.
 * Hash: 0xF25DF915FA38C5F3 | ApiSet: undefined
 */
export declare function removeAllPedWeapons(ped: number | Ped, p1: boolean): void;
/**
 * Hash: 0xF7D82B0D66777611 | ApiSet: undefined
 */
export declare function removeWeaponComponentFromWeaponObject(weaponObject: any, addonHash: number | string): void;
/**
 * Hash: 0x1E8BE90C74FB4C09 | ApiSet: undefined
 */
export declare function removeWeaponComponentFromPed(ped: number | Ped, weaponHash: number | string, componentHash: number | string): void;
/**
 * Hash: 0x0ABF535877897560 | ApiSet: undefined
 */
export declare function removeAirDefenseZone(zoneId: number): boolean;
/**
 * If `explode` true, then removal is done through exploding the projectile. Basically the same as EXPLODE_PROJECTILES but without defining the owner ped.
 * Hash: 0xFC52E0F37E446528 | ApiSet: undefined
 */
export declare function removeAllProjectilesOfType(weaponHash: number | string, explode: boolean): void;
/**
 * Hash: 0xAA08EF13F341C8FC | ApiSet: undefined
 */
export declare function removeWeaponAsset(weaponHash: number | string): void;
/**
 * Hash: 0x48164DBB970AC3F0 | ApiSet: undefined
 */
export declare function requestWeaponHighDetailModel(weaponObject: number | Entity): void;
/**
 * ```
 * Nearly every instance of p1 I found was 31. Nearly every instance of p2 I found was 0.
 * REQUEST_WEAPON_ASSET(iLocal_1888, 31, 26);
 * ```
 * Hash: 0x5443438F033E29C3 | ApiSet: undefined
 */
export declare function requestWeaponAsset(weaponHash: number | string, p1: number, p2: number): void;
/**
 * ```
 * This native removes a specified weapon from your selected ped.
 * Weapon Hashes: pastebin.com/0wwDZgkF
 * Example:
 * C#:
 * Function.Call(Hash.REMOVE_WEAPON_FROM_PED, Game.Player.Character, 0x99B507EA);
 * C++:
 * `WEAPON::REMOVE_WEAPON_FROM_PED(PLAYER::PLAYER_PED_ID(), 0x99B507EA);`
 * The code above removes the knife from the player.
 * ```
 * Hash: 0x4899CB088EDF59B8 | ApiSet: undefined
 */
export declare function removeWeaponFromPed(ped: number | Ped, weaponHash: number | string): void;
/**
 * Disables selecting the given weapon. Ped isn't forced to put the gun away. However you can't reselect the weapon if you holster then unholster. Weapon is also grayed out on the weapon wheel.
 * Hash: 0xB4771B9AAF4E68E4 | ApiSet: undefined
 */
export declare function setCanPedEquipWeapon(ped: number | Ped, weaponHash: number | string, toggle: boolean): void;
/**
 * Hash: 0xDCD2A934D65CB497 | ApiSet: undefined
 */
export declare function setAmmoInClip(ped: number | Ped, weaponHash: number | string, ammo: number): boolean;
/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0x873906720EE842C3 | ApiSet: undefined
 */
export declare function setAmmoInVehicleWeaponClip(vehicle: number | Vehicle, seat: number, ammo: number): boolean;
/**
 * Enables/disables flashlight on ped's weapon.
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x988DB6FE9B3AC000 | ApiSet: undefined
 */
export declare function setFlashLightEnabled(ped: number | Ped, toggle: boolean): void;
/**
 * Does the same as [`_SET_CAN_PED_SELECT_WEAPON`](#\_0xB4771B9AAF4E68E4) except for all weapons.
 * Hash: 0xEFF296097FF1E509 | ApiSet: undefined
 */
export declare function setCanPedEquipAllWeapons(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0xA4EFEF9440A5B0EF | ApiSet: undefined
 */
export declare function setPedAmmoToDrop(ped: number | Ped, ammo: number): void;
/**
 * Hash: 0x75C55983C2C39DAA | ApiSet: undefined
 */
export declare function setCurrentPedVehicleWeapon(ped: number | Ped, weaponHash: number | string): boolean;
/**
 * Hash: 0x8378627201D5497D | ApiSet: undefined
 */
export declare function setPedChanceOfFiringBlanks(ped: number | Ped, xBias: number, yBias: number): void;
/**
 * Hash: 0xCEA66DAD478CD39B | ApiSet: undefined
 */
export declare function setFlashLightFadeDistance(distance: number): any;
/**
 * Hash: 0xADF692B254977C0C | ApiSet: undefined
 */
export declare function setCurrentPedWeapon(ped: number | Ped, weaponHash: number | string, bForceInHand: boolean): void;
/**
 * Hash: 0x5FD1E1F011E76D7E | ApiSet: undefined
 */
export declare function setPedAmmoByType(ped: number | Ped, ammoType: number | string, ammo: number): void;
/**
 * Restricts weapon selection when cycling through weapons, to select only vehicle weapons.
 * Hash: 0x50276EF8172F5F12 | ApiSet: undefined
 */
export declare function setPedCycleVehicleWeaponsOnly(ped: number | Ped): void;
/**
 * ```
 * NativeDB Added Parameter 4: BOOL p3
 * ```
 * Hash: 0x14E56BC5B5DB6A19 | ApiSet: undefined
 */
export declare function setPedAmmo(ped: number | Ped, weaponHash: number | string, ammo: number): void;
/**
 * Hash: 0x476AE72C1D19D1A8 | ApiSet: undefined
 */
export declare function setPedDropsWeaponsWhenDead(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x183DADC6AA953186 | ApiSet: undefined
 */
export declare function setPedInfiniteAmmoClip(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x3EDCB0505123623B | ApiSet: undefined
 */
export declare function setPedInfiniteAmmo(ped: number | Ped, toggle: boolean, weaponHash: number | string): void;
/**
 * Hash: 0x9FE5633880ECD8ED | ApiSet: undefined
 */
export declare function setPedWeaponLiveryColor(ped: number | Ped, weaponHash: number | string, camoComponentHash: number | string, colorIndex: number): void;
/**
 * Hash: 0x6B7513D9966FBEC0 | ApiSet: undefined
 */
export declare function setPedDropsWeapon(ped: number | Ped): void;
/**
 * ```
 * Has 5 parameters since latest patches.
 * ```
 * Hash: 0x0725A4CCFDED9A70 | ApiSet: undefined
 */
export declare function setPedCurrentWeaponVisible(ped: number | Ped, visible: boolean, deselectWeapon: boolean, p3: boolean, p4: boolean): void;
/**
 * Changes the selected ped aiming animation style, you can find the list of animations below.
 * These are stored in the `weaponanimations.meta` file located in `Grand Theft Auto V\update\update.rpf\common\data\ai\weaponanimations.meta`.
 * For Lua, it's best if you send the animation using [compile-time jenkins](https://cookbook.fivem.net/2019/06/23/lua-support-for-compile-time-jenkins-hashes/) hashes to avoid overhead. An example is shown down below.
 * ### Animations
 * ```cpp
 * enum eWeaponAnimationOverrides {
 * Ballistic = 0x5534A626,
 * Default = 0xE4DF46D5,
 * Franklin = 0x44C24694,
 * Gang = 0xBC066B98,
 * Michael = 0x55932F38,
 * MP_F_Freemode = 0xACB10C83,
 * Trevor = 0x2737D5AC,
 * Hillbilly = 0x8503D409,
 * Gang1H = 0x724A7AB7,
 * FirstPerson = 0xEE38E8E0,
 * FirstPersonAiming = 0xC76297A3,
 * FirstPersonRNG = 0xA4FDD608,
 * FirstPersonScope = 0x28117C22,
 * FirstPersonMichael = 0xEAA2550B,
 * FirstPersonMichaelAiming = 0x3E6FF30F,
 * FirstPersonMichaelRNG = 0xB7A826C1,
 * FirstPersonMichaelScope = 0xC554CF97,
 * FirstPersonFranklin = 0xC407163A,
 * FirstPersonFranklinAiming = 0x3D4B7B03,
 * FirstPersonFranklinRNG = 0xBE79B0B4,
 * FirstPersonFranklinScope = 0xAFEA6593,
 * FirstPersonTrevor = 0xA65D5351,
 * FirstPersonTrevorAiming = 0xF9BE8ED9,
 * FirstPersonTrevorRNG = 0xD181ED09,
 * FirstPersonTrevorScope = 0x34A67D6D,
 * FirstPersonMPFemale = 0x8431583F,
 * Fat = 0xC531A409,
 * SuperFat = 0x529E5780,
 * Female = 0x6D155A1B,
 * GangFemale = 0x678ADF82,
 * }
 * ```
 * Hash: 0x1055AC3A667F09D9 | ApiSet: undefined
 */
export declare function setWeaponAnimationOverride(ped: number | Ped, animStyle: number | string): void;
/**
 * ```
 * Returns handle of the projectile.
 * ```
 * Hash: 0xB4C8D77C80C0421E | ApiSet: undefined
 */
export declare function setPedShootOrdnanceWeapon(ped: number | Ped, p1: number): any;
/**
 * Hash: 0x208A1888007FC0E6 | ApiSet: undefined
 */
export declare function setPedDropsInventoryWeapon(ped: number | Ped, weaponHash: number | string, xOffset: number, yOffset: number, zOffset: number, ammoCount: number): void;
/**
 * Hash: 0xE620FD3512A04F18 | ApiSet: undefined
 */
export declare function setPickupAmmoAmountScaler(p0: number): void;
/**
 * ```
 * tintIndex can be the following:
 * 0 : Default/Black
 * 1 : Green
 * 2 : Gold
 * 3 : Pink
 * 4 : Army
 * 5 : LSPD
 * 6 : Orange
 * 7 : Platinum
 * tintIndex for MK2 weapons :
 * 0 : Classic Black
 * 1 : Classic Gray
 * 2 : Classic Two-Tone
 * 3 : Classic White
 * 4 : Classic Beige
 * 5 : Classic Green
 * 6 : Classic Blue
 * 7 : Classic Earth
 * 8 : Classic Brown & Black
 * 9 : Red Contrast
 * 10 : Blue Contrast
 * 11 : Yellow Contrast
 * 12 : Orange Contrast
 * 13 : Bold Pink
 * 14 : Bold Purple & Yellow
 * 15 : Bold Orange
 * 16 : Bold Green & Purple
 * 17 : Bold Red Features
 * 18 : Bold Green Features
 * 19 : Bold Cyan Features
 * 20 : Bold Yellow Features
 * 21 : Bold Red & White
 * 22 : Bold Blue & White
 * 23 : Metallic Gold
 * 24 : Metallic Platinum
 * 25 : Metallic Gray & Lilac
 * 26 : Metallic Purple & Lime
 * 27 : Metallic Red
 * 28 : Metallic Green
 * 29 : Metallic Blue
 * 30 : Metallic White & Aqua
 * 31 : Metallic Orange & Yellow
 * 32 : Mettalic Red and Yellow
 * ```
 * Hash: 0x50969B9B89ED5738 | ApiSet: undefined
 */
export declare function setPedWeaponTintIndex(ped: number | Ped, weaponHash: number | string, tintIndex: number): void;
/**
 * ```
 * p1/gadgetHash was always 0xFBAB5776 ("GADGET_PARACHUTE").
 * p2 is always true.
 * ```
 * Hash: 0xD0D7B1E680ED4A1A | ApiSet: undefined
 */
export declare function setPedGadget(ped: number | Ped, gadgetHash: number | string, p2: boolean): void;
/**
 * Changes the weapon damage output by the given multiplier value.
 * Does NOT need to be called every frame.
 * Hash: 0x4757F00BC6323CFE | ApiSet: undefined
 */
export declare function setWeaponDamageModifier(weaponHash: number | string, damageMultiplier: number): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x4AE5AC8B852D642C | ApiSet: undefined
 */
export declare function setWeaponExplosionRadiusMultiplier(weaponHash: number | string, multiplier: number): void;
/**
 * Hash: 0xF827589017D4E4A9 | ApiSet: undefined
 */
export declare function setWeaponObjectTintIndex(weapon: any, tintIndex: number): void;
/**
 * Hash: 0xECDC202B25E5CF48 | ApiSet: undefined
 */
export declare function setPlayerAirDefenseZoneFlag(player: number | string | Player, zoneId: number, enable: boolean): void;
/**
 * Start a reload for a vehicle's weapon.
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0x5B1513F27F279A44 | ApiSet: undefined
 */
export declare function triggerVehicleWeaponReload(vehicle: number | Vehicle, seat: number, ped: number | Ped): boolean;
/**
 * Hash: 0x5DA825A85D0EA6E6 | ApiSet: undefined
 */
export declare function setWeaponObjectLiveryColor(weaponObject: any, camoComponentHash: number | string, colorIndex: number): void;
/**
 * ```
 * Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.
 * Modified example from "am_imp_exp.c4", line 6418:
 * `\/\* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));`
 * etc.
 * \*\/
 * `STREAMING::SET_MODEL_AS_NO_LONGER_NEEDED(vehicleHash);`
 * `ZONE::CLEAR_POPSCHEDULE_OVERRIDE_VEHICLE_MODEL(popSchedules[index]);`
 * ```
 * Hash: 0x5C0DE367AA0D911C | ApiSet: undefined
 */
export declare function clearPopscheduleOverrideVehicleModel(scheduleId: number): void;
/**
 * ```
 * Returns a hash representing which part of the map the given coords are located.
 * Possible return values:
 * (Hash of) city -> -289320599
 * (Hash of) countryside -> 2072609373
 * C# Example :
 * Ped player = Game.Player.Character;
 * Hash h = Function.Call<Hash>(Hash.GET_HASH_OF_MAP_AREA_AT_COORDS, player.Position.X, player.Position.Y, player.Position.Z);
 * ```
 * Hash: 0x7EE64D51E8498728 | ApiSet: undefined
 */
export declare function getHashOfMapAreaAtCoords(position: Vector3): number;
/**
 * ```
 * 'zoneName' corresponds to an entry in 'popzone.ipl'.
 * AIRP = Los Santos International Airport
 * ALAMO = Alamo Sea
 * ALTA = Alta
 * ARMYB = Fort Zancudo
 * BANHAMC = Banham Canyon Dr
 * BANNING = Banning
 * BEACH = Vespucci Beach
 * BHAMCA = Banham Canyon
 * BRADP = Braddock Pass
 * BRADT = Braddock Tunnel
 * BURTON = Burton
 * CALAFB = Calafia Bridge
 * CANNY = Raton Canyon
 * CCREAK = Cassidy Creek
 * CHAMH = Chamberlain Hills
 * CHIL = Vinewood Hills
 * CHU = Chumash
 * CMSW = Chiliad Mountain State Wilderness
 * CYPRE = Cypress Flats
 * DAVIS = Davis
 * DELBE = Del Perro Beach
 * DELPE = Del Perro
 * DELSOL = La Puerta
 * DESRT = Grand Senora Desert
 * DOWNT = Downtown
 * DTVINE = Downtown Vinewood
 * EAST_V = East Vinewood
 * EBURO = El Burro Heights
 * ELGORL = El Gordo Lighthouse
 * ELYSIAN = Elysian Island
 * GALFISH = Galilee
 * GOLF = GWC and Golfing Society
 * GRAPES = Grapeseed
 * GREATC = Great Chaparral
 * HARMO = Harmony
 * HAWICK = Hawick
 * HORS = Vinewood Racetrack
 * HUMLAB = Humane Labs and Research
 * JAIL = Bolingbroke Penitentiary
 * KOREAT = Little Seoul
 * LACT = Land Act Reservoir
 * LAGO = Lago Zancudo
 * LDAM = Land Act Dam
 * LEGSQU = Legion Square
 * LMESA = La Mesa
 * LOSPUER = La Puerta
 * MIRR = Mirror Park
 * MORN = Morningwood
 * MOVIE = Richards Majestic
 * MTCHIL = Mount Chiliad
 * MTGORDO = Mount Gordo
 * MTJOSE = Mount Josiah
 * MURRI = Murrieta Heights
 * NCHU = North Chumash
 * NOOSE = N.O.O.S.E
 * OCEANA = Pacific Ocean
 * PALCOV = Paleto Cove
 * PALETO = Paleto Bay
 * PALFOR = Paleto Forest
 * PALHIGH = Palomino Highlands
 * PALMPOW = Palmer-Taylor Power Station
 * PBLUFF = Pacific Bluffs
 * PBOX = Pillbox Hill
 * PROCOB = Procopio Beach
 * RANCHO = Rancho
 * RGLEN = Richman Glen
 * RICHM = Richman
 * ROCKF = Rockford Hills
 * RTRAK = Redwood Lights Track
 * SANAND = San Andreas
 * SANCHIA = San Chianski Mountain Range
 * SANDY = Sandy Shores
 * SKID = Mission Row
 * SLAB = Stab City
 * STAD = Maze Bank Arena
 * STRAW = Strawberry
 * TATAMO = Tataviam Mountains
 * TERMINA = Terminal
 * TEXTI = Textile City
 * TONGVAH = Tongva Hills
 * TONGVAV = Tongva Valley
 * VCANA = Vespucci Canals
 * VESP = Vespucci
 * VINE = Vinewood
 * WINDF = Ron Alternates Wind Farm
 * WVINE = West Vinewood
 * ZANCUDO = Zancudo River
 * ZP_ORT = Port of South Los Santos
 * ZQ_UAR = Davis Quartz
 * ```
 * Hash: 0x98CD1D2934B76CC1 | ApiSet: undefined
 */
export declare function getZoneFromNameId(zoneName: string): number;
/**
 * Hash: 0x4334BC40AA0CB4BB | ApiSet: undefined
 */
export declare function getZonePopschedule(zoneId: number): number;
/**
 * Hash: 0xBA5ECEEA120E5611 | ApiSet: undefined
 */
export declare function setZoneEnabled(zoneId: number, toggle: boolean): void;
/**
 * Hash: 0x27040C25DE6CB2F4 | ApiSet: undefined
 */
export declare function getZoneAtCoords(position: Vector3): number;
/**
 * ```
 * AIRP = Los Santos International Airport
 * ALAMO = Alamo Sea
 * ALTA = Alta
 * ARMYB = Fort Zancudo
 * BANHAMC = Banham Canyon Dr
 * BANNING = Banning
 * BEACH = Vespucci Beach
 * BHAMCA = Banham Canyon
 * BRADP = Braddock Pass
 * BRADT = Braddock Tunnel
 * BURTON = Burton
 * CALAFB = Calafia Bridge
 * CANNY = Raton Canyon
 * CCREAK = Cassidy Creek
 * CHAMH = Chamberlain Hills
 * CHIL = Vinewood Hills
 * CHU = Chumash
 * CMSW = Chiliad Mountain State Wilderness
 * CYPRE = Cypress Flats
 * DAVIS = Davis
 * DELBE = Del Perro Beach
 * DELPE = Del Perro
 * DELSOL = La Puerta
 * DESRT = Grand Senora Desert
 * DOWNT = Downtown
 * DTVINE = Downtown Vinewood
 * EAST_V = East Vinewood
 * EBURO = El Burro Heights
 * ELGORL = El Gordo Lighthouse
 * ELYSIAN = Elysian Island
 * GALFISH = Galilee
 * GOLF = GWC and Golfing Society
 * GRAPES = Grapeseed
 * GREATC = Great Chaparral
 * HARMO = Harmony
 * HAWICK = Hawick
 * HORS = Vinewood Racetrack
 * HUMLAB = Humane Labs and Research
 * JAIL = Bolingbroke Penitentiary
 * KOREAT = Little Seoul
 * LACT = Land Act Reservoir
 * LAGO = Lago Zancudo
 * LDAM = Land Act Dam
 * LEGSQU = Legion Square
 * LMESA = La Mesa
 * LOSPUER = La Puerta
 * MIRR = Mirror Park
 * MORN = Morningwood
 * MOVIE = Richards Majestic
 * MTCHIL = Mount Chiliad
 * MTGORDO = Mount Gordo
 * MTJOSE = Mount Josiah
 * MURRI = Murrieta Heights
 * NCHU = North Chumash
 * NOOSE = N.O.O.S.E
 * OCEANA = Pacific Ocean
 * PALCOV = Paleto Cove
 * PALETO = Paleto Bay
 * PALFOR = Paleto Forest
 * PALHIGH = Palomino Highlands
 * PALMPOW = Palmer-Taylor Power Station
 * PBLUFF = Pacific Bluffs
 * PBOX = Pillbox Hill
 * PROCOB = Procopio Beach
 * RANCHO = Rancho
 * RGLEN = Richman Glen
 * RICHM = Richman
 * ROCKF = Rockford Hills
 * RTRAK = Redwood Lights Track
 * SANAND = San Andreas
 * SANCHIA = San Chianski Mountain Range
 * SANDY = Sandy Shores
 * SKID = Mission Row
 * SLAB = Stab City
 * STAD = Maze Bank Arena
 * STRAW = Strawberry
 * TATAMO = Tataviam Mountains
 * TERMINA = Terminal
 * TEXTI = Textile City
 * TONGVAH = Tongva Hills
 * TONGVAV = Tongva Valley
 * VCANA = Vespucci Canals
 * VESP = Vespucci
 * VINE = Vinewood
 * WINDF = Ron Alternates Wind Farm
 * WVINE = West Vinewood
 * ZANCUDO = Zancudo River
 * ZP_ORT = Port of South Los Santos
 * ZQ_UAR = Davis Quartz
 * PROL = Prologue / North Yankton
 * ISHeist = Cayo Perico Island
 * ```
 * Hash: 0xCD90657D4C30E1CA | ApiSet: undefined
 */
export declare function getNameOfZone(position: Vector3): string;
/**
 * ```
 * Only used once in the decompiled scripts. Seems to be related to scripted vehicle generators.
 * Modified example from "am_imp_exp.c4", line 6406:
 * `\/\* popSchedules[0] = ZONE::GET_ZONE_POPSCHEDULE(ZONE::GET_ZONE_AT_COORDS(891.3, 807.9, 188.1));`
 * etc.
 * \*\/
 * `ZONE::OVERRIDE_POPSCHEDULE_VEHICLE_MODEL(popSchedules[index], vehicleHash);`
 * `STREAMING::REQUEST_MODEL(vehicleHash);`
 * ```
 * Hash: 0x5F7D596BAC2E7777 | ApiSet: undefined
 */
export declare function overridePopscheduleVehicleModel(scheduleId: number, vehicleHash: number | string): void;
/**
 * Gets the zone scumminess level, used to calculate the cellphone signal strength.
 * ```cpp
 * enum eZoneScumminess
 * {
 * SCUMMINESS_POSH = 0,
 * SCUMMINESS_NICE = 1,
 * SCUMMINESS_ABOVE_AVERAGE = 2,
 * SCUMMINESS_BELOW_AVERAGE = 3,
 * SCUMMINESS_CRAP = 4,
 * SCUMMINESS_SCUM = 5
 * }
 * ```
 * Hash: 0x5F7B268D15BA0739 | ApiSet: undefined
 */
export declare function getZoneScumminess(zoneId: number): number;
/**
 * Hash: 0xD5C12A75C7B9497F | ApiSet: undefined
 */
export declare function addCoverPoint(p0: number, p1: number, p2: number, p3: number, p4: any, p5: any, p6: any, p7: boolean): number;
/**
 * x2,y2 and z2 are the coordinates to which the ped should look at
 * Hash: 0x8EDF950167586B7C | ApiSet: undefined
 */
export declare function addPatrolRouteNode(id: number, guardScenario: string, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, waitTime: number): void;
/**
 * connects/links 2 [route nodes](#\_0x8EDF950167586B7C)\
 * image representing the cyclic example below:\
 * ![image](https://user-images.githubusercontent.com/55803068/188470866-c32c6a9f-a25d-4772-9b18-5be46e2c14a1.png)
 * Hash: 0x23083260DEC3A551 | ApiSet: undefined
 */
export declare function addPatrolRouteLink(id1: number, id2: number): void;
/**
 * Hash: 0xD5002D78B7162E1B | ApiSet: undefined
 */
export declare function assistedMovementSetRouteProperties(route: string, props: number): void;
/**
 * Hash: 0x85F462BADC7DA47F | ApiSet: undefined
 */
export declare function addVehicleSubtaskAttackPed(ped: number | Ped, ped2: number | Ped): void;
/**
 * Hash: 0x60F9A4393A21F741 | ApiSet: undefined
 */
export declare function assistedMovementIsRouteLoaded(route: string): boolean;
/**
 * Hash: 0xC35B5CDB2824CF69 | ApiSet: undefined
 */
export declare function clearDrivebyTaskUnderneathDrivingTask(ped: number | Ped): void;
/**
 * Hash: 0x45C597097DD7CB81 | ApiSet: undefined
 */
export declare function addCoverBlockingArea(playerX: number, playerY: number, playerZ: number, radiusX: number, radiusY: number, radiusZ: number, p6: boolean, p7: boolean, p8: boolean, p9: boolean): void;
/**
 * Hash: 0x13945951E16EF912 | ApiSet: undefined
 */
export declare function assistedMovementOverrideLoadDistanceThisFrame(dist: number): void;
/**
 * ```
 * Routes: "1_FIBStairs", "2_FIBStairs", "3_FIBStairs", "4_FIBStairs", "5_FIBStairs", "5_TowardsFire", "6a_FIBStairs", "7_FIBStairs", "8_FIBStairs", "Aprtmnt_1", "AssAfterLift", "ATM_1", "coroner2", "coroner_stairs", "f5_jimmy1", "fame1", "family5b", "family5c", "Family5d", "family5d", "FIB_Glass1", "FIB_Glass2", "FIB_Glass3", "finaBroute1A", "finalb1st", "finalB1sta", "finalbround", "finalbroute2", "Hairdresser1", "jan_foyet_ft_door", "Jo_3", "Lemar1", "Lemar2", "mansion_1", "Mansion_1", "pols_1", "pols_2", "pols_3", "pols_4", "pols_5", "pols_6", "pols_7", "pols_8", "Pro_S1", "Pro_S1a", "Pro_S2", "Towards_case", "trev_steps", "tunrs1", "tunrs2", "tunrs3", "Wave01457s"
 * ```
 * Hash: 0x817268968605947A | ApiSet: undefined
 */
export declare function assistedMovementRequestRoute(route: string): void;
/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0xF6DC48E56BE1243A | ApiSet: undefined
 */
export declare function clearPedScriptTaskIfRunningThreatResponseNonTempTask(ped: number | Ped): void;
/**
 * ```
 * x, y, z: offset in world coords from some entity.
 * ```
 * Hash: 0x5CF0D8F9BBA0DD75 | ApiSet: undefined
 */
export declare function addVehicleSubtaskAttackCoord(ped: number | Ped, position: Vector3): void;
/**
 * Hash: 0xB043ECA801B8CBC1 | ApiSet: undefined
 */
export declare function closePatrolRoute(): void;
/**
 * ```
 * CLEAR_*
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xDBBC7A2432524127 | ApiSet: undefined
 */
export declare function clearVehicleTasks(vehicle: number | Vehicle): void;
/**
 * Clear a ped's tasks. Stop animations and other tasks created by scripts.
 * Hash: 0xE1EF3C1216AFF2CD | ApiSet: undefined
 */
export declare function clearPedTasks(ped: number | Ped): void;
/**
 * ```
 * Forces the ped to use the mounted weapon.
 * Returns false if task is not possible.
 * ```
 * Hash: 0xDCFE42068FE0135A | ApiSet: undefined
 */
export declare function controlMountedWeapon(ped: number | Ped): boolean;
/**
 * Hash: 0xAF8A443CCC8018DC | ApiSet: undefined
 */
export declare function createPatrolRoute(): void;
/**
 * Hash: 0x3548536485DD792B | ApiSet: undefined
 */
export declare function assistedMovementRemoveRoute(route: string): void;
/**
 * ```
 * Occurrences in the b617d scripts:
 * "ARMY_GUARD",
 * "ARMY_HELI",
 * "Cinema_Downtown",
 * "Cinema_Morningwood",
 * "Cinema_Textile",
 * "City_Banks",
 * "Countryside_Banks",
 * "DEALERSHIP",
 * "GRAPESEED_PLANES",
 * "KORTZ_SECURITY",
 * "LOST_BIKERS",
 * "LSA_Planes",
 * "LSA_Planes",
 * "MP_POLICE",
 * "Observatory_Bikers",
 * "POLICE_POUND1",
 * "POLICE_POUND2",
 * "POLICE_POUND3",
 * "POLICE_POUND4",
 * "POLICE_POUND5"
 * "QUARRY",
 * "SANDY_PLANES",
 * "SCRAP_SECURITY",
 * "SEW_MACHINE",
 * "SOLOMON_GATE",
 * "Triathlon_1_Start",
 * "Triathlon_2_Start",
 * "Triathlon_3_Start"
 * Sometimes used with IS_SCENARIO_GROUP_ENABLED:
 * `if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") && (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {`
 * `else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {`
 * ```
 * Hash: 0xF9034C136C9E00D3 | ApiSet: undefined
 */
export declare function doesScenarioGroupExist(scenarioGroup: string): boolean;
/**
 * Hash: 0x176CECF6F920D707 | ApiSet: undefined
 */
export declare function clearPedSecondaryTask(ped: number | Ped): void;
/**
 * For an example on how to use this please refer to [OPEN_SEQUENCE_TASK](#\_0xE8854A4326B9E12B)
 * #### NOTE
 * If you fail to call [`CLOSE_SEQUENCE_TASK`](#\_0x39E72BC99E6360CB) and `CLEAR_SEQUENCE_TASK` the sequence system can get stuck in a broken state until you restart your client.
 * Hash: 0x3841422E9C488D8C | ApiSet: undefined
 */
export declare function clearSequenceTask(): number;
/**
 * Hash: 0x5A59271FFADD33C1 | ApiSet: undefined
 */
export declare function doesScenarioExistInArea(position: Vector3, radius: number, b: boolean): boolean;
/**
 * For an example on how to use this please refer to [OPEN_SEQUENCE_TASK](#\_0xE8854A4326B9E12B)
 * #### NOTE
 * If you fail to call `CLOSE_SEQUENCE_TASK` and [`CLEAR_SEQUENCE_TASK`](#\_0x3841422E9C488D8C) this can get stuck in a broken state until you restart your client.
 * Hash: 0x39E72BC99E6360CB | ApiSet: undefined
 */
export declare function closeSequenceTask(taskSequenceId: number): void;
/**
 * Immediately stops the pedestrian from whatever it's doing. The difference between this and [CLEAR_PED_TASKS](#\_0xE1EF3C1216AFF2CD) is that this one teleports the ped but does not change the position of the ped.
 * Hash: 0xAAA34F8A7CB32098 | ApiSet: undefined
 */
export declare function clearPedTasksImmediately(ped: number | Ped): void;
/**
 * Hash: 0x0A9D0C2A3BBC86C1 | ApiSet: undefined
 */
export declare function doesScenarioOfTypeExistInArea(p0: number, p1: number, p2: number, p3: string, p4: number, p5: boolean): boolean;
/**
 * ```
 * https://alloc8or.re/gta5/doc/enums/eVehicleMissionType.txt
 * ```
 * Hash: 0x534AEBA6E5ED4CAB | ApiSet: undefined
 */
export declare function getActiveVehicleMissionType(vehicle: number | Vehicle): number;
/**
 * Hash: 0x3A8CADC7D37AACC5 | ApiSet: undefined
 */
export declare function getClipSetForScriptedGunTask(p0: number): string;
/**
 * ```
 * From the b617d scripts:
 * `TASK::DELETE_PATROL_ROUTE("miss_merc0");`
 * `TASK::DELETE_PATROL_ROUTE("miss_merc1");`
 * `TASK::DELETE_PATROL_ROUTE("miss_merc2");`
 * `TASK::DELETE_PATROL_ROUTE("miss_dock");`
 * ```
 * Hash: 0x7767DD9D65E91319 | ApiSet: undefined
 */
export declare function deletePatrolRoute(patrolRoute: string): void;
/**
 * ```
 * Task index enum: https://alloc8or.re/gta5/doc/enums/eTaskTypeIndex.txt
 * ```
 * Hash: 0xB0760331C7AA4155 | ApiSet: undefined
 */
export declare function getIsTaskActive(ped: number | Ped, taskIndex: number): boolean;
/**
 * ```
 * Looks like the last parameter returns true if the path has been calculated, while the first returns the remaining distance to the end of the path.
 * Return value of native is the same as GET_NAVMESH_ROUTE_RESULT
 * Looks like the native returns an int for the path's state:
 * 1 - ???
 * 2 - ???
 * 3 - Finished Generating
 * ```
 * Hash: 0xC6F5C0BCDC74D62D | ApiSet: undefined
 */
export declare function getNavmeshRouteDistanceRemaining(ped: number | Ped): [number, number, boolean];
/**
 * ```
 * Checks if there is a cover point at position
 * ```
 * Hash: 0xA98B8E3C088E5A31 | ApiSet: undefined
 */
export declare function doesScriptedCoverPointExistAtCoords(position: Vector3): boolean;
/**
 * Hash: 0xCB4E8BE8A0063C5D | ApiSet: undefined
 */
export declare function getIsWaypointRecordingLoaded(name: string): boolean;
/**
 * Hash: 0x8517D4A6CA8513ED | ApiSet: undefined
 */
export declare function getPedDesiredMoveBlendRatio(ped: number | Ped): number;
/**
 * Hash: 0xE6A877C64CAF1BC5 | ApiSet: undefined
 */
export declare function getPedWaypointDistance(p0: any): number;
/**
 * Hash: 0x2720AAA75001E094 | ApiSet: undefined
 */
export declare function getPedWaypointProgress(ped: number | Ped): number;
/**
 * See [`GET_NAVMESH_ROUTE_DISTANCE_REMAINING`](#\_0xC6F5C0BCDC74D62D) for more details.
 * Hash: 0x632E831F382A0FA8 | ApiSet: undefined
 */
export declare function getNavmeshRouteResult(ped: number | Ped): number;
/**
 * Gets the status of a spesifed script-assigned task on the given ped. The return value is always an int between 0-7.
 * You can set taskHash to `SCRIPT_TASK_ANY` to check if any task is active, it will return 1 for active, 3 for no active.
 * `SCRIPT_TASK_INVALID` can be similarly used, it returns 7 if there are any active task, and 3 if there are no active tasks.
 * taskHash list: https://alloc8or.re/gta5/doc/enums/eScriptTaskHash.txt
 * Returns:
 * ```
 * 0 = WAITING_TO_START_TASK
 * 1 = PERFORMING_TASK
 * 2 = DORMANT_TASK
 * 3 = VACANT_STAGE
 * 7 = TASK_FINISHED_OR_NOT_FOUND
 * ```
 * Hash: 0x77F1BEB8863288D5 | ApiSet: undefined
 */
export declare function getScriptTaskStatus(ped: number | Ped, taskHash: number | string): number;
/**
 * Hash: 0x47619ABE8B268C60 | ApiSet: undefined
 */
export declare function getPhoneGestureAnimCurrentTime(ped: number | Ped): number;
/**
 * Hash: 0x1EE0F68A7C25DEC6 | ApiSet: undefined
 */
export declare function getPhoneGestureAnimTotalTime(ped: number | Ped): number;
/**
 * ```
 * returned values:
 * 0 to 7 = task that's currently in progress, 0 meaning the first one.
 * -1 no task sequence in progress.
 * ```
 * Hash: 0x00A9010CFE1E3533 | ApiSet: undefined
 */
export declare function getSequenceProgress(ped: number | Ped): number;
/**
 * Hash: 0x594A1028FC2A3E85 | ApiSet: undefined
 */
export declare function getScriptedCoverPointCoords(coverpoint: number): Vector3;
/**
 * Hash: 0xA7FFBA498E4AAF67 | ApiSet: undefined
 */
export declare function getTaskMoveNetworkSignalBool(ped: number | Ped, signalName: string): boolean;
/**
 * Hash: 0xB4F47213DF45A64C | ApiSet: undefined
 */
export declare function getTaskMoveNetworkEvent(ped: number | Ped, eventName: string): boolean;
/**
 * Hash: 0x717E4D1F2048376D | ApiSet: undefined
 */
export declare function getTaskMoveNetworkState(ped: number | Ped): string;
/**
 * Hash: 0xA5B769058763E497 | ApiSet: undefined
 */
export declare function getWaypointDistanceAlongRoute(p0: string, p1: number): number;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x44AB0B3AFECCE242 | ApiSet: undefined
 */
export declare function getTaskMoveNetworkSignalFloat(ped: number | Ped, signalName: string): number;
/**
 * Hash: 0x24A2AD74FA9814E2 | ApiSet: undefined
 */
export declare function isMoveBlendRatioSprinting(ped: number | Ped): boolean;
/**
 * Hash: 0x9824CFF8FC66E159 | ApiSet: undefined
 */
export declare function getVehicleWaypointProgress(vehicle: number | Vehicle): number;
/**
 * Hash: 0x8785E6E40C7A8818 | ApiSet: undefined
 */
export declare function isDrivebyTaskUnderneathDrivingTask(ped: number | Ped): boolean;
/**
 * Hash: 0x416B62AC8B9E5BBD | ApiSet: undefined
 */
export declare function getVehicleWaypointTargetPoint(vehicle: number | Vehicle): number;
/**
 * Hash: 0xA320EF046186FA3B | ApiSet: undefined
 */
export declare function isMountedWeaponTaskUnderneathDrivingTask(ped: number | Ped): boolean;
/**
 * Hash: 0xD4D8636C0199A939 | ApiSet: undefined
 */
export declare function isMoveBlendRatioRunning(ped: number | Ped): boolean;
/**
 * This is a stricter version of [`IS_PED_USING_ANY_SCENARIO`](#\_0x57AB4A3080F85143). It only returns true if the ped is playing the ambient animations associated with the scenario.
 * Hash: 0xAA135F9482C82CC3 | ApiSet: undefined
 */
export declare function isPedActiveInScenario(ped: number | Ped): boolean;
/**
 * Hash: 0xF133BBBE91E1691F | ApiSet: undefined
 */
export declare function isMoveBlendRatioWalking(ped: number | Ped): boolean;
/**
 * Hash: 0x74E559B3BC910685 | ApiSet: undefined
 */
export declare function isPedCuffed(ped: number | Ped): boolean;
/**
 * Hash: 0x2A74E1D5F2F00EEC | ApiSet: undefined
 */
export declare function isPedGettingUp(ped: number | Ped): boolean;
/**
 * Hash: 0xC5286FFC176F28A2 | ApiSet: undefined
 */
export declare function isPedRunning(ped: number | Ped): boolean;
/**
 * Hash: 0x3DC52677769B4AE0 | ApiSet: undefined
 */
export declare function isPedRunningArrestTask(ped: number | Ped): boolean;
/**
 * Hash: 0x349CE7B56DAFD95C | ApiSet: undefined
 */
export declare function isMoveBlendRatioStill(ped: number | Ped): boolean;
/**
 * Hash: 0x57E457CD2C0FC168 | ApiSet: undefined
 */
export declare function isPedSprinting(ped: number | Ped): boolean;
/**
 * Hash: 0x621C6E4729388E41 | ApiSet: undefined
 */
export declare function isPedPlayingBaseClipInScenario(ped: number | Ped): boolean;
/**
 * ```
 * This function is hard-coded to always return 0.
 * ```
 * Hash: 0x90A09F3A45FED688 | ApiSet: undefined
 */
export declare function isPedBeingArrested(ped: number | Ped): boolean;
/**
 * ```
 * What's strafing?
 * ```
 * Hash: 0xE45B7F222DE47E09 | ApiSet: undefined
 */
export declare function isPedStrafing(ped: number | Ped): boolean;
/**
 * This native checks if a ped is on the ground, in pain from a (gunshot) wound.
 * Hash: 0xDEB6D52126E7D640 | ApiSet: undefined
 */
export declare function isPedInWrithe(ped: number | Ped): boolean;
/**
 * Hash: 0xAC29253EEF8F0180 | ApiSet: undefined
 */
export declare function isPedStill(ped: number | Ped): boolean;
/**
 * Hash: 0xB8EBB1E9D3588C10 | ApiSet: undefined
 */
export declare function isPlayingPhoneGestureAnim(ped: number | Ped): boolean;
/**
 * Hash: 0x788756D73AC2E07C | ApiSet: undefined
 */
export declare function isScenarioOccupied(p0: number, p1: number, p2: number, p3: number, p4: boolean): boolean;
/**
 * Hash: 0xDE4C184B2B9B071A | ApiSet: undefined
 */
export declare function isPedWalking(ped: number | Ped): boolean;
/**
 * Hash: 0x30ED88D5E0C56A37 | ApiSet: undefined
 */
export declare function isTaskMoveNetworkReadyForTransition(ped: number | Ped): boolean;
/**
 * Hash: 0xE03B3F2D3DC59B64 | ApiSet: undefined
 */
export declare function isWaypointPlaybackGoingOnForPed(p0: any): boolean;
/**
 * ```
 * Occurrences in the b617d scripts:
 * "PROP_HUMAN_SEAT_CHAIR",
 * "WORLD_HUMAN_DRINKING",
 * "WORLD_HUMAN_HANG_OUT_STREET",
 * "WORLD_HUMAN_SMOKING",
 * "WORLD_MOUNTAIN_LION_WANDER",
 * "WORLD_HUMAN_DRINKING"
 * `Sometimes used together with MISC::IS_STRING_NULL_OR_EMPTY in the scripts.`
 * `scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.`
 * ```
 * Hash: 0x3A815DB3EA088722 | ApiSet: undefined
 */
export declare function isScenarioTypeEnabled(scenarioType: string): boolean;
/**
 * ```
 * Occurrences in the b617d scripts:
 * "ARMY_GUARD",
 * "ARMY_HELI",
 * "BLIMP",
 * "Cinema_Downtown",
 * "Cinema_Morningwood",
 * "Cinema_Textile",
 * "City_Banks",
 * "Countryside_Banks",
 * "DEALERSHIP",
 * "KORTZ_SECURITY",
 * "LSA_Planes",
 * "MP_POLICE",
 * "Observatory_Bikers",
 * "POLICE_POUND1",
 * "POLICE_POUND2",
 * "POLICE_POUND3",
 * "POLICE_POUND4",
 * "POLICE_POUND5",
 * "Rampage1",
 * "SANDY_PLANES",
 * "SCRAP_SECURITY",
 * "SEW_MACHINE",
 * "SOLOMON_GATE"
 * Sometimes used with DOES_SCENARIO_GROUP_EXIST:
 * `if (TASK::DOES_SCENARIO_GROUP_EXIST("Observatory_Bikers") &&   (!TASK::IS_SCENARIO_GROUP_ENABLED("Observatory_Bikers"))) {`
 * `else if (TASK::IS_SCENARIO_GROUP_ENABLED("BLIMP")) {`
 * ```
 * Hash: 0x367A09DED4E05B99 | ApiSet: undefined
 */
export declare function isScenarioGroupEnabled(scenarioGroup: string): boolean;
/**
 * Doesn't actually return anything.
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x0FFB3C758E8C07B9 | ApiSet: undefined
 */
export declare function _0x0FFB3C758E8C07B9(ped: number | Ped, p1: boolean): any;
/**
 * ```
 * IS_*
 * ```
 * Hash: 0x3E38E28A1D80DDF6 | ApiSet: undefined
 */
export declare function _0x3E38E28A1D80DDF6(ped: number | Ped): boolean;
/**
 * Hash: 0xF5134943EA29868C | ApiSet: undefined
 */
export declare function isWaypointPlaybackGoingOnForVehicle(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x921CE12C489C4C41 | ApiSet: undefined
 */
export declare function isTaskMoveNetworkActive(ped: number | Ped): boolean;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x29682E2CCF21E9B5 | ApiSet: undefined
 */
export declare function _0x29682E2CCF21E9B5(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any, p10: any, p11: any, p12: any, p13: any): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x8423541E8B3A1589 | ApiSet: undefined
 */
export declare function _0x8423541E8B3A1589(p0: any, p1: any, p2: any): void;
/**
 * ```
 * REMOVE_*
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xFA83CA6776038F64 | ApiSet: undefined
 */
export declare function _0xFA83CA6776038F64(position: Vector3): void;
/**
 * Hash: 0x1F351CF1C6475734 | ApiSet: undefined
 */
export declare function _0x1F351CF1C6475734(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
/**
 * Related to [`_CLEAR_VEHICLE_TASKS`](#\_0xDBBC7A2432524127) and requires more research (e.g., \_CLEAR_VEHICLE_SECONDARY_TASKS).
 * ```
 * CLEAR_*
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x53DDC75BC3AC0A90 | ApiSet: undefined
 */
export declare function _0x53DDC75BC3AC0A90(vehicle: number | Vehicle): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x9D252648778160DF | ApiSet: undefined
 */
export declare function _0x9D252648778160DF(p0: any): any;
/**
 * Hash: 0x77A1EEC547E7FCF1 | ApiSet: undefined
 */
export declare function playEntityScriptedAnim(p0: any, p4: number, p5: number): [any, any, any];
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x6100B3CEFD43452E | ApiSet: undefined
 */
export declare function _0x6100B3CEFD43452E(p0: any): void;
/**
 * ```
 * Used only once in the scripts (fm_mission_controller) like so:
 * `TASK::_0xAB13A5565480B6D9(iLocal_3160, "Cutting");`
 * SET_*
 * ```
 * Hash: 0xAB13A5565480B6D9 | ApiSet: undefined
 */
export declare function _0xAB13A5565480B6D9(ped: number | Ped, p1: string): any;
/**
 * Hash: 0xAE287C923D891715 | ApiSet: undefined
 */
export declare function removeCoverPoint(coverpoint: number): void;
/**
 * Hash: 0x295E3CCEC879CCD7 | ApiSet: undefined
 */
export declare function pedHasUseScenarioTask(ped: number | Ped): boolean;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x8634CEF2522D987B | ApiSet: undefined
 */
export declare function _0x8634CEF2522D987B(ped: number | Ped, p1: string, value: number): void;
/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0x748040460F8DF5DC | ApiSet: undefined
 */
export declare function playAnimOnRunningScenario(ped: number | Ped, animDict: string, animName: string): void;
/**
 * Hash: 0xDB6708C0B46F56D8 | ApiSet: undefined
 */
export declare function removeAllCoverBlockingAreas(): void;
/**
 * ```
 * The patrol route name must starts with "miss_" to be properly created.
 * patrolRoutes found in the b617d scripts:
 * "miss_Ass0",
 * "miss_Ass1",
 * "miss_Ass2",
 * "miss_Ass3",
 * "miss_Ass4",
 * "miss_Ass5",
 * "miss_Ass6",
 * "MISS_PATROL_6",
 * "MISS_PATROL_7",
 * "MISS_PATROL_8",
 * "MISS_PATROL_9",
 * "miss_Tower_01",
 * "miss_Tower_02",
 * "miss_Tower_03",
 * "miss_Tower_04",
 * "miss_Tower_05",
 * "miss_Tower_06",
 * "miss_Tower_07",
 * "miss_Tower_08",
 * "miss_Tower_10"
 * ```
 * Hash: 0xA36BFB5EE89F3D82 | ApiSet: undefined
 */
export declare function openPatrolRoute(patrolRoute: string): void;
/**
 * ### NOTE
 * If this returns 0 that means it failed to get a sequence id.
 * If you fail to call [`CLOSE_SEQUENCE_TASK`](#\_0x39E72BC99E6360CB) and [`CLEAR_SEQUENCE_TASK`](#\_0x3841422E9C488D8C) the sequence system can get stuck in a broken state until you restart your client.
 * Hash: 0xE8854A4326B9E12B | ApiSet: undefined
 */
export declare function openSequenceTask(): number;
/**
 * Hash: 0x70033C3CC29A1FF4 | ApiSet: undefined
 */
export declare function setAnimLooped(p0: any, p1: boolean, p2: any, p3: boolean): void;
/**
 * Hash: 0xD01015C7316AE176 | ApiSet: undefined
 */
export declare function requestTaskMoveNetworkStateTransition(ped: number | Ped, name: string): boolean;
/**
 * Hash: 0x032D49C5E359C847 | ApiSet: undefined
 */
export declare function setAnimRate(p0: any, p1: number, p2: any, p3: boolean): void;
/**
 * ```
 * For a full list of the points, see here: goo.gl/wIH0vn
 * Max number of loaded recordings is 32.
 * ```
 * Hash: 0x9EEFB62EB27B5792 | ApiSet: undefined
 */
export declare function requestWaypointRecording(name: string): void;
/**
 * Hash: 0xFF1B8B4AA1C25DC8 | ApiSet: undefined
 */
export declare function removeWaypointRecording(name: string): void;
/**
 * Sets the driving style for a ped currently performing a driving task.
 * Each flag in the `eVehicleDrivingFlags` enum can be combined to create a driving style, with each enabling or disabling a specific driving behavior. The driving style can be set to one of the predefined driving styles, or a custom driving style can be created by combining the flags. This can be done by using the bitwise OR operator (`|`) to combine the flags or by adding the decimal values of the flags together.
 * ```cpp
 * enum eVehicleDrivingFlags
 * {
 * None = 0,
 * StopForVehicles = 1,
 * StopForPeds = 2,
 * SwerveAroundAllVehicles = 4,
 * SteerAroundStationaryVehicles = 8,
 * SteerAroundPeds = 16,
 * SteerAroundObjects = 32,
 * DontSteerAroundPlayerPed = 64,
 * StopAtTrafficLights = 128,
 * GoOffRoadWhenAvoiding = 256,
 * AllowGoingWrongWay = 512,
 * Reverse = 1024,
 * UseWanderFallbackInsteadOfStraightLine = 2048,
 * AvoidRestrictedAreas = 4096,
 * PreventBackgroundPathfinding = 8192,
 * AdjustCruiseSpeedBasedOnRoadSpeed = 16384,
 * UseShortCutLinks = 262144,
 * ChangeLanesAroundObstructions = 524288,
 * UseSwitchedOffNodes = 2097152,
 * PreferNavmeshRoute = 4194304,
 * PlaneTaxiMode = 8388608,
 * ForceStraightLine = 16777216,
 * UseStringPullingAtJunctions = 33554432,
 * TryToAvoidHighways = 536870912,
 * ForceJoinInRoadDirection = 1073741824,
 * StopAtDestination = 2147483648,
 * // StopForVehicles | StopForPeds | SteerAroundObjects | SteerAroundStationaryVehicles | StopAtTrafficLights | UseShortCutLinks | ChangeLanesAroundObstructions
 * DrivingModeStopForVehicles = 786603,
 * // StopForVehicles | StopForPeds | StopAtTrafficLights | UseShortCutLinks
 * DrivingModeStopForVehiclesStrict = 262275,
 * // SwerveAroundAllVehicles | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions | StopForVehicles
 * DrivingModeAvoidVehicles = 786469,
 * // SwerveAroundAllVehicles | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions
 * DrivingModeAvoidVehiclesReckless = 786468,
 * // StopForVehicles | SteerAroundStationaryVehicles | StopForPeds | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions
 * DrivingModeStopForVehiclesIgnoreLights = 786475,
 * // SwerveAroundAllVehicles | StopAtTrafficLights | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions | StopForVehicles
 * DrivingModeAvoidVehiclesObeyLights = 786597,
 * // SwerveAroundAllVehicles | StopAtTrafficLights | StopForPeds | SteerAroundObjects | UseShortCutLinks | ChangeLanesAroundObstructions | StopForVehicles
 * DrivingModeAvoidVehiclesStopForPedsObeyLights = 786599,
 * }
 * ```
 * Hash: 0xDACE1BE37D88AF67 | ApiSet: undefined
 */
export declare function setDriveTaskDrivingStyle(ped: number | Ped, drivingStyle: number): void;
/**
 * Hash: 0xDD902D0349AFAD3A | ApiSet: undefined
 */
export declare function resetScenarioGroupsEnabled(): void;
/**
 * Hash: 0x0D40EE2A7F2B2D6D | ApiSet: undefined
 */
export declare function resetScenarioTypesEnabled(): void;
/**
 * Hash: 0x4202BBCB8684563D | ApiSet: undefined
 */
export declare function resetExclusiveScenarioGroup(): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xDDF3CB5A0A4C0B49 | ApiSet: undefined
 */
export declare function setAnimPhase(entity: number | Entity, p1: number, p2: any, p3: boolean): void;
/**
 * Hash: 0x5C9B84BD7D31D908 | ApiSet: undefined
 */
export declare function setDriveTaskCruiseSpeed(driver: number | Ped, cruiseSpeed: number): void;
/**
 * Hash: 0x207F1A47C0342F48 | ApiSet: undefined
 */
export declare function setAnimWeight(p0: any, p1: number, p2: any, p3: any, p4: boolean): void;
/**
 * ```
 * Groups found in the scripts used with this native:
 * "AMMUNATION",
 * "QUARRY",
 * "Triathlon_1",
 * "Triathlon_2",
 * "Triathlon_3"
 * ```
 * Hash: 0x535E97E1F7FC0C6A | ApiSet: undefined
 */
export declare function setExclusiveScenarioGroup(scenarioGroup: string): void;
/**
 * ```
 * For p1 & p2 (Ped, Vehicle). I could be wrong, as the only time this native is called in scripts is once and both are 0, but I assume this native will work like SET_MOUNTED_WEAPON_TARGET in which has the same exact amount of parameters and the 1st and last 3 parameters are right and the same for both natives.
 * ```
 * Hash: 0xE5B302114D8162EE | ApiSet: undefined
 */
export declare function setDrivebyTaskTarget(shootingPed: number | Ped, targetPed: number | Ped, targetVehicle: number | Vehicle, position: Vector3): void;
/**
 * ```
 * Birds will try to reach the given height.
 * ```
 * Hash: 0x6C6B148586F934F7 | ApiSet: undefined
 */
export declare function setGlobalMinBirdFlightHeight(height: number): void;
/**
 * Hash: 0x404A5AA9B9F0B746 | ApiSet: undefined
 */
export declare function setDriveTaskMaxCruiseSpeed(p0: any, p1: number): void;
/**
 * Hash: 0x8C825BDC7741D37C | ApiSet: undefined
 */
export declare function setHighFallTask(ped: number | Ped, duration: any, p2: any, p3: any): void;
/**
 * <strong>This native does absolutely nothing, just a nullsub</strong>
 * Hash: 0xF1B9F16E89E2C93A | ApiSet: undefined
 */
export declare function setNextDesiredMoveState(p0: number): void;
/**
 * ```
 * Note: Look in decompiled scripts and the times that p1 and p2 aren't 0. They are filled with vars. If you look through out that script what other natives those vars are used in, you can tell p1 is a ped and p2 is a vehicle. Which most likely means if you want the mounted weapon to target a ped set targetVehicle to 0 or vice-versa.
 * ```
 * ```
 * NativeDB Added Parameter 7: Any p6
 * NativeDB Added Parameter 8: Any p7
 * ```
 * Hash: 0xCCD892192C6D2BB9 | ApiSet: undefined
 */
export declare function setMountedWeaponTarget(shootingPed: number | Ped, targetPed: number | Ped, targetVehicle: number | Vehicle, position: Vector3): void;
/**
 * Hash: 0xC313379AF0FCEDA7 | ApiSet: undefined
 */
export declare function setParachuteTaskTarget(ped: number | Ped, position: Vector3): void;
/**
 * Prevents a ped from playing ambient idle animations.
 * **Note:** This native must be called every frame.
 * Hash: 0x8FD89A6240813FD0 | ApiSet: undefined
 */
export declare function setPedCanPlayAmbientIdles(ped: number | Ped, bBlockIdleClips: boolean, bRemoveIdleClipIfPlaying: boolean): void;
/**
 * Hash: 0x0729BAC1B8C64317 | ApiSet: undefined
 */
export declare function setParachuteTaskThrust(ped: number | Ped, thrust: number): void;
/**
 * Hash: 0x4455517B28441E60 | ApiSet: undefined
 */
export declare function setPedPathAvoidFire(ped: number | Ped, avoidFire: boolean): void;
/**
 * Hash: 0x1E982AC8716912C5 | ApiSet: undefined
 */
export declare function setPedDesiredMoveBlendRatio(ped: number | Ped, p1: number): void;
/**
 * Hash: 0xE361C5C71C431A4F | ApiSet: undefined
 */
export declare function setPedPathCanDropFromHeight(ped: number | Ped, Toggle: boolean): void;
/**
 * Hash: 0x8E06A6FE76C9EFF4 | ApiSet: undefined
 */
export declare function setPedPathCanUseClimbovers(ped: number | Ped, Toggle: boolean): void;
/**
 * Hash: 0x38FE1EC73743793C | ApiSet: undefined
 */
export declare function setPedPathPreferToAvoidWater(ped: number | Ped, avoidWater: boolean): void;
/**
 * Hash: 0xF35425A4204367EC | ApiSet: undefined
 */
export declare function setPedPathMayEnterWater(ped: number | Ped, mayEnterWater: boolean): void;
/**
 * ```
 * Default modifier is 1.0, minimum is 0.0 and maximum is 10.0.
 * ```
 * Hash: 0x88E32DB8C1A4AA4B | ApiSet: undefined
 */
export declare function setPedPathClimbCostModifier(ped: number | Ped, modifier: number): void;
/**
 * Hash: 0xB0A6CFD2C69C1088 | ApiSet: undefined
 */
export declare function setTaskMoveNetworkSignalBool(ped: number | Ped, signalName: string, value: boolean): void;
/**
 * ```
 * seems to enable/disable specific scenario-types from happening in the game world.
 * Here are some scenario types from the scripts:
 * "WORLD_MOUNTAIN_LION_REST"
 * "WORLD_MOUNTAIN_LION_WANDER"
 * "DRIVE"
 * "WORLD_VEHICLE_POLICE_BIKE"
 * "WORLD_VEHICLE_POLICE_CAR"
 * "WORLD_VEHICLE_POLICE_NEXT_TO_CAR"
 * "WORLD_VEHICLE_DRIVE_SOLO"
 * "WORLD_VEHICLE_BIKER"
 * "WORLD_VEHICLE_DRIVE_PASSENGERS"
 * "WORLD_VEHICLE_SALTON_DIRT_BIKE"
 * "WORLD_VEHICLE_BICYCLE_MOUNTAIN"
 * "PROP_HUMAN_SEAT_CHAIR"
 * "WORLD_VEHICLE_ATTRACTOR"
 * "WORLD_HUMAN_LEANING"
 * "WORLD_HUMAN_HANG_OUT_STREET"
 * "WORLD_HUMAN_DRINKING"
 * "WORLD_HUMAN_SMOKING"
 * "WORLD_HUMAN_GUARD_STAND"
 * "WORLD_HUMAN_CLIPBOARD"
 * "WORLD_HUMAN_HIKER"
 * "WORLD_VEHICLE_EMPTY"
 * "WORLD_VEHICLE_BIKE_OFF_ROAD_RACE"
 * "WORLD_HUMAN_PAPARAZZI"
 * "WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN"
 * "WORLD_VEHICLE_PARK_PARALLEL"
 * "WORLD_VEHICLE_CONSTRUCTION_SOLO"
 * "WORLD_VEHICLE_CONSTRUCTION_PASSENGERS"
 * "WORLD_VEHICLE_TRUCK_LOGS"
 * `scenarioType could be the same as scenarioName, used in for example TASK::TASK_START_SCENARIO_AT_POSITION.`
 * ```
 * Hash: 0xEB47EC4E34FB7EE1 | ApiSet: undefined
 */
export declare function setScenarioTypeEnabled(scenarioType: string, toggle: boolean): void;
/**
 * ```
 * Occurrences in the b617d scripts: pastebin.com/Tvg2PRHU
 * ```
 * Hash: 0x02C8E5B49848664E | ApiSet: undefined
 */
export declare function setScenarioGroupEnabled(scenarioGroup: string, p1: boolean): void;
/**
 * Hash: 0x77A5B103C87F476E | ApiSet: undefined
 */
export declare function setPedPathCanUseLadders(ped: number | Ped, Toggle: boolean): void;
/**
 * ```
 * * Flag 1: Aggressive ramming of suspect
 * * Flag 2: Ram attempts
 * * Flag 8: Medium-aggressive boxing tactic with a bit of PIT
 * * Flag 16: Ramming, seems to be slightly less aggressive than 1-2.
 * * Flag 32: Stay back from suspect, no tactical contact. Convoy-like.
 * ```
 * Hash: 0xCC665AAC360D31E7 | ApiSet: undefined
 */
export declare function setTaskVehicleChaseBehaviorFlag(ped: number | Ped, flag: number, set: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x373EF409B82697A3 | ApiSet: undefined
 */
export declare function setTaskMoveNetworkSignalFloat2(ped: number | Ped, signalName: string, value: number): void;
/**
 * ```
 * `p0 - PLAYER::PLAYER_PED_ID();`
 * p1 - "Phase", "Wobble", "x_axis","y_axis","introphase","speed".
 * p2 - From what i can see it goes up to 1f (maybe).
 * -LcGamingHD
 * `Example: TASK::_D5BB4025AE449A4E(PLAYER::PLAYER_PED_ID(), "Phase", 0.5);`
 * ```
 * Hash: 0xD5BB4025AE449A4E | ApiSet: undefined
 */
export declare function setTaskMoveNetworkSignalFloat(ped: number | Ped, signalName: string, value: number): void;
/**
 * Hash: 0xED98E10B0AFCE4B4 | ApiSet: undefined
 */
export declare function setPedWaypointRouteOffset(p0: any, p1: any, p2: any, p3: any): any;
/**
 * Hash: 0x58C70CF3A41E4AE7 | ApiSet: undefined
 */
export declare function setSequenceToRepeat(taskSequenceId: number, repeat: boolean): void;
/**
 * Hash: 0x639B642FACBE4EDD | ApiSet: undefined
 */
export declare function setTaskVehicleChaseIdealPursuitDistance(ped: number | Ped, distance: number): void;
/**
 * ```
 * Makes the specified ped achieve the specified heading.
 * pedHandle: The handle of the ped to assign the task to.
 * heading: The desired heading.
 * timeout: The time, in milliseconds, to allow the task to complete. If the task times out, it is cancelled, and the ped will stay at the heading it managed to reach in the time.
 * ```
 * Hash: 0x93B93A37987F1F3D | ApiSet: undefined
 */
export declare function taskAchieveHeading(ped: number | Ped, heading: number, timeout: number): void;
/**
 * ```
 * duration: the amount of time in milliseconds to do the task.  -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
 * ```
 * Hash: 0x9B53BB6E8943AF53 | ApiSet: undefined
 */
export declare function taskAimGunAtEntity(ped: number | Ped, entity: number | Entity, duration: number, bInstantBlendToAim: boolean): void;
/**
 * ```
 * Looks like p1 may be a flag, still need to do some research, though.
 * ```
 * Hash: 0xEE08C992D238C5D1 | ApiSet: undefined
 */
export declare function stopAnimPlayback(ped: number | Ped, p1: number, p2: boolean): void;
/**
 * Hash: 0x6671F3EEC681BDA1 | ApiSet: undefined
 */
export declare function taskAimGunAtCoord(ped: number | Ped, position: Vector3, time: number, bInstantBlendToAim: boolean, bPlayAimIntro: boolean): void;
/**
 * Hash: 0x8605AF0DE8B3A5AC | ApiSet: undefined
 */
export declare function taskAimGunScriptedWithTarget(ped: number | Ped, targetPed: number | Ped, position: Vector3, iGunTaskType: number | string, bDisableBlockingClip: boolean, bForceAim: boolean): void;
/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0x97FF36A1D40EA00A | ApiSet: undefined
 */
export declare function stopAnimTask(ped: number | Ped, animDictionary: string, animationName: string, animExitSpeed: number): void;
/**
 * ```
 * p2 tend to be 16, 17 or 1
 * p3 to p7 tend to be 0.0
 * ```
 * Hash: 0x8C338E0263E4FD19 | ApiSet: undefined
 */
export declare function taskChatToPed(ped: number | Ped, target: number | Ped, p2: any, p3: number, p4: number, p5: number, p6: number, p7: number): void;
/**
 * ```
 * Example from "me_amanda1.ysc.c4":
 * `TASK::TASK_ARREST_PED(l_19F \/\* This is a Ped \*\/ , PLAYER::PLAYER_PED_ID());`
 * Example from "armenian1.ysc.c4":
 * `if (!PED::IS_PED_INJURED(l_B18[0\/\*1\*\/])) {`
 * `TASK::TASK_ARREST_PED(l_B18[0\/\*1\*\/], PLAYER::PLAYER_PED_ID());`
 * }
 * I would love to have time to experiment to see if a player Ped can arrest another Ped. Might make for a good cop mod.
 * Looks like only the player can be arrested this way. Peds react and try to arrest you if you task them, but the player charater doesn't do anything if tasked to arrest another ped.
 * ```
 * Hash: 0xF3B9A78A178572B1 | ApiSet: undefined
 */
export declare function taskArrestPed(ped: number | Ped, target: number | Ped): void;
/**
 * Hash: 0x19D1B791CB3670FE | ApiSet: undefined
 */
export declare function taskAgitatedAction(ped: number | Ped, ped2: number | Ped): void;
/**
 * Hash: 0x95A6C46A31D1917D | ApiSet: undefined
 */
export declare function taskClearDefensiveArea(p0: any): void;
/**
 * Hash: 0x7A192BE16D373D00 | ApiSet: undefined
 */
export declare function taskAimGunScripted(ped: number | Ped, scriptTask: number | string, bDisableBlockingClip: boolean, bInstantBlendToAim: boolean): void;
/**
 * All parameters except ped and boat are optional, with `pedTarget`, `vehicleTarget`, `x`, `y`, `z` being dependent on `missionType` (ie. Attack/Flee mission types require a target ped/vehicle, whereas GoTo mission types require either `x`, `y`, `z` or a target ped/vehicle).
 * If you don't want to use a parameter; pass `0.0f` for `x`, `y` and `z`, `0` for `pedTarget`, `vehicleTarget` and other int parameters, and `-1.0f` for the remaining float parameters.
 * ```cpp
 * enum eBoatMissionFlags
 * {
 * None = 0,
 * StopAtEnd = 1,
 * StopAtShore = 2,
 * AvoidShore = 4,
 * PreferForward = 8,
 * NeverStop = 16,
 * NeverNavMesh = 32,
 * NeverRoute = 64,
 * ForceBeached = 128,
 * UseWanderRoute = 256,
 * UseFleeRoute = 512,
 * NeverPause = 1024,
 * // StopAtEnd | StopAtShore | AvoidShore
 * DefaultSettings = 7,
 * // StopAtEnd | StopAtShore | AvoidShore | PreferForward | NeverNavMesh | NeverRoute
 * OpenOceanSettings = 111,
 * // StopAtEnd | StopAtShore | AvoidShore | PreferForward | NeverNavMesh | NeverPause
 * BoatTaxiSettings = 1071,
 * }
 * ```
 * Hash: 0x15C86013127CE63F | ApiSet: undefined
 */
export declare function taskBoatMission(ped: number | Ped, boat: number | Vehicle, vehicleTarget: number | Vehicle, pedTarget: number | Ped, position: Vector3, missionType: number, speed: number, drivingStyle: number, radius: number, missionFlags: number): void;
/**
 * Hash: 0xB6C987F9285A3814 | ApiSet: undefined
 */
export declare function taskClimbLadder(ped: number | Ped, p1: number): void;
/**
 * ```
 * Not clear what it actually does, but here's how script uses it -
 * `if (OBJECT::HAS_PICKUP_BEEN_COLLECTED(...)`
 * {
 * `if(ENTITY::DOES_ENTITY_EXIST(PLAYER::PLAYER_PED_ID()))`
 * {
 * `TASK::TASK_CLEAR_LOOK_AT(PLAYER::PLAYER_PED_ID());`
 * }
 * ...
 * }
 * Another one where it doesn't "look" at current player -
 * `TASK::TASK_PLAY_ANIM(l_3ED, "missheist_agency2aig_2", "look_at_phone_a", 1000.0, -2.0, -1, 48, v_2, 0, 0, 0);`
 * `PED::_2208438012482A1A(l_3ED, 0, 0);`
 * `TASK::TASK_CLEAR_LOOK_AT(l_3ED);`
 * ```
 * Hash: 0x0F804F1DB19B9689 | ApiSet: undefined
 */
export declare function taskClearLookAt(ped: number | Ped): void;
/**
 * ```
 * Climbs or vaults the nearest thing.
 * ```
 * Hash: 0x89D9FCC2435112F1 | ApiSet: undefined
 */
export declare function taskClimb(ped: number | Ped, unused: boolean): void;
/**
 * ```
 * Despite its name, it only attacks ONE hated target. The one closest hated target.
 * p2 seems to be always 0
 * ```
 * Hash: 0x7BF835BB9E2698C8 | ApiSet: undefined
 */
export declare function taskCombatHatedTargetsAroundPed(ped: number | Ped, radius: number, p2: number): void;
/**
 * Hash: 0x2BBA30B854534A0C | ApiSet: undefined
 */
export declare function taskCombatHatedTargetsAroundPedTimed(p0: any, p1: number, p2: any, p3: any): void;
/**
 * ```
 * Despite its name, it only attacks ONE hated target. The one closest to the specified position.
 * ```
 * Hash: 0x4CF5F55DAC3280A0 | ApiSet: undefined
 */
export declare function taskCombatHatedTargetsInArea(ped: number | Ped, position: Vector3, radius: number, p5: any): void;
/**
 * Hash: 0x944F30DCB7096BDE | ApiSet: undefined
 */
export declare function taskCombatPedTimed(p0: any, ped: number | Ped, p2: number, p3: any): void;
/**
 * ```
 * Makes the specified ped attack the target ped.
 * p2 should be 0
 * p3 should be 16
 * ```
 * Hash: 0xF166E48407BAC484 | ApiSet: undefined
 */
export declare function taskCombatPed(ped: number | Ped, targetPed: number | Ped, p2: number, p3: number): void;
/**
 * ```
 * speed 1.0 = walk, 2.0 = run
 * p5 1 = normal, 3 = teleport to vehicle, 8 = normal/carjack ped from seat, 16 = teleport directly into vehicle
 * p6 is always 0
 * ```
 * Hash: 0xC20E50AA46D09CA8 | ApiSet: undefined
 */
export declare function taskEnterVehicle(ped: number | Ped, vehicle: number | Vehicle, timeout: number, seatIndex: number, speed: number, flag: number, p6: any): void;
/**
 * ```
 * Example:
 * `TASK::TASK_DRIVE_BY(l_467[1\/\*22\*\/], PLAYER::PLAYER_PED_ID(), 0, 0.0, 0.0, 2.0, 300.0, 100, 0, ${firing_pattern_burst_fire_driveby});`
 * Needs working example. Doesn't seem to do anything.
 * I marked p2 as targetVehicle as all these shooting related tasks seem to have that in common.
 * I marked p6 as distanceToShoot as if you think of GTA's Logic with the native SET_VEHICLE_SHOOT natives, it won't shoot till it gets within a certain distance of the target.
 * I marked p7 as pedAccuracy as it seems it's mostly 100 (Completely Accurate), 75, 90, etc. Although this could be the ammo count within the gun, but I highly doubt it. I will change this comment once I find out if it's ammo count or not.
 * ```
 * Hash: 0x2F8AF0E82773A171 | ApiSet: undefined
 */
export declare function taskDriveBy(driverPed: number | Ped, targetPed: number | Ped, targetVehicle: number | Vehicle, targetX: number, targetY: number, targetZ: number, distanceToShoot: number, pedAccuracy: number, p8: boolean, firingPattern: number | string): void;
/**
 * Hash: 0x79B258E397854D29 | ApiSet: undefined
 */
export declare function taskExitCover(p0: any, p1: any, p2: number, p3: number, p4: number): void;
/**
 * Hash: 0x7F93691AB4B92272 | ApiSet: undefined
 */
export declare function taskEveryoneLeaveVehicle(vehicle: number | Vehicle): void;
/**
 * Clears the current point route. Call this before [TASK_EXTEND_ROUTE](#\_0x1E7889778264843A) and [TASK_FOLLOW_POINT_ROUTE](#\_0x595583281858626E).
 * Hash: 0x841142A1376E9006 | ApiSet: undefined
 */
export declare function taskFlushRoute(): void;
/**
 * The ped will act like NPC's involved in a gunfight. The ped will squat down with their heads held in place and look around.
 * Hash: 0x3EB1FE9E8E908E15 | ApiSet: undefined
 */
export declare function taskCower(ped: number | Ped, duration: number): void;
/**
 * Sometimes a path may not be able to be found. This could happen because there simply isn't any way to get there, or maybe a bunch of dynamic objects have blocked the way,
 * or maybe the destination is too far away. In this case the ped will simply stand still.
 * To identify when this has happened, you can use GET_NAVMESH_ROUTE_RESULT. This will help you find situations where peds cannot get to their target.
 * ```cpp
 * enum eNavScriptFlags {
 * // Default flag
 * ENAV_DEFAULT = 0,
 * // Will ensure the ped continues to move whilst waiting for the path
 * // to be found, and will not slow down at the end of their route.
 * ENAV_NO_STOPPING = 1,
 * // Performs a slide-to-coord at the end of the task. This requires that the
 * // accompanying NAVDATA structure has the 'SlideToCoordHeading' member set correctly.
 * ENAV_ADV_SLIDE_TO_COORD_AND_ACHIEVE_HEADING_AT_END = 2,
 * // If the navmesh is not loaded in under the target position, then this will
 * // cause the ped to get as close as is possible on whatever navmesh is loaded.
 * // The navmesh must still be loaded at the path start.
 * ENAV_GO_FAR_AS_POSSIBLE_IF_TARGET_NAVMESH_NOT_LOADED = 4,
 * // Will allow navigation underwater - by default this is not allowed.
 * ENAV_ALLOW_SWIMMING_UNDERWATER = 8,
 * // Will only allow navigation on pavements. If the path starts or ends off
 * // the pavement, the command will fail. Likewise if no pavement-only route
 * // can be found even although the start and end are on pavement.
 * ENAV_KEEP_TO_PAVEMENTS = 16,
 * // Prevents the path from entering water at all.
 * ENAV_NEVER_ENTER_WATER = 32,
 * // Disables object-avoidance for this path. The ped may still make minor
 * // steering adjustments to avoid objects, but will not pathfind around them.
 * ENAV_DONT_AVOID_OBJECTS = 64,
 * // Specifies that the navmesh route will only be able to traverse up slopes
 * // which are under the angle specified, in the MaxSlopeNavigable member of the accompanying NAVDATA structure.
 * ENAV_ADVANCED_USE_MAX_SLOPE_NAVIGABLE = 128,
 * // Unused.
 * ENAV_STOP_EXACTLY = 512,
 * // The entity will look ahead in its path for a longer distance to make the
 * // walk/run start go more in the right direction.
 * ENAV_ACCURATE_WALKRUN_START = 1024,
 * // Disables ped-avoidance for this path while we move.
 * ENAV_DONT_AVOID_PEDS = 2048,
 * // If target pos is inside the boundingbox of an object it will otherwise be pushed out.
 * ENAV_DONT_ADJUST_TARGET_POSITION = 4096,
 * // Turns off the default behaviour, which is to stop exactly at the target position.
 * // Occasionally this can cause footsliding/skating problems.
 * ENAV_SUPPRESS_EXACT_STOP = 8192,
 * // Prevents the path-search from finding paths outside of this search distance.
 * // This can be used to prevent peds from finding long undesired routes.
 * ENAV_ADVANCED_USE_CLAMP_MAX_SEARCH_DISTANCE = 16384,
 * // Pulls out the paths from edges at corners for a longer distance, to prevent peds walking into stuff.
 * ENAV_PULL_FROM_EDGE_EXTRA = 32768
 * };
 * ```
 * Hash: 0x15D3A79D4E44B913 | ApiSet: undefined
 */
export declare function taskFollowNavMeshToCoord(ped: number | Ped, position: Vector3, moveBlendRatio: number, time: number, radius: number, flags: number, finalHeading: number): void;
/**
 * Hash: 0x9C00E77AF14B2DFF | ApiSet: undefined
 */
export declare function taskGetOffBoat(ped: number | Ped, boat: number | Vehicle): void;
/**
 * Hash: 0x17F58B88D085DBAC | ApiSet: undefined
 */
export declare function taskFollowNavMeshToCoordAdvanced(ped: number | Ped, position: Vector3, speed: number, timeout: number, unkFloat: number, unkInt: number, unkX: number, unkY: number, unkZ: number, unk_40000f: number): void;
/**
 * ```
 * p6 always -1
 * p7 always 10.0
 * p8 always 1
 * ```
 * Hash: 0x304AE42E357B8C7E | ApiSet: undefined
 */
export declare function taskFollowToOffsetOfEntity(ped: number | Ped, entity: number | Entity, offsetX: number, offsetY: number, offsetZ: number, movementSpeed: number, timeout: number, stoppingRange: number, persistFollowing: boolean): void;
/**
 * Adds a new point to the current point route; a maximum of 8 points can be added.
 * Call [TASK_FLUSH_ROUTE](#\_0x841142A1376E9006) before the first call to this. Call [TASK_FOLLOW_POINT_ROUTE](#\_0x595583281858626E) to make the Ped go the route.
 * Hash: 0x1E7889778264843A | ApiSet: undefined
 */
export declare function taskExtendRoute(position: Vector3): void;
/**
 * Tells a ped to go to a coord by any means.
 * ```cpp
 * enum eDrivingMode {
 * DF_StopForCars = 1,
 * DF_StopForPeds = 2,
 * DF_SwerveAroundAllCars = 4,
 * DF_SteerAroundStationaryCars = 8,
 * DF_SteerAroundPeds = 16,
 * DF_SteerAroundObjects = 32,
 * DF_DontSteerAroundPlayerPed = 64,
 * DF_StopAtLights = 128,
 * DF_GoOffRoadWhenAvoiding = 256,
 * DF_DriveIntoOncomingTraffic = 512,
 * DF_DriveInReverse = 1024,
 * // If pathfinding fails, cruise randomly instead of going on a straight line
 * DF_UseWanderFallbackInsteadOfStraightLine = 2048,
 * DF_AvoidRestrictedAreas = 4096,
 * // These only work on MISSION_CRUISE
 * DF_PreventBackgroundPathfinding = 8192,
 * DF_AdjustCruiseSpeedBasedOnRoadSpeed = 16384,
 * DF_UseShortCutLinks =  262144,
 * DF_ChangeLanesAroundObstructions = 524288,
 * // cruise tasks ignore this anyway--only used for goto's
 * DF_UseSwitchedOffNodes =  2097152,
 * // if you're going to be primarily driving off road
 * DF_PreferNavmeshRoute =  4194304,
 * // Only works for planes using MISSION_GOTO, will cause them to drive along the ground instead of fly
 * DF_PlaneTaxiMode =  8388608,
 * DF_ForceStraightLine = 16777216,
 * DF_UseStringPullingAtJunctions = 33554432,
 * DF_AvoidHighways = 536870912,
 * DF_ForceJoinInRoadDirection = 1073741824,
 * // Standard driving mode. stops for cars, peds, and lights, goes around stationary obstructions
 * DRIVINGMODE_STOPFORCARS = 786603, // DF_StopForCars|DF_StopForPeds|DF_SteerAroundObjects|DF_SteerAroundStationaryCars|DF_StopAtLights|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions,		// Obey lights too
 * // Like the above, but doesn't steer around anything in its way - will only wait instead.
 * DRIVINGMODE_STOPFORCARS_STRICT = 262275, // DF_StopForCars|DF_StopForPeds|DF_StopAtLights|DF_UseShortCutLinks, // Doesn't deviate an inch.
 * // Default "alerted" driving mode. drives around everything, doesn't obey lights
 * DRIVINGMODE_AVOIDCARS = 786469, // DF_SwerveAroundAllCars|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars,
 * // Very erratic driving. difference between this and AvoidCars is that it doesn't use the brakes at ALL to help with steering
 * DRIVINGMODE_AVOIDCARS_RECKLESS = 786468, // DF_SwerveAroundAllCars|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions,
 * // Smashes through everything
 * DRIVINGMODE_PLOUGHTHROUGH = 262144, // DF_UseShortCutLinks
 * // Drives normally except for the fact that it ignores lights
 * DRIVINGMODE_STOPFORCARS_IGNORELIGHTS = 786475, // DF_StopForCars|DF_SteerAroundStationaryCars|DF_StopForPeds|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions
 * // Try to swerve around everything, but stop for lights if necessary
 * DRIVINGMODE_AVOIDCARS_OBEYLIGHTS = 786597, // DF_SwerveAroundAllCars|DF_StopAtLights|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars
 * // Swerve around cars, be careful around peds, and stop for lights
 * DRIVINGMODE_AVOIDCARS_STOPFORPEDS_OBEYLIGHTS = 786599 // DF_SwerveAroundAllCars|DF_StopAtLights|DF_StopForPeds|DF_SteerAroundObjects|DF_UseShortCutLinks|DF_ChangeLanesAroundObstructions|DF_StopForCars
 * };
 * ```
 * Hash: 0x5BC448CB78FA3E88 | ApiSet: undefined
 */
export declare function taskGoToCoordAnyMeans(ped: number | Ped, position: Vector3, fMoveBlendRatio: number, vehicle: number | Vehicle, bUseLongRangeVehiclePathing: boolean, drivingFlags: number, fMaxRangeToShootTargets: number): void;
/**
 * Hash: 0x0759591819534F7B | ApiSet: undefined
 */
export declare function taskFollowWaypointRecording(p0: any, p1: any, p2: any, p3: any, p4: any): void;
/**
 * ```
 * NativeDB Added Parameter 13: Any p12
 * ```
 * Hash: 0x1DD45F9ECFDB1BC9 | ApiSet: undefined
 */
export declare function taskGoToCoordAnyMeansExtraParams(ped: number | Ped, position: Vector3, speed: number, p5: any, p6: boolean, walkingStyle: number, p8: number, p9: any, p10: any, p11: any): void;
/**
 * Hash: 0xD76B57B44F1E6F8B | ApiSet: undefined
 */
export declare function taskGoStraightToCoord(ped: number | Ped, position: Vector3, speed: number, timeout: number, targetHeading: number, distanceToSlide: number): void;
/**
 * Makes the ped go on a point route.
 * ```cpp
 * enum eFollowPointRouteMode {
 * TICKET_SINGLE = 0,
 * TICKET_RETURN = 1,
 * TICKET_SEASON = 2,
 * TICKET_LOOP = 3
 * }
 * ```
 * This native is often times used with [`TASK_FLUSH_ROUTE`](#\_0x841142A1376E9006) and [`TASK_EXTEND_ROUTE`](#\_0x1E7889778264843A)
 * Hash: 0x595583281858626E | ApiSet: undefined
 */
export declare function taskFollowPointRoute(ped: number | Ped, speed: number, routeMode: number): void;
/**
 * See [`FORCE_PED_MOTION_STATE`](#\_0xF28965D04F570DCA)
 * Hash: 0x4F056E1AFFEF17AB | ApiSet: undefined
 */
export declare function taskForceMotionState(ped: number | Ped, state: number | string, p2: boolean): void;
/**
 * ```
 * The ped will walk or run towards goToLocation, aiming towards goToLocation or focusLocation (depending on the aimingFlag) and shooting if shootAtEnemies = true to any enemy in his path.
 * If the ped is closer than noRoadsDistance, the ped will ignore pathing/navmesh and go towards goToLocation directly. This could cause the ped to get stuck behind tall walls if the goToLocation is on the other side. To avoid this, use 0.0f and the ped will always use pathing/navmesh to reach his destination.
 * If the speed is set to 0.0f, the ped will just stand there while aiming, if set to 1.0f he will walk while aiming, 2.0f will run while aiming.
 * The ped will stop aiming when he is closer than distanceToStopAt to goToLocation.
 * I still can't figure out what unkTrue is used for. I don't notice any difference if I set it to false but in the decompiled scripts is always true.
 * I think that unkFlag, like the driving styles, could be a flag that "work as a list of 32 bits converted to a decimal integer. Each bit acts as a flag, and enables or disables a function". What leads me to this conclusion is the fact that in the decompiled scripts, unkFlag takes values like: 0, 1, 5 (101 in binary) and 4097 (4096 + 1 or 1000000000001 in binary). For now, I don't know what behavior enable or disable this possible flag so I leave it at 0.
 * Note: After some testing, using unkFlag = 16 (0x10) enables the use of sidewalks while moving towards goToLocation.
 * The aimingFlag takes 2 values: 0 to aim at the focusLocation, 1 to aim at where the ped is heading (goToLocation).
 * Example:
 * enum AimFlag
 * {
 * AimAtFocusLocation,
 * AimAtGoToLocation
 * };
 * Vector3 goToLocation1 = { 996.2867f, 0, -2143.044f, 0, 28.4763f, 0 }; // remember the padding.
 * Vector3 goToLocation2 = { 990.2867f, 0, -2140.044f, 0, 28.4763f, 0 }; // remember the padding.
 * Vector3 focusLocation = { 994.3478f, 0, -2136.118f, 0, 29.2463f, 0 }; // the coord z should be a little higher, around +1.0f to avoid aiming at the ground
 * // 1st example
 * `TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation1.x, goToLocation1.y, goToLocation1.z, focusLocation.x, focusLocation.y, focusLocation.z, 2.0f \/\*run\*\/, true \/\*shoot\*\/, 3.0f \/\*stop at\*\/, 0.0f \/\*noRoadsDistance\*\/, true \/\*always true\*\/, 0 \/\*possible flag\*\/, AimFlag::AimAtGoToLocation, -957453492 \/\*FullAuto pattern\*\/);`
 * // 2nd example
 * `TASK::TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(pedHandle, goToLocation2.x, goToLocation2.y, goToLocation2.z, focusLocation.x, focusLocation.y, focusLocation.z, 1.0f \/\*walk\*\/, false \/\*don't shoot\*\/, 3.0f \/\*stop at\*\/, 0.0f \/\*noRoadsDistance\*\/, true \/\*always true\*\/, 0 \/\*possible flag\*\/, AimFlag::AimAtFocusLocation, -957453492 \/\*FullAuto pattern\*\/);`
 * 1st example: The ped (pedhandle) will run towards goToLocation1. While running and aiming towards goToLocation1, the ped will shoot on sight to any enemy in his path, using "FullAuto" firing pattern. The ped will stop once he is closer than distanceToStopAt to goToLocation1.
 * 2nd example: The ped will walk towards goToLocation2. This time, while walking towards goToLocation2 and aiming at focusLocation, the ped will point his weapon on sight to any enemy in his path without shooting. The ped will stop once he is closer than distanceToStopAt to goToLocation2.
 * ```
 * Hash: 0xA55547801EB331FC | ApiSet: undefined
 */
export declare function taskGoToCoordAndAimAtHatedEntitiesNearCoord(pedHandle: number | Ped, goToLocationX: number, goToLocationY: number, goToLocationZ: number, focusLocationX: number, focusLocationY: number, focusLocationZ: number, speed: number, shootAtEnemies: boolean, distanceToStopAt: number, noRoadsDistance: number, unkTrue: boolean, unkFlag: number, aimingFlag: number, firingPattern: number | string): void;
/**
 * Hash: 0x61E360B7E040D12E | ApiSet: undefined
 */
export declare function taskGoStraightToCoordRelativeToEntity(entity1: number | Entity, entity2: number | Entity, p2: number, p3: number, p4: number, p5: number, p6: any): void;
/**
 * Will make the ped move to a coordinate while aiming (and optionally shooting) at given coordinates.
 * Hash: 0x11315AB3385B8AC0 | ApiSet: undefined
 */
export declare function taskGoToCoordWhileAimingAtCoord(ped: number | Ped, position: Vector3, aimAtX: number, aimAtY: number, aimAtZ: number, moveSpeed: number, shoot: boolean, p9: number, p10: number, p11: boolean, flags: any, p13: boolean, firingPattern: number | string): void;
/**
 * Instructs the ped to go to the entity with the given offset.
 * ```cpp
 * enum eSeekEntityOffsetFlags {
 * ESEEK_OFFSET_ORIENTATES_WITH_ENTITY = 1,
 * ESEEK_KEEP_TO_PAVEMENTS = 2
 * };
 * ```
 * Hash: 0xE39B4FF4FDEBDE27 | ApiSet: undefined
 */
export declare function taskGotoEntityOffset(ped: number | Ped, entity: number | Entity, duration: number, seekRadius: number, seekAngleDeg: number, moveBlendRatio: number, gotoEntityOffsetFlags: number): void;
/**
 * ```
 * NativeDB Added Parameter 14: Any p13
 * ```
 * Hash: 0xB8ECD61F531A7B02 | ApiSet: undefined
 */
export declare function taskGoToCoordAnyMeansExtraParamsWithCruiseSpeed(ped: number | Ped, position: Vector3, speed: number, p5: any, p6: boolean, walkingStyle: number, p8: number, p9: any, p10: any, p11: any, p12: any): void;
/**
 * Hash: 0x04701832B739DCE5 | ApiSet: undefined
 */
export declare function taskGoToEntityWhileAimingAtCoord(p0: any, p1: any, p2: number, p3: number, p4: number, p5: number, p6: boolean, p7: number, p8: number, p9: boolean, p10: boolean, p11: any): void;
/**
 * Hash: 0xD2A207EEBDF9889B | ApiSet: undefined
 */
export declare function taskGuardAssignedDefensiveArea(p0: any, p1: number, p2: number, p3: number, p4: number, p5: number, p6: any): void;
/**
 * Will make the ped move to a coordinate while aiming (and optionally shooting) at the given entity.
 * ```cpp
 * enum eFiringPatternHashes {
 * FIRING_PATTERN_DEFAULT = 0,
 * FIRING_PATTERN_BURST_FIRE = -687903391,
 * FIRING_PATTERN_BURST_FIRE_DRIVEBY = -753768974,
 * FIRING_PATTERN_FULL_AUTO = -957453492,
 * FIRING_PATTERN_SINGLE_SHOT = 1566631136,
 * FIRING_PATTERN_DELAY_FIRE_BY_ONE_SEC = 2055493265,
 * FIRING_PATTERN_BURST_FIRE_HELI = -1857128337,
 * FIRING_PATTERN_SHORT_BURSTS = 445831135,
 * FIRING_PATTERN_BURST_FIRE_MICRO = 1122960381,
 * FIRING_PATTERN_SLOW_FIRE_TANK = -490063247,
 * FIRING_PATTERN_TAMPA_MORTAR = -1842093953
 * }
 * ```
 * Hash: 0xB2A16444EAD9AE47 | ApiSet: undefined
 */
export declare function taskGoToCoordWhileAimingAtEntity(ped: number | Ped, position: Vector3, entityToAimAt: number | Entity, moveSpeed: number, shoot: boolean, targetRadius: number, slowDistance: number, useNavMesh: boolean, navFlags: number, instantBlendAtAim: boolean, firingPattern: number | string, time: number): void;
/**
 * ```
 * The entity will move towards the target until time is over (duration) or get in target's range (distance). p5 and p6 are unknown, but you could leave p5 = 1073741824 or 100 or even 0 (didn't see any difference but on the decompiled scripts, they use 1073741824 mostly) and p6 = 0
 * Note: I've only tested it on entity -> ped and target -> vehicle. It could work differently on other entities, didn't try it yet.
 * `Example: TASK::TASK_GO_TO_ENTITY(pedHandle, vehicleHandle, 5000, 4.0, 100, 1073741824, 0)`
 * Ped will run towards the vehicle for 5 seconds and stop when time is over or when he gets 4 meters(?) around the vehicle (with duration = -1, the task duration will be ignored).
 * ```
 * Hash: 0x6A071245EB0D1882 | ApiSet: undefined
 */
export declare function taskGoToEntity(entity: number | Entity, target: number | Entity, duration: number, distance: number, speed: number, p5: number, p6: number): void;
/**
 * ```
 * p0 - Guessing PedID
 * p1, p2, p3 - XYZ?
 * p4 - ???
 * p5 - Maybe the size of sphere from XYZ?
 * p6 - ???
 * p7, p8, p9 - XYZ again?
 * p10 - Maybe the size of sphere from second XYZ?
 * ```
 * Hash: 0xC946FE14BE0EB5E2 | ApiSet: undefined
 */
export declare function taskGuardSphereDefensiveArea(p0: number | Ped, p1: number, p2: number, p3: number, p4: number, p5: number, p6: any, p7: number, p8: number, p9: number, p10: number): void;
/**
 * Instructs the ped to go to the entity with the given offset.
 * Hash: 0x338E7EF52B6095A9 | ApiSet: undefined
 */
export declare function taskGotoEntityOffsetXy(ped: number | Ped, entity: number | Entity, duration: number, targetRadius: number, offsetX: number, offsetY: number, moveBlendRatio: number, gotoEntityOffsetFlags: number): void;
/**
 * ```
 * shootatEntity:
 * If true, peds will shoot at Entity till it is dead.
 * If false, peds will just walk till they reach the entity and will cease shooting.
 * ```
 * Hash: 0x97465886D35210E9 | ApiSet: undefined
 */
export declare function taskGoToEntityWhileAimingAtEntity(ped: number | Ped, entityToWalkTo: number | Entity, entityToAimAt: number | Entity, speed: number, shootatEntity: boolean, p5: number, p6: number, p7: boolean, p8: boolean, firingPattern: number | string): void;
/**
 * ```
 * From re_prisonvanbreak:
 * `TASK::TASK_GUARD_CURRENT_POSITION(l_DD, 35.0, 35.0, 1);`
 * ```
 * Hash: 0x4A58A47A72E3FCB4 | ApiSet: undefined
 */
export declare function taskGuardCurrentPosition(p0: number | Ped, p1: number, p2: number, p3: boolean): void;
/**
 * ```
 * eg
 * `TASK::TASK_GOTO_ENTITY_AIMING(v_2, PLAYER::PLAYER_PED_ID(), 5.0, 25.0);`
 * ped = Ped you want to perform this task.
 * target = the Entity they should aim at.
 * distanceToStopAt = distance from the target, where the ped should stop to aim.
 * StartAimingDist = distance where the ped should start to aim.
 * ```
 * Hash: 0xA9DA48FAB8A76C12 | ApiSet: undefined
 */
export declare function taskGotoEntityAiming(ped: number | Ped, target: number | Entity, distanceToStopAt: number, StartAimingDist: number): void;
/**
 * ```
 * In the scripts, p3 was always -1.
 * p3 seems to be duration or timeout of turn animation.
 * Also facingPed can be 0 or -1 so ped will just raise hands up.
 * ```
 * Hash: 0xF2EAB31979A7F910 | ApiSet: undefined
 */
export declare function taskHandsUp(ped: number | Ped, duration: number, facingPed: number | Ped, p3: number, p4: boolean): void;
/**
 * ```
 * Ped pilot should be in a heli.
 * EntityToFollow can be a vehicle or Ped.
 * x,y,z appear to be how close to the EntityToFollow the heli should be. Scripts use 0.0, 0.0, 80.0. Then the heli tries to position itself 80 units above the EntityToFollow. If you reduce it to -5.0, it tries to go below (if the EntityToFollow is a heli or plane)
 * NOTE: If the pilot finds enemies, it will engage them, then remain there idle, not continuing to chase the Entity given.
 * ```
 * Hash: 0xAC83B1DB38D0ADA0 | ApiSet: undefined
 */
export declare function taskHeliChase(pilot: number | Ped, entityToFollow: number | Entity, position: Vector3): void;
/**
 * Flags are the same flags used in [`TASK_LEAVE_VEHICLE`](#\_0xD3DBCE61A490BE02)
 * Hash: 0x504D54DF3F6F2247 | ApiSet: undefined
 */
export declare function taskLeaveAnyVehicle(ped: number | Ped, p1: number, flags: number): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xB385523325077210 | ApiSet: undefined
 */
export declare function taskHeliEscortHeli(pilot: number | Ped, heli1: number | Vehicle, heli2: number | Vehicle, p3: number, p4: number, p5: number): void;
/**
 * Hash: 0x6FA46612594F7973 | ApiSet: undefined
 */
export declare function taskLookAtCoord(entity: number | Entity, position: Vector3, duration: number, p5: any, p6: any): void;
/**
 * All parameters except ped, heli and speed are optional, with `pedTarget`, `vehicleTarget`, `x`, `y`, `z` being dependent on `missionType` (ie. Attack/Flee mission types require a target ped/vehicle, whereas GoTo mission types require either `x`, `y`, `z` or a target ped/vehicle).
 * If you don't want to use a parameter; pass `0.0f` for `x`, `y` and `z`, `0` for `pedTarget`, `vehicleTarget`, `0` for other int parameters, and `-1.0f` for the remaining float parameters.
 * ```cpp
 * enum eHeliMissionFlags
 * {
 * None = 0,
 * AttainRequestedOrientation = 1,
 * DontModifyOrientation = 2,
 * DontModifyPitch = 4,
 * DontModifyThrottle = 8,
 * DontModifyRoll = 16,
 * LandOnArrival = 32,
 * DontDoAvoidance = 64,
 * StartEngineImmediately = 128,
 * ForceHeightMapAvoidance = 256,
 * DontClampProbesToDestination = 512,
 * EnableTimeslicingWhenPossible = 1024,
 * CircleOppositeDirection = 2048,
 * MaintainHeightAboveTerrain = 4096,
 * IgnoreHiddenEntitiesDuringLand = 8192,
 * DisableAllHeightMapAvoidance = 16384,
 * // ForceHeightMapAvoidance | DontDoAvoidance
 * HeightMapOnlyAvoidance = 320,
 * }
 * ```
 * Hash: 0xDAD029E187A2BEB4 | ApiSet: undefined
 */
export declare function taskHeliMission(ped: number | Ped, heli: number | Vehicle, vehicleTarget: number | Vehicle, pedTarget: number | Ped, position: Vector3, missionType: number, speed: number, radius: number, heading: number, height: number, minHeight: number, slowDist: number, missionFlags: number): void;
/**
 * ```
 * param3: duration in ms, use -1 to look forever
 * param4: using 2048 is fine
 * param5: using 3 is fine
 * ```
 * Hash: 0x69F4BE8C8CC4796C | ApiSet: undefined
 */
export declare function taskLookAtEntity(ped: number | Ped, lookAt: number | Entity, duration: number, unknown1: number, unknown2: number): void;
/**
 * ```
 * Flags from decompiled scripts:
 * 0 = normal exit and closes door.
 * 1 = normal exit and closes door.
 * 16 = teleports outside, door kept closed.  (This flag does not seem to work for the front seats in buses, NPCs continue to exit normally)
 * 64 = normal exit and closes door, maybe a bit slower animation than 0.
 * 256 = normal exit but does not close the door.
 * 4160 = ped is throwing himself out, even when the vehicle is still.
 * 262144 = ped moves to passenger seat first, then exits normally
 * Others to be tried out: 320, 512, 131072.
 * ```
 * Hash: 0xD3DBCE61A490BE02 | ApiSet: undefined
 */
export declare function taskLeaveVehicle(ped: number | Ped, vehicle: number | Vehicle, flags: number): void;
/**
 * The given ped will try to open the nearest door to 'seat'.
 * Example: telling the ped to open the door for the driver seat does not necessarily mean it will open the driver door, it may choose to open the passenger door instead if that one is closer.
 * Hash: 0x965791A9A488A062 | ApiSet: undefined
 */
export declare function taskOpenVehicleDoor(ped: number | Ped, vehicle: number | Vehicle, timeOut: number, seat: number, speed: number): void;
/**
 * ```
 * Definition is wrong. This has 4 parameters (Not sure when they were added. v350 has 2, v678 has 4).
 * v350: Ped ped, bool unused
 * v678: Ped ped, bool unused, bool flag1, bool flag2
 * flag1 = super jump, flag2 = do nothing if flag1 is false and doubles super jump height if flag1 is true.
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 * NativeDB Added Parameter 4: Any p3
 * ```
 * Hash: 0x0AE4086104E067B1 | ApiSet: undefined
 */
export declare function taskJump(ped: number | Ped, unused: boolean): void;
/**
 * ```
 * `makes ped parachute to coords x y z. Works well with PATHFIND::GET_SAFE_COORD_FOR_PED`
 * ```
 * Hash: 0xB33E291AFA6BD03A | ApiSet: undefined
 */
export declare function taskParachuteToTarget(ped: number | Ped, position: Vector3): void;
/**
 * ```
 * This function has a third parameter as well (bool).
 * Second parameter is unused.
 * seconds parameter was for jetpack in the early stages of gta and the hard coded code is now removed
 * ```
 * ```
 * NativeDB Added Parameter 3: BOOL p2
 * ```
 * Hash: 0xD2F1C53C97EE81AB | ApiSet: undefined
 */
export declare function taskParachute(ped: number | Ped, p1: boolean): void;
/**
 * ```
 * Example:
 * `TASK::TASK_MOVE_NETWORK_ADVANCED_BY_NAME(PLAYER::PLAYER_PED_ID(), "minigame_tattoo_michael_parts", 324.13f, 181.29f, 102.6f, 0.0f, 0.0f, 22.32f, 2, 0, false, 0, 0);`
 * ```
 * Hash: 0xD5B35BEA41919ACB | ApiSet: undefined
 */
export declare function taskMoveNetworkAdvancedByName(ped: number | Ped, p1: string, p2: number, p3: number, p4: number, p5: number, p6: number, p7: number, p8: any, p9: number, p10: boolean, animDict: string, flags: number): void;
/**
 * Hash: 0xD04FE6765D990A06 | ApiSet: undefined
 */
export declare function taskPedSlideToCoord(ped: number | Ped, position: Vector3, heading: number, duration: number): void;
/**
 * Hash: 0x89221B16730234F0 | ApiSet: undefined
 */
export declare function taskPerformSequenceFromProgress(ped: number | Ped, taskIndex: number, progress1: number, progress2: number): void;
/**
 * ```
 * Example:
 * `TASK::TASK_MOVE_NETWORK_BY_NAME(PLAYER::PLAYER_PED_ID(), "arm_wrestling_sweep_paired_a_rev3", 0.0f, true, "mini@arm_wrestling", 0);`
 * ```
 * Hash: 0x2D537BA194896636 | ApiSet: undefined
 */
export declare function taskMoveNetworkByName(ped: number | Ped, task: string, multiplier: number, p3: boolean, animDict: string, flags: number): void;
/**
 * For an example on how to use this please refer to \[OPEN_SEQUENCE_TASK]\(#\_0xE8854A4326B9E12B
 * Hash: 0x8C33220C8D78CA0D | ApiSet: undefined
 */
export declare function taskPerformSequenceLocally(ped: number | Ped, taskSequenceId: number): void;
/**
 * ```
 * Used only once in the scripts (am_mp_nightclub)
 * ```
 * ```
 * Used only once in the scripts (am_mp_nightclub)
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x3D45B0B355C5E0C9 | ApiSet: undefined
 */
export declare function taskMoveNetworkByNameWithInitParams(ped: number | Ped, p1: string, p3: number, p4: boolean, animDict: string, flags: number): any;
/**
 * Hash: 0xBF19721FA34D32C0 | ApiSet: undefined
 */
export declare function taskPlaneLand(pilot: number | Ped, plane: number | Vehicle, runwayStartX: number, runwayStartY: number, runwayStartZ: number, runwayEndX: number, runwayEndY: number, runwayEndZ: number): void;
/**
 * This tasks the ped to do nothing for the specified amount of miliseconds.
 * This is useful if you want to add a delay between tasks when using a sequence task.
 * Hash: 0xE73A266DB0CA9042 | ApiSet: undefined
 */
export declare function taskPause(ped: number | Ped, ms: number): void;
/**
 * The given ped will try to drive the plane to the given coordinates and will then drive around the given coords (the plane will form 8s on the ground)
 * Hash: 0x92C360B5F15D2302 | ApiSet: undefined
 */
export declare function taskPlaneTaxi(pilot: number | Ped, aircraft: number | Vehicle, xPos: number, yPos: number, zPos: number, fCruiseSpeed: number, fTargetReachedDist: number): void;
/**
 * ```
 * After looking at some scripts the second parameter seems to be an id of some kind. Here are some I found from some R* scripts:
 * "miss_Tower_01" (this went from 01 - 10)
 * "miss_Ass0" (0, 4, 6, 3)
 * "MISS_PATROL_8"
 * I think they're patrol routes, but I'm not sure. And I believe the 3rd parameter is a BOOL, but I can't confirm other than only seeing 0 and 1 being passed.
 * As far as I can see the patrol routes names such as "miss_Ass0" have been defined earlier in the scripts. This leads me to believe we can defined our own new patrol routes by following the same approach.
 * From the scripts
 * `TASK::OPEN_PATROL_ROUTE("miss_Ass0");`
 * `TASK::ADD_PATROL_ROUTE_NODE(0, "WORLD_HUMAN_GUARD_STAND", l_738[0\/\*3\*\/], -139.4076690673828, -993.4732055664062, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));`
 * `TASK::ADD_PATROL_ROUTE_NODE(1, "WORLD_HUMAN_GUARD_STAND", l_738[1\/\*3\*\/], -116.1391830444336, -987.4984130859375, 26.38541030883789, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));`
 * `TASK::ADD_PATROL_ROUTE_NODE(2, "WORLD_HUMAN_GUARD_STAND", l_738[2\/\*3\*\/], -128.46847534179688, -979.0340576171875, 26.2754, MISC::GET_RANDOM_INT_IN_RANGE(5000, 10000));`
 * `TASK::ADD_PATROL_ROUTE_LINK(0, 1);`
 * `TASK::ADD_PATROL_ROUTE_LINK(1, 2);`
 * `TASK::ADD_PATROL_ROUTE_LINK(2, 0);`
 * `TASK::CLOSE_PATROL_ROUTE();`
 * `TASK::CREATE_PATROL_ROUTE();`
 * ```
 * Hash: 0xBDA5DF49D080FE4E | ApiSet: undefined
 */
export declare function taskPatrol(ped: number | Ped, p1: string, p2: any, p3: boolean, p4: boolean): void;
/**
 * For an example on how to use this please refer to [OPEN_SEQUENCE_TASK](#\_0xE8854A4326B9E12B)
 * Hash: 0x5ABA3986D90D8A3B | ApiSet: undefined
 */
export declare function taskPerformSequence(ped: number | Ped, taskSequenceId: number): void;
/**
 * Gives the plane a mission (purpose or objective), the mission is passed onto the `iMissionIndex` parameter.
 * ```cpp
 * enum eVehicleMission {
 * MISSION_NONE = 0,
 * MISSION_CRUISE, // 1
 * MISSION_RAM, // 2
 * MISSION_BLOCK, // 3
 * MISSION_GOTO, // 4
 * MISSION_STOP, // 5
 * MISSION_ATTACK, // 6
 * MISSION_FOLLOW, // 7
 * MISSION_FLEE, // 8
 * MISSION_CIRCLE, // 9
 * MISSION_ESCORT_LEFT, // 10
 * MISSION_ESCORT_RIGHT, // 11
 * MISSION_ESCORT_REAR, // 12
 * MISSION_ESCORT_FRONT, // 13
 * MISSION_GOTO_RACING, // 14
 * MISSION_FOLLOW_RECORDING, // 15
 * MISSION_POLICE_BEHAVIOUR, // 16
 * MISSION_PARK_PERPENDICULAR, // 17
 * MISSION_PARK_PARALLEL, // 18
 * MISSION_LAND, // 19
 * MISSION_LAND_AND_WAIT, // 20
 * MISSION_CRASH, // 21
 * MISSION_PULL_OVER, // 22
 * MISSION_PROTECT // 23
 * };
 * ```
 * Hash: 0x23703CD154E83B88 | ApiSet: undefined
 */
export declare function taskPlaneMission(ped: number | Ped, vehicle: number | Vehicle, targetVehicle: number | Vehicle, targetPed: number | Ped, fTargetCoordX: number, fTargetCoordY: number, fTargetCoordZ: number, iMissionIndex: number, fCruiseSpeed: number, fTargetReachedDist: number, fOrientation: number, iFlightHeight: number, iMinHeightAboveTerrain: number, bPrecise: boolean): void;
/**
 * Hash: 0x5A4A6A6D3DC64F52 | ApiSet: undefined
 */
export declare function taskPedSlideToCoordHdgRate(ped: number | Ped, position: Vector3, heading: number, p5: number, p6: number): void;
/**
 * Hash: 0x2D2386F273FF7A25 | ApiSet: undefined
 */
export declare function taskPlaneChase(pilot: number | Ped, entityToFollow: number | Entity, position: Vector3): void;
/**
 * Hash: 0x965FEC691D55E9BF | ApiSet: undefined
 */
export declare function taskPlantBomb(ped: number | Ped, position: Vector3, heading: number): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xF7F9DCCA89E7505B | ApiSet: undefined
 */
export declare function taskPlaneGotoPreciseVtol(ped: number | Ped, vehicle: number | Vehicle, p2: any, p3: any, p4: any, p5: any, p6: any, p7: any, p8: any, p9: any): void;
/**
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * ```cpp
 * enum eScriptedAnimFlags
 * {
 * AF_LOOPING = 1,
 * AF_HOLD_LAST_FRAME = 2,
 * AF_REPOSITION_WHEN_FINISHED = 4,
 * AF_NOT_INTERRUPTABLE = 8,
 * AF_UPPERBODY = 16,
 * AF_SECONDARY = 32,
 * AF_REORIENT_WHEN_FINISHED = 64,
 * AF_ABORT_ON_PED_MOVEMENT = 128,
 * AF_ADDITIVE = 256,
 * AF_TURN_OFF_COLLISION = 512,
 * AF_OVERRIDE_PHYSICS = 1024,
 * AF_IGNORE_GRAVITY = 2048,
 * AF_EXTRACT_INITIAL_OFFSET = 4096,
 * AF_EXIT_AFTER_INTERRUPTED = 8192,
 * AF_TAG_SYNC_IN = 16384,
 * AF_TAG_SYNC_OUT = 32768,
 * AF_TAG_SYNC_CONTINUOUS = 65536,
 * AF_FORCE_START = 131072,
 * AF_USE_KINEMATIC_PHYSICS = 262144,
 * AF_USE_MOVER_EXTRACTION = 524288,
 * AF_HIDE_WEAPON = 1048576,
 * AF_ENDS_IN_DEAD_POSE = 2097152,
 * AF_ACTIVATE_RAGDOLL_ON_COLLISION = 4194304,
 * AF_DONT_EXIT_ON_DEATH = 8388608,
 * AF_ABORT_ON_WEAPON_DAMAGE = 16777216,
 * AF_DISABLE_FORCED_PHYSICS_UPDATE = 33554432,
 * AF_PROCESS_ATTACHMENTS_ON_START = 67108864,
 * AF_EXPAND_PED_CAPSULE_FROM_SKELETON = 134217728,
 * AF_USE_ALTERNATIVE_FP_ANIM = 268435456,
 * AF_BLENDOUT_WRT_LAST_FRAME = 536870912,
 * AF_USE_FULL_BLENDING = 1073741824
 * }
 * ```
 * Hash: 0xEA47FE3719165B94 | ApiSet: undefined
 */
export declare function taskPlayAnim(ped: number | Ped, animDictionary: string, animationName: string, blendInSpeed: number, blendOutSpeed: number, duration: number, flag: number, playbackRate: number, lockX: boolean, lockY: boolean, lockZ: boolean): void;
/**
 * ```
 * from armenian3.c4
 * `TASK::TASK_PUT_PED_DIRECTLY_INTO_MELEE(PlayerPed, armenianPed, 0.0, -1.0, 0.0, 0);`
 * ```
 * Hash: 0x1C6CD14A876FFE39 | ApiSet: undefined
 */
export declare function taskPutPedDirectlyIntoMelee(ped: number | Ped, meleeTarget: number | Ped, p2: number, p3: number, p4: number, p5: boolean): void;
/**
 * ```
 * Example from the scripts:
 * `TASK::TASK_PLAY_PHONE_GESTURE_ANIMATION(PLAYER::PLAYER_PED_ID(), v_3, v_2, v_4, 0.25, 0.25, 0, 0);`
 * =========================================================
 * ^^ No offense, but Idk how that would really help anyone.
 * As for the animDict & animation, they're both store in a global in all 5 scripts. So if anyone would be so kind as to read that global and comment what strings they use. Thanks.
 * Known boneMaskTypes'
 * "BONEMASK_HEADONLY"
 * "BONEMASK_HEAD_NECK_AND_ARMS"
 * "BONEMASK_HEAD_NECK_AND_L_ARM"
 * "BONEMASK_HEAD_NECK_AND_R_ARM"
 * p4 known args - 0.0f, 0.5f, 0.25f
 * p5 known args - 0.0f, 0.25f
 * p6 known args - 1 if a global if check is passed.
 * p7 known args - 1 if a global if check is passed.
 * The values found above, I found within the 5 scripts this is ever called in. (fmmc_launcher, fm_deathmatch_controller, fm_impromptu_dm_controller, fm_mission_controller, and freemode).
 * =========================================================
 * ```
 * Hash: 0x8FBB6758B3B3E9EC | ApiSet: undefined
 */
export declare function taskPlayPhoneGestureAnimation(ped: number | Ped, animDict: string, animation: string, boneMaskType: string, p4: number, p5: number, p6: boolean, p7: boolean): void;
/**
 * ```
 * From fm_mission_controller.c:
 * reserve_network_mission_objects(get_num_reserved_mission_objects(0) + 1);
 * vVar28 = {0.094f, 0.02f, -0.005f};
 * vVar29 = {-92.24f, 63.64f, 150.24f};
 * func_253(&uVar30, joaat("prop_ld_case_01"), Global_1592429.imm_34757[iParam1 <268>], 1, 1, 0, 1);
 * set_entity_lod_dist(net_to_ent(uVar30), 500);
 * attach_entity_to_entity(net_to_ent(uVar30), iParam0, get_ped_bone_index(iParam0, 28422), vVar28, vVar29, 1, 0, 0, 0, 2, 1);
 * Var31.imm_4 = 1065353216;
 * Var31.imm_5 = 1065353216;
 * Var31.imm_9 = 1065353216;
 * Var31.imm_10 = 1065353216;
 * Var31.imm_14 = 1065353216;
 * Var31.imm_15 = 1065353216;
 * Var31.imm_17 = 1040187392;
 * Var31.imm_18 = 1040187392;
 * Var31.imm_19 = -1;
 * Var32.imm_4 = 1065353216;
 * Var32.imm_5 = 1065353216;
 * Var32.imm_9 = 1065353216;
 * Var32.imm_10 = 1065353216;
 * Var32.imm_14 = 1065353216;
 * Var32.imm_15 = 1065353216;
 * Var32.imm_17 = 1040187392;
 * Var32.imm_18 = 1040187392;
 * Var32.imm_19 = -1;
 * Var31 = 1;
 * Var31.imm_1 = "weapons@misc@jerrycan@mp_male";
 * Var31.imm_2 = "idle";
 * Var31.imm_20 = 1048633;
 * Var31.imm_4 = 0.5f;
 * Var31.imm_16 = get_hash_key("BONEMASK_ARMONLY_R");
 * task_scripted_animation(iParam0, &Var31, &Var32, &Var32, 0f, 0.25f);
 * set_model_as_no_longer_needed(joaat("prop_ld_case_01"));
 * remove_anim_dict("anim@heists@biolab@");
 * ```
 * Hash: 0x126EF75F1E17ABE5 | ApiSet: undefined
 */
export declare function taskScriptedAnimation(ped: number | Ped, p4: number, p5: number): [any, any, any];
/**
 * ```
 * Only appears twice in the scripts.
 * `TASK::TASK_RAPPEL_FROM_HELI(PLAYER::PLAYER_PED_ID(), 0x41200000);`
 * `TASK::TASK_RAPPEL_FROM_HELI(a_0, 0x41200000);`
 * ```
 * Hash: 0x09693B0312F91649 | ApiSet: undefined
 */
export declare function taskRappelFromHeli(ped: number | Ped, unused: number): void;
/**
 * Hash: 0x4172393E6BE1FECE | ApiSet: undefined
 */
export declare function taskPutPedDirectlyIntoCover(ped: number | Ped, position: Vector3, timeout: any, p5: boolean, p6: number, p7: boolean, p8: boolean, p9: any, p10: boolean): void;
/**
 * Hash: 0x75AC2B60386D89F2 | ApiSet: undefined
 */
export declare function taskSeekCoverFromPos(ped: number | Ped, position: Vector3, duration: number, p5: boolean): void;
/**
 * ```
 * The 2nd param (unused) is not implemented.
 * -----------------------------------------------------------------------
 * The only occurrence I found in a R* script ("assassin_construction.ysc.c4"):
 * `if (((v_3 < v_4) && (TASK::GET_SCRIPT_TASK_STATUS(PLAYER::PLAYER_PED_ID(), 0x6a67a5cc) != 1)) && (v_5 > v_3)) {`
 * `TASK::TASK_RELOAD_WEAPON(PLAYER::PLAYER_PED_ID(), 1);`
 * }
 * ```
 * Hash: 0x62D2916F56B9CD2D | ApiSet: undefined
 */
export declare function taskReloadWeapon(ped: number | Ped, unused: boolean): void;
/**
 * Similar in functionality to [`TASK_PLAY_ANIM`](#\_0xEA47FE3719165B94), except the position and rotation parameters let you specify the initial position and rotation of the task. The ped is teleported to the position specified.
 * [Animations list](https://alexguirre.github.io/animations-list/)
 * Hash: 0x83CDB10EA29B370B | ApiSet: undefined
 */
export declare function taskPlayAnimAdvanced(ped: number | Ped, animDictionary: string, animationName: string, posX: number, posY: number, posZ: number, rotX: number, rotY: number, rotZ: number, blendInSpeed: number, blendOutSpeed: number, duration: number, flag: any, animTime: number, p14: any, p15: any): void;
/**
 * Hash: 0x84D32B3BEC531324 | ApiSet: undefined
 */
export declare function taskSeekCoverFromPed(ped: number | Ped, target: number | Ped, duration: number, p3: boolean): void;
/**
 * ```
 * from michael2:
 * `TASK::TASK_SEEK_COVER_TO_COORDS(ped, 967.5164794921875, -2121.603515625, 30.479299545288086, 978.94677734375, -2125.84130859375, 29.4752, -1, 1);`
 * appears to be shorter variation
 * from michael3:
 * `TASK::TASK_SEEK_COVER_TO_COORDS(ped, -2231.011474609375, 263.6326599121094, 173.60195922851562, -1, 0);`
 * ```
 * Hash: 0x39246A6958EF072C | ApiSet: undefined
 */
export declare function taskSeekCoverToCoords(ped: number | Ped, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p7: any, p8: boolean): void;
/**
 * Hash: 0xD43D95C7A869447F | ApiSet: undefined
 */
export declare function taskSeekCoverToCoverPoint(p0: any, p1: any, p2: number, p3: number, p4: number, p5: any, p6: boolean): void;
/**
 * Attaches a ped to a rope and allows player control to rappel down a wall.
 * Disables all collisions while on the rope.
 * NativeDB Introduced: v1868
 * Hash: 0xEAF66ACDDC794793 | ApiSet: undefined
 */
export declare function taskRappelDownWall(ped: number | Ped, x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, minZ: number, ropeId: number, clipset: string, p10: any): void;
/**
 * ```
 * p1 is always GET_HASH_KEY("empty") in scripts, for the rare times this is used
 * ```
 * Hash: 0xEB8517DDA73720DA | ApiSet: undefined
 */
export declare function taskSetDecisionMaker(ped: number | Ped, p1: number | string): void;
/**
 * ```
 * I cant believe I have to define this, this is one of the best natives.
 * It makes the ped ignore basically all shocking events around it. Occasionally the ped may comment or gesture, but other than that they just continue their daily activities. This includes shooting and wounding the ped. And - most importantly - they do not flee.
 * Since it is a task, every time the native is called the ped will stop for a moment.
 * ```
 * Hash: 0x90D2156198831D69 | ApiSet: undefined
 */
export declare function taskSetBlockingOfNonTemporaryEvents(ped: number | Ped, toggle: boolean): void;
/**
 * Hash: 0x72C896464915D1B1 | ApiSet: undefined
 */
export declare function taskReactAndFleePed(ped: number | Ped, fleeTarget: number | Ped): void;
/**
 * Hash: 0x933C06518B52A9A4 | ApiSet: undefined
 */
export declare function taskSetSphereDefensiveArea(p0: any, p1: number, p2: number, p3: number, p4: number): void;
/**
 * Makes a shark ped circle around specified coordinates.
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0x60A19CF85FF4CEFA | ApiSet: undefined
 */
export declare function taskSharkCircleCoord(ped: number | Ped, position: Vector3, moveBlendRatio: number, radius: number): void;
/**
 * ```
 * Firing Pattern Hash Information: https://pastebin.com/Px036isB
 * ```
 * Hash: 0x46A6CC01E0826106 | ApiSet: undefined
 */
export declare function taskShootAtCoord(ped: number | Ped, position: Vector3, duration: number, firingPattern: number | string): void;
/**
 * Hash: 0x452419CBD838065B | ApiSet: undefined
 */
export declare function taskShockingEventReact(ped: number | Ped, eventHandle: number): void;
/**
 * ```
 * //this part of the code is to determine at which entity the player is aiming, for example if you want to create a mod where you give orders to peds
 * Entity aimedentity;
 * `Player player = PLAYER::PLAYER_ID();`
 * `PLAYER::_GET_AIMED_ENTITY(player, &aimedentity);`
 * //bg is an array of peds
 * `TASK::TASK_SHOOT_AT_ENTITY(bg[i], aimedentity, 5000, MISC::GET_HASH_KEY("FIRING_PATTERN_FULL_AUTO"));`
 * in practical usage, getting the entity the player is aiming at and then task the peds to shoot at the entity, at a button press event would be better.
 * Firing Pattern Hash Information: https://pastebin.com/Px036isB
 * ```
 * Hash: 0x08DA95E8298AE772 | ApiSet: undefined
 */
export declare function taskShootAtEntity(entity: number | Entity, target: number | Entity, duration: number, firingPattern: number | string): void;
/**
 * ```
 * NativeDB Added Parameter 2: BOOL p1
 * ```
 * Hash: 0x601736CFE536B0A0 | ApiSet: undefined
 */
export declare function taskSkyDive(ped: number | Ped): void;
/**
 * ```
 * Makes the specified ped shuffle to the next vehicle seat.
 * The ped MUST be in a vehicle and the vehicle parameter MUST be the ped's current vehicle.
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * Hash: 0x7AA80209BDA643EB | ApiSet: undefined
 */
export declare function taskShuffleToNextVehicleSeat(ped: number | Ped, vehicle: number | Vehicle): void;
/**
 * ```
 * Makes the specified ped flee the specified distance from the specified position.
 * ```
 * Hash: 0x94587F17E9C365D5 | ApiSet: undefined
 */
export declare function taskSmartFleeCoord(ped: number | Ped, position: Vector3, distance: number, time: number, p6: boolean, p7: boolean): void;
/**
 * The ped will move or warp to the position and heading given, then start the scenario passed. See [`TASK_START_SCENARIO_IN_PLACE`](#\_0x142A02425FF02BD9) for a list of scenarios.
 * Hash: 0xFA4EFC79F69D4F07 | ApiSet: undefined
 */
export declare function taskStartScenarioAtPosition(ped: number | Ped, scenarioName: string, position: Vector3, heading: number, timeToLeave: number, playIntro: boolean, warp: boolean): void;
/**
 * ```
 * scenarioName example: "WORLD_HUMAN_GUARD_STAND"
 * ```
 * Hash: 0xAE032F8BBA959E90 | ApiSet: undefined
 */
export declare function taskStandGuard(ped: number | Ped, position: Vector3, heading: number, scenarioName: string): void;
/**
 * ```
 * Makes a ped run away from another ped (fleeTarget).
 * distance = ped will flee this distance.
 * fleeTime = ped will flee for this amount of time, set to "-1" to flee forever
 * ```
 * Hash: 0x22B0D0E37CCB840D | ApiSet: undefined
 */
export declare function taskSmartFleePed(ped: number | Ped, fleeTarget: number | Ped, distance: number, fleeTime: any, p4: boolean, p5: boolean): void;
/**
 * ```
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0x3FA00D4F4641BFAE | ApiSet: undefined
 */
export declare function taskStopPhoneGestureAnimation(ped: number | Ped): void;
/**
 * ```
 * Makes the specified ped stand still for (time) milliseconds.
 * ```
 * Hash: 0x919BE13EED931959 | ApiSet: undefined
 */
export declare function taskStandStill(ped: number | Ped, time: number): void;
/**
 * ```
 * Stealth kill action name hashes:
 * stealth kills can be found here: Grand Theft Auto V\common.rpf\data\action\stealth_kills.meta
 * ...
 * {
 * "ACT_stealth_kill_a",
 * "ACT_stealth_kill_weapon",
 * "ACT_stealth_kill_b",
 * "ACT_stealth_kill_c",
 * "ACT_stealth_kill_d",
 * "ACT_stealth_kill_a_gardener"
 * }
 * Only known script using this native: fbi4_prep2
 * EXAMPLE:
 * `ai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key("AR_stealth_kill_a"), 1f, 0);ai::task_stealth_kill(iParam1, Local_252, gameplay::get_hash_key("AR_stealth_kill_knife"), 1f, 0);`
 * `Also it may be important to note, that each time this task is called, it's followed by AI::CLEAR_PED_TASKS on the target`
 * ```
 * Hash: 0xAA5DC05579D60BD9 | ApiSet: undefined
 */
export declare function taskStealthKill(killer: number | Ped, target: number | Ped, actionType: number | string, p3: number, p4: any): void;
/**
 * Puts the ped into the given scenario immediately at their current location. [List of scenario names](https://pastebin.com/6mrYTdQv) or in `update/update.rpf/common/data/ai/scenarios.meta`.
 * Hash: 0x142A02425FF02BD9 | ApiSet: undefined
 */
export declare function taskStartScenarioInPlace(ped: number | Ped, scenarioName: string, timeToLeave: number, playIntroClip: boolean): void;
/**
 * ```
 * Makes the ped run to take cover
 * ```
 * Hash: 0xE5DA8615A6180789 | ApiSet: undefined
 */
export declare function taskStayInCover(ped: number | Ped): void;
/**
 * ```
 * This function is called on peds in vehicles.
 * anim: animation name
 * p2, p3, p4: "sweep_low", "sweep_med" or "sweep_high"
 * p5: no idea what it does but is usually -1
 * ```
 * Hash: 0x2047C02158D6405A | ApiSet: undefined
 */
export declare function taskSweepAimEntity(ped: number | Ped, anim: string, p2: string, p3: string, p4: string, p5: number, vehicle: number | Vehicle, p7: number, p8: number): void;
/**
 * Hash: 0x7AFE8FDC10BC07D2 | ApiSet: undefined
 */
export declare function taskSweepAimPosition(p0: any, p5: any, p6: number, p7: number, p8: number, p9: number, p10: number): [any, any, any, any];
/**
 * Used in am_vehicle_spawn.ysc and am_mp_submarine.ysc.
 * p0 is always 0, p5 is always 1
 * p1 is the vehicle handle of the submarine. Submarine must have a driver, but the ped handle is not passed to the native.
 * Speed can be set by calling SET_DRIVE_TASK_CRUISE_SPEED after
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xC22B40579A498CA4 | ApiSet: undefined
 */
export declare function taskSubmarineGotoAndStop(p0: any, submarine: number | Vehicle, position: Vector3, p5: any): void;
/**
 * Hash: 0xA21C51255B205245 | ApiSet: undefined
 */
export declare function taskSwapWeapon(ped: number | Ped, p1: boolean): void;
/**
 * ```
 * used in sequence task
 * both parameters seems to be always 0
 * ```
 * Hash: 0xAC96609B9995EDF8 | ApiSet: undefined
 */
export declare function taskToggleDuck(p0: boolean, p1: boolean): void;
/**
 * ```
 * `TASK::TASK_SYNCHRONIZED_SCENE(ped, scene, "creatures@rottweiler@in_vehicle@std_car", "get_in", 1000.0, -8.0, 4, 0, 0x447a0000, 0);`
 * ```
 * Hash: 0xEEA929141F699854 | ApiSet: undefined
 */
export declare function taskSynchronizedScene(ped: number | Ped, scene: number, animDictionary: string, animationName: string, speed: number, speedMultiplier: number, duration: number, flag: number, playbackRate: number, p9: any): void;
/**
 * ```
 * Actually has 3 params, not 2.
 * p0: Ped
 * p1: int (or bool?)
 * p2: int
 * ```
 * ```
 * NativeDB Added Parameter 3: Any p2
 * ```
 * Hash: 0xBD2A8EC3AF4DE7DB | ApiSet: undefined
 */
export declare function taskUseMobilePhone(ped: number | Ped, p1: number): void;
/**
 * ```
 * In every case of this native, I've only seen the first parameter passed as 0, although I believe it's a Ped after seeing tasks around it using 0. That's because it's used in a Sequence Task.
 * The last 3 parameters are definitely coordinates after seeing them passed in other scripts, and even being used straight from the player's coordinates.
 * ---
 * It seems that - in the decompiled scripts - this native was used on a ped who was in a vehicle to throw a projectile out the window at the player. This is something any ped will naturally do if they have a throwable and they are doing driveby-combat (although not very accurately).
 * It is possible, however, that this is how SWAT throws smoke grenades at the player when in cover.
 * ----------------------------------------------------
 * The first comment is right it definately is the ped as if you look in script finale_heist2b.c line 59628 in Xbox Scripts atleast you will see task_throw_projectile and the first param is Local_559[2 <14>] if you look above it a little bit line 59622 give_weapon_to_ped uses the same exact param Local_559[2 <14>] and we all know the first param of that native is ped. So it guaranteed has to be ped. 0 just may mean to use your ped by default for some reason.
 * ```
 * ```
 * NativeDB Added Parameter 5: Any p4
 * NativeDB Added Parameter 6: Any p5
 * ```
 * Hash: 0x7285951DBF6B5A51 | ApiSet: undefined
 */
export declare function taskThrowProjectile(ped: number | Ped, position: Vector3): void;
/**
 * ```
 * duration in milliseconds
 * ```
 * Hash: 0x1DDA930A0AC38571 | ApiSet: undefined
 */
export declare function taskTurnPedToFaceCoord(ped: number | Ped, position: Vector3, duration: number): void;
/**
 * ```
 * duration: the amount of time in milliseconds to do the task. -1 will keep the task going until either another task is applied, or CLEAR_ALL_TASKS() is called with the ped
 * ```
 * Hash: 0x5AD23D40115353AC | ApiSet: undefined
 */
export declare function taskTurnPedToFaceEntity(ped: number | Ped, entity: number | Entity, duration: number): void;
/**
 * Hash: 0x9FDA1B3D7E7028B3 | ApiSet: undefined
 */
export declare function taskUseNearestScenarioChainToCoord(p0: any, p1: number, p2: number, p3: number, p4: number, p5: any): void;
/**
 * Hash: 0x5EE02954A14C69DB | ApiSet: undefined
 */
export declare function taskUseMobilePhoneTimed(ped: number | Ped, duration: number): void;
/**
 * ```
 * Updated variables
 * `An alternative to TASK::TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP. Makes the ped walk to the scenario instead.`
 * ```
 * Hash: 0x277F471BA9DB000B | ApiSet: undefined
 */
export declare function taskUseNearestScenarioToCoord(ped: number | Ped, position: Vector3, distance: number, duration: number): void;
/**
 * Hash: 0x97A28E63F0BA5631 | ApiSet: undefined
 */
export declare function taskUseNearestScenarioChainToCoordWarp(p0: any, p1: number, p2: number, p3: number, p4: number, p5: any): void;
/**
 * Hash: 0xE41885592B08B097 | ApiSet: undefined
 */
export declare function taskVehicleAimAtPed(ped: number | Ped, target: number | Ped): void;
/**
 * Hash: 0x447C1E9EF844BC0F | ApiSet: undefined
 */
export declare function taskVehicleAimAtCoord(ped: number | Ped, position: Vector3): void;
/**
 * Hash: 0x58E2E0F23F6B76C3 | ApiSet: undefined
 */
export declare function taskUseNearestScenarioToCoordWarp(ped: number | Ped, position: Vector3, radius: number, p5: any): void;
/**
 * Drive randomly with no destination set.
 * Hash: 0x480142959D337D00 | ApiSet: undefined
 */
export declare function taskVehicleDriveWander(ped: number | Ped, vehicle: number | Vehicle, speed: number, drivingStyle: number): void;
/**
 * ```
 * chases targetEnt fast and aggressively
 * --
 * Makes ped (needs to be in vehicle) chase targetEnt.
 * ```
 * Hash: 0x3C08A8E30363B353 | ApiSet: undefined
 */
export declare function taskVehicleChase(driver: number | Ped, targetEnt: number | Entity): void;
/**
 * ```
 * info about driving modes: HTTP://gtaforums.com/topic/822314-guide-driving-styles/
 * ---------------------------------------------------------------
 * Passing P6 value as floating value didn't throw any errors, though unsure what is it exactly, looks like radius or something.
 * P10 though, it is mentioned as float, however, I used bool and set it to true, that too worked.
 * Here the e.g. code I used
 * Function.Call(Hash.TASK_VEHICLE_DRIVE_TO_COORD, Ped, Vehicle, Cor X, Cor Y, Cor Z, 30f, 1f, Vehicle.GetHashCode(), 16777216, 1f, true);
 * ```
 * Hash: 0xE2A2AA2F659D77A7 | ApiSet: undefined
 */
export declare function taskVehicleDriveToCoord(ped: number | Ped, vehicle: number | Vehicle, position: Vector3, speed: number, p6: any, vehicleModel: number | string, drivingMode: number, stopRange: number, p10: number): void;
/**
 * ```
 * Makes a ped in a vehicle follow an entity (ped, vehicle, etc.)
 * drivingStyle: http://gtaforums.com/topic/822314-guide-driving-styles/
 * ```
 * Hash: 0xFC545A9F0626E3B6 | ApiSet: undefined
 */
export declare function taskVehicleFollow(driver: number | Ped, vehicle: number | Vehicle, targetEntity: number | Entity, speed: number, drivingStyle: number, minDistance: number): void;
/**
 * ```
 * task_vehicle_follow_waypoint_recording(Ped p0, Vehicle p1, string p2, int p3, int p4, int p5, int p6, float.x p7, float.Y p8, float.Z p9, bool p10, int p11)
 * p2 = Waypoint recording string (found in update\update.rpf\x64\levels\gta5\waypointrec.rpf
 * p3 = 786468
 * p4 = 0
 * p5 = 16
 * p6 = -1 (angle?)
 * p7/8/9 = usually v3.zero
 * p10 = bool (repeat?)
 * p11 = 1073741824
 * -khorio
 * ```
 * Hash: 0x3123FAA6DB1CF7ED | ApiSet: undefined
 */
export declare function taskVehicleFollowWaypointRecording(ped: number | Ped, vehicle: number | Vehicle, WPRecording: string, p3: number, p4: number, p5: number, p6: number, p7: number, p8: boolean, p9: number): void;
/**
 * ```
 * Makes a ped follow the targetVehicle with <minDistance> in between.
 * note: minDistance is ignored if drivingstyle is avoiding traffic, but Rushed is fine.
 * Mode: The mode defines the relative position to the targetVehicle. The ped will try to position its vehicle there.
 * -1 = behind
 * 0 = ahead
 * 1 = left
 * 2 = right
 * 3 = back left
 * 4 = back right
 * if the target is closer than noRoadsDistance, the driver will ignore pathing/roads and follow you directly.
 * Driving Styles guide: gtaforums.com/topic/822314-guide-driving-styles/
 * ```
 * Hash: 0x0FA6E4B75F302400 | ApiSet: undefined
 */
export declare function taskVehicleEscort(ped: number | Ped, vehicle: number | Vehicle, targetVehicle: number | Vehicle, mode: number, speed: number, drivingStyle: number, minDistance: number, p7: number, noRoadsDistance: number): void;
/**
 * You can let your character drive to the destination at the speed and driving style you set. You can use map marks to set the destination.
 * ```cpp
 * enum eDriveBehaviorFlags {
 * DF_StopForCars = 1,
 * DF_StopForPeds = 2,
 * DF_SwerveAroundAllCars = 4,
 * DF_SteerAroundStationaryCars = 8,
 * DF_SteerAroundPeds = 16,
 * DF_SteerAroundObjects = 32,
 * DF_DontSteerAroundPlayerPed = 64,
 * DF_StopAtLights = 128,
 * DF_GoOffRoadWhenAvoiding = 256,
 * DF_DriveIntoOncomingTraffic = 512,
 * DF_DriveInReverse = 1024,
 * DF_UseWanderFallbackInsteadOfStraightLine = 2048,
 * DF_AvoidRestrictedAreas = 4096,
 * DF_PreventBackgroundPathfinding = 8192, // **These only work on MISSION_CRUISE**
 * DF_AdjustCruiseSpeedBasedOnRoadSpeed = 16384,
 * DF_UseShortCutLinks = 262144,
 * DF_ChangeLanesAroundObstructions = 524288,
 * DF_UseSwitchedOffNodes = 2097152,	//cruise tasks ignore this anyway--only used for goto's
 * DF_PreferNavmeshRoute = 4194304,	//if you're going to be primarily driving off road
 * DF_PlaneTaxiMode = 8388608, // Only works for planes using MISSION_GOTO, will cause them to drive along the ground instead of fly
 * DF_ForceStraightLine = 16777216,
 * DF_UseStringPullingAtJunctions = 33554432,
 * DF_AvoidHighways = 536870912,
 * DF_ForceJoinInRoadDirection = 1073741824
 * }
 * ```
 * Hash: 0x158BB33F920D360C | ApiSet: undefined
 */
export declare function taskVehicleDriveToCoordLongrange(ped: number | Ped, vehicle: number | Vehicle, position: Vector3, speed: number, drivingStyle: number, stopRange: number): void;
/**
 * All parameters except ped, vehicle, vehicleTarget and speed are optional; with `missionType` being only those that require a target entity.
 * If you don't want to use a parameter; pass `0` for int parameters, and `-1.0f` for the remaining float parameters.
 * ```cpp
 * enum eVehicleMissionType
 * {
 * None = 0,
 * Cruise = 1,
 * Ram = 2,
 * Block = 3,
 * GoTo = 4,
 * Stop = 5,
 * Attack = 6,
 * Follow = 7,
 * Flee = 8,
 * Circle = 9,
 * Escort = 12,
 * GoToRacing = 14,
 * FollowRecording = 15,
 * PoliceBehaviour = 16,
 * Land = 19,
 * LandAndWait = 20,
 * Crash = 21,
 * PullOver = 22,
 * HeliProtect = 23
 * }
 * ```
 * Hash: 0x659427E0EF36BCDE | ApiSet: undefined
 */
export declare function taskVehicleMission(ped: number | Ped, vehicle: number | Vehicle, vehicleTarget: number | Vehicle, missionType: number, speed: number, drivingStyle: number, radius: number, straightLineDist: number, DriveAgainstTraffic: boolean): void;
/**
 * ```
 * pilot, vehicle and altitude are rather self-explanatory.
 * p4: is unused variable in the function.
 * entityToFollow: you can provide a Vehicle entity or a Ped entity, the heli will protect them.
 * 'targetSpeed':  The pilot will dip the nose AS MUCH AS POSSIBLE so as to reach this value AS FAST AS POSSIBLE.  As such, you'll want to modulate it as opposed to calling it via a hard-wired, constant #.
 * 'radius' isn't just "stop within radius of X of target" like with ground vehicles.  In this case, the pilot will fly an entire circle around 'radius' and continue to do so.
 * NOT CONFIRMED:  p7 appears to be a FlyingStyle enum.  Still investigating it as of this writing, but playing around with values here appears to result in different -behavior- as opposed to offsetting coordinates, altitude, target speed, etc.
 * NOTE: If the pilot finds enemies, it will engage them until it kills them, but will return to protect the ped/vehicle given shortly thereafter.
 * ```
 * Hash: 0x1E09C32048FEFD1C | ApiSet: undefined
 */
export declare function taskVehicleHeliProtect(pilot: number | Ped, vehicle: number | Vehicle, entityToFollow: number | Entity, targetSpeed: number, p4: number, radius: number, altitude: number, p7: number): void;
/**
 * ```
 * Differs from TASK_VEHICLE_DRIVE_TO_COORDS in that it will pick the shortest possible road route without taking one-way streets and other "road laws" into consideration.
 * WARNING:
 * A behaviorFlag value of 0 will result in a clunky, stupid driver!
 * Recommended settings:
 * speed = 30.0f,
 * behaviorFlag = 156,
 * stoppingRange = 5.0f;
 * If you simply want to have your driver move to a fixed location, call it only once, or, when necessary in the event of interruption.
 * If using this to continually follow a Ped who is on foot:  You will need to run this in a tick loop.  Call it in with the Ped's updated coordinates every 20 ticks or so and you will have one hell of a smart, fast-reacting NPC driver -- provided he doesn't get stuck.  If your update frequency is too fast, the Ped may not have enough time to figure his way out of being stuck, and thus, remain stuck.  One way around this would be to implement an "anti-stuck" mechanism, which allows the driver to realize he's stuck, temporarily pause the tick, unstuck, then resume the tick.
 * EDIT:  This is being discussed in more detail at http://gtaforums.com/topic/818504-any-idea-on-how-to-make-peds-clever-and-insanely-fast-c/
 * ```
 * Hash: 0x195AEEB13CEFE2EE | ApiSet: undefined
 */
export declare function taskVehicleGotoNavmesh(ped: number | Ped, vehicle: number | Vehicle, position: Vector3, speed: number, behaviorFlag: number, stoppingRange: number): void;
/**
 * ```
 * Modes:
 * 0 - ignore heading
 * 1 - park forward
 * 2 - park backwards
 * Depending on the angle of approach, the vehicle can park at the specified heading or at its exact opposite (-180) angle.
 * Radius seems to define how close the vehicle has to be -after parking- to the position for this task considered completed. If the value is too small, the vehicle will try to park again until it's exactly where it should be. 20.0 Works well but lower values don't, like the radius is measured in centimeters or something.
 * ```
 * Hash: 0x0F3E34E968EA374E | ApiSet: undefined
 */
export declare function taskVehiclePark(ped: number | Ped, vehicle: number | Vehicle, position: Vector3, heading: number, mode: number, radius: number, keepEngineOn: boolean): void;
/**
 * All parameters except ped, vehicle, pedTarget and speed are optional; with `missionType` being only those that require a target entity.
 * If you don't want to use a parameter; pass `0` for int parameters, and `-1.0f` for the remaining float parameters.
 * Hash: 0x9454528DF15D657A | ApiSet: undefined
 */
export declare function taskVehicleMissionPedTarget(ped: number | Ped, vehicle: number | Vehicle, pedTarget: number | Ped, missionType: number, speed: number, drivingStyle: number, radius: number, straightLineDist: number, DriveAgainstTraffic: boolean): void;
/**
 * All parameters except ped, vehicle, x, y, z and speed are optional; with `missionType` being only those that don't require a target entity.
 * If you don't want to use a parameter; pass `0` for int parameters, and `-1.0f` for the remaining float parameters.
 * Hash: 0xF0AF20AA7731F8C3 | ApiSet: undefined
 */
export declare function taskVehicleMissionCoorsTarget(ped: number | Ped, vehicle: number | Vehicle, position: Vector3, missionType: number, speed: number, drivingStyle: number, radius: number, straightLineDist: number, DriveAgainstTraffic: boolean): void;
/**
 * Hash: 0x5190796ED39C9B6D | ApiSet: undefined
 */
export declare function taskVehicleShootAtCoord(ped: number | Ped, position: Vector3, p4: number): void;
/**
 * ```
 * Most probably plays a specific animation on vehicle. For example getting chop out of van etc...
 * Here's how its used -
 * `TASK::TASK_VEHICLE_PLAY_ANIM(l_325, "rcmnigel1b", "idle_speedo");`
 * `TASK::TASK_VEHICLE_PLAY_ANIM(l_556[0\/\*1\*\/], "missfra0_chop_drhome", "InCar_GetOutofBack_Speedo");`
 * FYI : Speedo is the name of van in which chop was put in the mission.
 * ```
 * Hash: 0x69F5C3BD0F3EBD89 | ApiSet: undefined
 */
export declare function taskVehiclePlayAnim(vehicle: number | Vehicle, animationSet: string, animationName: string): void;
/**
 * ```
 * Makes ped walk around the area.
 * set p1 to 10.0f and p2 to 10 if you want the ped to walk anywhere without a duration.
 * ```
 * Hash: 0xBB9CE077274F6A1B | ApiSet: undefined
 */
export declare function taskWanderStandard(ped: number | Ped, p1: number, p2: number): void;
/**
 * Gives the vehicle a temporary action.
 * **Note**: For migrating objects, a `CScriptEntityStateChangeEvent` will be sent over the network to let other clients know that this object is being given a temporary action. At the same time, temporary actions cannot be applied to clones/remote objects.
 * ```cpp
 * enum eTempAction {
 * TA_NONE = 0,
 * TA_WAIT = 1,
 * TA_UNUSED = 2,
 * TA_BRAKE_REVERSE = 3,
 * TA_HANDBRAKE_TURN_LEFT = 4,
 * TA_HANDBRAKE_TURN_RIGHT = 5,
 * TA_HANDBRAKE_UNTIL_TIME_ENDS = 6,
 * TA_TURN_LEFT = 7,
 * TA_TURN_RIGHT = 8,
 * TA_ACCELERATE = 9,
 * TA_TURN_LEFT = 10,
 * TA_TURN_RIGHT = 11,
 * TA_UNUSED_12 = 12,
 * TA_TURN_LEFT_GO_REVERSE = 13,
 * TA_TURN_RIGHT_GO_REVERSE = 14,
 * TA_PLANE_FLY_UP = 15, // (crashes game if not in plane)
 * TA_PLANE_FLY_STRAIGHT = 16, // (crashes game if not in plane)
 * TA_PLANE_SHARP_LEFT = 17, // (crashes game if not in plane)
 * TA_PLANE_SHARP_RIGHT = 18, // (crashes game if not in plane)
 * TA_STRONG_BRAKE = 19,
 * TA_TURN_LEFT_AND_STOP = 20,
 * TA_TURN_RIGHT_AND_STOP = 21,
 * TA_GO_IN_REVERSE = 22,
 * TA_ACCELERATE_FAST = 23,
 * TA_BRAKE_ACTION = 24,
 * TA_HANDBRAKE_TURN_LEFT_MORE = 25,
 * TA_HANDBRAKE_TURN_RIGHT_MORE = 26,
 * TA_HANDBRAKE_BRAKE_STRAIGHT = 27,
 * TA_BRAKE_STRONG_REVERSE_ACCELERATION = 28,
 * TA_UNUSED_29 = 29,
 * TA_PERFORMS_BURNOUT = 30,
 * TA_REV_ENGINE = 31,
 * TA_ACCELERATE_VERY_STRONG = 32,
 * TA_SURFACE_IN_SUBMARINE = 33
 * };
 * ```
 * Hash: 0xC429DCEEB339E129 | ApiSet: undefined
 */
export declare function taskVehicleTempAction(driver: number | Ped, vehicle: number | Vehicle, action: number, time: number): void;
/**
 * Hash: 0x10AB107B887214D8 | ApiSet: undefined
 */
export declare function taskVehicleShootAtPed(ped: number | Ped, target: number | Ped, p2: number): void;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Warp a ped into a vehicle.
 * **Note**: It's better to use [`TASK_ENTER_VEHICLE`](#\_0xC20E50AA46D09CA8) with the flag "warp" flag instead of this native.
 * Hash: 0x9A7D091411C5F684 | ApiSet: undefined
 */
export declare function taskWarpPedIntoVehicle(ped: number | Ped, vehicle: number | Vehicle, seatIndex: number): void;
/**
 * This task warps a ped directly into a cover position closest to the specified point. This can be used to quickly place peds in strategic positions during gameplay.
 * ```
 * NativeDB Introduced: 2545
 * ```
 * Hash: 0x6E01E9E8D89F8276 | ApiSet: undefined
 */
export declare function taskWarpPedDirectlyIntoCover(ped: number | Ped, time: number, canPeekAndAim: boolean, forceInitialFacingDirection: boolean, forceFaceLeft: boolean, coverIndex: number): void;
/**
 * Makes a ped wander/patrol around the specified area.
 * The ped will continue to wander after getting distracted, but only if this additional task is temporary, ie. killing a target, after killing the target it will continue to wander around.
 * Use `GetIsTaskActive(ped, 222)` to check if the ped is still wandering the area.
 * Hash: 0xE054346CA3A0F315 | ApiSet: undefined
 */
export declare function taskWanderInArea(ped: number | Ped, position: Vector3, radius: number, minimalLength: number, timeBetweenWalks: number): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x6919A2F136426098 | ApiSet: undefined
 */
export declare function taskWanderSpecific(p0: any, p1: any, p2: any, p3: any): void;
/**
 * Hash: 0x67406F2C8F87FC4F | ApiSet: undefined
 */
export declare function uncuffPed(ped: number | Ped): void;
/**
 * Hash: 0xA98FCAFD7893C834 | ApiSet: undefined
 */
export declare function updateTaskHandsUpDuration(ped: number | Ped, duration: number): void;
/**
 * Hash: 0x9724FB59A3E72AD0 | ApiSet: undefined
 */
export declare function updateTaskAimGunScriptedTarget(p0: number | Ped, p1: number | Ped, p2: number, p3: number, p4: number, p5: boolean): void;
/**
 * ```
 * NativeDB Added Parameter 5: Any p4
 * NativeDB Added Parameter 6: Any p5
 * ```
 * Hash: 0xCDDC2B77CE54AC6E | ApiSet: undefined
 */
export declare function taskWrithe(ped: number | Ped, target: number | Ped, time: number, p3: number): void;
/**
 * Hash: 0xBB106883F5201FC4 | ApiSet: undefined
 */
export declare function updateTaskSweepAimPosition(p0: any, p1: number, p2: number, p3: number): void;
/**
 * Hash: 0xE4973DBDBE6E44B3 | ApiSet: undefined
 */
export declare function updateTaskSweepAimEntity(ped: number | Ped, entity: number | Entity): void;
/**
 * Hash: 0x8A4E6AC373666BC5 | ApiSet: undefined
 */
export declare function vehicleWaypointPlaybackPause(vehicle: number | Vehicle): void;
/**
 * Hash: 0x121F0593E0A431D7 | ApiSet: undefined
 */
export declare function vehicleWaypointPlaybackOverrideSpeed(vehicle: number | Vehicle, speed: number): void;
/**
 * Hash: 0x5A353B8E6B1095B5 | ApiSet: undefined
 */
export declare function useWaypointRecordingAsAssistedMovementRoute(name: string, p1: boolean, p2: number, p3: number): void;
/**
 * Hash: 0x7D7D2B47FA788E85 | ApiSet: undefined
 */
export declare function waypointPlaybackOverrideSpeed(p0: any, p1: number, p2: boolean): void;
/**
 * Hash: 0xDC04FCAA7839D492 | ApiSet: undefined
 */
export declare function vehicleWaypointPlaybackResume(vehicle: number | Vehicle): void;
/**
 * Hash: 0x5CEB25A7D2848963 | ApiSet: undefined
 */
export declare function vehicleWaypointPlaybackUseDefaultSpeed(vehicle: number | Vehicle): void;
/**
 * Hash: 0x701375A7D43F01CB | ApiSet: undefined
 */
export declare function waypointPlaybackGetIsPaused(p0: any): boolean;
/**
 * Hash: 0x244F70C84C547D2D | ApiSet: undefined
 */
export declare function waypointPlaybackResume(p0: any, p1: boolean, p2: any, p3: any): void;
/**
 * Hash: 0x057A25CFCC9DB671 | ApiSet: undefined
 */
export declare function waypointPlaybackStartShootingAtCoord(p0: any, p1: number, p2: number, p3: number, p4: boolean, p5: any): void;
/**
 * Hash: 0x0F342546AA06FED5 | ApiSet: undefined
 */
export declare function waypointPlaybackPause(p0: any, p1: boolean, p2: boolean): void;
/**
 * Hash: 0x6599D834B12D0800 | ApiSet: undefined
 */
export declare function waypointPlaybackUseDefaultSpeed(p0: any): void;
/**
 * Hash: 0x20E330937C399D29 | ApiSet: undefined
 */
export declare function waypointPlaybackStartAimingAtPed(p0: any, p1: any, p2: boolean): void;
/**
 * Hash: 0x8968400D900ED8B3 | ApiSet: undefined
 */
export declare function waypointPlaybackStartAimingAtCoord(p0: any, p1: number, p2: number, p3: number, p4: boolean): void;
/**
 * ```
 * For a full list of the points, see here: goo.gl/wIH0vn
 * ```
 * Hash: 0xB629A298081F876F | ApiSet: undefined
 */
export declare function waypointRecordingGetClosestWaypoint(name: string, position: Vector3): [boolean, number];
/**
 * ```
 * For a full list of the points, see here: goo.gl/wIH0vn
 * ```
 * Hash: 0x5343532C01A07234 | ApiSet: undefined
 */
export declare function waypointRecordingGetNumPoints(name: string): [boolean, number];
/**
 * Hash: 0x47EFA040EBB8E2EA | ApiSet: undefined
 */
export declare function waypointPlaybackStopAimingOrShooting(p0: any): void;
/**
 * Hash: 0xE70BA7B90F8390DC | ApiSet: undefined
 */
export declare function waypointPlaybackStartShootingAtPed(p0: any, p1: any, p2: boolean, p3: any): void;
/**
 * Hash: 0x005622AEBC33ACA9 | ApiSet: undefined
 */
export declare function waypointRecordingGetSpeedAtPoint(name: string, point: number): number;
/**
 * ```
 * For a full list of the points, see here: goo.gl/wIH0vn
 * ```
 * Hash: 0x2FB897405C90B361 | ApiSet: undefined
 */
export declare function waypointRecordingGetCoord(name: string, point: number): [boolean, Vector3];
/**
 * Hash: 0x2CE544C68FB812A0 | ApiSet: undefined
 */
export declare function addRoadNodeSpeedZone(position: Vector3, radius: number, speed: number, p5: boolean): number;
/**
 * Hash: 0x54B0F614960F4A5F | ApiSet: undefined
 */
export declare function addVehicleCombatAngledAvoidanceArea(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): any;
/**
 * This native it's a debug native. Won't do anything.
 * Hash: 0xB264C4D2F2B0A78B | ApiSet: undefined
 */
export declare function allowAmbientVehiclesToAvoidAdverseConditions(vehicle: number | Vehicle): void;
/**
 * Hash: 0x99AD4CCCB128CBC9 | ApiSet: undefined
 */
export declare function addVehiclePhoneExplosiveDevice(vehicle: number | Vehicle): void;
/**
 * Hash: 0x2FA9923062DD396C | ApiSet: undefined
 */
export declare function addVehicleStuckCheckWithWarp(p0: any, p1: number, p2: any, p3: boolean, p4: boolean, p5: boolean, p6: any): void;
/**
 * ```
 * Returns false if every seat is occupied.
 * ```
 * Hash: 0x2D34FC3BC4ADB780 | ApiSet: undefined
 */
export declare function areAnyVehicleSeatsFree(vehicle: number | Vehicle): boolean;
/**
 * ```
 * Appears to return false if any window is broken.
 * ```
 * Hash: 0x11D862A3E977A9EF | ApiSet: undefined
 */
export declare function areAllVehicleWindowsIntact(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0xB72E26D81006005B | ApiSet: undefined
 */
export declare function addVehicleUpsidedownCheck(vehicle: number | Vehicle): void;
/**
 * Returns true when the bomb bay doors of this plane are open. False if they're closed.
 * Hash: 0xD0917A423314BBA8 | ApiSet: undefined
 */
export declare function areBombBayDoorsOpen(aircraft: number | Vehicle): boolean;
/**
 * Hash: 0x5991A01434CE9677 | ApiSet: undefined
 */
export declare function arePlaneWingsIntact(plane: number | Vehicle): boolean;
/**
 * Only used with the "akula" in the decompiled native scripts.
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xAEF12960FA943792 | ApiSet: undefined
 */
export declare function areHeliStubWingsDeployed(vehicle: number | Vehicle): boolean;
/**
 * Returns whether the outrigger legs are deployed for the vehicle.
 * The Chernobog is one of the few vehicles with outrigger legs.
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x3A9128352EAC9E85 | ApiSet: undefined
 */
export declare function areOutriggerLegsDeployed(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0xA1DD82F3CCF9A01E | ApiSet: undefined
 */
export declare function attachEntityToCargobob(vehicle: number | Vehicle, entity: number | Entity, p2: number, position: Vector3): void;
/**
 * Queries whether the control panels of a plane are intact. This native is used to determine the operational status of a plane's cockpit controls, which can affect the plane's flyability.
 * Hash: 0xF78F94D60248C737 | ApiSet: undefined
 */
export declare function arePlaneControlPanelsIntact(vehicle: number | Vehicle, checkForZeroHealth: boolean): boolean;
/**
 * Hash: 0x6A98C2ECF57FA5D4 | ApiSet: undefined
 */
export declare function attachContainerToHandlerFrame(handler: number | Vehicle, container: number | Entity): void;
/**
 * Hash: 0x755D6D5267CBBD7E | ApiSet: undefined
 */
export declare function arePlanePropellersIntact(plane: number | Vehicle): boolean;
/**
 * Hash: 0x4127F1D84E347769 | ApiSet: undefined
 */
export declare function attachVehicleToCargobob(cargobob: number | Vehicle, vehicle: number | Vehicle, vehicleBoneIndex: number, position: Vector3): void;
/**
 * This native makes the vehicle stop immediately, as it happens when we enter a multiplayer garage.
 * Hash: 0x260BE8F09E326A20 | ApiSet: undefined
 */
export declare function bringVehicleToHalt(vehicle: number | Vehicle, distance: number, duration: number, bControlVerticalVelocity: boolean): void;
/**
 * ```
 * HookOffset defines where the hook is attached. leave at 0 for default attachment.
 * ```
 * Hash: 0x29A16F8D621C4508 | ApiSet: undefined
 */
export declare function attachVehicleToTowTruck(towTruck: number | Vehicle, vehicle: number | Vehicle, rear: boolean, hookOffsetX: number, hookOffsetY: number, hookOffsetZ: number): void;
/**
 * Hash: 0x16B5E274BDE402F8 | ApiSet: undefined
 */
export declare function attachVehicleOnToTrailer(vehicle: number | Vehicle, trailer: number | Vehicle, offsetX: number, offsetY: number, offsetZ: number, coordsX: number, coordsY: number, coordsZ: number, rotationX: number, rotationY: number, rotationZ: number, disableColls: number): void;
/**
 * Determines whether the specified Cargobob can pick up a given entity.
 * Hash: 0x2C1D8B3B19E517CC | ApiSet: undefined
 */
export declare function canCargobobPickUpEntity(cargobob: number | Vehicle, entity: number | Entity): boolean;
/**
 * Hash: 0x3C7D42D58F770B54 | ApiSet: undefined
 */
export declare function attachVehicleToTrailer(vehicle: number | Vehicle, trailer: number | Vehicle, radius: number): void;
/**
 * ```
 * NativeDB Introduced: 3095
 * ```
 * Resets or clears the nitrous system for a specified vehicle. You can check if a vehicle has nitrous with [`IS_NITROUS_ACTIVE`](#\_0x491E822B2C464FE4)
 * Hash: 0xC889AE921400E1ED | ApiSet: undefined
 */
export declare function clearNitrous(vehicle: number | Vehicle): void;
/**
 * Checks if a boat can be anchored at its present position without possibly intersecting collision later.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x26C10ECBDA5D043B | ApiSet: undefined
 */
export declare function canAnchorBoatHere(boat: number | Vehicle): boolean;
/**
 * Checks if a boat can be anchored at its present position, ignoring any players standing on the boat.
 * ```
 * NativeDB Introduced: v678
 * ```
 * Hash: 0x24F4121D07579880 | ApiSet: undefined
 */
export declare function canAnchorBoatHereIgnorePlayers(boat: number | Vehicle): boolean;
/**
 * Hash: 0x30785D90C956BF35 | ApiSet: undefined
 */
export declare function canShuffleSeat(vehicle: number | Vehicle, seatIndex: number): boolean;
/**
 * Hash: 0x5FFBDEEC3E8E2009 | ApiSet: undefined
 */
export declare function clearVehicleCustomSecondaryColour(vehicle: number | Vehicle): void;
/**
 * Hash: 0x55E1D2758F34E437 | ApiSet: undefined
 */
export declare function clearVehicleCustomPrimaryColour(vehicle: number | Vehicle): void;
/**
 * Hash: 0xE01903C47C7AC89E | ApiSet: undefined
 */
export declare function clearLastDrivenVehicle(): void;
/**
 * Removes the cargen area of interest and resumes normal cargen spawning.
 * You can set the area of interest with [`SET_VEHICLE_GENERATOR_AREA_OF_INTEREST`](#\_0x9A75585FB2E54FAD)
 * Hash: 0x0A436B8643716D14 | ApiSet: undefined
 */
export declare function clearVehicleGeneratorAreaOfInterest(): void;
/**
 * ```
 * Works for vehicles with a retractable landing gear
 * landing gear states:
 * 0: Deployed
 * 1: Closing
 * 2: Opening
 * 3: Retracted
 * ```
 * Hash: 0xCFC8BE9A5E1FE575 | ApiSet: undefined
 */
export declare function controlLandingGear(vehicle: number | Vehicle, state: number): void;
/**
 * Hash: 0xAA3F739ABDDCF21F | ApiSet: undefined
 */
export declare function clearVehiclePhoneExplosiveDevice(): void;
/**
 * Copies sourceVehicle's damage (broken bumpers, broken lights, etc.) to targetVehicle.
 * Hash: 0xE44A982368A4AF23 | ApiSet: undefined
 */
export declare function copyVehicleDamages(sourceVehicle: number | Vehicle, targetVehicle: number | Vehicle): void;
/**
 * Hash: 0x3556041742A0DC74 | ApiSet: undefined
 */
export declare function closeBombBayDoors(vehicle: number | Vehicle): void;
/**
 * Train models must be [requested](#\_0x963D27A58DF860AC) before use. See trains.xml (located in `Grand Theft Auto V\update\update.rpf\common\data\levels\gta5\trains.xml`) for freight and metro variations.
 * Model names to request can be found by searching `model_name` in the file.
 * The `Lua` usage example provided down below has been provided in such way so users can test each and every train variation.
 * ### Newly added parameters (seen in 2372 build)
 * ```
 * NativeDB Added Parameter 6: BOOL isNetwork
 * NativeDB Added Parameter 7: BOOL netMissionEntity
 * ```
 * *   **isNetwork**: Whether to create a network object for the train. If false, the train exists only locally.
 * *   **netMissionEntity**: Whether to register the train as pinned to the script host in the R\* network model.
 * ### Train Models:
 * *   freight
 * ### Carriage Models:
 * *   freightcar
 * *   freightcar2 (Added v2372)
 * *   freightcont1
 * *   freightcont2
 * *   freightgrain
 * *   metrotrain
 * *   tankercar
 * ### Some train variations (default from trains.xml as of build 2372)
 * *   17. Very long train and freight variation.
 * *   18. Freight train only.
 * *   26. Double metro train (with both models flipped opposite to each other). This used to be `25` before the 2802 build, it also used to be `24` before the 2372 build.
 * Hash: 0x63C6CCA8E68AE8C8 | ApiSet: undefined
 */
export declare function createMissionTrain(variation: number, position: Vector3, direction: boolean): number;
/**
 * Hash: 0x6D6AF961B72728AE | ApiSet: undefined
 */
export declare function clearVehicleRouteHistory(vehicle: number | Vehicle): void;
/**
 * Removes a scripted vehicle generator.
 * Hash: 0x22102C9ABFCF125D | ApiSet: undefined
 */
export declare function deleteScriptVehicleGenerator(vehicleGenerator: number): void;
/**
 * Creates a vehicle with the specified model at the specified position. This vehicle will initially be owned by the creating
 * script as a mission entity, and the model should be loaded already (e.g. using REQUEST_MODEL).
 * ```
 * NativeDB Added Parameter 8: BOOL p7
 * ```
 * Hash: 0xAF35D0D2583051B0 | ApiSet: undefined
 */
export declare function createVehicle(modelHash: number | string, position: Vector3, heading: number, isNetwork: boolean, netMissionEntity: boolean): number;
/**
 * ```
 * Creates a script vehicle generator at the given coordinates. Most parameters after the model hash are unknown.
 * Parameters:
 * a/w/s - Generator position
 * heading - Generator heading
 * p4 - Unknown (always 5.0)
 * p5 - Unknown (always 3.0)
 * modelHash - Vehicle model hash
 * p7/8/9/10 - Unknown (always -1)
 * p11 - Unknown (usually TRUE, only one instance of FALSE)
 * p12/13 - Unknown (always FALSE)
 * p14 - Unknown (usally FALSE, only two instances of TRUE)
 * p15 - Unknown (always TRUE)
 * p16 - Unknown (always -1)
 * Vector3 coords = GET_ENTITY_COORDS(PLAYER_PED_ID(), 0);	CREATE_SCRIPT_VEHICLE_GENERATOR(coords.x, coords.y, coords.z, 1.0f, 5.0f, 3.0f, GET_HASH_KEY("adder"), -1. -1, -1, -1, -1, true, false, false, false, true, -1);
 * ```
 * Hash: 0x9DEF883114668116 | ApiSet: undefined
 */
export declare function createScriptVehicleGenerator(position: Vector3, heading: number, p4: number, p5: number, modelHash: number | string, p7: number, p8: number, p9: number, p10: number, p11: boolean, p12: boolean, p13: boolean, p14: boolean, p15: boolean, p16: number): number;
/**
 * Drops the Hook/Magnet on a cargobob
 * ```cpp
 * enum eCargobobHook
 * {
 * CARGOBOB_HOOK = 0,
 * CARGOBOB_MAGNET = 1,
 * };
 * ```
 * Hash: 0x7BEB0C7A235F6F3B | ApiSet: undefined
 */
export declare function createPickUpRopeForCargobob(cargobob: number | Vehicle, state: number): void;
/**
 * Detaches the specified entity currently being carried by a Cargobob.
 * Hash: 0xAF03011701811146 | ApiSet: undefined
 */
export declare function detachEntityFromCargobob(vehicle: number | Vehicle, entity: number | Entity): any;
/**
 * Used to delete mission trains created with [`CREATE_MISSION_TRAIN`](#\_0x63C6CCA8E68AE8C8).
 * Hash: 0x5B76B14AE875C795 | ApiSet: undefined
 */
export declare function deleteMissionTrain(vehicle: number | Vehicle): void;
/**
 * Hash: 0x736A718577F39C7D | ApiSet: undefined
 */
export declare function deleteAllTrains(): void;
/**
 * Hash: 0x0E21D3DF1051399D | ApiSet: undefined
 */
export declare function detachVehicleFromCargobob(cargobob: number | Vehicle, vehicle: number | Vehicle): void;
/**
 * Hash: 0x7C0043FDFF6436BC | ApiSet: undefined
 */
export declare function detachContainerFromHandlerFrame(vehicle: number | Vehicle): void;
/**
 * ```
 * Deletes a vehicle.
 * The vehicle must be a mission entity to delete, so call this before deleting: SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
 * eg how to use:
 * SET_ENTITY_AS_MISSION_ENTITY(vehicle, true, true);
 * DELETE_VEHICLE(&vehicle);
 * Deletes the specified vehicle, then sets the handle pointed to by the pointer to NULL.
 * ```
 * Hash: 0xEA386986E786A54F | ApiSet: undefined
 */
export declare function deleteVehicle(vehicle: number | Vehicle): void;
/**
 * Hash: 0xD0E9CE05A1E68CD8 | ApiSet: undefined
 */
export declare function detachVehicleFromAnyTowTruck(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0xADF7BE450512C12F | ApiSet: undefined
 */
export declare function detachVehicleFromAnyCargobob(vehicle: number | Vehicle): boolean;
/**
 * ```
 * First two parameters swapped. Scripts verify that towTruck is the first parameter, not the second.
 * ```
 * Hash: 0xC2DB6B6708350ED8 | ApiSet: undefined
 */
export declare function detachVehicleFromTowTruck(towTruck: number | Vehicle, vehicle: number | Vehicle): void;
/**
 * Hash: 0xEF49CF0270307CBE | ApiSet: undefined
 */
export declare function detonateVehiclePhoneExplosiveDevice(): void;
/**
 * Hash: 0x32CAEDF24A583345 | ApiSet: undefined
 */
export declare function disableVehicleTurretMovementThisFrame(vehicle: number | Vehicle): void;
/**
 * Hash: 0x90532EDF0D2BDD86 | ApiSet: undefined
 */
export declare function detachVehicleFromTrailer(vehicle: number | Vehicle): void;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x500873A45724C863 | ApiSet: undefined
 */
export declare function disableIndividualPlanePropeller(vehicle: number | Vehicle, propeller: number): void;
/**
 * Disables collision for this vehicle (maybe it also supports other entities, not sure).
 * Only world/building/fixed world objects will have their collisions disabled, props, peds, or any other entity still collides with the vehicle.
 * [Example video](https://streamable.com/6n45d5)
 * Not sure if there is a native (and if so, which one) that resets the collisions.
 * Hash: 0x75627043C6AA90AD | ApiSet: undefined
 */
export declare function disableVehicleWorldCollision(vehicle: number | Vehicle): void;
/**
 * ```
 * how does this work?
 * ```
 * Hash: 0xF4FC6A6F67D8D856 | ApiSet: undefined
 */
export declare function disableVehicleWeapon(disabled: boolean, weaponHash: number | string, vehicle: number | Vehicle, owner: number | Ped): void;
/**
 * ```
 * Returns true only when the hook is active, will return false if the magnet is active
 * ```
 * Hash: 0x1821D91AD4B56108 | ApiSet: undefined
 */
export declare function doesCargobobHavePickUpRope(cargobob: number | Vehicle): boolean;
/**
 * Hash: 0x23428FC53C60919C | ApiSet: undefined
 */
export declare function disablePlaneAileron(vehicle: number | Vehicle, p1: boolean, p2: boolean): void;
/**
 * ```
 * Checks via CVehicleModelInfo
 * ```
 * Hash: 0x1262D55792428154 | ApiSet: undefined
 */
export declare function doesExtraExist(vehicle: number | Vehicle, extraId: number): boolean;
/**
 * Hash: 0x83F813570FF519DE | ApiSet: undefined
 */
export declare function disableVehicleNeonLights(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0xF6086BC836400876 | ApiSet: undefined
 */
export declare function doesScriptVehicleGeneratorExist(vehicleGenerator: number): boolean;
/**
 * ```
 * Returns true if the vehicle has the FLAG_ALLOWS_RAPPEL flag set.
 * ```
 * Hash: 0x4E417C547182C84D | ApiSet: undefined
 */
export declare function doesVehicleAllowRappel(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x956B409B984D9BF7 | ApiSet: undefined
 */
export declare function doesVehicleExistWithDecorator(decorator: string): boolean;
/**
 * Determines whether the specified vehicle is equipped with a searchlight.
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x99015ED7DBEA5113 | ApiSet: undefined
 */
export declare function doesVehicleHaveSearchlight(vehicle: number | Vehicle): boolean;
/**
 * ```
 * Returns true only when the magnet is active, will return false if the hook is active
 * ```
 * Hash: 0x6E08BF5B3722BAC9 | ApiSet: undefined
 */
export declare function doesCargobobHavePickupMagnet(cargobob: number | Vehicle): boolean;
/**
 * Determines whether a specific vehicle is equipped with a roof.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x8AC862B0B32C5B80 | ApiSet: undefined
 */
export declare function doesVehicleHaveRoof(vehicle: number | Vehicle): boolean;
/**
 * ```
 * Checks if vehicle tyre at index exists. Also returns false if tyre was removed.
 * ```
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x534E36D4DB9ECC5D | ApiSet: undefined
 */
export declare function doesVehicleTyreExist(vehicle: number | Vehicle, tyreIndex: number): boolean;
/**
 * ```
 * Maximum amount of vehicles with vehicle stuck check appears to be 16.
 * ```
 * Hash: 0x57E4C39DE5EE8470 | ApiSet: undefined
 */
export declare function doesVehicleHaveStuckVehicleCheck(vehicle: number | Vehicle): boolean;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0xE43701C36CAFF1A4 | ApiSet: undefined
 */
export declare function doesVehicleHaveLandingGear(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0xE38CB9D7D39FDBCC | ApiSet: undefined
 */
export declare function ejectJb700Roof(vehicle: number | Vehicle, position: Vector3): void;
/**
 * Hash: 0x25ECB9F8017D98E0 | ApiSet: undefined
 */
export declare function doesVehicleHaveWeapons(vehicle: number | Vehicle): boolean;
/**
 * Enables individual propeller on a propeller plane. This native is the inverse of [`DISABLE_INDIVIDUAL_PLANE_PROPELLER`](#\_0x500873A45724C863).
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0xDC05D2777F855F44 | ApiSet: undefined
 */
export declare function enableIndividualPlanePropeller(plane: number | Vehicle, propeller: number): void;
/**
 * ```
 * Explodes a selected vehicle.
 * Vehicle vehicle = Vehicle you want to explode.
 * BOOL isAudible = If explosion makes a sound.
 * BOOL isInvisible = If the explosion is invisible or not.
 * First BOOL does not give any visual explosion, the vehicle just falls apart completely but slowly and starts to burn.
 * ```
 * Hash: 0xBA71116ADF5B514C | ApiSet: undefined
 */
export declare function explodeVehicle(vehicle: number | Vehicle, isAudible: boolean, isInvisible: boolean): void;
/**
 * ```
 * Often called after START_PLAYBACK_RECORDED_VEHICLE and SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE; similar in use to FORCE_ENTITY_AI_AND_ANIMATION_UPDATE.
 * ```
 * Hash: 0x1F2E4E06DEA8992B | ApiSet: undefined
 */
export declare function forcePlaybackRecordedVehicleUpdate(vehicle: number | Vehicle, p1: boolean): void;
/**
 * ```
 * Finds the vehicle that is carrying this entity with a handler frame.
 * The model of the entity must be prop_contr_03b_ld or the function will return 0.
 * ```
 * Hash: 0x375E7FC44F21C8AB | ApiSet: undefined
 */
export declare function findVehicleCarryingThisEntity(entity: number | Entity): number;
/**
 * Hash: 0x786A4EB67B01BF0B | ApiSet: undefined
 */
export declare function explodeVehicleInCutscene(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Native is significantly more complicated than simply generating a random vector & length.
 * `The 'point' is either 400.0 or 250.0 units away from the Ped's current coordinates; and paths into functions like rage::grcViewport\_\__IsSphereVisible.`
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x8DC9675797123522 | ApiSet: undefined
 */
export declare function findRandomPointInSpace(ped: number | Ped): Vector3;
/**
 * For FiveM, use [`GET_GAME_POOL`](#\_0x2B9D4F50).
 * Hash: 0x9B8E1BF04B51F2E8 | ApiSet: undefined
 */
export declare function getAllVehicles(): [number, number];
/**
 * See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
 * This function is coded to not work on vehicles of type: `CBike`, `Bmx`, `CBoat`, `CTrain`, and `CSubmarine`.
 * Hash: 0x772282EBEB95E682 | ApiSet: undefined
 */
export declare function fixVehicleWindow(vehicle: number | Vehicle, windowIndex: number): void;
/**
 * Forces a submarine to maintain neutral buoyancy for a specified duration, preventing it from rising when unoccupied or without a driver.
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0xC67DB108A9ADE3BE | ApiSet: undefined
 */
export declare function forceSubmarineNeurtalBuoyancy(submarine: number | Vehicle, time: number): void;
/**
 * Hash: 0x33506883545AC0DF | ApiSet: undefined
 */
export declare function forceSubmarineSurfaceMode(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * `Same call as VEHICLE::_0x0F3B4D4E43177236`
 * ```
 * Hash: 0xC1F981A6F74F0C23 | ApiSet: undefined
 */
export declare function getBoatBoomPositionRatio2(vehicle: number | Vehicle, p1: boolean): void;
/**
 * ```
 * Returns true if the vehicle has the FLAG_JUMPING_CAR flag set.
 * ```
 * Hash: 0x9078C0C5EF8C19E9 | ApiSet: undefined
 */
export declare function getCanVehicleJump(vehicle: number | Vehicle): boolean;
/**
 * ```
 * NativeDB Introduced: v3095
 * ```
 * Recharges the nitrous system of the specified vehicle to its maximum capacity. This action sets the nitrous charge duration to the maximum limit defined by previous settings applied through [`SET_OVERRIDE_NITROUS_LEVEL`](#\_0xC8E9B6B71B8E660D).
 * Hash: 0x1A2BCC8C636F9226 | ApiSet: undefined
 */
export declare function fullyChargeNitrous(vehicle: number | Vehicle): void;
/**
 * Hash: 0x6636C535F6CC2725 | ApiSet: undefined
 */
export declare function getBoatBoomPositionRatio(vehicle: number | Vehicle): number;
/**
 * ```
 * Example usage
 * `VEHICLE::GET_CLOSEST_VEHICLE(x, y, z, radius, hash, unknown leave at 70)`
 * x, y, z: Position to get closest vehicle to.
 * radius: Max radius to get a vehicle.
 * modelHash: Limit to vehicles with this model. 0 for any.
 * flags: The bitwise flags altering the function's behaviour.
 * Does not return police cars or helicopters.
 * It seems to return police cars for me, does not seem to return helicopters, planes or boats for some reason
 * Only returns non police cars and motorbikes with the flag set to 70 and modelHash to 0. ModelHash seems to always be 0 when not a modelHash in the scripts, as stated above.
 * These flags were found in the b617d scripts: 0,2,4,6,7,23,127,260,2146,2175,12294,16384,16386,20503,32768,67590,67711,98309,100359.
 * Converted to binary, each bit probably represents a flag as explained regarding another native here: gtaforums.com/topic/822314-guide-driving-styles
 * Conversion of found flags to binary: pastebin.com/kghNFkRi
 * At exactly 16384 which is 0100000000000000 in binary and 4000 in hexadecimal only planes are returned.
 * `It's probably more convenient to use worldGetAllVehicles(int *arr, int arrSize) and check the shortest distance yourself and sort if you want by checking the vehicle type with for example VEHICLE::IS_THIS_MODEL_A_BOAT`
 * -------------------------------------------------------------------------
 * Conclusion: This native is not worth trying to use. Use something like this instead: pastebin.com/xiFdXa7h
 * Use flag 127 to return police cars
 * ```
 * Hash: 0xF73EB622C4F1689B | ApiSet: undefined
 */
export declare function getClosestVehicle(position: Vector3, radius: number, modelHash: number | string, flags: number): number;
/**
 * Retrieves the agility for a specific boat model, including any vehicle mods. Unlike other vehicles where Rockstar Games typically assess performance based on traction, boats use agility as a measure. This static value is distinct from the traction metrics used for other vehicle types.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x5AA3F878A178C4FC | ApiSet: undefined
 */
export declare function getBoatVehicleModelAgility(modelHash: number | string): number;
/**
 * Hash: 0x0F3B4D4E43177236 | ApiSet: undefined
 */
export declare function getBoatBoomPositionRatio3(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Returns the convertible state of the specified vehicle.
 * ```cpp
 * enum eRoofState {
 * RAISED = 0,
 * LOWERING = 1,
 * LOWERED = 2,
 * RAISING = 3,
 * CLOSING_BOOT = 4,
 * ROOF_STUCK_RAISED = 5,
 * ROOF_STUCK_LOWERED = 6
 * }
 * ```
 * Hash: 0xF8C397922FC03F41 | ApiSet: undefined
 */
export declare function getConvertibleRoofState(vehicle: number | Vehicle): number;
/**
 * Gets the position of the cargobob hook, in world coords.
 * Hash: 0xCBDB9B923CACC92D | ApiSet: undefined
 */
export declare function getCargobobHookPosition(cargobob: number | Vehicle): Vector3;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x71AFB258CCED3A27 | ApiSet: undefined
 */
export declare function getDoesVehicleHaveTombstone(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x42BC05C27A946054 | ApiSet: undefined
 */
export declare function getCurrentPlaybackForVehicle(vehicle: number | Vehicle): number;
/**
 * Returns the display name/text label (`gameName` in `vehicles.meta`) for the specified vehicle model.
 * Hash: 0xB215AAC32D25D019 | ApiSet: undefined
 */
export declare function getDisplayNameFromVehicleModel(modelHash: number | string): string;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x2F5A72430E78C8D3 | ApiSet: undefined
 */
export declare function getDriftTyresEnabled(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x99093F60746708CA | ApiSet: undefined
 */
export declare function getEntityAttachedToCargobob(vehicle: number | Vehicle): number;
/**
 * Hash: 0xEFEA18DCF10F8F75 | ApiSet: undefined
 */
export declare function getEntityAttachedToTowTruck(towTruck: number | Vehicle): number;
/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 * Hash: 0xC0572928C0ABFDA3 | ApiSet: undefined
 */
export declare function getEntryPositionOfDoor(vehicle: number | Vehicle, doorIndex: number): Vector3;
/**
 * Hash: 0xDCA174A42133F08C | ApiSet: undefined
 */
export declare function getHasRetractableWheels(vehicle: number | Vehicle): boolean;
/**
 * ```
 * Max 1000.
 * At 0 the main rotor will stall.
 * ```
 * Hash: 0xE4CB7541F413D2C5 | ApiSet: undefined
 */
export declare function getHeliMainRotorHealth(vehicle: number | Vehicle): number;
/**
 * Hash: 0x36D782F68B309BDA | ApiSet: undefined
 */
export declare function getHasRocketBoost(vehicle: number | Vehicle): boolean;
/**
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xAE8CE82A4219AC8C | ApiSet: undefined
 */
export declare function getHeliTailRotorHealth(heli: number | Vehicle): number;
/**
 * ```
 * Max 1000.
 * At -100 both helicopter rotors will stall.
 * ```
 * Hash: 0xAC51915D27E4A5F7 | ApiSet: undefined
 */
export declare function getHeliTailBoomHealth(vehicle: number | Vehicle): number;
/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 * Hash: 0x645F4B6E8499F632 | ApiSet: undefined
 */
export declare function getIsDoorValid(vehicle: number | Vehicle, doorIndex: number): boolean;
/**
 * ```
 * From the driver's perspective, is the right headlight broken.
 * ```
 * Hash: 0xA7ECB73355EB2F20 | ApiSet: undefined
 */
export declare function getIsRightVehicleHeadlightDamaged(vehicle: number | Vehicle): boolean;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x0BB5CBDDD0F25AE3 | ApiSet: undefined
 */
export declare function getHydraulicWheelValue(vehicle: number | Vehicle, wheelId: number): number;
/**
 * Checks if the vehicle is electric.
 * ```
 * NativeDB Introduced: v3258
 * ```
 * Hash: 0x1FCB07FE230B6639 | ApiSet: undefined
 */
export declare function getIsVehicleElectric(vehicleModel: number | string): boolean;
/**
 * Checks whether the specified boat vehicle is capsized, meaning it has overturned or is upside down in the water.
 * Hash: 0xBA91D045575699AD | ApiSet: undefined
 */
export declare function getIsBoatCapsized(vehicle: number | Vehicle): boolean;
/**
 * ```
 * From the driver's perspective, is the left headlight broken.
 * ```
 * Hash: 0x5EF77C9ADD3B11A3 | ApiSet: undefined
 */
export declare function getIsLeftVehicleHeadlightDamaged(vehicle: number | Vehicle): boolean;
/**
 * ```
 * Returns true when in a vehicle, false whilst entering/exiting.
 * ```
 * Hash: 0xAE31E7DF9B5B132E | ApiSet: undefined
 */
export declare function getIsVehicleEngineRunning(vehicle: number | Vehicle): boolean;
/**
 * ```
 * Returns whether this vehicle is currently disabled by an EMP mine.
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x0506ED94363AD905 | ApiSet: undefined
 */
export declare function getIsVehicleEmpDisabled(vehicle: number | Vehicle): boolean;
/**
 * ```
 * Check if Vehicle Secondary is avaliable for customize
 * ```
 * Hash: 0x910A32E7AAD2656C | ApiSet: undefined
 */
export declare function getIsVehicleSecondaryColourCustom(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0xF095C0405307B21B | ApiSet: undefined
 */
export declare function getIsVehiclePrimaryColourCustom(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0xB2D06FAEDE65B577 | ApiSet: undefined
 */
export declare function getLastDrivenVehicle(): number;
/**
 * ```
 * Landing gear states:
 * 0: Deployed
 * 1: Closing (Retracting)
 * 3: Opening (Deploying)
 * 4: Retracted
 * 5: Broken
 * ```
 * Landing gear state 2 is never used.
 * Hash: 0x9B0F3DCA3DB0F4CD | ApiSet: undefined
 */
export declare function getLandingGearState(vehicle: number | Vehicle): number;
/**
 * ```
 * Second Param = LiveryIndex
 * example
 * `int count = VEHICLE::GET_VEHICLE_LIVERY_COUNT(veh);`
 * for (int i = 0; i < count; i++)
 * {
 * `char* LiveryName = VEHICLE::GET_LIVERY_NAME(veh, i);`
 * }
 * this example will work fine to fetch all names
 * for example for Sanchez we get
 * SANC_LV1
 * SANC_LV2
 * SANC_LV3
 * SANC_LV4
 * SANC_LV5
 * Use _GET_LABEL_TEXT, to get the localized livery name.
 * ```
 * NOTE: You may need to set the vehicle's modKit to 0 by using this function [SET_VEHICLE_MOD_KIT](#\_0x1F2AA07F00B3217A) before getting the name, otherwise this native may return NULL.
 * Hash: 0xB4C7A93837C91A1F | ApiSet: undefined
 */
export declare function getLiveryName(vehicle: number | Vehicle, liveryIndex: number): string;
/**
 * Hash: 0x1DA0DA9CB3F0C8BF | ApiSet: undefined
 */
export declare function getIsWheelsLoweredStateActive(vehicle: number | Vehicle): boolean;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xA2459F72C14E2E8D | ApiSet: undefined
 */
export declare function getIsVehicleShuntBoostActive(vehicle: number | Vehicle): boolean;
/**
 * Retrieves the manufacturer's name for a specified vehicle.
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0xF7AF4F159FF99F97 | ApiSet: undefined
 */
export declare function getMakeNameFromVehicleModel(modelHash: number | string): string;
/**
 * ```
 * Returns last vehicle that was rammed by the given vehicle using the shunt boost.
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x04F2FA6E234162F7 | ApiSet: undefined
 */
export declare function getLastRammedVehicle(vehicle: number | Vehicle): number;
/**
 * Hash: 0x33F2E3FE70EAAE1D | ApiSet: undefined
 */
export declare function getNumModKits(vehicle: number | Vehicle): number;
/**
 * Hash: 0x83F969AA1EE2A664 | ApiSet: undefined
 */
export declare function getLastPedInVehicleSeat(vehicle: number | Vehicle, seatIndex: number): number;
/**
 * ```
 * Returns the text label of a mod type for a given vehicle
 * Use _GET_LABEL_TEXT to get the part name in the game's language
 * ```
 * Hash: 0x8935624F8C5592CC | ApiSet: undefined
 */
export declare function getModTextLabel(vehicle: number | Vehicle, modType: number, modValue: number): string;
/**
 * ```
 * Actually number of color combinations
 * ```
 * Hash: 0x3B963160CD65D41E | ApiSet: undefined
 */
export declare function getNumberOfVehicleColours(vehicle: number | Vehicle): number;
/**
 * Hash: 0x51F0FEB9F6AE98C0 | ApiSet: undefined
 */
export declare function getModSlotName(vehicle: number | Vehicle, modType: number): string;
/**
 * ```
 * Returns the number of *types* of licence plates, enumerated below in SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX.
 * ```
 * Hash: 0x4C4D6B2644F458CB | ApiSet: undefined
 */
export declare function getNumberOfVehicleNumberPlates(): number;
/**
 * Gets the ped in the specified seat of the passed vehicle.
 * If there is no ped in the seat, and the game considers the vehicle as ambient population, this will create a random occupant ped in the seat, which may be cleaned up by the game fairly soon if not marked as script-owned mission entity.
 * **NativeDB Added Parameter 3**: BOOL p2 (uses a different GetOccupant function)
 * Hash: 0xBB40DD2270B65366 | ApiSet: undefined
 */
export declare function getPedInVehicleSeat(vehicle: number | Vehicle, seatIndex: number): number;
/**
 * ```
 * paintType:
 * 0: Normal
 * 1: Metallic
 * 2: Pearl
 * 3: Matte
 * 4: Metal
 * 5: Chrome
 * ```
 * Hash: 0xA551BE18C11A476D | ApiSet: undefined
 */
export declare function getNumModColors(paintType: number, p1: boolean): number;
/**
 * This native does no interpolation between pathpoints. The same position will be returned for all times up to the next pathpoint in the recording.
 * See [`REQUEST_VEHICLE_RECORDING`](#\_0xAF514CABE74CBF15).
 * Hash: 0xD242728AA6F0FBA2 | ApiSet: undefined
 */
export declare function getPositionOfVehicleRecordingAtTime(recording: number, time: number, script: string): Vector3;
/**
 * ```
 * Returns how many possible mods a vehicle has for a given mod type
 * ```
 * Hash: 0xE38E9162A2500646 | ApiSet: undefined
 */
export declare function getNumVehicleMods(vehicle: number | Vehicle, modType: number): number;
/**
 * ```
 * Distance traveled in the vehicles current recording.
 * ```
 * Hash: 0x2DACD605FC681475 | ApiSet: undefined
 */
export declare function getPositionInRecording(vehicle: number | Vehicle): number;
/**
 * Hash: 0x9D1224004B3A6707 | ApiSet: undefined
 */
export declare function getNumVehicleWindowTints(): number;
/**
 * Hash: 0x92922A607497B14D | ApiSet: undefined
 */
export declare function getNumberOfVehicleDoors(vehicle: number | Vehicle): number;
/**
 * Hash: 0xC5574E0AEB86BA68 | ApiSet: undefined
 */
export declare function getRandomVehicleFrontBumperInSphere(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): number;
/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 * Hash: 0x218297BF0CFD853B | ApiSet: undefined
 */
export declare function getPedUsingVehicleDoor(vehicle: number | Vehicle, doorIndex: number): number;
/**
 * Hash: 0xB50807EABE20A8DC | ApiSet: undefined
 */
export declare function getRandomVehicleBackBumperInSphere(p0: number, p1: number, p2: number, p3: number, p4: number, p5: number, p6: number): number;
/**
 * Hash: 0x92523B76657A517D | ApiSet: undefined
 */
export declare function getPositionOfVehicleRecordingIdAtTime(id: number, time: number): Vector3;
/**
 * ```
 * NativeDB Introduced: 3095
 * ```
 * Retrieves the remaining duration of nitrous boost available for the specified vehicle.
 * Hash: 0xBEC4B8653462450E | ApiSet: undefined
 */
export declare function getRemainingNitrousDuration(vehicle: number | Vehicle): number;
/**
 * ```
 * Gets a random vehicle in a sphere at the specified position, of the specified radius.
 * x: The X-component of the position of the sphere.
 * y: The Y-component of the position of the sphere.
 * z: The Z-component of the position of the sphere.
 * radius: The radius of the sphere. Max is 9999.9004.
 * modelHash: The vehicle model to limit the selection to. Pass 0 for any model.
 * flags: The bitwise flags that modifies the behaviour of this function.
 * ```
 * Hash: 0x386F6CE5BAF6091C | ApiSet: undefined
 */
export declare function getRandomVehicleInSphere(position: Vector3, radius: number, modelHash: number | string, flags: number): number;
/**
 * Hash: 0xF0F2103EFAF8CBA7 | ApiSet: undefined
 */
export declare function getRotationOfVehicleRecordingIdAtTime(id: number, time: number): Vector3;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x55EAB010FAEE9380 | ApiSet: undefined
 */
export declare function getTyreHealth(vehicle: number | Vehicle, wheelIndex: number): number;
/**
 * Determines if the submarine is operating below its designated crush depth.
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x3E71D0B300B7AA79 | ApiSet: undefined
 */
export declare function getSubmarineIsUnderDesignDepth(submarine: number | Vehicle): boolean;
/**
 * ```
 * Corrected p1. it's basically the 'carriage/trailer number'. So if the train has 3 trailers you'd call the native once with a var or 3 times with 1, 2, 3.
 * ```
 * Hash: 0x08AAFD0814722BC3 | ApiSet: undefined
 */
export declare function getTrainCarriage(train: number | Vehicle, trailerNumber: number): number;
/**
 * ```
 * Not present in the retail version! It's just a nullsub.
 * p0 always true (except in one case)
 * p1 a random vehicle hash loaded in memory
 * successIndicator: 0 if success, -1 if failed
 * ```
 * Hash: 0x055BF0AC0C34F4FD | ApiSet: undefined
 */
export declare function getRandomVehicleModelInMemory(p0: boolean): [number, number];
/**
 * Checks if a Submarine has any air leaks, when there is more than 4 the player will drown.
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x093D6DDCA5B8FBAE | ApiSet: undefined
 */
export declare function getSubmarineNumberOfAirLeaks(submarine: number | Vehicle): number;
/**
 * Hash: 0x0E48D1C262390950 | ApiSet: undefined
 */
export declare function getTotalDurationOfVehicleRecording(recording: number, script: string): number;
/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x6E387895952F4F71 | ApiSet: undefined
 */
export declare function getTyreWearMultiplier(vehicle: number | Vehicle, wheelIndex: number): number;
/**
 * Hash: 0x2058206FBE79A8AD | ApiSet: undefined
 */
export declare function getRotationOfVehicleRecordingAtTime(recording: number, time: number): [Vector3, string];
/**
 * Hash: 0x102D125411A7B6E6 | ApiSet: undefined
 */
export declare function getTotalDurationOfVehicleRecordingId(id: number): number;
/**
 * ```
 * Can be used with GET_TOTAL_DURATION_OF_VEHICLE_RECORDING{_ID} to compute a percentage.
 * ```
 * Hash: 0x5746F3A7AB7FE544 | ApiSet: undefined
 */
export declare function getTimePositionInRecording(vehicle: number | Vehicle): number;
/**
 * Retrieves a static value representing the maximum drive force of specific a vehicle, including any vehicle mods. This value does not change dynamically during gameplay. This value provides an approximation and should be considered alongside other performance metrics like top speed for a more comprehensive understanding of the vehicle's capabilities.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x5DD35C8D074E57AE | ApiSet: undefined
 */
export declare function getVehicleAcceleration(vehicle: number | Vehicle): number;
/**
 * Gets the amount of bombs that this vehicle has. As far as I know, this does *not* impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
 * In decompiled scripts this is used to check if the vehicle has enough bombs before a bomb can be dropped (bombs are dropped by using [`_SHOOT_SINGLE_BULLET_BETWEEN_COORDS_WITH_EXTRA_PARAMS`](#\_0xBFE5756E7407064A)).
 * Use [`_SET_AIRCRAFT_BOMB_COUNT`](#\_0xF4B2ED59DEB5D774) to set the amount of bombs on that vehicle.
 * Hash: 0xEA12BD130D7569A1 | ApiSet: undefined
 */
export declare function getVehicleBombCount(aircraft: number | Vehicle): number;
/**
 * ```
 * Returns an int
 * Vehicle Classes:
 * 0: Compacts
 * 1: Sedans
 * 2: SUVs
 * 3: Coupes
 * 4: Muscle
 * 5: Sports Classics
 * 6: Sports
 * 7: Super
 * 8: Motorcycles
 * 9: Off-road
 * 10: Industrial
 * 11: Utility
 * 12: Vans
 * 13: Cycles
 * 14: Boats
 * 15: Helicopters
 * 16: Planes
 * 17: Service
 * 18: Emergency
 * 19: Military
 * 20: Commercial
 * 21: Trains
 * 22: Open Wheel
 * char buffer[128];
 * `std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS(vehicle));`
 * `char* className = UI::_GET_LABEL_TEXT(buffer);`
 * ```
 * Hash: 0x29439776AAA00A62 | ApiSet: undefined
 */
export declare function getVehicleClass(vehicle: number | Vehicle): number;
/**
 * ```
 * Returns attached vehicle (Vehicle in parameter must be cargobob)
 * ```
 * Hash: 0x873B82D42AC2B9E5 | ApiSet: undefined
 */
export declare function getVehicleAttachedToCargobob(cargobob: number | Vehicle): number;
/**
 * Hash: 0xE495D1EF4C91FD20 | ApiSet: undefined
 */
export declare function getVehicleCauseOfDestruction(vehicle: number | Vehicle): number;
/**
 * ```
 * Seems related to vehicle health, like the one in IV.
 * Max 1000, min 0.
 * Vehicle does not necessarily explode or become undrivable at 0.
 * ```
 * Hash: 0xF271147EB7B40F12 | ApiSet: undefined
 */
export declare function getVehicleBodyHealth(vehicle: number | Vehicle): number;
/**
 * Hash: 0x2F83E7E45D9EA7AE | ApiSet: undefined
 */
export declare function getVehicleClassMaxAcceleration(vehicleClass: number): number;
/**
 * Hash: 0x00C09F246ABEDD82 | ApiSet: undefined
 */
export declare function getVehicleClassEstimatedMaxSpeed(vehicleClass: number): number;
/**
 * See [`SET_VEHICLE_CUSTOM_PRIMARY_COLOUR`](#\_0x7141766F91D15BEA) and [`SET_VEHICLE_CUSTOM_SECONDARY_COLOUR`](#\_0x36CED73BFED89754).
 * Hash: 0xF3CC740D36221548 | ApiSet: undefined
 */
export declare function getVehicleColor(vehicle: number | Vehicle): [number, number, number];
/**
 * Hash: 0xA916396DF4154EE3 | ApiSet: undefined
 */
export declare function getVehicleCanActivateParachute(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x4F930AD022D6DE3B | ApiSet: undefined
 */
export declare function getVehicleClassMaxAgility(vehicleClass: number): number;
/**
 * Hash: 0x4BF54C16EC8FEC03 | ApiSet: undefined
 */
export declare function getVehicleClassMaxBraking(vehicleClass: number): number;
/**
 * ```
 * For a full enum, see here : pastebin.com/i2GGAjY0
 * char buffer[128];
 * `std::sprintf(buffer, "VEH_CLASS_%i", VEHICLE::GET_VEHICLE_CLASS_FROM_NAME (hash));`
 * `const char* className = HUD::_GET_LABEL_TEXT(buffer);`
 * ```
 * Hash: 0xDEDF1C8BD47C2200 | ApiSet: undefined
 */
export declare function getVehicleClassFromName(modelHash: number | string): number;
/**
 * Hash: 0xDBC86D85C5059461 | ApiSet: undefined
 */
export declare function getVehicleClassMaxTraction(vehicleClass: number): number;
/**
 * Hash: 0x6A842D197F845D56 | ApiSet: undefined
 */
export declare function getVehicleColourCombination(vehicle: number | Vehicle): number;
/**
 * Hash: 0xA19435F193E081AC | ApiSet: undefined
 */
export declare function getVehicleColours(vehicle: number | Vehicle): [number, number];
/**
 * Similar to [`_GET_AIRCRAFT_BOMB_COUNT`](#\_0xEA12BD130D7569A1), this gets the amount of countermeasures that are present on this vehicle.
 * Use [`_SET_AIRCRAFT_COUNTERMEASURE_COUNT`](#\_0x9BDA23BF666F0855) to set the current amount.
 * Hash: 0xF846AA63DF56B804 | ApiSet: undefined
 */
export declare function getVehicleCountermeasureCount(aircraft: number | Vehicle): number;
/**
 * ```cpp
 * enum eColourBitField {
 * HAS_BODY_COLOUR1 = 1,
 * HAS_BODY_COLOUR2 = 2,
 * HAS_BODY_COLOUR3 = 4,
 * HAS_BODY_COLOUR4 = 8,
 * HAS_BODY_COLOUR5 = 16
 * }
 * ```
 * Hash: 0xEEBFC7A7EFDC35B4 | ApiSet: undefined
 */
export declare function getVehicleColoursWhichCanBeSet(vehicle: number | Vehicle): number;
/**
 * Hash: 0xB64CF2CCA9D95F52 | ApiSet: undefined
 */
export declare function getVehicleCustomPrimaryColour(vehicle: number | Vehicle): [number, number, number];
/**
 * Hash: 0xB7635E80A5C31BFF | ApiSet: undefined
 */
export declare function getVehicleDashboardColor(vehicle: number | Vehicle): number;
/**
 * ```
 * Returns a float value between 0.0 and 3.0 related to its slipstream draft (boost/speedup).
 * GET_VEHICLE_*
 * ```
 * Hash: 0x36492C2F0D134C56 | ApiSet: undefined
 */
export declare function getVehicleCurrentSlipstreamDraft(vehicle: number | Vehicle): number;
/**
 * Hash: 0x8389CD56CA8072DC | ApiSet: undefined
 */
export declare function getVehicleCustomSecondaryColour(vehicle: number | Vehicle): [number, number, number];
/**
 * ```
 * The only example I can find of this function in the scripts, is this:
 * `struct _s = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(rPtr((A_0) + 4), 1.21f, 6.15f, 0.3f);`
 * -----------------------------------------------------------------------------------------------------------------------------------------
 * PC scripts:
 * `v_5\/\*{3}\*\/ = VEHICLE::GET_VEHICLE_DEFORMATION_AT_POS(a_0._f1, 1.21, 6.15, 0.3);`
 * ```
 * Hash: 0x4EC6CFBC7B2E9536 | ApiSet: undefined
 */
export declare function getVehicleDeformationAtPos(vehicle: number | Vehicle, offsetX: number, offsetY: number, offsetZ: number): Vector3;
/**
 * A getter for [`SET_VEHICLE_DIRT_LEVEL`](#\_0x79D3B596FE44EE8B).
 * Hash: 0x8F17BC8BA08DA62B | ApiSet: undefined
 */
export declare function getVehicleDirtLevel(vehicle: number | Vehicle): number;
/**
 * Checks the angle of the door mapped from 0.0 - 1.0 where 0.0 is fully closed and 1.0 is fully open.
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 * Hash: 0xFE3F9C29F7B32BD5 | ApiSet: undefined
 */
export declare function getVehicleDoorAngleRatio(vehicle: number | Vehicle, doorIndex: number): number;
/**
 * Hash: 0xF6AF6CB341349015 | ApiSet: undefined
 */
export declare function getVehicleDoorsLockedForPlayer(vehicle: number | Vehicle, player: number | string | Player): boolean;
/**
 * Hash: 0x25BC98A59C2EA962 | ApiSet: undefined
 */
export declare function getVehicleDoorLockStatus(vehicle: number | Vehicle): number;
/**
 * ```
 * NativeDB Introduced: v3258
 * ```
 * **Note**: When using this native, the hash of the vehicle needs to be loaded into the client's memory. This can be done by requesting the model with [`REQUEST_MODEL`](#\_0x963D27A58DF860AC) or by simply having the vehicle spawned.
 * ```cpp
 * enum eVehicleDrivetrainType
 * {
 * INVALID = 0,
 * FWD = 1,
 * RWD = 2,
 * AWD = 3
 * };
 * ```
 * ```
 * NativeDB Introduced: v3258
 * ```
 * Hash: 0x1423725069EE1D14 | ApiSet: undefined
 */
export declare function getVehicleDrivetrainType(vehicleModel: number | string): number;
/**
 * ```
 * formerly known as _GET_VEHICLE_PAINT_FADE
 * The result is a value from 0-1, where 0 is fresh paint.
 * ```
 * Hash: 0xA82819CAC9C4C403 | ApiSet: undefined
 */
export declare function getVehicleEnveffScale(vehicle: number | Vehicle): number;
/**
 * ```
 * Returns 1000.0 if the function is unable to get the address of the specified vehicle or if it's not a vehicle.
 * Minimum: -4000
 * Maximum: 1000
 * -4000: Engine is destroyed
 * 0 and below: Engine catches fire and health rapidly declines
 * 300: Engine is smoking and losing functionality
 * 1000: Engine is perfect
 * ```
 * Hash: 0xC45D23BAF168AAB8 | ApiSet: undefined
 */
export declare function getVehicleEngineHealth(vehicle: number | Vehicle): number;
/**
 * Hash: 0x50634E348C8D44EF | ApiSet: undefined
 */
export declare function getVehicleHasKers(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x3BC4245933A166F7 | ApiSet: undefined
 */
export declare function getVehicleExtraColours(vehicle: number | Vehicle): [number, number];
/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 * Hash: 0xCA4AC3EAAE46EC7B | ApiSet: undefined
 */
export declare function getVehicleIndividualDoorLockStatus(vehicle: number | Vehicle, doorIndex: number): number;
/**
 * Retrieves a static value representing the estimated max speed of a specific vehicle, including any vehicle mods. This value does not change dynamically during gameplay.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x53AF99BAA671CA47 | ApiSet: undefined
 */
export declare function getVehicleEstimatedMaxSpeed(vehicle: number | Vehicle): number;
/**
 * Hash: 0xBC9CFF381338CB4F | ApiSet: undefined
 */
export declare function getVehicleHasParachute(vehicle: number | Vehicle): boolean;
/**
 * ```
 * NativeDB Added Parameter 2: float maxEngineHealth
 * NativeDB Added Parameter 3: float maxPetrolTankHealth
 * NativeDB Added Parameter 4: float maxBodyHealth
 * NativeDB Added Parameter 5: float maxMainRotorHealth
 * NativeDB Added Parameter 6: float maxTailRotorHealth
 * NativeDB Added Parameter 7: float maxUnkHealth
 * ```
 * Hash: 0xB8EF61207C2393A9 | ApiSet: undefined
 */
export declare function getVehicleHealthPercentage(vehicle: number | Vehicle): number;
/**
 * Returns whether the specified vehicle is designated as a mercenary vehicle
 * Hash: 0xD4C4642CB7F50B5D | ApiSet: undefined
 */
export declare function getVehicleIsMercenary(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0xDA62027C8BDB326E | ApiSet: undefined
 */
export declare function getVehicleFlightNozzlePosition(aircraft: number | Vehicle): number;
/**
 * Hash: 0x7D1464D472D32136 | ApiSet: undefined
 */
export declare function getVehicleInteriorColor(vehicle: number | Vehicle): number;
/**
 * ```
 * Returns a value depending on the lock-on state of vehicle weapons.
 * 0: not locked on
 * 1: locking on
 * 2: locked on
 * ```
 * Hash: 0xE6B0E8CFC3633BF0 | ApiSet: undefined
 */
export declare function getVehicleHomingLockonState(vehicle: number | Vehicle): number;
/**
 * Hash: 0xB91B4C20085BD12F | ApiSet: undefined
 */
export declare function getVehicleLightsState(vehicle: number | Vehicle): [boolean, boolean, boolean];
/**
 * Hash: 0xAD7E85FC227197C4 | ApiSet: undefined
 */
export declare function getVehicleMaxBraking(vehicle: number | Vehicle): number;
/**
 * Hash: 0x8F5EBAB1F260CFCE | ApiSet: undefined
 */
export declare function getVehicleLockOnTarget(vehicle: number | Vehicle): [boolean, number];
/**
 * Hash: 0x28D37D4F71AC5C58 | ApiSet: undefined
 */
export declare function getVehicleLayoutHash(vehicle: number | Vehicle): number;
/**
 * Hash: 0xE8D65CA700C9A693 | ApiSet: undefined
 */
export declare function getVehicleModColor1(vehicle: number | Vehicle): [number, number, number];
/**
 * ```
 * returns a string which is the codename of the vehicle's currently selected secondary color
 * ```
 * Hash: 0x4967A516ED23A5A1 | ApiSet: undefined
 */
export declare function getVehicleModColor2Name(vehicle: number | Vehicle): string;
/**
 * ```
 * Returns -1 if the vehicle has no livery
 * ```
 * Hash: 0x87B63E25A529D526 | ApiSet: undefined
 */
export declare function getVehicleLiveryCount(vehicle: number | Vehicle): number;
/**
 * ```
 * -1 = no livery
 * ```
 * Hash: 0x2BB9230590DA5E8A | ApiSet: undefined
 */
export declare function getVehicleLivery(vehicle: number | Vehicle): number;
/**
 * ```
 * returns a string which is the codename of the vehicle's currently selected primary color
 * p1 is always 0
 * ```
 * Hash: 0xB45085B721EFD38C | ApiSet: undefined
 */
export declare function getVehicleModColor1Name(vehicle: number | Vehicle, p1: boolean): string;
/**
 * ```
 * Can be used for IS_DLC_VEHICLE_MOD and _0xC098810437312FFF
 * ```
 * Hash: 0x4593CF82AA179706 | ApiSet: undefined
 */
export declare function getVehicleModIdentifierHash(vehicle: number | Vehicle, modType: number, modIndex: number): number;
/**
 * Hash: 0xA7C4F2C6E744A550 | ApiSet: undefined
 */
export declare function getVehicleMaxNumberOfPassengers(vehicle: number | Vehicle): number;
/**
 * Hash: 0xA132FB5370554DB0 | ApiSet: undefined
 */
export declare function getVehicleMaxTraction(vehicle: number | Vehicle): number;
/**
 * Hash: 0xFC058F5121E54C32 | ApiSet: undefined
 */
export declare function getVehicleModKitType(vehicle: number | Vehicle): number;
/**
 * Hash: 0x81592BE4E3878728 | ApiSet: undefined
 */
export declare function getVehicleModColor2(vehicle: number | Vehicle): [number, number];
/**
 * Hash: 0x772960298DA26FDB | ApiSet: undefined
 */
export declare function getVehicleMod(vehicle: number | Vehicle, modType: number): number;
/**
 * Hash: 0x90A38E9838E0A8C1 | ApiSet: undefined
 */
export declare function getVehicleModModifierValue(vehicle: number | Vehicle, modType: number, modIndex: number): number;
/**
 * Hash: 0x6325D1A044AE510D | ApiSet: undefined
 */
export declare function getVehicleModKit(vehicle: number | Vehicle): number;
/**
 * ```
 * Returns max speed (without mods) of the specified vehicle model in m/s.
 * ```
 * Hash: 0xF417C2502FFFED43 | ApiSet: undefined
 */
export declare function getVehicleModelEstimatedMaxSpeed(modelHash: number | string): number;
/**
 * ```
 * Only used for wheels(ModType = 23/24) Returns true if the wheels are custom wheels
 * ```
 * Hash: 0xB3924ECD70E095DC | ApiSet: undefined
 */
export declare function getVehicleModVariation(vehicle: number | Vehicle, modType: number): boolean;
/**
 * ```
 * GET_VEHICLE_MODEL_*
 * 9.8 * thrust if air vehicle, else 0.38 + drive force?
 * ```
 * Hash: 0x53409B5163D5B846 | ApiSet: undefined
 */
export declare function getVehicleModelEstimatedAgility(modelHash: number | string): number;
/**
 * ```
 * Returns max braking of the specified vehicle model.
 * ```
 * Hash: 0xDC53FD41B4ED944C | ApiSet: undefined
 */
export declare function getVehicleModelMaxBraking(modelHash: number | string): number;
/**
 * Returns the acceleration of the specified model.
 * Hash: 0x8C044C5C84505B6A | ApiSet: undefined
 */
export declare function getVehicleModelAcceleration(modelHash: number | string): number;
/**
 * ```
 * GET_VEHICLE_MODEL_*
 * Function pertains only to aviation vehicles.
 * ```
 * Hash: 0xC6AD107DDC9054CC | ApiSet: undefined
 */
export declare function getVehicleModelMaxKnots(modelHash: number | string): number;
/**
 * ```
 * Returns max number of passengers (including the driver) for the specified vehicle model.
 * ```
 * Hash: 0x2AD93716F184EDA4 | ApiSet: undefined
 */
export declare function getVehicleModelNumberOfSeats(modelHash: number | string): number;
/**
 * ```
 * Returns max traction of the specified vehicle model.
 * ```
 * Hash: 0x539DE94D44FDFD0D | ApiSet: undefined
 */
export declare function getVehicleModelMaxTraction(modelHash: number | string): number;
/**
 * Hash: 0xBFBA3BA79CFF7EBF | ApiSet: undefined
 */
export declare function getVehicleModelMaxBrakingMaxMods(modelHash: number | string): number;
/**
 * ```
 * Returns `nMonetaryValue` from handling.meta for specific model, which is the vehicle's monetary value.
 * ```
 * Hash: 0x5873C14A52D74236 | ApiSet: undefined
 */
export declare function getVehicleModelValue(vehicleModel: number | string): number;
/**
 * Hash: 0x2C8CBFE1EA5FC631 | ApiSet: undefined
 */
export declare function getVehicleNumberOfBrokenBones(vehicle: number | Vehicle): number;
/**
 * Gets the color of the neon lights of the specified vehicle.
 * See [`_SET_VEHICLE_NEON_LIGHTS_COLOUR`](#\_0x8E0A582209A62695) for more information
 * Hash: 0x7619EEE8C886757F | ApiSet: undefined
 */
export declare function getVehicleNeonLightsColour(vehicle: number | Vehicle): [number, number, number];
/**
 * ```
 * 1000 is max health
 * Begins leaking gas at around 650 health
 * ```
 * Hash: 0x7D5DABE888D2D074 | ApiSet: undefined
 */
export declare function getVehiclePetrolTankHealth(vehicle: number | Vehicle): number;
/**
 * ```
 * Also includes some "turnOffBones" when vehicle mods are installed.
 * ```
 * Hash: 0x42A4BEB35D372407 | ApiSet: undefined
 */
export declare function getVehicleNumberOfBrokenOffBones(vehicle: number | Vehicle): number;
/**
 * ```
 * Returns the license plate text from a vehicle.  8 chars maximum.
 * ```
 * Hash: 0x7CE1CCB9B293020E | ApiSet: undefined
 */
export declare function getVehicleNumberPlateText(vehicle: number | Vehicle): string;
/**
 * Returns index of the current vehicle's rooftop livery.
 * A getter for [\_SET_VEHICLE_ROOF_LIVERY](#\_0xA6D3A8750DC73270).
 * Hash: 0x60190048C0764A26 | ApiSet: undefined
 */
export declare function getVehicleRoofLivery(vehicle: number | Vehicle): number;
/**
 * ```
 * Gets the number of passengers, NOT including the driver. Use IS_VEHICLE_SEAT_FREE(Vehicle, -1) to also check for the driver
 * ```
 * Hash: 0x24CB2137731FFE89 | ApiSet: undefined
 */
export declare function getVehicleNumberOfPassengers(vehicle: number | Vehicle): number;
/**
 * See [`REQUEST_VEHICLE_RECORDING`](#\_0xAF514CABE74CBF15).
 * Hash: 0x21543C612379DB3C | ApiSet: undefined
 */
export declare function getVehicleRecordingId(recording: number, script: string): number;
/**
 * ```
 * Outputs 2 Vector3's.
 * Scripts check if out2.x - out1.x > something.x
 * Could be suspension related, as in max suspension height and min suspension height, considering the natives location.
 * ```
 * Hash: 0xDF7E3EEB29642C38 | ApiSet: undefined
 */
export declare function getVehicleSuspensionBounds(vehicle: number | Vehicle): [Vector3, Vector3];
/**
 * Returns the plates a vehicle has.
 * ```cpp
 * enum eVehiclePlateType
 * {
 * VPT_FRONT_AND_BACK_PLATES = 0,
 * VPT_FRONT_PLATES = 1,
 * VPT_BACK_PLATES = 2,
 * VPT_NONE = 3,
 * };
 * ```
 * Motorcycles with no visible plates will sometimes return a 2 for unknown reasons.
 * Hash: 0x9CCC9525BF2408E0 | ApiSet: undefined
 */
export declare function getVehiclePlateType(vehicle: number | Vehicle): number;
/**
 * ```cpp
 * enum eVehiclePlateIndicies {
 * SanAndreasCursive = 0,
 * SanAndreasBlack = 1,
 * SanAndreasBlue = 2,
 * SanAndreasPlain = 3,
 * SRExcept = 4,
 * NorthYankton = 5,
 * // All indicies below this require b3095
 * ECola = 6,
 * LasVenturas = 7,
 * LiberyCity = 8,
 * LSCarMeet = 9,
 * LSPanic = 10,
 * LSPounders = 11,
 * Sprunk = 12,
 * }
 * ```
 * Hash: 0xF11BC2DD9A3E7195 | ApiSet: undefined
 */
export declare function getVehicleNumberPlateTextIndex(vehicle: number | Vehicle): number;
/**
 * ```
 * Gets the height of the vehicle's suspension.
 * The higher the value the lower the suspension. Each 0.002 corresponds with one more level lowered.
 * 0.000 is the stock suspension.
 * 0.008 is Ultra Suspension.
 * ```
 * Hash: 0x53952FD2BAA19F17 | ApiSet: undefined
 */
export declare function getVehicleSuspensionHeight(vehicle: number | Vehicle): number;
/**
 * Returns a number of available rooftop liveries, or -1 if vehicle has no rooftop liveries available.
 * Hash: 0x5ECB40269053C0D4 | ApiSet: undefined
 */
export declare function getVehicleRoofLiveryCount(vehicle: number | Vehicle): number;
/**
 * Hash: 0xB635392A4938B3C3 | ApiSet: undefined
 */
export declare function getVehicleTyreSmokeColor(vehicle: number | Vehicle): [number, number, number];
/**
 * ```
 * Gets the trailer of a vehicle and puts it into the trailer parameter.
 * ```
 * Hash: 0x1CDD6BADC297830D | ApiSet: undefined
 */
export declare function getVehicleTrailerVehicle(vehicle: number | Vehicle): [boolean, number];
/**
 * Hash: 0x8181CE2F25CB9BB7 | ApiSet: undefined
 */
export declare function getVehicleWeaponRestrictedAmmo(vehicle: number | Vehicle, weaponIndex: number): number;
/**
 * Hash: 0x678B9BB8C3F58FEB | ApiSet: undefined
 */
export declare function getVehicleTyresCanBurst(vehicle: number | Vehicle): boolean;
/**
 * ```
 * HAS_*
 * ```
 * Hash: 0x91D6DD290888CBAB | ApiSet: undefined
 */
export declare function hasFilledVehiclePopulation(): boolean;
/**
 * Hash: 0x0EE21293DAD47C95 | ApiSet: undefined
 */
export declare function getVehicleWindowTint(vehicle: number | Vehicle): number;
/**
 * Use [\_SET_VEHICLE_HEADLIGHTS_COLOUR](#\_0xE41033B25D003A07) to set the headlights color for the vehicle.
 * You must enable xenon headlights for this native to work properly.
 * ```cpp
 * enum eHeadlightColors {
 * Default = 255,
 * White = 0,
 * Blue = 1,
 * ElectricBlue = 2,
 * MintGreen = 3,
 * LimeGreen = 4,
 * Yellow = 5,
 * GoldenShower = 6,
 * Orange = 7,
 * Red = 8,
 * PonyPink = 9,
 * HotPink = 10,
 * Purple = 11,
 * Blacklight = 12
 * }
 * ```
 * Hash: 0x3DFF319A831E0CDB | ApiSet: undefined
 */
export declare function getVehicleXenonLightsColor(vehicle: number | Vehicle): number;
/**
 * Hash: 0x6ADAABD3068C5235 | ApiSet: undefined
 */
export declare function hasVehiclePhoneExplosiveDevice(): boolean;
/**
 * Hash: 0x06F43E5175EB6D96 | ApiSet: undefined
 */
export declare function hasPreloadModsFinished(p0: any): boolean;
/**
 * Hash: 0x300D614A4C785FC4 | ApiSet: undefined
 */
export declare function hasVehicleRecordingBeenLoaded(recording: number): [boolean, string];
/**
 * ```cpp
 * enum eVehicleWheelType
 * {
 * VWT_SPORT = 0,
 * VWT_MUSCLE = 1,
 * VWT_LOWRIDER = 2,
 * VWT_SUV = 3,
 * VWT_OFFROAD = 4,
 * VWT_TUNER = 5,
 * VWT_BIKE = 6,
 * VWT_HIEND = 7,
 * // Benny's Original
 * VWT_SUPERMOD1 = 8,
 * // Benny's Bespoke
 * VWT_SUPERMOD2 = 9,
 * // Open Wheel
 * VWT_SUPERMOD3 = 10,
 * // Street
 * VWT_SUPERMOD4 = 11,
 * // Track
 * VWT_SUPERMOD5 = 12,
 * };
 * ```
 * Hash: 0xB3ED1BFB4BE636DC | ApiSet: undefined
 */
export declare function getVehicleWheelType(vehicle: number | Vehicle): number;
/**
 * Hash: 0x48ADC8A773564670 | ApiSet: undefined
 */
export declare function instantlyFillVehiclePopulation(): void;
/**
 * Hash: 0x1BBE0523B8DB9A21 | ApiSet: undefined
 */
export declare function hasVehicleAssetLoaded(vehicleAsset: number): boolean;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xAE71FB656C600587 | ApiSet: undefined
 */
export declare function hideVehicleTombstone(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x62CA17B74C435651 | ApiSet: undefined
 */
export declare function isAnyEntityAttachedToHandlerFrame(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x9A83F5F9963775EF | ApiSet: undefined
 */
export declare function haveVehicleModsStreamedIn(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x9F243D3919F442FE | ApiSet: undefined
 */
export declare function isBigVehicle(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x291E373D483E7EE7 | ApiSet: undefined
 */
export declare function isAnyPedRappellingFromHeli(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x61E1DD6125A3EEE6 | ApiSet: undefined
 */
export declare function isAnyVehicleNearPoint(position: Vector3, radius: number): boolean;
/**
 * Checks if a boat is currently anchored.
 * This native is a getter for [SET_BOAT_ANCHOR](#\_0x75DBEC174AEEAD10).
 * ```
 * NativeDB Introduced: v573
 * ```
 * Hash: 0xB0AD1238A709B1A2 | ApiSet: undefined
 */
export declare function isBoatAnchored(boat: number | Vehicle): boolean;
/**
 * Hash: 0x89D630CF5EA96D23 | ApiSet: undefined
 */
export declare function isHandlerFrameAboveContainer(handler: number | Vehicle, container: number | Entity): boolean;
/**
 * Hash: 0x57715966069157AD | ApiSet: undefined
 */
export declare function isEntityAttachedToHandlerFrame(vehicle: number | Vehicle, entity: number | Entity): boolean;
/**
 * ```
 * Usage:
 * public bool isCopInRange(Vector3 Location, float Range)
 * {
 * return Function.Call<bool>(Hash.IS_COP_PED_IN_AREA_3D, Location.X - Range, Location.Y - Range, Location.Z - Range, Location.X + Range, Location.Y + Range, Location.Z + Range);
 * }
 * ```
 * Hash: 0x7EEF65D5F153E26A | ApiSet: undefined
 */
export declare function isCopVehicleInArea3d(x1: number, x2: number, y1: number, y2: number, z1: number, z2: number): boolean;
/**
 * Check if a entry point for a certain seat is clear, useful for checking if a vehicle seat is accesible.
 * If you park your vehicle near a wall and the ped cannot enter/exit this side, the return value toggles from true (not blocked) to false (blocked).
 * Keep in mind, with checkSide set to true, that only certain vehicles have entry points on both sides for the same seat, like motorcycles, most normal vehicles don't have this and if the native doesn't find a entry point with the given parameters it will always return false. So for most normal usecases leaving checkSide set to false would result in the expected behavior.
 * Hash: 0x639431E895B9AA57 | ApiSet: undefined
 */
export declare function isEntryPointForSeatClear(ped: number | Ped, vehicle: number | Vehicle, seatIndex: number, checkSide: boolean, leftSide: boolean): boolean;
/**
 * Hash: 0xBC74B4BE25EB6C8A | ApiSet: undefined
 */
export declare function isHeliPartBroken(vehicle: number | Vehicle, p1: boolean, p2: boolean, p3: boolean): boolean;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xAD464F2E18836BFC | ApiSet: undefined
 */
export declare function isMissionTrain(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x634148744F385576 | ApiSet: undefined
 */
export declare function isHeliLandingAreaBlocked(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0xB09D25E77C33EB3F | ApiSet: undefined
 */
export declare function isPedExclusiveDriverOfVehicle(ped: number | Ped, vehicle: number | Vehicle): [boolean, number];
/**
 * ```
 * NativeDB Introduced: 3095
 * ```
 * Determines if the nitrous is currently activated in the specified vehicle.
 * Hash: 0x491E822B2C464FE4 | ApiSet: undefined
 */
export declare function isNitrousActive(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0xAEA8FD591FAD4106 | ApiSet: undefined
 */
export declare function isPlaybackUsingAiGoingOnForVehicle(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x1C8A4C2C19E68EEC | ApiSet: undefined
 */
export declare function isPlaybackGoingOnForVehicle(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x4198AB0022B15F87 | ApiSet: undefined
 */
export declare function isPlaneLandingGearIntact(plane: number | Vehicle): boolean;
/**
 * Hash: 0x7504C0F113AB50FC | ApiSet: undefined
 */
export declare function isTaxiLightOn(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0xB50C0B0CEDC6CE84 | ApiSet: undefined
 */
export declare function isThisModelABike(model: number | string): boolean;
/**
 * Hash: 0xF7F203E31F96F6A1 | ApiSet: undefined
 */
export declare function isSeatWarpOnly(vehicle: number | Vehicle, seatIndex: number): boolean;
/**
 * Hash: 0x45A9187928F4B9E3 | ApiSet: undefined
 */
export declare function isThisModelABoat(model: number | string): boolean;
/**
 * ```
 * To check if the model is an amphibious car, see gtaforums.com/topic/717612-v-scriptnative-documentation-and-research/page-33#entry1069317363 (for build 944 and above only!)
 * ```
 * Hash: 0x7F6DB52EEFC96DF8 | ApiSet: undefined
 */
export declare function isThisModelACar(model: number | string): boolean;
/**
 * Hash: 0xBF94DD42F63BDED2 | ApiSet: undefined
 */
export declare function isThisModelABicycle(model: number | string): boolean;
/**
 * Hash: 0xDCE4334788AF94EA | ApiSet: undefined
 */
export declare function isThisModelAHeli(model: number | string): boolean;
/**
 * ```
 * Checks if model is a boat, then checks for FLAG_IS_JETSKI.
 * ```
 * Hash: 0x9537097412CF75FE | ApiSet: undefined
 */
export declare function isThisModelAJetski(model: number | string): boolean;
/**
 * Hash: 0xA0948AB42D7BA0DE | ApiSet: undefined
 */
export declare function isThisModelAPlane(model: number | string): boolean;
/**
 * Hash: 0x633F6F44A537EBB6 | ApiSet: undefined
 */
export declare function isThisModelAnAmphibiousCar(model: number | string): boolean;
/**
 * Hash: 0x39DAC362EE65FA28 | ApiSet: undefined
 */
export declare function isThisModelAQuadbike(model: number | string): boolean;
/**
 * Hash: 0x84B233A8C8FC8AE7 | ApiSet: undefined
 */
export declare function isToggleModOn(vehicle: number | Vehicle, modType: number): boolean;
/**
 * Hash: 0xD40148F22E81A1D9 | ApiSet: undefined
 */
export declare function isVehicleAttachedToCargobob(cargobob: number | Vehicle, vehicleAttached: number | Vehicle): boolean;
/**
 * Hash: 0xA1A9FC1C76A6730D | ApiSet: undefined
 */
export declare function isThisModelAnAmphibiousQuadbike(model: number | string): boolean;
/**
 * ```
 * Scripts verify that towTruck is the first parameter, not the second.
 * ```
 * Hash: 0x146DF9EC4C4B9FD4 | ApiSet: undefined
 */
export declare function isVehicleAttachedToTowTruck(towTruck: number | Vehicle, vehicle: number | Vehicle): boolean;
/**
 * Hash: 0xAB935175B22E822B | ApiSet: undefined
 */
export declare function isThisModelATrain(model: number | string): boolean;
/**
 * ```
 * Returns true if vehicle is halted by BRING_VEHICLE_TO_HALT
 * _IS_VEHICLE_*
 * ```
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xC69BB1D832A710EF | ApiSet: undefined
 */
export declare function isVehicleBeingHalted(vehicle: number | Vehicle): boolean;
/**
 * Determines if a vehicle is a convertible with an animatable roof. This native checks if the specified vehicle model features a convertible roof that can be lowered or raised through an animation.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x52F357A30698BCCE | ApiSet: undefined
 */
export declare function isVehicleAConvertible(vehicle: number | Vehicle, checkRoofExtras: boolean): boolean;
/**
 * ```
 * Appears to return true if the vehicle has any damage, including cosmetically.
 * GET_*
 * ```
 * Hash: 0xBCDC5017D3CE1E9E | ApiSet: undefined
 */
export declare function isVehicleDamaged(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0xE33FFA906CE74880 | ApiSet: undefined
 */
export declare function isTurretSeat(vehicle: number | Vehicle, seatIndex: number): boolean;
/**
 * Hash: 0xE7CF3C4F9F489F0C | ApiSet: undefined
 */
export declare function isVehicleAttachedToTrailer(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x4319E335B71FFF34 | ApiSet: undefined
 */
export declare function isVehicleAlarmActivated(vehicle: number | Vehicle): boolean;
/**
 * Only ever used once in decompiled scripts: **am_pi_menu**:
 * Returns true if the engine is on fire, or if the vehicle engine health is < 0 and it **has been** on fire.
 * It sometimes doesn't return true when the vehicle engine has been on fire, and has since been fixed. I'm not really sure what the exact conditions are.
 * This usually returns true even if there are no visible flames yet (engine health > 0). However if you monitor engine health you'll see that it starts decreasing as soon as this returns true.
 * Hash: 0xEC69ADF931AAE0C3 | ApiSet: undefined
 */
export declare function isVehicleEngineOnFire(vehicle: number | Vehicle): boolean;
/**
 * ```
 * p1 is always 0 in the scripts.
 * p1 = check if vehicle is on fire
 * ```
 * Hash: 0x4C241E39B23DF959 | ApiSet: undefined
 */
export declare function isVehicleDriveable(vehicle: number | Vehicle, isOnFireCheck: boolean): boolean;
/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 * Hash: 0xB8E181E559464527 | ApiSet: undefined
 */
export declare function isVehicleDoorDamaged(veh: number | Vehicle, doorID: number): boolean;
/**
 * Hash: 0x27B926779DEB502D | ApiSet: undefined
 */
export declare function isVehicleBumperBouncing(vehicle: number | Vehicle, frontBumper: boolean): boolean;
/**
 * ```
 * garageName example "Michael - Beverly Hills"
 * ```
 * Hash: 0xCEE4490CD57BB3C2 | ApiSet: undefined
 */
export declare function isVehicleInGarageArea(garageName: string, vehicle: number | Vehicle): boolean;
/**
 * ```
 * Returns whether the specified vehicle is currently in a burnout.
 * vb.net
 * Public Function isVehicleInBurnout(vh As Vehicle) As Boolean
 * Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_IN_BURNOUT, vh)
 * End Function
 * ```
 * Hash: 0x1297A88E081430EB | ApiSet: undefined
 */
export declare function isVehicleInBurnout(vehicle: number | Vehicle): boolean;
/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 * Hash: 0x3E933CFF7B111C22 | ApiSet: undefined
 */
export declare function isVehicleDoorFullyOpen(vehicle: number | Vehicle, doorIndex: number): boolean;
/**
 * Hash: 0x468056A6BB6F3846 | ApiSet: undefined
 */
export declare function isVehicleBumperBrokenOff(vehicle: number | Vehicle, front: boolean): boolean;
/**
 * Hash: 0x423E8DE37D934D89 | ApiSet: undefined
 */
export declare function isVehicleModel(vehicle: number | Vehicle, model: number | string): boolean;
/**
 * Hash: 0xD2E6822DBFD6C8BD | ApiSet: undefined
 */
export declare function isVehicleExtraTurnedOn(vehicle: number | Vehicle, extraId: number): boolean;
/**
 * Hash: 0x1F25887F3C104278 | ApiSet: undefined
 */
export declare function isVehicleHighDetail(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x3D34E80EED4AE3BE | ApiSet: undefined
 */
export declare function isVehicleRocketBoostActive(vehicle: number | Vehicle): boolean;
/**
 * ```
 * Public Function isVehicleOnAllWheels(vh As Vehicle) As Boolean
 * Return Native.Function.Call(Of Boolean)(Hash.IS_VEHICLE_ON_ALL_WHEELS, vh)
 * End Function
 * ```
 * Hash: 0xB104CD1BABF302E2 | ApiSet: undefined
 */
export declare function isVehicleOnAllWheels(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x00834EAC4A96E010 | ApiSet: undefined
 */
export declare function isVehicleModGen9Exclusive(vehicle: number | Vehicle, modType: number, modIndex: number): boolean;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xA77DC70BD689A1E5 | ApiSet: undefined
 */
export declare function isVehicleInSubmarineMode(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0xB5CC40FBCB586380 | ApiSet: undefined
 */
export declare function isVehicleSirenAudioOn(vehicle: number | Vehicle): boolean;
/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0xFC40CBF7B90CA77C | ApiSet: undefined
 */
export declare function setPlaneAvoidsOthers(plane: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * indices:
 * 0 = Left
 * 1 = Right
 * 2 = Front
 * 3 = Back
 * ```
 * Hash: 0x8C4B92553E4766A5 | ApiSet: undefined
 */
export declare function isVehicleNeonLightEnabled(vehicle: number | Vehicle, index: number): boolean;
/**
 * Hash: 0x48C633E94A8142A7 | ApiSet: undefined
 */
export declare function isVehicleSlipstreamLeader(vehicle: number | Vehicle): boolean;
/**
 * Returns whether the vehicle's lights and sirens are on.
 * Hash: 0x4C9BF537BE2634B2 | ApiSet: undefined
 */
export declare function isVehicleSirenOn(vehicle: number | Vehicle): boolean;
/**
 * Does not work for vehicle of type: CBike, CBmx, CBoat, CTrain, CSubmarine.
 * Hash: 0x3DE51E9C80B116CF | ApiSet: undefined
 */
export declare function isVehicleParachuteActive(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x4AF9BD80EEBEB453 | ApiSet: undefined
 */
export declare function isVehicleStolen(vehicle: number | Vehicle): boolean;
/**
 * ```
 * Possibly: Returns whether the searchlight (found on police vehicles) is toggled on.
 * ```
 * Hash: 0xC0F97FCE55094987 | ApiSet: undefined
 */
export declare function isVehicleSearchlightOn(vehicle: number | Vehicle): boolean;
/**
 * Seat indices range from -1 to [`GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS`](#\_0xA7C4F2C6E744A550) minus one.
 * ```cpp
 * `// CTaskExitVehicleSeat::eSeatPosition - 1`
 * enum eSeatPosition
 * {
 * SF_FrontDriverSide = -1,
 * SF_FrontPassengerSide = 0,
 * SF_BackDriverSide = 1,
 * SF_BackPassengerSide = 2,
 * SF_AltFrontDriverSide = 3,
 * SF_AltFrontPassengerSide = 4,
 * SF_AltBackDriverSide = 5,
 * SF_AltBackPassengerSide = 6,
 * };
 * ```
 * ```
 * NativeDB Added Parameter 3: BOOL isTaskRunning
 * isTaskRunning = on true the function returns already false while a task on the target seat is running (TASK_ENTER_VEHICLE/TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT) - on false only when a ped is finally sitting in the seat.
 * ```
 * Hash: 0x22AC59A870E6A669 | ApiSet: undefined
 */
export declare function isVehicleSeatFree(vehicle: number | Vehicle, seatIndex: number): boolean;
/**
 * This native checks if the given vehicle is stopped at a red or amber traffic light junction, provided the driver's personality is set to not run amber lights.
 * Hash: 0x2959F696AE390A99 | ApiSet: undefined
 */
export declare function isVehicleStoppedAtTrafficLights(vehicle: number | Vehicle): boolean;
/**
 * ```
 * Returns false if the vehicle has the FLAG_NO_RESPRAY flag set.
 * ```
 * Hash: 0x8D474C8FAEFF6CDE | ApiSet: undefined
 */
export declare function isVehicleSprayable(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x563B65A643ED072E | ApiSet: undefined
 */
export declare function isVehicleWeaponDisabled(weaponHash: number | string, vehicle: number | Vehicle, owner: number | Ped): boolean;
/**
 * Hash: 0xB497F06B288DCFDF | ApiSet: undefined
 */
export declare function isVehicleStuckOnRoof(vehicle: number | Vehicle): boolean;
/**
 * ```
 * Returns true if the vehicle's current speed is less than, or equal to 0.0025f.
 * For some vehicles it returns true if the current speed is <= 0.00039999999.
 * ```
 * Hash: 0x5721B434AD84D57A | ApiSet: undefined
 */
export declare function isVehicleStopped(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x5335BE58C083E74E | ApiSet: undefined
 */
export declare function lowerRetractableWheels(vehicle: number | Vehicle): void;
/**
 * ```
 * p1 can be anywhere from 0 to 3 in the scripts. p2 is generally somewhere in the 1000 to 10000 range.
 * ```
 * Hash: 0x679BE1DAF71DA874 | ApiSet: undefined
 */
export declare function isVehicleStuckTimerUp(vehicle: number | Vehicle, p1: number, p2: number): boolean;
/**
 * Hash: 0x0581730AB9380412 | ApiSet: undefined
 */
export declare function _0x0581730AB9380412(p0: any, p1: any, p2: any, p3: any, p4: any, p5: any): void;
/**
 * ```cpp
 * enum eVehicleWheels
 * {
 * WHEEL_LF = 0, // Vehicle Left front
 * WHEEL_RF = 1, // Vehicle Right front
 * WHEEL_LM = 2, // Vehicle Left middle
 * WHEEL_RM = 3, // Vehicle Right middle
 * WHEEL_LR = 4, // Vehicle Left rear
 * WHEEL_RR = 5, // Vehicle Right rear
 * WHEEL_BF = 6, // Bike front
 * WHEEL_BR = 7, // Bike rear
 * MAX_WHEELS = 8
 * };
 * ```
 * Hash: 0xBA291848A0815CA9 | ApiSet: undefined
 */
export declare function isVehicleTyreBurst(vehicle: number | Vehicle, wheelID: number, isBurstToRim: boolean): boolean;
/**
 * Lowers the roof on a convertible vehicle, utilizing any available animations for the action. This native is particularly useful for creating a realistic interaction with convertible vehicles by animating the process of lowering the roof.
 * You can check if the vehicle has an convertible roof using [`IS_VEHICLE_A_CONVERTIBLE`](#\_0x52F357A30698BCCE).
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xDED51F703D0FA83D | ApiSet: undefined
 */
export declare function lowerConvertibleRoof(vehicle: number | Vehicle, instantlyLower: boolean): void;
/**
 * Hash: 0xAA0A52D24FB98293 | ApiSet: undefined
 */
export declare function isVehicleVisible(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x93A3996368C94158 | ApiSet: undefined
 */
export declare function modifyVehicleTopSpeed(vehicle: number | Vehicle, value: number): void;
/**
 * Hash: 0x0419B167EE128F33 | ApiSet: undefined
 */
export declare function _0x0419B167EE128F33(p0: any, p1: any): any;
/**
 * ```cpp
 * enum eWindowId {
 * VEH_EXT_WINDOW_LF = 0,
 * VEH_EXT_WINDOW_RF = 1,
 * VEH_EXT_WINDOW_LR = 2,
 * VEH_EXT_WINDOW_RR = 3,
 * VEH_EXT_WINDOW_LM = 4,
 * VEH_EXT_WINDOW_RM = 5,
 * VEH_EXT_WINDSCREEN = 6,
 * VEH_EXT_WINDSCREEN_R = 7,
 * }
 * ```
 * Hash: 0x46E571A0E20D01F1 | ApiSet: undefined
 */
export declare function isVehicleWindowIntact(vehicle: number | Vehicle, windowIndex: number): boolean;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x0205F5365292D2EB | ApiSet: undefined
 */
export declare function _0x0205F5365292D2EB(vehicle: number | Vehicle, p1: number): void;
/**
 * Hash: 0x065D03A9D6B2C6B5 | ApiSet: undefined
 */
export declare function _0x065D03A9D6B2C6B5(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x107A473D7A6647A9 | ApiSet: undefined
 */
export declare function _0x107A473D7A6647A9(vehicle: number | Vehicle): void;
/**
 * Hash: 0x2311DD7159F00582 | ApiSet: undefined
 */
export declare function _0x2311DD7159F00582(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0x1312DDD8385AEE4E | ApiSet: undefined
 */
export declare function _0x1312DDD8385AEE4E(p0: any, p1: any): void;
/**
 * ```
 * A vehicle recording playback flag only used in jewelry_heist
 * ```
 * Hash: 0x063AE2B2CC273588 | ApiSet: undefined
 */
export declare function _0x063AE2B2CC273588(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0x182F266C2D9E2BEB | ApiSet: undefined
 */
export declare function _0x182F266C2D9E2BEB(vehicle: number | Vehicle, p1: number): void;
/**
 * ```
 * SET_VEHICLE_W* (next character is either H or I)
 * ```
 * Hash: 0x2C4A1590ABF43E8B | ApiSet: undefined
 */
export declare function _0x2C4A1590ABF43E8B(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0x35BB21DE06784373 | ApiSet: undefined
 */
export declare function _0x35BB21DE06784373(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x2310A8F9421EBF43 | ApiSet: undefined
 */
export declare function _0x2310A8F9421EBF43(p0: any): void;
/**
 * Hash: 0x3441CAD2F2231923 | ApiSet: undefined
 */
export declare function _0x3441CAD2F2231923(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0x35E0654F4BAD7971 | ApiSet: undefined
 */
export declare function _0x35E0654F4BAD7971(p0: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x407DC5E97DB1A4D3 | ApiSet: undefined
 */
export declare function _0x407DC5E97DB1A4D3(p0: any, p1: any): void;
/**
 * ```
 * CLEAR_VEHICLE_*
 * ```
 * Hash: 0x4419966C9936071A | ApiSet: undefined
 */
export declare function _0x4419966C9936071A(vehicle: number | Vehicle): void;
/**
 * ```
 * Does nothing. It's a nullsub.
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x36DE109527A2C0C4 | ApiSet: undefined
 */
export declare function _0x36DE109527A2C0C4(toggle: boolean): void;
/**
 * Hash: 0x41290B40FA63E6DA | ApiSet: undefined
 */
export declare function _0x41290B40FA63E6DA(p0: any): void;
/**
 * ```
 * SET_*
 * ```
 * Hash: 0x428AD3E26C8D9EB0 | ApiSet: undefined
 */
export declare function _0x428AD3E26C8D9EB0(vehicle: number | Vehicle, position: Vector3, p4: number): void;
/**
 * Hash: 0x51DB102F4A3BA5E0 | ApiSet: undefined
 */
export declare function _0x51DB102F4A3BA5E0(toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x4AD280EB48B2D8E6 | ApiSet: undefined
 */
export declare function _0x4AD280EB48B2D8E6(vehicle: number | Vehicle, togle: boolean): void;
/**
 * ```
 * Usually used alongside other vehicle door natives.
 * ```
 * Hash: 0x3B458DDB57038F08 | ApiSet: undefined
 */
export declare function _0x3B458DDB57038F08(vehicle: number | Vehicle, doorIndex: number, toggle: boolean): void;
/**
 * Usex in decompiled scripts in combination with [`_GET_VEHICLE_SUSPENSION_BOUNDS`](#\_0xDF7E3EEB29642C38).
 * NativeDB Introduced: v1180
 * ```
 * // Example from fm_bj_race_controller.c
 * `if (!VEHICLE::_0x51F30DB60626A20E(uParam0->f_26, uParam0->f_12.f_3, uParam0->f_12, 2, 1) && !func_282(uParam0->f_6))`
 * {
 * `VEHICLE::_GET_VEHICLE_SUSPENSION_BOUNDS(*uParam0, &vVar15, &uVar16);`
 * `VEHICLE::_GET_VEHICLE_SUSPENSION_BOUNDS(uParam0->f_26, &vVar17, &uVar18);`
 * `fVar19 = SYSTEM::VDIST2(0f, 0f, vVar15.z, 0f, 0f, vVar17.z);`
 * uParam0->f_12.f_3.f_2 = (uParam0->f_12.f_3.f_2 + fVar19);
 * `if (!VEHICLE::_0x51F30DB60626A20E(uParam0->f_26, uParam0->f_12.f_3, uParam0->f_12, 2, 1))`
 * {
 * uParam0->f_12.f_3 = { uParam0->f_6 };
 * uParam0->f_12 = { uParam0->f_9 };
 * }
 * }
 * ```
 * Hash: 0x51F30DB60626A20E | ApiSet: undefined
 */
export declare function _0x51F30DB60626A20E(vehicle: number | Vehicle, position: Vector3, rotX: number, rotY: number, rotZ: number, p7: number, p8: any): boolean;
/**
 * Hash: 0x56EB5E94318D3FB6 | ApiSet: undefined
 */
export declare function _0x56EB5E94318D3FB6(vehicle: number | Vehicle, p1: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x430A7631A84C9BE7 | ApiSet: undefined
 */
export declare function _0x430A7631A84C9BE7(p0: any): void;
/**
 * Hash: 0x5BA68A0840D546AC | ApiSet: undefined
 */
export declare function _0x5BA68A0840D546AC(p0: any, p1: any): any;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0x59C3757B3B7408E8 | ApiSet: undefined
 */
export declare function _0x59C3757B3B7408E8(vehicle: number | Vehicle, toggle: boolean, p2: number): void;
/**
 * Hash: 0x4D9D109F63FEE1D4 | ApiSet: undefined
 */
export declare function _0x4D9D109F63FEE1D4(p0: any, p1: boolean): void;
/**
 * Hash: 0x5E569EC46EC21CAE | ApiSet: undefined
 */
export declare function _0x5E569EC46EC21CAE(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * Sets some health value. Looks like it's used for helis.
 * ```
 * Hash: 0x5EE5632F47AE9695 | ApiSet: undefined
 */
export declare function _0x5EE5632F47AE9695(vehicle: number | Vehicle, health: number): void;
/**
 * Hash: 0x6501129C9E0FFA05 | ApiSet: undefined
 */
export declare function _0x6501129C9E0FFA05(p0: any, p1: any): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x5BBCF35BF6E456F7 | ApiSet: undefined
 */
export declare function _0x5BBCF35BF6E456F7(toggle: boolean): void;
/**
 * Hash: 0x65B080555EA48149 | ApiSet: undefined
 */
export declare function _0x65B080555EA48149(p0: any): void;
/**
 * Hash: 0x5845066D8A1EA7F7 | ApiSet: undefined
 */
export declare function _0x5845066D8A1EA7F7(vehicle: number | Vehicle, position: Vector3, p4: any): void;
/**
 * Hash: 0x6EAAEFC76ACC311F | ApiSet: undefined
 */
export declare function _0x6EAAEFC76ACC311F(p0: any): any;
/**
 * Hash: 0x66E3AAFACE2D1EB8 | ApiSet: undefined
 */
export declare function _0x66E3AAFACE2D1EB8(p0: any, p1: any, p2: any): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x6A973569BA094650 | ApiSet: undefined
 */
export declare function _0x6A973569BA094650(vehicle: number | Vehicle, p1: any): void;
/**
 * Hash: 0x72BECCF4B829522E | ApiSet: undefined
 */
export declare function _0x72BECCF4B829522E(p0: any, p1: any): void;
/**
 * Last named native above this one is `TRACK_VEHICLE_VISIBILITY` and first named native below is `UNCUFF_PED`.
 * Unknown what it does, couldn't find good examples in the decompiled scripts.
 * Hash: 0x725012A415DBA050 | ApiSet: undefined
 */
export declare function _0x725012A415DBA050(p0: any, p2: any): [any, any];
/**
 * Hash: 0x737E398138550FFF | ApiSet: undefined
 */
export declare function _0x737E398138550FFF(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x6EBFB22D646FFC18 | ApiSet: undefined
 */
export declare function _0x6EBFB22D646FFC18(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0x796A877E459B99EA | ApiSet: undefined
 */
export declare function _0x796A877E459B99EA(p0: any, p1: number, p2: number, p3: number): void;
/**
 * Hash: 0x78CEEE41F49F421F | ApiSet: undefined
 */
export declare function _0x78CEEE41F49F421F(p0: any, p1: any): void;
/**
 * Hash: 0x73561D4425A021A2 | ApiSet: undefined
 */
export declare function _0x73561D4425A021A2(p0: any, p1: any): void;
/**
 * Hash: 0x7BBE7FF626A591FE | ApiSet: undefined
 */
export declare function _0x7BBE7FF626A591FE(p0: any): void;
/**
 * Hash: 0x80E3357FDEF45C21 | ApiSet: undefined
 */
export declare function _0x80E3357FDEF45C21(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * SET_VEHICLE_*
 * ```
 * Hash: 0x76D26A22750E849E | ApiSet: undefined
 */
export declare function _0x76D26A22750E849E(vehicle: number | Vehicle): void;
/**
 * ```
 * SET_VEHICLE_AL*
 * ```
 * Hash: 0x7D6F9A3EF26136A0 | ApiSet: undefined
 */
export declare function _0x7D6F9A3EF26136A0(vehicle: number | Vehicle, toggle: boolean, p2: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2189
 * ```
 * Hash: 0x8664170EF165C4A6 | ApiSet: undefined
 */
export declare function _0x8664170EF165C4A6(p0: any, p1: any): void;
/**
 * ```
 * Does nothing. It's a nullsub.
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x82E0AC411E41A5B4 | ApiSet: undefined
 */
export declare function _0x82E0AC411E41A5B4(toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x8235F1BEAD557629 | ApiSet: undefined
 */
export declare function _0x8235F1BEAD557629(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x8533CAFDE1F0F336 | ApiSet: undefined
 */
export declare function _0x8533CAFDE1F0F336(p0: any): any;
/**
 * Hash: 0x870B8B7A766615C8 | ApiSet: undefined
 */
export declare function _0x870B8B7A766615C8(p0: any, p1: any, p2: any): void;
/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * Hash: 0x887FA38787DE8C72 | ApiSet: undefined
 */
export declare function _0x887FA38787DE8C72(vehicle: number | Vehicle): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x8821196D91FA2DE5 | ApiSet: undefined
 */
export declare function _0x8821196D91FA2DE5(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Will disable a plane or a helicopter's need to swerve around object in its heightmap when using TASK_PLANE_MISSION or other AI / Pilot behavior.  Will ensure plane flys directly to it's destination or die trying! This native does NOT need to be called every frame, but instead, just called once on the vehicle (NOT THE PED) you're trying to disable avoidance for!
 * Hash: 0x8AA9180DE2FEDD45 | ApiSet: undefined
 */
export declare function enableAircraftObstacleAvoidance(vehicle: number | Vehicle, avoidObstacles: boolean): void;
/**
 * Hash: 0x88BC673CA9E0AE99 | ApiSet: undefined
 */
export declare function _0x88BC673CA9E0AE99(vehicle: number | Vehicle, p1: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x9640E30A7F395E4B | ApiSet: undefined
 */
export declare function _0x9640E30A7F395E4B(vehicle: number | Vehicle, p1: any, p2: any, p3: any, p4: any): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x9849DE24FCF23CCC | ApiSet: undefined
 */
export declare function _0x9849DE24FCF23CCC(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x8F0D5BA1C2CC91D7 | ApiSet: undefined
 */
export declare function _0x8F0D5BA1C2CC91D7(toggle: boolean): void;
/**
 * ```
 * Does nothing. It's a nullsub.
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x99A05839C46CE316 | ApiSet: undefined
 */
export declare function _0x99A05839C46CE316(toggle: boolean): void;
/**
 * Hash: 0x9D30687C57BAA0BB | ApiSet: undefined
 */
export declare function _0x9D30687C57BAA0BB(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x97841634EF7DF1D6 | ApiSet: undefined
 */
export declare function _0x97841634EF7DF1D6(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x9F3F689B814F2599 | ApiSet: undefined
 */
export declare function _0x9F3F689B814F2599(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0x9BDDC73CC6A115D4 | ApiSet: undefined
 */
export declare function _0x9BDDC73CC6A115D4(vehicle: number | Vehicle, p1: boolean, p2: boolean): void;
/**
 * Hash: 0x99CAD8E7AFDB60FA | ApiSet: undefined
 */
export declare function _0x99CAD8E7AFDB60FA(vehicle: number | Vehicle, p1: number, p2: number): void;
/**
 * ```
 * Only used in R* Script fm_content_cargo
 * ```
 * ```
 * NativeDB Introduced: v2699
 * ```
 * Hash: 0xEF9D388F8D377F44 | ApiSet: undefined
 */
export declare function _0xEF9D388F8D377F44(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0x9BECD4B9FEF3F8A6 | ApiSet: undefined
 */
export declare function _0x9BECD4B9FEF3F8A6(vehicle: number | Vehicle, p1: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xA4A9A4C40E615885 | ApiSet: undefined
 */
export declare function _0xA4A9A4C40E615885(p0: any): void;
/**
 * Gets hash related to task happening with seat index
 * Native name: GET_I\*
 * Hash: 0xA01BC64DD4BFBBAC | ApiSet: undefined
 */
export declare function _0xA01BC64DD4BFBBAC(vehicle: number | Vehicle, seatIndex: number): number;
/**
 * Hash: 0xA247F9EF01D8082E | ApiSet: undefined
 */
export declare function _0xA247F9EF01D8082E(p0: any): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xAA653AE61924B0A0 | ApiSet: undefined
 */
export declare function _0xAA653AE61924B0A0(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0xA7DCDF4DED40A8F4 | ApiSet: undefined
 */
export declare function _0xA7DCDF4DED40A8F4(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0xA4822F1CF23F4810 | ApiSet: undefined
 */
export declare function _0xA4822F1CF23F4810(p3: any, p4: any, p5: any, p6: any, p7: any, p8: any): [boolean, Vector3, Vector3, Vector3];
/**
 * Hash: 0xAB04325045427AAE | ApiSet: undefined
 */
export declare function _0xAB04325045427AAE(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0xAB31EF4DE6800CE9 | ApiSet: undefined
 */
export declare function _0xAB31EF4DE6800CE9(p0: any, p1: any): void;
/**
 * Hash: 0xAE3FEE8709B39DCB | ApiSet: undefined
 */
export declare function _0xAE3FEE8709B39DCB(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0xB9562064627FF9DB | ApiSet: undefined
 */
export declare function _0xB9562064627FF9DB(p0: any, p1: any): void;
/**
 * Hash: 0xAF60E6A2936F982A | ApiSet: undefined
 */
export declare function _0xAF60E6A2936F982A(p0: any, p1: any): void;
/**
 * ```
 * SET_C*
 * ```
 * Hash: 0xB2E0C0D6922D31F2 | ApiSet: undefined
 */
export declare function _0xB2E0C0D6922D31F2(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xB68CFAF83A02768D | ApiSet: undefined
 */
export declare function _0xB68CFAF83A02768D(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0xC0ED6438E6D39BA8 | ApiSet: undefined
 */
export declare function _0xC0ED6438E6D39BA8(p0: any, p1: any, p2: any): void;
/**
 * Hash: 0xBB2333BB87DDD87F | ApiSet: undefined
 */
export declare function _0xBB2333BB87DDD87F(p0: any, p1: any): void;
/**
 * Hash: 0xBE5C1255A1830FF5 | ApiSet: undefined
 */
export declare function _0xBE5C1255A1830FF5(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * SET_VEHICLE_LI*
 * ```
 * Hash: 0xC50CE861B55EAB8B | ApiSet: undefined
 */
export declare function _0xC50CE861B55EAB8B(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0xCF9159024555488C | ApiSet: undefined
 */
export declare function _0xCF9159024555488C(p0: any): void;
/**
 * Hash: 0xD3301660A57C9272 | ApiSet: undefined
 */
export declare function _0xD3301660A57C9272(p0: any): void;
/**
 * Hash: 0xD3E51C0AB8C26EEE | ApiSet: undefined
 */
export declare function _0xD3E51C0AB8C26EEE(p0: any, p1: any): any;
/**
 * Vehicle must be a plane.
 * Native name is between SET_VEHICLE_BRAKE_LIGHTS and SET_VEHICLE_BULLDOZER_ARM_POSITION alphabetically.
 * Hash: 0xC361AA040D6637A8 | ApiSet: undefined
 */
export declare function _0xC361AA040D6637A8(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0xC4B3347BD68BD609 | ApiSet: undefined
 */
export declare function _0xC4B3347BD68BD609(p0: any): void;
/**
 * Hash: 0xD4196117AF7BB974 | ApiSet: undefined
 */
export declare function _0xD4196117AF7BB974(p0: any, p1: any): any;
/**
 * ```
 * Related to locking the vehicle or something similar.
 * In the decompiled scripts, its always called after
 * `VEHICLE::_SET_EXCLUSIVE_DRIVER(a_0, 0, 0);`
 * `VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(a_0, 1);`
 * `VEHICLE::SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(a_0, PLAYER::PLAYER_ID(), 0);`
 * ```
 * Hash: 0xDBC631F109350B8C | ApiSet: undefined
 */
export declare function _0xDBC631F109350B8C(vehicle: number | Vehicle, p1: boolean): void;
/**
 * ```
 * what does this do?
 * ```
 * Hash: 0xCFD778E7904C255E | ApiSet: undefined
 */
export declare function _0xCFD778E7904C255E(vehicle: number | Vehicle): void;
/**
 * Hash: 0xD565F438137F0E10 | ApiSet: undefined
 */
export declare function _0xD565F438137F0E10(p0: any, p1: any): void;
/**
 * Hash: 0xE05DD0E9707003A3 | ApiSet: undefined
 */
export declare function _0xE05DD0E9707003A3(p0: any, p1: boolean): void;
/**
 * ```
 * NativeDB Added Parameter 1: Vehicle vehicle
 * NativeDB Added Parameter 2: Any p1
 * ```
 * Hash: 0xDCE97BDF8A0EABC8 | ApiSet: undefined
 */
export declare function _0xDCE97BDF8A0EABC8(): void;
/**
 * Hash: 0xE5810AC70602F2F5 | ApiSet: undefined
 */
export declare function _0xE5810AC70602F2F5(vehicle: number | Vehicle, p1: number): void;
/**
 * ```
 * GET_H*
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0xE8718FAF591FD224 | ApiSet: undefined
 */
export declare function _0xE8718FAF591FD224(vehicle: number | Vehicle): boolean;
/**
 * ```
 * RESET_*
 * Resets the effect of 0x428AD3E26C8D9EB0
 * ```
 * Hash: 0xE2F53F172B45EDE1 | ApiSet: undefined
 */
export declare function _0xE2F53F172B45EDE1(): void;
/**
 * Hash: 0xED5EDE9E676643C9 | ApiSet: undefined
 */
export declare function _0xED5EDE9E676643C9(p0: any, p1: any): void;
/**
 * Hash: 0xE851E480B814D4BA | ApiSet: undefined
 */
export declare function _0xE851E480B814D4BA(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0xF25E02CB9C5818F8 | ApiSet: undefined
 */
export declare function _0xF25E02CB9C5818F8(): void;
/**
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0xF8B49F5BA7F850E7 | ApiSet: undefined
 */
export declare function _0xF8B49F5BA7F850E7(vehicle: number | Vehicle, p1: number): void;
/**
 * Hash: 0xFAF2A78061FD9EF4 | ApiSet: undefined
 */
export declare function _0xFAF2A78061FD9EF4(p0: any, p1: number, p2: number, p3: number): void;
/**
 * Hash: 0x87E7F24270732CB1 | ApiSet: undefined
 */
export declare function openBombBayDoors(vehicle: number | Vehicle): void;
/**
 * ```
 * Implemented only for Trains.
 * ```
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xEC0C1D4922AF9754 | ApiSet: undefined
 */
export declare function networkUseHighPrecisionVehicleBlending(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0xF051D9BFB6BA39C0 | ApiSet: undefined
 */
export declare function _0xF051D9BFB6BA39C0(p0: any): void;
/**
 * Detaches the vehicle's windscreen.
 * Hash: 0x6D645D59FB5F5AD3 | ApiSet: undefined
 */
export declare function popOutVehicleWindscreen(vehicle: number | Vehicle): void;
/**
 * Hash: 0xF3B0E0AED097A3F5 | ApiSet: undefined
 */
export declare function _0xF3B0E0AED097A3F5(p0: any, p1: any): any;
/**
 * Hash: 0x445D79F995508307 | ApiSet: undefined
 */
export declare function releasePreloadMods(vehicle: number | Vehicle): void;
/**
 * Hash: 0x632A689BF42301B1 | ApiSet: undefined
 */
export declare function pausePlaybackRecordedVehicle(vehicle: number | Vehicle): void;
/**
 * ```
 * Retracts the hook on the cargobob.
 * Note: after you retract it the natives for dropping the hook no longer work
 * ```
 * Hash: 0x9768CF648F54C804 | ApiSet: undefined
 */
export declare function removePickUpRopeForCargobob(cargobob: number | Vehicle): void;
/**
 * Raises the roof on a convertible vehicle, utilizing any available animations for the action. This native is particularly useful for creating a realistic interaction with convertible vehicles by animating the process of raising the roof.
 * You can check if the vehicle has an convertible roof using [`IS_VEHICLE_A_CONVERTIBLE`](#\_0x52F357A30698BCCE).
 * To lower the convertible roof, you can use [`LOWER_CONVERTIBLE_ROOF`](#\_0xDED51F703D0FA83D).
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x8F5FB35D7E88FC70 | ApiSet: undefined
 */
export declare function raiseConvertibleRoof(vehicle: number | Vehicle, instantlyRaise: boolean): void;
/**
 * Hash: 0x00689CDE5F7C6787 | ApiSet: undefined
 */
export declare function removeVehicleHighDetailModel(vehicle: number | Vehicle): void;
/**
 * Hash: 0xACE699C71AB9DEB5 | ApiSet: undefined
 */
export declare function removeVehicleAsset(vehicleAsset: number): void;
/**
 * See [REQUEST_VEHICLE_RECORDING](#\_0xAF514CABE74CBF15)
 * Hash: 0xF1160ACCF98A3FC8 | ApiSet: undefined
 */
export declare function removeVehicleRecording(recording: number, script: string): void;
/**
 * Hash: 0x758F49C24925568A | ApiSet: undefined
 */
export declare function preloadVehicleMod(p0: any, modType: number, p2: any): void;
/**
 * Hash: 0xE30524E1871F481D | ApiSet: undefined
 */
export declare function removeVehicleCombatAvoidanceArea(p0: any): void;
/**
 * Hash: 0xF660602546D27BA8 | ApiSet: undefined
 */
export declare function raiseRetractableWheels(vehicle: number | Vehicle): void;
/**
 * Remove the weird shadow applied by [\_SET_VEHICLE_SHADOW_EFFECT](#\_0x2A70BAE8883E4C81)
 * Hash: 0xF87D9F2301F7D206 | ApiSet: undefined
 */
export declare function removeVehicleShadowEffect(vehicle: number | Vehicle): void;
/**
 * Hash: 0x92D619E420858204 | ApiSet: undefined
 */
export declare function removeVehicleMod(vehicle: number | Vehicle, modType: number): void;
/**
 * Hash: 0x1033371FC8E842A7 | ApiSet: undefined
 */
export declare function removeRoadNodeSpeedZone(speedzone: number): boolean;
/**
 * Hash: 0x8386BFB614D06749 | ApiSet: undefined
 */
export declare function removeVehicleStuckCheck(vehicle: number | Vehicle): void;
/**
 * See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
 * Hash: 0xA711568EEDB43069 | ApiSet: undefined
 */
export declare function removeVehicleWindow(vehicle: number | Vehicle, windowIndex: number): void;
/**
 * Hash: 0xC53EB42A499A7E90 | ApiSet: undefined
 */
export declare function removeVehicleUpsidedownCheck(vehicle: number | Vehicle): void;
/**
 * Hash: 0x46A1E1A299EC4BBA | ApiSet: undefined
 */
export declare function removeVehiclesFromGeneratorsInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, unk: any): void;
/**
 * ```
 * REQUEST_VEHICLE_ASSET(GET_HASH_KEY(cargobob3), 3);
 * vehicle found that have asset's:
 * cargobob3
 * submersible
 * blazer
 * ```
 * Hash: 0x81A15811460FAB3A | ApiSet: undefined
 */
export declare function requestVehicleAsset(vehicleHash: number | string, vehicleAsset: number): void;
/**
 * ```
 * Request the vehicle recording defined by the lowercase format string "%s%03d.yvr". For example, REQUEST_VEHICLE_RECORDING(1, "FBIs1UBER") corresponds to fbis1uber001.yvr.
 * For all vehicle recording/playback natives, "script" is a common prefix that usually corresponds to the script/mission the recording is used in, "recording" is its int suffix, and "id" (e.g., in native GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID) corresponds to a unique identifier within the recording streaming module.
 * Note that only 24 recordings (hardcoded in multiple places) can ever active at a given time before clobbering begins.
 * ```
 * Hash: 0xAF514CABE74CBF15 | ApiSet: undefined
 */
export declare function requestVehicleRecording(recording: number, script: string): void;
/**
 * ```
 * REQUEST_VEHICLE_*
 * ```
 * Hash: 0xDBA3C090E3D74690 | ApiSet: undefined
 */
export declare function requestVehicleDashboardScaleformMovie(vehicle: number | Vehicle): void;
/**
 * Hash: 0xA6E9FDCB2C76785E | ApiSet: undefined
 */
export declare function requestVehicleHighDetailModel(vehicle: number | Vehicle): void;
/**
 * ```
 * The inner function has a switch on the second parameter. It's the stuck timer index.
 * Here's some pseudo code I wrote for the inner function:
 * void __fastcall NATIVE_RESET_VEHICLE_STUCK_TIMER_INNER(CUnknown* unknownClassInVehicle, int timerIndex)
 * {
 * switch (timerIndex)
 * {
 * case 0:
 * unknownClassInVehicle->FirstStuckTimer = (WORD)0u;
 * case 1:
 * unknownClassInVehicle->SecondStuckTimer = (WORD)0u;
 * case 2:
 * unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;
 * case 3:
 * unknownClassInVehicle->FourthStuckTimer = (WORD)0u;
 * case 4:
 * unknownClassInVehicle->FirstStuckTimer = (WORD)0u;
 * unknownClassInVehicle->SecondStuckTimer = (WORD)0u;
 * unknownClassInVehicle->ThirdStuckTimer = (WORD)0u;
 * unknownClassInVehicle->FourthStuckTimer = (WORD)0u;
 * break;
 * };
 * }
 * ```
 * Hash: 0xD7591B0065AFAA7A | ApiSet: undefined
 */
export declare function resetVehicleStuckTimer(vehicle: number | Vehicle, nullAttributes: number): void;
/**
 * See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
 * Hash: 0x7AD9E6CE657D69E3 | ApiSet: undefined
 */
export declare function rollDownWindow(vehicle: number | Vehicle, windowIndex: number): void;
/**
 * ```
 * Roll down all the windows of the vehicle passed through the first parameter.
 * ```
 * Hash: 0x85796B0549DDE156 | ApiSet: undefined
 */
export declare function rollDownWindows(vehicle: number | Vehicle): void;
/**
 * Hash: 0x21D2E5662C1F6FED | ApiSet: undefined
 */
export declare function resetVehicleWheels(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
 * Hash: 0x602E548F46E24D59 | ApiSet: undefined
 */
export declare function rollUpWindow(vehicle: number | Vehicle, windowIndex: number): void;
/**
 * Hash: 0x34AD89078831A4BC | ApiSet: undefined
 */
export declare function setAllVehicleGeneratorsActive(): void;
/**
 * Hash: 0x608207E7A8FB787C | ApiSet: undefined
 */
export declare function setAllLowPriorityVehicleGeneratorsActive(active: boolean): void;
/**
 * Hash: 0xC12321827687FE4D | ApiSet: undefined
 */
export declare function setAllVehicleGeneratorsActiveInArea(x1: number, y1: number, z1: number, x2: number, y2: number, z2: number, p6: boolean, p7: boolean): void;
/**
 * Hash: 0x90B6DA738A9A25DA | ApiSet: undefined
 */
export declare function setAmbientVehicleRangeMultiplierThisFrame(range: number): void;
/**
 * ```
 * Only works on bikes, both X and Y work in the -1 - 1 range.
 * X forces the bike to turn left or right (-1, 1)
 * Y forces the bike to lean to the left or to the right (-1, 1)
 * Example with X -1/Y 1
 * http://i.imgur.com/TgIuAPJ.jpg
 * ```
 * Hash: 0x9CFA4896C3A53CBB | ApiSet: undefined
 */
export declare function setBikeOnStand(vehicle: number | Vehicle, x: number, y: number): void;
/**
 * Sets the anchor state for a boat.
 * ```
 * NativeDB Introduced: v323
 * ```
 * **Note**: You might want to check if you can use your anchor before with [CAN_ANCHOR_BOAT_HERE](#\_0x26C10ECBDA5D043B).
 * Hash: 0x75DBEC174AEEAD10 | ApiSet: undefined
 */
export declare function setBoatAnchor(boat: number | Vehicle, toggle: boolean): void;
/**
 * Sets the boat boom position for the `TR3` trailer.
 * Ratio value is between `0.0` and `1.0`, where `0.0` is 90 degrees to the left of the boat, and `1.0` is just slightly to the right/back of the boat.
 * To get the current boom position ratio, use [GET_BOAT_BOOM_POSITION_RATIO](#\_0x6636C535F6CC2725).
 * Hash: 0xF488C566413B4232 | ApiSet: undefined
 */
export declare function setBoatBoomPositionRatio(vehicle: number | Vehicle, ratio: number): void;
/**
 * Hash: 0x0A6A279F3AA4FD70 | ApiSet: undefined
 */
export declare function setBoatDisableAvoidance(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0x8F719973E1445BA2 | ApiSet: undefined
 */
export declare function setBoatSinksWhenWrecked(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Sets whether a boat should remain anchored even when a player is driving it.
 * **Note**: This native is always used with [SET_BOAT_ANCHOR](#\_0x75DBEC174AEEAD10).
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xE3EBAAE484798530 | ApiSet: undefined
 */
export declare function setBoatRemainsAnchoredWhilePlayerIsDriver(boat: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0xBD32E46AA95C1DD2 | ApiSet: undefined
 */
export declare function setBoatIsSinking(vehicle: number | Vehicle): void;
/**
 * ```
 * Hardcoded to not work in multiplayer.
 * ```
 * Hash: 0x52BBA29D5EC69356 | ApiSet: undefined
 */
export declare function setCanResprayVehicle(vehicle: number | Vehicle, state: boolean): void;
/**
 * Sets the distance from the player at which anchored boats switch between high and low LOD (Level of Detail) buoyancy mode.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xE842A9398079BD82 | ApiSet: undefined
 */
export declare function setBoatLowLodAnchorDistance(boat: number | Vehicle, value: number): void;
/**
 * Hash: 0x1201E8A3290A3B98 | ApiSet: undefined
 */
export declare function setCamberedWheelsDisabled(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x685D5561680D088B | ApiSet: undefined
 */
export declare function setCargobobPickupMagnetFalloff(vehicle: number | Vehicle, p1: number): void;
/**
 * Hash: 0xED8286F71A819BAA | ApiSet: undefined
 */
export declare function setCargobobPickupMagnetPullStrength(cargobob: number | Vehicle, p1: number): void;
/**
 * ```
 * Something to do with "high speed bump severity"?
 * if (!sub_87a46("SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER")) {
 * `VEHICLE::_84FD40F56075E816(0.0);`
 * sub_8795b("SET_CAR_HIGH_SPEED_BUMP_SEVERITY_MULTIPLIER", 1);
 * }
 * ```
 * Hash: 0x84FD40F56075E816 | ApiSet: undefined
 */
export declare function setCarHighSpeedBumpSeverityMultiplier(multiplier: number): void;
/**
 * ```
 * Stops the cargobob from being able to attach any vehicle
 * ```
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x94A68DA412C4007D | ApiSet: undefined
 */
export declare function setCargobobHookCanAttach(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x6D8EAC07506291FB | ApiSet: undefined
 */
export declare function setCargobobPickupMagnetPullRopeLength(cargobob: number | Vehicle, p1: number): void;
/**
 * Hash: 0xBCBFCD9D1DAC19E2 | ApiSet: undefined
 */
export declare function setCargobobPickupMagnetStrength(cargobob: number | Vehicle, strength: number): void;
/**
 * Prevents a specified entity from being detached from a Cargobob, even in the event of collisions.
 * Hash: 0x1F34B0626C594380 | ApiSet: undefined
 */
export declare function setCargobobExcludeFromPickupEntity(cargobob: number | Vehicle, entity: number | Entity): void;
/**
 * Hash: 0x66979ACF5102FD2F | ApiSet: undefined
 */
export declare function setCargobobPickupMagnetReducedFalloff(cargobob: number | Vehicle, p1: number): void;
/**
 * Stops cargobob from being able to detach the attached vehicle.
 * Hash: 0x571FEB383F629926 | ApiSet: undefined
 */
export declare function setCargobobForceDontDetachVehicle(cargobob: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * Won't attract or magnetize to any helicopters or planes of course, but that's common sense.
 * ```
 * Hash: 0x9A665550F8DA349B | ApiSet: undefined
 */
export declare function setCargobobPickupMagnetActive(cargobob: number | Vehicle, isActive: boolean): void;
/**
 * Hash: 0x0D5F65A8F4EBDAB5 | ApiSet: undefined
 */
export declare function setCargobobPickupRopeType(vehicle: number | Vehicle, state: number): void;
/**
 * Hash: 0xA17BAD153B51547E | ApiSet: undefined
 */
export declare function setCargobobPickupMagnetEffectRadius(vehicle: number | Vehicle, p1: number): void;
/**
 * Hash: 0xE301BD63E9E13CF0 | ApiSet: undefined
 */
export declare function setCargobobPickupMagnetReducedStrength(cargobob: number | Vehicle, vehicle: number | Vehicle): void;
/**
 * Only used with the "akula" and "annihilator2" in the decompiled native scripts.
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xB251E0B33E58B424 | ApiSet: undefined
 */
export declare function setDeployHeliStubWings(vehicle: number | Vehicle, deploy: boolean, p2: boolean): void;
/**
 * This works on helicopters and planes.
 * Prevents a helicopter from exploding due to relatively minor body damage.
 * ```
 * NativeDB Introduced: v1103
 * ```
 * Hash: 0xEDBC8405B3895CC9 | ApiSet: undefined
 */
export declare function setDisableHeliExplodeFromBodyDamage(helicopter: number | Vehicle, disableExplode: boolean): void;
/**
 * This native is used to latch or unlatch the convertible roof of a vehicle. It allows for direct control over the roof's mechanism without actually opening or closing the roof. This can be useful for scenarios where you need to prepare a vehicle's roof to be opened or closed by another action or to ensure it remains fixed in its current state regardless of other interactions.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x1A78AD3D8240536F | ApiSet: undefined
 */
export declare function setConvertibleRoofLatchState(vehicle: number | Vehicle, bLatched: boolean): void;
/**
 * Hash: 0xCF1182F682F65307 | ApiSet: undefined
 */
export declare function setCargobobPickupRopeDampingMultiplier(cargobob: number | Vehicle, p1: number): void;
/**
 * Enables or disables the convertible roof on vehicles that support old-style GTA IV roofs, which are not animated. Setting `toggle` to true will apply the roof to the vehicle, and setting it to false will remove the roof, assuming the vehicle has versions with and without a roof.
 * If you want to lock or unlock the roof mechanism, use [`SET_CONVERTIBLE_ROOF_LATCH_STATE`](#\_0x1A78AD3D8240536F).
 * You can check if the vehicle has a roof with [`DOES_VEHICLE_HAVE_ROOF`](#\_0x8AC862B0B32C5B80).
 * ```
 * NativeDB Introduced: v323
 * ```
 * #### Vehicles with both roofed and roofless versions (others may exist; this list is compiled from decompiled scripts).
 * *   chino
 * *   voltic
 * *   buccaneer
 * *   buccaneer2
 * *   chino2
 * *   faction
 * *   faction2
 * *   mamba
 * Hash: 0xF39C4F538B5124C2 | ApiSet: undefined
 */
export declare function setConvertibleRoof(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Prevents the plane from exploding when taking body damage if the inflictor is an AI-controlled vehicle. Only works for planes.
 * Hash: 0xB0B7DF5CB876FF5E | ApiSet: undefined
 */
export declare function setDisableExplodeFromBodyDamageReceivedByAiVehicle(plane: number | Vehicle, disable: boolean): void;
/**
 * This only works for planes.
 * Prevents a vehicle from exploding upon sustaining body damage from physical collisions.
 * For helicopters, you might want to check [`SET_DISABLE_HELI_EXPLODE_FROM_BODY_DAMAGE`](#\_0xEDBC8405B3895CC9) instead.
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x26E13D440E7F6064 | ApiSet: undefined
 */
export declare function setDisableExplodeFromBodyDamageOnCollision(vehicle: number | Vehicle, disableExplode: boolean): void;
/**
 * Disables turret movement when called in a loop. You can still fire and aim. You cannot shoot backwards though.
 * ```
 * NativeDB Introduced: v1365
 * ```
 * Hash: 0xE615BB7A7752C76A | ApiSet: undefined
 */
export declare function setDisableTurretMovementThisFrame(vehicle: number | Vehicle, turretIdx: number): void;
/**
 * Disables the additional physics forces applied to BMX bikes that enable them to perform tricks.
 * ```
 * NativeDB Introduced: v463
 * ```
 * Hash: 0x26D99D5A82FD18E8 | ApiSet: undefined
 */
export declare function setDisableBmxExtraTrickForces(disableExtraTrickForces: boolean): void;
/**
 * ```
 * True stops vtols from switching modes. Doesn't stop the sound though.
 * ```
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xCE2B43770B655F8F | ApiSet: undefined
 */
export declare function setDisableVehicleFlightNozzlePosition(vehicle: number | Vehicle, direction: boolean): void;
/**
 * Hash: 0xD4B8E3D1917BC86B | ApiSet: undefined
 */
export declare function setDisableRandomTrainsThisFrame(toggle: boolean): void;
/**
 * Hash: 0xB088E9A47AE6EDD5 | ApiSet: undefined
 */
export declare function setDisableSuperdummyMode(vehicle: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0x25367DE49D64CF16 | ApiSet: undefined
 */
export declare function setDisablePretendOccupants(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x143921E45EC44D62 | ApiSet: undefined
 */
export declare function setDisableVehicleUnk(toggle: boolean): void;
/**
 * Hash: 0x91A0BD635321F145 | ApiSet: undefined
 */
export declare function setDisableVehicleEngineFires(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Disables wings for `Deluxo` and `Oppressor MK II`. For the Deluxo, it retracts the wings immediately, preventing flight. For the Oppressor Mk II, the wings retract after landing and take-off is not possible, though it can still glide if launched into the air.
 * Hash: 0x2D55FE374D5FDB91 | ApiSet: undefined
 */
export declare function setDisableHoverModeFlight(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x97CE68CB032583F0 | ApiSet: undefined
 */
export declare function setForceHdVehicle(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x37C8252A7C92D017 | ApiSet: undefined
 */
export declare function setDisableVehiclePetrolTankDamage(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Sets whether a boat should remain in the non-physical, low LOD anchor mode even when a player is driving it.
 * **Note**: This native requires [SET_BOAT_REMAINS_ANCHORED_WHILE_PLAYER_IS_DRIVER](#\_0xE3EBAAE484798530) to be set to `true` to work properly.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0xB28B1FE5BFADD7F5 | ApiSet: undefined
 */
export declare function setForceLowLodAnchorMode(boat: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x211E95CE9903940C | ApiSet: undefined
 */
export declare function setDisableVehicleUnk2(toggle: boolean): void;
/**
 * Hash: 0x465BF26AB9684352 | ApiSet: undefined
 */
export declare function setDisableVehiclePetrolTankFires(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x2AFD795EEAC8D30D | ApiSet: undefined
 */
export declare function setGarbageTrucks(toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x5AC79C98C5C17F05 | ApiSet: undefined
 */
export declare function setDriftTyresEnabled(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * R\* used it to "remove" vehicle windows when "nightshark" had some mod, which adding some kind of armored windows. When enabled, you can't break vehicles glass. All your bullets wiil shoot through glass. You also will not able to break the glass with any other way (hitting and etc)
 * Hash: 0x1087BC8EC540DAEB | ApiSet: undefined
 */
export declare function setDisableVehicleWindowCollisions(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * Toggles to render distant vehicles. They may not be vehicles but images to look like vehicles.
 * ```
 * Hash: 0xF796359A959DF65D | ApiSet: undefined
 */
export declare function setDistantCarsEnabled(toggle: boolean): void;
/**
 * Enable/Disables global slipstream physics
 * Hash: 0xE6C0C80B8C867537 | ApiSet: undefined
 */
export declare function setEnableVehicleSlipstreaming(toggle: boolean): void;
/**
 * Hash: 0x26324F33423F3CC3 | ApiSet: undefined
 */
export declare function setFarDrawVehicles(toggle: boolean): void;
/**
 * Set a specific offset for helis chasing target in combat
 * ```
 * NativeDB Introduced: v1180
 * ```
 * Hash: 0x0A3F820A9A9A9AC5 | ApiSet: undefined
 */
export declare function setHeliCombatOffset(vehicle: number | Vehicle, position: Vector3): void;
/**
 * Hash: 0x4056EA1105F5ABD7 | ApiSet: undefined
 */
export declare function setHeliMainRotorHealth(vehicle: number | Vehicle, health: number): void;
/**
 * Enables or disables the ability for a helicopter's tail boom to break off.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x3EC8BF18AA453FE9 | ApiSet: undefined
 */
export declare function setHeliTailBoomCanBreakOff(heli: number | Vehicle, toggle: boolean): void;
/**
 * Despite its name, this works on Helicopters and Planes.
 * Sets the speed of the helicopter blades in percentage of the full speed.
 * Hash: 0xFD280B4D7F3ABC4D | ApiSet: undefined
 */
export declare function setHeliBladesSpeed(vehicle: number | Vehicle, speed: number): void;
/**
 * Hash: 0xFE205F38AAA58E5B | ApiSet: undefined
 */
export declare function setHeliTailRotorHealth(vehicle: number | Vehicle, health: number): void;
/**
 * Hash: 0xE6F13851780394DA | ApiSet: undefined
 */
export declare function setHeliTurbulenceScalar(vehicle: number | Vehicle, p1: number): void;
/**
 * ```
 * value between 0.0 and 1.0
 * ```
 * Hash: 0x6E0859B530A365CC | ApiSet: undefined
 */
export declare function setHelicopterRollPitchYawMult(helicopter: number | Vehicle, multiplier: number): void;
/**
 * ```
 * 0.0 = Lowest 1.0 = Highest. This is best to be used if you wanna pick-up a car since un-realistically on GTA V forklifts can't pick up much of anything due to vehicle mass. If you put this under a car then set it above 0.0 to a 'lifted-value' it will raise the car with no issue lol
 * ```
 * Hash: 0x37EBBF3117BD6A25 | ApiSet: undefined
 */
export declare function setForkliftForkHeight(vehicle: number | Vehicle, height: number): void;
/**
 * This native allows opening or closing the wings of the Deluxo/Oppressor. For the Deluxo, wing deployment depends on sufficient altitude.
 * Hash: 0x70A252F60A3E036B | ApiSet: undefined
 */
export declare function setHoverModeWingRatio(vehicle: number | Vehicle, ratio: number): void;
/**
 * Hash: 0x28B18377EB6E25F6 | ApiSet: undefined
 */
export declare function setHydraulicRaised(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x8EA86DF356801C7D | ApiSet: undefined
 */
export declare function setHydraulicWheelState(vehicle: number | Vehicle, state: number): void;
/**
 * Despite its name, this works on Helicopters and Planes.
 * Sets the speed of the helicopter blades to full speed.
 * This is equivalent to calling `SetHeliBladesSpeed(vehicleHandle, 1.0);`
 * Hash: 0xA178472EBB8AE60D | ApiSet: undefined
 */
export declare function setHeliBladesFullSpeed(vehicle: number | Vehicle): void;
/**
 * ```
 * Sets vehicle wheel hydraulic states transition. Known states:
 * 0 - reset
 * 1 - raise wheel (uses value arg, works just like _SET_VEHICLE_HYDRAULIC_WHEEL_VALUE)
 * 2 - jump using wheel
 * ```
 * Hash: 0xC24075310A8B9CD1 | ApiSet: undefined
 */
export declare function setHydraulicWheelStateTransition(vehicle: number | Vehicle, wheelId: number, state: number, value: number, p4: number): void;
/**
 * Hash: 0xACFB2463CC22BED2 | ApiSet: undefined
 */
export declare function setLastDrivenVehicle(vehicle: number | Vehicle): void;
/**
 * ```
 * Works only on vehicles that support hydraulic.
 * ```
 * Hash: 0x84EA99C62CB3EF0C | ApiSet: undefined
 */
export declare function setHydraulicWheelValue(vehicle: number | Vehicle, wheelId: number, value: number): void;
/**
 * Makes a helicopter resistant to multiple explosions. When enabled, helicopters can survive two or more explosions.
 * ```
 * NativeDB Introduced: 2545
 * ```
 * Hash: 0x8074CC1886802912 | ApiSet: undefined
 */
export declare function setHeliResistToExplosion(helicopter: number | Vehicle, bResistToExplosion: boolean): void;
/**
 * Hash: 0xBC3CCA5844452B06 | ApiSet: undefined
 */
export declare function setLightsCutoffDistanceTweak(distance: number): void;
/**
 * Enables or disables the opening of a vehicle's rear doors in the event of a sticky bomb explosion. This native is effective for armored vehicles, such as the Stockade (Brinks vehicle), allowing the rear doors to be opened through controlled explosions, which might otherwise remain locked due to the vehicle nature.
 * Hash: 0x1B212B26DD3C04DF | ApiSet: undefined
 */
export declare function setOpenRearDoorsOnExplosion(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: 3095
 * ```
 * Activates or deactivates the nitrous system in the specified vehicle, based on the boolean value provided.
 * You can clear the nitrous with [`CLEAR_NITROUS`](#\_0xC889AE921400E1ED), if you want to have more control on the nitrous and those settings, use [`SET_OVERRIDE_NITROUS_LEVEL`](#\_0xC8E9B6B71B8E660D)
 * Hash: 0x465EEA70AF251045 | ApiSet: undefined
 */
export declare function setNitrousIsActive(vehicle: number | Vehicle, isActive: boolean): void;
/**
 * ```
 * p1 is always 0
 * ```
 * Hash: 0xBBE7648349B49BE8 | ApiSet: undefined
 */
export declare function setMissionTrainAsNoLongerNeeded(train: number | Vehicle, p1: boolean): void;
/**
 * Hash: 0x591CA673AA6AB736 | ApiSet: undefined
 */
export declare function setMissionTrainCoords(train: number | Vehicle, position: Vector3): void;
/**
 * Set state to true to extend the wings, false to retract them.
 * Hash: 0x544996C0081ABDEB | ApiSet: undefined
 */
export declare function setOppressorTransformState(vehicle: number | Vehicle, extend: boolean): void;
/**
 * Hash: 0xCAA15F13EBD417FF | ApiSet: undefined
 */
export declare function setNumberOfParkedVehicles(value: number): void;
/**
 * ```
 * NativeDB Introduced: v1604
 * NativeDB Added Parameter 2 (2060): float durationMod : A multiplier applied to the default nitrous duration (default is 3 seconds).
 * NativeDB Added Parameter 3 (2060): float power : A multiplier applied to the default nitrous power multiplier (default is 3).
 * NativeDB Added Parameter 4 (2060): float rechargeTime : A multiplier applied to the default nitrous recharge rate.
 * NativeDB Added Parameter 5 (2060): BOOL disableSound : A boolean to disable the default nitrous sound when the nitrous is active.
 * ```
 * Overrides the default settings of a vehicle's nitrous system, allowing custom control over its performance characteristics.
 * Hash: 0xC8E9B6B71B8E660D | ApiSet: undefined
 */
export declare function setOverrideNitrousLevel(vehicle: number | Vehicle, override: boolean): void;
/**
 * ```
 * min: 1.9f, max: 100.0f
 * ```
 * Hash: 0x877C1EAEAC531023 | ApiSet: undefined
 */
export declare function setPickupRopeLengthForCargobob(cargobob: number | Vehicle, length1: number, length2: number, state: boolean): void;
/**
 * Hash: 0xEAE6DCC7EEE3DB1D | ApiSet: undefined
 */
export declare function setParkedVehicleDensityMultiplierThisFrame(multiplier: number): void;
/**
 * ```
 * Works just like SET_VEHICLE_ENGINE_HEALTH, didn't saw any difference. But this native works only for planes.
 * ```
 * Hash: 0x2A86A0475B6A1434 | ApiSet: undefined
 */
export declare function setPlaneEngineHealth(vehicle: number | Vehicle, health: number): void;
/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0xDD8A2D3337F04196 | ApiSet: undefined
 */
export declare function setPlaneControlSectionsShouldBreakOffFromExplosions(plane: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x6683AB880E427778 | ApiSet: undefined
 */
export declare function setPlaybackSpeed(vehicle: number | Vehicle, speed: number): void;
/**
 * Hash: 0x4C815EB175086F84 | ApiSet: undefined
 */
export declare function setPlanePropellersHealth(plane: number | Vehicle, health: number): void;
/**
 * Hash: 0xE16142B94664DEFD | ApiSet: undefined
 */
export declare function setPlaneResistToExplosion(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Sets flag on vehicle that changes behaviour in relation to when player gets wanted level
 * Hash: 0x4E74E62E0A97E901 | ApiSet: undefined
 */
export declare function setPoliceFocusWillTrackVehicle(vehicle: number | Vehicle, p1: boolean): void;
/**
 * This native sets the turbulence multiplier. It only works for planes.
 * 0.0 = no turbulence at all.
 * 1.0 = heavy turbulence.
 * Works by just calling it once, does not need to be called every tick.
 * Hash: 0xAD2D28A1AFDFF131 | ApiSet: undefined
 */
export declare function setPlaneTurbulenceMultiplier(vehicle: number | Vehicle, multiplier: number): void;
/**
 * Adjusts the scale of damage applied to a specified section of a plane.
 * In the decompiled scripts the `damageScale` is always set to `0f` (maybe to disable damages on the specified section)
 * ```cpp
 * enum ePlaneDamageSection {
 * WING_L = 0,
 * WING_R = 1,
 * TAIL = 2,
 * ENGINE_L = 3,
 * ENGINE_R = 4,
 * ELEVATOR_L = 5,
 * ELEVATOR_R = 6,
 * AILERON_L = 7,
 * AILERON_R = 8,
 * RUDDER = 9,
 * RUDDER_2 = 10,
 * AIRBRAKE_L = 11,
 * AIRBRAKE_R = 12
 * }
 * ```
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0x0BBB9A7A8FFE931B | ApiSet: undefined
 */
export declare function setPlaneSectionDamageScale(vehicle: number | Vehicle, damageSection: number, damageScale: number): void;
/**
 * Hash: 0xBCDF8BAF56C87B6A | ApiSet: undefined
 */
export declare function setPlayersLastVehicle(vehicle: number | Vehicle): void;
/**
 * ```
 * Time is number of milliseconds before reverting, zero for indefinitely.
 * ```
 * Hash: 0x6E63860BBB190730 | ApiSet: undefined
 */
export declare function setPlaybackToUseAiTryToRevertBackLater(vehicle: number | Vehicle, time: number, drivingStyle: number, p3: boolean): void;
/**
 * Identical to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER with 0 as arguments for p1 and p3.
 * Hash: 0xA549C3B37EA28131 | ApiSet: undefined
 */
export declare function setPlaybackToUseAi(vehicle: number | Vehicle, drivingStyle: number): void;
/**
 * Hash: 0x84436EC293B1415F | ApiSet: undefined
 */
export declare function setRandomBoats(toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0xDA5E12F728DB30CA | ApiSet: undefined
 */
export declare function setRandomBoatsInMp(toggle: boolean): void;
/**
 * Hash: 0xB3B3359379FE77D3 | ApiSet: undefined
 */
export declare function setRandomVehicleDensityMultiplierThisFrame(multiplier: number): void;
/**
 * Enables spawning random trains on the preset tracks.
 * Requires [`SWITCH_TRAIN_TRACK`](#\_0xFD813BB7DB977F20) and [`SET_TRAIN_TRACK_SPAWN_FREQUENCY`](#\_0x21973BBF8D17EDFA) to be set.
 * Hash: 0x80D9F74197EA47D9 | ApiSet: undefined
 */
export declare function setRandomTrains(toggle: boolean): void;
/**
 * ```
 * Only called once in the decompiled scripts. Presumably activates the specified generator.
 * ```
 * Hash: 0xD9D620E0AC6DC4B0 | ApiSet: undefined
 */
export declare function setScriptVehicleGenerator(vehicleGenerator: number, enabled: boolean): void;
/**
 * Lowers the vehicle's stance. Only works for vehicles that support this feature.
 * ```
 * NativeDB Introduced: v2372
 * ```
 * Hash: 0x3A375167F5782A65 | ApiSet: undefined
 */
export declare function setReduceDriftVehicleSuspension(vehicle: number | Vehicle, enable: boolean): void;
/**
 * ```
 * makes the train all jumbled up and derailed as it moves on the tracks (though that wont stop it from its normal operations)
 * ```
 * Hash: 0x317B11A312DF5534 | ApiSet: undefined
 */
export declare function setRenderTrainAsDerailed(train: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0xC59872A5134879C7 | ApiSet: undefined
 */
export declare function setSubmarineCrushDepths(vehicle: number | Vehicle, toggle: boolean, depth1: number, depth2: number, depth3: number): void;
/**
 * Allows locking the hover/non-hover mode of a vehicle, such as the flying mode of the `Deluxo`. In the decompiled scripts, this native is used on `oppressor2` but couldn't get it to work on it.
 * Hash: 0xF1211889DF15A763 | ApiSet: undefined
 */
export declare function setSpecialFlightModeAllowed(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Sets whether the trailer can attach to vehicles
 * Hash: 0x2FA2494B47FDD009 | ApiSet: undefined
 */
export declare function setTrailerAttachmentEnabled(vehicle: number | Vehicle, enabled: boolean): void;
/**
 * Used alongside [`SET_SPECIAL_FLIGHT_MODE_TARGET_RATIO`](#\_0x438B3D7CA026FE91), this function initiates hover transformation for vehicles with a hover mode, like the `Deluxo`, based on a specified ratio (0.0 to 1.0). Incorrect values can glitch the vehicle. Without pairing, vehicles revert to car mode. Ineffective on the `oppressor2`
 * Hash: 0xD138FA15C9776837 | ApiSet: undefined
 */
export declare function setSpecialFlightModeRatio(vehicle: number | Vehicle, ratio: number): void;
/**
 * According to decompiled scripts this should work with the `deluxo` and `oppressor2` vehicles.
 * Does nothing when used on `oppressor2`.
 * For the deluxo:
 * *   Set `state` to `0.0`: Fully transform to a 'road' vehicle (non-hover mode).
 * *   Set `state` to `1.0`: Fully transform to a 'flying' vehicle (hover mode).
 * If you set it to something like 0.5, then something [weird happens](https://streamable.com/p6wmr), you end up in some 50% hover mode, 50% not hover mode.
 * This doesn't need to be called every tick, just once and the vehicle will transform to that state at the usual transform speed. It'll just stop transforming when it reaches the state you provided.
 * Once this native is used then players will just be able to hit the vehicle transform key to toggle the transformation cycle; it won't block users from using the key.
 * Hash: 0x438B3D7CA026FE91 | ApiSet: undefined
 */
export declare function setSpecialFlightModeTargetRatio(vehicle: number | Vehicle, state: number): void;
/**
 * Hash: 0xB893215D8D4C015B | ApiSet: undefined
 */
export declare function setTaskVehicleGotoPlaneMinHeightAboveTerrain(plane: number | Vehicle, height: number): void;
/**
 * Used to control train speed, can be used to start and stop its movement as well.
 * Hash: 0x16469284DB8C62B5 | ApiSet: undefined
 */
export declare function setTrainCruiseSpeed(train: number | Vehicle, speed: number): void;
/**
 * Hash: 0x2A8F319B392E7B3F | ApiSet: undefined
 */
export declare function setTrailerInverseMassScale(vehicle: number | Vehicle, p1: number): void;
/**
 * ```
 * This is not tested - it's just an assumption.
 * Doesn't seem to work.  I'll try with an int instead. --JT
 * Read the scripts, im dumpass.
 * Doesn't work at all, wether with an bool neither an int
 * `if (!VEHICLE::IS_TAXI_LIGHT_ON(l_115)) {`
 * `VEHICLE::SET_TAXI_LIGHTS(l_115, 1);`
 * }
 * ```
 * Hash: 0x598803E85E8448D9 | ApiSet: undefined
 */
export declare function setTaxiLights(vehicle: number | Vehicle, state: boolean): void;
/**
 * ```
 * in the decompiled scripts, seems to be always called on the vehicle right after being attached to a trailer.
 * ```
 * Hash: 0x95CF53B3D687F9FA | ApiSet: undefined
 */
export declare function setTrailerLegsRaised(vehicle: number | Vehicle): void;
/**
 * Hash: 0xAA0BC91BE0B796E3 | ApiSet: undefined
 */
export declare function setTrainSpeed(train: number | Vehicle, speed: number): void;
/**
 * ```
 * Inverse of 0x95CF53B3D687F9FA
 * ```
 * ```
 * NativeDB Added Parameter 1: Vehicle vehicle
 * ```
 * Hash: 0x878C75C09FBDB942 | ApiSet: undefined
 */
export declare function setTrailerLegsLowered(): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x74C68EF97645E79D | ApiSet: undefined
 */
export declare function setTyreHealth(vehicle: number | Vehicle, wheelIndex: number, health: number): void;
/**
 * Affects the playback speed of the submarine car conversion animations. Does not affect hardcoded animations such as the wheels being retracted. In decompiled scripts the only value used for transformRate is 2.5.
 * Hash: 0x498218259FB7C72D | ApiSet: undefined
 */
export declare function setTransformRateForAnimation(vehicle: number | Vehicle, transformRate: number): void;
/**
 * ```
 * Only called once inside main_persitant with the parameters, 0
 * ```
 * Hash: 0x21973BBF8D17EDFA | ApiSet: undefined
 */
export declare function setTrainTrackSpawnFrequency(trackIndex: number, frequency: number): void;
/**
 * ```
 * Controls how fast the tires wear out.
 * Default values from Rockstar's Open Wheel Race JSON's:
 * "owrtss" (Soft): 2.2
 * "owrtsm" (Medium): 1.7
 * "owrtsh" (Hard): 1.2
 * Usable wheels:
 * 0: wheel_lf
 * 1: wheel_rf
 * 2: wheel_lm1
 * 3: wheel_rm1
 * 4: wheel_lr
 * 5: wheel_rr
 * ```
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0x392183BB9EA57697 | ApiSet: undefined
 */
export declare function setTyreSoftnessMultiplier(vehicle: number | Vehicle, wheelIndex: number, multiplier: number): void;
/**
 * Changes the key used to transform a vehicle into submarine mode. When set to true, the transformation key switches from the default raise/lower convertible roof key (usually 'H') to the special vehicle transformation key (usually 'X').
 * ```
 * NativeDB Introduced: v1365
 * ```
 * Hash: 0x41B9FB92EDED32A6 | ApiSet: undefined
 */
export declare function setTransformToSubmarineUsesAlternateInput(vehicle: number | Vehicle, useAlternateInput: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1868
 * ```
 * Hash: 0x01894E2EDE923CA2 | ApiSet: undefined
 */
export declare function setTyreWearMultiplier(vehicle: number | Vehicle, wheelIndex: number, multiplier: number): void;
/**
 * This native is used to simulate a high-speed impact for a vehicle when it collides with a breakable object (frag). It's particularly useful in scripted sequences where a vehicle is required to break through a barrier but might not actually be moving at a sufficient speed to do so realistically. Note that this setting is temporary and will reset after one frame, so it needs to be called every frame for a lasting effect.
 * Hash: 0x1F9FB66F3A3842D2 | ApiSet: undefined
 */
export declare function setVehicleActAsIfHighSpeedForFragSmashing(vehicle: number | Vehicle, actHighSpeed: boolean): void;
/**
 * ```
 * Controls how much traction the wheel loses.
 * Default values from Rockstar's Open Wheel Race JSON's:
 * "owrtds" (Soft): 0.05
 * "owrtdm" (Medium): 0.45
 * "owrtdh" (Hard): 0.8
 * Usable wheels:
 * 0: wheel_lf
 * 1: wheel_rf
 * 2: wheel_lm1
 * 3: wheel_rm1
 * 4: wheel_lr
 * 5: wheel_rr
 * ```
 * ```
 * NativeDB Introduced: v2060
 * ```
 * Hash: 0xC970D0E0FC31D768 | ApiSet: undefined
 */
export declare function setTyreTractionLossMultiplier(vehicle: number | Vehicle, wheelIndex: number, multiplier: number): void;
/**
 * Hash: 0xCDE5E70C1DDB954C | ApiSet: undefined
 */
export declare function setVehicleAlarm(vehicle: number | Vehicle, state: boolean): void;
/**
 * Hash: 0xDFFCEF48E511DB48 | ApiSet: undefined
 */
export declare function setVehicleActiveDuringPlayback(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x8BA6F76BC53A1493 | ApiSet: undefined
 */
export declare function setVehicleAutomaticallyAttaches(vehicle: number | Vehicle, p1: boolean, p2: any): any;
/**
 * Allows vehicles with the FLAG_JUMPING_CAR flag to jump higher (i.e. Ruiner 2000).
 * Hash: 0xF06A16CA55D138D8 | ApiSet: undefined
 */
export declare function setUseHigherVehicleJumpForce(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * Makes the vehicle accept no passengers.
 * ```
 * Hash: 0x5D14D4154BFE7B2C | ApiSet: undefined
 */
export declare function setVehicleAllowNoPassengersLockon(veh: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0xE4E2FD323574965C | ApiSet: undefined
 */
export declare function setVehicleBrake(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x92B35082E0B42F66 | ApiSet: undefined
 */
export declare function setVehicleBrakeLights(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x21115BCD6E44656A | ApiSet: undefined
 */
export declare function setVehicleActiveForPedNavigation(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Sets the amount of bombs that this vehicle has. As far as I know, this does *not* impact vehicle weapons or the ammo of those weapons in any way, it is just a way to keep track of the amount of bombs in a specific plane.
 * In decompiled scripts this is used to deduct from or add to the count whenever bombs are dropped or purchased/restocked.
 * Use [`_GET_AIRCRAFT_BOMB_COUNT`](#\_0xEA12BD130D7569A1) to get the amount of bombs on that vehicle.
 * Hash: 0xF4B2ED59DEB5D774 | ApiSet: undefined
 */
export declare function setVehicleBombCount(aircraft: number | Vehicle, bombCount: number): void;
/**
 * ```
 * On accelerating, spins the driven wheels with the others braked, so you don't go anywhere.
 * ```
 * Hash: 0xFB8794444A7D60FB | ApiSet: undefined
 */
export declare function setVehicleBurnout(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * p2 often set to 1000.0 in the decompiled scripts.
 * ```
 * Hash: 0xB77D05AC8C78AADB | ApiSet: undefined
 */
export declare function setVehicleBodyHealth(vehicle: number | Vehicle, value: number): void;
/**
 * ```
 * SET_VEHICLE_AL*
 * ```
 * Hash: 0x1DDA078D12879EEE | ApiSet: undefined
 */
export declare function setVehicleCanBeLockedOn(vehicle: number | Vehicle, canBeLockedOn: boolean, unk: boolean): void;
/**
 * Hash: 0x300504B23BD3B711 | ApiSet: undefined
 */
export declare function setVehicleCanBeUsedByFleeingPeds(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Sets the arm position of a bulldozer. Position must be a value between 0.0 and 1.0. Ignored when `p2` is set to false, instead incrementing arm position by 0.1 (or 10%).
 * Hash: 0xF8EBCCC96ADB9FB7 | ApiSet: undefined
 */
export declare function setVehicleBulldozerArmPosition(vehicle: number | Vehicle, position: number, p2: boolean): void;
/**
 * Hash: 0x0CDDA42F9E360CA6 | ApiSet: undefined
 */
export declare function setVehicleCanDeformWheels(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x59BF8C3D52C92F66 | ApiSet: undefined
 */
export declare function setVehicleCanBreak(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * This has not yet been tested - it's just an assumption of what the types could be.
 * ```
 * Hash: 0x3750146A28097A82 | ApiSet: undefined
 */
export declare function setVehicleCanBeTargetted(vehicle: number | Vehicle, state: boolean): void;
/**
 * Hash: 0x4C7028F78FFD3681 | ApiSet: undefined
 */
export declare function setVehicleCanBeVisiblyDamaged(vehicle: number | Vehicle, state: boolean): void;
/**
 * Hash: 0x428BACCDF5E26EAD | ApiSet: undefined
 */
export declare function setVehicleCanSaveInGarage(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x192547247864DFDD | ApiSet: undefined
 */
export declare function setVehicleCanLeakPetrol(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * colorPrimary & colorSecondary are the paint indexes for the vehicle.
 * For a list of valid paint indexes, view: pastebin.com/pwHci0xK
 * Hash: 0x4F1D4BE3A7F24601 | ApiSet: undefined
 */
export declare function setVehicleColours(vehicle: number | Vehicle, colorPrimary: number, colorSecondary: number): void;
/**
 * Hash: 0x206BC5DC9D1AC70A | ApiSet: undefined
 */
export declare function setVehicleCanEngineOperateOnFire(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * <1.0 - Decreased torque
 * =1.0 - Default torque
 * >1.0 - Increased torque
 * Negative values will cause the vehicle to go backwards instead of forwards while accelerating.
 * value - is between 0.2 and 1.8 in the decompiled scripts.
 * This needs to be called every frame to take effect.
 * ```
 * Hash: 0xB59E4BD37AE292DB | ApiSet: undefined
 */
export declare function setVehicleCheatPowerIncrease(vehicle: number | Vehicle, value: number): void;
/**
 * ```
 * p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
 * ```
 * Hash: 0x7141766F91D15BEA | ApiSet: undefined
 */
export declare function setVehicleCustomPrimaryColour(vehicle: number | Vehicle, r: number, g: number, b: number): void;
/**
 * Sets the selected vehicle's colors to their default value (specific variant specified using the colorCombination parameter).
 * Range of possible values for colorCombination is currently unknown, I couldn't find where these values are stored either (Disquse's guess was vehicles.meta but I haven't seen it in there.)
 * Hash: 0x33E8CD3322E2FE31 | ApiSet: undefined
 */
export declare function setVehicleColourCombination(vehicle: number | Vehicle, colorCombination: number): void;
/**
 * Similar to [`_SET_AIRCRAFT_BOMB_COUNT`](#\_0xF4B2ED59DEB5D774), this sets the amount of countermeasures that are present on this vehicle.
 * Use [`_GET_AIRCRAFT_COUNTERMEASURE_COUNT`](#\_0xF846AA63DF56B804) to get the current amount.
 * Hash: 0x9BDA23BF666F0855 | ApiSet: undefined
 */
export declare function setVehicleCountermeasureCount(aircraft: number | Vehicle, count: number): void;
/**
 * Hash: 0x51BB2D88D31A914B | ApiSet: undefined
 */
export declare function setVehicleCanLeakOil(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * SET_VEHICLE_D*
 * ```
 * Hash: 0x4E20D2A627011E8E | ApiSet: undefined
 */
export declare function setVehicleDamageModifier(vehicle: number | Vehicle, p1: number): any;
/**
 * ```
 * p1, p2, p3 are RGB values for color (255,0,0 for Red, ect)
 * ```
 * Hash: 0x36CED73BFED89754 | ApiSet: undefined
 */
export declare function setVehicleCustomSecondaryColour(vehicle: number | Vehicle, r: number, g: number, b: number): void;
/**
 * Apply damage to vehicle at a location. Location is relative to vehicle model (not world).
 * Radius of effect damage applied in a sphere at impact location
 * When `focusOnModel` set to `true`, the damage sphere will travel towards the vehicle from the given point, thus guaranteeing an impact
 * Hash: 0xA1DD317EA8FD4F29 | ApiSet: undefined
 */
export declare function setVehicleDamage(vehicle: number | Vehicle, xOffset: number, yOffset: number, zOffset: number, damage: number, radius: number, focusOnModel: boolean): void;
/**
 * ```
 * Previously named GET_VEHICLE_DEFORMATION_GET_TREE (hash collision)
 * from Decrypted Scripts I found
 * `VEHICLE::SET_VEHICLE_CEILING_HEIGHT(l_BD9[2\/\*2\*\/], 420.0);`
 * ```
 * Hash: 0xA46413066687A328 | ApiSet: undefined
 */
export declare function setVehicleCeilingHeight(vehicle: number | Vehicle, height: number): void;
/**
 * <strong>Usage:</strong>
 * *   Use this native inside a looped function.
 * *   Values:
 * *   `0.0` = no vehicles on streets
 * *   `1.0` = normal vehicles on streets
 * `1.0` Seems to be the maximum.
 * Hash: 0x245A6883D966D537 | ApiSet: undefined
 */
export declare function setVehicleDensityMultiplierThisFrame(multiplier: number): void;
/**
 * Hash: 0x6089CDF6A57F326C | ApiSet: undefined
 */
export declare function setVehicleDashboardColor(vehicle: number | Vehicle, color: number): void;
/**
 * ```
 * This fixes the deformation of a vehicle but the vehicle health doesn't improve
 * ```
 * Hash: 0x953DA1E1B12C0491 | ApiSet: undefined
 */
export declare function setVehicleDeformationFixed(vehicle: number | Vehicle): void;
/**
 * ```
 * Inverts vehicle's controls. So INPUT_VEH_ACCELERATE will be INPUT_VEH_BRAKE and vise versa (same for A/D controls)
 * Doesn't work for planes/helis.
 * ```
 * Hash: 0x5B91B229243351A8 | ApiSet: undefined
 */
export declare function setVehicleControlsInverted(vehicle: number | Vehicle, state: boolean): void;
/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 * Hash: 0x2FA133A4A9D37ED8 | ApiSet: undefined
 */
export declare function setVehicleDoorCanBreak(vehicle: number | Vehicle, doorIndex: number, isBreakable: boolean): void;
/**
 * Sets the dirt level of the passed vehicle.
 * Hash: 0x79D3B596FE44EE8B | ApiSet: undefined
 */
export declare function setVehicleDirtLevel(vehicle: number | Vehicle, dirtLevel: number): void;
/**
 * Hash: 0x2B6747FAA9DB9D6B | ApiSet: undefined
 */
export declare function setVehicleDisableTowing(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 * Hash: 0xD4D4F6A4AB575A33 | ApiSet: undefined
 */
export declare function setVehicleDoorBroken(vehicle: number | Vehicle, doorIndex: number, deleteDoor: boolean): void;
/**
 * Sets the specified door index open on the passed vehicle. See [`IS_VEHICLE_DOOR_FULLY_OPEN`](#\_0x3E933CFF7B111C22).
 * Hash: 0x7C65DAC73C35C862 | ApiSet: undefined
 */
export declare function setVehicleDoorOpen(vehicle: number | Vehicle, doorIndex: number, loose: boolean, openInstantly: boolean): void;
/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 * Hash: 0xF2BFA0430F0A0FCB | ApiSet: undefined
 */
export declare function setVehicleDoorControl(vehicle: number | Vehicle, doorIndex: number, speed: number, angle: number): void;
/**
 * See eDoorId declared in [`SET_VEHICLE_DOOR_SHUT`](#\_0x93D9BD300D7789E5)
 * Hash: 0xA5A9653A8D2CAF48 | ApiSet: undefined
 */
export declare function setVehicleDoorLatched(vehicle: number | Vehicle, doorIndex: number, forceClose: boolean, lock: boolean, p4: boolean): void;
/**
 * Hash: 0xA2F80B8D040727CC | ApiSet: undefined
 */
export declare function setVehicleDoorsLockedForAllPlayers(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Locks the doors of a specified vehicle to a defined lock state, affecting how players and NPCs can interact with the vehicle.
 * ```
 * NativeDB Introduced: v323
 * ```
 * ```cpp
 * enum eVehicleLockState {
 * // No specific lock state, vehicle behaves according to the game's default settings.
 * VEHICLELOCK_NONE = 0,
 * // Vehicle is fully unlocked, allowing free entry by players and NPCs.
 * VEHICLELOCK_UNLOCKED = 1,
 * // Vehicle is locked, preventing entry by players and NPCs.
 * VEHICLELOCK_LOCKED = 2,
 * // Vehicle locks out only players, allowing NPCs to enter.
 * VEHICLELOCK_LOCKOUT_PLAYER_ONLY = 3,
 * // Vehicle is locked once a player enters, preventing others from entering.
 * VEHICLELOCK_LOCKED_PLAYER_INSIDE = 4,
 * // Vehicle starts in a locked state, but may be unlocked through game events.
 * VEHICLELOCK_LOCKED_INITIALLY = 5,
 * // Forces the vehicle's doors to shut and lock.
 * VEHICLELOCK_FORCE_SHUT_DOORS = 6,
 * // Vehicle is locked but can still be damaged.
 * VEHICLELOCK_LOCKED_BUT_CAN_BE_DAMAGED = 7,
 * // Vehicle is locked, but its trunk/boot remains unlocked.
 * VEHICLELOCK_LOCKED_BUT_BOOT_UNLOCKED = 8,
 * // Vehicle is locked and does not allow passengers, except for the driver.
 * VEHICLELOCK_LOCKED_NO_PASSENGERS = 9,
 * // Vehicle is completely locked, preventing entry entirely, even if previously inside.
 * VEHICLELOCK_CANNOT_ENTER = 10
 * };
 * ```
 * Hash: 0xB664292EAECF7FA6 | ApiSet: undefined
 */
export declare function setVehicleDoorsLocked(vehicle: number | Vehicle, doorLockStatus: number): void;
/**
 * ```
 * NativeDB Introduced: v1365
 * ```
 * Hash: 0x203B527D1B77904C | ApiSet: undefined
 */
export declare function setVehicleDoorsLockedForUnk(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x517AAF684BB50CD1 | ApiSet: undefined
 */
export declare function setVehicleDoorsLockedForPlayer(vehicle: number | Vehicle, player: number | string | Player, toggle: boolean): void;
/**
 * Sets the specified door index shut on the passed vehicle.
 * ```cpp
 * enum eDoorId
 * {
 * VEH_EXT_DOOR_DSIDE_F = 0,
 * VEH_EXT_DOOR_DSIDE_R = 1,
 * VEH_EXT_DOOR_PSIDE_F = 2,
 * VEH_EXT_DOOR_PSIDE_R = 3,
 * VEH_EXT_BONNET = 4,
 * VEH_EXT_BOOT = 5,
 * // 0x872E72B8 = 0xFFFFFFFF,
 * }
 * ```
 * Hash: 0x93D9BD300D7789E5 | ApiSet: undefined
 */
export declare function setVehicleDoorShut(vehicle: number | Vehicle, doorIndex: number, closeInstantly: boolean): void;
/**
 * Hash: 0xB81F6D4A8F5EEBA8 | ApiSet: undefined
 */
export declare function setVehicleDoorsLockedForTeam(vehicle: number | Vehicle, team: number, toggle: boolean): void;
/**
 * Hash: 0x9737A37136F07E75 | ApiSet: undefined
 */
export declare function setVehicleDoorsLockedForNonScriptPlayers(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * Money pickups are created around cars when they explode. Only works when the vehicle model is a car. A single pickup is between 1 and 18 dollars in size. All car models seem to give the same amount of money.
 * youtu.be/3arlUxzHl5Y
 * i.imgur.com/WrNpYFs.jpg
 * ```
 * Hash: 0x068F64F2470F9656 | ApiSet: undefined
 */
export declare function setVehicleDropsMoneyWhenBlownUp(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Starts or stops the engine on the specified vehicle.
 * From what I've tested when I do this to a helicopter the propellers turn off after the engine has started.
 * Hash: 0x2497C4717C8B881E | ApiSet: undefined
 */
export declare function setVehicleEngineOn(vehicle: number | Vehicle, value: boolean, instantly: boolean, disableAutoStart: boolean): void;
/**
 * Hash: 0x983765856F2564F9 | ApiSet: undefined
 */
export declare function setVehicleEngineCanDegrade(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * Closes all doors of a vehicle:
 * ```
 * Hash: 0x781B3D62BB013EF5 | ApiSet: undefined
 */
export declare function setVehicleDoorsShut(vehicle: number | Vehicle, closeInstantly: boolean): void;
/**
 * Incorrectly named `SET_VEHICLE_EXCLUSIVE_DRIVER`; likely `SET_VEHICLE_ALLOW_*`.
 * Toggles a flag related to `SET_VEHICLE_EXCLUSIVE_DRIVER`, however, doesn't enable that feature (or trigger script events related to it).
 * See [`_SET_VEHICLE_EXCLUSIVE_DRIVER_2`](#\_0xB5C51B5502E85E83).
 * ```
 * NativeDB Removed Parameter 2: int index
 * ```
 * Hash: 0x41062318F23ED854 | ApiSet: undefined
 */
export declare function setVehicleExclusiveDriver(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * 1000 is max health
 * Begins leaking gas at around 650 health
 * -999.90002441406 appears to be minimum health, although nothing special occurs <- false statement
 * -------------------------
 * Minimum: -4000
 * Maximum: 1000
 * -4000: Engine is destroyed
 * 0 and below: Engine catches fire and health rapidly declines
 * 300: Engine is smoking and losing functionality
 * 1000: Engine is perfect
 * ```
 * Hash: 0x45F6D8EEF34ABEF1 | ApiSet: undefined
 */
export declare function setVehicleEngineHealth(vehicle: number | Vehicle, health: number): void;
/**
 * ```
 * Sets a vehicle to be strongly resistant to explosions. p0 is the vehicle; set p1 to false to toggle the effect on/off.
 * ```
 * Hash: 0x71B0892EC081D60A | ApiSet: undefined
 */
export declare function setVehicleExplodesOnHighExplosionDamage(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Examples with a besra:
 * *   [fade value `0.0`](https://i.imgur.com/DXNk63e.jpg)
 * *   [fade value `0.5`](https://i.imgur.com/2Vb35fq.jpg)
 * *   [fade value `1.0`](https://i.imgur.com/aa8cxaD.jpg)
 * The parameter fade is a value from 0-1, where 0 is fresh paint.
 * Hash: 0x3AFDC536C3D01674 | ApiSet: undefined
 */
export declare function setVehicleEnveffScale(vehicle: number | Vehicle, fade: number): void;
/**
 * The **actual** [`SET_VEHICLE_EXCLUSIVE_DRIVER`](#\_0x41062318F23ED854) native.
 * Hash: 0xB5C51B5502E85E83 | ApiSet: undefined
 */
export declare function setVehicleExclusiveDriver2(vehicle: number | Vehicle, ped: number | Ped, index: number): void;
/**
 * ```
 * Max value is 32767
 * ```
 * Hash: 0x79DF7E806202CE01 | ApiSet: undefined
 */
export declare function setVehicleExtendedRemovalRange(vehicle: number | Vehicle, range: number): void;
/**
 * ```
 * They use the same color indexs as SET_VEHICLE_COLOURS.
 * ```
 * Hash: 0x2036F561ADD12E33 | ApiSet: undefined
 */
export declare function setVehicleExtraColours(vehicle: number | Vehicle, pearlescentColor: number, wheelColor: number): void;
/**
 * ```
 * NativeDB Introduced: v3407
 * ```
 * Hash: 0x84D7FFD223CAAFFD | ApiSet: undefined
 */
export declare function setVehicleExplosiveDamageScale(vehicle: number | Vehicle, scale: number): any;
/**
 * Fix a given vehicle.
 * If the vehicle's engine's broken then you cannot fix it with this native.
 * Hash: 0x115722B1B9C14C1C | ApiSet: undefined
 */
export declare function setVehicleFixed(vehicle: number | Vehicle): void;
/**
 * ```
 * Note: only some vehicle have extras
 * extra ids are from 1 - 9 depending on the vehicle
 * -------------------------------------------------
 * ^ not sure if outdated or simply wrong. Max extra ID for b944 is 14
 * -------------------------------------------------
 * p2 is not a on/off toggle. mostly 0 means on and 1 means off.
 * not sure if it really should be a BOOL.
 * -------------------------------------------------
 * Confirmed p2 does not work as a bool. Changed to int. [0=on, 1=off]
 * ```
 * Hash: 0x7EE3A3C5E4A40CC9 | ApiSet: undefined
 */
export declare function setVehicleExtra(vehicle: number | Vehicle, extraId: number, disable: boolean): void;
/**
 * Hash: 0x9AA47FFF660CB932 | ApiSet: undefined
 */
export declare function setVehicleFlightNozzlePositionImmediate(vehicle: number | Vehicle, angle: number): void;
/**
 * Hash: 0xB055A34527CB8FD7 | ApiSet: undefined
 */
export declare function setVehicleForceAfterburner(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x30D779DE7C4F6DD3 | ApiSet: undefined
 */
export declare function setVehicleFlightNozzlePosition(vehicle: number | Vehicle, angleRatio: number): void;
/**
 * ```
 * Allows creation of CEventShockingPlaneFlyby, CEventShockingHelicopterOverhead, and other(?) Shocking events
 * ```
 * Hash: 0x279D50DE5652D935 | ApiSet: undefined
 */
export declare function setVehicleGeneratesEngineShockingEvents(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * SCALE: Setting the speed to 30 would result in a speed of roughly 60mph, according to speedometer.
 * Speed is in meters per second
 * You can convert meters/s to mph here:
 * http://www.calculateme.com/Speed/MetersperSecond/ToMilesperHour.htm
 * ```
 * Hash: 0xAB54A438726D25D5 | ApiSet: undefined
 */
export declare function setVehicleForwardSpeed(vehicle: number | Vehicle, speed: number): void;
/**
 * ```
 * It switch to highbeam when p1 is set to true.
 * ```
 * Hash: 0x8B7FD87F0DDB421E | ApiSet: undefined
 */
export declare function setVehicleFullbeam(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x684785568EF26A22 | ApiSet: undefined
 */
export declare function setVehicleHandbrake(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * Seems to be related to the metal parts, not tyres (like i was expecting lol)
 * Must be called every tick.
 * ```
 * Hash: 0x1837AF7C627009BA | ApiSet: undefined
 */
export declare function setVehicleFrictionOverride(vehicle: number | Vehicle, friction: number): void;
/**
 * Specifies an area of interest where cargens will focus on spawning vehicles
 * You can clear the area of interest with [`CLEAR_VEHICLE_GENERATOR_AREA_OF_INTEREST`](#\_0x0A436B8643716D14)
 * Hash: 0x9A75585FB2E54FAD | ApiSet: undefined
 */
export declare function setVehicleGeneratorAreaOfInterest(position: Vector3, radius: number): void;
/**
 * Hash: 0x89F149B6131E57DA | ApiSet: undefined
 */
export declare function setVehicleGravity(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x02398B627547189C | ApiSet: undefined
 */
export declare function setVehicleHasBeenDrivenFlag(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x2B5F9D2AF1F1722D | ApiSet: undefined
 */
export declare function setVehicleHasBeenOwnedByPlayer(vehicle: number | Vehicle, owned: boolean): void;
/**
 * Hash: 0x10655FAB9915623D | ApiSet: undefined
 */
export declare function setVehicleHandlingHashForAi(vehicle: number | Vehicle, hash: number | string): void;
/**
 * Hash: 0xD8050E0EB60CF274 | ApiSet: undefined
 */
export declare function setVehicleHasMutedSirens(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Sets whether the vehicle's lights can be broken.
 * ```
 * NativeDB Introduced: v323
 * ```
 * Hash: 0x1AA8A837D2169D94 | ApiSet: undefined
 */
export declare function setVehicleHasUnbreakableLights(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * Sets the turn signal enabled for a vehicle.
 * Set turnSignal to 1 for left light, 0 for right light.
 * ```
 * Hash: 0xB5D45264751B7DF0 | ApiSet: undefined
 */
export declare function setVehicleIndicatorLights(vehicle: number | Vehicle, turnSignal: number, toggle: boolean): void;
/**
 * ```
 * if true, axles won't bend.
 * ```
 * Hash: 0x92F0CF722BC4202F | ApiSet: undefined
 */
export declare function setVehicleHasStrongAxles(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Sets the vehicle headlight shadow flags.
 * ```
 * NativeDB Introduced: v323
 * ```
 * ```cpp
 * enum eVehicleHeadlightShadowFlags {
 * // Default (Lights can be toggled between off, normal and high beams)
 * NO_HEADLIGHT_SHADOWS = 0,
 * // Lights Disabled (Lights are fully disabled, cannot be toggled)
 * HEADLIGHTS_CAST_DYNAMIC_SHADOWS = 1,
 * // Always On (Lights can be toggled between normal and high beams)
 * HEADLIGHTS_CAST_STATIC_SHADOWS = 2,
 * HEADLIGHTS_CAST_FULL_SHADOWS = 3
 * };
 * ```
 * Hash: 0x1FD09E7390A74D54 | ApiSet: undefined
 */
export declare function setVehicleHeadlightShadows(vehicle: number | Vehicle, flag: number): void;
/**
 * Hash: 0xBC2042F090AF6AD3 | ApiSet: undefined
 */
export declare function setVehicleInteriorlight(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * Setting this to false, makes the specified vehicle to where if you press Y your character doesn't even attempt the animation to enter the vehicle. Hence it's not considered aka ignored.
 * ```
 * Hash: 0x31B927BBC44156CD | ApiSet: undefined
 */
export declare function setVehicleIsConsideredByPlayer(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x06582AFF74894C75 | ApiSet: undefined
 */
export declare function setVehicleInactiveDuringPlayback(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0xBE70724027F85BCD | ApiSet: undefined
 */
export declare function setVehicleIndividualDoorsLocked(vehicle: number | Vehicle, doorIndex: number, doorLockStatus: number): void;
/**
 * Hash: 0x67B2C79AA7FF5738 | ApiSet: undefined
 */
export declare function setVehicleIsStolen(vehicle: number | Vehicle, isStolen: boolean): void;
/**
 * Hash: 0xF40DD601A65F7F19 | ApiSet: undefined
 */
export declare function setVehicleInteriorColor(vehicle: number | Vehicle, color: number): void;
/**
 * Hash: 0x99C82F8A139F3E4E | ApiSet: undefined
 */
export declare function setVehicleKersAllowed(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * This native sets whether a specific vehicle influences the player's wanted level when it is involved in an incident that typically triggers a wanted response, such as being marked as a "victim" vehicle.
 * This is particularly useful when utilizing the wanted system from GTA, and you want to prevent a vehicle from affecting the wanted level when it is stolen. In the decompiled scripts this native is only used to disable the influence of the vehicle on the wanted level.
 * Hash: 0x0AD9E8F87FF7C16F | ApiSet: undefined
 */
export declare function setVehicleInfluencesWantedLevel(vehicle: number | Vehicle, influenceWantedLevel: boolean): void;
/**
 * This multiplier has no limit, by default the game has this set to `1.0`.
 * Hash: 0xB385454F8791F57C | ApiSet: undefined
 */
export declare function setVehicleLightMultiplier(vehicle: number | Vehicle, multiplier: number): void;
/**
 * Calling this native will keep a vehicle's engine running after exiting.
 * Hash: 0xB8FBC8B1330CA9B4 | ApiSet: undefined
 */
export declare function setVehicleKeepEngineOnWhenAbandoned(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * p1 (toggle) was always 1 (true) except in one case in the b678 scripts.
 * ```
 * Hash: 0x07116E24E9D1929D | ApiSet: undefined
 */
export declare function setVehicleIsRacing(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x93AE6A61BE015BF1 | ApiSet: undefined
 */
export declare function setVehicleLodMultiplier(vehicle: number | Vehicle, multiplier: number): void;
/**
 * Sets the vehicle lights state. Allowing for different lighting modes.
 * ```
 * NativeDB Introduced: v323
 * ```
 * ```cpp
 * enum eVehicleLightSetting {
 * // Normal light behavior. Lights cycle through off, then low beams, then high beams.
 * // Note: It's affected by day or night; high beams don't exist in daytime.
 * NO_VEHICLE_LIGHT_OVERRIDE = 0,
 * // Vehicle doesn't have lights, always off.
 * FORCE_VEHICLE_LIGHTS_OFF  = 1,
 * // Vehicle has always-on lights.
 * // During day: Cycles between low beams and high beams.
 * // At night: Cycles between low beams, low beams, and high beams.
 * FORCE_VEHICLE_LIGHTS_ON   = 2,
 * // Sets vehicle lights on. Behaves like normal lights (same as 0).
 * SET_VEHICLE_LIGHTS_ON     = 3,
 * // Sets vehicle lights off. Behaves like normal lights (same as 0).
 * SET_VEHICLE_LIGHTS_OFF    = 4
 * };
 * ```
 * Hash: 0x34E710FF01247C5A | ApiSet: undefined
 */
export declare function setVehicleLights(vehicle: number | Vehicle, state: number): void;
/**
 * To reset the max speed, set the `speed` value to `0.0` or lower.
 * Hash: 0xBAA045B4E42F3C06 | ApiSet: undefined
 */
export declare function setVehicleMaxSpeed(vehicle: number | Vehicle, speed: number): void;
/**
 * ```
 * Sets the wanted state of this vehicle.
 * ```
 * Hash: 0xF7EC25A3EBEEC726 | ApiSet: undefined
 */
export declare function setVehicleIsWanted(vehicle: number | Vehicle, state: boolean): void;
/**
 * ```
 * Set modKit to 0 if you plan to call SET_VEHICLE_MOD. That's what the game does. Most body modifications through SET_VEHICLE_MOD will not take effect until this is set to 0.
 * ```
 * Hash: 0x1F2AA07F00B3217A | ApiSet: undefined
 */
export declare function setVehicleModKit(vehicle: number | Vehicle, modKit: number): void;
/**
 * ```
 * Changes the secondary paint type and color
 * paintType:
 * 0: Normal
 * 1: Metallic
 * 2: Pearl
 * 3: Matte
 * 4: Metal
 * 5: Chrome
 * color: number of the color
 * ```
 * Hash: 0x816562BADFDEC83E | ApiSet: undefined
 */
export declare function setVehicleModColor2(vehicle: number | Vehicle, paintType: number, color: number): void;
/**
 * ```
 * paintType:
 * 0: Normal
 * 1: Metallic
 * 2: Pearl
 * 3: Matte
 * 4: Metal
 * 5: Chrome
 * color: number of the color.
 * p3 seems to always be 0.
 * ```
 * Hash: 0x43FEB945EE7F85B8 | ApiSet: undefined
 */
export declare function setVehicleModColor1(vehicle: number | Vehicle, paintType: number, color: number, pearlescentColor: number): void;
/**
 * Hash: 0x60BF608F1B8CD1B6 | ApiSet: undefined
 */
export declare function setVehicleLivery(vehicle: number | Vehicle, livery: number): void;
/**
 * ```
 * seems to make the vehicle stop spawning naturally in traffic. Here's an essential example:
 * `VEHICLE::SET_VEHICLE_MODEL_IS_SUPPRESSED(GAMEPLAY::GET_HASH_KEY("taco"), true);`
 * ```
 * Hash: 0x0FC2D89AC25A5814 | ApiSet: undefined
 */
export declare function setVehicleModelIsSuppressed(model: number | string, suppressed: boolean): void;
/**
 * ```cpp
 * // eVehicleModType values modified to conform to script native reorganization (see 0x140D25327 in 1604).
 * enum eVehicleModType
 * {
 * VMT_SPOILER = 0,
 * VMT_BUMPER_F = 1,
 * VMT_BUMPER_R = 2,
 * VMT_SKIRT = 3,
 * VMT_EXHAUST = 4,
 * VMT_CHASSIS = 5,
 * VMT_GRILL = 6,
 * VMT_BONNET = 7,
 * VMT_WING_L = 8,
 * VMT_WING_R = 9,
 * VMT_ROOF = 10,
 * VMT_ENGINE = 11,
 * VMT_BRAKES = 12,
 * VMT_GEARBOX = 13,
 * VMT_HORN = 14,
 * VMT_SUSPENSION = 15,
 * VMT_ARMOUR = 16,
 * VMT_NITROUS = 17,
 * VMT_TURBO = 18,
 * VMT_SUBWOOFER = 19,
 * VMT_TYRE_SMOKE = 20,
 * VMT_HYDRAULICS = 21,
 * VMT_XENON_LIGHTS = 22,
 * VMT_WHEELS = 23,
 * VMT_WHEELS_REAR_OR_HYDRAULICS = 24,
 * VMT_PLTHOLDER = 25,
 * VMT_PLTVANITY = 26,
 * VMT_INTERIOR1 = 27,
 * VMT_INTERIOR2 = 28,
 * VMT_INTERIOR3 = 29,
 * VMT_INTERIOR4 = 30,
 * VMT_INTERIOR5 = 31,
 * VMT_SEATS = 32,
 * VMT_STEERING = 33,
 * VMT_KNOB = 34,
 * VMT_PLAQUE = 35,
 * VMT_ICE = 36,
 * VMT_TRUNK = 37,
 * VMT_HYDRO = 38,
 * VMT_ENGINEBAY1 = 39,
 * VMT_ENGINEBAY2 = 40,
 * VMT_ENGINEBAY3 = 41,
 * VMT_CHASSIS2 = 42,
 * VMT_CHASSIS3 = 43,
 * VMT_CHASSIS4 = 44,
 * VMT_CHASSIS5 = 45,
 * VMT_DOOR_L = 46,
 * VMT_DOOR_R = 47,
 * VMT_LIVERY_MOD = 48,
 * VMT_LIGHTBAR = 49,
 * };
 * ```
 * Hash: 0x6AF0636DDEDCB6DD | ApiSet: undefined
 */
export declare function setVehicleMod(vehicle: number | Vehicle, modType: number, modIndex: number, customTires: boolean): void;
/**
 * This method is utilized solely for debugging purposes and is functional only in debug builds of the game. Please note that its functionality may not be available in the retail version.
 * Hash: 0xBFDF984E2C22B94F | ApiSet: undefined
 */
export declare function setVehicleNameDebug(vehicle: number | Vehicle, name: string): void;
/**
 * Hash: 0xFBA550EA44404EE6 | ApiSet: undefined
 */
export declare function setVehicleNeedsToBeHotwired(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * NativeDB Introduced: v1493
 * ```
 * Hash: 0xB93B2867F7B479D1 | ApiSet: undefined
 */
export declare function setVehicleNeonLightsColor2(vehicle: number | Vehicle, color: number): void;
/**
 * Sets the color of the neon lights on the specified vehicle.
 * RGB values and colour names taken from the decompiled scripts:
 * | Colour         |  R  |  G  |  B  |
 * |---------------|:---:|:---:|:---:|
 * | White         | 222 | 222 | 255 |
 * | Blue          | 2   | 21  | 255 |
 * | Electric Blue | 3   | 83  | 255 |
 * | Mint Green    | 0   | 255 | 140 |
 * | Lime Green    | 94  | 255 | 1   |
 * | Yellow        | 255 | 255 | 0   |
 * | Golden Shower | 255 | 150 | 0   |
 * | Orange        | 255 | 62  | 0   |
 * | Red           | 255 | 1   | 1   |
 * | Pony Pink     | 255 | 50  | 100 |
 * | Hot Pink      | 255 | 5   | 190 |
 * | Purple        | 35  | 1   | 255 |
 * | Blacklight    | 15  | 3   | 255 |
 * Hash: 0x8E0A582209A62695 | ApiSet: undefined
 */
export declare function setVehicleNeonLightsColour(vehicle: number | Vehicle, r: number, g: number, b: number): void;
/**
 * ```
 * Sets the neon lights of the specified vehicle on/off.
 * Indices:
 * 0 = Left
 * 1 = Right
 * 2 = Front
 * 3 = Back
 * ```
 * Hash: 0x2AA720E4287BF269 | ApiSet: undefined
 */
export declare function setVehicleNeonLightEnabled(vehicle: number | Vehicle, index: number, toggle: boolean): void;
/**
 * ```
 * Tested on the player's current vehicle. Unless you kill the driver, the vehicle doesn't loose control, however, if enabled, explodeOnImpact is still active. The moment you crash, boom.
 * ```
 * Hash: 0xF19D095E42D430CC | ApiSet: undefined
 */
export declare function setVehicleOutOfControl(vehicle: number | Vehicle, killDriver: boolean, explodeOnImpact: boolean): void;
/**
 * Please refer to [`GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX`](#\_0xF11BC2DD9A3E7195) for plate indicies.
 * Hash: 0x9088EB5A43FFB0A1 | ApiSet: undefined
 */
export declare function setVehicleNumberPlateTextIndex(vehicle: number | Vehicle, plateIndex: number): void;
/**
 * ```
 * Sets a vehicle on the ground on all wheels.  Returns whether or not the operation was successful.
 * ```
 * ```
 * NativeDB Added Parameter 2: float p1
 * ```
 * Hash: 0x49733E92263139D1 | ApiSet: undefined
 */
export declare function setVehicleOnGroundProperly(vehicle: number | Vehicle): boolean;
/**
 * Hash: 0x0BFFB028B3DD0A97 | ApiSet: undefined
 */
export declare function setVehicleParachuteActive(vehicle: number | Vehicle, active: boolean): void;
/**
 * Hash: 0x5AFEEDD9BB2899D7 | ApiSet: undefined
 */
export declare function setVehicleProvidesCover(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * 1000 is max health
 * Begins leaking gas at around 650 health
 * ```
 * Hash: 0x70DB57649FA8D0D8 | ApiSet: undefined
 */
export declare function setVehiclePetrolTankHealth(vehicle: number | Vehicle, health: number): void;
/**
 * Hash: 0x95A88F0B409CDA47 | ApiSet: undefined
 */
export declare function setVehicleNumberPlateText(vehicle: number | Vehicle, plateText: string): void;
/**
 * Hash: 0xEFC13B1CE30D755D | ApiSet: undefined
 */
export declare function setVehicleRampLaunchModifier(vehicle: number | Vehicle, p1: number): void;
/**
 * Hash: 0x756AE6E962168A04 | ApiSet: undefined
 */
export declare function setVehicleRampUpwardsLaunchMotion(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * parachuteModel = 230075693
 * ```
 * Hash: 0x4D610C6B56031351 | ApiSet: undefined
 */
export declare function setVehicleParachuteModel(vehicle: number | Vehicle, modelHash: number | string): void;
/**
 * ```
 * Reduces grip significantly so it's hard to go anywhere.
 * ```
 * Hash: 0x222FF6A823D122E2 | ApiSet: undefined
 */
export declare function setVehicleReduceGrip(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * colorIndex = 0 - 7
 * ```
 * Hash: 0xA74AD2439468C883 | ApiSet: undefined
 */
export declare function setVehicleParachuteTextureVariation(vehicle: number | Vehicle, textureVariation: number): void;
/**
 * Hash: 0x1BBAC99C0BC53656 | ApiSet: undefined
 */
export declare function setVehicleRampSidewaysLaunchMotion(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0xE00F2AB100B76E89 | ApiSet: undefined
 */
export declare function setVehicleRocketBoostRefillTime(vehicle: number | Vehicle, time: number): void;
/**
 * Often used in conjunction with: [SET_VEHICLE_REDUCE_GRIP](#\_0x222FF6A823D122E2).
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x6DEE944E1EE90CFB | ApiSet: undefined
 */
export declare function setVehicleReduceTraction(vehicle: number | Vehicle, val: number): void;
/**
 * Hash: 0x28D034A93FE31BF5 | ApiSet: undefined
 */
export declare function setVehicleReceivesRampDamage(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x09606148B6C71DEF | ApiSet: undefined
 */
export declare function setVehicleRudderBroken(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0xFEB2DDED3509562E | ApiSet: undefined
 */
export declare function setVehicleRocketBoostPercentage(vehicle: number | Vehicle, percentage: number): void;
/**
 * Hash: 0x81E1552E35DC3839 | ApiSet: undefined
 */
export declare function setVehicleRocketBoostActive(vehicle: number | Vehicle, active: boolean): void;
/**
 * Used to set the tornado custom (convertible) rooftop livery.
 * Livery value that works for tornado custom is between 0 and 9 from what i can tell. Maybe 0-8 even.
 * Might work on other custom vehicles but im not sure what those might be, only confirmed it working with the tornado custom.
 * Hash: 0xA6D3A8750DC73270 | ApiSet: undefined
 */
export declare function setVehicleRoofLivery(vehicle: number | Vehicle, livery: number): void;
/**
 * ```
 * Adds some kind of shadow to the vehicle.
 * -1 disables the effect.
 * DISABLE_*
 * ```
 * Hash: 0xF0E4BA16D1DB546C | ApiSet: undefined
 */
export declare function setVehicleShadowEffect(vehicle: number | Vehicle, p1: number, p2: number): void;
/**
 * ```
 * If set to TRUE, it seems to suppress door noises and doesn't allow the horn to be continuous.
 * ```
 * Hash: 0x9D44FCCE98450843 | ApiSet: undefined
 */
export declare function setVehicleSilent(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * Commands the driver of an armed vehicle (p0) to shoot its weapon at a target (p1). p3, p4 and p5 are the coordinates of the target. Example:
 * `WEAPON::SET_CURRENT_PED_VEHICLE_WEAPON(pilot,GAMEPLAY::GET_HASH_KEY("VEHICLE_WEAPON_PLANE_ROCKET"));VEHICLE::SET_VEHICLE_SHOOT_AT_TARGET(pilot, target, targPos.x, targPos.y, targPos.z);`
 * ```
 * Hash: 0x74CD9A9327A282EA | ApiSet: undefined
 */
export declare function setVehicleShootAtTarget(driver: number | Ped, entity: number | Entity, xTarget: number, yTarget: number, zTarget: number): void;
/**
 * ```
 * Activate siren on vehicle (Only works if the vehicle has a siren).
 * ```
 * Hash: 0xF4924635A19EB37D | ApiSet: undefined
 */
export declare function setVehicleSiren(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * Locks the vehicle's steering to the desired angle, explained below.
 * Requires to be called onTick. Steering is unlocked the moment the function stops being called on the vehicle.
 * Steer bias:
 * -1.0 = full right
 * 0.0 = centered steering
 * 1.0 = full left
 * ```
 * Hash: 0x42A8EC77D5150CBE | ApiSet: undefined
 */
export declare function setVehicleSteerBias(vehicle: number | Vehicle, value: number): void;
/**
 * ```
 * If set to true, vehicle will not take crash damage, but is still susceptible to damage from bullets and explosives
 * ```
 * Hash: 0x3E8C8727991A8A0B | ApiSet: undefined
 */
export declare function setVehicleStrong(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * Only works during nighttime.
 * ```
 * Hash: 0x14E85C5EE7A4D542 | ApiSet: undefined
 */
export declare function setVehicleSearchlight(heli: number | Vehicle, toggle: boolean, canBeUsedByAI: boolean): void;
/**
 * ```
 * Has something to do with trains. Always precedes SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED.
 * ============================================
 * May be true that it can be used with trains not sure, but not specifically for trains. Go find Xbox360 decompiled scripts and search for 'func_1333' in freemode.c it isn't used just for trains. Thanks for the info tho.
 * Btw, func_1333 ends up calling this func which uses this native,
 * void func_1338(int iParam0)//Position
 * {
 * `ENTITY::FREEZE_ENTITY_POSITION(iParam0, true);`
 * `ENTITY::SET_ENTITY_COLLISION(iParam0, false, 0);`
 * `ENTITY::SET_ENTITY_INVINCIBLE(iParam0, true);`
 * `VEHICLE::_0xDF594D8D(iParam0, true);`
 * }
 * ```
 * Hash: 0x1CF38D529D7441D9 | ApiSet: undefined
 */
export declare function setVehicleSt(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x56B94C6D7127DFBA | ApiSet: undefined
 */
export declare function setVehicleTankTurretPosition(vehicle: number | Vehicle, position: number, p2: boolean): void;
/**
 * Hash: 0x9007A2F21DC108D4 | ApiSet: undefined
 */
export declare function setVehicleSteeringBiasScalar(vehicle: number | Vehicle, scalar: number): void;
/**
 * Hash: 0x1093408B4B9D1146 | ApiSet: undefined
 */
export declare function setVehicleTurretSpeedThisFrame(vehicle: number | Vehicle, speed: number): void;
/**
 * ```
 * Sets how much the crane on the tow truck is raised, where 0.0 is fully lowered and 1.0 is fully raised.
 * ```
 * Hash: 0xFE54B92A344583CA | ApiSet: undefined
 */
export declare function setVehicleTowTruckArmPosition(vehicle: number | Vehicle, position: number): void;
/**
 * Hash: 0x2E0A74E1002380B1 | ApiSet: undefined
 */
export declare function setVehicleTimedExplosion(vehicle: number | Vehicle, ped: number | Ped, toggle: boolean): void;
/**
 * ```
 * tyreIndex = 0 to 4 on normal vehicles
 * '0 = wheel_lf / bike, plane or jet front
 * '1 = wheel_rf
 * '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
 * '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
 * '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
 * '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
 * '45 = 6 wheels trailer mid wheel left
 * '47 = 6 wheels trailer mid wheel right
 * ```
 * Hash: 0x6E13FC662B882D1D | ApiSet: undefined
 */
export declare function setVehicleTyreFixed(vehicle: number | Vehicle, tyreIndex: number): void;
/**
 * ```
 * Toggles specific flag on turret
 * ```
 * ```
 * NativeDB Introduced: v1290
 * ```
 * Hash: 0xC60060EB0D8AC7B1 | ApiSet: undefined
 */
export declare function setVehicleTurretUnk(vehicle: number | Vehicle, index: number, toggle: boolean): void;
/**
 * Hash: 0x8ABA6AF54B942B95 | ApiSet: undefined
 */
export declare function setVehicleUndriveable(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * `"To burst tyres VEHICLE::SET_VEHICLE_TYRE_BURST(vehicle, 0, true, 1000.0)`
 * to burst all tyres type it 8 times where p1 = 0 to 7.
 * p3 seems to be how much damage it has taken. 0 doesn't deflate them, 1000 completely deflates them.
 * '0 = wheel_lf / bike, plane or jet front
 * '1 = wheel_rf
 * '2 = wheel_lm / in 6 wheels trailer, plane or jet is first one on left
 * '3 = wheel_rm / in 6 wheels trailer, plane or jet is first one on right
 * '4 = wheel_lr / bike rear / in 6 wheels trailer, plane or jet is last one on left
 * '5 = wheel_rr / in 6 wheels trailer, plane or jet is last one on right
 * '45 = 6 wheels trailer mid wheel left
 * '47 = 6 wheels trailer mid wheel right
 * ```
 * Hash: 0xEC6A202EE4960385 | ApiSet: undefined
 */
export declare function setVehicleTyreBurst(vehicle: number | Vehicle, index: number, onRim: boolean, p3: number): void;
/**
 * ```
 * Sets the tire smoke's color of this vehicle.
 * vehicle: The vehicle that is the target of this method.
 * r: The red level in the RGB color code.
 * g: The green level in the RGB color code.
 * b: The blue level in the RGB color code.
 * Note:
 * setting r,g,b to 0 will give the car independance day tyre smoke
 * ```
 * Hash: 0xB5BA80F839791C0F | ApiSet: undefined
 */
export declare function setVehicleTyreSmokeColor(vehicle: number | Vehicle, r: number, g: number, b: number): void;
/**
 * ```
 * Allows you to toggle bulletproof tires.
 * ```
 * Hash: 0xEB9DC3C7D8596C46 | ApiSet: undefined
 */
export declare function setVehicleTyresCanBurst(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x45A561A9421AB6AD | ApiSet: undefined
 */
export declare function setVehicleUnkDamageMultiplier(vehicle: number | Vehicle, multiplier: number): void;
/**
 * ```
 * NativeDB Introduced: v3095
 * ```
 * Enables or disables the use of the vehicle's horn button for activating the nitrous system.
 * Hash: 0x1980F68872CC2C3D | ApiSet: undefined
 */
export declare function setVehicleUseHornButtonForNitrous(vehicle: number | Vehicle, bToggle: boolean): void;
/**
 * Hash: 0x86B4B6212CB8B627 | ApiSet: undefined
 */
export declare function setVehicleWeaponsDisabled(vehicle: number | Vehicle, weaponSlot: number): void;
/**
 * Hash: 0xE023E8AC4EF7C117 | ApiSet: undefined
 */
export declare function setVehicleUseCutsceneWheelCompression(p0: number | Vehicle, p1: boolean, p2: boolean, p3: boolean): any;
/**
 * Sets a limited number of ammo for a particular vehicle weapon index on a vehicle.
 * Information about weapon indexes can be found in `handling.meta`.
 * In the example given below, `uWeaponHash` defines weapon hashes for the vehicle. Each `<Item>` corresponds to an index starting from `0`.
 * ```
 * <uWeaponHash>
 * <Item>VEHICLE_WEAPON_PLAYER_BUZZARD</Item>  <!-- Index: 0 -->
 * <Item>VEHICLE_WEAPON_SPACE_ROCKET</Item>    <!-- Index: 1 -->
 * <Item>VEHICLE_WEAPON_SEARCHLIGHT</Item>     <!-- Index: 2 -->
 * </uWeaponHash>
 * ```
 * Hash: 0x44CD1F493DB2A0A6 | ApiSet: undefined
 */
export declare function setVehicleWeaponRestrictedAmmo(vehicle: number | Vehicle, weaponIndex: number, ammoCount: number): void;
/**
 * Hash: 0x1D97D1E3A70A649F | ApiSet: undefined
 */
export declare function setVehicleUseAlternateHandling(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0x29B18B4FD460CA8F | ApiSet: undefined
 */
export declare function setVehicleWheelsCanBreak(vehicle: number | Vehicle, enabled: boolean): void;
/**
 * ```
 * vehicle must be a plane
 * ```
 * Hash: 0xCAC66558B944DA67 | ApiSet: undefined
 */
export declare function setVehicleUsesLargeRearRamp(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0xA37B9A517B133349 | ApiSet: undefined
 */
export declare function setVehicleWheelsCanBreakOffWhenBlowUp(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```cpp
 * enum WindowTints
 * {
 * WINDOWTINT_NONE = 0,
 * WINDOWTINT_PURE_BLACK = 1,
 * WINDOWTINT_DARKSMOKE = 2,
 * WINDOWTINT_LIGHTSMOKE = 3,
 * WINDOWTINT_STOCK = 4,
 * WINDOWTINT_LIMO = 5,
 * WINDOWTINT_GREEN = 6
 * };
 * ```
 * Hash: 0x57C51E6BAD752696 | ApiSet: undefined
 */
export declare function setVehicleWindowTint(vehicle: number | Vehicle, tint: number): void;
/**
 * Refer to [GET_VEHICLE_WHEEL_TYPE](#\_0xB3ED1BFB4BE636DC) for wheel types.
 * Hash: 0x487EB21CC7295BA1 | ApiSet: undefined
 */
export declare function setVehicleWheelType(vehicle: number | Vehicle, wheelType: number): void;
/**
 * Paint index goes from 0 to 12.
 * You can find the list of colors and ids here: [\_GET_VEHICLE_HEADLIGHTS_COLOUR](#\_0x3DFF319A831E0CDB)
 * Hash: 0xE41033B25D003A07 | ApiSet: undefined
 */
export declare function setVehicleXenonLightsColor(vehicle: number | Vehicle, color: number): void;
/**
 * Smashes a vehicles window. See eWindowId declared in [`IS_VEHICLE_WINDOW_INTACT`](#\_0x46E571A0E20D01F1).
 * Hash: 0x9E5B5E4D2CCD2259 | ApiSet: undefined
 */
export declare function smashVehicleWindow(vehicle: number | Vehicle, windowIndex: number): void;
/**
 * Hash: 0xC45C27EF50F36ADC | ApiSet: undefined
 */
export declare function setVehicleUsePlayerLightSettings(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * ```
 * AI abides by the provided driving style (e.g., stopping at red lights or waiting behind traffic) while executing the specificed vehicle recording.
 * 0x1F2E4E06DEA8992B is a related native that deals with the AI physics for such recordings.
 * ```
 * Hash: 0x29DE5FA52D00428C | ApiSet: undefined
 */
export declare function startPlaybackRecordedVehicleUsingAi(vehicle: number | Vehicle, recording: number, speed: number, drivingStyle: number): string;
/**
 * ```
 * Related to monster trucks in native scripts.
 * ```
 * ```
 * NativeDB Introduced: v1604
 * ```
 * Hash: 0x2970EAA18FD5E42F | ApiSet: undefined
 */
export declare function setVehicleWheelsDealDamage(vehicle: number | Vehicle, toggle: boolean): void;
/**
 * Hash: 0xAB8E2EDA0C0A5883 | ApiSet: undefined
 */
export declare function skipToEndAndStopPlaybackRecordedVehicle(vehicle: number | Vehicle): void;
/**
 * Hash: 0xB8FF7AB45305C345 | ApiSet: undefined
 */
export declare function startVehicleAlarm(vehicle: number | Vehicle): void;
/**
 * ```
 * SET_TIME_POSITION_IN_RECORDING can be emulated by: desired_time - GET_TIME_POSITION_IN_RECORDING(vehicle)
 * ```
 * Hash: 0x9438F7AD68771A20 | ApiSet: undefined
 */
export declare function skipTimeInPlaybackRecordedVehicle(vehicle: number | Vehicle, time: number): void;
/**
 * Hash: 0x0F87E938BDF29D66 | ApiSet: undefined
 */
export declare function stopAllGarageActivity(): void;
/**
 * `p3 is some flag related to 'trailers' (invokes CVehicle::GetTrailer).`
 * See [`REQUEST_VEHICLE_RECORDING`](#\_0xAF514CABE74CBF15).
 * Hash: 0x3F878F92B3A7A071 | ApiSet: undefined
 */
export declare function startPlaybackRecordedVehicle(vehicle: number | Vehicle, recording: number, script: string, p3: boolean): void;
/**
 * Enables or disables a vehicle mod by index (`modType`) for a given vehicle.
 * `eVehicleModType` enum, used for `modType` index can be found under [`SET_VEHICLE_MOD`](#\_0x6AF0636DDEDCB6DD).
 * Hash: 0x2A1F4F37F95BAD08 | ApiSet: undefined
 */
export declare function toggleVehicleMod(vehicle: number | Vehicle, modType: number, toggle: boolean): void;
/**
 * ```
 * in script hook .net
 * Vehicle v = ...;
 * Function.Call(Hash.TRACK_VEHICLE_VISIBILITY, v.Handle);
 * ```
 * Hash: 0x64473AEFDCF47DCA | ApiSet: undefined
 */
export declare function trackVehicleVisibility(vehicle: number | Vehicle): void;
/**
 * Hash: 0x374706271354CB18 | ApiSet: undefined
 */
export declare function stabiliseEntityAttachedToHeli(vehicle: number | Vehicle, entity: number | Entity, p2: number): void;
/**
 * Transforms the `stormberg` to its "road vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
 * Hash: 0x2A69FFD1B42BFF9E | ApiSet: undefined
 */
export declare function transformToCar(vehicle: number | Vehicle, instantly: boolean): void;
/**
 * ```
 * flags requires further research, e.g., 0x4/0x8 are related to the AI driving task and 0x20 is internally set and interacts with dynamic entity components.
 * time, often zero and capped at 500, is related to SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER
 * ```
 * Hash: 0x7D80FD645D4DA346 | ApiSet: undefined
 */
export declare function startPlaybackRecordedVehicleWithFlags(vehicle: number | Vehicle, recording: number, script: string, flags: number, time: number, drivingStyle: number): void;
/**
 * Sounds the horn for the specified vehicle. Note that if a player is in the vehicle, it will only sound briefly.
 * Hash: 0x9C8C6504B5B63D2C | ApiSet: undefined
 */
export declare function startVehicleHorn(vehicle: number | Vehicle, duration: number, mode: number | string, forever: boolean): void;
/**
 * ```
 * Stops CTaskBringVehicleToHalt
 * ```
 * Hash: 0x7C06330BFDDA182E | ApiSet: undefined
 */
export declare function stopBringVehicleToHalt(vehicle: number | Vehicle): void;
/**
 * Hash: 0x54833611C17ABDEA | ApiSet: undefined
 */
export declare function stopPlaybackRecordedVehicle(vehicle: number | Vehicle): void;
/**
 * Transforms the `stormberg` to its "water vehicle" variant. If the vehicle is already in that state then the vehicle transformation audio will still play, but the vehicle won't change at all.
 * Hash: 0xBE4C854FFDB6EEBE | ApiSet: undefined
 */
export declare function transformToSubmarine(vehicle: number | Vehicle, instantly: boolean): void;
/**
 * Toggles whether ambient trains can spawn on the specified track or not.
 * | trackId | File | Description |
 * | --- | --- | --- |
 * | 0 | `trains1.dat` | Main track around SA |
 * | 1 | `trains2.dat` | Davis Quartz Quarry branch |
 * | 2 | `trains3.dat` | Second track alongside live track along Roy Lewenstein Blv. |
 * | 3 | `trains4.dat` | Metro track circuit |
 * | 4 | `trains5.dat` | Branch in Mirror Park Railyard |
 * | 5 | `trains6.dat` | Branch in Mirror Park Railyard |
 * | 6 | `trains7.dat` | LS branch to Mirror Park Railyard |
 * | 7 | `trains8.dat` | Overground part of metro track along Forum Dr. |
 * | 8 | `trains9.dat` | Branch to Mirror Park Railyard |
 * | 9 | `trains10.dat` | Yankton train |
 * | 10 | `trains11.dat` | Part of metro track near mission row |
 * | 11 | `trains12.dat` | Yankton prologue mission train |
 * Tracks IDs `0` and `3` are the main tracks you find trains on during normal gameplay, all the others are used during missions and are not complete tracks.
 * Hash: 0xFD813BB7DB977F20 | ApiSet: undefined
 */
export declare function switchTrainTrack(trackId: number, state: boolean): void;
/**
 * Hash: 0x8879EE09268305D5 | ApiSet: undefined
 */
export declare function unpausePlaybackRecordedVehicle(vehicle: number | Vehicle): void;
export * from "@risingmedia/fivem-shared";
